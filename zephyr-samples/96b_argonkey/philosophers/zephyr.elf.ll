; ModuleID = 'build/96b_argonkey/philosophers/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, %struct.__thread_entry, %struct.k_thread*, [32 x i8], i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.__thread_entry = type { void (i8*, i8*, i8*)*, i8*, i8*, i8* }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q, %struct.k_thread* }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._priq_rb }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238508 to i8*), void (i8*)* inttoptr (i32 134237099 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238508 to i8*), void (i8*)* inttoptr (i32 134237079 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238508 to i8*), void (i8*)* inttoptr (i32 134237069 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238508 to i8*), void (i8*)* inttoptr (i32 134237169 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238508 to i8*), void (i8*)* inttoptr (i32 134237159 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238508 to i8*), void (i8*)* inttoptr (i32 134237149 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238508 to i8*), void (i8*)* inttoptr (i32 134237139 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238508 to i8*), void (i8*)* inttoptr (i32 134237129 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238508 to i8*), void (i8*)* inttoptr (i32 134237119 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238508 to i8*), void (i8*)* inttoptr (i32 134237109 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238508 to i8*), void (i8*)* inttoptr (i32 134237089 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@forks = internal unnamed_addr constant [6 x %struct.k_mutex*] [%struct.k_mutex* getelementptr inbounds ([6 x %struct.k_mutex], [6 x %struct.k_mutex]* @fork_objs, i32 0, i32 0), %struct.k_mutex* bitcast (i8* getelementptr (i8, i8* bitcast ([6 x %struct.k_mutex]* @fork_objs to i8*), i64 20) to %struct.k_mutex*), %struct.k_mutex* bitcast (i8* getelementptr (i8, i8* bitcast ([6 x %struct.k_mutex]* @fork_objs to i8*), i64 40) to %struct.k_mutex*), %struct.k_mutex* bitcast (i8* getelementptr (i8, i8* bitcast ([6 x %struct.k_mutex]* @fork_objs to i8*), i64 60) to %struct.k_mutex*), %struct.k_mutex* bitcast (i8* getelementptr (i8, i8* bitcast ([6 x %struct.k_mutex]* @fork_objs to i8*), i64 80) to %struct.k_mutex*), %struct.k_mutex* bitcast (i8* getelementptr (i8, i8* bitcast ([6 x %struct.k_mutex]* @fork_objs to i8*), i64 100) to %struct.k_mutex*)], align 4, !dbg !25
@.str = private unnamed_addr constant [23 x i8] c"       STARVING       \00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"   HOLDING ONE FORK   \00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"  EATING  [ %s%d ms ] \00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"   DROPPED ONE FORK   \00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c" THINKING [ %s%d ms ] \00", align 1
@fork_objs = dso_local global [6 x %struct.k_mutex] zeroinitializer, align 4, !dbg !114
@.str.5 = private unnamed_addr constant [26 x i8] c"Philosopher %d [%s:%s%d] \00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"P\00", align 1
@.str.8 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.9 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"\1B[%d;%dH\00", align 1
@.str.12 = private unnamed_addr constant [328 x i8] c"\1B[2J\1B[15;1HDemo Description\0A----------------\0AAn implementation of a solution to the Dining Philosophers\0Aproblem (a classic multi-thread synchronization problem).\0AThis particular implementation demonstrates the usage of multiple\0Apreemptible and cooperative threads of differing priorities, as\0Awell as %s %s and thread sleeping.\0A\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"dynamic\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"mutexes\00", align 1
@threads = internal global [6 x %struct.k_thread] zeroinitializer, align 8, !dbg !266
@stacks = internal global [6 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/phil_obj_abstract.h\22.0", align 64, !dbg !269
@.str.15 = private unnamed_addr constant [15 x i8] c"Philosopher %d\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !280
@.str.16 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.17 = private unnamed_addr constant [34 x i8] c"is_black(node) || is_black(child)\00", align 1
@.str.2.18 = private unnamed_addr constant [24 x i8] c"ZEPHYR_BASE/lib/os/rb.c\00", align 1
@.str.3.19 = private unnamed_addr constant [19 x i8] c"\09both nodes red?!\0A\00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [40 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (i32* @_kernel_thread_info_num_offsets to i8*), i8* bitcast ([14 x i32]* @_kernel_thread_info_offsets to i8*), i8* @_kernel_thread_info_size_t_size, i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_35 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_24 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_75 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_76 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_77 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_78 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_79 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_22 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_24 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_75 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_76 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_77 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_78 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_79 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_44 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !290
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !343
@_kernel_thread_info_offsets = dso_local global [14 x i32] [i32 1, i32 8, i32 44, i32 96, i32 112, i32 13, i32 12, i32 14, i32 80, i32 116, i32 168, i32 -1, i32 -1, i32 -1], section ".dbg_thread_info", align 4, !dbg !372
@_kernel_thread_info_num_offsets = dso_local global i32 14, section ".dbg_thread_info", align 4, !dbg !377
@_kernel_thread_info_size_t_size = dso_local global i8 4, section ".dbg_thread_info", align 1, !dbg !380
@.str.31 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.32 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.33 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.34 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.37 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.38 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.39 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.40 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.43 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.5.44 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.6.45 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.7.41 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.8.42 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !385
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !391
@.str.55 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.56 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.57 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.58 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.61 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.62 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !529
@.str.6.63 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.64 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.73, i32 0, i32 0), %struct.k_spinlock { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.74, i32 0, i32 0), %struct.k_spinlock { i32 285933602 } }], align 4, !dbg !565
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !570
@.str.73 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.74 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.77 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.78 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.79 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !590
@__devicehdl_dts_ord_35 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !783
@.str.4.75 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_35 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !744
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !727
@__device_dts_ord_35 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.75, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_35, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_35, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !700
@__init___device_dts_ord_35 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_35 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !716
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !746
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !760
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !762
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !764
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !766
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !768
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !770
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !772
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !774
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !776
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !778
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !788
@.str.80 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !815
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !910
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !899
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !951
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !808
@.str.89 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1017
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1297
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1267
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1253
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1197
@__devicehdl_dts_ord_24 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !806
@.str.1.92 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1299
@__devstate_dts_ord_24 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1271
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1269
@__init___device_dts_ord_24 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_24 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1211
@__devicehdl_dts_ord_22 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !804
@.str.2.93 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1312
@__devstate_dts_ord_22 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1275
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1273
@__init___device_dts_ord_22 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_22 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1218
@__devicehdl_dts_ord_75 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !802
@.str.3.94 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1314
@__devstate_dts_ord_75 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1279
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1277
@__init___device_dts_ord_75 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_75 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1227
@__devicehdl_dts_ord_76 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !800
@.str.4.95 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1316
@__devstate_dts_ord_76 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1283
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1281
@__init___device_dts_ord_76 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_76 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1233
@__devicehdl_dts_ord_77 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !798
@.str.5.96 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1318
@__devstate_dts_ord_77 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1287
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1285
@__init___device_dts_ord_77 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_77 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1239
@__devicehdl_dts_ord_78 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !796
@.str.6.97 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1320
@__devstate_dts_ord_78 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1291
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1289
@__init___device_dts_ord_78 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_78 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1245
@__devicehdl_dts_ord_79 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !794
@.str.7.98 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1322
@__devstate_dts_ord_79 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1295
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1293
@__init___device_dts_ord_79 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_79 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1251
@.str.8.90 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.31.91 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.32 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.33 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.34 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.35 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.36 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@__devicehdl_dts_ord_44 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !810
@.str.104 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_44 }, align 4, !dbg !1324
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1517
@__devstate_dts_ord_44 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1478
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1519
@__device_dts_ord_44 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.104, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_44, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_44, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1469
@__init___device_dts_ord_44 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_44 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1471
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1480
@__pinctrl_dev_config__device_dts_ord_44 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_44, i32 0, i32 0), i8 1 }, align 4, !dbg !1488
@__pinctrl_states__device_dts_ord_44 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_44, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1511
@__pinctrl_state_pins_0__device_dts_ord_44 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1514
@.str.1.105 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.106 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.3.107 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.4.108 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.80, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !883
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1541
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1650
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1652
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1648
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1643
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1617
@.str.115 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.116 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.117 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.118 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.119 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.120 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_24, %struct.device* @__device_dts_ord_22, %struct.device* @__device_dts_ord_75, %struct.device* @__device_dts_ord_76, %struct.device* @__device_dts_ord_77, %struct.device* @__device_dts_ord_78, %struct.device* @__device_dts_ord_79, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1654
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.89, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1195
@__device_dts_ord_24 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.92, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_24, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_24, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1209
@__device_dts_ord_22 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.93, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_22, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_22, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1216
@__device_dts_ord_75 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.94, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_75, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_75, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1225
@__device_dts_ord_76 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.95, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_76, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_76, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1231
@__device_dts_ord_77 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.96, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_77, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_77, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1237
@__device_dts_ord_78 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.97, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_78, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_78, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1243
@__device_dts_ord_79 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.98, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_79, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_79, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1249
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1744
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1785
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1788
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1795
@.str.154 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.155 = private unnamed_addr constant [29 x i8] c"reason != K_ERR_KERNEL_PANIC\00", align 1
@.str.2.156 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/fatal.c\00", align 1
@.str.3.157 = private unnamed_addr constant [53 x i8] c"\09Attempted to recover from a kernel panic condition\0A\00", align 1
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1802
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2039
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2047
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2054
@.str.4.165 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2059
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.5.169 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.170 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.171 = private unnamed_addr constant [23 x i8] c"user_cb != ((void *)0)\00", align 1
@.str.2.172 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.3.173 = private unnamed_addr constant [26 x i8] c"\09user_cb can not be NULL\0A\00", align 1
@z_thread_monitor_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2084
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4.184, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5.185, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.187, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8.188, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9.189, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10.183, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11.190, i32 0, i32 0)], align 4, !dbg !2105
@.str.4.184 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.5.185 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.6.186 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.7.187 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.8.188 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.9.189 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.10.183 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.11.190 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2219
@.str.12.182 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.13.195 = private unnamed_addr constant [128 x i8] c"((((prio)) == 40 && z_is_idle_thread_entry((entry))) || (((40 - 1) >= ((-29))) && ((prio)) >= ((-29)) && ((prio)) <= (40 - 1)))\00", align 1
@.str.14.196 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.15.200 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.16.201 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.17 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.18 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.19 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.20 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.21 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.22 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.23 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.208 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.209 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.210 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.217 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.218 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.2.219 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/mutex.c\00", align 1
@.str.3.220 = private unnamed_addr constant [37 x i8] c"\09mutexes cannot be used inside ISRs\0A\00", align 1
@lock.221 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2222
@.str.4.229 = private unnamed_addr constant [23 x i8] c"mutex->lock_count > 0U\00", align 1
@.str.5.222 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.6.223 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.7.224 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.8.225 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.9.226 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2341
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2459
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2462
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2464
@.str.232 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.251 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.239 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.261 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.273 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.240 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.268 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.241 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.279 = private unnamed_addr constant [134 x i8] c"((((prio)) == 40 && z_is_idle_thread_entry((((void *)0)))) || (((40 - 1) >= ((-29))) && ((prio)) >= ((-29)) && ((prio)) <= (40 - 1)))\00", align 1
@.str.9.280 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.289 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.290 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.291 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.292 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.233 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.234 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.235 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.236 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.237 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.238 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.256 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.269 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.270 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2049
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2052
@.str.23.284 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.298 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.299 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.300 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.301 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2466
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2496
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2501
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1890
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2499
@.str.4.302 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.303 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.304 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.308 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.309 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.329 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

@_kernel_openocd_offsets = dso_local alias i32, getelementptr inbounds ([14 x i32], [14 x i32]* @_kernel_thread_info_offsets, i32 0, i32 0)
@_kernel_openocd_num_offsets = dso_local alias i32, i32* @_kernel_thread_info_num_offsets
@_kernel_openocd_size_t_size = dso_local alias i8, i8* @_kernel_thread_info_size_t_size

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3101 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3105, !srcloc !3106
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3107, !srcloc !3108
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3109, !srcloc !3110
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3111, !srcloc !3112
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3113, !srcloc !3114
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3115, !srcloc !3116
  tail call void asm sideeffect ".globl\09___kernel_t_threads_OFFSET\0A\09.equ\09___kernel_t_threads_OFFSET,${0:B}\0A\09.type\09___kernel_t_threads_OFFSET,%object", "n"(i32 -45) #23, !dbg !3117, !srcloc !3118
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3119, !srcloc !3120
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3121, !srcloc !3122
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -49) #23, !dbg !3123, !srcloc !3124
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3125, !srcloc !3126
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3127, !srcloc !3128
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3129, !srcloc !3130
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3131, !srcloc !3132
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3133, !srcloc !3134
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3135, !srcloc !3136
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3137, !srcloc !3138
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3139, !srcloc !3140
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -169) #23, !dbg !3141, !srcloc !3142
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3143, !srcloc !3144
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3145, !srcloc !3146
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -153) #23, !dbg !3147, !srcloc !3148
  tail call void asm sideeffect ".globl\09___thread_t_next_thread_OFFSET\0A\09.equ\09___thread_t_next_thread_OFFSET,${0:B}\0A\09.type\09___thread_t_next_thread_OFFSET,%object", "n"(i32 -113) #23, !dbg !3149, !srcloc !3150
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -177) #23, !dbg !3151, !srcloc !3152
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3153, !srcloc !3154
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3155, !srcloc !3156
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3157, !srcloc !3158
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3159, !srcloc !3160
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3161, !srcloc !3162
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3163, !srcloc !3166
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3167, !srcloc !3168
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3169, !srcloc !3170
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3171, !srcloc !3172
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3173, !srcloc !3174
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3175, !srcloc !3176
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3177, !srcloc !3178
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3179, !srcloc !3180
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3181, !srcloc !3182
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3183, !srcloc !3184
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3185, !srcloc !3186
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3187, !srcloc !3188
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3189, !srcloc !3190
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3191, !srcloc !3192
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3193, !srcloc !3194
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3195, !srcloc !3196
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3197, !srcloc !3198
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3199, !srcloc !3200
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3201, !srcloc !3202
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3203, !srcloc !3204
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3205, !srcloc !3206
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3207, !srcloc !3208
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3209, !srcloc !3210
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3211, !srcloc !3212
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -177) #23, !dbg !3213, !srcloc !3214
  ret void, !dbg !3215
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @philosopher(i8* noundef %0, i8* nocapture readnone %1, i8* nocapture readnone %2) #2 !dbg !3218 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3221, metadata !DIExpression()), !dbg !3229
  call void @llvm.dbg.value(metadata i8* undef, metadata !3222, metadata !DIExpression()), !dbg !3229
  call void @llvm.dbg.value(metadata i8* undef, metadata !3223, metadata !DIExpression()), !dbg !3229
  %4 = ptrtoint i8* %0 to i32, !dbg !3230
  call void @llvm.dbg.value(metadata i32 %4, metadata !3226, metadata !DIExpression()), !dbg !3229
  %5 = tail call fastcc i32 @is_last_philosopher(i32 noundef %4) #24, !dbg !3231
  %6 = icmp eq i32 %5, 0, !dbg !3231
  br i1 %6, label %7, label %11, !dbg !3233

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.k_mutex*], [6 x %struct.k_mutex*]* @forks, i32 0, i32 %4, !dbg !3234
  %9 = load %struct.k_mutex*, %struct.k_mutex** %8, align 4, !dbg !3234
  call void @llvm.dbg.value(metadata %struct.k_mutex* %9, metadata !3224, metadata !DIExpression()), !dbg !3229
  %10 = add nsw i32 %4, 1, !dbg !3236
  call void @llvm.dbg.value(metadata %struct.k_mutex* undef, metadata !3225, metadata !DIExpression()), !dbg !3229
  br label %11

11:                                               ; preds = %3, %7
  %12 = phi i32 [ %10, %7 ], [ %4, %3 ]
  %13 = phi %struct.k_mutex* [ %9, %7 ], [ getelementptr inbounds ([6 x %struct.k_mutex], [6 x %struct.k_mutex]* @fork_objs, i32 0, i32 0), %3 ], !dbg !3237
  %14 = getelementptr inbounds [6 x %struct.k_mutex*], [6 x %struct.k_mutex*]* @forks, i32 0, i32 %12, !dbg !3237
  %15 = load %struct.k_mutex*, %struct.k_mutex** %14, align 4, !dbg !3237
  call void @llvm.dbg.value(metadata %struct.k_mutex* %13, metadata !3224, metadata !DIExpression()), !dbg !3229
  call void @llvm.dbg.value(metadata %struct.k_mutex* %15, metadata !3225, metadata !DIExpression()), !dbg !3229
  br label %16, !dbg !3238

16:                                               ; preds = %16, %11
  tail call fastcc void @print_phil_state(i32 noundef %4, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i32 0, i32 0), i32 noundef 0) #24, !dbg !3239
  tail call fastcc void @k_mutex_lock(%struct.k_mutex* noundef %13) #24, !dbg !3240
  tail call fastcc void @print_phil_state(i32 noundef %4, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i32 0, i32 0), i32 noundef 0) #24, !dbg !3241
  tail call fastcc void @k_mutex_lock(%struct.k_mutex* noundef %15) #24, !dbg !3242
  %17 = tail call fastcc i32 @get_random_delay(i32 noundef %4) #24, !dbg !3243
  call void @llvm.dbg.value(metadata i32 %17, metadata !3227, metadata !DIExpression()), !dbg !3244
  tail call fastcc void @print_phil_state(i32 noundef %4, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i32 0, i32 0), i32 noundef %17) #24, !dbg !3245
  tail call fastcc void @k_msleep(i32 noundef %17) #24, !dbg !3246
  tail call fastcc void @k_mutex_unlock(%struct.k_mutex* noundef %15) #24, !dbg !3247
  tail call fastcc void @print_phil_state(i32 noundef %4, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i32 0, i32 0), i32 noundef 0) #24, !dbg !3248
  tail call fastcc void @k_mutex_unlock(%struct.k_mutex* noundef %13) #24, !dbg !3249
  %18 = tail call fastcc i32 @get_random_delay(i32 noundef %4) #24, !dbg !3250
  call void @llvm.dbg.value(metadata i32 %18, metadata !3227, metadata !DIExpression()), !dbg !3244
  tail call fastcc void @print_phil_state(i32 noundef %4, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0), i32 noundef %18) #24, !dbg !3251
  tail call fastcc void @k_msleep(i32 noundef %18) #24, !dbg !3252
  br label %16, !dbg !3238, !llvm.loop !3253
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @is_last_philosopher(i32 noundef %0) unnamed_addr #4 !dbg !3255 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3257, metadata !DIExpression()), !dbg !3258
  %2 = icmp eq i32 %0, 5, !dbg !3259
  %3 = zext i1 %2 to i32, !dbg !3259
  ret i32 %3, !dbg !3260
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @print_phil_state(i32 noundef %0, i8* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !3261 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3265, metadata !DIExpression()), !dbg !3269
  call void @llvm.dbg.value(metadata i8* %1, metadata !3266, metadata !DIExpression()), !dbg !3269
  call void @llvm.dbg.value(metadata i32 %2, metadata !3267, metadata !DIExpression()), !dbg !3269
  %4 = tail call fastcc %struct.k_thread* @k_current_get() #25, !dbg !3270
  %5 = tail call fastcc i32 @k_thread_priority_get(%struct.k_thread* noundef %4) #24, !dbg !3271
  call void @llvm.dbg.value(metadata i32 %5, metadata !3268, metadata !DIExpression()), !dbg !3269
  tail call fastcc void @set_phil_state_pos(i32 noundef %0) #24, !dbg !3272
  %6 = icmp slt i32 %5, 0, !dbg !3273
  %7 = select i1 %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i32 0, i32 0), !dbg !3274
  %8 = select i1 %6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), !dbg !3275
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i32 0, i32 0), i32 noundef %0, i8* noundef %7, i8* noundef %8, i32 noundef %5) #26, !dbg !3276
  %9 = icmp eq i32 %2, 0, !dbg !3277
  br i1 %9, label %11, label %10, !dbg !3279

10:                                               ; preds = %3
  tail call void (i8*, ...) @printk(i8* noundef %1, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i32 noundef %2) #26, !dbg !3280
  br label %12, !dbg !3282

11:                                               ; preds = %3
  tail call void (i8*, ...) @printk(i8* noundef %1, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i32 0, i32 0)) #26, !dbg !3283
  br label %12

12:                                               ; preds = %11, %10
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0)) #26, !dbg !3285
  ret void, !dbg !3286
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_lock(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !3287 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3297, metadata !DIExpression()), !dbg !3298
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !3296, metadata !DIExpression()), !dbg !3298
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3299, !srcloc !3301
  %2 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] [i64 -1]) #26, !dbg !3302
  ret void, !dbg !3303
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_random_delay(i32 noundef %0) unnamed_addr #1 !dbg !3304 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3308, metadata !DIExpression()), !dbg !3312
  call void @llvm.dbg.value(metadata i32 25, metadata !3309, metadata !DIExpression()), !dbg !3312
  %2 = tail call fastcc i32 @k_uptime_get_32() #24, !dbg !3313
  %3 = udiv i32 %2, 100, !dbg !3314
  %4 = add nsw i32 %0, 1, !dbg !3315
  %5 = mul i32 %3, %4, !dbg !3316
  %6 = and i32 %5, 31, !dbg !3317
  call void @llvm.dbg.value(metadata i32 %6, metadata !3310, metadata !DIExpression()), !dbg !3312
  %7 = mul nuw nsw i32 %6, 25, !dbg !3318
  %8 = add nuw nsw i32 %7, 25, !dbg !3318
  call void @llvm.dbg.value(metadata i32 %8, metadata !3311, metadata !DIExpression()), !dbg !3312
  ret i32 %8, !dbg !3319
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep(i32 noundef %0) unnamed_addr #1 !dbg !3320 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3324, metadata !DIExpression()), !dbg !3325
  %2 = zext i32 %0 to i64
  %3 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %2) #24, !dbg !3326
  %4 = insertvalue [1 x i64] poison, i64 %3, 0, !dbg !3327
  tail call fastcc void @k_sleep([1 x i64] %4) #24, !dbg !3327
  ret void, !dbg !3328
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_unlock(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !3329 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !3333, metadata !DIExpression()), !dbg !3334
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3335, !srcloc !3337
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #26, !dbg !3338
  ret void, !dbg !3339
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !3340 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3345, metadata !DIExpression()), !dbg !3346
  call void @llvm.dbg.value(metadata i64 %0, metadata !3347, metadata !DIExpression()), !dbg !3364
  call void @llvm.dbg.value(metadata i32 1000, metadata !3352, metadata !DIExpression()), !dbg !3364
  call void @llvm.dbg.value(metadata i32 10000, metadata !3353, metadata !DIExpression()), !dbg !3364
  call void @llvm.dbg.value(metadata i8 1, metadata !3354, metadata !DIExpression()), !dbg !3364
  call void @llvm.dbg.value(metadata i8 0, metadata !3355, metadata !DIExpression()), !dbg !3364
  call void @llvm.dbg.value(metadata i1 true, metadata !3356, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3364
  call void @llvm.dbg.value(metadata i8 0, metadata !3357, metadata !DIExpression()), !dbg !3364
  call void @llvm.dbg.value(metadata i1 true, metadata !3358, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3364
  call void @llvm.dbg.value(metadata i1 false, metadata !3359, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3364
  call void @llvm.dbg.value(metadata i64 0, metadata !3360, metadata !DIExpression()), !dbg !3364
  call void @llvm.dbg.value(metadata i64 0, metadata !3360, metadata !DIExpression()), !dbg !3364
  %2 = mul i64 %0, 10, !dbg !3366
  ret i64 %2, !dbg !3372
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3373 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3377, metadata !DIExpression()), !dbg !3378
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3379, !srcloc !3381
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #26, !dbg !3382
  ret void, !dbg !3383
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_uptime_get_32() unnamed_addr #1 !dbg !3384 {
  %1 = tail call fastcc i64 @k_uptime_get() #24, !dbg !3387
  %2 = trunc i64 %1 to i32, !dbg !3388
  ret i32 %2, !dbg !3389
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_get() unnamed_addr #1 !dbg !3390 {
  %1 = tail call fastcc i64 @k_uptime_ticks() #24, !dbg !3393
  %2 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %1) #24, !dbg !3394
  ret i64 %2, !dbg !3395
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_ticks() unnamed_addr #1 !dbg !3396 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3397, !srcloc !3399
  %1 = tail call i64 @z_impl_k_uptime_ticks() #26, !dbg !3400
  ret i64 %1, !dbg !3401
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !3402 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3404, metadata !DIExpression()), !dbg !3405
  call void @llvm.dbg.value(metadata i64 %0, metadata !3347, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata i32 10000, metadata !3352, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata i32 1000, metadata !3353, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata i8 1, metadata !3354, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata i8 0, metadata !3355, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata i1 false, metadata !3356, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3406
  call void @llvm.dbg.value(metadata i8 0, metadata !3357, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata i1 false, metadata !3358, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3406
  call void @llvm.dbg.value(metadata i1 true, metadata !3359, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3406
  call void @llvm.dbg.value(metadata i64 0, metadata !3360, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata i64 0, metadata !3360, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata !DIArgList(i64 %0, i64 0), metadata !3347, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3406
  call void @llvm.dbg.value(metadata i64 %0, metadata !3347, metadata !DIExpression()), !dbg !3406
  %2 = udiv i64 %0, 10, !dbg !3408
  ret i64 %2, !dbg !3412
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #5 !dbg !3413 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #25, !dbg !3417
  ret %struct.k_thread* %1, !dbg !3418
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_thread_priority_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3419 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3423, metadata !DIExpression()), !dbg !3424
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3425, !srcloc !3427
  %2 = tail call i32 @z_impl_k_thread_priority_get(%struct.k_thread* noundef %0) #26, !dbg !3428
  ret i32 %2, !dbg !3429
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_phil_state_pos(i32 noundef %0) unnamed_addr #1 !dbg !3430 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3434, metadata !DIExpression()), !dbg !3435
  %2 = add nsw i32 %0, 1, !dbg !3436
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i32 0, i32 0), i32 noundef %2, i32 noundef 1) #26, !dbg !3437
  ret void, !dbg !3438
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #5 !dbg !3439 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3440, !srcloc !3442
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !3443
  ret %struct.k_thread* %1, !dbg !3444
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3445 {
  tail call fastcc void @display_demo_description() #24, !dbg !3446
  tail call void @k_sched_time_slice_set(i32 noundef 5000, i32 noundef 0) #26, !dbg !3447
  tail call fastcc void @init_objects() #24, !dbg !3448
  tail call fastcc void @start_threads() #24, !dbg !3449
  ret void, !dbg !3450
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @display_demo_description() unnamed_addr #1 !dbg !3451 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([328 x i8], [328 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i32 0, i32 0)) #26, !dbg !3452
  ret void, !dbg !3453
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_objects() unnamed_addr #1 !dbg !3454 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3456, metadata !DIExpression()), !dbg !3458
  br label %2, !dbg !3459

1:                                                ; preds = %2
  ret void, !dbg !3460

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %6, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !3456, metadata !DIExpression()), !dbg !3458
  %4 = getelementptr inbounds [6 x %struct.k_mutex*], [6 x %struct.k_mutex*]* @forks, i32 0, i32 %3, !dbg !3461
  %5 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !3461
  tail call fastcc void @k_mutex_init(%struct.k_mutex* noundef %5) #24, !dbg !3461
  %6 = add nuw nsw i32 %3, 1, !dbg !3464
  call void @llvm.dbg.value(metadata i32 %6, metadata !3456, metadata !DIExpression()), !dbg !3458
  %7 = icmp eq i32 %6, 6, !dbg !3465
  br i1 %7, label %1, label %2, !dbg !3459, !llvm.loop !3466
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @start_threads() unnamed_addr #1 !dbg !3468 {
  %1 = alloca [32 x i8], align 1
  call void @llvm.dbg.value(metadata i32 0, metadata !3470, metadata !DIExpression()), !dbg !3476
  %2 = getelementptr inbounds [32 x i8], [32 x i8]* %1, i32 0, i32 0
  br label %4, !dbg !3477

3:                                                ; preds = %4
  ret void, !dbg !3478

4:                                                ; preds = %0, %4
  %5 = phi i32 [ 0, %0 ], [ %11, %4 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3470, metadata !DIExpression()), !dbg !3476
  %6 = call fastcc i32 @new_prio(i32 noundef %5) #24, !dbg !3479, !range !3480
  call void @llvm.dbg.value(metadata i32 %6, metadata !3472, metadata !DIExpression()), !dbg !3481
  %7 = getelementptr inbounds [6 x %struct.k_thread], [6 x %struct.k_thread]* @threads, i32 0, i32 %5, !dbg !3482
  %8 = getelementptr inbounds [6 x [2112 x %struct.z_thread_stack_element]], [6 x [2112 x %struct.z_thread_stack_element]]* @stacks, i32 0, i32 %5, i32 0, !dbg !3483
  %9 = inttoptr i32 %5 to i8*, !dbg !3484
  call fastcc void @k_thread_create(%struct.k_thread* noundef nonnull %7, %struct.z_thread_stack_element* noundef nonnull %8, i8* noundef %9, i32 noundef %6) #24, !dbg !3485
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #23, !dbg !3486
  call void @llvm.dbg.declare(metadata [32 x i8]* %1, metadata !3475, metadata !DIExpression()), !dbg !3487
  %10 = call i32 (i8*, i32, i8*, ...) @snprintk(i8* noundef nonnull %2, i32 noundef 32, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i32 0, i32 0), i32 noundef %5) #26, !dbg !3488
  call fastcc void @k_thread_name_set(%struct.k_thread* noundef nonnull %7, i8* noundef nonnull %2) #24, !dbg !3489
  call fastcc void @k_object_access_grant() #24, !dbg !3490
  %11 = add nuw nsw i32 %5, 1, !dbg !3491
  call fastcc void @k_object_access_grant() #24, !dbg !3492
  call fastcc void @k_thread_start(%struct.k_thread* noundef nonnull %7) #24, !dbg !3493
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #23, !dbg !3494
  call void @llvm.dbg.value(metadata i32 %11, metadata !3470, metadata !DIExpression()), !dbg !3476
  %12 = icmp eq i32 %11, 6, !dbg !3495
  br i1 %12, label %3, label %4, !dbg !3477, !llvm.loop !3496
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio(i32 noundef %0) unnamed_addr #4 !dbg !3498 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3500, metadata !DIExpression()), !dbg !3501
  %2 = sub i32 3, %0, !dbg !3502
  ret i32 %2, !dbg !3503
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !3504 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3519, metadata !DIExpression()), !dbg !3520
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3510, metadata !DIExpression()), !dbg !3520
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !3511, metadata !DIExpression()), !dbg !3520
  call void @llvm.dbg.value(metadata i32 2048, metadata !3512, metadata !DIExpression()), !dbg !3520
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @philosopher, metadata !3513, metadata !DIExpression()), !dbg !3520
  call void @llvm.dbg.value(metadata i8* %2, metadata !3514, metadata !DIExpression()), !dbg !3520
  call void @llvm.dbg.value(metadata i8* null, metadata !3515, metadata !DIExpression()), !dbg !3520
  call void @llvm.dbg.value(metadata i8* null, metadata !3516, metadata !DIExpression()), !dbg !3520
  call void @llvm.dbg.value(metadata i32 %3, metadata !3517, metadata !DIExpression()), !dbg !3520
  call void @llvm.dbg.value(metadata i32 4, metadata !3518, metadata !DIExpression()), !dbg !3520
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3521, !srcloc !3523
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef 2048, void (i8*, i8*, i8*)* noundef nonnull @philosopher, i8* noundef %2, i8* noundef null, i8* noundef null, i32 noundef %3, i32 noundef 4, [1 x i64] [i64 -1]) #26, !dbg !3524
  ret void, !dbg !3525
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !3526 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3530, metadata !DIExpression()), !dbg !3532
  call void @llvm.dbg.value(metadata i8* %1, metadata !3531, metadata !DIExpression()), !dbg !3532
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3533, !srcloc !3535
  %3 = tail call i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) #26, !dbg !3536
  ret void, !dbg !3537
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_object_access_grant() unnamed_addr #1 !dbg !3538 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !3543, metadata !DIExpression()), !dbg !3545
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !3544, metadata !DIExpression()), !dbg !3545
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3546, !srcloc !3548
  ret void, !dbg !3549
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3550 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3554, metadata !DIExpression()), !dbg !3555
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3556, !srcloc !3558
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !3559
  ret void, !dbg !3560
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_init(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !3561 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !3563, metadata !DIExpression()), !dbg !3564
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3565, !srcloc !3567
  %2 = tail call i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) #26, !dbg !3568
  ret void, !dbg !3569
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3570 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3572, metadata !DIExpression()), !dbg !3573
  ret i32 0, !dbg !3574
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !3575 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3579, metadata !DIExpression()), !dbg !3580
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3581
  ret void, !dbg !3582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !3583 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3586
  ret i8* %1, !dbg !3587
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3588 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3600, metadata !DIExpression()), !dbg !3611
  call void @llvm.dbg.value(metadata i8* %0, metadata !3599, metadata !DIExpression()), !dbg !3611
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !3612
  ret void, !dbg !3614
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3615 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3619, metadata !DIExpression()), !dbg !3621
  call void @llvm.dbg.value(metadata i8* %1, metadata !3620, metadata !DIExpression()), !dbg !3621
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3622
  %4 = tail call i32 %3(i32 noundef %0) #26, !dbg !3622
  ret i32 %4, !dbg !3623
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3624 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3636, metadata !DIExpression()), !dbg !3637
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3633, metadata !DIExpression()), !dbg !3637
  call void @llvm.dbg.value(metadata i8* %1, metadata !3634, metadata !DIExpression()), !dbg !3637
  call void @llvm.dbg.value(metadata i8* %2, metadata !3635, metadata !DIExpression()), !dbg !3637
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #26, !dbg !3638
  ret void, !dbg !3639
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3640 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3644, metadata !DIExpression()), !dbg !3647
  call void @llvm.dbg.value(metadata i32 %1, metadata !3645, metadata !DIExpression()), !dbg !3647
  call void @llvm.dbg.value(metadata i32 0, metadata !3646, metadata !DIExpression()), !dbg !3647
  %3 = icmp eq i32 %1, 0, !dbg !3648
  br i1 %3, label %13, label %4, !dbg !3651

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3646, metadata !DIExpression()), !dbg !3647
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3652
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3654
  %8 = load i8, i8* %7, align 1, !dbg !3654
  %9 = zext i8 %8 to i32, !dbg !3654
  %10 = tail call i32 %6(i32 noundef %9) #26, !dbg !3652
  %11 = add nuw i32 %5, 1, !dbg !3655
  call void @llvm.dbg.value(metadata i32 %11, metadata !3646, metadata !DIExpression()), !dbg !3647
  %12 = icmp eq i32 %11, %1, !dbg !3648
  br i1 %12, label %13, label %4, !dbg !3651, !llvm.loop !3656

13:                                               ; preds = %4, %2
  ret void, !dbg !3658
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3659 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3663, metadata !DIExpression()), !dbg !3665
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3666
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3666
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3664, metadata !DIExpression()), !dbg !3667
  call void @llvm.va_start(i8* nonnull %3), !dbg !3668
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3669
  %5 = load i32, i32* %4, align 4, !dbg !3669
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3669
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !3669
  call void @llvm.va_end(i8* nonnull %3), !dbg !3670
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3671
  ret void, !dbg !3671
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #9

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #9

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3672 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3676, metadata !DIExpression()), !dbg !3681
  call void @llvm.dbg.value(metadata i32 %1, metadata !3677, metadata !DIExpression()), !dbg !3681
  call void @llvm.dbg.value(metadata i8* %2, metadata !3678, metadata !DIExpression()), !dbg !3681
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3682
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3682
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3679, metadata !DIExpression()), !dbg !3683
  call void @llvm.va_start(i8* nonnull %5), !dbg !3684
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3685
  %7 = load i32, i32* %6, align 4, !dbg !3685
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3685
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !3685
  call void @llvm.dbg.value(metadata i32 %9, metadata !3680, metadata !DIExpression()), !dbg !3681
  call void @llvm.va_end(i8* nonnull %5), !dbg !3686
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3687
  ret i32 %9, !dbg !3688
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3689 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3696, metadata !DIExpression()), !dbg !3703
  call void @llvm.dbg.value(metadata i8* %0, metadata !3693, metadata !DIExpression()), !dbg !3703
  call void @llvm.dbg.value(metadata i32 %1, metadata !3694, metadata !DIExpression()), !dbg !3703
  call void @llvm.dbg.value(metadata i8* %2, metadata !3695, metadata !DIExpression()), !dbg !3703
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3704
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3704
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3697, metadata !DIExpression()), !dbg !3705
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3706
  store i8* %0, i8** %7, align 4, !dbg !3706
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3706
  store i32 %1, i32* %8, align 4, !dbg !3706
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3706
  store i32 0, i32* %9, align 4, !dbg !3706
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !3707
  %10 = load i32, i32* %9, align 4, !dbg !3708
  %11 = load i32, i32* %8, align 4, !dbg !3710
  %12 = icmp slt i32 %10, %11, !dbg !3711
  br i1 %12, label %13, label %15, !dbg !3712

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3713
  store i8 0, i8* %14, align 1, !dbg !3715
  br label %15, !dbg !3716

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3717
  ret i32 %10, !dbg !3718
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #10 !dbg !3719 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3724, metadata !DIExpression()), !dbg !3726
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3725, metadata !DIExpression()), !dbg !3726
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3727
  %4 = load i8*, i8** %3, align 4, !dbg !3727
  %5 = icmp eq i8* %4, null, !dbg !3729
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3730
  br i1 %5, label %12, label %8, !dbg !3731

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3732
  %10 = load i32, i32* %9, align 4, !dbg !3732
  %11 = icmp slt i32 %7, %10, !dbg !3733
  br i1 %11, label %15, label %12, !dbg !3734

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3735
  %14 = add nsw i32 %7, 1, !dbg !3737
  store i32 %14, i32* %13, align 4, !dbg !3737
  br label %25, !dbg !3738

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3739
  %17 = icmp eq i32 %7, %16, !dbg !3741
  br i1 %17, label %18, label %21, !dbg !3742

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3743
  store i32 %19, i32* %6, align 4, !dbg !3743
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3745
  store i8 0, i8* %20, align 1, !dbg !3746
  br label %25, !dbg !3747

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3748
  %23 = add nsw i32 %7, 1, !dbg !3750
  store i32 %23, i32* %6, align 4, !dbg !3750
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3751
  store i8 %22, i8* %24, align 1, !dbg !3752
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3753
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #11 !dbg !3754 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !3768, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i8 %1, metadata !3769, metadata !DIExpression()), !dbg !3771
  %3 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !3772
  %4 = load %struct.rbnode*, %struct.rbnode** %3, align 4, !dbg !3772
  call void @llvm.dbg.value(metadata %struct.rbnode* %4, metadata !3770, metadata !DIExpression()), !dbg !3771
  br label %5, !dbg !3774

5:                                                ; preds = %8, %2
  %6 = phi %struct.rbnode* [ %4, %2 ], [ %9, %8 ], !dbg !3775
  call void @llvm.dbg.value(metadata %struct.rbnode* %6, metadata !3770, metadata !DIExpression()), !dbg !3771
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !3776
  br i1 %7, label %11, label %8, !dbg !3778

8:                                                ; preds = %5
  %9 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %6, i8 noundef zeroext %1) #24, !dbg !3779
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !3780
  br i1 %10, label %11, label %5, !dbg !3781, !llvm.loop !3782

11:                                               ; preds = %5, %8
  ret %struct.rbnode* %6, !dbg !3784
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.rbnode* @get_child(%struct.rbnode* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #8 !dbg !3785 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !3789, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8 %1, metadata !3790, metadata !DIExpression()), !dbg !3792
  %3 = icmp eq i8 %1, 0, !dbg !3793
  br i1 %3, label %7, label %4, !dbg !3795

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 0, i32 0, i32 1, !dbg !3796
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !3796
  br label %13, !dbg !3798

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 0, i32 0, i32 0, !dbg !3799
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !3799
  %10 = ptrtoint %struct.rbnode* %9 to i32, !dbg !3800
  call void @llvm.dbg.value(metadata i32 %10, metadata !3791, metadata !DIExpression()), !dbg !3792
  %11 = and i32 %10, -2, !dbg !3801
  call void @llvm.dbg.value(metadata i32 %11, metadata !3791, metadata !DIExpression()), !dbg !3792
  %12 = inttoptr i32 %11 to %struct.rbnode*, !dbg !3802
  br label %13

13:                                               ; preds = %7, %4
  %14 = phi %struct.rbnode* [ %6, %4 ], [ %12, %7 ], !dbg !3792
  ret %struct.rbnode* %14, !dbg !3803
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rb_insert(%struct.rbtree* nocapture noundef %0, %struct.rbnode* noundef %1) local_unnamed_addr #1 !dbg !3804 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !3808, metadata !DIExpression()), !dbg !3818
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !3809, metadata !DIExpression()), !dbg !3818
  tail call fastcc void @set_child(%struct.rbnode* noundef %1, i8 noundef zeroext 0, i8* noundef null) #24, !dbg !3819
  tail call fastcc void @set_child(%struct.rbnode* noundef %1, i8 noundef zeroext 1, i8* noundef null) #24, !dbg !3820
  %3 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !3821
  %4 = load %struct.rbnode*, %struct.rbnode** %3, align 4, !dbg !3821
  %5 = icmp eq %struct.rbnode* %4, null, !dbg !3823
  br i1 %5, label %6, label %8, !dbg !3824

6:                                                ; preds = %2
  store %struct.rbnode* %1, %struct.rbnode** %3, align 4, !dbg !3825
  %7 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 2, !dbg !3827
  store i32 1, i32* %7, align 4, !dbg !3828
  tail call fastcc void @set_color(%struct.rbnode* noundef %1, i32 noundef 1) #24, !dbg !3829
  br label %31, !dbg !3830

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 2, !dbg !3831
  %10 = load i32, i32* %9, align 4, !dbg !3831
  %11 = add nsw i32 %10, 1, !dbg !3832
  %12 = tail call i8* @llvm.stacksave(), !dbg !3833
  %13 = alloca %struct.rbnode*, i32 %11, align 4, !dbg !3833
  call void @llvm.dbg.value(metadata i32 %11, metadata !3810, metadata !DIExpression()), !dbg !3818
  call void @llvm.dbg.declare(metadata %struct.rbnode** %13, metadata !3811, metadata !DIExpression()), !dbg !3834
  %14 = call fastcc i32 @find_and_stack(%struct.rbtree* noundef nonnull %0, %struct.rbnode* noundef %1, %struct.rbnode** noundef nonnull %13) #24, !dbg !3835
  call void @llvm.dbg.value(metadata i32 %14, metadata !3815, metadata !DIExpression()), !dbg !3818
  %15 = add nsw i32 %14, -1, !dbg !3836
  %16 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %13, i32 %15, !dbg !3837
  %17 = load %struct.rbnode*, %struct.rbnode** %16, align 4, !dbg !3837
  call void @llvm.dbg.value(metadata %struct.rbnode* %17, metadata !3816, metadata !DIExpression()), !dbg !3818
  %18 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 1, !dbg !3838
  %19 = load i1 (%struct.rbnode*, %struct.rbnode*)*, i1 (%struct.rbnode*, %struct.rbnode*)** %18, align 4, !dbg !3838
  %20 = tail call zeroext i1 %19(%struct.rbnode* noundef %1, %struct.rbnode* noundef %17) #26, !dbg !3839
  %21 = xor i1 %20, true, !dbg !3839
  %22 = zext i1 %21 to i8, !dbg !3839
  call void @llvm.dbg.value(metadata i8 %22, metadata !3817, metadata !DIExpression()), !dbg !3818
  %23 = bitcast %struct.rbnode* %1 to i8*, !dbg !3840
  tail call fastcc void @set_child(%struct.rbnode* noundef %17, i8 noundef zeroext %22, i8* noundef %23) #24, !dbg !3841
  tail call fastcc void @set_color(%struct.rbnode* noundef %1, i32 noundef 0) #24, !dbg !3842
  %24 = add nsw i32 %14, 1, !dbg !3843
  call void @llvm.dbg.value(metadata i32 %24, metadata !3815, metadata !DIExpression()), !dbg !3818
  %25 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %13, i32 %14, !dbg !3844
  store %struct.rbnode* %1, %struct.rbnode** %25, align 4, !dbg !3845
  call fastcc void @fix_extra_red(%struct.rbnode** noundef nonnull %13, i32 noundef %24) #24, !dbg !3846
  %26 = load i32, i32* %9, align 4, !dbg !3847
  %27 = icmp slt i32 %14, %26, !dbg !3849
  br i1 %27, label %29, label %28, !dbg !3850

28:                                               ; preds = %8
  store i32 %24, i32* %9, align 4, !dbg !3851
  br label %29, !dbg !3853

29:                                               ; preds = %28, %8
  %30 = load %struct.rbnode*, %struct.rbnode** %13, align 4, !dbg !3854
  store %struct.rbnode* %30, %struct.rbnode** %3, align 4, !dbg !3855
  tail call void @llvm.stackrestore(i8* %12), !dbg !3856
  br label %31

31:                                               ; preds = %29, %6
  ret void, !dbg !3856
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_child(%struct.rbnode* nocapture noundef %0, i8 noundef zeroext %1, i8* noundef %2) unnamed_addr #10 !dbg !3857 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !3861, metadata !DIExpression()), !dbg !3868
  call void @llvm.dbg.value(metadata i8 %1, metadata !3862, metadata !DIExpression()), !dbg !3868
  call void @llvm.dbg.value(metadata i8* %2, metadata !3863, metadata !DIExpression()), !dbg !3868
  %4 = icmp eq i8 %1, 0, !dbg !3869
  br i1 %4, label %8, label %5, !dbg !3870

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 0, i32 0, i32 1, !dbg !3871
  %7 = bitcast %struct.rbnode** %6 to i8**, !dbg !3873
  store i8* %2, i8** %7, align 4, !dbg !3873
  br label %16, !dbg !3874

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 0, i32 0, i32 0, !dbg !3875
  %10 = load %struct.rbnode*, %struct.rbnode** %9, align 4, !dbg !3875
  %11 = ptrtoint %struct.rbnode* %10 to i32, !dbg !3876
  call void @llvm.dbg.value(metadata i32 %11, metadata !3864, metadata !DIExpression()), !dbg !3877
  %12 = ptrtoint i8* %2 to i32, !dbg !3878
  call void @llvm.dbg.value(metadata i32 %12, metadata !3867, metadata !DIExpression()), !dbg !3877
  %13 = and i32 %11, 1, !dbg !3879
  %14 = or i32 %13, %12, !dbg !3880
  %15 = inttoptr i32 %14 to %struct.rbnode*, !dbg !3881
  store %struct.rbnode* %15, %struct.rbnode** %9, align 4, !dbg !3882
  br label %16

16:                                               ; preds = %8, %5
  ret void, !dbg !3883
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_color(%struct.rbnode* nocapture noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3884 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !3888, metadata !DIExpression()), !dbg !3892
  call void @llvm.dbg.value(metadata i32 %1, metadata !3889, metadata !DIExpression()), !dbg !3892
  %3 = bitcast %struct.rbnode* %0 to i32*, !dbg !3893
  call void @llvm.dbg.value(metadata i32* %3, metadata !3890, metadata !DIExpression()), !dbg !3892
  %4 = load i32, i32* %3, align 4, !dbg !3894
  %5 = and i32 %4, -2, !dbg !3895
  %6 = and i32 %1, 255, !dbg !3896
  %7 = or i32 %5, %6, !dbg !3897
  store i32 %7, i32* %3, align 4, !dbg !3898
  ret void, !dbg !3899
}

; Function Attrs: nofree nosync nounwind willreturn
declare i8* @llvm.stacksave() #9

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @find_and_stack(%struct.rbtree* nocapture noundef readonly %0, %struct.rbnode* noundef %1, %struct.rbnode** nocapture noundef %2) unnamed_addr #1 !dbg !3900 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !3905, metadata !DIExpression()), !dbg !3912
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !3906, metadata !DIExpression()), !dbg !3912
  call void @llvm.dbg.value(metadata %struct.rbnode** %2, metadata !3907, metadata !DIExpression()), !dbg !3912
  call void @llvm.dbg.value(metadata i32 0, metadata !3908, metadata !DIExpression()), !dbg !3912
  %4 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !3913
  %5 = load %struct.rbnode*, %struct.rbnode** %4, align 4, !dbg !3913
  call void @llvm.dbg.value(metadata i32 1, metadata !3908, metadata !DIExpression()), !dbg !3912
  store %struct.rbnode* %5, %struct.rbnode** %2, align 4, !dbg !3914
  %6 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 1, !dbg !3915
  call void @llvm.dbg.value(metadata i32 1, metadata !3908, metadata !DIExpression()), !dbg !3912
  %7 = icmp eq %struct.rbnode* %5, %1, !dbg !3916
  br i1 %7, label %23, label %8, !dbg !3917

8:                                                ; preds = %3, %19
  %9 = phi %struct.rbnode* [ %17, %19 ], [ %5, %3 ]
  %10 = phi %struct.rbnode** [ %21, %19 ], [ %2, %3 ]
  %11 = phi i32 [ %20, %19 ], [ 1, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !3908, metadata !DIExpression()), !dbg !3912
  %12 = load i1 (%struct.rbnode*, %struct.rbnode*)*, i1 (%struct.rbnode*, %struct.rbnode*)** %6, align 4, !dbg !3915
  %13 = tail call zeroext i1 %12(%struct.rbnode* noundef %1, %struct.rbnode* noundef %9) #26, !dbg !3918
  %14 = xor i1 %13, true, !dbg !3918
  %15 = zext i1 %14 to i8, !dbg !3918
  call void @llvm.dbg.value(metadata i8 %15, metadata !3909, metadata !DIExpression()), !dbg !3919
  %16 = load %struct.rbnode*, %struct.rbnode** %10, align 4, !dbg !3920
  %17 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %16, i8 noundef zeroext %15) #24, !dbg !3921
  call void @llvm.dbg.value(metadata %struct.rbnode* %17, metadata !3911, metadata !DIExpression()), !dbg !3919
  %18 = icmp eq %struct.rbnode* %17, null, !dbg !3922
  br i1 %18, label %23, label %19, !dbg !3924

19:                                               ; preds = %8
  %20 = add nuw nsw i32 %11, 1, !dbg !3925
  call void @llvm.dbg.value(metadata i32 %20, metadata !3908, metadata !DIExpression()), !dbg !3912
  %21 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %2, i32 %11, !dbg !3927
  store %struct.rbnode* %17, %struct.rbnode** %21, align 4, !dbg !3928
  %22 = icmp eq %struct.rbnode* %17, %1, !dbg !3916
  br i1 %22, label %23, label %8, !dbg !3917

23:                                               ; preds = %19, %8, %3
  %24 = phi i32 [ 1, %3 ], [ %11, %8 ], [ %20, %19 ], !dbg !3912
  call void @llvm.dbg.value(metadata i32 %24, metadata !3908, metadata !DIExpression()), !dbg !3912
  ret i32 %24, !dbg !3929
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @fix_extra_red(%struct.rbnode** nocapture noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !3930 {
  call void @llvm.dbg.value(metadata %struct.rbnode** %0, metadata !3934, metadata !DIExpression()), !dbg !3943
  call void @llvm.dbg.value(metadata i32 %1, metadata !3935, metadata !DIExpression()), !dbg !3943
  %3 = icmp sgt i32 %1, 1, !dbg !3944
  br i1 %3, label %4, label %34, !dbg !3945

4:                                                ; preds = %2, %32
  %5 = phi i32 [ %9, %32 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3935, metadata !DIExpression()), !dbg !3943
  %6 = add nsw i32 %5, -1, !dbg !3946
  %7 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %6, !dbg !3947
  %8 = load %struct.rbnode*, %struct.rbnode** %7, align 4, !dbg !3947
  call void @llvm.dbg.value(metadata %struct.rbnode* %8, metadata !3936, metadata !DIExpression()), !dbg !3948
  %9 = add nsw i32 %5, -2, !dbg !3949
  %10 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %9, !dbg !3950
  %11 = load %struct.rbnode*, %struct.rbnode** %10, align 4, !dbg !3950
  call void @llvm.dbg.value(metadata %struct.rbnode* %11, metadata !3938, metadata !DIExpression()), !dbg !3948
  %12 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef %11) #24, !dbg !3951
  br i1 %12, label %38, label %13, !dbg !3953

13:                                               ; preds = %4
  %14 = add nsw i32 %5, -3, !dbg !3954
  %15 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %14, !dbg !3955
  %16 = load %struct.rbnode*, %struct.rbnode** %15, align 4, !dbg !3955
  call void @llvm.dbg.value(metadata %struct.rbnode* %16, metadata !3939, metadata !DIExpression()), !dbg !3948
  %17 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %16, %struct.rbnode* noundef %11) #24, !dbg !3956
  call void @llvm.dbg.value(metadata i8 %17, metadata !3940, metadata !DIExpression()), !dbg !3948
  %18 = icmp eq i8 %17, 0, !dbg !3957
  %19 = zext i1 %18 to i8, !dbg !3958
  %20 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %16, i8 noundef zeroext %19) #24, !dbg !3959
  call void @llvm.dbg.value(metadata %struct.rbnode* %20, metadata !3941, metadata !DIExpression()), !dbg !3948
  %21 = icmp eq %struct.rbnode* %20, null, !dbg !3960
  br i1 %21, label %24, label %22, !dbg !3962

22:                                               ; preds = %13
  %23 = tail call fastcc zeroext i1 @is_red(%struct.rbnode* noundef nonnull %20) #24, !dbg !3963
  br i1 %23, label %32, label %24, !dbg !3964

24:                                               ; preds = %22, %13
  %25 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %9, !dbg !3950
  %26 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %14, !dbg !3955
  %27 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %11, %struct.rbnode* noundef %8) #24, !dbg !3965
  call void @llvm.dbg.value(metadata i8 %27, metadata !3942, metadata !DIExpression()), !dbg !3948
  %28 = icmp eq i8 %27, %17, !dbg !3966
  br i1 %28, label %30, label %29, !dbg !3968

29:                                               ; preds = %24
  tail call fastcc void @rotate(%struct.rbnode** noundef nonnull %0, i32 noundef %5) #24, !dbg !3969
  br label %30, !dbg !3971

30:                                               ; preds = %29, %24
  tail call fastcc void @rotate(%struct.rbnode** noundef nonnull %0, i32 noundef %6) #24, !dbg !3972
  %31 = load %struct.rbnode*, %struct.rbnode** %26, align 4, !dbg !3973
  tail call fastcc void @set_color(%struct.rbnode* noundef %31, i32 noundef 1) #24, !dbg !3974
  br label %34

32:                                               ; preds = %22
  tail call fastcc void @set_color(%struct.rbnode* noundef %16, i32 noundef 0) #24, !dbg !3975
  tail call fastcc void @set_color(%struct.rbnode* noundef %11, i32 noundef 1) #24, !dbg !3977
  tail call fastcc void @set_color(%struct.rbnode* noundef nonnull %20, i32 noundef 1) #24, !dbg !3978
  call void @llvm.dbg.value(metadata i32 %9, metadata !3935, metadata !DIExpression()), !dbg !3943
  %33 = icmp ugt i32 %5, 3, !dbg !3944
  br i1 %33, label %4, label %34, !dbg !3945

34:                                               ; preds = %32, %2, %30
  %35 = phi %struct.rbnode** [ %25, %30 ], [ %0, %2 ], [ %0, %32 ]
  %36 = phi i32 [ 0, %30 ], [ 1, %2 ], [ 1, %32 ]
  %37 = load %struct.rbnode*, %struct.rbnode** %35, align 4, !dbg !3943
  tail call fastcc void @set_color(%struct.rbnode* noundef %37, i32 noundef %36) #24, !dbg !3943
  br label %38, !dbg !3979

38:                                               ; preds = %4, %34
  ret void, !dbg !3979
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.stackrestore(i8*) #9

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_black(%struct.rbnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !3980 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !3984, metadata !DIExpression()), !dbg !3985
  %2 = tail call fastcc i32 @get_color(%struct.rbnode* noundef %0) #24, !dbg !3986
  %3 = icmp eq i32 %2, 1, !dbg !3987
  ret i1 %3, !dbg !3988
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i8 @get_side(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* noundef readnone %1) unnamed_addr #8 !dbg !3989 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !3993, metadata !DIExpression()), !dbg !3995
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !3994, metadata !DIExpression()), !dbg !3995
  %3 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %0, i8 noundef zeroext 1) #24, !dbg !3996
  %4 = icmp eq %struct.rbnode* %3, %1, !dbg !3997
  %5 = zext i1 %4 to i8, !dbg !3998
  ret i8 %5, !dbg !3999
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_red(%struct.rbnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !4000 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !4002, metadata !DIExpression()), !dbg !4003
  %2 = tail call fastcc i32 @get_color(%struct.rbnode* noundef %0) #24, !dbg !4004
  %3 = icmp eq i32 %2, 0, !dbg !4005
  ret i1 %3, !dbg !4006
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @rotate(%struct.rbnode** nocapture noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !4007 {
  call void @llvm.dbg.value(metadata %struct.rbnode** %0, metadata !4009, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %1, metadata !4010, metadata !DIExpression()), !dbg !4019
  %3 = add nsw i32 %1, -2, !dbg !4020
  %4 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %3, !dbg !4021
  %5 = load %struct.rbnode*, %struct.rbnode** %4, align 4, !dbg !4021
  call void @llvm.dbg.value(metadata %struct.rbnode* %5, metadata !4011, metadata !DIExpression()), !dbg !4019
  %6 = add nsw i32 %1, -1, !dbg !4022
  %7 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %6, !dbg !4023
  %8 = load %struct.rbnode*, %struct.rbnode** %7, align 4, !dbg !4023
  call void @llvm.dbg.value(metadata %struct.rbnode* %8, metadata !4012, metadata !DIExpression()), !dbg !4019
  %9 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %5, %struct.rbnode* noundef %8) #24, !dbg !4024, !range !4025
  call void @llvm.dbg.value(metadata i8 %9, metadata !4013, metadata !DIExpression()), !dbg !4019
  %10 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %8, i8 noundef zeroext %9) #24, !dbg !4026
  call void @llvm.dbg.value(metadata %struct.rbnode* %10, metadata !4014, metadata !DIExpression()), !dbg !4019
  %11 = xor i8 %9, 1, !dbg !4027
  %12 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %8, i8 noundef zeroext %11) #24, !dbg !4028
  call void @llvm.dbg.value(metadata %struct.rbnode* %12, metadata !4015, metadata !DIExpression()), !dbg !4019
  %13 = icmp sgt i32 %1, 2, !dbg !4029
  br i1 %13, label %14, label %20, !dbg !4030

14:                                               ; preds = %2
  %15 = add nsw i32 %1, -3, !dbg !4031
  %16 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %15, !dbg !4032
  %17 = load %struct.rbnode*, %struct.rbnode** %16, align 4, !dbg !4032
  call void @llvm.dbg.value(metadata %struct.rbnode* %17, metadata !4016, metadata !DIExpression()), !dbg !4033
  %18 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %17, %struct.rbnode* noundef %5) #24, !dbg !4034, !range !4025
  %19 = bitcast %struct.rbnode* %8 to i8*, !dbg !4035
  tail call fastcc void @set_child(%struct.rbnode* noundef %17, i8 noundef zeroext %18, i8* noundef %19) #24, !dbg !4036
  br label %20, !dbg !4037

20:                                               ; preds = %14, %2
  %21 = bitcast %struct.rbnode* %10 to i8*, !dbg !4038
  tail call fastcc void @set_child(%struct.rbnode* noundef %8, i8 noundef zeroext %9, i8* noundef %21) #24, !dbg !4039
  %22 = bitcast %struct.rbnode* %5 to i8*, !dbg !4040
  tail call fastcc void @set_child(%struct.rbnode* noundef %8, i8 noundef zeroext %11, i8* noundef %22) #24, !dbg !4041
  %23 = bitcast %struct.rbnode* %12 to i8*, !dbg !4042
  tail call fastcc void @set_child(%struct.rbnode* noundef %5, i8 noundef zeroext %9, i8* noundef %23) #24, !dbg !4043
  store %struct.rbnode* %8, %struct.rbnode** %4, align 4, !dbg !4044
  store %struct.rbnode* %5, %struct.rbnode** %7, align 4, !dbg !4045
  ret void, !dbg !4046
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @get_color(%struct.rbnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !4047 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !4051, metadata !DIExpression()), !dbg !4052
  %2 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 0, i32 0, i32 0, !dbg !4053
  %3 = load %struct.rbnode*, %struct.rbnode** %2, align 4, !dbg !4053
  %4 = ptrtoint %struct.rbnode* %3 to i32, !dbg !4054
  %5 = and i32 %4, 1, !dbg !4055
  ret i32 %5, !dbg !4056
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rb_remove(%struct.rbtree* nocapture noundef %0, %struct.rbnode* noundef %1) local_unnamed_addr #1 !dbg !4057 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !4059, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !4060, metadata !DIExpression()), !dbg !4077
  %3 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 2, !dbg !4078
  %4 = load i32, i32* %3, align 4, !dbg !4078
  %5 = add nsw i32 %4, 1, !dbg !4079
  %6 = alloca %struct.rbnode*, i32 %5, align 4, !dbg !4080
  call void @llvm.dbg.value(metadata i32 %5, metadata !4062, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.declare(metadata %struct.rbnode** %6, metadata !4063, metadata !DIExpression()), !dbg !4081
  %7 = call fastcc i32 @find_and_stack(%struct.rbtree* noundef %0, %struct.rbnode* noundef %1, %struct.rbnode** noundef nonnull %6) #24, !dbg !4082
  call void @llvm.dbg.value(metadata i32 %7, metadata !4067, metadata !DIExpression()), !dbg !4077
  %8 = add nsw i32 %7, -1, !dbg !4083
  %9 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %8, !dbg !4085
  %10 = load %struct.rbnode*, %struct.rbnode** %9, align 4, !dbg !4085
  %11 = icmp eq %struct.rbnode* %10, %1, !dbg !4086
  br i1 %11, label %12, label %108, !dbg !4087

12:                                               ; preds = %2
  %13 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %1, i8 noundef zeroext 0) #24, !dbg !4088
  %14 = icmp eq %struct.rbnode* %13, null, !dbg !4089
  br i1 %14, label %69, label %15, !dbg !4090

15:                                               ; preds = %12
  %16 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %1, i8 noundef zeroext 1) #24, !dbg !4091
  %17 = icmp eq %struct.rbnode* %16, null, !dbg !4092
  br i1 %17, label %69, label %18, !dbg !4093

18:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 %7, metadata !4068, metadata !DIExpression()), !dbg !4094
  call void @llvm.dbg.value(metadata %struct.rbnode* %13, metadata !4073, metadata !DIExpression()), !dbg !4094
  %19 = icmp sgt i32 %7, 1, !dbg !4095
  br i1 %19, label %20, label %24, !dbg !4096

20:                                               ; preds = %18
  %21 = add nsw i32 %7, -2, !dbg !4097
  %22 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %21, !dbg !4098
  %23 = load %struct.rbnode*, %struct.rbnode** %22, align 4, !dbg !4098
  br label %24, !dbg !4096

24:                                               ; preds = %18, %20
  %25 = phi %struct.rbnode* [ %23, %20 ], [ null, %18 ], !dbg !4096
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !4071, metadata !DIExpression()), !dbg !4094
  call void @llvm.dbg.value(metadata i32 %7, metadata !4067, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4077
  %26 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %7, !dbg !4099
  store %struct.rbnode* %13, %struct.rbnode** %26, align 4, !dbg !4100
  %27 = add nsw i32 %7, 1, !dbg !4094
  call void @llvm.dbg.value(metadata i32 %27, metadata !4067, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.value(metadata %struct.rbnode* %13, metadata !4073, metadata !DIExpression()), !dbg !4094
  %28 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %13, i8 noundef zeroext 1) #24, !dbg !4101
  %29 = icmp eq %struct.rbnode* %28, null, !dbg !4102
  br i1 %29, label %41, label %30, !dbg !4103

30:                                               ; preds = %24, %30
  %31 = phi %struct.rbnode* [ %35, %30 ], [ %28, %24 ]
  %32 = phi i32 [ %34, %30 ], [ %27, %24 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %31, metadata !4073, metadata !DIExpression()), !dbg !4094
  call void @llvm.dbg.value(metadata i32 %32, metadata !4067, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4077
  %33 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %32, !dbg !4104
  store %struct.rbnode* %31, %struct.rbnode** %33, align 4, !dbg !4106
  %34 = add nsw i32 %32, 1, !dbg !4094
  call void @llvm.dbg.value(metadata i32 %34, metadata !4067, metadata !DIExpression()), !dbg !4077
  %35 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %31, i8 noundef zeroext 1) #24, !dbg !4101
  %36 = icmp eq %struct.rbnode* %35, null, !dbg !4102
  br i1 %36, label %37, label %30, !dbg !4103, !llvm.loop !4107

37:                                               ; preds = %30
  %38 = add nsw i32 %32, -1, !dbg !4109
  %39 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %38
  %40 = load %struct.rbnode*, %struct.rbnode** %39, align 4, !dbg !4110
  br label %41, !dbg !4109

41:                                               ; preds = %37, %24
  %42 = phi %struct.rbnode* [ %40, %37 ], [ %1, %24 ], !dbg !4110
  %43 = phi %struct.rbnode* [ %31, %37 ], [ %13, %24 ], !dbg !4094
  %44 = phi i32 [ %32, %37 ], [ %7, %24 ]
  %45 = phi i32 [ %34, %37 ], [ %27, %24 ], !dbg !4094
  call void @llvm.dbg.value(metadata %struct.rbnode* %42, metadata !4072, metadata !DIExpression()), !dbg !4094
  %46 = icmp eq %struct.rbnode* %25, null, !dbg !4111
  br i1 %46, label %50, label %47, !dbg !4113

47:                                               ; preds = %41
  %48 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef nonnull %25, %struct.rbnode* noundef %1) #24, !dbg !4114, !range !4025
  %49 = bitcast %struct.rbnode* %43 to i8*, !dbg !4116
  tail call fastcc void @set_child(%struct.rbnode* noundef nonnull %25, i8 noundef zeroext %48, i8* noundef nonnull %49) #24, !dbg !4117
  br label %52, !dbg !4118

50:                                               ; preds = %41
  %51 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !4119
  store %struct.rbnode* %43, %struct.rbnode** %51, align 4, !dbg !4121
  br label %52

52:                                               ; preds = %50, %47
  %53 = icmp eq %struct.rbnode* %42, %1, !dbg !4122
  br i1 %53, label %58, label %54, !dbg !4124

54:                                               ; preds = %52
  %55 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %42, %struct.rbnode* noundef nonnull %43) #24, !dbg !4125, !range !4025
  %56 = bitcast %struct.rbnode* %1 to i8*, !dbg !4127
  tail call fastcc void @set_child(%struct.rbnode* noundef %42, i8 noundef zeroext %55, i8* noundef %56) #24, !dbg !4128
  %57 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %1, i8 noundef zeroext 0) #24, !dbg !4129
  call void @llvm.dbg.value(metadata %struct.rbnode* %57, metadata !4061, metadata !DIExpression()), !dbg !4077
  br label %58

58:                                               ; preds = %52, %54
  %59 = phi %struct.rbnode* [ %57, %54 ], [ %1, %52 ]
  %60 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %43, i8 noundef zeroext 0) #24, !dbg !4130
  %61 = bitcast %struct.rbnode* %60 to i8*, !dbg !4130
  tail call fastcc void @set_child(%struct.rbnode* noundef %1, i8 noundef zeroext 0, i8* noundef %61) #24, !dbg !4130
  %62 = bitcast %struct.rbnode* %59 to i8*, !dbg !4130
  tail call fastcc void @set_child(%struct.rbnode* noundef nonnull %43, i8 noundef zeroext 0, i8* noundef %62) #24, !dbg !4130
  %63 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %1, i8 noundef zeroext 1) #24, !dbg !4131
  %64 = bitcast %struct.rbnode* %63 to i8*, !dbg !4131
  tail call fastcc void @set_child(%struct.rbnode* noundef nonnull %43, i8 noundef zeroext 1, i8* noundef %64) #24, !dbg !4132
  tail call fastcc void @set_child(%struct.rbnode* noundef %1, i8 noundef zeroext 1, i8* noundef null) #24, !dbg !4133
  %65 = load %struct.rbnode*, %struct.rbnode** %9, align 4, !dbg !4134
  call void @llvm.dbg.value(metadata %struct.rbnode* %65, metadata !4061, metadata !DIExpression()), !dbg !4077
  %66 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %44, !dbg !4135
  store %struct.rbnode* %43, %struct.rbnode** %9, align 4, !dbg !4136
  store %struct.rbnode* %65, %struct.rbnode** %66, align 4, !dbg !4137
  %67 = tail call fastcc i32 @get_color(%struct.rbnode* noundef %1) #24, !dbg !4138
  call void @llvm.dbg.value(metadata i32 %67, metadata !4074, metadata !DIExpression()), !dbg !4094
  %68 = tail call fastcc i32 @get_color(%struct.rbnode* noundef nonnull %43) #24, !dbg !4139, !range !4140
  tail call fastcc void @set_color(%struct.rbnode* noundef %1, i32 noundef %68) #24, !dbg !4141
  tail call fastcc void @set_color(%struct.rbnode* noundef nonnull %43, i32 noundef %67) #24, !dbg !4142
  br label %69, !dbg !4143

69:                                               ; preds = %58, %15, %12
  %70 = phi i32 [ %45, %58 ], [ %7, %15 ], [ %7, %12 ], !dbg !4077
  call void @llvm.dbg.value(metadata i32 %70, metadata !4067, metadata !DIExpression()), !dbg !4077
  %71 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %1, i8 noundef zeroext 0) #24, !dbg !4144
  call void @llvm.dbg.value(metadata %struct.rbnode* %71, metadata !4075, metadata !DIExpression()), !dbg !4077
  %72 = icmp eq %struct.rbnode* %71, null, !dbg !4145
  br i1 %72, label %73, label %75, !dbg !4147

73:                                               ; preds = %69
  %74 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %1, i8 noundef zeroext 1) #24, !dbg !4148
  call void @llvm.dbg.value(metadata %struct.rbnode* %74, metadata !4075, metadata !DIExpression()), !dbg !4077
  br label %75, !dbg !4150

75:                                               ; preds = %73, %69
  %76 = phi %struct.rbnode* [ %74, %73 ], [ %71, %69 ], !dbg !4077
  call void @llvm.dbg.value(metadata %struct.rbnode* %76, metadata !4075, metadata !DIExpression()), !dbg !4077
  %77 = icmp slt i32 %70, 2, !dbg !4151
  br i1 %77, label %78, label %83, !dbg !4153

78:                                               ; preds = %75
  %79 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !4154
  store %struct.rbnode* %76, %struct.rbnode** %79, align 4, !dbg !4156
  %80 = icmp eq %struct.rbnode* %76, null, !dbg !4157
  br i1 %80, label %82, label %81, !dbg !4159

81:                                               ; preds = %78
  tail call fastcc void @set_color(%struct.rbnode* noundef nonnull %76, i32 noundef 1) #24, !dbg !4160
  br label %108, !dbg !4162

82:                                               ; preds = %78
  store i32 0, i32* %3, align 4, !dbg !4163
  br label %108

83:                                               ; preds = %75
  %84 = add nsw i32 %70, -2, !dbg !4165
  %85 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %84, !dbg !4166
  %86 = load %struct.rbnode*, %struct.rbnode** %85, align 4, !dbg !4166
  call void @llvm.dbg.value(metadata %struct.rbnode* %86, metadata !4076, metadata !DIExpression()), !dbg !4077
  %87 = icmp eq %struct.rbnode* %76, null, !dbg !4167
  br i1 %87, label %88, label %93, !dbg !4169

88:                                               ; preds = %83
  %89 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef %1) #24, !dbg !4170
  br i1 %89, label %90, label %91, !dbg !4173

90:                                               ; preds = %88
  call fastcc void @fix_missing_black(%struct.rbnode** noundef nonnull %6, i32 noundef %70, %struct.rbnode* noundef %1) #24, !dbg !4174
  br label %105, !dbg !4176

91:                                               ; preds = %88
  %92 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %86, %struct.rbnode* noundef %1) #24, !dbg !4177, !range !4025
  tail call fastcc void @set_child(%struct.rbnode* noundef %86, i8 noundef zeroext %92, i8* noundef null) #24, !dbg !4179
  br label %105

93:                                               ; preds = %83
  %94 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %86, %struct.rbnode* noundef %1) #24, !dbg !4180, !range !4025
  %95 = bitcast %struct.rbnode* %76 to i8*, !dbg !4182
  tail call fastcc void @set_child(%struct.rbnode* noundef %86, i8 noundef zeroext %94, i8* noundef nonnull %95) #24, !dbg !4183
  %96 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef %1) #24, !dbg !4184
  br i1 %96, label %100, label %97, !dbg !4184

97:                                               ; preds = %93
  %98 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef nonnull %76) #24, !dbg !4184
  br i1 %98, label %100, label %99, !dbg !4187

99:                                               ; preds = %97
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2.18, i32 0, i32 0), i32 noundef 486) #26, !dbg !4188
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.19, i32 0, i32 0)) #26, !dbg !4188
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2.18, i32 0, i32 0), i32 noundef 486) #26, !dbg !4188
  unreachable, !dbg !4188

100:                                              ; preds = %97, %93
  %101 = tail call fastcc zeroext i1 @is_red(%struct.rbnode* noundef %1) #24, !dbg !4190
  br i1 %101, label %104, label %102, !dbg !4192

102:                                              ; preds = %100
  %103 = tail call fastcc zeroext i1 @is_red(%struct.rbnode* noundef nonnull %76) #24, !dbg !4193
  br i1 %103, label %104, label %105, !dbg !4194

104:                                              ; preds = %102, %100
  tail call fastcc void @set_color(%struct.rbnode* noundef nonnull %76, i32 noundef 1) #24, !dbg !4195
  br label %105, !dbg !4197

105:                                              ; preds = %102, %104, %90, %91
  %106 = load %struct.rbnode*, %struct.rbnode** %6, align 4, !dbg !4198
  %107 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !4199
  store %struct.rbnode* %106, %struct.rbnode** %107, align 4, !dbg !4200
  br label %108, !dbg !4201

108:                                              ; preds = %105, %82, %81, %2
  ret void, !dbg !4201
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @fix_missing_black(%struct.rbnode** nocapture noundef %0, i32 noundef %1, %struct.rbnode* noundef readnone %2) unnamed_addr #12 !dbg !4202 {
  call void @llvm.dbg.value(metadata %struct.rbnode** %0, metadata !4206, metadata !DIExpression()), !dbg !4218
  call void @llvm.dbg.value(metadata i32 %1, metadata !4207, metadata !DIExpression()), !dbg !4218
  call void @llvm.dbg.value(metadata %struct.rbnode* %2, metadata !4208, metadata !DIExpression()), !dbg !4218
  %4 = icmp sgt i32 %1, 1, !dbg !4219
  br i1 %4, label %5, label %68, !dbg !4220

5:                                                ; preds = %3, %65
  %6 = phi i32 [ %66, %65 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !4207, metadata !DIExpression()), !dbg !4218
  %7 = add nsw i32 %6, -1, !dbg !4221
  %8 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %7, !dbg !4222
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !4222
  call void @llvm.dbg.value(metadata %struct.rbnode* %9, metadata !4214, metadata !DIExpression()), !dbg !4223
  %10 = add nsw i32 %6, -2, !dbg !4224
  %11 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %10, !dbg !4225
  %12 = load %struct.rbnode*, %struct.rbnode** %11, align 4, !dbg !4225
  call void @llvm.dbg.value(metadata %struct.rbnode* %12, metadata !4215, metadata !DIExpression()), !dbg !4223
  %13 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %12, %struct.rbnode* noundef %9) #24, !dbg !4226
  call void @llvm.dbg.value(metadata i8 %13, metadata !4216, metadata !DIExpression()), !dbg !4223
  %14 = icmp eq i8 %13, 0, !dbg !4227
  %15 = zext i1 %14 to i8, !dbg !4228
  %16 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %12, i8 noundef zeroext %15) #24, !dbg !4229
  call void @llvm.dbg.value(metadata %struct.rbnode* %16, metadata !4217, metadata !DIExpression()), !dbg !4223
  %17 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef %16) #24, !dbg !4230
  br i1 %17, label %23, label %18, !dbg !4232

18:                                               ; preds = %5
  store %struct.rbnode* %16, %struct.rbnode** %8, align 4, !dbg !4233
  tail call fastcc void @rotate(%struct.rbnode** noundef nonnull %0, i32 noundef %6) #24, !dbg !4235
  tail call fastcc void @set_color(%struct.rbnode* noundef %12, i32 noundef 0) #24, !dbg !4236
  tail call fastcc void @set_color(%struct.rbnode* noundef %16, i32 noundef 1) #24, !dbg !4237
  %19 = add nuw nsw i32 %6, 1, !dbg !4238
  call void @llvm.dbg.value(metadata i32 %19, metadata !4207, metadata !DIExpression()), !dbg !4218
  %20 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %6, !dbg !4239
  store %struct.rbnode* %9, %struct.rbnode** %20, align 4, !dbg !4240
  %21 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !4241
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !4215, metadata !DIExpression()), !dbg !4223
  %22 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %21, i8 noundef zeroext %15) #24, !dbg !4242
  call void @llvm.dbg.value(metadata %struct.rbnode* %22, metadata !4217, metadata !DIExpression()), !dbg !4223
  br label %23, !dbg !4243

23:                                               ; preds = %18, %5
  %24 = phi %struct.rbnode* [ %12, %5 ], [ %21, %18 ], !dbg !4223
  %25 = phi i32 [ %6, %5 ], [ %19, %18 ]
  %26 = phi %struct.rbnode* [ %16, %5 ], [ %22, %18 ], !dbg !4223
  call void @llvm.dbg.value(metadata %struct.rbnode* %26, metadata !4217, metadata !DIExpression()), !dbg !4223
  call void @llvm.dbg.value(metadata i32 %25, metadata !4207, metadata !DIExpression()), !dbg !4218
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !4215, metadata !DIExpression()), !dbg !4223
  %27 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %26, i8 noundef zeroext 0) #24, !dbg !4244
  call void @llvm.dbg.value(metadata %struct.rbnode* %27, metadata !4209, metadata !DIExpression()), !dbg !4223
  %28 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %26, i8 noundef zeroext 1) #24, !dbg !4245
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !4211, metadata !DIExpression()), !dbg !4223
  %29 = icmp eq %struct.rbnode* %27, null, !dbg !4246
  br i1 %29, label %32, label %30, !dbg !4248

30:                                               ; preds = %23
  %31 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef nonnull %27) #24, !dbg !4249
  br i1 %31, label %32, label %42, !dbg !4250

32:                                               ; preds = %30, %23
  %33 = icmp eq %struct.rbnode* %28, null, !dbg !4251
  br i1 %33, label %36, label %34, !dbg !4252

34:                                               ; preds = %32
  %35 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef nonnull %28) #24, !dbg !4253
  br i1 %35, label %36, label %42, !dbg !4254

36:                                               ; preds = %34, %32
  %37 = icmp eq %struct.rbnode* %9, %2, !dbg !4255
  br i1 %37, label %38, label %39, !dbg !4258

38:                                               ; preds = %36
  tail call fastcc void @set_child(%struct.rbnode* noundef %24, i8 noundef zeroext %13, i8* noundef null) #24, !dbg !4259
  br label %39, !dbg !4261

39:                                               ; preds = %38, %36
  tail call fastcc void @set_color(%struct.rbnode* noundef %26, i32 noundef 0) #24, !dbg !4262
  %40 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef %24) #24, !dbg !4263
  br i1 %40, label %65, label %41, !dbg !4265

41:                                               ; preds = %39
  tail call fastcc void @set_color(%struct.rbnode* noundef %24, i32 noundef 1) #24, !dbg !4266
  br label %68, !dbg !4268

42:                                               ; preds = %34, %30
  %43 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %26, i8 noundef zeroext %15) #24, !dbg !4269
  call void @llvm.dbg.value(metadata %struct.rbnode* %43, metadata !4213, metadata !DIExpression()), !dbg !4223
  %44 = icmp eq %struct.rbnode* %43, null, !dbg !4270
  br i1 %44, label %49, label %45, !dbg !4272

45:                                               ; preds = %42
  %46 = tail call fastcc zeroext i1 @is_red(%struct.rbnode* noundef nonnull %43) #24, !dbg !4273
  br i1 %46, label %47, label %49, !dbg !4274

47:                                               ; preds = %45
  %48 = add nsw i32 %25, -1, !dbg !4275
  br label %57, !dbg !4274

49:                                               ; preds = %45, %42
  %50 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %26, i8 noundef zeroext %13) #24, !dbg !4276
  call void @llvm.dbg.value(metadata %struct.rbnode* %50, metadata !4212, metadata !DIExpression()), !dbg !4223
  %51 = add nsw i32 %25, -1, !dbg !4278
  %52 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %51, !dbg !4279
  store %struct.rbnode* %26, %struct.rbnode** %52, align 4, !dbg !4280
  %53 = add nuw nsw i32 %25, 1, !dbg !4281
  call void @llvm.dbg.value(metadata i32 %53, metadata !4207, metadata !DIExpression()), !dbg !4218
  %54 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %25, !dbg !4282
  store %struct.rbnode* %50, %struct.rbnode** %54, align 4, !dbg !4283
  tail call fastcc void @rotate(%struct.rbnode** noundef nonnull %0, i32 noundef %53) #24, !dbg !4284
  tail call fastcc void @set_color(%struct.rbnode* noundef %26, i32 noundef 0) #24, !dbg !4285
  tail call fastcc void @set_color(%struct.rbnode* noundef %50, i32 noundef 1) #24, !dbg !4286
  %55 = load %struct.rbnode*, %struct.rbnode** %52, align 4, !dbg !4287
  call void @llvm.dbg.value(metadata %struct.rbnode* %55, metadata !4217, metadata !DIExpression()), !dbg !4223
  %56 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %55, i8 noundef zeroext %15) #24, !dbg !4288
  call void @llvm.dbg.value(metadata %struct.rbnode* %56, metadata !4213, metadata !DIExpression()), !dbg !4223
  store %struct.rbnode* %9, %struct.rbnode** %52, align 4, !dbg !4289
  call void @llvm.dbg.value(metadata i32 %25, metadata !4207, metadata !DIExpression()), !dbg !4218
  br label %57, !dbg !4290

57:                                               ; preds = %47, %49
  %58 = phi i32 [ %48, %47 ], [ %51, %49 ], !dbg !4275
  %59 = phi %struct.rbnode* [ %43, %47 ], [ %56, %49 ], !dbg !4223
  %60 = phi %struct.rbnode* [ %26, %47 ], [ %55, %49 ], !dbg !4223
  call void @llvm.dbg.value(metadata %struct.rbnode* %60, metadata !4217, metadata !DIExpression()), !dbg !4223
  call void @llvm.dbg.value(metadata i32 %25, metadata !4207, metadata !DIExpression()), !dbg !4218
  call void @llvm.dbg.value(metadata %struct.rbnode* %59, metadata !4213, metadata !DIExpression()), !dbg !4223
  %61 = tail call fastcc i32 @get_color(%struct.rbnode* noundef %24) #24, !dbg !4291, !range !4140
  tail call fastcc void @set_color(%struct.rbnode* noundef %60, i32 noundef %61) #24, !dbg !4292
  tail call fastcc void @set_color(%struct.rbnode* noundef %24, i32 noundef 1) #24, !dbg !4293
  tail call fastcc void @set_color(%struct.rbnode* noundef %59, i32 noundef 1) #24, !dbg !4294
  %62 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %58, !dbg !4295
  store %struct.rbnode* %60, %struct.rbnode** %62, align 4, !dbg !4296
  tail call fastcc void @rotate(%struct.rbnode** noundef nonnull %0, i32 noundef %25) #24, !dbg !4297
  %63 = icmp eq %struct.rbnode* %9, %2, !dbg !4298
  br i1 %63, label %64, label %68, !dbg !4300

64:                                               ; preds = %57
  tail call fastcc void @set_child(%struct.rbnode* noundef %24, i8 noundef zeroext %13, i8* noundef null) #24, !dbg !4301
  br label %68, !dbg !4303

65:                                               ; preds = %39
  %66 = add nsw i32 %25, -1, !dbg !4304
  call void @llvm.dbg.value(metadata i32 %66, metadata !4207, metadata !DIExpression()), !dbg !4218
  %67 = icmp sgt i32 %25, 2, !dbg !4219
  br i1 %67, label %5, label %68, !dbg !4220

68:                                               ; preds = %65, %3, %57, %64, %41
  ret void, !dbg !4306
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_rb_walk(%struct.rbnode* noundef %0, void (%struct.rbnode*, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !4307 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !4315, metadata !DIExpression()), !dbg !4318
  call void @llvm.dbg.value(metadata void (%struct.rbnode*, i8*)* %1, metadata !4316, metadata !DIExpression()), !dbg !4318
  call void @llvm.dbg.value(metadata i8* %2, metadata !4317, metadata !DIExpression()), !dbg !4318
  %4 = icmp eq %struct.rbnode* %0, null, !dbg !4319
  br i1 %4, label %10, label %5, !dbg !4321

5:                                                ; preds = %3, %5
  %6 = phi %struct.rbnode* [ %8, %5 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %6, metadata !4315, metadata !DIExpression()), !dbg !4318
  %7 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %6, i8 noundef zeroext 0) #24, !dbg !4322
  tail call void @z_rb_walk(%struct.rbnode* noundef %7, void (%struct.rbnode*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !4324
  tail call void %1(%struct.rbnode* noundef nonnull %6, i8* noundef %2) #26, !dbg !4325
  %8 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %6, i8 noundef zeroext 1) #24, !dbg !4326
  call void @llvm.dbg.value(metadata %struct.rbnode* %8, metadata !4315, metadata !DIExpression()), !dbg !4318
  call void @llvm.dbg.value(metadata void (%struct.rbnode*, i8*)* %1, metadata !4316, metadata !DIExpression()), !dbg !4318
  call void @llvm.dbg.value(metadata i8* %2, metadata !4317, metadata !DIExpression()), !dbg !4318
  %9 = icmp eq %struct.rbnode* %8, null, !dbg !4319
  br i1 %9, label %10, label %5, !dbg !4321

10:                                               ; preds = %5, %3
  ret void, !dbg !4327
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.rbnode* @z_rb_child(%struct.rbnode* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #8 !dbg !4328 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !4330, metadata !DIExpression()), !dbg !4332
  call void @llvm.dbg.value(metadata i8 %1, metadata !4331, metadata !DIExpression()), !dbg !4332
  %3 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %0, i8 noundef zeroext %1) #24, !dbg !4333
  ret %struct.rbnode* %3, !dbg !4334
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_rb_is_black(%struct.rbnode* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !4335 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !4339, metadata !DIExpression()), !dbg !4340
  %2 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef %0) #24, !dbg !4341
  %3 = zext i1 %2 to i32, !dbg !4341
  ret i32 %3, !dbg !4342
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @rb_contains(%struct.rbtree* nocapture noundef readonly %0, %struct.rbnode* noundef %1) local_unnamed_addr #1 !dbg !4343 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !4347, metadata !DIExpression()), !dbg !4350
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !4348, metadata !DIExpression()), !dbg !4350
  %3 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !4351
  %4 = load %struct.rbnode*, %struct.rbnode** %3, align 4, !dbg !4351
  call void @llvm.dbg.value(metadata %struct.rbnode* %4, metadata !4349, metadata !DIExpression()), !dbg !4350
  %5 = icmp ne %struct.rbnode* %4, null, !dbg !4352
  %6 = icmp ne %struct.rbnode* %4, %1, !dbg !4353
  %7 = and i1 %5, %6, !dbg !4353
  br i1 %7, label %8, label %19, !dbg !4354

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 1
  br label %10, !dbg !4354

10:                                               ; preds = %8, %10
  %11 = phi %struct.rbnode* [ %4, %8 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %11, metadata !4349, metadata !DIExpression()), !dbg !4350
  %12 = load i1 (%struct.rbnode*, %struct.rbnode*)*, i1 (%struct.rbnode*, %struct.rbnode*)** %9, align 4, !dbg !4355
  %13 = tail call zeroext i1 %12(%struct.rbnode* noundef nonnull %11, %struct.rbnode* noundef %1) #26, !dbg !4357
  %14 = zext i1 %13 to i8, !dbg !4357
  %15 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %11, i8 noundef zeroext %14) #24, !dbg !4358
  call void @llvm.dbg.value(metadata %struct.rbnode* %15, metadata !4349, metadata !DIExpression()), !dbg !4350
  %16 = icmp ne %struct.rbnode* %15, null, !dbg !4352
  %17 = icmp ne %struct.rbnode* %15, %1, !dbg !4353
  %18 = and i1 %16, %17, !dbg !4353
  br i1 %18, label %10, label %19, !dbg !4354, !llvm.loop !4359

19:                                               ; preds = %10, %2
  %20 = phi %struct.rbnode* [ %4, %2 ], [ %15, %10 ], !dbg !4350
  %21 = icmp eq %struct.rbnode* %20, %1, !dbg !4361
  ret i1 %21, !dbg !4362
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* nocapture noundef readonly %0, %struct._rb_foreach* nocapture noundef %1) local_unnamed_addr #12 !dbg !4363 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !4373, metadata !DIExpression()), !dbg !4376
  call void @llvm.dbg.value(metadata %struct._rb_foreach* %1, metadata !4374, metadata !DIExpression()), !dbg !4376
  %3 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !4377
  %4 = load %struct.rbnode*, %struct.rbnode** %3, align 4, !dbg !4377
  %5 = icmp eq %struct.rbnode* %4, null, !dbg !4379
  br i1 %5, label %48, label %6, !dbg !4380

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %1, i32 0, i32 2, !dbg !4381
  %8 = load i32, i32* %7, align 4, !dbg !4381
  %9 = icmp eq i32 %8, -1, !dbg !4383
  br i1 %9, label %10, label %12, !dbg !4384

10:                                               ; preds = %6
  %11 = tail call fastcc %struct.rbnode* @stack_left_limb(%struct.rbnode* noundef nonnull %4, %struct._rb_foreach* noundef nonnull %1) #24, !dbg !4385
  br label %48, !dbg !4387

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %1, i32 0, i32 0, !dbg !4388
  %14 = load %struct.rbnode**, %struct.rbnode*** %13, align 4, !dbg !4388
  %15 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %14, i32 %8, !dbg !4389
  %16 = load %struct.rbnode*, %struct.rbnode** %15, align 4, !dbg !4389
  %17 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %16, i8 noundef zeroext 1) #24, !dbg !4390
  call void @llvm.dbg.value(metadata %struct.rbnode* %17, metadata !4375, metadata !DIExpression()), !dbg !4376
  %18 = icmp eq %struct.rbnode* %17, null, !dbg !4391
  br i1 %18, label %21, label %19, !dbg !4393

19:                                               ; preds = %12
  %20 = tail call fastcc %struct.rbnode* @stack_left_limb(%struct.rbnode* noundef nonnull %17, %struct._rb_foreach* noundef nonnull %1) #24, !dbg !4394
  br label %48, !dbg !4396

21:                                               ; preds = %12
  %22 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %1, i32 0, i32 1, !dbg !4397
  %23 = load i8*, i8** %22, align 4, !dbg !4397
  %24 = getelementptr inbounds i8, i8* %23, i32 %8, !dbg !4399
  %25 = load i8, i8* %24, align 1, !dbg !4399
  %26 = icmp eq i8 %25, 0, !dbg !4400
  br i1 %26, label %31, label %27, !dbg !4401

27:                                               ; preds = %21
  %28 = add nsw i32 %8, -1, !dbg !4402
  store i32 %28, i32* %7, align 4, !dbg !4402
  %29 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %14, i32 %28, !dbg !4404
  %30 = load %struct.rbnode*, %struct.rbnode** %29, align 4, !dbg !4404
  br label %48, !dbg !4405

31:                                               ; preds = %21
  %32 = icmp sgt i32 %8, 0, !dbg !4406
  br i1 %32, label %33, label %41, !dbg !4407

33:                                               ; preds = %31, %37
  %34 = phi i32 [ %35, %37 ], [ %8, %31 ]
  %35 = add nsw i32 %34, -1, !dbg !4408
  store i32 %35, i32* %7, align 4, !dbg !4408
  %36 = icmp sgt i32 %34, 1, !dbg !4406
  br i1 %36, label %37, label %41, !dbg !4407, !llvm.loop !4410

37:                                               ; preds = %33
  %38 = getelementptr inbounds i8, i8* %23, i32 %35
  %39 = load i8, i8* %38, align 1, !dbg !4413
  %40 = icmp eq i8 %39, 0, !dbg !4414
  br i1 %40, label %33, label %44, !dbg !4411

41:                                               ; preds = %33, %31
  %42 = phi i32 [ %8, %31 ], [ 0, %33 ], !dbg !4415
  %43 = add nsw i32 %42, -1, !dbg !4416
  store i32 %43, i32* %7, align 4, !dbg !4416
  br label %48, !dbg !4417

44:                                               ; preds = %37
  %45 = add nsw i32 %34, -2, !dbg !4416
  store i32 %45, i32* %7, align 4, !dbg !4416
  %46 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %14, i32 %45, !dbg !4418
  %47 = load %struct.rbnode*, %struct.rbnode** %46, align 4, !dbg !4418
  br label %48, !dbg !4417

48:                                               ; preds = %41, %44, %2, %27, %19, %10
  %49 = phi %struct.rbnode* [ %11, %10 ], [ %20, %19 ], [ %30, %27 ], [ null, %2 ], [ %47, %44 ], [ null, %41 ], !dbg !4376
  ret %struct.rbnode* %49, !dbg !4419
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc %struct.rbnode* @stack_left_limb(%struct.rbnode* noundef %0, %struct._rb_foreach* nocapture noundef %1) unnamed_addr #12 !dbg !4420 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !4424, metadata !DIExpression()), !dbg !4426
  call void @llvm.dbg.value(metadata %struct._rb_foreach* %1, metadata !4425, metadata !DIExpression()), !dbg !4426
  %3 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %1, i32 0, i32 2, !dbg !4427
  %4 = load i32, i32* %3, align 4, !dbg !4428
  %5 = add nsw i32 %4, 1, !dbg !4428
  store i32 %5, i32* %3, align 4, !dbg !4428
  %6 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %1, i32 0, i32 0, !dbg !4429
  %7 = load %struct.rbnode**, %struct.rbnode*** %6, align 4, !dbg !4429
  %8 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %7, i32 %5, !dbg !4430
  store %struct.rbnode* %0, %struct.rbnode** %8, align 4, !dbg !4431
  %9 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %1, i32 0, i32 1, !dbg !4432
  %10 = load i8*, i8** %9, align 4, !dbg !4432
  %11 = load i32, i32* %3, align 4, !dbg !4433
  %12 = getelementptr inbounds i8, i8* %10, i32 %11, !dbg !4434
  store i8 0, i8* %12, align 1, !dbg !4435
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !4424, metadata !DIExpression()), !dbg !4426
  %13 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %0, i8 noundef zeroext 0) #24, !dbg !4436
  call void @llvm.dbg.value(metadata %struct.rbnode* %13, metadata !4424, metadata !DIExpression()), !dbg !4426
  %14 = icmp eq %struct.rbnode* %13, null, !dbg !4437
  br i1 %14, label %26, label %15, !dbg !4438

15:                                               ; preds = %2, %15
  %16 = phi %struct.rbnode* [ %24, %15 ], [ %13, %2 ]
  %17 = load i32, i32* %3, align 4, !dbg !4439
  %18 = add nsw i32 %17, 1, !dbg !4439
  store i32 %18, i32* %3, align 4, !dbg !4439
  %19 = load %struct.rbnode**, %struct.rbnode*** %6, align 4, !dbg !4441
  %20 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %19, i32 %18, !dbg !4442
  store %struct.rbnode* %16, %struct.rbnode** %20, align 4, !dbg !4443
  %21 = load i8*, i8** %9, align 4, !dbg !4444
  %22 = load i32, i32* %3, align 4, !dbg !4445
  %23 = getelementptr inbounds i8, i8* %21, i32 %22, !dbg !4446
  store i8 1, i8* %23, align 1, !dbg !4447
  call void @llvm.dbg.value(metadata %struct.rbnode* %16, metadata !4424, metadata !DIExpression()), !dbg !4426
  %24 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %16, i8 noundef zeroext 0) #24, !dbg !4436
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !4424, metadata !DIExpression()), !dbg !4426
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !4437
  br i1 %25, label %26, label %15, !dbg !4438, !llvm.loop !4448

26:                                               ; preds = %15, %2
  %27 = load %struct.rbnode**, %struct.rbnode*** %6, align 4, !dbg !4450
  %28 = load i32, i32* %3, align 4, !dbg !4451
  %29 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %27, i32 %28, !dbg !4452
  %30 = load %struct.rbnode*, %struct.rbnode** %29, align 4, !dbg !4452
  ret %struct.rbnode* %30, !dbg !4453
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !4454 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4459, metadata !DIExpression()), !dbg !4463
  call void @llvm.dbg.value(metadata i8* %1, metadata !4460, metadata !DIExpression()), !dbg !4463
  call void @llvm.dbg.value(metadata i8* %2, metadata !4461, metadata !DIExpression()), !dbg !4463
  call void @llvm.dbg.value(metadata i8* %3, metadata !4462, metadata !DIExpression()), !dbg !4463
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #26, !dbg !4464
  %5 = tail call fastcc %struct.k_thread* @k_current_get.20() #25, !dbg !4465
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !4466
  unreachable, !dbg !4467
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.20() unnamed_addr #5 !dbg !4468 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.21() #25, !dbg !4583
  ret %struct.k_thread* %1, !dbg !4584
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4585 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4589, metadata !DIExpression()), !dbg !4590
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4591, !srcloc !4593
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !4594
  ret void, !dbg !4595
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.21() unnamed_addr #5 !dbg !4596 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4597, !srcloc !4599
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !4600
  ret %struct.k_thread* %1, !dbg !4601
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4602 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4615, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4612, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i8* %1, metadata !4613, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i8* %2, metadata !4614, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i32 %4, metadata !4616, metadata !DIExpression()), !dbg !4743
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4744
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4744
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4617, metadata !DIExpression()), !dbg !4745
  call void @llvm.dbg.value(metadata i32 0, metadata !4621, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i1 undef, metadata !4623, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4743
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4746

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4746

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4747
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4615, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i8* %30, metadata !4614, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i32 %29, metadata !4621, metadata !DIExpression()), !dbg !4743
  %31 = load i8, i8* %30, align 1, !dbg !4748
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4746

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4748
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4749
  call void @llvm.dbg.value(metadata i8* %34, metadata !4614, metadata !DIExpression()), !dbg !4743
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #26, !dbg !4749
  call void @llvm.dbg.value(metadata i32 %35, metadata !4625, metadata !DIExpression()), !dbg !4750
  %36 = icmp slt i32 %35, 0, !dbg !4751
  %37 = add i32 %29, 1, !dbg !4749
  call void @llvm.dbg.value(metadata i32 undef, metadata !4621, metadata !DIExpression()), !dbg !4743
  br i1 %36, label %365, label %28, !llvm.loop !4753

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4755
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4630, metadata !DIExpression()), !dbg !4756
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4756
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4675, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4678, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.value(metadata i8* %30, metadata !4681, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.value(metadata i32 -1, metadata !4682, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.value(metadata i32 -1, metadata !4683, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.value(metadata i8* null, metadata !4684, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.value(metadata i8* %14, metadata !4685, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.value(metadata i8 0, metadata !4686, metadata !DIExpression()), !dbg !4757
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !4758
  call void @llvm.dbg.value(metadata i8* %39, metadata !4614, metadata !DIExpression()), !dbg !4743
  %40 = load i24, i24* %15, align 8, !dbg !4759
  %41 = and i24 %40, 256, !dbg !4759
  %42 = icmp eq i24 %41, 0, !dbg !4759
  br i1 %42, label %51, label %43, !dbg !4761

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4762
  call void @llvm.dbg.value(metadata i8* %44, metadata !4615, metadata !DIExpression()), !dbg !4743
  %45 = bitcast i8* %27 to i32*, !dbg !4762
  %46 = load i32, i32* %45, align 4, !dbg !4762
  call void @llvm.dbg.value(metadata i32 %46, metadata !4682, metadata !DIExpression()), !dbg !4757
  %47 = icmp slt i32 %46, 0, !dbg !4764
  br i1 %47, label %48, label %56, !dbg !4766

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4767
  store i24 %49, i24* %15, align 8, !dbg !4767
  %50 = sub nsw i32 0, %46, !dbg !4769
  call void @llvm.dbg.value(metadata i32 %50, metadata !4682, metadata !DIExpression()), !dbg !4757
  br label %56, !dbg !4770

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4771
  %53 = icmp eq i24 %52, 0, !dbg !4771
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4773
  br label %56, !dbg !4773

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4774
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4757
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4615, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i32 %58, metadata !4682, metadata !DIExpression()), !dbg !4757
  %60 = and i24 %57, 1024, !dbg !4774
  %61 = icmp eq i24 %60, 0, !dbg !4774
  br i1 %61, label %69, label %62, !dbg !4775

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4776
  call void @llvm.dbg.value(metadata i8* %63, metadata !4615, metadata !DIExpression()), !dbg !4743
  %64 = bitcast i8* %59 to i32*, !dbg !4776
  %65 = load i32, i32* %64, align 4, !dbg !4776
  call void @llvm.dbg.value(metadata i32 %65, metadata !4687, metadata !DIExpression()), !dbg !4777
  %66 = icmp slt i32 %65, 0, !dbg !4778
  br i1 %66, label %67, label %74, !dbg !4780

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4781
  store i24 %68, i24* %15, align 8, !dbg !4781
  br label %74, !dbg !4783

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4784
  %71 = icmp eq i24 %70, 0, !dbg !4784
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4786
  br label %74, !dbg !4786

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4787
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4757
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4757
  call void @llvm.dbg.value(metadata i8* %77, metadata !4615, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i32 %76, metadata !4683, metadata !DIExpression()), !dbg !4757
  store i32 0, i32* %16, align 4, !dbg !4788
  store i32 0, i32* %17, align 8, !dbg !4789
  %78 = lshr i24 %75, 16, !dbg !4787
  call void @llvm.dbg.value(metadata i24 %78, metadata !4690, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4757
  %79 = lshr i24 %75, 11, !dbg !4790
  %80 = and i24 %79, 15, !dbg !4790
  %81 = zext i24 %80 to i32, !dbg !4790
  call void @llvm.dbg.value(metadata i32 %81, metadata !4691, metadata !DIExpression()), !dbg !4757
  %82 = trunc i24 %78 to i3, !dbg !4791
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4791

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4792

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4795
  call void @llvm.dbg.value(metadata i8* %85, metadata !4615, metadata !DIExpression()), !dbg !4743
  %86 = bitcast i8* %77 to i32*, !dbg !4795
  %87 = load i32, i32* %86, align 4, !dbg !4795
  %88 = sext i32 %87 to i64, !dbg !4795
  store i64 %88, i64* %20, align 8, !dbg !4797
  br label %115, !dbg !4798

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4799
  call void @llvm.dbg.value(metadata i8* %90, metadata !4615, metadata !DIExpression()), !dbg !4743
  %91 = bitcast i8* %77 to i32*, !dbg !4799
  %92 = load i32, i32* %91, align 4, !dbg !4799
  %93 = sext i32 %92 to i64, !dbg !4799
  store i64 %93, i64* %20, align 8, !dbg !4802
  br label %115, !dbg !4803

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4804
  %96 = add i32 %95, 7, !dbg !4804
  %97 = and i32 %96, -8, !dbg !4804
  %98 = inttoptr i32 %97 to i8*, !dbg !4804
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4804
  call void @llvm.dbg.value(metadata i8* %99, metadata !4615, metadata !DIExpression()), !dbg !4743
  %100 = inttoptr i32 %97 to i64*, !dbg !4804
  %101 = load i64, i64* %100, align 8, !dbg !4804
  store i64 %101, i64* %20, align 8, !dbg !4805
  br label %115, !dbg !4806

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4807
  %104 = add i32 %103, 7, !dbg !4807
  %105 = and i32 %104, -8, !dbg !4807
  %106 = inttoptr i32 %105 to i8*, !dbg !4807
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4807
  call void @llvm.dbg.value(metadata i8* %107, metadata !4615, metadata !DIExpression()), !dbg !4743
  %108 = inttoptr i32 %105 to i64*, !dbg !4807
  %109 = load i64, i64* %108, align 8, !dbg !4807
  store i64 %109, i64* %20, align 8, !dbg !4808
  br label %115, !dbg !4809

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4810
  call void @llvm.dbg.value(metadata i8* %111, metadata !4615, metadata !DIExpression()), !dbg !4743
  %112 = bitcast i8* %77 to i32*, !dbg !4810
  %113 = load i32, i32* %112, align 4, !dbg !4810
  %114 = sext i32 %113 to i64, !dbg !4811
  store i64 %114, i64* %20, align 8, !dbg !4812
  br label %115, !dbg !4813

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4814
  call void @llvm.dbg.value(metadata i8* %117, metadata !4615, metadata !DIExpression()), !dbg !4743
  %118 = trunc i24 %79 to i4, !dbg !4815
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4815

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4816
  %121 = ashr exact i64 %120, 56, !dbg !4816
  store i64 %121, i64* %20, align 8, !dbg !4819
  br label %177, !dbg !4820

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4821
  %124 = ashr exact i64 %123, 48, !dbg !4821
  store i64 %124, i64* %20, align 8, !dbg !4824
  br label %177, !dbg !4825

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4826

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4829
  call void @llvm.dbg.value(metadata i8* %127, metadata !4615, metadata !DIExpression()), !dbg !4743
  %128 = bitcast i8* %77 to i32*, !dbg !4829
  %129 = load i32, i32* %128, align 4, !dbg !4829
  %130 = zext i32 %129 to i64, !dbg !4829
  store i64 %130, i64* %20, align 8, !dbg !4831
  br label %157, !dbg !4832

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4833
  call void @llvm.dbg.value(metadata i8* %132, metadata !4615, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i8* %132, metadata !4615, metadata !DIExpression()), !dbg !4743
  %133 = bitcast i8* %77 to i32*, !dbg !4833
  %134 = load i32, i32* %133, align 4, !dbg !4833
  %135 = zext i32 %134 to i64, !dbg !4833
  store i64 %135, i64* %20, align 8, !dbg !4833
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4835
  %138 = add i32 %137, 7, !dbg !4835
  %139 = and i32 %138, -8, !dbg !4835
  %140 = inttoptr i32 %139 to i8*, !dbg !4835
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4835
  call void @llvm.dbg.value(metadata i8* %141, metadata !4615, metadata !DIExpression()), !dbg !4743
  %142 = inttoptr i32 %139 to i64*, !dbg !4835
  %143 = load i64, i64* %142, align 8, !dbg !4835
  store i64 %143, i64* %20, align 8, !dbg !4836
  br label %157, !dbg !4837

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4838
  %146 = add i32 %145, 7, !dbg !4838
  %147 = and i32 %146, -8, !dbg !4838
  %148 = inttoptr i32 %147 to i8*, !dbg !4838
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4838
  call void @llvm.dbg.value(metadata i8* %149, metadata !4615, metadata !DIExpression()), !dbg !4743
  %150 = inttoptr i32 %147 to i64*, !dbg !4838
  %151 = load i64, i64* %150, align 8, !dbg !4838
  store i64 %151, i64* %20, align 8, !dbg !4839
  br label %157, !dbg !4840

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4841
  call void @llvm.dbg.value(metadata i8* %153, metadata !4615, metadata !DIExpression()), !dbg !4743
  %154 = bitcast i8* %77 to i32*, !dbg !4841
  %155 = load i32, i32* %154, align 4, !dbg !4841
  %156 = zext i32 %155 to i64, !dbg !4842
  store i64 %156, i64* %20, align 8, !dbg !4843
  br label %157, !dbg !4844

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4845
  call void @llvm.dbg.value(metadata i8* %159, metadata !4615, metadata !DIExpression()), !dbg !4743
  %160 = trunc i24 %79 to i4, !dbg !4846
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4846

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4847
  store i64 %162, i64* %20, align 8, !dbg !4850
  br label %177, !dbg !4851

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4852
  store i64 %164, i64* %20, align 8, !dbg !4855
  br label %177, !dbg !4856

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4857
  %167 = add i32 %166, 7, !dbg !4857
  %168 = and i32 %167, -8, !dbg !4857
  %169 = inttoptr i32 %168 to i8*, !dbg !4857
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4857
  call void @llvm.dbg.value(metadata i8* %170, metadata !4615, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i8* %170, metadata !4615, metadata !DIExpression()), !dbg !4743
  %171 = inttoptr i32 %168 to double*, !dbg !4857
  %172 = load double, double* %171, align 8, !dbg !4857
  store double %172, double* %19, align 8, !dbg !4857
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4861
  call void @llvm.dbg.value(metadata i8* %174, metadata !4615, metadata !DIExpression()), !dbg !4743
  %175 = bitcast i8* %77 to i8**, !dbg !4861
  %176 = load i8*, i8** %175, align 4, !dbg !4861
  store i8* %176, i8** %18, align 8, !dbg !4864
  br label %177, !dbg !4865

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4757
  call void @llvm.dbg.value(metadata i8* %178, metadata !4615, metadata !DIExpression()), !dbg !4743
  %179 = and i24 %75, 3, !dbg !4866
  %180 = icmp eq i24 %179, 0, !dbg !4866
  br i1 %180, label %185, label %181, !dbg !4866

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !4867
  call void @llvm.dbg.value(metadata i32 %182, metadata !4692, metadata !DIExpression()), !dbg !4868
  %183 = icmp slt i32 %182, 0, !dbg !4869
  %184 = add i32 %182, %29, !dbg !4867
  call void @llvm.dbg.value(metadata i32 undef, metadata !4621, metadata !DIExpression()), !dbg !4743
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4871
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4872

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #26, !dbg !4873
  call void @llvm.dbg.value(metadata i32 %188, metadata !4696, metadata !DIExpression()), !dbg !4874
  %189 = icmp slt i32 %188, 0, !dbg !4875
  %190 = add i32 %29, 1, !dbg !4873
  call void @llvm.dbg.value(metadata i32 undef, metadata !4621, metadata !DIExpression()), !dbg !4743
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4877
  call void @llvm.dbg.value(metadata i8* %192, metadata !4684, metadata !DIExpression()), !dbg !4757
  %193 = icmp sgt i32 %76, -1, !dbg !4878
  br i1 %193, label %194, label %196, !dbg !4880

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #26, !dbg !4881
  call void @llvm.dbg.value(metadata i32 %195, metadata !4699, metadata !DIExpression()), !dbg !4883
  br label %241, !dbg !4884

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #26, !dbg !4885
  call void @llvm.dbg.value(metadata i32 %197, metadata !4699, metadata !DIExpression()), !dbg !4883
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4684, metadata !DIExpression()), !dbg !4757
  %199 = load i64, i64* %20, align 8, !dbg !4887
  %200 = trunc i64 %199 to i8, !dbg !4888
  store i8 %200, i8* %10, align 1, !dbg !4889
  call void @llvm.dbg.value(metadata i8* %23, metadata !4685, metadata !DIExpression()), !dbg !4757
  br label %245, !dbg !4890

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4891
  %203 = icmp eq i24 %202, 0, !dbg !4891
  %204 = trunc i24 %75 to i8, !dbg !4893
  %205 = shl i8 %204, 1, !dbg !4893
  %206 = and i8 %205, 32, !dbg !4893
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4893
  call void @llvm.dbg.value(metadata i8 %207, metadata !4686, metadata !DIExpression()), !dbg !4757
  %208 = load i64, i64* %20, align 8, !dbg !4894
  call void @llvm.dbg.value(metadata i64 %208, metadata !4622, metadata !DIExpression()), !dbg !4743
  %209 = icmp slt i64 %208, 0, !dbg !4895
  br i1 %209, label %210, label %212, !dbg !4897

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4686, metadata !DIExpression()), !dbg !4757
  %211 = sub nsw i64 0, %208, !dbg !4898
  store i64 %211, i64* %20, align 8, !dbg !4900
  br label %212, !dbg !4901

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4757
  call void @llvm.dbg.value(metadata i8 %213, metadata !4686, metadata !DIExpression()), !dbg !4757
  %214 = load i64, i64* %20, align 8, !dbg !4902
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4903
  call void @llvm.dbg.value(metadata i8* %215, metadata !4684, metadata !DIExpression()), !dbg !4757
  br label %216, !dbg !4904

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4905
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4906
  call void @llvm.dbg.value(metadata i8* %218, metadata !4684, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.value(metadata i8 %217, metadata !4686, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.label(metadata !4742), !dbg !4907
  %219 = icmp sgt i32 %76, -1, !dbg !4908
  br i1 %219, label %222, label %220, !dbg !4909

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4910
  br label %245, !dbg !4909

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4912
  %224 = sub i32 %22, %223, !dbg !4912
  call void @llvm.dbg.value(metadata i32 %224, metadata !4701, metadata !DIExpression()), !dbg !4913
  %225 = load i24, i24* %15, align 8, !dbg !4914
  %226 = and i24 %225, -65, !dbg !4914
  store i24 %226, i24* %15, align 8, !dbg !4914
  %227 = icmp ugt i32 %76, %224, !dbg !4915
  br i1 %227, label %228, label %245, !dbg !4917

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4918
  store i32 %229, i32* %16, align 4, !dbg !4920
  br label %245, !dbg !4921

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4922
  %232 = icmp eq i8* %231, null, !dbg !4924
  br i1 %232, label %245, label %233, !dbg !4925

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4926
  %235 = zext i32 %234 to i64, !dbg !4926
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4928
  call void @llvm.dbg.value(metadata i8* %236, metadata !4684, metadata !DIExpression()), !dbg !4757
  %237 = load i24, i24* %15, align 8, !dbg !4929
  %238 = or i24 %237, 1048576, !dbg !4929
  store i24 %238, i24* %15, align 8, !dbg !4929
  store i8 120, i8* %21, align 1, !dbg !4930
  br label %216, !dbg !4931

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4932
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !4935
  br label %363, !dbg !4936

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4937
  call void @llvm.dbg.value(metadata i32 %242, metadata !4699, metadata !DIExpression()), !dbg !4883
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4938
  call void @llvm.dbg.value(metadata i32 -1, metadata !4683, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.value(metadata i32 %29, metadata !4621, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i8* %192, metadata !4684, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.value(metadata i8* %243, metadata !4685, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.value(metadata i8 0, metadata !4686, metadata !DIExpression()), !dbg !4757
  %244 = icmp eq i8* %192, null, !dbg !4939
  br i1 %244, label %363, label %245, !dbg !4941, !llvm.loop !4753

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4910
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4704, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4757
  call void @llvm.dbg.value(metadata i32 0, metadata !4705, metadata !DIExpression()), !dbg !4757
  %250 = zext i8 %249 to i32, !dbg !4942
  %251 = icmp eq i8 %249, 0, !dbg !4944
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4704, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4757
  call void @llvm.dbg.value(metadata i32 undef, metadata !4704, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4704, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4757
  call void @llvm.dbg.value(metadata i32 undef, metadata !4704, metadata !DIExpression()), !dbg !4757
  %252 = icmp sgt i32 %58, 0, !dbg !4945
  br i1 %252, label %253, label %302, !dbg !4946

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4910
  %255 = icmp eq i24 %254, 0, !dbg !4910
  %256 = ptrtoint i8* %248 to i32, !dbg !4947
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4704, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4757
  %257 = ptrtoint i8* %247 to i32, !dbg !4947
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4704, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4757
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4704, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4757
  %258 = xor i1 %251, true, !dbg !4948
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4704, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4757
  %259 = sext i1 %258 to i32, !dbg !4948
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4704, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4757
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4704, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4757
  %260 = lshr i24 %246, 19, !dbg !4949
  %261 = and i24 %260, 1, !dbg !4949
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4949
  %263 = zext i24 %262 to i32, !dbg !4949
  %264 = add i32 %257, %259, !dbg !4949
  %265 = add i32 %256, %263, !dbg !4949
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4704, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4757
  %266 = and i24 %246, 4194304, !dbg !4950
  %267 = icmp eq i24 %266, 0, !dbg !4950
  %268 = load i32, i32* %16, align 4, !dbg !4952
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4704, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4757
  call void @llvm.dbg.value(metadata i32 undef, metadata !4704, metadata !DIExpression()), !dbg !4757
  %269 = load i32, i32* %17, align 8, !dbg !4953
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4953
  call void @llvm.dbg.value(metadata i32 undef, metadata !4704, metadata !DIExpression()), !dbg !4757
  %271 = add i32 %264, %58, !dbg !4953
  %272 = add i32 %265, %268, !dbg !4953
  %273 = add i32 %272, %270, !dbg !4954
  %274 = sub i32 %271, %273, !dbg !4954
  call void @llvm.dbg.value(metadata i32 %274, metadata !4682, metadata !DIExpression()), !dbg !4757
  %275 = and i24 %246, 4, !dbg !4955
  %276 = icmp eq i24 %275, 0, !dbg !4955
  br i1 %276, label %277, label %302, !dbg !4956

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4706, metadata !DIExpression()), !dbg !4957
  %278 = and i24 %246, 64, !dbg !4958
  %279 = icmp eq i24 %278, 0, !dbg !4958
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4959
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4959
  %282 = select i1 %279, i32 32, i32 48, !dbg !4959
  br i1 %280, label %287, label %283, !dbg !4959

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #26, !dbg !4960
  call void @llvm.dbg.value(metadata i32 %284, metadata !4711, metadata !DIExpression()), !dbg !4961
  %285 = icmp slt i32 %284, 0, !dbg !4962
  %286 = add i32 %29, 1, !dbg !4960
  call void @llvm.dbg.value(metadata i32 undef, metadata !4621, metadata !DIExpression()), !dbg !4743
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4757
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4747
  call void @llvm.dbg.value(metadata i32 %290, metadata !4621, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i8 undef, metadata !4706, metadata !DIExpression()), !dbg !4957
  call void @llvm.dbg.value(metadata i8 %288, metadata !4686, metadata !DIExpression()), !dbg !4757
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4964
  %292 = add i32 %291, -1, !dbg !4964
  br label %293, !dbg !4964

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4965
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4747
  call void @llvm.dbg.value(metadata i32 %295, metadata !4621, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i32 %294, metadata !4682, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.value(metadata i32 %294, metadata !4682, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4757
  %296 = icmp sgt i32 %294, 0, !dbg !4966
  br i1 %296, label %297, label %302, !dbg !4964

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4967
  call void @llvm.dbg.value(metadata i32 %298, metadata !4682, metadata !DIExpression()), !dbg !4757
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #26, !dbg !4968
  call void @llvm.dbg.value(metadata i32 %299, metadata !4717, metadata !DIExpression()), !dbg !4969
  %300 = icmp slt i32 %299, 0, !dbg !4970
  %301 = add i32 %295, 1, !dbg !4968
  call void @llvm.dbg.value(metadata i32 undef, metadata !4621, metadata !DIExpression()), !dbg !4743
  br i1 %300, label %361, label %293, !llvm.loop !4972

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4757
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4757
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4747
  call void @llvm.dbg.value(metadata i32 %305, metadata !4621, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i32 %304, metadata !4682, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.value(metadata i8 %303, metadata !4686, metadata !DIExpression()), !dbg !4757
  %306 = icmp eq i8 %303, 0, !dbg !4974
  br i1 %306, label %312, label %307, !dbg !4975

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4976
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #26, !dbg !4977
  call void @llvm.dbg.value(metadata i32 %309, metadata !4720, metadata !DIExpression()), !dbg !4978
  %310 = icmp slt i32 %309, 0, !dbg !4979
  %311 = add i32 %305, 1, !dbg !4977
  call void @llvm.dbg.value(metadata i32 undef, metadata !4621, metadata !DIExpression()), !dbg !4743
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4747
  call void @llvm.dbg.value(metadata i32 %313, metadata !4621, metadata !DIExpression()), !dbg !4743
  %314 = lshr i24 %246, 20, !dbg !4981
  %315 = lshr i24 %246, 19, !dbg !4982
  %316 = or i24 %314, %315, !dbg !4983
  %317 = and i24 %316, 1, !dbg !4983
  %318 = icmp eq i24 %317, 0, !dbg !4983
  br i1 %318, label %323, label %319, !dbg !4984

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !4985
  call void @llvm.dbg.value(metadata i32 %320, metadata !4724, metadata !DIExpression()), !dbg !4986
  %321 = icmp slt i32 %320, 0, !dbg !4987
  %322 = add i32 %313, 1, !dbg !4985
  call void @llvm.dbg.value(metadata i32 undef, metadata !4621, metadata !DIExpression()), !dbg !4743
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4747
  call void @llvm.dbg.value(metadata i32 %324, metadata !4621, metadata !DIExpression()), !dbg !4743
  %325 = and i24 %246, 1048576, !dbg !4989
  %326 = icmp eq i24 %325, 0, !dbg !4989
  br i1 %326, label %333, label %327, !dbg !4990

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4991
  %329 = zext i8 %328 to i32, !dbg !4991
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #26, !dbg !4991
  call void @llvm.dbg.value(metadata i32 %330, metadata !4730, metadata !DIExpression()), !dbg !4992
  %331 = icmp slt i32 %330, 0, !dbg !4993
  %332 = add i32 %324, 1, !dbg !4991
  call void @llvm.dbg.value(metadata i32 undef, metadata !4621, metadata !DIExpression()), !dbg !4743
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4747
  call void @llvm.dbg.value(metadata i32 %334, metadata !4621, metadata !DIExpression()), !dbg !4743
  %335 = load i32, i32* %16, align 4, !dbg !4995
  call void @llvm.dbg.value(metadata i32 %335, metadata !4705, metadata !DIExpression()), !dbg !4757
  br label %336, !dbg !4996

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4997
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4747
  call void @llvm.dbg.value(metadata i32 %338, metadata !4621, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i32 %337, metadata !4705, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4757
  %339 = icmp sgt i32 %337, 0, !dbg !4998
  br i1 %339, label %340, label %345, !dbg !4996

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4999
  call void @llvm.dbg.value(metadata i32 %341, metadata !4705, metadata !DIExpression()), !dbg !4757
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !5000
  call void @llvm.dbg.value(metadata i32 %342, metadata !4734, metadata !DIExpression()), !dbg !5001
  %343 = icmp slt i32 %342, 0, !dbg !5002
  %344 = add i32 %338, 1, !dbg !5000
  call void @llvm.dbg.value(metadata i32 undef, metadata !4621, metadata !DIExpression()), !dbg !4743
  br i1 %343, label %361, label %336, !llvm.loop !5004

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !5006
  call void @llvm.dbg.value(metadata i32 %346, metadata !4737, metadata !DIExpression()), !dbg !5007
  %347 = icmp slt i32 %346, 0, !dbg !5008
  call void @llvm.dbg.value(metadata i32 undef, metadata !4621, metadata !DIExpression()), !dbg !4743
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5006
  call void @llvm.dbg.value(metadata i32 %349, metadata !4621, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i32 %304, metadata !4682, metadata !DIExpression()), !dbg !4757
  %350 = icmp sgt i32 %304, 0, !dbg !5010
  br i1 %350, label %351, label %363, !dbg !5011

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5011
  %353 = add i32 %352, %338, !dbg !5011
  br label %354, !dbg !5011

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4621, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i32 %355, metadata !4682, metadata !DIExpression()), !dbg !4757
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #26, !dbg !5012
  call void @llvm.dbg.value(metadata i32 %356, metadata !4739, metadata !DIExpression()), !dbg !5013
  %357 = icmp slt i32 %356, 0, !dbg !5014
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5016
  call void @llvm.dbg.value(metadata i32 undef, metadata !4621, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4743
  call void @llvm.dbg.value(metadata i32 %359, metadata !4682, metadata !DIExpression()), !dbg !4757
  %360 = icmp sgt i32 %355, 1, !dbg !5010
  br i1 %360, label %354, label %363, !dbg !5011, !llvm.loop !5017

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4621, metadata !DIExpression()), !dbg !4743
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4754
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4747
  call void @llvm.dbg.value(metadata i32 %364, metadata !4621, metadata !DIExpression()), !dbg !4743
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4754
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4743
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5019
  ret i32 %366, !dbg !5019
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #12 !dbg !5020 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5024, metadata !DIExpression()), !dbg !5026
  call void @llvm.dbg.value(metadata i8* %1, metadata !5025, metadata !DIExpression()), !dbg !5026
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5027
  store i24 0, i24* %3, align 4, !dbg !5027
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5027
  store i8 0, i8* %4, align 1, !dbg !5027
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5027
  store i32 0, i32* %5, align 4, !dbg !5027
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5027
  store i32 0, i32* %6, align 4, !dbg !5027
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5028
  call void @llvm.dbg.value(metadata i8* %7, metadata !5025, metadata !DIExpression()), !dbg !5026
  %8 = load i8, i8* %7, align 1, !dbg !5029
  %9 = icmp eq i8 %8, 37, !dbg !5031
  br i1 %9, label %10, label %12, !dbg !5032

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5033
  call void @llvm.dbg.value(metadata i8* %11, metadata !5025, metadata !DIExpression()), !dbg !5026
  store i8 37, i8* %4, align 1, !dbg !5035
  br label %18, !dbg !5036

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !5037
  call void @llvm.dbg.value(metadata i8* %13, metadata !5025, metadata !DIExpression()), !dbg !5026
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !5038
  call void @llvm.dbg.value(metadata i8* %14, metadata !5025, metadata !DIExpression()), !dbg !5026
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !5039
  call void @llvm.dbg.value(metadata i8* %15, metadata !5025, metadata !DIExpression()), !dbg !5026
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !5040
  call void @llvm.dbg.value(metadata i8* %16, metadata !5025, metadata !DIExpression()), !dbg !5026
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !5041
  call void @llvm.dbg.value(metadata i8* %17, metadata !5025, metadata !DIExpression()), !dbg !5026
  br label %18, !dbg !5042

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5026
  ret i8* %19, !dbg !5043
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5044 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5048, metadata !DIExpression()), !dbg !5055
  call void @llvm.dbg.value(metadata i8* %1, metadata !5049, metadata !DIExpression()), !dbg !5055
  call void @llvm.dbg.value(metadata i8* %2, metadata !5050, metadata !DIExpression()), !dbg !5055
  call void @llvm.dbg.value(metadata i8* %3, metadata !5051, metadata !DIExpression()), !dbg !5055
  call void @llvm.dbg.value(metadata i32 0, metadata !5052, metadata !DIExpression()), !dbg !5055
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5056

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5057
  call void @llvm.dbg.value(metadata i32 %9, metadata !5052, metadata !DIExpression()), !dbg !5055
  call void @llvm.dbg.value(metadata i8* %8, metadata !5050, metadata !DIExpression()), !dbg !5055
  %10 = icmp ult i8* %8, %3, !dbg !5058
  br i1 %10, label %11, label %13, !dbg !5059

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5060
  br label %17, !dbg !5059

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5061

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5062
  %16 = icmp eq i8 %15, 0, !dbg !5061
  br i1 %16, label %24, label %17, !dbg !5056

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5060
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5063
  call void @llvm.dbg.value(metadata i8* %19, metadata !5050, metadata !DIExpression()), !dbg !5055
  %20 = zext i8 %18 to i32, !dbg !5064
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #26, !dbg !5065
  call void @llvm.dbg.value(metadata i32 %21, metadata !5053, metadata !DIExpression()), !dbg !5066
  %22 = icmp slt i32 %21, 0, !dbg !5067
  %23 = add i32 %9, 1, !dbg !5069
  call void @llvm.dbg.value(metadata i32 undef, metadata !5052, metadata !DIExpression()), !dbg !5055
  br i1 %22, label %24, label %7, !llvm.loop !5070

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5055
  ret i32 %25, !dbg !5072
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #12 !dbg !5073 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5077, metadata !DIExpression()), !dbg !5087
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5078, metadata !DIExpression()), !dbg !5087
  call void @llvm.dbg.value(metadata i8* %2, metadata !5079, metadata !DIExpression()), !dbg !5087
  call void @llvm.dbg.value(metadata i8* %3, metadata !5080, metadata !DIExpression()), !dbg !5087
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5088
  %6 = load i8, i8* %5, align 1, !dbg !5088
  %7 = zext i8 %6 to i32, !dbg !5089
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !5090
  %9 = icmp eq i32 %8, 0, !dbg !5090
  call void @llvm.dbg.value(metadata i1 %9, metadata !5081, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5087
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !5091
  call void @llvm.dbg.value(metadata i32 %10, metadata !5082, metadata !DIExpression()), !dbg !5087
  %11 = ptrtoint i8* %3 to i32, !dbg !5092
  %12 = ptrtoint i8* %2 to i32, !dbg !5092
  %13 = sub i32 %11, %12, !dbg !5092
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5093
  call void @llvm.dbg.value(metadata i8* %14, metadata !5084, metadata !DIExpression()), !dbg !5087
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5094

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5087
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5077, metadata !DIExpression()), !dbg !5087
  call void @llvm.dbg.value(metadata i8* %18, metadata !5084, metadata !DIExpression()), !dbg !5087
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5095
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5096
  call void @llvm.dbg.value(metadata i32 %25, metadata !5085, metadata !DIExpression()), !dbg !5097
  %26 = icmp ult i32 %25, 10, !dbg !5098
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5099
  %28 = add i32 %27, %25, !dbg !5097
  %29 = trunc i32 %28 to i8, !dbg !5099
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5100
  call void @llvm.dbg.value(metadata i8* %30, metadata !5084, metadata !DIExpression()), !dbg !5087
  store i8 %29, i8* %30, align 1, !dbg !5101
  call void @llvm.dbg.value(metadata i64 %22, metadata !5077, metadata !DIExpression()), !dbg !5087
  %31 = icmp uge i64 %19, %15, !dbg !5102
  %32 = icmp ugt i8* %30, %2, !dbg !5103
  %33 = and i1 %31, %32, !dbg !5103
  br i1 %33, label %17, label %34, !dbg !5104, !llvm.loop !5105

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5107
  %36 = load i24, i24* %35, align 4, !dbg !5107
  %37 = and i24 %36, 32, !dbg !5107
  %38 = icmp eq i24 %37, 0, !dbg !5107
  br i1 %38, label %44, label %39, !dbg !5109

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5110

40:                                               ; preds = %39
  br label %41, !dbg !5112

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5116
  store i24 %43, i24* %35, align 4, !dbg !5116
  br label %44, !dbg !5117

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5117
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #10 !dbg !5118 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5124, metadata !DIExpression()), !dbg !5127
  call void @llvm.dbg.value(metadata i8* %1, metadata !5125, metadata !DIExpression()), !dbg !5127
  call void @llvm.dbg.value(metadata i32 %2, metadata !5126, metadata !DIExpression()), !dbg !5127
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5128
  %5 = load i24, i24* %4, align 4, !dbg !5128
  %6 = lshr i24 %5, 11, !dbg !5128
  %7 = and i24 %6, 15, !dbg !5128
  %8 = zext i24 %7 to i32, !dbg !5128
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5129

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5130
  store i32 %2, i32* %10, align 4, !dbg !5132
  br label %28, !dbg !5133

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5134
  store i8 %12, i8* %1, align 1, !dbg !5135
  br label %28, !dbg !5136

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5137
  %15 = bitcast i8* %1 to i16*, !dbg !5138
  store i16 %14, i16* %15, align 2, !dbg !5139
  br label %28, !dbg !5140

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5141
  store i32 %2, i32* %17, align 4, !dbg !5142
  br label %28, !dbg !5143

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5144
  %20 = bitcast i8* %1 to i64*, !dbg !5145
  store i64 %19, i64* %20, align 8, !dbg !5146
  br label %28, !dbg !5147

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5148
  %23 = bitcast i8* %1 to i64*, !dbg !5149
  store i64 %22, i64* %23, align 8, !dbg !5150
  br label %28, !dbg !5151

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5152
  store i32 %2, i32* %25, align 4, !dbg !5153
  br label %28, !dbg !5154

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5155
  store i32 %2, i32* %27, align 4, !dbg !5156
  br label %28, !dbg !5157

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5158
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !5159 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5162, metadata !DIExpression()), !dbg !5163
  %2 = add i32 %0, -65, !dbg !5164
  %3 = icmp ult i32 %2, 26, !dbg !5165
  %4 = zext i1 %3 to i32, !dbg !5165
  ret i32 %4, !dbg !5166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !5167 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5171, metadata !DIExpression()), !dbg !5172
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5173

2:                                                ; preds = %1
  br label %4, !dbg !5174

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5176

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5177
  ret i32 %5, !dbg !5178
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #12 !dbg !5179 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5181, metadata !DIExpression()), !dbg !5184
  call void @llvm.dbg.value(metadata i8* %1, metadata !5182, metadata !DIExpression()), !dbg !5184
  call void @llvm.dbg.value(metadata i8 1, metadata !5183, metadata !DIExpression()), !dbg !5184
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5185

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5183, metadata !DIExpression()), !dbg !5184
  call void @llvm.dbg.value(metadata i8* %5, metadata !5182, metadata !DIExpression()), !dbg !5184
  %6 = load i8, i8* %5, align 1, !dbg !5186
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5188

7:                                                ; preds = %4
  br label %11, !dbg !5189

8:                                                ; preds = %4
  br label %11, !dbg !5191

9:                                                ; preds = %4
  br label %11, !dbg !5192

10:                                               ; preds = %4
  br label %11, !dbg !5193

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5194
  %14 = or i24 %13, %12, !dbg !5194
  store i24 %14, i24* %3, align 4, !dbg !5194
  call void @llvm.dbg.value(metadata i8 poison, metadata !5183, metadata !DIExpression()), !dbg !5184
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5182, metadata !DIExpression()), !dbg !5184
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5183, metadata !DIExpression()), !dbg !5184
  call void @llvm.dbg.value(metadata i8* %15, metadata !5182, metadata !DIExpression()), !dbg !5184
  %17 = load i24, i24* %3, align 4, !dbg !5195
  %18 = and i24 %17, 68, !dbg !5197
  %19 = icmp eq i24 %18, 68, !dbg !5197
  br i1 %19, label %20, label %22, !dbg !5197

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5198
  store i24 %21, i24* %3, align 4, !dbg !5198
  br label %22, !dbg !5200

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5201
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #12 !dbg !5202 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5204, metadata !DIExpression()), !dbg !5208
  call void @llvm.dbg.value(metadata i8* %1, metadata !5205, metadata !DIExpression()), !dbg !5208
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5209
  %5 = load i24, i24* %4, align 4, !dbg !5210
  %6 = or i24 %5, 128, !dbg !5210
  store i24 %6, i24* %4, align 4, !dbg !5210
  call void @llvm.dbg.value(metadata i8* %1, metadata !5205, metadata !DIExpression()), !dbg !5208
  %7 = load i8, i8* %1, align 1, !dbg !5211
  %8 = icmp eq i8 %7, 42, !dbg !5213
  br i1 %8, label %9, label %12, !dbg !5214

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5215
  store i24 %10, i24* %4, align 4, !dbg !5215
  call void @llvm.dbg.value(metadata i8* %1, metadata !5205, metadata !DIExpression()), !dbg !5208
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5217
  call void @llvm.dbg.value(metadata i8* %11, metadata !5205, metadata !DIExpression()), !dbg !5208
  store i8* %11, i8** %3, align 4, !dbg !5217
  br label %29, !dbg !5218

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5206, metadata !DIExpression()), !dbg !5208
  call void @llvm.dbg.value(metadata i8** %3, metadata !5205, metadata !DIExpression(DW_OP_deref)), !dbg !5208
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5219
  call void @llvm.dbg.value(metadata i32 %13, metadata !5207, metadata !DIExpression()), !dbg !5208
  %14 = load i8*, i8** %3, align 4, !dbg !5220
  call void @llvm.dbg.value(metadata i8* %14, metadata !5205, metadata !DIExpression()), !dbg !5208
  %15 = icmp eq i8* %14, %1, !dbg !5222
  br i1 %15, label %29, label %16, !dbg !5223

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5224
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5226
  store i32 %13, i32* %18, align 4, !dbg !5227
  %19 = lshr i32 %13, 31, !dbg !5228
  %20 = lshr i24 %17, 1, !dbg !5229
  %21 = and i24 %20, 1, !dbg !5229
  %22 = zext i24 %21 to i32, !dbg !5229
  %23 = or i32 %19, %22, !dbg !5229
  %24 = trunc i32 %23 to i24, !dbg !5229
  %25 = shl nuw nsw i24 %24, 1, !dbg !5229
  %26 = and i24 %17, -131, !dbg !5229
  %27 = or i24 %26, 128, !dbg !5229
  %28 = or i24 %25, %27, !dbg !5229
  store i24 %28, i24* %4, align 4, !dbg !5229
  br label %29, !dbg !5230

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5208
  ret i8* %30, !dbg !5231
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #12 !dbg !5232 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5234, metadata !DIExpression()), !dbg !5237
  call void @llvm.dbg.value(metadata i8* %1, metadata !5235, metadata !DIExpression()), !dbg !5237
  %4 = load i8, i8* %1, align 1, !dbg !5238
  %5 = icmp eq i8 %4, 46, !dbg !5239
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5240
  %7 = load i24, i24* %6, align 4, !dbg !5241
  %8 = select i1 %5, i24 512, i24 0, !dbg !5241
  %9 = and i24 %7, -513, !dbg !5241
  %10 = or i24 %9, %8, !dbg !5241
  store i24 %10, i24* %6, align 4, !dbg !5241
  br i1 %5, label %11, label %32, !dbg !5242

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5235, metadata !DIExpression()), !dbg !5237
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5243
  call void @llvm.dbg.value(metadata i8* %12, metadata !5235, metadata !DIExpression()), !dbg !5237
  store i8* %12, i8** %3, align 4, !dbg !5243
  %13 = load i8, i8* %12, align 1, !dbg !5244
  %14 = icmp eq i8 %13, 42, !dbg !5246
  br i1 %14, label %15, label %18, !dbg !5247

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5248
  store i24 %16, i24* %6, align 4, !dbg !5248
  call void @llvm.dbg.value(metadata i8* %12, metadata !5235, metadata !DIExpression()), !dbg !5237
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5250
  call void @llvm.dbg.value(metadata i8* %17, metadata !5235, metadata !DIExpression()), !dbg !5237
  store i8* %17, i8** %3, align 4, !dbg !5250
  br label %32, !dbg !5251

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5235, metadata !DIExpression(DW_OP_deref)), !dbg !5237
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5252
  call void @llvm.dbg.value(metadata i32 %19, metadata !5236, metadata !DIExpression()), !dbg !5237
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5253
  store i32 %19, i32* %20, align 4, !dbg !5254
  %21 = lshr i32 %19, 31, !dbg !5255
  %22 = load i24, i24* %6, align 4, !dbg !5256
  %23 = lshr i24 %22, 1, !dbg !5256
  %24 = and i24 %23, 1, !dbg !5256
  %25 = zext i24 %24 to i32, !dbg !5256
  %26 = or i32 %21, %25, !dbg !5256
  %27 = trunc i32 %26 to i24, !dbg !5256
  %28 = shl nuw nsw i24 %27, 1, !dbg !5256
  %29 = and i24 %22, -3, !dbg !5256
  %30 = or i24 %28, %29, !dbg !5256
  store i24 %30, i24* %6, align 4, !dbg !5256
  %31 = load i8*, i8** %3, align 4, !dbg !5257
  call void @llvm.dbg.value(metadata i8* %31, metadata !5235, metadata !DIExpression()), !dbg !5237
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5237
  ret i8* %33, !dbg !5258
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #10 !dbg !5259 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5261, metadata !DIExpression()), !dbg !5263
  call void @llvm.dbg.value(metadata i8* %1, metadata !5262, metadata !DIExpression()), !dbg !5263
  %3 = load i8, i8* %1, align 1, !dbg !5264
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5265

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5266
  call void @llvm.dbg.value(metadata i8* %5, metadata !5262, metadata !DIExpression()), !dbg !5263
  %6 = load i8, i8* %5, align 1, !dbg !5269
  %7 = icmp eq i8 %6, 104, !dbg !5270
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5271
  %9 = load i24, i24* %8, align 4, !dbg !5271
  %10 = and i24 %9, -30721, !dbg !5271
  br i1 %7, label %11, label %14, !dbg !5272

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5273
  store i24 %12, i24* %8, align 4, !dbg !5273
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5275
  call void @llvm.dbg.value(metadata i8* %13, metadata !5262, metadata !DIExpression()), !dbg !5263
  br label %56, !dbg !5276

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5277
  store i24 %15, i24* %8, align 4, !dbg !5277
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5279
  call void @llvm.dbg.value(metadata i8* %17, metadata !5262, metadata !DIExpression()), !dbg !5263
  %18 = load i8, i8* %17, align 1, !dbg !5281
  %19 = icmp eq i8 %18, 108, !dbg !5282
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5283
  %21 = load i24, i24* %20, align 4, !dbg !5283
  %22 = and i24 %21, -30721, !dbg !5283
  br i1 %19, label %23, label %26, !dbg !5284

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5285
  store i24 %24, i24* %20, align 4, !dbg !5285
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5287
  call void @llvm.dbg.value(metadata i8* %25, metadata !5262, metadata !DIExpression()), !dbg !5263
  br label %56, !dbg !5288

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5289
  store i24 %27, i24* %20, align 4, !dbg !5289
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5291
  %30 = load i24, i24* %29, align 4, !dbg !5292
  %31 = and i24 %30, -30721, !dbg !5292
  %32 = or i24 %31, 10240, !dbg !5292
  store i24 %32, i24* %29, align 4, !dbg !5292
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5293
  call void @llvm.dbg.value(metadata i8* %33, metadata !5262, metadata !DIExpression()), !dbg !5263
  br label %56, !dbg !5294

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5295
  %36 = load i24, i24* %35, align 4, !dbg !5296
  %37 = and i24 %36, -30721, !dbg !5296
  %38 = or i24 %37, 12288, !dbg !5296
  store i24 %38, i24* %35, align 4, !dbg !5296
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5297
  call void @llvm.dbg.value(metadata i8* %39, metadata !5262, metadata !DIExpression()), !dbg !5263
  br label %56, !dbg !5298

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5299
  %42 = load i24, i24* %41, align 4, !dbg !5300
  %43 = and i24 %42, -30721, !dbg !5300
  %44 = or i24 %43, 14336, !dbg !5300
  store i24 %44, i24* %41, align 4, !dbg !5300
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5301
  call void @llvm.dbg.value(metadata i8* %45, metadata !5262, metadata !DIExpression()), !dbg !5263
  br label %56, !dbg !5302

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5303
  %48 = load i24, i24* %47, align 4, !dbg !5304
  %49 = and i24 %48, -30723, !dbg !5304
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5305
  call void @llvm.dbg.value(metadata i8* %50, metadata !5262, metadata !DIExpression()), !dbg !5263
  %51 = or i24 %49, 16386, !dbg !5306
  store i24 %51, i24* %47, align 4, !dbg !5306
  br label %56, !dbg !5307

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5308
  %54 = load i24, i24* %53, align 4, !dbg !5309
  %55 = and i24 %54, -30721, !dbg !5309
  store i24 %55, i24* %53, align 4, !dbg !5309
  br label %56, !dbg !5310

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5262, metadata !DIExpression()), !dbg !5263
  ret i8* %57, !dbg !5311
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #10 !dbg !5312 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5314, metadata !DIExpression()), !dbg !5319
  call void @llvm.dbg.value(metadata i8* %1, metadata !5315, metadata !DIExpression()), !dbg !5319
  call void @llvm.dbg.value(metadata i8 0, metadata !5316, metadata !DIExpression()), !dbg !5319
  call void @llvm.dbg.value(metadata i8* %1, metadata !5315, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5319
  %3 = load i8, i8* %1, align 1, !dbg !5320
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5321
  store i8 %3, i8* %4, align 1, !dbg !5322
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5323

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5324

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5325
  %9 = load i24, i24* %8, align 4, !dbg !5325
  %10 = and i24 %9, -458753, !dbg !5325
  %11 = or i24 %10, %7, !dbg !5325
  call void @llvm.dbg.label(metadata !5317), !dbg !5326
  %12 = and i24 %9, 30720, !dbg !5327
  %13 = icmp eq i24 %12, 16384, !dbg !5327
  %14 = zext i1 %13 to i24, !dbg !5329
  %15 = or i24 %11, %14, !dbg !5329
  %16 = icmp eq i8 %3, 99, !dbg !5330
  br i1 %16, label %17, label %43, !dbg !5332

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5333
  %19 = icmp ne i24 %18, 0, !dbg !5333
  call void @llvm.dbg.value(metadata i1 %19, metadata !5316, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5319
  br label %43, !dbg !5335

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5336
  %22 = load i24, i24* %21, align 4, !dbg !5337
  %23 = and i24 %22, -458753, !dbg !5337
  %24 = or i24 %23, 262144, !dbg !5337
  call void @llvm.dbg.value(metadata i8 1, metadata !5316, metadata !DIExpression()), !dbg !5319
  br label %43, !dbg !5338

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5341
  %27 = load i24, i24* %26, align 4, !dbg !5342
  %28 = and i24 %27, -458753, !dbg !5342
  %29 = or i24 %28, 196608, !dbg !5342
  %30 = and i24 %27, 30720, !dbg !5343
  %31 = icmp eq i24 %30, 16384, !dbg !5343
  br label %43, !dbg !5345

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5346
  %34 = load i24, i24* %33, align 4, !dbg !5347
  %35 = and i24 %34, -458753, !dbg !5347
  %36 = or i24 %35, 196608, !dbg !5347
  %37 = and i24 %34, 30720, !dbg !5348
  %38 = icmp ne i24 %37, 0, !dbg !5348
  br label %43, !dbg !5350

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5351
  %41 = load i24, i24* %40, align 4, !dbg !5352
  %42 = or i24 %41, 1, !dbg !5352
  br label %43, !dbg !5353

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5354
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5355
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5356
  call void @llvm.dbg.value(metadata i8* %48, metadata !5315, metadata !DIExpression()), !dbg !5319
  call void @llvm.dbg.value(metadata i8 poison, metadata !5316, metadata !DIExpression()), !dbg !5319
  %49 = lshr i24 %44, 1, !dbg !5354
  %50 = and i24 %49, 1, !dbg !5354
  %51 = zext i24 %50 to i32, !dbg !5354
  %52 = or i32 %51, %47, !dbg !5354
  %53 = trunc i32 %52 to i24, !dbg !5354
  %54 = shl nuw nsw i24 %53, 1, !dbg !5354
  %55 = and i24 %44, -3, !dbg !5354
  %56 = or i24 %54, %55, !dbg !5354
  store i24 %56, i24* %46, align 4, !dbg !5354
  ret i8* %48, !dbg !5357
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #12 !dbg !5358 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5363, metadata !DIExpression()), !dbg !5366
  %2 = load i8*, i8** %0, align 4, !dbg !5367
  call void @llvm.dbg.value(metadata i8* %2, metadata !5364, metadata !DIExpression()), !dbg !5366
  call void @llvm.dbg.value(metadata i32 0, metadata !5365, metadata !DIExpression()), !dbg !5366
  %3 = load i8, i8* %2, align 1, !dbg !5368
  %4 = zext i8 %3 to i32, !dbg !5369
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !5370
  %6 = icmp eq i32 %5, 0, !dbg !5371
  br i1 %6, label %19, label %7, !dbg !5371

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5365, metadata !DIExpression()), !dbg !5366
  call void @llvm.dbg.value(metadata i8* %10, metadata !5364, metadata !DIExpression()), !dbg !5366
  %11 = mul i32 %9, 10, !dbg !5372
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5374
  call void @llvm.dbg.value(metadata i8* %12, metadata !5364, metadata !DIExpression()), !dbg !5366
  %13 = add i32 %11, -48, !dbg !5375
  %14 = add i32 %13, %8, !dbg !5376
  call void @llvm.dbg.value(metadata i32 %14, metadata !5365, metadata !DIExpression()), !dbg !5366
  %15 = load i8, i8* %12, align 1, !dbg !5368
  %16 = zext i8 %15 to i32, !dbg !5369
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !5370
  %18 = icmp eq i32 %17, 0, !dbg !5371
  br i1 %18, label %19, label %7, !dbg !5371, !llvm.loop !5377

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5366
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5366
  store i8* %20, i8** %0, align 4, !dbg !5379
  ret i32 %21, !dbg !5380
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !5381 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5383, metadata !DIExpression()), !dbg !5384
  %2 = add i32 %0, -48, !dbg !5385
  %3 = icmp ult i32 %2, 10, !dbg !5386
  %4 = zext i1 %3 to i32, !dbg !5386
  ret i32 %4, !dbg !5387
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5388 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5393, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %1, metadata !5394, metadata !DIExpression()), !dbg !5395
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5396, !srcloc !5398
  ret void, !dbg !5399
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5400 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5402, metadata !DIExpression()), !dbg !5410
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5411
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5411
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5403, metadata !DIExpression()), !dbg !5412
  call void @llvm.va_start(i8* nonnull %3), !dbg !5413
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5414
  %5 = load i32, i32* %4, align 4, !dbg !5414
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5414
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !5414
  call void @llvm.va_end(i8* nonnull %3), !dbg !5415
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5416
  ret void, !dbg !5416
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5417 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5419, !srcloc !5420
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5421, !srcloc !5422
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5423, !srcloc !5424
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5425, !srcloc !5426
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5427, !srcloc !5428
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5429, !srcloc !5430
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5431, !srcloc !5432
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5433, !srcloc !5434
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5435, !srcloc !5436
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5437, !srcloc !5438
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5439, !srcloc !5440
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5441, !srcloc !5442
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5443, !srcloc !5444
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5445, !srcloc !5446
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5447, !srcloc !5448
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5449, !srcloc !5450
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5451, !srcloc !5452
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5453, !srcloc !5454
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5455, !srcloc !5456
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5457, !srcloc !5458
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5459, !srcloc !5460
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5461, !srcloc !5462
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5463, !srcloc !5464
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5465, !srcloc !5466
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5467, !srcloc !5468
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5469, !srcloc !5470
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !5471, !srcloc !5472
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5473, !srcloc !5474
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !5475, !srcloc !5476
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !5477, !srcloc !5478
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5479, !srcloc !5480
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5481, !srcloc !5482
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5483, !srcloc !5484
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_HTS221_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_HTS221_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_HTS221_ENABLED,%object", ""() #23, !dbg !5485, !srcloc !5486
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #23, !dbg !5487, !srcloc !5488
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,%object", ""() #23, !dbg !5489, !srcloc !5490
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #23, !dbg !5491, !srcloc !5492
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #23, !dbg !5493, !srcloc !5494
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5495, !srcloc !5496
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5497, !srcloc !5498
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5499, !srcloc !5500
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !5501, !srcloc !5502
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5503, !srcloc !5504
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #23, !dbg !5505, !srcloc !5506
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5507, !srcloc !5508
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5509, !srcloc !5510
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5511, !srcloc !5512
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !5513, !srcloc !5514
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5515, !srcloc !5516
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5517, !srcloc !5518
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5519, !srcloc !5520
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5521, !srcloc !5522
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5523, !srcloc !5524
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,%object", ""() #23, !dbg !5525, !srcloc !5526
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #23, !dbg !5527, !srcloc !5528
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !5529, !srcloc !5530
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5531, !srcloc !5532
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5533, !srcloc !5534
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5535, !srcloc !5536
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5537, !srcloc !5538
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5539, !srcloc !5540
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5541, !srcloc !5542
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5543, !srcloc !5544
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5545, !srcloc !5546
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5547, !srcloc !5548
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5549, !srcloc !5550
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5551, !srcloc !5552
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5553, !srcloc !5554
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5555, !srcloc !5556
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5557, !srcloc !5558
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5559, !srcloc !5560
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5561, !srcloc !5562
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5563, !srcloc !5564
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5565, !srcloc !5566
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5567, !srcloc !5568
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5569, !srcloc !5570
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5571, !srcloc !5572
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5573, !srcloc !5574
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5575, !srcloc !5576
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5577, !srcloc !5578
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5579, !srcloc !5580
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5581, !srcloc !5582
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5583, !srcloc !5584
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5585, !srcloc !5586
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5587, !srcloc !5588
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5589, !srcloc !5590
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5591, !srcloc !5592
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5593, !srcloc !5594
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5595, !srcloc !5596
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_ARGONKEY\0A\09.equ\09CONFIG_BOARD_96B_ARGONKEY,1\0A\09.type\09CONFIG_BOARD_96B_ARGONKEY,%object", ""() #23, !dbg !5597, !srcloc !5598
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !5599, !srcloc !5600
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5601, !srcloc !5602
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5603, !srcloc !5604
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5605, !srcloc !5606
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5607, !srcloc !5608
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F412CX\0A\09.equ\09CONFIG_SOC_STM32F412CX,1\0A\09.type\09CONFIG_SOC_STM32F412CX,%object", ""() #23, !dbg !5609, !srcloc !5610
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5611, !srcloc !5612
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5613, !srcloc !5614
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5615, !srcloc !5616
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5617, !srcloc !5618
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,256\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5685, !srcloc !5686
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5687, !srcloc !5688
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5689, !srcloc !5690
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5691, !srcloc !5692
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5693, !srcloc !5694
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5695, !srcloc !5696
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5697, !srcloc !5698
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5699, !srcloc !5700
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5701, !srcloc !5702
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5703, !srcloc !5704
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5705, !srcloc !5706
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5707, !srcloc !5708
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5709, !srcloc !5710
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5711, !srcloc !5712
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5713, !srcloc !5714
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5715, !srcloc !5716
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5717, !srcloc !5718
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5719, !srcloc !5720
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5721, !srcloc !5722
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !5723, !srcloc !5724
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5725, !srcloc !5726
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5727, !srcloc !5728
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5729, !srcloc !5730
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5731, !srcloc !5732
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5733, !srcloc !5734
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5735, !srcloc !5736
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,29\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5737, !srcloc !5738
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,40\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5739, !srcloc !5740
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5741, !srcloc !5742
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5743, !srcloc !5744
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5745, !srcloc !5746
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5747, !srcloc !5748
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5749, !srcloc !5750
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5751, !srcloc !5752
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5753, !srcloc !5754
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5755, !srcloc !5756
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5757, !srcloc !5758
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_SCALABLE\0A\09.equ\09CONFIG_SCHED_SCALABLE,1\0A\09.type\09CONFIG_SCHED_SCALABLE,%object", ""() #23, !dbg !5759, !srcloc !5760
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5761, !srcloc !5762
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5763, !srcloc !5764
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5765, !srcloc !5766
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MONITOR\0A\09.equ\09CONFIG_THREAD_MONITOR,1\0A\09.type\09CONFIG_THREAD_MONITOR,%object", ""() #23, !dbg !5767, !srcloc !5768
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5769, !srcloc !5770
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5771, !srcloc !5772
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5773, !srcloc !5774
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5775, !srcloc !5776
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5777, !srcloc !5778
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5779, !srcloc !5780
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5781, !srcloc !5782
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5783, !srcloc !5784
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5785, !srcloc !5786
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5787, !srcloc !5788
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5789, !srcloc !5790
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5791, !srcloc !5792
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5793, !srcloc !5794
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5795, !srcloc !5796
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5797, !srcloc !5798
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5799, !srcloc !5800
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5801, !srcloc !5802
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5803, !srcloc !5804
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5805, !srcloc !5806
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5807, !srcloc !5808
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5809, !srcloc !5810
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5811, !srcloc !5812
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5813, !srcloc !5814
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5815, !srcloc !5816
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5817, !srcloc !5818
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5819, !srcloc !5820
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5821, !srcloc !5822
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5823, !srcloc !5824
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5825, !srcloc !5826
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5827, !srcloc !5828
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5829, !srcloc !5830
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #23, !dbg !5831, !srcloc !5832
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5833, !srcloc !5834
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5835, !srcloc !5836
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5837, !srcloc !5838
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5839, !srcloc !5840
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5841, !srcloc !5842
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5843, !srcloc !5844
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5845, !srcloc !5846
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5847, !srcloc !5848
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5849, !srcloc !5850
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5851, !srcloc !5852
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5853, !srcloc !5854
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5855, !srcloc !5856
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !5857, !srcloc !5858
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5859, !srcloc !5860
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !5861, !srcloc !5862
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5863, !srcloc !5864
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5865, !srcloc !5866
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5867, !srcloc !5868
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5869, !srcloc !5870
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5871, !srcloc !5872
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5873, !srcloc !5874
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5875, !srcloc !5876
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5877, !srcloc !5878
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5879, !srcloc !5880
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5881, !srcloc !5882
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5883, !srcloc !5884
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5885, !srcloc !5886
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5887, !srcloc !5888
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5889, !srcloc !5890
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5891, !srcloc !5892
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5893, !srcloc !5894
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5895, !srcloc !5896
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5897, !srcloc !5898
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5899, !srcloc !5900
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5901, !srcloc !5902
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5903, !srcloc !5904
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5905, !srcloc !5906
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5907, !srcloc !5908
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5909, !srcloc !5910
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5911, !srcloc !5912
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5913, !srcloc !5914
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5915, !srcloc !5916
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5917, !srcloc !5918
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5919, !srcloc !5920
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5921, !srcloc !5922
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5923, !srcloc !5924
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5925, !srcloc !5926
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5927, !srcloc !5928
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !5929, !srcloc !5930
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !5931, !srcloc !5932
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !5933, !srcloc !5934
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !5935, !srcloc !5936
  tail call void asm sideeffect ".globl\09CONFIG_DEBUG_THREAD_INFO\0A\09.equ\09CONFIG_DEBUG_THREAD_INFO,1\0A\09.type\09CONFIG_DEBUG_THREAD_INFO,%object", ""() #23, !dbg !5937, !srcloc !5938
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !5939, !srcloc !5940
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !5941, !srcloc !5942
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5943, !srcloc !5944
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !5945, !srcloc !5946
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5947, !srcloc !5948
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5949, !srcloc !5950
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !5951, !srcloc !5952
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !5953, !srcloc !5954
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !5955, !srcloc !5956
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !5957, !srcloc !5958
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !5959, !srcloc !5960
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !5961, !srcloc !5962
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !5963, !srcloc !5964
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !5965, !srcloc !5966
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !5967, !srcloc !5968
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !5969, !srcloc !5970
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !5971, !srcloc !5972
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !5973, !srcloc !5974
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !5975, !srcloc !5976
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !5977, !srcloc !5978
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !5979, !srcloc !5980
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !5981, !srcloc !5982
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !5983, !srcloc !5984
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !5985, !srcloc !5986
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !5987, !srcloc !5988
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !5989, !srcloc !5990
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !5991, !srcloc !5992
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !5993, !srcloc !5994
  ret void, !dbg !5995
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5996 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5998, metadata !DIExpression()), !dbg !6000
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !6001
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !6002
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !6003, !srcloc !6012
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6003
  call void @llvm.dbg.value(metadata i32 %3, metadata !6009, metadata !DIExpression()) #23, !dbg !6013
  call void @llvm.dbg.value(metadata i32 undef, metadata !6010, metadata !DIExpression()) #23, !dbg !6013
  call void @llvm.dbg.value(metadata i32 %3, metadata !5999, metadata !DIExpression()), !dbg !6000
  call void @llvm.dbg.value(metadata i32 %3, metadata !6014, metadata !DIExpression()) #23, !dbg !6019
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !6021, !srcloc !6022
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6023
  ret i32 0, !dbg !6024
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #14 !dbg !6025 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6027
  %2 = or i32 %1, 512, !dbg !6027
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6027
  ret void, !dbg !6028
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #14 !dbg !6029 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6030
  %2 = or i32 %1, 1024, !dbg !6030
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6030
  ret void, !dbg !6031
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #4 !dbg !6032 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6034, metadata !DIExpression()), !dbg !6035
  ret i32 0, !dbg !6036
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6037 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6086, metadata !DIExpression()), !dbg !6088
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6087, metadata !DIExpression()), !dbg !6088
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #26, !dbg !6089
  ret void, !dbg !6090
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6091 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6108, metadata !DIExpression()), !dbg !6111
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6109, metadata !DIExpression()), !dbg !6111
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6112
  %4 = load i32, i32* %3, align 4, !dbg !6112
  call void @llvm.dbg.value(metadata i32 %4, metadata !6110, metadata !DIExpression()), !dbg !6111
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6113
  ret void, !dbg !6114
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !6115 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6119, metadata !DIExpression()), !dbg !6122
  call void @llvm.dbg.value(metadata i8* %0, metadata !6120, metadata !DIExpression()), !dbg !6122
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6123
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6123
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6121, metadata !DIExpression()), !dbg !6124
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6124
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6125
  %5 = bitcast i8* %4 to i32*, !dbg !6125
  %6 = load i32, i32* %5, align 4, !dbg !6125
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6126
  store i32 %6, i32* %7, align 4, !dbg !6127
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6128
  unreachable, !dbg !6129
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6130 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6133, metadata !DIExpression()), !dbg !6134
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !6135
  ret void, !dbg !6136
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6137 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6141, metadata !DIExpression()), !dbg !6142
  %2 = icmp sgt i32 %0, -1, !dbg !6143
  br i1 %2, label %3, label %8, !dbg !6145

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6146, !srcloc !6148
  %4 = and i32 %0, 31, !dbg !6149
  %5 = shl nuw i32 1, %4, !dbg !6150
  %6 = lshr i32 %0, 5, !dbg !6151
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6152
  store volatile i32 %5, i32* %7, align 4, !dbg !6153
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6154, !srcloc !6155
  br label %8, !dbg !6156

8:                                                ; preds = %3, %1
  ret void, !dbg !6157
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6158 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6160, metadata !DIExpression()), !dbg !6161
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !6162
  ret void, !dbg !6163
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6164 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6166, metadata !DIExpression()), !dbg !6167
  %2 = icmp sgt i32 %0, -1, !dbg !6168
  br i1 %2, label %3, label %8, !dbg !6170

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6171
  %5 = shl nuw i32 1, %4, !dbg !6173
  %6 = lshr i32 %0, 5, !dbg !6174
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6175
  store volatile i32 %5, i32* %7, align 4, !dbg !6176
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6177, !srcloc !6181
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6182, !srcloc !6185
  br label %8, !dbg !6186

8:                                                ; preds = %3, %1
  ret void, !dbg !6187
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #15 !dbg !6188 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6192, metadata !DIExpression()), !dbg !6193
  %2 = lshr i32 %0, 5, !dbg !6194
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6195
  %4 = load volatile i32, i32* %3, align 4, !dbg !6195
  %5 = and i32 %0, 31, !dbg !6196
  %6 = shl nuw i32 1, %5, !dbg !6196
  %7 = and i32 %4, %6, !dbg !6197
  ret i32 %7, !dbg !6198
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6199 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6203, metadata !DIExpression()), !dbg !6206
  call void @llvm.dbg.value(metadata i32 %1, metadata !6204, metadata !DIExpression()), !dbg !6206
  call void @llvm.dbg.value(metadata i32 %2, metadata !6205, metadata !DIExpression()), !dbg !6206
  %4 = add i32 %1, 1, !dbg !6207
  call void @llvm.dbg.value(metadata i32 %4, metadata !6204, metadata !DIExpression()), !dbg !6206
  %5 = icmp ult i32 %4, 16, !dbg !6210
  br i1 %5, label %7, label %6, !dbg !6213

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.31, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.32, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.33, i32 0, i32 0), i32 noundef 94) #26, !dbg !6214
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.34, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #26, !dbg !6214
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.33, i32 0, i32 0), i32 noundef 94) #26, !dbg !6214
  unreachable, !dbg !6214

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !6216
  ret void, !dbg !6217
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !6218 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6222, metadata !DIExpression()), !dbg !6224
  call void @llvm.dbg.value(metadata i32 %1, metadata !6223, metadata !DIExpression()), !dbg !6224
  %3 = trunc i32 %1 to i8, !dbg !6225
  %4 = shl i8 %3, 4, !dbg !6225
  %5 = and i32 %0, 15, !dbg !6227
  %6 = add nsw i32 %5, -4, !dbg !6227
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6227
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6227
  %9 = icmp slt i32 %0, 0, !dbg !6227
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6227
  store volatile i8 %4, i8* %10, align 1, !dbg !6225
  ret void, !dbg !6228
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6229 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6231, metadata !DIExpression()), !dbg !6232
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #26, !dbg !6233
  ret void, !dbg !6234
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6235 {
  tail call void @z_SysNmiOnReset() #26, !dbg !6237
  tail call void @z_arm_int_exit() #26, !dbg !6238
  ret void, !dbg !6239
}

; Function Attrs: optsize
declare !dbg !6240 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6241 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !6243 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !6245
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !6246
  tail call void @z_bss_zero() #26, !dbg !6247
  tail call void @z_data_copy() #26, !dbg !6248
  tail call void @z_arm_interrupt_init() #26, !dbg !6249
  tail call void @z_cstart() #27, !dbg !6250
  unreachable, !dbg !6250
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6251 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6252
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6253, !srcloc !6256
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6257, !srcloc !6260
  ret void, !dbg !6261
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6262 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6263
  %2 = and i32 %1, -15728641, !dbg !6263
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6263
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !6264, !srcloc !6269
  call void @llvm.dbg.value(metadata i32 %3, metadata !6267, metadata !DIExpression()) #23, !dbg !6270
  %4 = and i32 %3, -5, !dbg !6271
  call void @llvm.dbg.value(metadata i32 %4, metadata !6272, metadata !DIExpression()) #23, !dbg !6277
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !6279, !srcloc !6280
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6281, !srcloc !6260
  ret void, !dbg !6283
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6284 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6287, metadata !DIExpression()), !dbg !6288
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6289
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 10, i32 0, !dbg !6290
  store i32 %0, i32* %3, align 8, !dbg !6291
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6292
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 10, i32 1, !dbg !6293
  store i32 %4, i32* %5, align 4, !dbg !6294
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6295
  %7 = or i32 %6, 268435456, !dbg !6295
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6295
  call void @llvm.dbg.value(metadata i32 0, metadata !6296, metadata !DIExpression()) #23, !dbg !6299
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6301, !srcloc !6302
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6303
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 10, i32 1, !dbg !6304
  %10 = load i32, i32* %9, align 4, !dbg !6304
  ret i32 %10, !dbg !6305
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !6306 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6427, metadata !DIExpression()), !dbg !6435
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6428, metadata !DIExpression()), !dbg !6435
  call void @llvm.dbg.value(metadata i8* %2, metadata !6429, metadata !DIExpression()), !dbg !6435
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6430, metadata !DIExpression()), !dbg !6435
  call void @llvm.dbg.value(metadata i8* %4, metadata !6431, metadata !DIExpression()), !dbg !6435
  call void @llvm.dbg.value(metadata i8* %5, metadata !6432, metadata !DIExpression()), !dbg !6435
  call void @llvm.dbg.value(metadata i8* %6, metadata !6433, metadata !DIExpression()), !dbg !6435
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6436
  call void @llvm.dbg.value(metadata i8* %8, metadata !6434, metadata !DIExpression()), !dbg !6435
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6437
  %10 = bitcast i8* %9 to i32*, !dbg !6437
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6438
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6439
  %12 = bitcast i8* %8 to i32*, !dbg !6440
  store i32 %11, i32* %12, align 4, !dbg !6441
  %13 = ptrtoint i8* %4 to i32, !dbg !6442
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6443
  %15 = bitcast i8* %14 to i32*, !dbg !6443
  store i32 %13, i32* %15, align 4, !dbg !6444
  %16 = ptrtoint i8* %5 to i32, !dbg !6445
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6446
  %18 = bitcast i8* %17 to i32*, !dbg !6446
  store i32 %16, i32* %18, align 4, !dbg !6447
  %19 = ptrtoint i8* %6 to i32, !dbg !6448
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6449
  %21 = bitcast i8* %20 to i32*, !dbg !6449
  store i32 %19, i32* %21, align 4, !dbg !6450
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6451
  %23 = bitcast i8* %22 to i32*, !dbg !6451
  store i32 16777216, i32* %23, align 4, !dbg !6452
  %24 = ptrtoint i8* %8 to i32, !dbg !6453
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6454
  store i32 %24, i32* %25, align 8, !dbg !6455
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 10, i32 0, !dbg !6456
  store i32 0, i32* %26, align 8, !dbg !6457
  ret void, !dbg !6458
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !6459 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6464, metadata !DIExpression()), !dbg !6470
  call void @llvm.dbg.value(metadata i32 %1, metadata !6465, metadata !DIExpression()), !dbg !6470
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6471
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6466, metadata !DIExpression()), !dbg !6470
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6472
  br i1 %4, label %19, label %5, !dbg !6474

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6469, metadata !DIExpression()), !dbg !6470
  %6 = icmp eq i32 %0, -22, !dbg !6475
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 8, i32 0, !dbg !6475
  %8 = load i32, i32* %7, align 8, !dbg !6475
  br i1 %6, label %16, label %9, !dbg !6477

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6475
  %11 = icmp ule i32 %10, %0, !dbg !6475
  %12 = icmp ugt i32 %8, %0, !dbg !6475
  %13 = and i1 %12, %11, !dbg !6475
  %14 = icmp ugt i32 %8, %1, !dbg !6475
  %15 = and i1 %14, %13, !dbg !6475
  br i1 %15, label %18, label %19, !dbg !6475

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6475
  br i1 %17, label %18, label %19, !dbg !6477

18:                                               ; preds = %9, %16
  br label %19, !dbg !6478

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6470
  ret i32 %20, !dbg !6480
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !6481 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6485, metadata !DIExpression()), !dbg !6488
  call void @llvm.dbg.value(metadata i8* %1, metadata !6486, metadata !DIExpression()), !dbg !6488
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6487, metadata !DIExpression()), !dbg !6488
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6489
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #26, !dbg !6490
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6491, !srcloc !6492
  unreachable, !dbg !6493
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6494 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6512, metadata !DIExpression()), !dbg !6522
  call void @llvm.dbg.value(metadata i32 %1, metadata !6513, metadata !DIExpression()), !dbg !6522
  call void @llvm.dbg.value(metadata i32 %2, metadata !6514, metadata !DIExpression()), !dbg !6522
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6515, metadata !DIExpression()), !dbg !6522
  call void @llvm.dbg.value(metadata i32 0, metadata !6516, metadata !DIExpression()), !dbg !6522
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6523
  call void @llvm.dbg.value(metadata i32 %8, metadata !6517, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6522
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6524
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6524
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6525
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6525
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6521, metadata !DIExpression()), !dbg !6526
  call void @llvm.dbg.value(metadata i32 0, metadata !6527, metadata !DIExpression()) #23, !dbg !6530
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6532, !srcloc !6533
  call void @llvm.dbg.value(metadata i8* %6, metadata !6519, metadata !DIExpression(DW_OP_deref)), !dbg !6522
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !6534
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6520, metadata !DIExpression()), !dbg !6522
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6535
  br i1 %11, label %12, label %13, !dbg !6538

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.38, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 1057) #26, !dbg !6539
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.40, i32 0, i32 0)) #26, !dbg !6539
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 1057) #26, !dbg !6539
  unreachable, !dbg !6539

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6541
  call void @llvm.dbg.value(metadata i32 %14, metadata !6517, metadata !DIExpression()), !dbg !6522
  call void @llvm.dbg.value(metadata i8* %5, metadata !6518, metadata !DIExpression(DW_OP_deref)), !dbg !6522
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #24, !dbg !6542
  call void @llvm.dbg.value(metadata i32 %15, metadata !6516, metadata !DIExpression()), !dbg !6522
  %16 = load i8, i8* %5, align 1, !dbg !6543, !range !4025
  call void @llvm.dbg.value(metadata i8 %16, metadata !6518, metadata !DIExpression()), !dbg !6522
  %17 = icmp eq i8 %16, 0, !dbg !6543
  br i1 %17, label %18, label %35, !dbg !6545

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6546
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #26, !dbg !6547
  %21 = load i8, i8* %6, align 1, !dbg !6548, !range !4025
  call void @llvm.dbg.value(metadata i8 %21, metadata !6519, metadata !DIExpression()), !dbg !6522
  %22 = icmp eq i8 %21, 0, !dbg !6548
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6550
  %24 = load i32, i32* %23, align 4, !dbg !6550
  br i1 %22, label %30, label %25, !dbg !6551

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6552
  %27 = icmp eq i32 %26, 0, !dbg !6555
  br i1 %27, label %28, label %34, !dbg !6556

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6557
  br label %32, !dbg !6559

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6560
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6550
  br label %34, !dbg !6562

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #26, !dbg !6562
  br label %35, !dbg !6563

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6563
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6563
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6563
  ret void, !dbg !6563
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #7 !dbg !6564 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6569, metadata !DIExpression()), !dbg !6575
  call void @llvm.dbg.value(metadata i32 %1, metadata !6570, metadata !DIExpression()), !dbg !6575
  call void @llvm.dbg.value(metadata i32 %2, metadata !6571, metadata !DIExpression()), !dbg !6575
  call void @llvm.dbg.value(metadata i8* %3, metadata !6572, metadata !DIExpression()), !dbg !6575
  call void @llvm.dbg.value(metadata i8 0, metadata !6573, metadata !DIExpression()), !dbg !6575
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6574, metadata !DIExpression()), !dbg !6575
  store i8 0, i8* %3, align 1, !dbg !6576
  %5 = icmp ult i32 %2, -16777216, !dbg !6577
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6579
  br i1 %8, label %16, label %9, !dbg !6579

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6580
  %11 = icmp eq i32 %10, 0, !dbg !6580
  br i1 %11, label %12, label %13, !dbg !6582

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6574, metadata !DIExpression()), !dbg !6575
  store i8 1, i8* %3, align 1, !dbg !6585
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6575
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6574, metadata !DIExpression()), !dbg !6575
  br label %16, !dbg !6588

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6575
  ret %struct.__esf* %17, !dbg !6589
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6590 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6594, metadata !DIExpression()), !dbg !6598
  call void @llvm.dbg.value(metadata i32 %1, metadata !6595, metadata !DIExpression()), !dbg !6598
  call void @llvm.dbg.value(metadata i8* %2, metadata !6596, metadata !DIExpression()), !dbg !6598
  call void @llvm.dbg.value(metadata i32 0, metadata !6597, metadata !DIExpression()), !dbg !6598
  store i8 0, i8* %2, align 1, !dbg !6599
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6600

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !6601
  call void @llvm.dbg.value(metadata i32 %5, metadata !6597, metadata !DIExpression()), !dbg !6598
  br label %11, !dbg !6603

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6604
  call void @llvm.dbg.value(metadata i32 %7, metadata !6597, metadata !DIExpression()), !dbg !6598
  br label %11, !dbg !6605

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6606
  call void @llvm.dbg.value(metadata i32 0, metadata !6597, metadata !DIExpression()), !dbg !6598
  br label %11, !dbg !6607

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !6608
  call void @llvm.dbg.value(metadata i32 0, metadata !6597, metadata !DIExpression()), !dbg !6598
  br label %11, !dbg !6609

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !6610
  br label %11, !dbg !6611

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !6612
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6613 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6617, metadata !DIExpression()), !dbg !6620
  call void @llvm.dbg.value(metadata i8* %1, metadata !6618, metadata !DIExpression()), !dbg !6620
  call void @llvm.dbg.value(metadata i32 0, metadata !6619, metadata !DIExpression()), !dbg !6620
  store i8 0, i8* %1, align 1, !dbg !6621
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6622
  %4 = and i32 %3, 2, !dbg !6624
  %5 = icmp eq i32 %4, 0, !dbg !6625
  br i1 %5, label %6, label %35, !dbg !6626

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6627
  %8 = icmp sgt i32 %7, -1, !dbg !6629
  br i1 %8, label %9, label %35, !dbg !6630

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6631
  %11 = and i32 %10, 1073741824, !dbg !6633
  %12 = icmp eq i32 %11, 0, !dbg !6634
  br i1 %12, label %34, label %13, !dbg !6635

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !6636
  br i1 %14, label %15, label %18, !dbg !6639

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6640
  %17 = load i32, i32* %16, align 4, !dbg !6640
  call void @llvm.dbg.value(metadata i32 %17, metadata !6619, metadata !DIExpression()), !dbg !6620
  br label %35, !dbg !6642

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6643
  %20 = and i32 %19, 255, !dbg !6645
  %21 = icmp eq i32 %20, 0, !dbg !6646
  br i1 %21, label %24, label %22, !dbg !6647

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6648
  call void @llvm.dbg.value(metadata i32 %23, metadata !6619, metadata !DIExpression()), !dbg !6620
  br label %35, !dbg !6650

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6651
  %26 = and i32 %25, 65280, !dbg !6653
  %27 = icmp eq i32 %26, 0, !dbg !6654
  br i1 %27, label %29, label %28, !dbg !6655

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6656
  call void @llvm.dbg.value(metadata i32 0, metadata !6619, metadata !DIExpression()), !dbg !6620
  br label %35, !dbg !6658

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6659
  %31 = icmp ult i32 %30, 65536, !dbg !6661
  br i1 %31, label %33, label %32, !dbg !6662

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #24, !dbg !6663
  call void @llvm.dbg.value(metadata i32 0, metadata !6619, metadata !DIExpression()), !dbg !6620
  br label %35

33:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 755) #26, !dbg !6665
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5.44, i32 0, i32 0)) #26, !dbg !6665
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 755) #26, !dbg !6665
  unreachable, !dbg !6665

34:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 760) #26, !dbg !6670
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.6.45, i32 0, i32 0)) #26, !dbg !6670
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 760) #26, !dbg !6670
  unreachable, !dbg !6670

35:                                               ; preds = %6, %15, %28, %32, %22, %2
  %36 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], !dbg !6620
  call void @llvm.dbg.value(metadata i32 %36, metadata !6619, metadata !DIExpression()), !dbg !6620
  ret i32 %36, !dbg !6675
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6676 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6678, metadata !DIExpression()), !dbg !6691
  call void @llvm.dbg.value(metadata i32 %1, metadata !6679, metadata !DIExpression()), !dbg !6691
  call void @llvm.dbg.value(metadata i8* %2, metadata !6680, metadata !DIExpression()), !dbg !6691
  call void @llvm.dbg.value(metadata i32 0, metadata !6681, metadata !DIExpression()), !dbg !6691
  call void @llvm.dbg.value(metadata i32 -22, metadata !6682, metadata !DIExpression()), !dbg !6691
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6692
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6694
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6696
  %7 = and i32 %6, 2, !dbg !6697
  %8 = icmp eq i32 %7, 0, !dbg !6698
  br i1 %8, label %19, label %9, !dbg !6699

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6700
  call void @llvm.dbg.value(metadata i32 %10, metadata !6683, metadata !DIExpression()), !dbg !6701
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6702
  %12 = and i32 %11, 128, !dbg !6704
  %13 = icmp eq i32 %12, 0, !dbg !6705
  br i1 %13, label %19, label %14, !dbg !6706

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !6682, metadata !DIExpression()), !dbg !6691
  %15 = icmp eq i32 %1, 0, !dbg !6707
  br i1 %15, label %19, label %16, !dbg !6710

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6711
  %18 = and i32 %17, -129, !dbg !6711
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6711
  br label %19, !dbg !6713

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !6691
  call void @llvm.dbg.value(metadata i32 %20, metadata !6682, metadata !DIExpression()), !dbg !6691
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6714
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6716
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6718
  %24 = and i32 %23, 16, !dbg !6719
  %25 = icmp eq i32 %24, 0, !dbg !6719
  br i1 %25, label %26, label %30, !dbg !6720

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6721
  %28 = and i32 %27, 2, !dbg !6722
  %29 = icmp eq i32 %28, 0, !dbg !6722
  br i1 %29, label %44, label %30, !dbg !6723

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6724
  %32 = and i32 %31, 2048, !dbg !6725
  %33 = icmp eq i32 %32, 0, !dbg !6725
  br i1 %33, label %44, label %34, !dbg !6726

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !6727
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #26, !dbg !6728
  call void @llvm.dbg.value(metadata i32 %36, metadata !6686, metadata !DIExpression()), !dbg !6729
  %37 = icmp eq i32 %36, 0, !dbg !6730
  br i1 %37, label %39, label %38, !dbg !6732

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !6733, metadata !DIExpression()) #23, !dbg !6736
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #23, !dbg !6739, !srcloc !6740
  call void @llvm.dbg.value(metadata i32 2, metadata !6681, metadata !DIExpression()), !dbg !6691
  br label %44, !dbg !6741

39:                                               ; preds = %34
  %40 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6742
  %41 = and i32 %40, 16, !dbg !6742
  %42 = icmp eq i32 %41, 0, !dbg !6742
  br i1 %42, label %44, label %43, !dbg !6746

43:                                               ; preds = %39
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.7.41, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 343) #26, !dbg !6747
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.8.42, i32 0, i32 0)) #26, !dbg !6747
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 343) #26, !dbg !6747
  unreachable, !dbg !6747

44:                                               ; preds = %38, %39, %30, %26
  %45 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %39 ], !dbg !6691
  call void @llvm.dbg.value(metadata i32 %45, metadata !6681, metadata !DIExpression()), !dbg !6691
  %46 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6749
  %47 = and i32 %46, 32, !dbg !6751
  %48 = icmp eq i32 %47, 0, !dbg !6752
  br i1 %48, label %52, label %49, !dbg !6753

49:                                               ; preds = %44
  %50 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6754
  %51 = and i32 %50, -8193, !dbg !6754
  store volatile i32 %51, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6754
  br label %52, !dbg !6756

52:                                               ; preds = %49, %44
  %53 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6757
  %54 = or i32 %53, 255, !dbg !6757
  store volatile i32 %54, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6757
  store i8 0, i8* %2, align 1, !dbg !6758
  ret i32 %45, !dbg !6759
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !6760 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6764, metadata !DIExpression()), !dbg !6771
  call void @llvm.dbg.value(metadata i32 %0, metadata !6765, metadata !DIExpression()), !dbg !6771
  call void @llvm.dbg.value(metadata i8* %1, metadata !6766, metadata !DIExpression()), !dbg !6771
  call void @llvm.dbg.value(metadata i32 0, metadata !6767, metadata !DIExpression()), !dbg !6771
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6772
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6774
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6776
  %6 = and i32 %5, 512, !dbg !6777
  %7 = icmp eq i32 %6, 0, !dbg !6777
  br i1 %7, label %18, label %8, !dbg !6778

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6779
  call void @llvm.dbg.value(metadata i32 %9, metadata !6768, metadata !DIExpression()), !dbg !6780
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6781
  %11 = and i32 %10, 32768, !dbg !6783
  %12 = icmp ne i32 %11, 0, !dbg !6784
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !6785
  br i1 %14, label %15, label %18, !dbg !6785

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6786
  %17 = and i32 %16, -32769, !dbg !6786
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6786
  br label %18, !dbg !6790

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6791
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6793
  %21 = and i32 %20, 256, !dbg !6795
  %22 = icmp eq i32 %21, 0, !dbg !6796
  br i1 %22, label %23, label %25, !dbg !6797

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6798
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6800
  %27 = or i32 %26, 65280, !dbg !6800
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6800
  store i8 0, i8* %1, align 1, !dbg !6801
  ret void, !dbg !6802
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #14 !dbg !6803 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6809, metadata !DIExpression()), !dbg !6811
  call void @llvm.dbg.value(metadata i32 0, metadata !6810, metadata !DIExpression()), !dbg !6811
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6812
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6814
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6816
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6818
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6820
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6822
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6824
  %8 = or i32 %7, -65536, !dbg !6824
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6824
  ret void, !dbg !6825
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !6826 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6830, metadata !DIExpression()), !dbg !6832
  call void @llvm.dbg.value(metadata i8* %0, metadata !6831, metadata !DIExpression()), !dbg !6832
  store i8 0, i8* %0, align 1, !dbg !6833
  ret void, !dbg !6834
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6835 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6839, metadata !DIExpression()), !dbg !6842
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6843
  %3 = load i32, i32* %2, align 4, !dbg !6843
  %4 = inttoptr i32 %3 to i16*, !dbg !6844
  call void @llvm.dbg.value(metadata i16* %4, metadata !6840, metadata !DIExpression()), !dbg !6842
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6845
  %6 = or i32 %5, 256, !dbg !6845
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6845
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6846, !srcloc !6849
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6850, !srcloc !6853
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6854
  %8 = load i16, i16* %7, align 2, !dbg !6855
  call void @llvm.dbg.value(metadata i16 %8, metadata !6841, metadata !DIExpression()), !dbg !6842
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6856
  %10 = and i32 %9, -257, !dbg !6856
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6856
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6857, !srcloc !6849
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6859, !srcloc !6853
  %11 = icmp eq i16 %8, -8446, !dbg !6861
  ret i1 %11, !dbg !6863
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #14 !dbg !6864 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6865
  %2 = or i32 %1, 16, !dbg !6865
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6865
  ret void, !dbg !6866
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #14 !dbg !6867 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6870, metadata !DIExpression()), !dbg !6871
  br label %1, !dbg !6872

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6870, metadata !DIExpression()), !dbg !6871
  tail call fastcc void @__NVIC_SetPriority.48(i32 noundef %2) #24, !dbg !6874
  %3 = add nuw nsw i32 %2, 1, !dbg !6877
  call void @llvm.dbg.value(metadata i32 %3, metadata !6870, metadata !DIExpression()), !dbg !6871
  %4 = icmp eq i32 %3, 97, !dbg !6878
  br i1 %4, label %5, label %1, !dbg !6872, !llvm.loop !6879

5:                                                ; preds = %1
  ret void, !dbg !6881
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.48(i32 noundef %0) unnamed_addr #14 !dbg !6882 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6884, metadata !DIExpression()), !dbg !6886
  call void @llvm.dbg.value(metadata i32 1, metadata !6885, metadata !DIExpression()), !dbg !6886
  %2 = and i32 %0, 15, !dbg !6887
  %3 = add nsw i32 %2, -4, !dbg !6887
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !6887
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6887
  %6 = icmp slt i32 %0, 0, !dbg !6887
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !6887
  store volatile i8 16, i8* %7, align 1, !dbg !6888
  ret void, !dbg !6890
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !6891 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7008, metadata !DIExpression()), !dbg !7009
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7010
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7012
  br i1 %3, label %4, label %12, !dbg !7013

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !7014, !srcloc !7026
  call void @llvm.dbg.value(metadata i32 %5, metadata !7017, metadata !DIExpression()) #23, !dbg !7027
  %6 = icmp eq i32 %5, 0, !dbg !7028
  br i1 %6, label %12, label %7, !dbg !7029

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7030
  %9 = or i32 %8, 268435456, !dbg !7030
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7030
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7032
  %11 = and i32 %10, -32769, !dbg !7032
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7032
  br label %12, !dbg !7033

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !7034
  ret void, !dbg !7035
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7036 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #26, !dbg !7037
  ret void, !dbg !7038
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !393 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !509, metadata !DIExpression()), !dbg !7039
  call void @llvm.dbg.value(metadata i8 0, metadata !510, metadata !DIExpression()), !dbg !7039
  call void @llvm.dbg.value(metadata i32 64, metadata !512, metadata !DIExpression()), !dbg !7039
  call void @llvm.dbg.value(metadata i32 undef, metadata !511, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7039
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !7040
  %3 = load i32, i32* %2, align 8, !dbg !7040
  call void @llvm.dbg.value(metadata i32 %3, metadata !511, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7039
  %4 = add i32 %3, -64, !dbg !7042
  call void @llvm.dbg.value(metadata i32 %4, metadata !511, metadata !DIExpression()), !dbg !7039
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7043
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7044
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7045
  call void @llvm.dbg.value(metadata i8 1, metadata !510, metadata !DIExpression()), !dbg !7039
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #26, !dbg !7046
  ret void, !dbg !7047
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7048 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7049
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7050, !srcloc !7053
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7054, !srcloc !7057
  ret void, !dbg !7058
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7059 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !7060, !srcloc !7063
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7064
  ret void, !dbg !7065
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7066 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7081, metadata !DIExpression()), !dbg !7085
  call void @llvm.dbg.value(metadata i8 %1, metadata !7082, metadata !DIExpression()), !dbg !7085
  call void @llvm.dbg.value(metadata i32 %2, metadata !7083, metadata !DIExpression()), !dbg !7085
  call void @llvm.dbg.value(metadata i32 %3, metadata !7084, metadata !DIExpression()), !dbg !7085
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7086
  %6 = icmp eq i32 %5, -22, !dbg !7088
  br i1 %6, label %7, label %9, !dbg !7089

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.57, i32 0, i32 0), i32 noundef 283) #26, !dbg !7090
  %8 = zext i8 %1 to i32, !dbg !7090
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.58, i32 0, i32 0), i32 noundef %8) #26, !dbg !7090
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.57, i32 0, i32 0), i32 noundef 283) #26, !dbg !7090
  unreachable, !dbg !7090

9:                                                ; preds = %4
  ret void, !dbg !7095
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #16 !dbg !7096 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7101, metadata !DIExpression()), !dbg !7106
  call void @llvm.dbg.value(metadata i8 %1, metadata !7102, metadata !DIExpression()), !dbg !7106
  call void @llvm.dbg.value(metadata i32 undef, metadata !7103, metadata !DIExpression()), !dbg !7106
  call void @llvm.dbg.value(metadata i32 undef, metadata !7104, metadata !DIExpression()), !dbg !7106
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7107
  call void @llvm.dbg.value(metadata i8 %3, metadata !7105, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7106
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !7108
  call void @llvm.dbg.value(metadata i32 %4, metadata !7105, metadata !DIExpression()), !dbg !7106
  %5 = trunc i32 %4 to i8, !dbg !7109
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7110
  ret i32 %4, !dbg !7111
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #16 !dbg !7112 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7116, metadata !DIExpression()), !dbg !7122
  call void @llvm.dbg.value(metadata i8 %1, metadata !7117, metadata !DIExpression()), !dbg !7122
  call void @llvm.dbg.value(metadata i8 %2, metadata !7118, metadata !DIExpression()), !dbg !7122
  call void @llvm.dbg.value(metadata i1 %3, metadata !7119, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7122
  %5 = zext i8 %2 to i32, !dbg !7123
  call void @llvm.dbg.value(metadata i32 %5, metadata !7121, metadata !DIExpression()), !dbg !7122
  call void @llvm.dbg.value(metadata i32 0, metadata !7120, metadata !DIExpression()), !dbg !7122
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7121, metadata !DIExpression()), !dbg !7122
  call void @llvm.dbg.value(metadata i32 0, metadata !7120, metadata !DIExpression()), !dbg !7122
  %7 = icmp eq i8 %1, 0, !dbg !7124
  br i1 %7, label %29, label %8, !dbg !7127

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7121, metadata !DIExpression()), !dbg !7122
  call void @llvm.dbg.value(metadata i32 %10, metadata !7120, metadata !DIExpression()), !dbg !7122
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7128
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7131
  %13 = load i32, i32* %12, align 4, !dbg !7131
  %14 = icmp eq i32 %13, 0, !dbg !7132
  br i1 %14, label %25, label %15, !dbg !7133

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !7134

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7136
  %18 = icmp eq i32 %17, 0, !dbg !7136
  br i1 %18, label %29, label %19, !dbg !7137

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !7138
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7139
  call void @llvm.dbg.value(metadata i32 %21, metadata !7121, metadata !DIExpression()), !dbg !7122
  %22 = icmp eq i32 %21, -22, !dbg !7140
  br i1 %22, label %29, label %23, !dbg !7142

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !7143
  call void @llvm.dbg.value(metadata i32 %24, metadata !7121, metadata !DIExpression()), !dbg !7122
  br label %25, !dbg !7144

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !7122
  call void @llvm.dbg.value(metadata i32 %26, metadata !7121, metadata !DIExpression()), !dbg !7122
  %27 = add nuw nsw i32 %10, 1, !dbg !7145
  call void @llvm.dbg.value(metadata i32 %27, metadata !7120, metadata !DIExpression()), !dbg !7122
  %28 = icmp eq i32 %27, %6, !dbg !7124
  br i1 %28, label %29, label %8, !dbg !7127, !llvm.loop !7146

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !7122
  ret i32 %30, !dbg !7148
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #17 !dbg !7149 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7153, metadata !DIExpression()), !dbg !7155
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7156
  %3 = load i32, i32* %2, align 4, !dbg !7156
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7157, !range !7158
  %5 = icmp ult i32 %4, 2, !dbg !7157
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7159
  br i1 %7, label %8, label %15, !dbg !7159

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7160
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7161
  %11 = load i32, i32* %10, align 4, !dbg !7161
  %12 = and i32 %11, %9, !dbg !7162
  %13 = icmp eq i32 %12, 0, !dbg !7163
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7154, metadata !DIExpression()), !dbg !7155
  ret i32 %16, !dbg !7164
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #16 !dbg !7165 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7169, metadata !DIExpression()), !dbg !7172
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7170, metadata !DIExpression()), !dbg !7172
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7173
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7173
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7171, metadata !DIExpression()), !dbg !7174
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7175
  %6 = load i32, i32* %5, align 4, !dbg !7175
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7176
  store i32 %6, i32* %7, align 4, !dbg !7177
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7178
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7179
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7180
  %11 = load i32, i32* %10, align 4, !dbg !7180
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #24, !dbg !7181
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !7182
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7183
  ret i32 %12, !dbg !7184
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #18 !dbg !7185 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7192, metadata !DIExpression()), !dbg !7196
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7193, metadata !DIExpression()), !dbg !7196
  call void @llvm.dbg.value(metadata i32 undef, metadata !7194, metadata !DIExpression()), !dbg !7196
  call void @llvm.dbg.value(metadata i32 %2, metadata !7195, metadata !DIExpression()), !dbg !7196
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7197
  %5 = load i32, i32* %4, align 4, !dbg !7197
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !7198
  %7 = or i32 %6, %5, !dbg !7199
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7200
  store i32 %7, i32* %8, align 4, !dbg !7201
  ret void, !dbg !7202
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #14 !dbg !7203 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7207, metadata !DIExpression()), !dbg !7209
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7208, metadata !DIExpression()), !dbg !7209
  %3 = zext i8 %0 to i32, !dbg !7210
  %4 = icmp ugt i8 %0, 7, !dbg !7212
  br i1 %4, label %6, label %5, !dbg !7213

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !7214
  br label %6, !dbg !7215

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !7209
  ret i32 %7, !dbg !7216
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #14 !dbg !7217 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7221, metadata !DIExpression()), !dbg !7223
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7222, metadata !DIExpression()), !dbg !7223
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !7224
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7225
  %4 = load i32, i32* %3, align 4, !dbg !7225
  %5 = and i32 %4, -32, !dbg !7226
  %6 = or i32 %5, %0, !dbg !7227
  %7 = or i32 %6, 16, !dbg !7227
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7228
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7229
  %9 = load i32, i32* %8, align 4, !dbg !7229
  %10 = or i32 %9, 1, !dbg !7230
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7231
  ret void, !dbg !7232
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #14 !dbg !7233 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7236, metadata !DIExpression()), !dbg !7237
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7238
  ret void, !dbg !7239
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #5 !dbg !7240 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7244, metadata !DIExpression()), !dbg !7245
  %2 = icmp ult i32 %0, 33, !dbg !7246
  br i1 %2, label %11, label %3, !dbg !7248

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7249
  br i1 %4, label %11, label %5, !dbg !7251

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7252
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7253, !range !7158
  %8 = mul nsw i32 %7, -2, !dbg !7254
  %9 = add nsw i32 %8, 62, !dbg !7254
  %10 = and i32 %9, 62, !dbg !7255
  br label %11, !dbg !7256

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7245
  ret i32 %12, !dbg !7257
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7258 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7262, metadata !DIExpression()), !dbg !7264
  call void @llvm.dbg.value(metadata i8 %1, metadata !7263, metadata !DIExpression()), !dbg !7264
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7265
  %4 = icmp eq i32 %3, -22, !dbg !7267
  br i1 %4, label %5, label %7, !dbg !7268

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.57, i32 0, i32 0), i32 noundef 314) #26, !dbg !7269
  %6 = zext i8 %1 to i32, !dbg !7269
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.61, i32 0, i32 0), i32 noundef %6) #26, !dbg !7269
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.57, i32 0, i32 0), i32 noundef 314) #26, !dbg !7269
  unreachable, !dbg !7269

7:                                                ; preds = %2
  ret void, !dbg !7274
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #16 !dbg !7275 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7279, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata i8 %1, metadata !7280, metadata !DIExpression()), !dbg !7286
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7287
  call void @llvm.dbg.value(metadata i8 %3, metadata !7281, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7286
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !7288
  call void @llvm.dbg.value(metadata i32 %4, metadata !7281, metadata !DIExpression()), !dbg !7286
  %5 = icmp ne i32 %4, -22, !dbg !7289
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7290
  call void @llvm.dbg.value(metadata i32 %4, metadata !7282, metadata !DIExpression()), !dbg !7291
  br i1 %7, label %8, label %12, !dbg !7290

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7282, metadata !DIExpression()), !dbg !7291
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !7292
  %10 = add i32 %9, 1, !dbg !7295
  call void @llvm.dbg.value(metadata i32 %10, metadata !7282, metadata !DIExpression()), !dbg !7291
  %11 = icmp eq i32 %10, 8, !dbg !7296
  br i1 %11, label %12, label %8, !dbg !7297, !llvm.loop !7298

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7300
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #14 !dbg !7301 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7304, metadata !DIExpression()), !dbg !7305
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7306
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7307
  ret void, !dbg !7308
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7309 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7314
  %2 = icmp ugt i32 %1, 8, !dbg !7316
  br i1 %2, label %3, label %4, !dbg !7317

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.57, i32 0, i32 0), i32 noundef 341) #26, !dbg !7318
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.62, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #26, !dbg !7318
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.57, i32 0, i32 0), i32 noundef 341) #26, !dbg !7318
  unreachable, !dbg !7318

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !7323
  call void @llvm.dbg.value(metadata i32 0, metadata !7313, metadata !DIExpression()), !dbg !7324
  %5 = icmp eq i32 %1, 0, !dbg !7325
  br i1 %5, label %13, label %6, !dbg !7328

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7328

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7313, metadata !DIExpression()), !dbg !7324
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7329
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #24, !dbg !7331
  %11 = add nuw i32 %9, 1, !dbg !7332
  call void @llvm.dbg.value(metadata i32 %11, metadata !7313, metadata !DIExpression()), !dbg !7324
  %12 = icmp eq i32 %11, %1, !dbg !7325
  br i1 %12, label %13, label %8, !dbg !7328, !llvm.loop !7333

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7335
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7336
  tail call void @arm_core_mpu_enable() #24, !dbg !7337
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7338
  %16 = and i32 %15, 65280, !dbg !7338
  %17 = icmp eq i32 %16, 2048, !dbg !7338
  br i1 %17, label %19, label %18, !dbg !7341

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.63, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.57, i32 0, i32 0), i32 noundef 435) #26, !dbg !7342
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.64, i32 0, i32 0)) #26, !dbg !7342
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.57, i32 0, i32 0), i32 noundef 435) #26, !dbg !7342
  unreachable, !dbg !7342

19:                                               ; preds = %13
  ret i32 0, !dbg !7344
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #12 !dbg !7345 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7352, metadata !DIExpression()), !dbg !7355
  call void @llvm.dbg.value(metadata i8* %1, metadata !7353, metadata !DIExpression()), !dbg !7355
  call void @llvm.dbg.value(metadata i8* %0, metadata !7354, metadata !DIExpression()), !dbg !7355
  %3 = load i8, i8* %1, align 1, !dbg !7356
  %4 = icmp eq i8 %3, 0, !dbg !7357
  br i1 %4, label %13, label %5, !dbg !7358

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7352, metadata !DIExpression()), !dbg !7355
  call void @llvm.dbg.value(metadata i8* %8, metadata !7353, metadata !DIExpression()), !dbg !7355
  store i8 %6, i8* %7, align 1, !dbg !7359
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7361
  call void @llvm.dbg.value(metadata i8* %9, metadata !7352, metadata !DIExpression()), !dbg !7355
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7362
  call void @llvm.dbg.value(metadata i8* %10, metadata !7353, metadata !DIExpression()), !dbg !7355
  %11 = load i8, i8* %10, align 1, !dbg !7356
  %12 = icmp eq i8 %11, 0, !dbg !7357
  br i1 %12, label %13, label %5, !dbg !7358, !llvm.loop !7363

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7365
  ret i8* %0, !dbg !7366
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #12 !dbg !7367 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7371, metadata !DIExpression()), !dbg !7375
  call void @llvm.dbg.value(metadata i8* %1, metadata !7372, metadata !DIExpression()), !dbg !7375
  call void @llvm.dbg.value(metadata i32 %2, metadata !7373, metadata !DIExpression()), !dbg !7375
  call void @llvm.dbg.value(metadata i8* %0, metadata !7374, metadata !DIExpression()), !dbg !7375
  %4 = icmp eq i32 %2, 0, !dbg !7376
  br i1 %4, label %22, label %5, !dbg !7377

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7371, metadata !DIExpression()), !dbg !7375
  call void @llvm.dbg.value(metadata i32 %7, metadata !7373, metadata !DIExpression()), !dbg !7375
  call void @llvm.dbg.value(metadata i8* %8, metadata !7372, metadata !DIExpression()), !dbg !7375
  %9 = load i8, i8* %8, align 1, !dbg !7378
  %10 = icmp eq i8 %9, 0, !dbg !7379
  br i1 %10, label %16, label %11, !dbg !7380

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7381
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7383
  call void @llvm.dbg.value(metadata i8* %12, metadata !7372, metadata !DIExpression()), !dbg !7375
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7384
  call void @llvm.dbg.value(metadata i8* %13, metadata !7371, metadata !DIExpression()), !dbg !7375
  %14 = add i32 %7, -1, !dbg !7385
  call void @llvm.dbg.value(metadata i32 %14, metadata !7373, metadata !DIExpression()), !dbg !7375
  %15 = icmp eq i32 %14, 0, !dbg !7376
  br i1 %15, label %22, label %5, !dbg !7377, !llvm.loop !7386

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7371, metadata !DIExpression()), !dbg !7375
  call void @llvm.dbg.value(metadata i32 %18, metadata !7373, metadata !DIExpression()), !dbg !7375
  store i8 0, i8* %17, align 1, !dbg !7388
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7390
  call void @llvm.dbg.value(metadata i8* %19, metadata !7371, metadata !DIExpression()), !dbg !7375
  %20 = add i32 %18, -1, !dbg !7391
  call void @llvm.dbg.value(metadata i32 %20, metadata !7373, metadata !DIExpression()), !dbg !7375
  %21 = icmp eq i32 %20, 0, !dbg !7392
  br i1 %21, label %22, label %16, !dbg !7393, !llvm.loop !7394

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7396
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !7397 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7401, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.value(metadata i32 %1, metadata !7402, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.value(metadata i32 %1, metadata !7403, metadata !DIExpression()), !dbg !7404
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7405

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7401, metadata !DIExpression()), !dbg !7404
  %6 = load i8, i8* %5, align 1, !dbg !7406
  %7 = icmp eq i8 %6, %3, !dbg !7407
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7408
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7409
  call void @llvm.dbg.value(metadata i8* %10, metadata !7401, metadata !DIExpression()), !dbg !7404
  br i1 %9, label %11, label %4, !dbg !7408, !llvm.loop !7411

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7413
  ret i8* %12, !dbg !7414
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !7415 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7417, metadata !DIExpression()), !dbg !7420
  call void @llvm.dbg.value(metadata i32 %1, metadata !7418, metadata !DIExpression()), !dbg !7420
  call void @llvm.dbg.value(metadata i8* null, metadata !7419, metadata !DIExpression()), !dbg !7420
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7421

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7420
  call void @llvm.dbg.value(metadata i8* %6, metadata !7419, metadata !DIExpression()), !dbg !7420
  call void @llvm.dbg.value(metadata i8* %5, metadata !7417, metadata !DIExpression()), !dbg !7420
  %7 = load i8, i8* %5, align 1, !dbg !7422
  %8 = icmp eq i8 %7, %3, !dbg !7425
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7426
  call void @llvm.dbg.value(metadata i8* %9, metadata !7419, metadata !DIExpression()), !dbg !7420
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7427
  call void @llvm.dbg.value(metadata i8* %10, metadata !7417, metadata !DIExpression()), !dbg !7420
  %11 = icmp eq i8 %7, 0, !dbg !7428
  br i1 %11, label %12, label %4, !dbg !7428, !llvm.loop !7429

12:                                               ; preds = %4
  ret i8* %9, !dbg !7431
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #11 !dbg !7432 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7436, metadata !DIExpression()), !dbg !7438
  call void @llvm.dbg.value(metadata i32 0, metadata !7437, metadata !DIExpression()), !dbg !7438
  %2 = load i8, i8* %0, align 1, !dbg !7439
  %3 = icmp eq i8 %2, 0, !dbg !7440
  br i1 %3, label %11, label %4, !dbg !7441

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7437, metadata !DIExpression()), !dbg !7438
  call void @llvm.dbg.value(metadata i8* %6, metadata !7436, metadata !DIExpression()), !dbg !7438
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7442
  call void @llvm.dbg.value(metadata i8* %7, metadata !7436, metadata !DIExpression()), !dbg !7438
  %8 = add i32 %5, 1, !dbg !7444
  call void @llvm.dbg.value(metadata i32 %8, metadata !7437, metadata !DIExpression()), !dbg !7438
  %9 = load i8, i8* %7, align 1, !dbg !7439
  %10 = icmp eq i8 %9, 0, !dbg !7440
  br i1 %10, label %11, label %4, !dbg !7441, !llvm.loop !7445

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7438
  ret i32 %12, !dbg !7447
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !7448 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7452, metadata !DIExpression()), !dbg !7455
  call void @llvm.dbg.value(metadata i32 %1, metadata !7453, metadata !DIExpression()), !dbg !7455
  call void @llvm.dbg.value(metadata i32 0, metadata !7454, metadata !DIExpression()), !dbg !7455
  %3 = load i8, i8* %0, align 1, !dbg !7456
  %4 = icmp ne i8 %3, 0, !dbg !7457
  %5 = icmp ne i32 %1, 0, !dbg !7458
  %6 = and i1 %4, %5, !dbg !7458
  br i1 %6, label %7, label %16, !dbg !7459

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7454, metadata !DIExpression()), !dbg !7455
  call void @llvm.dbg.value(metadata i8* %9, metadata !7452, metadata !DIExpression()), !dbg !7455
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7460
  call void @llvm.dbg.value(metadata i8* %10, metadata !7452, metadata !DIExpression()), !dbg !7455
  %11 = add nuw i32 %8, 1, !dbg !7462
  call void @llvm.dbg.value(metadata i32 %11, metadata !7454, metadata !DIExpression()), !dbg !7455
  %12 = load i8, i8* %10, align 1, !dbg !7456
  %13 = icmp ne i8 %12, 0, !dbg !7457
  %14 = icmp ult i32 %11, %1, !dbg !7458
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7458
  br i1 %15, label %7, label %16, !dbg !7459, !llvm.loop !7463

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7455
  ret i32 %17, !dbg !7465
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !7466 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7470, metadata !DIExpression()), !dbg !7472
  call void @llvm.dbg.value(metadata i8* %1, metadata !7471, metadata !DIExpression()), !dbg !7472
  %3 = load i8, i8* %0, align 1, !dbg !7473
  %4 = load i8, i8* %1, align 1, !dbg !7474
  %5 = icmp ne i8 %3, %4, !dbg !7475
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7476
  br i1 %7, label %18, label %8, !dbg !7476

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7471, metadata !DIExpression()), !dbg !7472
  call void @llvm.dbg.value(metadata i8* %10, metadata !7470, metadata !DIExpression()), !dbg !7472
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7477
  call void @llvm.dbg.value(metadata i8* %11, metadata !7470, metadata !DIExpression()), !dbg !7472
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7479
  call void @llvm.dbg.value(metadata i8* %12, metadata !7471, metadata !DIExpression()), !dbg !7472
  %13 = load i8, i8* %11, align 1, !dbg !7473
  %14 = load i8, i8* %12, align 1, !dbg !7474
  %15 = icmp ne i8 %13, %14, !dbg !7475
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7476
  br i1 %17, label %18, label %8, !dbg !7476, !llvm.loop !7480

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7473
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7474
  %21 = zext i8 %19 to i32, !dbg !7483
  %22 = zext i8 %20 to i32, !dbg !7484
  %23 = sub nsw i32 %21, %22, !dbg !7485
  ret i32 %23, !dbg !7486
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !7487 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7491, metadata !DIExpression()), !dbg !7494
  call void @llvm.dbg.value(metadata i8* %1, metadata !7492, metadata !DIExpression()), !dbg !7494
  call void @llvm.dbg.value(metadata i32 %2, metadata !7493, metadata !DIExpression()), !dbg !7494
  %4 = icmp eq i32 %2, 0, !dbg !7495
  br i1 %4, label %23, label %5, !dbg !7495

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7493, metadata !DIExpression()), !dbg !7494
  call void @llvm.dbg.value(metadata i8* %7, metadata !7492, metadata !DIExpression()), !dbg !7494
  call void @llvm.dbg.value(metadata i8* %8, metadata !7491, metadata !DIExpression()), !dbg !7494
  %9 = load i8, i8* %8, align 1, !dbg !7496
  %10 = load i8, i8* %7, align 1, !dbg !7497
  %11 = icmp ne i8 %9, %10, !dbg !7498
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7499
  br i1 %13, label %19, label %14, !dbg !7499

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7500
  call void @llvm.dbg.value(metadata i8* %15, metadata !7491, metadata !DIExpression()), !dbg !7494
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7502
  call void @llvm.dbg.value(metadata i8* %16, metadata !7492, metadata !DIExpression()), !dbg !7494
  %17 = add i32 %6, -1, !dbg !7503
  call void @llvm.dbg.value(metadata i32 %17, metadata !7493, metadata !DIExpression()), !dbg !7494
  %18 = icmp eq i32 %17, 0, !dbg !7495
  br i1 %18, label %23, label %5, !dbg !7495, !llvm.loop !7504

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7507
  %21 = zext i8 %10 to i32, !dbg !7508
  %22 = sub nsw i32 %20, %21, !dbg !7509
  br label %23, !dbg !7510

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7510
  ret i32 %24, !dbg !7511
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #12 !dbg !7512 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7517, metadata !DIExpression()), !dbg !7522
  call void @llvm.dbg.value(metadata i8* %1, metadata !7518, metadata !DIExpression()), !dbg !7522
  call void @llvm.dbg.value(metadata i8** %2, metadata !7519, metadata !DIExpression()), !dbg !7522
  %4 = icmp eq i8* %0, null, !dbg !7523
  br i1 %4, label %5, label %7, !dbg !7523

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7524
  br label %7, !dbg !7523

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7523
  call void @llvm.dbg.value(metadata i8* %8, metadata !7520, metadata !DIExpression()), !dbg !7522
  %9 = load i8, i8* %8, align 1, !dbg !7525
  %10 = icmp eq i8 %9, 0, !dbg !7525
  br i1 %10, label %33, label %11, !dbg !7526

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7520, metadata !DIExpression()), !dbg !7522
  %14 = zext i8 %12 to i32, !dbg !7525
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !7527
  %16 = icmp eq i8* %15, null, !dbg !7526
  br i1 %16, label %21, label %17, !dbg !7528

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7529
  call void @llvm.dbg.value(metadata i8* %18, metadata !7520, metadata !DIExpression()), !dbg !7522
  %19 = load i8, i8* %18, align 1, !dbg !7525
  %20 = icmp eq i8 %19, 0, !dbg !7525
  br i1 %20, label %33, label %11, !dbg !7526, !llvm.loop !7531

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7521, metadata !DIExpression()), !dbg !7522
  %24 = zext i8 %22 to i32, !dbg !7533
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !7534
  %26 = icmp eq i8* %25, null, !dbg !7535
  br i1 %26, label %27, label %31, !dbg !7536

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7537
  call void @llvm.dbg.value(metadata i8* %28, metadata !7521, metadata !DIExpression()), !dbg !7522
  %29 = load i8, i8* %28, align 1, !dbg !7533
  %30 = icmp eq i8 %29, 0, !dbg !7533
  br i1 %30, label %33, label %21, !dbg !7539, !llvm.loop !7540

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7542
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7545
  br label %33, !dbg !7546

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7522
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7522
  store i8* %34, i8** %2, align 4, !dbg !7522
  ret i8* %35, !dbg !7547
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #12 !dbg !7548 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7550, metadata !DIExpression()), !dbg !7552
  call void @llvm.dbg.value(metadata i8* %1, metadata !7551, metadata !DIExpression()), !dbg !7552
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7553
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7554
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !7555
  ret i8* %0, !dbg !7556
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #12 !dbg !7557 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7559, metadata !DIExpression()), !dbg !7564
  call void @llvm.dbg.value(metadata i8* %1, metadata !7560, metadata !DIExpression()), !dbg !7564
  call void @llvm.dbg.value(metadata i32 %2, metadata !7561, metadata !DIExpression()), !dbg !7564
  call void @llvm.dbg.value(metadata i8* %0, metadata !7562, metadata !DIExpression()), !dbg !7564
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7565
  call void @llvm.dbg.value(metadata i32 %4, metadata !7563, metadata !DIExpression()), !dbg !7564
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7566
  call void @llvm.dbg.value(metadata i8* %5, metadata !7559, metadata !DIExpression()), !dbg !7564
  call void @llvm.dbg.value(metadata i8* %1, metadata !7560, metadata !DIExpression()), !dbg !7564
  call void @llvm.dbg.value(metadata i32 %2, metadata !7561, metadata !DIExpression()), !dbg !7564
  call void @llvm.dbg.value(metadata i32 %2, metadata !7561, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7564
  %6 = icmp eq i32 %2, 0, !dbg !7567
  br i1 %6, label %18, label %7, !dbg !7568

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7569
  call void @llvm.dbg.value(metadata i8* %9, metadata !7559, metadata !DIExpression()), !dbg !7564
  call void @llvm.dbg.value(metadata i8* %10, metadata !7560, metadata !DIExpression()), !dbg !7564
  %12 = load i8, i8* %10, align 1, !dbg !7570
  %13 = icmp eq i8 %12, 0, !dbg !7571
  br i1 %13, label %18, label %14, !dbg !7572

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7573
  call void @llvm.dbg.value(metadata i8* %15, metadata !7560, metadata !DIExpression()), !dbg !7564
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7575
  call void @llvm.dbg.value(metadata i8* %16, metadata !7559, metadata !DIExpression()), !dbg !7564
  store i8 %12, i8* %9, align 1, !dbg !7576
  call void @llvm.dbg.value(metadata i32 %11, metadata !7561, metadata !DIExpression()), !dbg !7564
  call void @llvm.dbg.value(metadata i32 %11, metadata !7561, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7564
  %17 = icmp eq i32 %11, 0, !dbg !7567
  br i1 %17, label %18, label %7, !dbg !7568, !llvm.loop !7577

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7564
  store i8 0, i8* %19, align 1, !dbg !7579
  ret i8* %0, !dbg !7580
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !7581 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7585, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata i8* %1, metadata !7586, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata i32 %2, metadata !7587, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata i8* %0, metadata !7588, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata i8* %1, metadata !7589, metadata !DIExpression()), !dbg !7590
  %4 = icmp eq i32 %2, 0, !dbg !7591
  br i1 %4, label %31, label %5, !dbg !7593

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7589, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata i8* %0, metadata !7588, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata i32 %2, metadata !7587, metadata !DIExpression()), !dbg !7590
  %6 = add i32 %2, -1, !dbg !7594
  call void @llvm.dbg.value(metadata i32 %6, metadata !7587, metadata !DIExpression()), !dbg !7590
  %7 = icmp eq i32 %6, 0, !dbg !7595
  br i1 %7, label %23, label %8, !dbg !7596

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7597
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7597
  br label %11, !dbg !7597

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7589, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata i8* %14, metadata !7588, metadata !DIExpression()), !dbg !7590
  %15 = load i8, i8* %14, align 1, !dbg !7598
  %16 = load i8, i8* %13, align 1, !dbg !7599
  %17 = icmp eq i8 %15, %16, !dbg !7600
  br i1 %17, label %18, label %23, !dbg !7597

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7601
  call void @llvm.dbg.value(metadata i8* %19, metadata !7588, metadata !DIExpression()), !dbg !7590
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7603
  call void @llvm.dbg.value(metadata i8* %20, metadata !7589, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata i32 %12, metadata !7587, metadata !DIExpression()), !dbg !7590
  %21 = add i32 %12, -1, !dbg !7594
  call void @llvm.dbg.value(metadata i32 %21, metadata !7587, metadata !DIExpression()), !dbg !7590
  %22 = icmp eq i32 %21, 0, !dbg !7595
  br i1 %22, label %23, label %11, !dbg !7596, !llvm.loop !7604

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7590
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7590
  %26 = load i8, i8* %24, align 1, !dbg !7606
  %27 = zext i8 %26 to i32, !dbg !7606
  %28 = load i8, i8* %25, align 1, !dbg !7607
  %29 = zext i8 %28 to i32, !dbg !7607
  %30 = sub nsw i32 %27, %29, !dbg !7608
  br label %31, !dbg !7609

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7590
  ret i32 %32, !dbg !7610
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !7611 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7615, metadata !DIExpression()), !dbg !7620
  call void @llvm.dbg.value(metadata i8* %1, metadata !7616, metadata !DIExpression()), !dbg !7620
  call void @llvm.dbg.value(metadata i32 %2, metadata !7617, metadata !DIExpression()), !dbg !7620
  call void @llvm.dbg.value(metadata i8* %0, metadata !7618, metadata !DIExpression()), !dbg !7620
  call void @llvm.dbg.value(metadata i8* %1, metadata !7619, metadata !DIExpression()), !dbg !7620
  %4 = ptrtoint i8* %0 to i32, !dbg !7621
  %5 = ptrtoint i8* %1 to i32, !dbg !7621
  %6 = sub i32 %4, %5, !dbg !7621
  %7 = icmp ult i32 %6, %2, !dbg !7623
  br i1 %7, label %10, label %8, !dbg !7624

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7619, metadata !DIExpression()), !dbg !7620
  call void @llvm.dbg.value(metadata i8* %0, metadata !7618, metadata !DIExpression()), !dbg !7620
  call void @llvm.dbg.value(metadata i32 %2, metadata !7617, metadata !DIExpression()), !dbg !7620
  %9 = icmp eq i32 %2, 0, !dbg !7625
  br i1 %9, label %26, label %17, !dbg !7627

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7617, metadata !DIExpression()), !dbg !7620
  %12 = add i32 %11, -1, !dbg !7628
  call void @llvm.dbg.value(metadata i32 %12, metadata !7617, metadata !DIExpression()), !dbg !7620
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7631
  %14 = load i8, i8* %13, align 1, !dbg !7631
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7632
  store i8 %14, i8* %15, align 1, !dbg !7633
  %16 = icmp eq i32 %12, 0, !dbg !7634
  br i1 %16, label %26, label %10, !dbg !7635, !llvm.loop !7636

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7619, metadata !DIExpression()), !dbg !7620
  call void @llvm.dbg.value(metadata i8* %19, metadata !7618, metadata !DIExpression()), !dbg !7620
  call void @llvm.dbg.value(metadata i32 %20, metadata !7617, metadata !DIExpression()), !dbg !7620
  %21 = load i8, i8* %18, align 1, !dbg !7638
  store i8 %21, i8* %19, align 1, !dbg !7640
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7641
  call void @llvm.dbg.value(metadata i8* %22, metadata !7618, metadata !DIExpression()), !dbg !7620
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7642
  call void @llvm.dbg.value(metadata i8* %23, metadata !7619, metadata !DIExpression()), !dbg !7620
  %24 = add i32 %20, -1, !dbg !7643
  call void @llvm.dbg.value(metadata i32 %24, metadata !7617, metadata !DIExpression()), !dbg !7620
  %25 = icmp eq i32 %24, 0, !dbg !7625
  br i1 %25, label %26, label %17, !dbg !7627, !llvm.loop !7644

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7646
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #12 !dbg !7647 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7653, metadata !DIExpression()), !dbg !7658
  call void @llvm.dbg.value(metadata i8* %1, metadata !7654, metadata !DIExpression()), !dbg !7658
  call void @llvm.dbg.value(metadata i32 %2, metadata !7655, metadata !DIExpression()), !dbg !7658
  call void @llvm.dbg.value(metadata i8* %0, metadata !7656, metadata !DIExpression()), !dbg !7658
  call void @llvm.dbg.value(metadata i8* %1, metadata !7657, metadata !DIExpression()), !dbg !7658
  %4 = icmp eq i32 %2, 0, !dbg !7659
  br i1 %4, label %14, label %5, !dbg !7660

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7657, metadata !DIExpression()), !dbg !7658
  call void @llvm.dbg.value(metadata i8* %7, metadata !7656, metadata !DIExpression()), !dbg !7658
  call void @llvm.dbg.value(metadata i32 %8, metadata !7655, metadata !DIExpression()), !dbg !7658
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7661
  call void @llvm.dbg.value(metadata i8* %9, metadata !7657, metadata !DIExpression()), !dbg !7658
  %10 = load i8, i8* %6, align 1, !dbg !7663
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7664
  call void @llvm.dbg.value(metadata i8* %11, metadata !7656, metadata !DIExpression()), !dbg !7658
  store i8 %10, i8* %7, align 1, !dbg !7665
  %12 = add i32 %8, -1, !dbg !7666
  call void @llvm.dbg.value(metadata i32 %12, metadata !7655, metadata !DIExpression()), !dbg !7658
  %13 = icmp eq i32 %12, 0, !dbg !7659
  br i1 %13, label %14, label %5, !dbg !7660, !llvm.loop !7667

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7669
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7670 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7674, metadata !DIExpression()), !dbg !7679
  call void @llvm.dbg.value(metadata i32 %1, metadata !7675, metadata !DIExpression()), !dbg !7679
  call void @llvm.dbg.value(metadata i32 %2, metadata !7676, metadata !DIExpression()), !dbg !7679
  call void @llvm.dbg.value(metadata i8* %0, metadata !7677, metadata !DIExpression()), !dbg !7679
  %4 = trunc i32 %1 to i8, !dbg !7680
  call void @llvm.dbg.value(metadata i8 %4, metadata !7678, metadata !DIExpression()), !dbg !7679
  call void @llvm.dbg.value(metadata i32 %2, metadata !7676, metadata !DIExpression()), !dbg !7679
  call void @llvm.dbg.value(metadata i8* %0, metadata !7677, metadata !DIExpression()), !dbg !7679
  %5 = icmp eq i32 %2, 0, !dbg !7681
  br i1 %5, label %12, label %6, !dbg !7682

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7676, metadata !DIExpression()), !dbg !7679
  call void @llvm.dbg.value(metadata i8* %8, metadata !7677, metadata !DIExpression()), !dbg !7679
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7683
  call void @llvm.dbg.value(metadata i8* %9, metadata !7677, metadata !DIExpression()), !dbg !7679
  store i8 %4, i8* %8, align 1, !dbg !7685
  %10 = add i32 %7, -1, !dbg !7686
  call void @llvm.dbg.value(metadata i32 %10, metadata !7676, metadata !DIExpression()), !dbg !7679
  %11 = icmp eq i32 %10, 0, !dbg !7681
  br i1 %11, label %12, label %6, !dbg !7682, !llvm.loop !7687

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7689
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #11 !dbg !7690 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7694, metadata !DIExpression()), !dbg !7700
  call void @llvm.dbg.value(metadata i32 %1, metadata !7695, metadata !DIExpression()), !dbg !7700
  call void @llvm.dbg.value(metadata i32 %2, metadata !7696, metadata !DIExpression()), !dbg !7700
  %4 = icmp eq i32 %2, 0, !dbg !7701
  br i1 %4, label %17, label %5, !dbg !7702

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7703

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7704
  call void @llvm.dbg.value(metadata i8* %9, metadata !7697, metadata !DIExpression()), !dbg !7704
  call void @llvm.dbg.value(metadata i32 %8, metadata !7696, metadata !DIExpression()), !dbg !7700
  call void @llvm.dbg.value(metadata i8* %9, metadata !7697, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7704
  %10 = load i8, i8* %9, align 1, !dbg !7705
  %11 = icmp eq i8 %10, %6, !dbg !7708
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7709
  call void @llvm.dbg.value(metadata i8* %12, metadata !7697, metadata !DIExpression()), !dbg !7704
  call void @llvm.dbg.value(metadata i32 %13, metadata !7696, metadata !DIExpression()), !dbg !7700
  br i1 %15, label %16, label %7, !dbg !7709, !llvm.loop !7710

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7712

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7700
  ret i8* %19, !dbg !7713
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !7714 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7716, metadata !DIExpression()), !dbg !7717
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !7718
  ret void, !dbg !7719
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !7720 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7724, metadata !DIExpression()), !dbg !7730
  call void @llvm.dbg.value(metadata i32 %1, metadata !7725, metadata !DIExpression()), !dbg !7730
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !7726, metadata !DIExpression()), !dbg !7730
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !7731
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !7731
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !7731
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !7727, metadata !DIExpression()), !dbg !7730
  call void @llvm.dbg.value(metadata i32 %0, metadata !7729, metadata !DIExpression()), !dbg !7730
  %7 = icmp slt i32 %0, %1, !dbg !7732
  br i1 %7, label %8, label %22, !dbg !7735

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7729, metadata !DIExpression()), !dbg !7730
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !7736
  %11 = icmp eq i32 %10, 0, !dbg !7736
  br i1 %11, label %19, label %12, !dbg !7739

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !7740
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !7742
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !7742
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !7744
  br i1 %15, label %19, label %16, !dbg !7745

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !7746
  %18 = load i8*, i8** %17, align 4, !dbg !7746
  tail call void %14(i32 noundef %9, i8* noundef %18) #26, !dbg !7747
  br label %19, !dbg !7748

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !7749
  call void @llvm.dbg.value(metadata i32 %20, metadata !7729, metadata !DIExpression()), !dbg !7730
  %21 = icmp eq i32 %20, %1, !dbg !7732
  br i1 %21, label %22, label %8, !dbg !7735, !llvm.loop !7750

22:                                               ; preds = %19, %3
  ret void, !dbg !7752
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #15 !dbg !7753 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7755, metadata !DIExpression()), !dbg !7756
  %2 = shl nuw i32 1, %0, !dbg !7757
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !7760
  ret i32 %3, !dbg !7761
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #14 !dbg !7762 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7764, metadata !DIExpression()), !dbg !7765
  %2 = shl nuw i32 1, %0, !dbg !7766
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !7769
  ret void, !dbg !7770
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !7771 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7774, metadata !DIExpression()), !dbg !7775
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7776
  ret void, !dbg !7777
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7778 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7780, metadata !DIExpression()), !dbg !7781
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7782
  %3 = and i32 %2, %0, !dbg !7782
  %4 = icmp eq i32 %3, %0, !dbg !7783
  %5 = zext i1 %4 to i32, !dbg !7783
  ret i32 %5, !dbg !7784
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !7785 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7787, metadata !DIExpression()), !dbg !7788
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !7789
  ret void, !dbg !7790
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !7791 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7793, metadata !DIExpression()), !dbg !7794
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !7795
  ret void, !dbg !7796
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !7797 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7799, metadata !DIExpression()), !dbg !7800
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !7801
  ret void, !dbg !7802
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !7803 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7805, metadata !DIExpression()), !dbg !7806
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !7807
  ret void, !dbg !7808
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !7809 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7811, metadata !DIExpression()), !dbg !7812
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !7813
  ret void, !dbg !7814
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !7815 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7817, metadata !DIExpression()), !dbg !7818
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !7819
  ret void, !dbg !7820
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !7821 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7823, metadata !DIExpression()), !dbg !7824
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !7825
  ret void, !dbg !7826
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !7827 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7829, metadata !DIExpression()), !dbg !7830
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !7831
  ret void, !dbg !7832
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !7833 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7835, metadata !DIExpression()), !dbg !7836
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !7837
  ret void, !dbg !7838
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !7839 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7841, metadata !DIExpression()), !dbg !7842
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !7843
  ret void, !dbg !7844
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7845 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7847, metadata !DIExpression()), !dbg !7848
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !7849
  ret i32 0, !dbg !7850
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !748 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !752, metadata !DIExpression()), !dbg !7851
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #26, !dbg !7852
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #26, !dbg !7854
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #26, !dbg !7856
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #26, !dbg !7858
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #26, !dbg !7860
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #26, !dbg !7862
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #26, !dbg !7864
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #26, !dbg !7866
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #26, !dbg !7868
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #26, !dbg !7870
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #26, !dbg !7872
  ret void, !dbg !7874
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7875 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7877, metadata !DIExpression()), !dbg !7879
  call void @llvm.dbg.value(metadata i32 0, metadata !7878, metadata !DIExpression()), !dbg !7879
  call void @llvm.dbg.value(metadata i32 undef, metadata !7878, metadata !DIExpression()), !dbg !7879
  %2 = lshr i32 6684671, %0, !dbg !7880
  %3 = and i32 %2, 1, !dbg !7880
  %4 = or i32 %3, %0, !dbg !7882
  %5 = icmp eq i32 %4, 0, !dbg !7882
  br i1 %5, label %6, label %7, !dbg !7882

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.77, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.79, i32 0, i32 0), i32 noundef 123) #26, !dbg !7883
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.79, i32 0, i32 0), i32 noundef 123) #26, !dbg !7883
  unreachable, !dbg !7883

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !7888
  %9 = load i32, i32* %8, align 4, !dbg !7888
  call void @llvm.dbg.value(metadata i32 %9, metadata !7878, metadata !DIExpression()), !dbg !7879
  %10 = shl nuw i32 1, %0, !dbg !7889
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #24, !dbg !7890
  tail call void @arch_irq_enable(i32 noundef %9) #26, !dbg !7891
  ret void, !dbg !7892
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !7893 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7895, metadata !DIExpression()), !dbg !7896
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7897
  %3 = or i32 %2, %0, !dbg !7897
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7897
  ret void, !dbg !7898
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #14 !dbg !7899 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7901, metadata !DIExpression()), !dbg !7902
  %2 = icmp slt i32 %0, 32, !dbg !7903
  br i1 %2, label %3, label %5, !dbg !7905

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !7906
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !7908
  br label %5, !dbg !7909

5:                                                ; preds = %1, %3
  ret void, !dbg !7910
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !7911 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7913, metadata !DIExpression()), !dbg !7914
  %2 = xor i32 %0, -1, !dbg !7915
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7915
  %4 = and i32 %3, %2, !dbg !7915
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7915
  ret void, !dbg !7916
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #14 !dbg !7917 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7921, metadata !DIExpression()), !dbg !7923
  call void @llvm.dbg.value(metadata i32 %1, metadata !7922, metadata !DIExpression()), !dbg !7923
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !7924

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !7925
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !7927
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !7928
  br label %11, !dbg !7929

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !7930
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !7931
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !7932
  br label %11, !dbg !7933

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !7934
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !7935
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !7936
  br label %11, !dbg !7937

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !7938
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !7939
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !7940
  br label %11, !dbg !7941

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !7942
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !7943 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7945, metadata !DIExpression()), !dbg !7946
  %2 = xor i32 %0, -1, !dbg !7947
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7947
  %4 = and i32 %3, %2, !dbg !7947
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7947
  ret void, !dbg !7948
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !7949 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7951, metadata !DIExpression()), !dbg !7952
  %2 = xor i32 %0, -1, !dbg !7953
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7953
  %4 = and i32 %3, %2, !dbg !7953
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7953
  ret void, !dbg !7954
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !7955 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7957, metadata !DIExpression()), !dbg !7958
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7959
  %3 = or i32 %2, %0, !dbg !7959
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7959
  ret void, !dbg !7960
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !7961 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7963, metadata !DIExpression()), !dbg !7964
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7965
  %3 = or i32 %2, %0, !dbg !7965
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7965
  ret void, !dbg !7966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #10 !dbg !7967 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7971, metadata !DIExpression()), !dbg !7977
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !7972, metadata !DIExpression()), !dbg !7977
  call void @llvm.dbg.value(metadata i8* %2, metadata !7973, metadata !DIExpression()), !dbg !7977
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !7974, metadata !DIExpression()), !dbg !7977
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7976, metadata !DIExpression()), !dbg !7977
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7978
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !7978
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !7980
  br i1 %6, label %7, label %9, !dbg !7981

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !7982
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7983
  store i8* %2, i8** %8, align 4, !dbg !7984
  br label %9, !dbg !7985

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !7977
  ret i32 %10, !dbg !7986
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #7 !dbg !7987 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7989, metadata !DIExpression()), !dbg !7992
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !7990, metadata !DIExpression()), !dbg !7992
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7991, metadata !DIExpression()), !dbg !7992
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7993
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !7994
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7995
  store i8* null, i8** %3, align 4, !dbg !7996
  ret void, !dbg !7997
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !7998 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8000, metadata !DIExpression()), !dbg !8005
  call void @llvm.dbg.value(metadata i8* %1, metadata !8001, metadata !DIExpression()), !dbg !8005
  call void @llvm.dbg.value(metadata i8* %1, metadata !8002, metadata !DIExpression()), !dbg !8005
  %3 = bitcast i8* %1 to i32*, !dbg !8006
  %4 = load i32, i32* %3, align 4, !dbg !8006
  %5 = add i32 %4, -169, !dbg !8006
  %6 = icmp ult i32 %5, -121, !dbg !8006
  br i1 %6, label %15, label %7, !dbg !8008

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8009
  %9 = inttoptr i32 %8 to i32*, !dbg !8010
  call void @llvm.dbg.value(metadata i32* %9, metadata !8003, metadata !DIExpression()), !dbg !8005
  %10 = load volatile i32, i32* %9, align 4, !dbg !8011
  call void @llvm.dbg.value(metadata i32 %10, metadata !8004, metadata !DIExpression()), !dbg !8005
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8012
  %12 = bitcast i8* %11 to i32*, !dbg !8012
  %13 = load i32, i32* %12, align 4, !dbg !8012
  %14 = or i32 %13, %10, !dbg !8013
  call void @llvm.dbg.value(metadata i32 %14, metadata !8004, metadata !DIExpression()), !dbg !8005
  store volatile i32 %14, i32* %9, align 4, !dbg !8014
  br label %15, !dbg !8015

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8005
  ret i32 %16, !dbg !8016
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !8017 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8019, metadata !DIExpression()), !dbg !8024
  call void @llvm.dbg.value(metadata i8* %1, metadata !8020, metadata !DIExpression()), !dbg !8024
  call void @llvm.dbg.value(metadata i8* %1, metadata !8021, metadata !DIExpression()), !dbg !8024
  %3 = bitcast i8* %1 to i32*, !dbg !8025
  %4 = load i32, i32* %3, align 4, !dbg !8025
  %5 = add i32 %4, -169, !dbg !8025
  %6 = icmp ult i32 %5, -121, !dbg !8025
  br i1 %6, label %16, label %7, !dbg !8027

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8028
  %9 = inttoptr i32 %8 to i32*, !dbg !8029
  call void @llvm.dbg.value(metadata i32* %9, metadata !8022, metadata !DIExpression()), !dbg !8024
  %10 = load volatile i32, i32* %9, align 4, !dbg !8030
  call void @llvm.dbg.value(metadata i32 %10, metadata !8023, metadata !DIExpression()), !dbg !8024
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8031
  %12 = bitcast i8* %11 to i32*, !dbg !8031
  %13 = load i32, i32* %12, align 4, !dbg !8031
  %14 = xor i32 %13, -1, !dbg !8032
  %15 = and i32 %10, %14, !dbg !8033
  call void @llvm.dbg.value(metadata i32 %15, metadata !8023, metadata !DIExpression()), !dbg !8024
  store volatile i32 %15, i32* %9, align 4, !dbg !8034
  br label %16, !dbg !8035

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8024
  ret i32 %17, !dbg !8036
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8037 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8039, metadata !DIExpression()), !dbg !8047
  call void @llvm.dbg.value(metadata i8* %1, metadata !8040, metadata !DIExpression()), !dbg !8047
  call void @llvm.dbg.value(metadata i32* %2, metadata !8041, metadata !DIExpression()), !dbg !8047
  call void @llvm.dbg.value(metadata i8* %1, metadata !8042, metadata !DIExpression()), !dbg !8047
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8048
  call void @llvm.dbg.value(metadata i32 %4, metadata !8043, metadata !DIExpression()), !dbg !8047
  %5 = tail call fastcc i32 @get_bus_clock(i32 noundef %4) #24, !dbg !8049
  call void @llvm.dbg.value(metadata i32 %5, metadata !8044, metadata !DIExpression()), !dbg !8047
  call void @llvm.dbg.value(metadata i32 %5, metadata !8045, metadata !DIExpression()), !dbg !8047
  call void @llvm.dbg.value(metadata i32 %4, metadata !8046, metadata !DIExpression()), !dbg !8047
  %6 = bitcast i8* %1 to i32*, !dbg !8050
  %7 = load i32, i32* %6, align 4, !dbg !8050
  switch i32 %7, label %20 [
    i32 48, label %18
    i32 52, label %18
    i32 56, label %18
    i32 64, label %8
    i32 68, label %9
    i32 168, label %18
    i32 6, label %18
    i32 1, label %10
    i32 2, label %13
    i32 4, label %16
    i32 5, label %17
  ], !dbg !8051

8:                                                ; preds = %3
  br label %18, !dbg !8052

9:                                                ; preds = %3
  br label %18, !dbg !8054

10:                                               ; preds = %3
  %11 = tail call i32 @get_pllsrc_frequency() #26, !dbg !8055
  %12 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %11, i32 noundef 2) #24, !dbg !8056
  br label %18, !dbg !8057

13:                                               ; preds = %3
  %14 = tail call i32 @get_pllsrc_frequency() #26, !dbg !8058
  %15 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %14, i32 noundef 8) #24, !dbg !8059
  br label %18, !dbg !8060

16:                                               ; preds = %3
  br label %18, !dbg !8061

17:                                               ; preds = %3
  br label %18, !dbg !8062

18:                                               ; preds = %3, %3, %3, %3, %3, %17, %16, %13, %10, %9, %8
  %19 = phi i32 [ %5, %8 ], [ %5, %9 ], [ %12, %10 ], [ %15, %13 ], [ 0, %16 ], [ 32000, %17 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %19, i32* %2, align 4, !dbg !8063
  br label %20, !dbg !8064

20:                                               ; preds = %18, %3
  %21 = phi i32 [ -134, %3 ], [ 0, %18 ], !dbg !8047
  ret i32 %21, !dbg !8064
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #14 !dbg !8065 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8067, metadata !DIExpression()), !dbg !8075
  call void @llvm.dbg.value(metadata i8* %1, metadata !8068, metadata !DIExpression()), !dbg !8075
  call void @llvm.dbg.value(metadata i8* %2, metadata !8069, metadata !DIExpression()), !dbg !8075
  call void @llvm.dbg.value(metadata i8* %1, metadata !8070, metadata !DIExpression()), !dbg !8075
  %4 = bitcast i8* %1 to i32*, !dbg !8076
  %5 = load i32, i32* %4, align 4, !dbg !8076
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !8077
  call void @llvm.dbg.value(metadata i32 %6, metadata !8074, metadata !DIExpression()), !dbg !8075
  %7 = icmp slt i32 %6, 0, !dbg !8078
  br i1 %7, label %22, label %8, !dbg !8080

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8070, metadata !DIExpression()), !dbg !8075
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8081
  %10 = bitcast i8* %9 to i32*, !dbg !8081
  %11 = load i32, i32* %10, align 4, !dbg !8081
  %12 = lshr i32 %11, 16, !dbg !8081
  %13 = and i32 %12, 7, !dbg !8081
  %14 = lshr i32 %11, 8, !dbg !8082
  %15 = and i32 %14, 31, !dbg !8082
  %16 = shl i32 %13, %15, !dbg !8083
  call void @llvm.dbg.value(metadata i32 %16, metadata !8073, metadata !DIExpression()), !dbg !8075
  %17 = and i32 %11, 255, !dbg !8084
  %18 = or i32 %17, 1073887232, !dbg !8085
  %19 = inttoptr i32 %18 to i32*, !dbg !8086
  call void @llvm.dbg.value(metadata i32* %19, metadata !8071, metadata !DIExpression()), !dbg !8075
  %20 = load volatile i32, i32* %19, align 4, !dbg !8087
  call void @llvm.dbg.value(metadata i32 %20, metadata !8072, metadata !DIExpression()), !dbg !8075
  %21 = or i32 %16, %20, !dbg !8088
  call void @llvm.dbg.value(metadata i32 %21, metadata !8072, metadata !DIExpression()), !dbg !8075
  store volatile i32 %21, i32* %19, align 4, !dbg !8089
  br label %22, !dbg !8090

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8075
  ret i32 %23, !dbg !8091
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #4 !dbg !8092 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8096, metadata !DIExpression()), !dbg !8098
  call void @llvm.dbg.value(metadata i32 0, metadata !8097, metadata !DIExpression()), !dbg !8098
  %2 = add i32 %0, -1, !dbg !8099
  %3 = icmp ult i32 %2, 6, !dbg !8099
  br i1 %3, label %4, label %7, !dbg !8099

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8099
  %6 = load i32, i32* %5, align 4, !dbg !8099
  call void @llvm.dbg.value(metadata i32 %6, metadata !8097, metadata !DIExpression()), !dbg !8098
  br label %7, !dbg !8100

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8098
  ret i32 %8, !dbg !8101
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0) unnamed_addr #4 !dbg !8102 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8106, metadata !DIExpression()), !dbg !8108
  call void @llvm.dbg.value(metadata i32 2, metadata !8107, metadata !DIExpression()), !dbg !8108
  %2 = lshr i32 %0, 1, !dbg !8109
  ret i32 %2, !dbg !8110
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !8111 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8115, metadata !DIExpression()), !dbg !8119
  call void @llvm.dbg.value(metadata i32 8, metadata !8116, metadata !DIExpression()), !dbg !8119
  call void @llvm.dbg.value(metadata i32 84, metadata !8117, metadata !DIExpression()), !dbg !8119
  call void @llvm.dbg.value(metadata i32 %1, metadata !8118, metadata !DIExpression()), !dbg !8119
  %3 = mul i32 %0, 84, !dbg !8120
  %4 = shl nsw i32 %1, 3, !dbg !8121
  %5 = udiv i32 %3, %4, !dbg !8122
  ret i32 %5, !dbg !8123
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8124 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8126, metadata !DIExpression()), !dbg !8129
  tail call void @config_enable_default_clocks() #26, !dbg !8130
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !8131
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !8131
  %4 = lshr i32 %3, 4, !dbg !8131
  %5 = and i32 %4, 15, !dbg !8131
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8131
  %7 = load i8, i8* %6, align 1, !dbg !8131
  %8 = zext i8 %7 to i32, !dbg !8131
  %9 = lshr i32 %2, %8, !dbg !8131
  call void @llvm.dbg.value(metadata i32 %9, metadata !8127, metadata !DIExpression()), !dbg !8129
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8128, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8129
  %10 = icmp ult i32 %9, 84000000, !dbg !8132
  br i1 %10, label %11, label %13, !dbg !8134

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #26, !dbg !8135
  br label %13, !dbg !8137

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !8138
  tail call fastcc void @set_up_plls() #24, !dbg !8139
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !8140
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !8143
  br label %14, !dbg !8144

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8145
  %16 = icmp eq i32 %15, 8, !dbg !8146
  br i1 %16, label %17, label %14, !dbg !8144, !llvm.loop !8147

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8149
  br i1 %18, label %19, label %21, !dbg !8151

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #26, !dbg !8152
  br label %21, !dbg !8154

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8155
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !8156
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !8157
  ret i32 0, !dbg !8158
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #15 !dbg !8159 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8161
  %2 = and i32 %1, 240, !dbg !8161
  ret i32 %2, !dbg !8162
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #14 !dbg !8163 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !8164
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !8169
  br label %1, !dbg !8170

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !8171
  %3 = icmp eq i32 %2, 1, !dbg !8172
  br i1 %3, label %4, label %1, !dbg !8170, !llvm.loop !8173

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !8175
  br label %5, !dbg !8178

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !8179
  %7 = icmp eq i32 %6, 1, !dbg !8180
  br i1 %7, label %8, label %5, !dbg !8178, !llvm.loop !8181

8:                                                ; preds = %5
  ret void, !dbg !8183
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8184 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8185
  %2 = icmp eq i32 %1, 8, !dbg !8187
  br i1 %2, label %3, label %4, !dbg !8188

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !8189
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !8191
  br label %4, !dbg !8192

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !8193
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8194
  %6 = and i32 %5, -196609, !dbg !8194
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8194
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8195
  %8 = and i32 %7, -251658241, !dbg !8195
  %9 = or i32 %8, 134217728, !dbg !8195
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8195
  tail call void @config_pll_sysclock() #26, !dbg !8196
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !8197
  br label %10, !dbg !8198

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !8199
  %12 = icmp eq i32 %11, 1, !dbg !8200
  br i1 %12, label %13, label %10, !dbg !8198, !llvm.loop !8201

13:                                               ; preds = %10
  ret void, !dbg !8203
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #14 !dbg !8204 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8206, metadata !DIExpression()), !dbg !8207
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8208
  %2 = and i32 %1, -241, !dbg !8208
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8208
  ret void, !dbg !8209
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #14 !dbg !8210 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8212, metadata !DIExpression()), !dbg !8213
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8214
  %3 = and i32 %2, -4, !dbg !8214
  %4 = or i32 %3, %0, !dbg !8214
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8214
  ret void, !dbg !8215
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #15 !dbg !8216 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8217
  %2 = and i32 %1, 12, !dbg !8217
  ret i32 %2, !dbg !8218
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #14 !dbg !8219 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8221, metadata !DIExpression()), !dbg !8222
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8223
  %2 = and i32 %1, -7169, !dbg !8223
  %3 = or i32 %2, 4096, !dbg !8223
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8223
  ret void, !dbg !8224
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #14 !dbg !8225 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !8227, metadata !DIExpression()), !dbg !8228
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8229
  %2 = and i32 %1, -57345, !dbg !8229
  %3 = or i32 %2, 32768, !dbg !8229
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8229
  ret void, !dbg !8230
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #14 !dbg !8231 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8232
  %2 = icmp eq i32 %1, 1, !dbg !8234
  br i1 %2, label %7, label %3, !dbg !8235

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !8236
  br label %4, !dbg !8238

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8239
  %6 = icmp eq i32 %5, 1, !dbg !8240
  br i1 %6, label %7, label %4, !dbg !8238, !llvm.loop !8241

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !8243
  br label %8, !dbg !8244

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8245
  %10 = icmp eq i32 %9, 0, !dbg !8246
  br i1 %10, label %11, label %8, !dbg !8244, !llvm.loop !8247

11:                                               ; preds = %8
  ret void, !dbg !8249
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #14 !dbg !8250 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8251
  %2 = and i32 %1, -16777217, !dbg !8251
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8251
  ret void, !dbg !8252
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #14 !dbg !8253 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8254
  %2 = or i32 %1, 16777216, !dbg !8254
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8254
  ret void, !dbg !8255
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #15 !dbg !8256 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8257
  %2 = lshr i32 %1, 25, !dbg !8258
  %3 = and i32 %2, 1, !dbg !8258
  ret i32 %3, !dbg !8259
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #15 !dbg !8260 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8261
  %2 = lshr i32 %1, 1, !dbg !8262
  %3 = and i32 %2, 1, !dbg !8262
  ret i32 %3, !dbg !8263
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #14 !dbg !8264 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8265
  %2 = or i32 %1, 1, !dbg !8265
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8265
  ret void, !dbg !8266
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #14 !dbg !8267 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8268
  %2 = and i32 %1, -262145, !dbg !8268
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8268
  ret void, !dbg !8269
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #14 !dbg !8270 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8271
  %2 = or i32 %1, 65536, !dbg !8271
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8271
  ret void, !dbg !8272
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #15 !dbg !8273 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8274
  %2 = lshr i32 %1, 17, !dbg !8275
  %3 = and i32 %2, 1, !dbg !8275
  ret i32 %3, !dbg !8276
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #14 !dbg !8277 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8278
  %2 = or i32 %1, 1, !dbg !8278
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8278
  ret void, !dbg !8279
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #15 !dbg !8280 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8281
  %2 = lshr i32 %1, 1, !dbg !8282
  %3 = and i32 %2, 1, !dbg !8282
  ret i32 %3, !dbg !8283
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #4 !dbg !8284 {
  ret i32 16000000, !dbg !8286
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #14 !dbg !8290 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !8291
  ret void, !dbg !8292
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #14 !dbg !8293 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8297, metadata !DIExpression()), !dbg !8301
  call void @llvm.dbg.value(metadata i32 8, metadata !8298, metadata !DIExpression()), !dbg !8301
  call void @llvm.dbg.value(metadata i32 84, metadata !8299, metadata !DIExpression()), !dbg !8301
  call void @llvm.dbg.value(metadata i32 0, metadata !8300, metadata !DIExpression()), !dbg !8301
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8302
  %2 = and i32 %1, -4227072, !dbg !8302
  %3 = or i32 %2, 4199688, !dbg !8302
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8302
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8303
  %5 = and i32 %4, -196609, !dbg !8303
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8303
  ret void, !dbg !8304
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #16 !dbg !8305 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !8306
  ret void, !dbg !8307
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #16 !dbg !8308 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8311, metadata !DIExpression()), !dbg !8313
  %2 = bitcast i32* %1 to i8*, !dbg !8314
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8314
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8312, metadata !DIExpression()), !dbg !8315
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8316
  %4 = or i32 %3, 268435456, !dbg !8316
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8316
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8317
  %6 = and i32 %5, 268435456, !dbg !8317
  store volatile i32 %6, i32* %1, align 4, !dbg !8318
  %7 = load volatile i32, i32* %1, align 4, !dbg !8319
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8320
  ret void, !dbg !8320
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8321 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8323, metadata !DIExpression()), !dbg !8324
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !8325
  br i1 %2, label %3, label %4, !dbg !8327

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !8328
  br label %4, !dbg !8329

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8324
  ret i32 %5, !dbg !8330
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !8331 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8336, metadata !DIExpression()), !dbg !8337
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8338, !srcloc !8340
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !8341
  ret i1 %1, !dbg !8342
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8343 {
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #26, !dbg !8344
  ret void, !dbg !8345
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8346 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8348, metadata !DIExpression()), !dbg !8349
  %2 = icmp eq i32 %0, 10, !dbg !8350
  br i1 %2, label %3, label %4, !dbg !8352

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !8353
  br label %4, !dbg !8355

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8356
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !8357
  ret i32 %0, !dbg !8358
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8359 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8362, metadata !DIExpression()), !dbg !8364
  call void @llvm.dbg.value(metadata i8 %0, metadata !8363, metadata !DIExpression()), !dbg !8364
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8365, !srcloc !8367
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !8368
  ret void, !dbg !8369
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8370 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8372, metadata !DIExpression()), !dbg !8375
  call void @llvm.dbg.value(metadata i8 %0, metadata !8373, metadata !DIExpression()), !dbg !8375
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8376
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8374, metadata !DIExpression()), !dbg !8375
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8377
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8377
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_44, i8 noundef zeroext %0) #26, !dbg !8378
  ret void, !dbg !8379
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !8380 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8382, metadata !DIExpression()), !dbg !8383
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_44) #26, !dbg !8384
  ret i1 %1, !dbg !8385
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !8386 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !8435, metadata !DIExpression()), !dbg !8438
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !8436, metadata !DIExpression()), !dbg !8438
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !8437, metadata !DIExpression()), !dbg !8438
  ret void, !dbg !8439
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8440 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8442, metadata !DIExpression()), !dbg !8447
  call void @llvm.dbg.value(metadata i8 %1, metadata !8443, metadata !DIExpression()), !dbg !8447
  call void @llvm.dbg.value(metadata i32 %2, metadata !8444, metadata !DIExpression()), !dbg !8447
  %5 = bitcast i32* %4 to i8*, !dbg !8448
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !8448
  call void @llvm.dbg.value(metadata i32* %4, metadata !8446, metadata !DIExpression(DW_OP_deref)), !dbg !8447
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !8449
  call void @llvm.dbg.value(metadata i32 %6, metadata !8445, metadata !DIExpression()), !dbg !8447
  %7 = icmp eq i32 %6, 0, !dbg !8450
  br i1 %7, label %8, label %31, !dbg !8452

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !8445, metadata !DIExpression()), !dbg !8447
  %9 = and i32 %2, 131072, !dbg !8453
  %10 = icmp eq i32 %9, 0, !dbg !8455
  br i1 %10, label %28, label %11, !dbg !8456

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !8457
  %13 = icmp eq i32 %12, 0, !dbg !8460
  br i1 %13, label %18, label %14, !dbg !8461

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !8462
  %16 = shl nuw i32 1, %15, !dbg !8462
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !8464
  br label %25, !dbg !8465

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !8466
  %20 = icmp eq i32 %19, 0, !dbg !8468
  %21 = zext i8 %1 to i32, !dbg !8447
  br i1 %20, label %25, label %22, !dbg !8469

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !8470
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !8472
  br label %25, !dbg !8473

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !8474
  %27 = load i32, i32* %4, align 4, !dbg !8475
  call void @llvm.dbg.value(metadata i32 %30, metadata !8446, metadata !DIExpression()), !dbg !8447
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !8476
  br label %31, !dbg !8477

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !8474
  %30 = load i32, i32* %4, align 4, !dbg !8475
  call void @llvm.dbg.value(metadata i32 %30, metadata !8446, metadata !DIExpression()), !dbg !8447
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !8476
  call void @llvm.dbg.value(metadata i32 0, metadata !8445, metadata !DIExpression()), !dbg !8447
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !8478
  ret i32 %6, !dbg !8478
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #15 !dbg !8479 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8483, metadata !DIExpression()), !dbg !8488
  call void @llvm.dbg.value(metadata i32* %1, metadata !8484, metadata !DIExpression()), !dbg !8488
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8489
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8489
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8489
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8485, metadata !DIExpression()), !dbg !8488
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8490
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8490
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8490
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8487, metadata !DIExpression()), !dbg !8488
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !8491
  store i32 %9, i32* %1, align 4, !dbg !8492
  ret i32 0, !dbg !8493
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #14 !dbg !8494 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8496, metadata !DIExpression()), !dbg !8502
  call void @llvm.dbg.value(metadata i32 %1, metadata !8497, metadata !DIExpression()), !dbg !8502
  call void @llvm.dbg.value(metadata i32 %2, metadata !8498, metadata !DIExpression()), !dbg !8502
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8503
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !8503
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !8503
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !8499, metadata !DIExpression()), !dbg !8502
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !8504
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !8504
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !8504
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !8500, metadata !DIExpression()), !dbg !8502
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !8505
  call void @llvm.dbg.value(metadata i32 %10, metadata !8501, metadata !DIExpression()), !dbg !8502
  %11 = xor i32 %1, -1, !dbg !8506
  %12 = and i32 %10, %11, !dbg !8507
  %13 = and i32 %2, %1, !dbg !8508
  %14 = or i32 %12, %13, !dbg !8509
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !8510
  ret i32 0, !dbg !8511
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !8512 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8514, metadata !DIExpression()), !dbg !8518
  call void @llvm.dbg.value(metadata i32 %1, metadata !8515, metadata !DIExpression()), !dbg !8518
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8519
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8519
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8519
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8516, metadata !DIExpression()), !dbg !8518
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8520
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8520
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8520
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8517, metadata !DIExpression()), !dbg !8518
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !8521
  store volatile i32 %1, i32* %9, align 4, !dbg !8521
  ret i32 0, !dbg !8522
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !8523 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8525, metadata !DIExpression()), !dbg !8529
  call void @llvm.dbg.value(metadata i32 %1, metadata !8526, metadata !DIExpression()), !dbg !8529
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8530
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8530
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8530
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8527, metadata !DIExpression()), !dbg !8529
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8531
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8531
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8531
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8528, metadata !DIExpression()), !dbg !8529
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !8532
  ret i32 0, !dbg !8533
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !8534 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8536, metadata !DIExpression()), !dbg !8540
  call void @llvm.dbg.value(metadata i32 %1, metadata !8537, metadata !DIExpression()), !dbg !8540
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8541
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8541
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8541
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8538, metadata !DIExpression()), !dbg !8540
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8542
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8542
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8542
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8539, metadata !DIExpression()), !dbg !8540
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !8543
  %10 = load volatile i32, i32* %9, align 4, !dbg !8543
  %11 = xor i32 %10, %1, !dbg !8543
  store volatile i32 %11, i32* %9, align 4, !dbg !8543
  ret i32 0, !dbg !8544
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !8545 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8547, metadata !DIExpression()), !dbg !8557
  call void @llvm.dbg.value(metadata i8 %1, metadata !8548, metadata !DIExpression()), !dbg !8557
  call void @llvm.dbg.value(metadata i32 %2, metadata !8549, metadata !DIExpression()), !dbg !8557
  call void @llvm.dbg.value(metadata i32 %3, metadata !8550, metadata !DIExpression()), !dbg !8557
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8558
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8558
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8558
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8551, metadata !DIExpression()), !dbg !8557
  call void @llvm.dbg.value(metadata i8* undef, metadata !8552, metadata !DIExpression()), !dbg !8557
  call void @llvm.dbg.value(metadata i32 0, metadata !8554, metadata !DIExpression()), !dbg !8557
  call void @llvm.dbg.value(metadata i32 0, metadata !8555, metadata !DIExpression()), !dbg !8557
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !8559

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !8560
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !8564
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8565
  %12 = load i32, i32* %11, align 4, !dbg !8565
  %13 = icmp eq i32 %10, %12, !dbg !8566
  br i1 %13, label %14, label %29, !dbg !8567

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #26, !dbg !8568
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #26, !dbg !8570
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #26, !dbg !8571
  br label %29, !dbg !8572

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8573
  %17 = load i8*, i8** %16, align 4, !dbg !8573
  call void @llvm.dbg.value(metadata i8* %17, metadata !8552, metadata !DIExpression()), !dbg !8557
  %18 = zext i8 %1 to i32, !dbg !8574
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #26, !dbg !8576
  %20 = icmp eq i32 %19, 0, !dbg !8577
  br i1 %20, label %21, label %29, !dbg !8578

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8579
  %23 = load i32, i32* %22, align 4, !dbg !8579
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !8580
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !8581

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !8554, metadata !DIExpression()), !dbg !8557
  br label %27, !dbg !8582

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !8554, metadata !DIExpression()), !dbg !8557
  br label %27, !dbg !8584

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !8554, metadata !DIExpression()), !dbg !8557
  br label %27, !dbg !8585

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !8557
  call void @llvm.dbg.value(metadata i32 %28, metadata !8554, metadata !DIExpression()), !dbg !8557
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #26, !dbg !8586
  tail call void @stm32_exti_enable(i32 noundef %18) #26, !dbg !8587
  br label %29, !dbg !8587

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !8557
  call void @llvm.dbg.value(metadata i32 %30, metadata !8555, metadata !DIExpression()), !dbg !8557
  call void @llvm.dbg.label(metadata !8556), !dbg !8588
  ret i32 %30, !dbg !8589
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !8590 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8592, metadata !DIExpression()), !dbg !8596
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8593, metadata !DIExpression()), !dbg !8596
  call void @llvm.dbg.value(metadata i1 %2, metadata !8594, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8596
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8597
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !8597
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !8597
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !8595, metadata !DIExpression()), !dbg !8596
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !8598
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !8599
  ret i32 %8, !dbg !8600
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !8601 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8607, metadata !DIExpression()), !dbg !8610
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8608, metadata !DIExpression()), !dbg !8610
  call void @llvm.dbg.value(metadata i1 %2, metadata !8609, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8610
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !8611
  br i1 %4, label %5, label %6, !dbg !8614

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.90, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 42) #26, !dbg !8615
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0)) #26, !dbg !8615
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 42) #26, !dbg !8615
  unreachable, !dbg !8615

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !8617
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !8617
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !8617
  br i1 %9, label %10, label %11, !dbg !8620

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.90, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 43) #26, !dbg !8621
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i32 0, i32 0)) #26, !dbg !8621
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 43) #26, !dbg !8621
  unreachable, !dbg !8621

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !8623
  br i1 %12, label %18, label %13, !dbg !8625

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8626
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #24, !dbg !8629
  %16 = or i1 %15, %2, !dbg !8630
  %17 = select i1 %16, i32 0, i32 -22, !dbg !8630
  br i1 %2, label %19, label %21, !dbg !8630

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !8631

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8632
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #24, !dbg !8635
  br label %21, !dbg !8636

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !8610
  ret i32 %22, !dbg !8637
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8638 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8642, metadata !DIExpression()), !dbg !8643
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !8644
  %3 = icmp eq %struct._snode* %2, null, !dbg !8644
  ret i1 %3, !dbg !8644
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #12 !dbg !8645 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8649, metadata !DIExpression()), !dbg !8653
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8650, metadata !DIExpression()), !dbg !8653
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8651, metadata !DIExpression()), !dbg !8653
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !8654
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8652, metadata !DIExpression()), !dbg !8653
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8651, metadata !DIExpression()), !dbg !8653
  %4 = icmp eq %struct._snode* %3, null, !dbg !8656
  br i1 %4, label %15, label %5, !dbg !8654

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8652, metadata !DIExpression()), !dbg !8653
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8651, metadata !DIExpression()), !dbg !8653
  %6 = icmp eq %struct._snode* %3, %1, !dbg !8658
  br i1 %6, label %9, label %11, !dbg !8661

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8652, metadata !DIExpression()), !dbg !8653
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8651, metadata !DIExpression()), !dbg !8653
  %8 = icmp eq %struct._snode* %13, %1, !dbg !8658
  br i1 %8, label %9, label %11, !dbg !8661, !llvm.loop !8662

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !8663
  br label %15, !dbg !8663

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8652, metadata !DIExpression()), !dbg !8653
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8651, metadata !DIExpression()), !dbg !8653
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !8656
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8652, metadata !DIExpression()), !dbg !8653
  %14 = icmp eq %struct._snode* %13, null, !dbg !8656
  br i1 %14, label %15, label %7, !dbg !8654, !llvm.loop !8662

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !8665
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #10 !dbg !8666 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8670, metadata !DIExpression()), !dbg !8672
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8671, metadata !DIExpression()), !dbg !8672
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !8673
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !8673
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !8673
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !8674
  %5 = icmp eq %struct._snode* %4, null, !dbg !8674
  br i1 %5, label %6, label %8, !dbg !8673

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !8676
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !8676
  br label %8, !dbg !8676

8:                                                ; preds = %6, %2
  ret void, !dbg !8673
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8678 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8682, metadata !DIExpression()), !dbg !8683
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8684
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8684
  ret %struct._snode* %3, !dbg !8685
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !8686 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8690, metadata !DIExpression()), !dbg !8692
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8691, metadata !DIExpression()), !dbg !8692
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8693
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8694
  ret void, !dbg !8695
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !8696 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8698, metadata !DIExpression()), !dbg !8700
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8699, metadata !DIExpression()), !dbg !8700
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8701
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8702
  ret void, !dbg !8703
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8704 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8706, metadata !DIExpression()), !dbg !8707
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8708
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8708
  ret %struct._snode* %3, !dbg !8709
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !8710 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8712, metadata !DIExpression()), !dbg !8714
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8713, metadata !DIExpression()), !dbg !8714
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8715
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8716
  ret void, !dbg !8717
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #10 !dbg !8718 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8722, metadata !DIExpression()), !dbg !8725
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8723, metadata !DIExpression()), !dbg !8725
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !8724, metadata !DIExpression()), !dbg !8725
  %4 = icmp eq %struct._snode* %1, null, !dbg !8726
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !8728
  br i1 %4, label %6, label %11, !dbg !8729

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !8730
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !8732
  %8 = icmp eq %struct._snode* %7, %2, !dbg !8732
  br i1 %8, label %9, label %15, !dbg !8730

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !8734
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !8734
  br label %15, !dbg !8734

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !8736
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !8738
  %13 = icmp eq %struct._snode* %12, %2, !dbg !8738
  br i1 %13, label %14, label %15, !dbg !8736

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !8740
  br label %15, !dbg !8740

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !8729
  ret void, !dbg !8729
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !8742 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8746, metadata !DIExpression()), !dbg !8747
  %2 = icmp eq %struct._snode* %0, null, !dbg !8748
  br i1 %2, label %5, label %3, !dbg !8748

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !8748
  br label %5, !dbg !8748

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !8748
  ret %struct._snode* %6, !dbg !8748
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8749 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8751, metadata !DIExpression()), !dbg !8752
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !8753
  ret %struct._snode* %2, !dbg !8753
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8754 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8756, metadata !DIExpression()), !dbg !8757
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8758
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8758
  ret %struct._snode* %3, !dbg !8759
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !8760 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8762, metadata !DIExpression()), !dbg !8765
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !8766, !range !8767
  call void @llvm.dbg.value(metadata i32 %2, metadata !8763, metadata !DIExpression()), !dbg !8765
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !8768
  call void @llvm.dbg.value(metadata i32 %3, metadata !8764, metadata !DIExpression()), !dbg !8765
  ret i32 %3, !dbg !8769
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !8770 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8772, metadata !DIExpression()), !dbg !8775
  call void @llvm.dbg.value(metadata i8* %1, metadata !8773, metadata !DIExpression()), !dbg !8775
  call void @llvm.dbg.value(metadata i8* %1, metadata !8774, metadata !DIExpression()), !dbg !8775
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !8776
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !8776
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8777
  %6 = bitcast i8* %5 to %struct.device**, !dbg !8777
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !8777
  %8 = shl nuw i32 1, %0, !dbg !8778
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !8779
  ret void, !dbg !8780
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8781 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !8785, metadata !DIExpression()), !dbg !8791
  call void @llvm.dbg.value(metadata i32 %1, metadata !8786, metadata !DIExpression()), !dbg !8791
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8787, metadata !DIExpression()), !dbg !8791
  %4 = bitcast i64* %3 to i8*, !dbg !8792
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !8792
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !8789, metadata !DIExpression()), !dbg !8791
  store i64 70368744177732, i64* %3, align 8, !dbg !8793
  call void @llvm.dbg.value(metadata i64* %3, metadata !8789, metadata !DIExpression(DW_OP_deref)), !dbg !8791
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !8794
  call void @llvm.dbg.value(metadata i32 %5, metadata !8790, metadata !DIExpression()), !dbg !8791
  %6 = icmp eq i32 %5, 0, !dbg !8795
  br i1 %6, label %7, label %8, !dbg !8797

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !8798
  br label %8, !dbg !8799

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !8800
  ret void, !dbg !8800
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !8801 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8803, metadata !DIExpression()), !dbg !8806
  call void @llvm.dbg.value(metadata i8* %0, metadata !8804, metadata !DIExpression()), !dbg !8806
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !8807
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !8805, metadata !DIExpression()), !dbg !8806
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !8808
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !8808
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #26, !dbg !8809
  ret i32 %5, !dbg !8810
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8811 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8813, metadata !DIExpression()), !dbg !8816
  call void @llvm.dbg.value(metadata i32 %1, metadata !8814, metadata !DIExpression()), !dbg !8816
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !8817
  call void @llvm.dbg.value(metadata i32 %3, metadata !8815, metadata !DIExpression()), !dbg !8816
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !8818
  ret void, !dbg !8819
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #4 !dbg !8820 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8824, metadata !DIExpression()), !dbg !8825
  %2 = sdiv i32 %0, 4, !dbg !8826
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !8827
  %6 = add nsw i32 %5, 16, !dbg !8828
  %7 = shl i32 15, %6, !dbg !8829
  %8 = or i32 %7, %2, !dbg !8830
  ret i32 %8, !dbg !8831
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8832 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8836, metadata !DIExpression()), !dbg !8838
  call void @llvm.dbg.value(metadata i32 %1, metadata !8837, metadata !DIExpression()), !dbg !8838
  %3 = and i32 %1, 255, !dbg !8839
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !8839
  %5 = load volatile i32, i32* %4, align 4, !dbg !8839
  %6 = lshr i32 %1, 16, !dbg !8839
  %7 = xor i32 %6, -1, !dbg !8839
  %8 = and i32 %5, %7, !dbg !8839
  call void @llvm.dbg.value(metadata i32 %6, metadata !8840, metadata !DIExpression()) #23, !dbg !8844
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !8846, !srcloc !8847
  call void @llvm.dbg.value(metadata i32 %9, metadata !8843, metadata !DIExpression()) #23, !dbg !8844
  call void @llvm.dbg.value(metadata i32 %9, metadata !8848, metadata !DIExpression()) #23, !dbg !8853
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !8855, !range !7158
  %11 = shl i32 %0, %10, !dbg !8839
  %12 = or i32 %11, %8, !dbg !8839
  store volatile i32 %12, i32* %4, align 4, !dbg !8839
  ret void, !dbg !8856
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8857 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8861, metadata !DIExpression()), !dbg !8866
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !8862, metadata !DIExpression()), !dbg !8866
  call void @llvm.dbg.value(metadata i32 %2, metadata !8863, metadata !DIExpression()), !dbg !8866
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !8867
  %5 = icmp eq %struct._snode* %4, null, !dbg !8867
  br i1 %5, label %24, label %6, !dbg !8867

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !8869
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8865, metadata !DIExpression()), !dbg !8866
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !8864, metadata !DIExpression()), !dbg !8866
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !8870
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !8870
  %12 = load i32, i32* %11, align 4, !dbg !8870
  %13 = and i32 %12, %2, !dbg !8874
  %14 = icmp eq i32 %13, 0, !dbg !8874
  br i1 %14, label %22, label %15, !dbg !8875

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !8876
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !8876
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !8876
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !8876
  br i1 %19, label %20, label %21, !dbg !8880

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.90, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.91, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 77) #26, !dbg !8881
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i32 0, i32 0)) #26, !dbg !8881
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 77) #26, !dbg !8881
  unreachable, !dbg !8881

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #26, !dbg !8883
  br label %22, !dbg !8884

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8864, metadata !DIExpression()), !dbg !8866
  %23 = icmp eq %struct._snode* %8, null, !dbg !8885
  br i1 %23, label %24, label %6, !dbg !8885

24:                                               ; preds = %22, %3
  ret void, !dbg !8886
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !8887 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8889, metadata !DIExpression()), !dbg !8890
  %2 = and i32 %0, 255, !dbg !8891
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !8891
  %4 = load volatile i32, i32* %3, align 4, !dbg !8891
  %5 = lshr i32 %0, 16, !dbg !8891
  %6 = and i32 %4, %5, !dbg !8891
  call void @llvm.dbg.value(metadata i32 %5, metadata !8840, metadata !DIExpression()) #23, !dbg !8892
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !8894, !srcloc !8847
  call void @llvm.dbg.value(metadata i32 %7, metadata !8843, metadata !DIExpression()) #23, !dbg !8892
  call void @llvm.dbg.value(metadata i32 %7, metadata !8848, metadata !DIExpression()) #23, !dbg !8895
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !8897, !range !7158
  %9 = lshr i32 %6, %8, !dbg !8898
  ret i32 %9, !dbg !8899
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !8900 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8905, metadata !DIExpression()), !dbg !8907
  call void @llvm.dbg.value(metadata i32 %1, metadata !8906, metadata !DIExpression()), !dbg !8907
  %3 = shl i32 %1, 16, !dbg !8908
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !8908
  store volatile i32 %3, i32* %4, align 4, !dbg !8908
  ret void, !dbg !8909
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !8910 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8914, metadata !DIExpression()), !dbg !8915
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !8916
  %3 = load volatile i32, i32* %2, align 4, !dbg !8916
  ret i32 %3, !dbg !8917
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !8918 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8920, metadata !DIExpression()), !dbg !8922
  call void @llvm.dbg.value(metadata i32 %1, metadata !8921, metadata !DIExpression()), !dbg !8922
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !8923
  store volatile i32 %1, i32* %3, align 4, !dbg !8923
  ret void, !dbg !8924
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !8925 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8927, metadata !DIExpression()), !dbg !8928
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !8929
  %3 = load volatile i32, i32* %2, align 4, !dbg !8929
  ret i32 %3, !dbg !8930
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #10 !dbg !8931 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8935, metadata !DIExpression()), !dbg !8937
  call void @llvm.dbg.value(metadata i32* %1, metadata !8936, metadata !DIExpression()), !dbg !8937
  %3 = and i32 %0, 131072, !dbg !8938
  %4 = icmp eq i32 %3, 0, !dbg !8940
  br i1 %4, label %22, label %5, !dbg !8941

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !8942
  %6 = and i32 %0, 2, !dbg !8944
  %7 = icmp eq i32 %6, 0, !dbg !8946
  br i1 %7, label %11, label %8, !dbg !8947

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !8948
  %10 = icmp eq i32 %9, 0, !dbg !8948
  br i1 %10, label %33, label %11, !dbg !8951

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !8952
  store i32 %12, i32* %1, align 4, !dbg !8952
  %13 = and i32 %0, 16, !dbg !8953
  %14 = icmp eq i32 %13, 0, !dbg !8955
  br i1 %14, label %17, label %15, !dbg !8956

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !8957
  br label %31, !dbg !8959

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !8960
  %19 = icmp eq i32 %18, 0, !dbg !8962
  br i1 %19, label %33, label %20, !dbg !8963

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !8964
  br label %31, !dbg !8966

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !8967
  %24 = icmp eq i32 %23, 0, !dbg !8969
  br i1 %24, label %31, label %25, !dbg !8970

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !8971
  %27 = icmp eq i32 %26, 0, !dbg !8974
  br i1 %27, label %28, label %31, !dbg !8975

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !8976
  br label %33, !dbg !8977

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !8937
  ret i32 %34, !dbg !8977
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !8978 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8982, metadata !DIExpression()), !dbg !8993
  call void @llvm.dbg.value(metadata i32 %1, metadata !8983, metadata !DIExpression()), !dbg !8993
  call void @llvm.dbg.value(metadata i32 %2, metadata !8984, metadata !DIExpression()), !dbg !8993
  call void @llvm.dbg.value(metadata i32 %3, metadata !8985, metadata !DIExpression()), !dbg !8993
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8994
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8994
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8994
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8986, metadata !DIExpression()), !dbg !8993
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !8995
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !8995
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !8995
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !8987, metadata !DIExpression()), !dbg !8993
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !8996
  call void @llvm.dbg.value(metadata i32 %11, metadata !8988, metadata !DIExpression()), !dbg !8993
  %12 = and i32 %2, 48, !dbg !8997
  call void @llvm.dbg.value(metadata i32 %12, metadata !8989, metadata !DIExpression()), !dbg !8993
  call void @llvm.dbg.value(metadata i32 %2, metadata !8990, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !8993
  call void @llvm.dbg.value(metadata i32 %2, metadata !8991, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !8993
  call void @llvm.dbg.value(metadata i32 %2, metadata !8992, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !8993
  %13 = lshr i32 %2, 6, !dbg !8998
  %14 = and i32 %13, 1, !dbg !8998
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !8999
  %15 = lshr i32 %2, 7, !dbg !9000
  %16 = and i32 %15, 3, !dbg !9000
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !9001
  %17 = lshr i32 %2, 9, !dbg !9002
  %18 = and i32 %17, 3, !dbg !9002
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !9003
  %19 = icmp eq i32 %12, 32, !dbg !9004
  br i1 %19, label %20, label %24, !dbg !9006

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9007
  br i1 %21, label %22, label %23, !dbg !9010

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !9011
  br label %24, !dbg !9013

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !9014
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9016
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !9017
  ret void, !dbg !9018
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #4 !dbg !9019 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9021, metadata !DIExpression()), !dbg !9023
  %2 = shl nuw i32 1, %0, !dbg !9024
  call void @llvm.dbg.value(metadata i32 %2, metadata !9022, metadata !DIExpression()), !dbg !9023
  ret i32 %2, !dbg !9025
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !9026 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9030, metadata !DIExpression()), !dbg !9033
  call void @llvm.dbg.value(metadata i32 %1, metadata !9031, metadata !DIExpression()), !dbg !9033
  call void @llvm.dbg.value(metadata i32 %2, metadata !9032, metadata !DIExpression()), !dbg !9033
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9034
  %5 = load volatile i32, i32* %4, align 4, !dbg !9034
  %6 = xor i32 %1, -1, !dbg !9034
  %7 = and i32 %5, %6, !dbg !9034
  %8 = mul i32 %2, %1, !dbg !9034
  %9 = or i32 %7, %8, !dbg !9034
  store volatile i32 %9, i32* %4, align 4, !dbg !9034
  ret void, !dbg !9035
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9036 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9038, metadata !DIExpression()), !dbg !9041
  call void @llvm.dbg.value(metadata i32 %1, metadata !9039, metadata !DIExpression()), !dbg !9041
  call void @llvm.dbg.value(metadata i32 %2, metadata !9040, metadata !DIExpression()), !dbg !9041
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9042
  %5 = load volatile i32, i32* %4, align 4, !dbg !9042
  call void @llvm.dbg.value(metadata i32 %1, metadata !8840, metadata !DIExpression()) #23, !dbg !9043
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9045, !srcloc !8847
  call void @llvm.dbg.value(metadata i32 %6, metadata !8843, metadata !DIExpression()) #23, !dbg !9043
  call void @llvm.dbg.value(metadata i32 %6, metadata !8848, metadata !DIExpression()) #23, !dbg !9046
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9048, !range !7158
  %8 = shl nuw nsw i32 %7, 1, !dbg !9042
  %9 = shl i32 3, %8, !dbg !9042
  %10 = xor i32 %9, -1, !dbg !9042
  %11 = and i32 %5, %10, !dbg !9042
  call void @llvm.dbg.value(metadata i32 %1, metadata !8840, metadata !DIExpression()) #23, !dbg !9049
  call void @llvm.dbg.value(metadata i32 %6, metadata !8843, metadata !DIExpression()) #23, !dbg !9049
  call void @llvm.dbg.value(metadata i32 %6, metadata !8848, metadata !DIExpression()) #23, !dbg !9051
  %12 = shl i32 %2, %8, !dbg !9042
  %13 = or i32 %11, %12, !dbg !9042
  store volatile i32 %13, i32* %4, align 4, !dbg !9042
  ret void, !dbg !9053
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9054 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9056, metadata !DIExpression()), !dbg !9059
  call void @llvm.dbg.value(metadata i32 %1, metadata !9057, metadata !DIExpression()), !dbg !9059
  call void @llvm.dbg.value(metadata i32 %2, metadata !9058, metadata !DIExpression()), !dbg !9059
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9060
  %5 = load volatile i32, i32* %4, align 4, !dbg !9060
  call void @llvm.dbg.value(metadata i32 %1, metadata !8840, metadata !DIExpression()) #23, !dbg !9061
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9063, !srcloc !8847
  call void @llvm.dbg.value(metadata i32 %6, metadata !8843, metadata !DIExpression()) #23, !dbg !9061
  call void @llvm.dbg.value(metadata i32 %6, metadata !8848, metadata !DIExpression()) #23, !dbg !9064
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9066, !range !7158
  %8 = shl nuw nsw i32 %7, 1, !dbg !9060
  %9 = shl i32 3, %8, !dbg !9060
  %10 = xor i32 %9, -1, !dbg !9060
  %11 = and i32 %5, %10, !dbg !9060
  call void @llvm.dbg.value(metadata i32 %1, metadata !8840, metadata !DIExpression()) #23, !dbg !9067
  call void @llvm.dbg.value(metadata i32 %6, metadata !8843, metadata !DIExpression()) #23, !dbg !9067
  call void @llvm.dbg.value(metadata i32 %6, metadata !8848, metadata !DIExpression()) #23, !dbg !9069
  %12 = shl i32 %2, %8, !dbg !9060
  %13 = or i32 %11, %12, !dbg !9060
  store volatile i32 %13, i32* %4, align 4, !dbg !9060
  ret void, !dbg !9071
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9072 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9074, metadata !DIExpression()), !dbg !9077
  call void @llvm.dbg.value(metadata i32 %1, metadata !9075, metadata !DIExpression()), !dbg !9077
  call void @llvm.dbg.value(metadata i32 %2, metadata !9076, metadata !DIExpression()), !dbg !9077
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9078
  %5 = load volatile i32, i32* %4, align 4, !dbg !9078
  call void @llvm.dbg.value(metadata i32 %1, metadata !8840, metadata !DIExpression()) #23, !dbg !9079
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9081, !srcloc !8847
  call void @llvm.dbg.value(metadata i32 %6, metadata !8843, metadata !DIExpression()) #23, !dbg !9079
  call void @llvm.dbg.value(metadata i32 %6, metadata !8848, metadata !DIExpression()) #23, !dbg !9082
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9084, !range !7158
  %8 = shl nuw nsw i32 %7, 2, !dbg !9078
  %9 = shl i32 15, %8, !dbg !9078
  %10 = xor i32 %9, -1, !dbg !9078
  %11 = and i32 %5, %10, !dbg !9078
  call void @llvm.dbg.value(metadata i32 %1, metadata !8840, metadata !DIExpression()) #23, !dbg !9085
  call void @llvm.dbg.value(metadata i32 %6, metadata !8843, metadata !DIExpression()) #23, !dbg !9085
  call void @llvm.dbg.value(metadata i32 %6, metadata !8848, metadata !DIExpression()) #23, !dbg !9087
  %12 = shl i32 %2, %8, !dbg !9078
  %13 = or i32 %11, %12, !dbg !9078
  store volatile i32 %13, i32* %4, align 4, !dbg !9078
  ret void, !dbg !9089
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9090 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9092, metadata !DIExpression()), !dbg !9095
  call void @llvm.dbg.value(metadata i32 %1, metadata !9093, metadata !DIExpression()), !dbg !9095
  call void @llvm.dbg.value(metadata i32 %2, metadata !9094, metadata !DIExpression()), !dbg !9095
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9096
  %5 = load volatile i32, i32* %4, align 4, !dbg !9096
  %6 = lshr i32 %1, 8, !dbg !9096
  call void @llvm.dbg.value(metadata i32 %6, metadata !8840, metadata !DIExpression()) #23, !dbg !9097
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9099, !srcloc !8847
  call void @llvm.dbg.value(metadata i32 %7, metadata !8843, metadata !DIExpression()) #23, !dbg !9097
  call void @llvm.dbg.value(metadata i32 %7, metadata !8848, metadata !DIExpression()) #23, !dbg !9100
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9102, !range !7158
  %9 = shl nuw nsw i32 %8, 2, !dbg !9096
  %10 = shl i32 15, %9, !dbg !9096
  %11 = xor i32 %10, -1, !dbg !9096
  %12 = and i32 %5, %11, !dbg !9096
  call void @llvm.dbg.value(metadata i32 %6, metadata !8840, metadata !DIExpression()) #23, !dbg !9103
  call void @llvm.dbg.value(metadata i32 %7, metadata !8843, metadata !DIExpression()) #23, !dbg !9103
  call void @llvm.dbg.value(metadata i32 %7, metadata !8848, metadata !DIExpression()) #23, !dbg !9105
  %13 = shl i32 %2, %9, !dbg !9096
  %14 = or i32 %12, %13, !dbg !9096
  store volatile i32 %14, i32* %4, align 4, !dbg !9096
  ret void, !dbg !9107
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9108 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9110, metadata !DIExpression()), !dbg !9113
  call void @llvm.dbg.value(metadata i32 %1, metadata !9111, metadata !DIExpression()), !dbg !9113
  call void @llvm.dbg.value(metadata i32 %2, metadata !9112, metadata !DIExpression()), !dbg !9113
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9114
  %5 = load volatile i32, i32* %4, align 4, !dbg !9114
  call void @llvm.dbg.value(metadata i32 %1, metadata !8840, metadata !DIExpression()) #23, !dbg !9115
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9117, !srcloc !8847
  call void @llvm.dbg.value(metadata i32 %6, metadata !8843, metadata !DIExpression()) #23, !dbg !9115
  call void @llvm.dbg.value(metadata i32 %6, metadata !8848, metadata !DIExpression()) #23, !dbg !9118
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9120, !range !7158
  %8 = shl nuw nsw i32 %7, 1, !dbg !9114
  %9 = shl i32 3, %8, !dbg !9114
  %10 = xor i32 %9, -1, !dbg !9114
  %11 = and i32 %5, %10, !dbg !9114
  call void @llvm.dbg.value(metadata i32 %1, metadata !8840, metadata !DIExpression()) #23, !dbg !9121
  call void @llvm.dbg.value(metadata i32 %6, metadata !8843, metadata !DIExpression()) #23, !dbg !9121
  call void @llvm.dbg.value(metadata i32 %6, metadata !8848, metadata !DIExpression()) #23, !dbg !9123
  %12 = shl i32 %2, %8, !dbg !9114
  %13 = or i32 %11, %12, !dbg !9114
  store volatile i32 %13, i32* %4, align 4, !dbg !9114
  ret void, !dbg !9125
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9126 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9128, metadata !DIExpression()), !dbg !9131
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9132
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9132
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9132
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9129, metadata !DIExpression()), !dbg !9131
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9133
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9134
  %6 = tail call fastcc zeroext i1 @device_is_ready.100() #24, !dbg !9135
  br i1 %6, label %7, label %11, !dbg !9137

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !9138
  call void @llvm.dbg.value(metadata i32 %8, metadata !9130, metadata !DIExpression()), !dbg !9131
  %9 = icmp slt i32 %8, 0, !dbg !9139
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9141
  br label %11, !dbg !9141

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9131
  ret i32 %12, !dbg !9142
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.100() unnamed_addr #1 !dbg !9143 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9147, metadata !DIExpression()), !dbg !9148
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9149, !srcloc !9151
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.101() #24, !dbg !9152
  ret i1 %1, !dbg !9153
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !9154 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9158, metadata !DIExpression()), !dbg !9163
  call void @llvm.dbg.value(metadata i8 1, metadata !9159, metadata !DIExpression()), !dbg !9163
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9164
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9164
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9164
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9160, metadata !DIExpression()), !dbg !9163
  call void @llvm.dbg.value(metadata i32 0, metadata !9161, metadata !DIExpression()), !dbg !9163
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9162, metadata !DIExpression()), !dbg !9163
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9165
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9168
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !9169
  call void @llvm.dbg.value(metadata i32 %7, metadata !9161, metadata !DIExpression()), !dbg !9163
  ret i32 %7, !dbg !9170
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.101() unnamed_addr #1 !dbg !9171 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9173, metadata !DIExpression()), !dbg !9174
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #26, !dbg !9175
  ret i1 %1, !dbg !9176
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9177 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9181, metadata !DIExpression()), !dbg !9189
  call void @llvm.dbg.value(metadata i32 %1, metadata !9182, metadata !DIExpression()), !dbg !9189
  call void @llvm.dbg.value(metadata i32 %2, metadata !9183, metadata !DIExpression()), !dbg !9189
  call void @llvm.dbg.value(metadata i32 %3, metadata !9184, metadata !DIExpression()), !dbg !9189
  call void @llvm.dbg.value(metadata i32 0, metadata !9185, metadata !DIExpression()), !dbg !9189
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !9190
  %5 = icmp eq i32 %3, 17, !dbg !9191
  br i1 %5, label %6, label %14, !dbg !9192

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9193
  call void @llvm.dbg.value(metadata i32 %7, metadata !9186, metadata !DIExpression()), !dbg !9194
  %8 = icmp eq i32 %7, 0, !dbg !9195
  %9 = shl nuw i32 1, %1, !dbg !9197
  br i1 %8, label %12, label %10, !dbg !9198

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !9199
  br label %14, !dbg !9201

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !9202
  br label %14, !dbg !9205

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9206
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #16 !dbg !9207 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9209, metadata !DIExpression()), !dbg !9213
  call void @llvm.dbg.value(metadata i8* %1, metadata !9210, metadata !DIExpression()), !dbg !9213
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9214
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9214
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9214
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9211, metadata !DIExpression()), !dbg !9213
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9215
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9215
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !9217
  %9 = icmp eq i32 %8, 0, !dbg !9217
  br i1 %9, label %12, label %10, !dbg !9218

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9219
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !9221
  br label %12, !dbg !9222

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9223
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !9225
  %15 = icmp eq i32 %14, 0, !dbg !9225
  br i1 %15, label %19, label %16, !dbg !9226

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9227
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !9228
  store i8 %18, i8* %1, align 1, !dbg !9229
  br label %19, !dbg !9230

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9213
  ret i32 %20, !dbg !9231
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9232 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9234, metadata !DIExpression()), !dbg !9238
  call void @llvm.dbg.value(metadata i8 %1, metadata !9235, metadata !DIExpression()), !dbg !9238
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9239
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9239
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9239
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9236, metadata !DIExpression()), !dbg !9238
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9240

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9241
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !9244
  %10 = icmp eq i32 %9, 0, !dbg !9244
  br i1 %10, label %18, label %11, !dbg !9245

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9246, !srcloc !9253
  call void @llvm.dbg.value(metadata i32 undef, metadata !9249, metadata !DIExpression()) #23, !dbg !9254
  call void @llvm.dbg.value(metadata i32 undef, metadata !9250, metadata !DIExpression()) #23, !dbg !9254
  call void @llvm.dbg.value(metadata i32 undef, metadata !9237, metadata !DIExpression()), !dbg !9238
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9255
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !9257
  %15 = icmp eq i32 %14, 0, !dbg !9257
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9246
  br i1 %15, label %17, label %19, !dbg !9258

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9249, metadata !DIExpression()) #23, !dbg !9254
  call void @llvm.dbg.value(metadata i32 %16, metadata !9237, metadata !DIExpression()), !dbg !9238
  call void @llvm.dbg.value(metadata i32 undef, metadata !9259, metadata !DIExpression()) #23, !dbg !9262
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !9264, !srcloc !9265
  br label %18, !dbg !9266

18:                                               ; preds = %17, %7
  br label %7, !dbg !9241, !llvm.loop !9267

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9246
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9269
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !9270
  call void @llvm.dbg.value(metadata i32 %20, metadata !9259, metadata !DIExpression()) #23, !dbg !9271
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !9273, !srcloc !9265
  ret void, !dbg !9274
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #16 !dbg !9275 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9277, metadata !DIExpression()), !dbg !9280
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9281
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9281
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9281
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9278, metadata !DIExpression()), !dbg !9280
  call void @llvm.dbg.value(metadata i32 0, metadata !9279, metadata !DIExpression()), !dbg !9280
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9282
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9282
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !9284
  %8 = icmp ne i32 %7, 0, !dbg !9284
  %9 = zext i1 %8 to i32, !dbg !9285
  call void @llvm.dbg.value(metadata i32 %9, metadata !9279, metadata !DIExpression()), !dbg !9280
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9286
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !9288
  %12 = icmp eq i32 %11, 0, !dbg !9288
  %13 = or i32 %9, 2, !dbg !9289
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9289
  call void @llvm.dbg.value(metadata i32 %14, metadata !9279, metadata !DIExpression()), !dbg !9280
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9290
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !9292
  %17 = icmp eq i32 %16, 0, !dbg !9292
  %18 = or i32 %14, 4, !dbg !9293
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9293
  call void @llvm.dbg.value(metadata i32 %19, metadata !9279, metadata !DIExpression()), !dbg !9280
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9294
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !9296
  %22 = icmp eq i32 %21, 0, !dbg !9296
  %23 = or i32 %19, 8, !dbg !9297
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9297
  call void @llvm.dbg.value(metadata i32 %24, metadata !9279, metadata !DIExpression()), !dbg !9280
  %25 = and i32 %24, 8, !dbg !9298
  %26 = icmp eq i32 %25, 0, !dbg !9298
  br i1 %26, label %29, label %27, !dbg !9300

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9301
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !9303
  br label %29, !dbg !9304

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9305
  %31 = icmp eq i32 %30, 0, !dbg !9305
  br i1 %31, label %34, label %32, !dbg !9307

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9308
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !9310
  br label %34, !dbg !9311

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9312
  %36 = icmp eq i32 %35, 0, !dbg !9312
  br i1 %36, label %39, label %37, !dbg !9314

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9315
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !9317
  br label %39, !dbg !9318

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9319
  %41 = icmp eq i32 %40, 0, !dbg !9319
  br i1 %41, label %44, label %42, !dbg !9321

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9322
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !9324
  br label %44, !dbg !9325

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9326
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !9327
  ret i32 %24, !dbg !9328
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9329 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9331, metadata !DIExpression()), !dbg !9340
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9332, metadata !DIExpression()), !dbg !9340
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9341
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9341
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9341
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9333, metadata !DIExpression()), !dbg !9340
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9342
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9342
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9342
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9334, metadata !DIExpression()), !dbg !9340
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9343
  %10 = load i8, i8* %9, align 4, !dbg !9343
  %11 = zext i8 %10 to i32, !dbg !9344
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !9345
  call void @llvm.dbg.value(metadata i32 %12, metadata !9336, metadata !DIExpression()), !dbg !9340
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9346
  %14 = load i8, i8* %13, align 1, !dbg !9346
  %15 = zext i8 %14 to i32, !dbg !9347
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !9348
  call void @llvm.dbg.value(metadata i32 %16, metadata !9337, metadata !DIExpression()), !dbg !9340
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9349
  %18 = load i8, i8* %17, align 2, !dbg !9349
  %19 = zext i8 %18 to i32, !dbg !9350
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !9351
  call void @llvm.dbg.value(metadata i32 %20, metadata !9338, metadata !DIExpression()), !dbg !9340
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9352
  %22 = load i8, i8* %21, align 1, !dbg !9352
  %23 = zext i8 %22 to i32, !dbg !9353
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !9354
  call void @llvm.dbg.value(metadata i32 %24, metadata !9339, metadata !DIExpression()), !dbg !9340
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9355

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9357
  br i1 %26, label %69, label %27, !dbg !9359

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9360

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9361
  br i1 %29, label %65, label %30, !dbg !9361

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9363
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9340
  br i1 %31, label %38, label %34, !dbg !9365

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9366
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !9366

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9369
  br i1 %37, label %38, label %69, !dbg !9370

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9371
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !9372
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !9373
  %41 = icmp eq i32 %12, %40, !dbg !9375
  br i1 %41, label %43, label %42, !dbg !9376

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !9377
  br label %43, !dbg !9379

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !9380
  %45 = icmp eq i32 %16, %44, !dbg !9382
  br i1 %45, label %47, label %46, !dbg !9383

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !9384
  br label %47, !dbg !9386

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !9387
  %49 = icmp eq i32 %20, %48, !dbg !9389
  br i1 %49, label %51, label %50, !dbg !9390

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !9391
  br label %51, !dbg !9393

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !9394
  %53 = icmp eq i32 %24, %52, !dbg !9396
  br i1 %53, label %55, label %54, !dbg !9397

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !9398
  br label %55, !dbg !9400

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9401
  %57 = load i32, i32* %56, align 4, !dbg !9401
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9403
  %59 = load i32, i32* %58, align 4, !dbg !9403
  %60 = icmp eq i32 %57, %59, !dbg !9404
  br i1 %60, label %63, label %61, !dbg !9405

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !9406
  %62 = load i32, i32* %56, align 4, !dbg !9408
  store i32 %62, i32* %58, align 4, !dbg !9409
  br label %63, !dbg !9410

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !9411
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !9412
  br label %69, !dbg !9413

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9361
  %67 = and i8 %66, 1, !dbg !9361
  %68 = icmp eq i8 %67, 0, !dbg !9361
  br i1 %68, label %30, label %69, !dbg !9361

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9340
  ret i32 %70, !dbg !9414
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !9415 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9417, metadata !DIExpression()), !dbg !9420
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9418, metadata !DIExpression()), !dbg !9420
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9421
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !9421
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !9421
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !9419, metadata !DIExpression()), !dbg !9420
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !9422
  %7 = load i32, i32* %6, align 4, !dbg !9422
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9423
  store i32 %7, i32* %8, align 4, !dbg !9424
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !9425, !range !9426
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !9427
  %11 = trunc i32 %10 to i8, !dbg !9427
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9428
  store i8 %11, i8* %12, align 4, !dbg !9429
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !9430, !range !9431
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !9432
  %15 = trunc i32 %14 to i8, !dbg !9432
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9433
  store i8 %15, i8* %16, align 1, !dbg !9434
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !9435
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !9436, !range !9426
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !9437
  %20 = trunc i32 %19 to i8, !dbg !9437
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9438
  store i8 %20, i8* %21, align 2, !dbg !9439
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !9440, !range !9441
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !9442
  %24 = trunc i32 %23 to i8, !dbg !9442
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9443
  store i8 %24, i8* %25, align 1, !dbg !9444
  ret i32 0, !dbg !9445
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !9446 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9450, metadata !DIExpression()), !dbg !9452
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9453
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9453
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9453
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9451, metadata !DIExpression()), !dbg !9452
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9454
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9454
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !9455
  ret i32 %7, !dbg !9456
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #4 !dbg !9457 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9461, metadata !DIExpression()), !dbg !9462
  %2 = icmp eq i32 %0, 1024, !dbg !9463
  %3 = select i1 %2, i32 2, i32 0, !dbg !9463
  %4 = icmp eq i32 %0, 1536, !dbg !9463
  %5 = select i1 %4, i32 1, i32 %3, !dbg !9463
  ret i32 %5, !dbg !9464
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !9465 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9467, metadata !DIExpression()), !dbg !9469
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9470
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9470
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9470
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9468, metadata !DIExpression()), !dbg !9469
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9471
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9471
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !9472
  ret i32 %7, !dbg !9473
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #5 !dbg !9474 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9478, metadata !DIExpression()), !dbg !9479
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !9480
  %3 = icmp ult i32 %2, 4, !dbg !9480
  br i1 %3, label %4, label %7, !dbg !9480

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !9480
  %6 = load i32, i32* %5, align 4, !dbg !9480
  br label %7, !dbg !9480

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !9481
  ret i32 %8, !dbg !9483
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !9484 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9486, metadata !DIExpression()), !dbg !9488
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9489
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9489
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9489
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9487, metadata !DIExpression()), !dbg !9488
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9490
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9490
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !9491
  ret i32 %7, !dbg !9492
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !9493 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9497, metadata !DIExpression()), !dbg !9499
  call void @llvm.dbg.value(metadata i32 %1, metadata !9498, metadata !DIExpression()), !dbg !9499
  %3 = icmp eq i32 %0, 4096, !dbg !9500
  %4 = icmp eq i32 %1, 0, !dbg !9500
  %5 = select i1 %4, i32 4, i32 3, !dbg !9500
  %6 = select i1 %4, i32 3, i32 2, !dbg !9500
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !9500
  ret i32 %7, !dbg !9501
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !9502 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9504, metadata !DIExpression()), !dbg !9506
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9507
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9507
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9507
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9505, metadata !DIExpression()), !dbg !9506
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9508
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9508
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !9509
  ret i32 %7, !dbg !9510
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !9511 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9515, metadata !DIExpression()), !dbg !9516
  %2 = icmp eq i32 %0, 768, !dbg !9517
  %3 = zext i1 %2 to i32, !dbg !9516
  ret i32 %3, !dbg !9519
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9520 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9525, metadata !DIExpression()), !dbg !9526
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9527
  %3 = load volatile i32, i32* %2, align 4, !dbg !9527
  %4 = and i32 %3, 768, !dbg !9527
  ret i32 %4, !dbg !9528
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9529 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9531, metadata !DIExpression()), !dbg !9532
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9533
  %3 = load volatile i32, i32* %2, align 4, !dbg !9533
  %4 = and i32 %3, 4096, !dbg !9533
  ret i32 %4, !dbg !9534
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9535 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9537, metadata !DIExpression()), !dbg !9538
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9539
  %3 = load volatile i32, i32* %2, align 4, !dbg !9539
  %4 = and i32 %3, 12288, !dbg !9539
  ret i32 %4, !dbg !9540
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9541 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9543, metadata !DIExpression()), !dbg !9544
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9545
  %3 = load volatile i32, i32* %2, align 4, !dbg !9545
  %4 = and i32 %3, 1536, !dbg !9545
  ret i32 %4, !dbg !9546
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #4 !dbg !9547 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9551, metadata !DIExpression()), !dbg !9552
  %2 = icmp eq i32 %0, 2, !dbg !9553
  %3 = select i1 %2, i32 1024, i32 0, !dbg !9553
  %4 = icmp eq i32 %0, 1, !dbg !9553
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !9553
  ret i32 %5, !dbg !9554
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #4 !dbg !9555 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9559, metadata !DIExpression()), !dbg !9560
  %2 = icmp ult i32 %0, 3, !dbg !9561
  br i1 %2, label %3, label %6, !dbg !9561

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !9561
  %5 = load i32, i32* %4, align 4, !dbg !9561
  br label %6, !dbg !9561

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !9562
  ret i32 %7, !dbg !9564
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !9565 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9569, metadata !DIExpression()), !dbg !9571
  call void @llvm.dbg.value(metadata i32 %1, metadata !9570, metadata !DIExpression()), !dbg !9571
  %3 = icmp eq i32 %0, 4, !dbg !9572
  %4 = icmp eq i32 %1, 0, !dbg !9572
  %5 = select i1 %4, i32 0, i32 4096, !dbg !9572
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !9572
  ret i32 %6, !dbg !9573
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !9574 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9578, metadata !DIExpression()), !dbg !9579
  %2 = icmp eq i32 %0, 1, !dbg !9580
  %3 = select i1 %2, i32 768, i32 0, !dbg !9579
  ret i32 %3, !dbg !9582
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9583 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9587, metadata !DIExpression()), !dbg !9588
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9589
  %3 = load volatile i32, i32* %2, align 4, !dbg !9589
  %4 = and i32 %3, -8193, !dbg !9589
  store volatile i32 %4, i32* %2, align 4, !dbg !9589
  ret void, !dbg !9590
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !9591 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9595, metadata !DIExpression()), !dbg !9598
  call void @llvm.dbg.value(metadata i32 %1, metadata !9596, metadata !DIExpression()), !dbg !9598
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9599
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9599
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9599
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9597, metadata !DIExpression()), !dbg !9598
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9600
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9600
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !9601
  ret void, !dbg !9602
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !9603 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9605, metadata !DIExpression()), !dbg !9608
  call void @llvm.dbg.value(metadata i32 %1, metadata !9606, metadata !DIExpression()), !dbg !9608
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9609
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9609
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9609
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9607, metadata !DIExpression()), !dbg !9608
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9610
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9610
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !9611
  ret void, !dbg !9612
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !9613 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9615, metadata !DIExpression()), !dbg !9618
  call void @llvm.dbg.value(metadata i32 %1, metadata !9616, metadata !DIExpression()), !dbg !9618
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9619
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9619
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9619
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9617, metadata !DIExpression()), !dbg !9618
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9620
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9620
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !9621
  ret void, !dbg !9622
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !9623 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9625, metadata !DIExpression()), !dbg !9628
  call void @llvm.dbg.value(metadata i32 %1, metadata !9626, metadata !DIExpression()), !dbg !9628
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9629
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9629
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9629
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9627, metadata !DIExpression()), !dbg !9628
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9630
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9630
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !9631
  ret void, !dbg !9632
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !9633 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9635, metadata !DIExpression()), !dbg !9640
  call void @llvm.dbg.value(metadata i32 %1, metadata !9636, metadata !DIExpression()), !dbg !9640
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9641
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9641
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9641
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9637, metadata !DIExpression()), !dbg !9640
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9642
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !9642
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !9642
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !9638, metadata !DIExpression()), !dbg !9640
  %10 = bitcast i32* %3 to i8*, !dbg !9643
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !9643
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !9644
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !9644
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !9648
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !9648
  %15 = load i8*, i8** %14, align 4, !dbg !9648
  call void @llvm.dbg.value(metadata i32* %3, metadata !9639, metadata !DIExpression(DW_OP_deref)), !dbg !9640
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !9649
  %17 = icmp slt i32 %16, 0, !dbg !9650
  br i1 %17, label %28, label %18, !dbg !9651

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9652
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9652
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #24, !dbg !9653
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9654
  %22 = load i32, i32* %3, align 4, !dbg !9655
  call void @llvm.dbg.value(metadata i32 %22, metadata !9639, metadata !DIExpression()), !dbg !9640
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #24, !dbg !9656
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9657
  %24 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 2, !dbg !9657
  %25 = load volatile i32, i32* %24, align 4, !dbg !9657
  %26 = icmp ugt i32 %25, 16, !dbg !9657
  br i1 %26, label %28, label %27, !dbg !9660

27:                                               ; preds = %18
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.105, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.106, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3.107, i32 0, i32 0), i32 noundef 190) #26, !dbg !9661
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.108, i32 0, i32 0)) #26, !dbg !9661
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3.107, i32 0, i32 0), i32 noundef 190) #26, !dbg !9661
  unreachable, !dbg !9661

28:                                               ; preds = %18, %2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !9663
  ret void, !dbg !9663
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9664 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9666, metadata !DIExpression()), !dbg !9667
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9668
  %3 = load volatile i32, i32* %2, align 4, !dbg !9668
  %4 = or i32 %3, 8192, !dbg !9668
  store volatile i32 %4, i32* %2, align 4, !dbg !9668
  ret void, !dbg !9669
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !9670 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9672, metadata !DIExpression()), !dbg !9676
  call void @llvm.dbg.value(metadata i8* %1, metadata !9673, metadata !DIExpression()), !dbg !9676
  call void @llvm.dbg.value(metadata i32* %2, metadata !9674, metadata !DIExpression()), !dbg !9676
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !9677
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !9677
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !9677
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !9675, metadata !DIExpression()), !dbg !9676
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !9678
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !9678
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !9680
  br i1 %9, label %12, label %10, !dbg !9681

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #26, !dbg !9682
  br label %12, !dbg !9683

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !9676
  ret i32 %13, !dbg !9684
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9685 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9689, metadata !DIExpression()), !dbg !9691
  call void @llvm.dbg.value(metadata i32 0, metadata !9690, metadata !DIExpression()), !dbg !9691
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9692
  %3 = load volatile i32, i32* %2, align 4, !dbg !9692
  %4 = and i32 %3, -32769, !dbg !9692
  store volatile i32 %4, i32* %2, align 4, !dbg !9692
  ret void, !dbg !9693
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !9694 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9698, metadata !DIExpression()), !dbg !9702
  call void @llvm.dbg.value(metadata i32 %1, metadata !9699, metadata !DIExpression()), !dbg !9702
  call void @llvm.dbg.value(metadata i32 0, metadata !9700, metadata !DIExpression()), !dbg !9702
  call void @llvm.dbg.value(metadata i32 %2, metadata !9701, metadata !DIExpression()), !dbg !9702
  %4 = zext i32 %1 to i64, !dbg !9703
  %5 = mul nuw nsw i64 %4, 25, !dbg !9703
  %6 = zext i32 %2 to i64, !dbg !9703
  %7 = shl nuw nsw i64 %6, 2, !dbg !9703
  %8 = udiv i64 %5, %7, !dbg !9703
  %9 = trunc i64 %8 to i32, !dbg !9703
  %10 = udiv i32 %9, 100, !dbg !9703
  %11 = shl nuw nsw i32 %10, 4, !dbg !9703
  %12 = mul i32 %10, -100, !dbg !9703
  %13 = add i32 %12, %9, !dbg !9703
  %14 = shl i32 %13, 4, !dbg !9703
  %15 = add i32 %14, 50, !dbg !9703
  %16 = udiv i32 %15, 100, !dbg !9703
  %17 = and i32 %16, 240, !dbg !9703
  %18 = add nuw nsw i32 %17, %11, !dbg !9703
  %19 = and i32 %16, 15, !dbg !9703
  %20 = and i32 %18, 65520, !dbg !9706
  %21 = or i32 %20, %19, !dbg !9706
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !9707
  store volatile i32 %21, i32* %22, align 4, !dbg !9708
  ret void, !dbg !9709
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9710 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9712, metadata !DIExpression()), !dbg !9714
  call void @llvm.dbg.value(metadata i32 %1, metadata !9713, metadata !DIExpression()), !dbg !9714
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9715
  %4 = load volatile i32, i32* %3, align 4, !dbg !9715
  %5 = and i32 %4, -769, !dbg !9715
  %6 = or i32 %5, %1, !dbg !9715
  store volatile i32 %6, i32* %3, align 4, !dbg !9715
  ret void, !dbg !9716
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9717 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9719, metadata !DIExpression()), !dbg !9721
  call void @llvm.dbg.value(metadata i32 %1, metadata !9720, metadata !DIExpression()), !dbg !9721
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9722
  %4 = load volatile i32, i32* %3, align 4, !dbg !9722
  %5 = and i32 %4, -4097, !dbg !9722
  %6 = or i32 %5, %1, !dbg !9722
  store volatile i32 %6, i32* %3, align 4, !dbg !9722
  ret void, !dbg !9723
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9724 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9726, metadata !DIExpression()), !dbg !9728
  call void @llvm.dbg.value(metadata i32 %1, metadata !9727, metadata !DIExpression()), !dbg !9728
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9729
  %4 = load volatile i32, i32* %3, align 4, !dbg !9729
  %5 = and i32 %4, -12289, !dbg !9729
  %6 = or i32 %5, %1, !dbg !9729
  store volatile i32 %6, i32* %3, align 4, !dbg !9729
  ret void, !dbg !9730
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9731 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9733, metadata !DIExpression()), !dbg !9735
  call void @llvm.dbg.value(metadata i32 %1, metadata !9734, metadata !DIExpression()), !dbg !9735
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9736
  %4 = load volatile i32, i32* %3, align 4, !dbg !9736
  %5 = and i32 %4, -1537, !dbg !9736
  %6 = or i32 %5, %1, !dbg !9736
  store volatile i32 %6, i32* %3, align 4, !dbg !9736
  ret void, !dbg !9737
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9738 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9740, metadata !DIExpression()), !dbg !9741
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9742
  %3 = load volatile i32, i32* %2, align 4, !dbg !9742
  %4 = lshr i32 %3, 3, !dbg !9743
  %5 = and i32 %4, 1, !dbg !9743
  ret i32 %5, !dbg !9744
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9745 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9747, metadata !DIExpression()), !dbg !9748
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9749
  %3 = load volatile i32, i32* %2, align 4, !dbg !9749
  %4 = and i32 %3, 1, !dbg !9749
  ret i32 %4, !dbg !9750
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9751 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9753, metadata !DIExpression()), !dbg !9754
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9755
  %3 = load volatile i32, i32* %2, align 4, !dbg !9755
  %4 = lshr i32 %3, 1, !dbg !9756
  %5 = and i32 %4, 1, !dbg !9756
  ret i32 %5, !dbg !9757
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9758 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9760, metadata !DIExpression()), !dbg !9761
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9762
  %3 = load volatile i32, i32* %2, align 4, !dbg !9762
  %4 = lshr i32 %3, 8, !dbg !9763
  %5 = and i32 %4, 1, !dbg !9763
  ret i32 %5, !dbg !9764
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9765 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9767, metadata !DIExpression()), !dbg !9768
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9769
  store volatile i32 -257, i32* %2, align 4, !dbg !9769
  ret void, !dbg !9770
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9771 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9773, metadata !DIExpression()), !dbg !9775
  %3 = bitcast i32* %2 to i8*, !dbg !9776
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9776
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9774, metadata !DIExpression()), !dbg !9777
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9778
  %5 = load volatile i32, i32* %4, align 4, !dbg !9778
  store volatile i32 %5, i32* %2, align 4, !dbg !9779
  %6 = load volatile i32, i32* %2, align 4, !dbg !9780
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9781
  %8 = load volatile i32, i32* %7, align 4, !dbg !9781
  store volatile i32 %8, i32* %2, align 4, !dbg !9782
  %9 = load volatile i32, i32* %2, align 4, !dbg !9783
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9784
  ret void, !dbg !9784
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9785 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9787, metadata !DIExpression()), !dbg !9789
  %3 = bitcast i32* %2 to i8*, !dbg !9790
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9790
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9788, metadata !DIExpression()), !dbg !9791
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9792
  %5 = load volatile i32, i32* %4, align 4, !dbg !9792
  store volatile i32 %5, i32* %2, align 4, !dbg !9793
  %6 = load volatile i32, i32* %2, align 4, !dbg !9794
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9795
  %8 = load volatile i32, i32* %7, align 4, !dbg !9795
  store volatile i32 %8, i32* %2, align 4, !dbg !9796
  %9 = load volatile i32, i32* %2, align 4, !dbg !9797
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9798
  ret void, !dbg !9798
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9799 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9801, metadata !DIExpression()), !dbg !9803
  %3 = bitcast i32* %2 to i8*, !dbg !9804
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9804
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9802, metadata !DIExpression()), !dbg !9805
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9806
  %5 = load volatile i32, i32* %4, align 4, !dbg !9806
  store volatile i32 %5, i32* %2, align 4, !dbg !9807
  %6 = load volatile i32, i32* %2, align 4, !dbg !9808
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9809
  %8 = load volatile i32, i32* %7, align 4, !dbg !9809
  store volatile i32 %8, i32* %2, align 4, !dbg !9810
  %9 = load volatile i32, i32* %2, align 4, !dbg !9811
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9812
  ret void, !dbg !9812
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9813 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9815, metadata !DIExpression()), !dbg !9817
  %3 = bitcast i32* %2 to i8*, !dbg !9818
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9818
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9816, metadata !DIExpression()), !dbg !9819
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9820
  %5 = load volatile i32, i32* %4, align 4, !dbg !9820
  store volatile i32 %5, i32* %2, align 4, !dbg !9821
  %6 = load volatile i32, i32* %2, align 4, !dbg !9822
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9823
  %8 = load volatile i32, i32* %7, align 4, !dbg !9823
  store volatile i32 %8, i32* %2, align 4, !dbg !9824
  %9 = load volatile i32, i32* %2, align 4, !dbg !9825
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9826
  ret void, !dbg !9826
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9827 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9829, metadata !DIExpression()), !dbg !9830
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9831
  %3 = load volatile i32, i32* %2, align 4, !dbg !9831
  %4 = lshr i32 %3, 7, !dbg !9832
  %5 = and i32 %4, 1, !dbg !9832
  ret i32 %5, !dbg !9833
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #14 !dbg !9834 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9838, metadata !DIExpression()), !dbg !9840
  call void @llvm.dbg.value(metadata i8 %1, metadata !9839, metadata !DIExpression()), !dbg !9840
  %3 = zext i8 %1 to i32, !dbg !9841
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9842
  store volatile i32 %3, i32* %4, align 4, !dbg !9843
  ret void, !dbg !9844
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9845 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9847, metadata !DIExpression()), !dbg !9848
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9849
  %3 = load volatile i32, i32* %2, align 4, !dbg !9849
  %4 = lshr i32 %3, 5, !dbg !9850
  %5 = and i32 %4, 1, !dbg !9850
  ret i32 %5, !dbg !9851
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9852 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9856, metadata !DIExpression()), !dbg !9857
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9858
  %3 = load volatile i32, i32* %2, align 4, !dbg !9858
  %4 = trunc i32 %3 to i8, !dbg !9859
  ret i8 %4, !dbg !9860
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !9861 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9863, metadata !DIExpression()), !dbg !9869
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9870
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9870
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9870
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9864, metadata !DIExpression()), !dbg !9869
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9871
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !9871
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !9871
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !9865, metadata !DIExpression()), !dbg !9869
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !9872
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !9873
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !9873
  %10 = tail call fastcc zeroext i1 @device_is_ready.110(%struct.device* noundef %9) #24, !dbg !9875
  br i1 %10, label %11, label %49, !dbg !9876

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !9877
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !9878
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !9878
  %15 = load i8*, i8** %14, align 4, !dbg !9878
  %16 = tail call fastcc i32 @clock_control_on.111(%struct.device* noundef %12, i8* noundef %15) #24, !dbg !9879
  call void @llvm.dbg.value(metadata i32 %16, metadata !9868, metadata !DIExpression()), !dbg !9869
  %17 = icmp eq i32 %16, 0, !dbg !9880
  br i1 %17, label %18, label %49, !dbg !9882

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !9883
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !9883
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #24, !dbg !9884
  call void @llvm.dbg.value(metadata i32 %21, metadata !9868, metadata !DIExpression()), !dbg !9869
  %22 = icmp slt i32 %21, 0, !dbg !9885
  br i1 %22, label %49, label %23, !dbg !9887

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9888
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9888
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #24, !dbg !9889
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9890
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #24, !dbg !9891
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !9892
  %28 = load i32, i32* %27, align 4, !dbg !9892
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !9894

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !9866, metadata !DIExpression()), !dbg !9869
  call void @llvm.dbg.value(metadata i32 4096, metadata !9867, metadata !DIExpression()), !dbg !9869
  br label %31, !dbg !9895

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !9866, metadata !DIExpression()), !dbg !9869
  call void @llvm.dbg.value(metadata i32 0, metadata !9867, metadata !DIExpression()), !dbg !9869
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !9898
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !9898
  call void @llvm.dbg.value(metadata i32 %33, metadata !9867, metadata !DIExpression()), !dbg !9869
  call void @llvm.dbg.value(metadata i32 %32, metadata !9866, metadata !DIExpression()), !dbg !9869
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9899
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #24, !dbg !9900
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !9901
  %36 = load i8, i8* %35, align 4, !dbg !9901, !range !4025
  %37 = icmp eq i8 %36, 0, !dbg !9901
  br i1 %37, label %39, label %38, !dbg !9903

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !9904
  br label %39, !dbg !9906

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !9907
  %41 = load i32, i32* %40, align 4, !dbg !9907
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #24, !dbg !9908
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !9909
  %43 = load i8, i8* %42, align 4, !dbg !9909, !range !4025
  %44 = icmp eq i8 %43, 0, !dbg !9909
  br i1 %44, label %47, label %45, !dbg !9911

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9912
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #24, !dbg !9914
  br label %47, !dbg !9915

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9916
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #24, !dbg !9917
  br label %49, !dbg !9918

49:                                               ; preds = %18, %11, %1, %47
  %50 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !9869
  ret i32 %50, !dbg !9919
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9920 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9924, metadata !DIExpression()), !dbg !9928
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9929
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !9929
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !9929
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !9925, metadata !DIExpression()), !dbg !9928
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9926, metadata !DIExpression()), !dbg !9928
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !9930
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !9931
  ret void, !dbg !9932
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.110(%struct.device* noundef %0) unnamed_addr #1 !dbg !9933 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9937, metadata !DIExpression()), !dbg !9938
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9939, !srcloc !9941
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.112(%struct.device* noundef %0) #24, !dbg !9942
  ret i1 %2, !dbg !9943
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.111(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !9944 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9946, metadata !DIExpression()), !dbg !9949
  call void @llvm.dbg.value(metadata i8* %1, metadata !9947, metadata !DIExpression()), !dbg !9949
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !9950
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !9950
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !9950
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !9948, metadata !DIExpression()), !dbg !9949
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !9951
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !9951
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #26, !dbg !9952
  ret i32 %8, !dbg !9953
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !9954 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !9958, metadata !DIExpression()), !dbg !9962
  call void @llvm.dbg.value(metadata i8 0, metadata !9959, metadata !DIExpression()), !dbg !9962
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !9963
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !9963
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !9961, metadata !DIExpression(DW_OP_deref)), !dbg !9962
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #26, !dbg !9964
  call void @llvm.dbg.value(metadata i32 %4, metadata !9960, metadata !DIExpression()), !dbg !9962
  %5 = icmp slt i32 %4, 0, !dbg !9965
  br i1 %5, label %9, label %6, !dbg !9967

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !9968
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !9961, metadata !DIExpression()), !dbg !9962
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !9969
  br label %9, !dbg !9970

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !9962
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !9971
  ret i32 %10, !dbg !9971
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9972 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9974, metadata !DIExpression()), !dbg !9978
  call void @llvm.dbg.value(metadata i32 12, metadata !9975, metadata !DIExpression()), !dbg !9978
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9979

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9980, metadata !DIExpression()) #23, !dbg !9986
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !9989, !srcloc !9990
  call void @llvm.dbg.value(metadata i32 %4, metadata !9985, metadata !DIExpression()) #23, !dbg !9986
  %5 = or i32 %4, 12, !dbg !9991
  call void @llvm.dbg.value(metadata i32 %5, metadata !9976, metadata !DIExpression()), !dbg !9992
  call void @llvm.dbg.value(metadata i32 %5, metadata !9993, metadata !DIExpression()) #23, !dbg !10000
  call void @llvm.dbg.value(metadata i32* %2, metadata !9998, metadata !DIExpression()) #23, !dbg !10000
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !10002, !srcloc !10003
  call void @llvm.dbg.value(metadata i32 %6, metadata !9999, metadata !DIExpression()) #23, !dbg !10000
  %7 = icmp eq i32 %6, 0, !dbg !9979
  br i1 %7, label %8, label %3, !dbg !9991, !llvm.loop !10004

8:                                                ; preds = %3
  ret void, !dbg !10005
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !10006 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10008, metadata !DIExpression()), !dbg !10012
  call void @llvm.dbg.value(metadata i32 %1, metadata !10009, metadata !DIExpression()), !dbg !10012
  call void @llvm.dbg.value(metadata i32 %2, metadata !10010, metadata !DIExpression()), !dbg !10012
  call void @llvm.dbg.value(metadata i32 0, metadata !10011, metadata !DIExpression()), !dbg !10012
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10013
  %5 = load volatile i32, i32* %4, align 4, !dbg !10013
  %6 = and i32 %5, -5633, !dbg !10013
  %7 = or i32 %2, %1, !dbg !10013
  %8 = or i32 %7, %6, !dbg !10013
  store volatile i32 %8, i32* %4, align 4, !dbg !10013
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10014
  %10 = load volatile i32, i32* %9, align 4, !dbg !10014
  %11 = and i32 %10, -12289, !dbg !10014
  store volatile i32 %11, i32* %9, align 4, !dbg !10014
  ret void, !dbg !10015
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10016 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10018, metadata !DIExpression()), !dbg !10019
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10020
  %3 = load volatile i32, i32* %2, align 4, !dbg !10020
  %4 = or i32 %3, 8, !dbg !10020
  store volatile i32 %4, i32* %2, align 4, !dbg !10020
  ret void, !dbg !10021
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10022 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10026, metadata !DIExpression()), !dbg !10029
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10027, metadata !DIExpression()), !dbg !10029
  call void @llvm.dbg.value(metadata i32 0, metadata !10028, metadata !DIExpression()), !dbg !10029
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10030
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10030
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10031
  %5 = load i8, i8* %4, align 4, !dbg !10031
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #26, !dbg !10032
  ret i32 %6, !dbg !10033
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.112(%struct.device* noundef %0) unnamed_addr #1 !dbg !10034 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10036, metadata !DIExpression()), !dbg !10037
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !10038
  ret i1 %2, !dbg !10039
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #14 !dbg !10040 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10042, metadata !DIExpression()), !dbg !10043
  tail call fastcc void @__NVIC_SetPriority.114() #24, !dbg !10044
  store i32 8399, i32* @last_load, align 4, !dbg !10045
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10046
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10047
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10048
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10049
  %3 = or i32 %2, 7, !dbg !10049
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10049
  ret i32 0, !dbg !10050
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.114() unnamed_addr #14 !dbg !10051 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10053, metadata !DIExpression()), !dbg !10055
  call void @llvm.dbg.value(metadata i32 1, metadata !10054, metadata !DIExpression()), !dbg !10055
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10056
  ret void, !dbg !10059
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10060 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10062, metadata !DIExpression()), !dbg !10064
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !10065
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10066
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10067
  %5 = add i32 %4, %3, !dbg !10067
  store i32 %5, i32* @cycle_count, align 4, !dbg !10067
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10068
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10069
  %7 = sub i32 %5, %6, !dbg !10072
  %8 = udiv i32 %7, 8400, !dbg !10073
  call void @llvm.dbg.value(metadata i32 %8, metadata !10063, metadata !DIExpression()), !dbg !10064
  %9 = mul nuw i32 %8, 8400, !dbg !10074
  %10 = add i32 %9, %6, !dbg !10075
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10075
  tail call void @sys_clock_announce(i32 noundef %8) #26, !dbg !10076
  tail call void @z_arm_int_exit() #26, !dbg !10077
  ret void, !dbg !10078
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #14 !dbg !10079 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10084
  call void @llvm.dbg.value(metadata i32 %1, metadata !10081, metadata !DIExpression()), !dbg !10085
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10086
  call void @llvm.dbg.value(metadata i32 %2, metadata !10082, metadata !DIExpression()), !dbg !10085
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10087
  call void @llvm.dbg.value(metadata i32 %3, metadata !10083, metadata !DIExpression()), !dbg !10085
  %4 = and i32 %2, 65536, !dbg !10088
  %5 = icmp ne i32 %4, 0, !dbg !10088
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10090
  %8 = load i32, i32* @last_load, align 4, !dbg !10085
  br i1 %7, label %9, label %13, !dbg !10090

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10091
  %11 = add i32 %10, %8, !dbg !10091
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10091
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10093
  br label %13, !dbg !10094

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10095
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10096
  %16 = add i32 %14, %15, !dbg !10097
  ret i32 %16, !dbg !10098
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10099 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10103, metadata !DIExpression()), !dbg !10116
  call void @llvm.dbg.value(metadata i1 %1, metadata !10104, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10116
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10117
  br i1 %4, label %5, label %8, !dbg !10117

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10119
  %7 = and i32 %6, -2, !dbg !10119
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10119
  store i32 -16777216, i32* @last_load, align 4, !dbg !10121
  br label %60, !dbg !10122

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10123
  call void @llvm.dbg.value(metadata i32 %9, metadata !10108, metadata !DIExpression()), !dbg !10116
  br i1 %3, label %18, label %10, !dbg !10124

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10124
  call void @llvm.dbg.value(metadata i32 undef, metadata !10103, metadata !DIExpression()), !dbg !10116
  %12 = icmp slt i32 %11, 1, !dbg !10125
  br i1 %12, label %18, label %13, !dbg !10125

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !10125
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !10125
  %16 = mul nuw nsw i32 %15, 8400, !dbg !10125
  %17 = add nuw nsw i32 %16, 8399, !dbg !10125
  br label %18, !dbg !10125

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10103, metadata !DIExpression()), !dbg !10116
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10126, metadata !DIExpression()) #23, !dbg !10133
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10135, !srcloc !10141
  call void @llvm.dbg.value(metadata i32 undef, metadata !10138, metadata !DIExpression()) #23, !dbg !10142
  call void @llvm.dbg.value(metadata i32 undef, metadata !10139, metadata !DIExpression()) #23, !dbg !10142
  call void @llvm.dbg.value(metadata i32 undef, metadata !10132, metadata !DIExpression()) #23, !dbg !10133
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10143
  br i1 %21, label %23, label %22, !dbg !10146

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.117, i32 0, i32 0), i32 noundef 148) #26, !dbg !10147
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.118, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10147
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.117, i32 0, i32 0), i32 noundef 148) #26, !dbg !10147
  unreachable, !dbg !10147

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !10135
  call void @llvm.dbg.value(metadata i32 %24, metadata !10138, metadata !DIExpression()) #23, !dbg !10142
  call void @llvm.dbg.value(metadata i32 %24, metadata !10132, metadata !DIExpression()) #23, !dbg !10133
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10149
  call void @llvm.dbg.value(metadata i32 %24, metadata !10109, metadata !DIExpression()), !dbg !10116
  %25 = tail call fastcc i32 @elapsed() #24, !dbg !10150
  call void @llvm.dbg.value(metadata i32 %25, metadata !10114, metadata !DIExpression()), !dbg !10116
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10151
  call void @llvm.dbg.value(metadata i32 %26, metadata !10106, metadata !DIExpression()), !dbg !10116
  %27 = load i32, i32* @cycle_count, align 4, !dbg !10152
  %28 = add i32 %27, %25, !dbg !10152
  store i32 %28, i32* @cycle_count, align 4, !dbg !10152
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10153
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !10154
  %30 = sub i32 %28, %29, !dbg !10155
  call void @llvm.dbg.value(metadata i32 %30, metadata !10115, metadata !DIExpression()), !dbg !10116
  %31 = icmp slt i32 %30, 0, !dbg !10156
  br i1 %31, label %41, label %32, !dbg !10158

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !10105, metadata !DIExpression()), !dbg !10116
  call void @llvm.dbg.value(metadata i32 undef, metadata !10105, metadata !DIExpression()), !dbg !10116
  %33 = add nuw i32 %19, %30, !dbg !10159
  %34 = urem i32 %33, 8400, !dbg !10161
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !10105, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10116
  %35 = sub nuw nsw i32 %19, %34, !dbg !10162
  call void @llvm.dbg.value(metadata i32 %35, metadata !10105, metadata !DIExpression()), !dbg !10116
  %36 = icmp ugt i32 %35, 1024, !dbg !10163
  br i1 %36, label %37, label %39, !dbg !10163

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !10105, metadata !DIExpression()), !dbg !10116
  %38 = icmp ugt i32 %35, 16766400, !dbg !10164
  br i1 %38, label %41, label %39, !dbg !10166

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16766400, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !10167
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10168
  call void @llvm.dbg.value(metadata i32 %43, metadata !10107, metadata !DIExpression()), !dbg !10116
  %44 = add nsw i32 %42, -1, !dbg !10169
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10170
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10171
  %45 = icmp ult i32 %26, %43, !dbg !10172
  br i1 %45, label %46, label %51, !dbg !10174

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !10175
  %48 = add i32 %26, %9, !dbg !10177
  %49 = sub i32 %48, %43, !dbg !10178
  %50 = add i32 %49, %47, !dbg !10175
  br label %55, !dbg !10179

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !10180
  %53 = load i32, i32* @cycle_count, align 4, !dbg !10182
  %54 = add i32 %52, %53, !dbg !10182
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !10183
  store i32 %56, i32* @cycle_count, align 4, !dbg !10183
  call void @llvm.dbg.value(metadata i32 undef, metadata !10184, metadata !DIExpression()) #23, !dbg !10190
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10189, metadata !DIExpression()) #23, !dbg !10190
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10192
  br i1 %57, label %59, label %58, !dbg !10195

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.117, i32 0, i32 0), i32 noundef 194) #26, !dbg !10196
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.120, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10196
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.117, i32 0, i32 0), i32 noundef 194) #26, !dbg !10196
  unreachable, !dbg !10196

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !10184, metadata !DIExpression()) #23, !dbg !10190
  call void @llvm.dbg.value(metadata i32 %24, metadata !10198, metadata !DIExpression()) #23, !dbg !10201
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !10203, !srcloc !10204
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !10205
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10206 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10126, metadata !DIExpression()) #23, !dbg !10210
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10212, !srcloc !10141
  call void @llvm.dbg.value(metadata i32 undef, metadata !10138, metadata !DIExpression()) #23, !dbg !10214
  call void @llvm.dbg.value(metadata i32 undef, metadata !10139, metadata !DIExpression()) #23, !dbg !10214
  call void @llvm.dbg.value(metadata i32 undef, metadata !10132, metadata !DIExpression()) #23, !dbg !10210
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10215
  br i1 %2, label %4, label %3, !dbg !10216

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.117, i32 0, i32 0), i32 noundef 148) #26, !dbg !10217
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.118, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10217
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.117, i32 0, i32 0), i32 noundef 148) #26, !dbg !10217
  unreachable, !dbg !10217

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10138, metadata !DIExpression()) #23, !dbg !10214
  call void @llvm.dbg.value(metadata i32 undef, metadata !10132, metadata !DIExpression()) #23, !dbg !10210
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10218
  call void @llvm.dbg.value(metadata i32 undef, metadata !10208, metadata !DIExpression()), !dbg !10219
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !10220
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10221
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !10222
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !10209, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10219
  call void @llvm.dbg.value(metadata i32 undef, metadata !10184, metadata !DIExpression()) #23, !dbg !10223
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10189, metadata !DIExpression()) #23, !dbg !10223
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10225
  br i1 %8, label %10, label %9, !dbg !10226

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.117, i32 0, i32 0), i32 noundef 194) #26, !dbg !10227
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.120, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10227
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.117, i32 0, i32 0), i32 noundef 194) #26, !dbg !10227
  unreachable, !dbg !10227

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !10228
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !10209, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10219
  %12 = sub i32 %11, %7, !dbg !10229
  call void @llvm.dbg.value(metadata i32 %12, metadata !10209, metadata !DIExpression()), !dbg !10219
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !10212
  call void @llvm.dbg.value(metadata i32 %13, metadata !10138, metadata !DIExpression()) #23, !dbg !10214
  call void @llvm.dbg.value(metadata i32 %13, metadata !10132, metadata !DIExpression()) #23, !dbg !10210
  call void @llvm.dbg.value(metadata i32 %13, metadata !10208, metadata !DIExpression()), !dbg !10219
  call void @llvm.dbg.value(metadata i32 undef, metadata !10184, metadata !DIExpression()) #23, !dbg !10223
  call void @llvm.dbg.value(metadata i32 undef, metadata !10198, metadata !DIExpression()) #23, !dbg !10230
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !10232, !srcloc !10204
  %14 = udiv i32 %12, 8400, !dbg !10233
  ret i32 %14, !dbg !10234
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10235 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10126, metadata !DIExpression()) #23, !dbg !10239
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10241, !srcloc !10141
  call void @llvm.dbg.value(metadata i32 undef, metadata !10138, metadata !DIExpression()) #23, !dbg !10243
  call void @llvm.dbg.value(metadata i32 undef, metadata !10139, metadata !DIExpression()) #23, !dbg !10243
  call void @llvm.dbg.value(metadata i32 undef, metadata !10132, metadata !DIExpression()) #23, !dbg !10239
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10244
  br i1 %2, label %4, label %3, !dbg !10245

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.117, i32 0, i32 0), i32 noundef 148) #26, !dbg !10246
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.118, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10246
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.117, i32 0, i32 0), i32 noundef 148) #26, !dbg !10246
  unreachable, !dbg !10246

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10138, metadata !DIExpression()) #23, !dbg !10243
  call void @llvm.dbg.value(metadata i32 undef, metadata !10132, metadata !DIExpression()) #23, !dbg !10239
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10247
  call void @llvm.dbg.value(metadata i32 undef, metadata !10237, metadata !DIExpression()), !dbg !10248
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !10249
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10250
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !10238, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !10248
  call void @llvm.dbg.value(metadata i32 undef, metadata !10184, metadata !DIExpression()) #23, !dbg !10251
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10189, metadata !DIExpression()) #23, !dbg !10251
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10253
  br i1 %7, label %9, label %8, !dbg !10254

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.117, i32 0, i32 0), i32 noundef 194) #26, !dbg !10255
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.120, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10255
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.117, i32 0, i32 0), i32 noundef 194) #26, !dbg !10255
  unreachable, !dbg !10255

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !10256
  call void @llvm.dbg.value(metadata i32 %10, metadata !10238, metadata !DIExpression()), !dbg !10248
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !10241
  call void @llvm.dbg.value(metadata i32 %11, metadata !10138, metadata !DIExpression()) #23, !dbg !10243
  call void @llvm.dbg.value(metadata i32 %11, metadata !10132, metadata !DIExpression()) #23, !dbg !10239
  call void @llvm.dbg.value(metadata i32 %11, metadata !10237, metadata !DIExpression()), !dbg !10248
  call void @llvm.dbg.value(metadata i32 undef, metadata !10184, metadata !DIExpression()) #23, !dbg !10251
  call void @llvm.dbg.value(metadata i32 undef, metadata !10198, metadata !DIExpression()) #23, !dbg !10257
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !10259, !srcloc !10204
  ret i32 %10, !dbg !10260
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #14 !dbg !10261 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10262
  %2 = icmp eq i32 %1, -16777216, !dbg !10264
  br i1 %2, label %3, label %6, !dbg !10265

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10266
  %5 = or i32 %4, 1, !dbg !10266
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10266
  br label %6, !dbg !10268

6:                                                ; preds = %3, %0
  ret void, !dbg !10269
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #14 !dbg !10270 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10271
  %2 = and i32 %1, -2, !dbg !10271
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10271
  ret void, !dbg !10272
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #12 !dbg !10273 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10299, metadata !DIExpression()), !dbg !10302
  call void @llvm.dbg.value(metadata i8 %1, metadata !10300, metadata !DIExpression()), !dbg !10302
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10301, metadata !DIExpression()), !dbg !10302
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10303
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10303
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10302
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10304
  %8 = load i8, i8* %6, align 4, !dbg !10305
  %9 = zext i8 %8 to i32, !dbg !10306
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10306
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10307
  br i1 %11, label %18, label %24, !dbg !10308

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10302
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10304
  %14 = load i8, i8* %6, align 4, !dbg !10305
  %15 = zext i8 %14 to i32, !dbg !10306
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10306
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10307
  br i1 %17, label %18, label %24, !dbg !10308, !llvm.loop !10309

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10311
  %21 = load i8, i8* %20, align 1, !dbg !10311
  %22 = icmp eq i8 %21, %1, !dbg !10314
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10315
  br i1 %22, label %24, label %12, !dbg !10316

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10302
  ret i32 %25, !dbg !10317
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10318 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10329, metadata !DIExpression()), !dbg !10345
  call void @llvm.dbg.value(metadata i8 %1, metadata !10330, metadata !DIExpression()), !dbg !10345
  call void @llvm.dbg.value(metadata i32 %2, metadata !10331, metadata !DIExpression()), !dbg !10345
  call void @llvm.dbg.value(metadata i32 0, metadata !10334, metadata !DIExpression()), !dbg !10345
  call void @llvm.dbg.value(metadata i32 0, metadata !10335, metadata !DIExpression()), !dbg !10345
  call void @llvm.dbg.value(metadata i8 0, metadata !10336, metadata !DIExpression()), !dbg !10346
  %4 = icmp eq i8 %1, 0, !dbg !10347
  br i1 %4, label %35, label %5, !dbg !10348

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10347
  br label %9, !dbg !10348

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !10336, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.value(metadata i32 %29, metadata !10334, metadata !DIExpression()), !dbg !10345
  %8 = icmp eq i32 %34, %6, !dbg !10347
  br i1 %8, label %35, label %9, !dbg !10348, !llvm.loop !10349

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10336, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.value(metadata i32 %11, metadata !10334, metadata !DIExpression()), !dbg !10345
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !10351
  %13 = load i32, i32* %12, align 4, !dbg !10351
  call void @llvm.dbg.value(metadata i32 %13, metadata !10333, metadata !DIExpression()), !dbg !10345
  %14 = and i32 %13, 31, !dbg !10352
  %15 = icmp ult i32 %14, 16, !dbg !10353
  br i1 %15, label %16, label %20, !dbg !10354

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10355
  %18 = load i32, i32* %17, align 4, !dbg !10355
  %19 = or i32 %18, 32, !dbg !10357
  call void @llvm.dbg.value(metadata i32 %19, metadata !10334, metadata !DIExpression()), !dbg !10345
  br label %28, !dbg !10358

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !10359

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10360
  %23 = load i32, i32* %22, align 4, !dbg !10360
  call void @llvm.dbg.value(metadata i32 %23, metadata !10338, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !10361
  %24 = lshr i32 %23, 7, !dbg !10362
  %25 = and i32 %24, 16, !dbg !10362
  %26 = or i32 %25, %23, !dbg !10362
  call void @llvm.dbg.value(metadata i32 %26, metadata !10334, metadata !DIExpression()), !dbg !10345
  br label %28, !dbg !10363

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !10345
  call void @llvm.dbg.value(metadata i32 %29, metadata !10334, metadata !DIExpression()), !dbg !10345
  %30 = lshr i32 %13, 5, !dbg !10364
  %31 = and i32 %30, 255, !dbg !10364
  call void @llvm.dbg.value(metadata i32 %31, metadata !10332, metadata !DIExpression()), !dbg !10345
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !10365
  call void @llvm.dbg.value(metadata i32 %32, metadata !10335, metadata !DIExpression()), !dbg !10345
  %33 = icmp slt i32 %32, 0, !dbg !10366
  %34 = add nuw nsw i32 %10, 1, !dbg !10368
  call void @llvm.dbg.value(metadata i32 %34, metadata !10336, metadata !DIExpression()), !dbg !10346
  br i1 %33, label %35, label %7, !dbg !10369

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !10370
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10371 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10375, metadata !DIExpression()), !dbg !10379
  call void @llvm.dbg.value(metadata i32 %1, metadata !10376, metadata !DIExpression()), !dbg !10379
  call void @llvm.dbg.value(metadata i32 %2, metadata !10377, metadata !DIExpression()), !dbg !10379
  %4 = icmp ugt i32 %0, 175, !dbg !10380
  br i1 %4, label %16, label %5, !dbg !10382

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !10383
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !10384
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !10384
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10378, metadata !DIExpression()), !dbg !10379
  %9 = add nsw i32 %6, -8, !dbg !10385
  %10 = icmp ult i32 %9, 3, !dbg !10385
  br i1 %10, label %16, label %11, !dbg !10387

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.125(%struct.device* noundef %8) #24, !dbg !10388
  br i1 %12, label %13, label %16, !dbg !10389

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !10390
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #26, !dbg !10391
  br label %16, !dbg !10392

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !10379
  ret i32 %17, !dbg !10393
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.125(%struct.device* noundef %0) unnamed_addr #1 !dbg !10394 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10398, metadata !DIExpression()), !dbg !10399
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10400, !srcloc !10402
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.126(%struct.device* noundef %0) #24, !dbg !10403
  ret i1 %2, !dbg !10404
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.126(%struct.device* noundef %0) unnamed_addr #1 !dbg !10405 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10407, metadata !DIExpression()), !dbg !10408
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !10409
  ret i1 %2, !dbg !10410
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #4 !dbg !10411 {
  ret void, !dbg !10412
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #15 !dbg !10413 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10415, metadata !DIExpression()), !dbg !10420
  call void @llvm.dbg.value(metadata i32 0, metadata !10416, metadata !DIExpression()), !dbg !10420
  call void @llvm.dbg.value(metadata i32 2, metadata !10417, metadata !DIExpression()), !dbg !10420
  call void @llvm.dbg.value(metadata i32 0, metadata !10418, metadata !DIExpression()), !dbg !10420
  call void @llvm.dbg.value(metadata i32 2, metadata !10419, metadata !DIExpression()), !dbg !10420
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10421
  %2 = and i32 %1, 12, !dbg !10422
  call void @llvm.dbg.value(metadata i32 %2, metadata !10415, metadata !DIExpression()), !dbg !10420
  %3 = icmp eq i32 %2, 8, !dbg !10423
  br i1 %3, label %4, label %18, !dbg !10423

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10424
  call void @llvm.dbg.value(metadata i32 %5, metadata !10418, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !10420
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10426
  %7 = and i32 %6, 63, !dbg !10427
  call void @llvm.dbg.value(metadata i32 %7, metadata !10419, metadata !DIExpression()), !dbg !10420
  %8 = udiv i32 16000000, %7, !dbg !10428
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10428
  %10 = lshr i32 %9, 6, !dbg !10428
  %11 = and i32 %10, 511, !dbg !10428
  %12 = mul i32 %11, %8, !dbg !10428
  call void @llvm.dbg.value(metadata i32 %12, metadata !10416, metadata !DIExpression()), !dbg !10420
  call void @llvm.dbg.value(metadata i32 %12, metadata !10416, metadata !DIExpression()), !dbg !10420
  call void @llvm.dbg.value(metadata i32 %12, metadata !10416, metadata !DIExpression()), !dbg !10420
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10430
  %14 = lshr i32 %13, 15, !dbg !10431
  %15 = and i32 %14, 6, !dbg !10431
  %16 = add nuw nsw i32 %15, 2, !dbg !10431
  call void @llvm.dbg.value(metadata i32 %16, metadata !10417, metadata !DIExpression()), !dbg !10420
  %17 = udiv i32 %12, %16, !dbg !10432
  br label %18, !dbg !10433

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !10434
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10435
  %21 = lshr i32 %20, 4, !dbg !10436
  %22 = and i32 %21, 15, !dbg !10436
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !10437
  %24 = load i8, i8* %23, align 1, !dbg !10437
  %25 = zext i8 %24 to i32, !dbg !10437
  call void @llvm.dbg.value(metadata i32 %25, metadata !10415, metadata !DIExpression()), !dbg !10420
  %26 = lshr i32 %19, %25, !dbg !10438
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !10438
  ret void, !dbg !10439
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !10440 {
  ret i32 0, !dbg !10445
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !10446 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !10473, metadata !DIExpression()), !dbg !10484
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !10485
  br i1 %3, label %317, label %4, !dbg !10487

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !10488
  %6 = load i32, i32* %5, align 4, !dbg !10488
  %7 = and i32 %6, 1, !dbg !10490
  %8 = icmp eq i32 %7, 0, !dbg !10491
  br i1 %8, label %66, label %9, !dbg !10492

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10493
  %11 = and i32 %10, 12, !dbg !10493
  %12 = icmp eq i32 %11, 4, !dbg !10496
  br i1 %12, label %21, label %13, !dbg !10497

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10498
  %15 = and i32 %14, 12, !dbg !10498
  %16 = icmp eq i32 %15, 8, !dbg !10499
  br i1 %16, label %17, label %29, !dbg !10500

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10501
  %19 = and i32 %18, 4194304, !dbg !10502
  %20 = icmp eq i32 %19, 0, !dbg !10503
  br i1 %20, label %29, label %21, !dbg !10504

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10505
  %23 = and i32 %22, 131072, !dbg !10505
  %24 = icmp eq i32 %23, 0, !dbg !10505
  br i1 %24, label %66, label %25, !dbg !10508

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10509
  %27 = load i32, i32* %26, align 4, !dbg !10509
  %28 = icmp eq i32 %27, 0, !dbg !10510
  br i1 %28, label %317, label %66, !dbg !10511

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10512
  %31 = load i32, i32* %30, align 4, !dbg !10512
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !10516

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10517
  %34 = or i32 %33, 65536, !dbg !10517
  br label %45, !dbg !10517

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10519
  %37 = or i32 %36, 262144, !dbg !10519
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10519
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10519
  %39 = or i32 %38, 65536, !dbg !10519
  br label %45, !dbg !10519

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10522
  %42 = and i32 %41, -65537, !dbg !10522
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10522
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10522
  %44 = and i32 %43, -262145, !dbg !10522
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10524
  %47 = load i32, i32* %30, align 4, !dbg !10525
  %48 = icmp eq i32 %47, 0, !dbg !10527
  %49 = tail call i32 @HAL_GetTick() #26, !dbg !10528
  call void @llvm.dbg.value(metadata i32 %49, metadata !10474, metadata !DIExpression()), !dbg !10484
  call void @llvm.dbg.value(metadata i32 %49, metadata !10474, metadata !DIExpression()), !dbg !10484
  br i1 %48, label %58, label %50, !dbg !10529

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10530
  %52 = and i32 %51, 131072, !dbg !10532
  %53 = icmp eq i32 %52, 0, !dbg !10532
  br i1 %53, label %54, label %66, !dbg !10533

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #26, !dbg !10534
  %56 = sub i32 %55, %49, !dbg !10537
  %57 = icmp ugt i32 %56, 100, !dbg !10538
  br i1 %57, label %317, label %50, !dbg !10539, !llvm.loop !10540

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10542
  %60 = and i32 %59, 131072, !dbg !10542
  %61 = icmp eq i32 %60, 0, !dbg !10542
  br i1 %61, label %66, label %62, !dbg !10544

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #26, !dbg !10545
  %64 = sub i32 %63, %49, !dbg !10548
  %65 = icmp ugt i32 %64, 100, !dbg !10549
  br i1 %65, label %317, label %58, !dbg !10550, !llvm.loop !10551

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !10553
  %68 = and i32 %67, 2, !dbg !10555
  %69 = icmp eq i32 %68, 0, !dbg !10556
  br i1 %69, label %121, label %70, !dbg !10557

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10558
  %72 = and i32 %71, 12, !dbg !10558
  %73 = icmp eq i32 %72, 0, !dbg !10561
  br i1 %73, label %82, label %74, !dbg !10562

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10563
  %76 = and i32 %75, 12, !dbg !10563
  %77 = icmp eq i32 %76, 8, !dbg !10564
  br i1 %77, label %78, label %90, !dbg !10565

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10566
  %80 = and i32 %79, 4194304, !dbg !10567
  %81 = icmp eq i32 %80, 0, !dbg !10568
  br i1 %81, label %82, label %90, !dbg !10569

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10570
  %84 = and i32 %83, 2, !dbg !10570
  %85 = icmp eq i32 %84, 0, !dbg !10570
  br i1 %85, label %114, label %86, !dbg !10573

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10574
  %88 = load i32, i32* %87, align 4, !dbg !10574
  %89 = icmp eq i32 %88, 1, !dbg !10575
  br i1 %89, label %114, label %317, !dbg !10576

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10577
  %92 = load i32, i32* %91, align 4, !dbg !10577
  %93 = icmp eq i32 %92, 0, !dbg !10580
  br i1 %93, label %104, label %94, !dbg !10581

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10582
  %95 = tail call i32 @HAL_GetTick() #26, !dbg !10584
  call void @llvm.dbg.value(metadata i32 %95, metadata !10474, metadata !DIExpression()), !dbg !10484
  br label %96, !dbg !10585

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10586
  %98 = and i32 %97, 2, !dbg !10587
  %99 = icmp eq i32 %98, 0, !dbg !10587
  br i1 %99, label %100, label %114, !dbg !10585

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #26, !dbg !10588
  %102 = sub i32 %101, %95, !dbg !10591
  %103 = icmp ugt i32 %102, 2, !dbg !10592
  br i1 %103, label %317, label %96, !dbg !10593, !llvm.loop !10594

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10596
  %105 = tail call i32 @HAL_GetTick() #26, !dbg !10598
  call void @llvm.dbg.value(metadata i32 %105, metadata !10474, metadata !DIExpression()), !dbg !10484
  br label %106, !dbg !10599

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10600
  %108 = and i32 %107, 2, !dbg !10600
  %109 = icmp eq i32 %108, 0, !dbg !10600
  br i1 %109, label %121, label %110, !dbg !10599

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #26, !dbg !10601
  %112 = sub i32 %111, %105, !dbg !10604
  %113 = icmp ugt i32 %112, 2, !dbg !10605
  br i1 %113, label %317, label %106, !dbg !10606, !llvm.loop !10607

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10609
  %116 = and i32 %115, -249, !dbg !10609
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10609
  %118 = load i32, i32* %117, align 4, !dbg !10609
  %119 = shl i32 %118, 3, !dbg !10609
  %120 = or i32 %119, %116, !dbg !10609
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10609
  br label %121, !dbg !10610

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !10610
  %123 = and i32 %122, 8, !dbg !10612
  %124 = icmp eq i32 %123, 0, !dbg !10613
  br i1 %124, label %149, label %125, !dbg !10614

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10615
  %127 = load i32, i32* %126, align 4, !dbg !10615
  %128 = icmp eq i32 %127, 0, !dbg !10618
  br i1 %128, label %139, label %129, !dbg !10619

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10620
  %130 = tail call i32 @HAL_GetTick() #26, !dbg !10622
  call void @llvm.dbg.value(metadata i32 %130, metadata !10474, metadata !DIExpression()), !dbg !10484
  br label %131, !dbg !10623

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10624
  %133 = and i32 %132, 2, !dbg !10625
  %134 = icmp eq i32 %133, 0, !dbg !10625
  br i1 %134, label %135, label %149, !dbg !10623

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #26, !dbg !10626
  %137 = sub i32 %136, %130, !dbg !10629
  %138 = icmp ugt i32 %137, 2, !dbg !10630
  br i1 %138, label %317, label %131, !dbg !10631, !llvm.loop !10632

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10634
  %140 = tail call i32 @HAL_GetTick() #26, !dbg !10636
  call void @llvm.dbg.value(metadata i32 %140, metadata !10474, metadata !DIExpression()), !dbg !10484
  br label %141, !dbg !10637

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10638
  %143 = and i32 %142, 2, !dbg !10638
  %144 = icmp eq i32 %143, 0, !dbg !10638
  br i1 %144, label %149, label %145, !dbg !10637

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #26, !dbg !10639
  %147 = sub i32 %146, %140, !dbg !10642
  %148 = icmp ugt i32 %147, 2, !dbg !10643
  br i1 %148, label %317, label %141, !dbg !10644, !llvm.loop !10645

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !10647
  %151 = and i32 %150, 4, !dbg !10648
  %152 = icmp eq i32 %151, 0, !dbg !10649
  br i1 %152, label %221, label %153, !dbg !10650

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !10476, metadata !DIExpression()), !dbg !10651
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10652
  %155 = and i32 %154, 268435456, !dbg !10652
  %156 = icmp eq i32 %155, 0, !dbg !10652
  br i1 %156, label %157, label %164, !dbg !10653

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !10654
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !10654
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10480, metadata !DIExpression()), !dbg !10654
  store volatile i32 0, i32* %2, align 4, !dbg !10654
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10654
  %160 = or i32 %159, 268435456, !dbg !10654
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10654
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10654
  %162 = and i32 %161, 268435456, !dbg !10654
  store volatile i32 %162, i32* %2, align 4, !dbg !10654
  %163 = load volatile i32, i32* %2, align 4, !dbg !10654
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !10655
  call void @llvm.dbg.value(metadata i32 1, metadata !10476, metadata !DIExpression()), !dbg !10651
  br label %164, !dbg !10656

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !10476, metadata !DIExpression()), !dbg !10651
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10657
  %166 = and i32 %165, 256, !dbg !10657
  %167 = icmp eq i32 %166, 0, !dbg !10657
  br i1 %167, label %168, label %180, !dbg !10659

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10660
  %170 = or i32 %169, 256, !dbg !10660
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10660
  %171 = tail call i32 @HAL_GetTick() #26, !dbg !10662
  call void @llvm.dbg.value(metadata i32 %171, metadata !10474, metadata !DIExpression()), !dbg !10484
  br label %172, !dbg !10663

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10664
  %174 = and i32 %173, 256, !dbg !10664
  %175 = icmp eq i32 %174, 0, !dbg !10664
  br i1 %175, label %176, label %180, !dbg !10663

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #26, !dbg !10665
  %178 = sub i32 %177, %171, !dbg !10668
  %179 = icmp ugt i32 %178, 2, !dbg !10669
  br i1 %179, label %317, label %172, !dbg !10670, !llvm.loop !10671

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10673
  %182 = load i32, i32* %181, align 4, !dbg !10673
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !10676

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10677
  %185 = or i32 %184, 1, !dbg !10677
  br label %196, !dbg !10677

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10679
  %188 = or i32 %187, 4, !dbg !10679
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10679
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10679
  %190 = or i32 %189, 1, !dbg !10679
  br label %196, !dbg !10679

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10682
  %193 = and i32 %192, -2, !dbg !10682
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10682
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10682
  %195 = and i32 %194, -5, !dbg !10682
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10684
  %198 = load i32, i32* %181, align 4, !dbg !10685
  %199 = icmp eq i32 %198, 0, !dbg !10687
  %200 = tail call i32 @HAL_GetTick() #26, !dbg !10688
  call void @llvm.dbg.value(metadata i32 %200, metadata !10474, metadata !DIExpression()), !dbg !10484
  call void @llvm.dbg.value(metadata i32 %200, metadata !10474, metadata !DIExpression()), !dbg !10484
  br i1 %199, label %209, label %201, !dbg !10689

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10690
  %203 = and i32 %202, 2, !dbg !10692
  %204 = icmp eq i32 %203, 0, !dbg !10692
  br i1 %204, label %205, label %217, !dbg !10693

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #26, !dbg !10694
  %207 = sub i32 %206, %200, !dbg !10697
  %208 = icmp ugt i32 %207, 5000, !dbg !10698
  br i1 %208, label %317, label %201, !dbg !10699, !llvm.loop !10700

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10702
  %211 = and i32 %210, 2, !dbg !10702
  %212 = icmp eq i32 %211, 0, !dbg !10702
  br i1 %212, label %217, label %213, !dbg !10704

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #26, !dbg !10705
  %215 = sub i32 %214, %200, !dbg !10708
  %216 = icmp ugt i32 %215, 5000, !dbg !10709
  br i1 %216, label %317, label %209, !dbg !10710, !llvm.loop !10711

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !10713

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10714
  %220 = and i32 %219, -268435457, !dbg !10714
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10714
  br label %221, !dbg !10717

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !10718
  %223 = load i32, i32* %222, align 4, !dbg !10718
  %224 = icmp eq i32 %223, 0, !dbg !10720
  br i1 %224, label %316, label %225, !dbg !10721

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10722
  %227 = and i32 %226, 12, !dbg !10722
  %228 = icmp eq i32 %227, 8, !dbg !10725
  br i1 %228, label %277, label %229, !dbg !10726

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !10727
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10730
  %231 = tail call i32 @HAL_GetTick() #26, !dbg !10730
  call void @llvm.dbg.value(metadata i32 %231, metadata !10474, metadata !DIExpression()), !dbg !10484
  call void @llvm.dbg.value(metadata i32 %231, metadata !10474, metadata !DIExpression()), !dbg !10484
  br i1 %230, label %232, label %269, !dbg !10731

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10732
  %234 = and i32 %233, 33554432, !dbg !10732
  %235 = icmp eq i32 %234, 0, !dbg !10732
  br i1 %235, label %240, label %236, !dbg !10734

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #26, !dbg !10735
  %238 = sub i32 %237, %231, !dbg !10738
  %239 = icmp ugt i32 %238, 2, !dbg !10739
  br i1 %239, label %317, label %232, !dbg !10740, !llvm.loop !10741

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10743
  %242 = load i32, i32* %241, align 4, !dbg !10743
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10743
  %244 = load i32, i32* %243, align 4, !dbg !10743
  %245 = or i32 %244, %242, !dbg !10743
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10743
  %247 = load i32, i32* %246, align 4, !dbg !10743
  %248 = shl i32 %247, 6, !dbg !10743
  %249 = or i32 %245, %248, !dbg !10743
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10743
  %251 = load i32, i32* %250, align 4, !dbg !10743
  %252 = shl i32 %251, 15, !dbg !10743
  %253 = add i32 %252, -65536, !dbg !10743
  %254 = and i32 %253, -65536, !dbg !10743
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10743
  %256 = load i32, i32* %255, align 4, !dbg !10743
  %257 = shl i32 %256, 24, !dbg !10743
  %258 = or i32 %249, %257, !dbg !10743
  %259 = or i32 %258, %254, !dbg !10743
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10743
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10744
  %260 = tail call i32 @HAL_GetTick() #26, !dbg !10745
  call void @llvm.dbg.value(metadata i32 %260, metadata !10474, metadata !DIExpression()), !dbg !10484
  br label %261, !dbg !10746

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10747
  %263 = and i32 %262, 33554432, !dbg !10748
  %264 = icmp eq i32 %263, 0, !dbg !10748
  br i1 %264, label %265, label %316, !dbg !10746

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #26, !dbg !10749
  %267 = sub i32 %266, %260, !dbg !10752
  %268 = icmp ugt i32 %267, 2, !dbg !10753
  br i1 %268, label %317, label %261, !dbg !10754, !llvm.loop !10755

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10757
  %271 = and i32 %270, 33554432, !dbg !10757
  %272 = icmp eq i32 %271, 0, !dbg !10757
  br i1 %272, label %316, label %273, !dbg !10759

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #26, !dbg !10760
  %275 = sub i32 %274, %231, !dbg !10763
  %276 = icmp ugt i32 %275, 2, !dbg !10764
  br i1 %276, label %317, label %269, !dbg !10765, !llvm.loop !10766

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !10768
  br i1 %278, label %317, label %279, !dbg !10771

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10772
  call void @llvm.dbg.value(metadata i32 %280, metadata !10475, metadata !DIExpression()), !dbg !10484
  %281 = and i32 %280, 4194304, !dbg !10774
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10776
  %283 = load i32, i32* %282, align 4, !dbg !10776
  %284 = icmp eq i32 %281, %283, !dbg !10777
  br i1 %284, label %285, label %317, !dbg !10778

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !10779
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10780
  %288 = load i32, i32* %287, align 4, !dbg !10780
  %289 = icmp eq i32 %286, %288, !dbg !10781
  br i1 %289, label %290, label %317, !dbg !10782

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !10783
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10784
  %293 = load i32, i32* %292, align 4, !dbg !10784
  %294 = shl i32 %293, 6, !dbg !10785
  %295 = icmp eq i32 %291, %294, !dbg !10786
  br i1 %295, label %296, label %317, !dbg !10787

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !10788
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10789
  %299 = load i32, i32* %298, align 4, !dbg !10789
  %300 = shl i32 %299, 15, !dbg !10790
  %301 = add i32 %300, -65536, !dbg !10790
  %302 = and i32 %301, -65536, !dbg !10790
  %303 = icmp eq i32 %297, %302, !dbg !10791
  br i1 %303, label %304, label %317, !dbg !10792

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !10793
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10794
  %307 = load i32, i32* %306, align 4, !dbg !10794
  %308 = shl i32 %307, 24, !dbg !10795
  %309 = icmp eq i32 %305, %308, !dbg !10796
  br i1 %309, label %310, label %317, !dbg !10797

310:                                              ; preds = %304
  %311 = and i32 %280, 1879048192, !dbg !10798
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !10799
  %313 = load i32, i32* %312, align 4, !dbg !10799
  %314 = shl i32 %313, 28, !dbg !10800
  %315 = icmp eq i32 %311, %314, !dbg !10801
  br i1 %315, label %316, label %317, !dbg !10802

316:                                              ; preds = %269, %261, %310, %221
  br label %317, !dbg !10803

317:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %310, %277, %86, %25, %1, %316
  %318 = phi i32 [ 0, %316 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %310 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !10484
  ret i32 %318, !dbg !10804
}

; Function Attrs: optsize
declare !dbg !10805 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !10807 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !10820, metadata !DIExpression()), !dbg !10823
  call void @llvm.dbg.value(metadata i32 %1, metadata !10821, metadata !DIExpression()), !dbg !10823
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !10824
  br i1 %3, label %115, label %4, !dbg !10826

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10827
  %6 = and i32 %5, 7, !dbg !10827
  %7 = icmp ult i32 %6, %1, !dbg !10829
  br i1 %7, label %8, label %13, !dbg !10830

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !10831
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !10831
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10833
  %11 = and i32 %10, 7, !dbg !10833
  %12 = icmp eq i32 %11, %1, !dbg !10835
  br i1 %12, label %13, label %115, !dbg !10836

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !10837
  %15 = load i32, i32* %14, align 4, !dbg !10837
  %16 = and i32 %15, 2, !dbg !10839
  %17 = icmp eq i32 %16, 0, !dbg !10840
  br i1 %17, label %39, label %18, !dbg !10841

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !10842
  %20 = icmp eq i32 %19, 0, !dbg !10845
  br i1 %20, label %25, label %21, !dbg !10846

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10847
  %23 = or i32 %22, 7168, !dbg !10847
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10847
  %24 = load i32, i32* %14, align 4, !dbg !10849
  br label %25, !dbg !10851

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !10849
  %27 = and i32 %26, 8, !dbg !10852
  %28 = icmp eq i32 %27, 0, !dbg !10853
  br i1 %28, label %32, label %29, !dbg !10854

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10855
  %31 = or i32 %30, 57344, !dbg !10855
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10855
  br label %32, !dbg !10857

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10858
  %34 = and i32 %33, -241, !dbg !10858
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !10858
  %36 = load i32, i32* %35, align 4, !dbg !10858
  %37 = or i32 %34, %36, !dbg !10858
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10858
  %38 = load i32, i32* %14, align 4, !dbg !10859
  br label %39, !dbg !10861

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !10859
  %41 = and i32 %40, 1, !dbg !10862
  %42 = icmp eq i32 %41, 0, !dbg !10863
  br i1 %42, label %73, label %43, !dbg !10864

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !10865
  %45 = load i32, i32* %44, align 4, !dbg !10865
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !10868

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10869
  %48 = and i32 %47, 131072, !dbg !10872
  %49 = icmp eq i32 %48, 0, !dbg !10872
  br i1 %49, label %115, label %58, !dbg !10873

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10874
  %52 = and i32 %51, 33554432, !dbg !10878
  %53 = icmp eq i32 %52, 0, !dbg !10878
  br i1 %53, label %115, label %58, !dbg !10879

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10880
  %56 = and i32 %55, 2, !dbg !10883
  %57 = icmp eq i32 %56, 0, !dbg !10883
  br i1 %57, label %115, label %58, !dbg !10884

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10885
  %60 = and i32 %59, -4, !dbg !10885
  %61 = or i32 %60, %45, !dbg !10885
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10885
  %62 = tail call i32 @HAL_GetTick() #26, !dbg !10886
  call void @llvm.dbg.value(metadata i32 %62, metadata !10822, metadata !DIExpression()), !dbg !10823
  br label %63, !dbg !10887

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10888
  %65 = and i32 %64, 12, !dbg !10888
  %66 = load i32, i32* %44, align 4, !dbg !10889
  %67 = shl i32 %66, 2, !dbg !10890
  %68 = icmp eq i32 %65, %67, !dbg !10891
  br i1 %68, label %73, label %69, !dbg !10887

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #26, !dbg !10892
  %71 = sub i32 %70, %62, !dbg !10895
  %72 = icmp ugt i32 %71, 5000, !dbg !10896
  br i1 %72, label %115, label %63, !dbg !10897, !llvm.loop !10898

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10900
  %75 = and i32 %74, 7, !dbg !10900
  %76 = icmp ugt i32 %75, %1, !dbg !10902
  br i1 %76, label %77, label %82, !dbg !10903

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !10904
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !10904
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10906
  %80 = and i32 %79, 7, !dbg !10906
  %81 = icmp eq i32 %80, %1, !dbg !10908
  br i1 %81, label %82, label %115, !dbg !10909

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !10910
  %84 = and i32 %83, 4, !dbg !10912
  %85 = icmp eq i32 %84, 0, !dbg !10913
  br i1 %85, label %93, label %86, !dbg !10914

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10915
  %88 = and i32 %87, -7169, !dbg !10915
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !10915
  %90 = load i32, i32* %89, align 4, !dbg !10915
  %91 = or i32 %88, %90, !dbg !10915
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10915
  %92 = load i32, i32* %14, align 4, !dbg !10917
  br label %93, !dbg !10919

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !10917
  %95 = and i32 %94, 8, !dbg !10920
  %96 = icmp eq i32 %95, 0, !dbg !10921
  br i1 %96, label %104, label %97, !dbg !10922

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10923
  %99 = and i32 %98, -57345, !dbg !10923
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !10923
  %101 = load i32, i32* %100, align 4, !dbg !10923
  %102 = shl i32 %101, 3, !dbg !10923
  %103 = or i32 %102, %99, !dbg !10923
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10923
  br label %104, !dbg !10925

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !10926
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10927
  %107 = lshr i32 %106, 4, !dbg !10928
  %108 = and i32 %107, 15, !dbg !10928
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !10929
  %110 = load i8, i8* %109, align 1, !dbg !10929
  %111 = zext i8 %110 to i32, !dbg !10929
  %112 = lshr i32 %105, %111, !dbg !10930
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !10931
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !10932
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #26, !dbg !10933
  br label %115, !dbg !10934

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !10823
  ret i32 %116, !dbg !10935
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !10936 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10938, metadata !DIExpression()), !dbg !10942
  call void @llvm.dbg.value(metadata i32 0, metadata !10939, metadata !DIExpression()), !dbg !10942
  call void @llvm.dbg.value(metadata i32 0, metadata !10940, metadata !DIExpression()), !dbg !10942
  call void @llvm.dbg.value(metadata i32 0, metadata !10941, metadata !DIExpression()), !dbg !10942
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10943
  %2 = and i32 %1, 12, !dbg !10944
  %3 = icmp eq i32 %2, 8, !dbg !10945
  br i1 %3, label %4, label %21, !dbg !10945

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10946
  %6 = and i32 %5, 63, !dbg !10949
  call void @llvm.dbg.value(metadata i32 %6, metadata !10938, metadata !DIExpression()), !dbg !10942
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10950
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10952
  %9 = lshr i32 %8, 6, !dbg !10952
  %10 = and i32 %9, 511, !dbg !10952
  %11 = zext i32 %10 to i64, !dbg !10952
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !10952
  %13 = zext i32 %6 to i64, !dbg !10952
  %14 = udiv i64 %12, %13, !dbg !10952
  %15 = trunc i64 %14 to i32, !dbg !10952
  call void @llvm.dbg.value(metadata i32 %15, metadata !10939, metadata !DIExpression()), !dbg !10942
  call void @llvm.dbg.value(metadata i32 %15, metadata !10939, metadata !DIExpression()), !dbg !10942
  call void @llvm.dbg.value(metadata i32 %15, metadata !10939, metadata !DIExpression()), !dbg !10942
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10953
  %17 = lshr i32 %16, 15, !dbg !10954
  %18 = and i32 %17, 6, !dbg !10954
  %19 = add nuw nsw i32 %18, 2, !dbg !10954
  call void @llvm.dbg.value(metadata i32 %19, metadata !10940, metadata !DIExpression()), !dbg !10942
  %20 = udiv i32 %15, %19, !dbg !10955
  call void @llvm.dbg.value(metadata i32 %20, metadata !10941, metadata !DIExpression()), !dbg !10942
  br label %21, !dbg !10956

21:                                               ; preds = %0, %4
  %22 = phi i32 [ %20, %4 ], [ 16000000, %0 ], !dbg !10957
  call void @llvm.dbg.value(metadata i32 %22, metadata !10941, metadata !DIExpression()), !dbg !10942
  ret i32 %22, !dbg !10958
}

; Function Attrs: optsize
declare !dbg !10959 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10962 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !10966, metadata !DIExpression()), !dbg !10983
  call void @llvm.dbg.value(metadata i32 %1, metadata !10967, metadata !DIExpression()), !dbg !10983
  call void @llvm.dbg.value(metadata i32 %2, metadata !10968, metadata !DIExpression()), !dbg !10983
  %6 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !10984
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #23, !dbg !10984
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !10969, metadata !DIExpression()), !dbg !10985
  %7 = icmp eq i32 %0, 0, !dbg !10986
  br i1 %7, label %8, label %24, !dbg !10987

8:                                                ; preds = %3
  %9 = bitcast i32* %5 to i8*, !dbg !10988
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9), !dbg !10988
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10979, metadata !DIExpression()), !dbg !10988
  store volatile i32 0, i32* %5, align 4, !dbg !10988
  %10 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !10988
  %11 = or i32 %10, 1, !dbg !10988
  store volatile i32 %11, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !10988
  %12 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !10988
  %13 = and i32 %12, 1, !dbg !10988
  store volatile i32 %13, i32* %5, align 4, !dbg !10988
  %14 = load volatile i32, i32* %5, align 4, !dbg !10988
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9), !dbg !10989
  %15 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !10990
  store i32 256, i32* %15, align 4, !dbg !10991
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !10992
  store i32 2, i32* %16, align 4, !dbg !10993
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !10994
  store i32 3, i32* %17, align 4, !dbg !10995
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !10996
  store i32 0, i32* %18, align 4, !dbg !10997
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !10998
  store i32 0, i32* %19, align 4, !dbg !10999
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #26, !dbg !11000
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11001
  %21 = and i32 %20, -123731969, !dbg !11001
  %22 = or i32 %2, %1, !dbg !11001
  %23 = or i32 %22, %21, !dbg !11001
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11001
  br label %24, !dbg !11002

24:                                               ; preds = %8, %3
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #23, !dbg !11003
  ret void, !dbg !11003
}

; Function Attrs: optsize
declare !dbg !11004 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #14 !dbg !11008 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11009
  ret void, !dbg !11010
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #14 !dbg !11011 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11012
  ret void, !dbg !11013
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #8 !dbg !11014 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11015
  ret i32 %1, !dbg !11016
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #15 !dbg !11017 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !11018
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11019
  %3 = lshr i32 %2, 10, !dbg !11020
  %4 = and i32 %3, 7, !dbg !11020
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11021
  %6 = load i8, i8* %5, align 1, !dbg !11021
  %7 = zext i8 %6 to i32, !dbg !11021
  %8 = lshr i32 %1, %7, !dbg !11022
  ret i32 %8, !dbg !11023
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #15 !dbg !11024 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !11025
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11026
  %3 = lshr i32 %2, 13, !dbg !11027
  %4 = and i32 %3, 7, !dbg !11027
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11028
  %6 = load i8, i8* %5, align 1, !dbg !11028
  %7 = zext i8 %6 to i32, !dbg !11028
  %8 = lshr i32 %1, %7, !dbg !11029
  ret i32 %8, !dbg !11030
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11031 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11035, metadata !DIExpression()), !dbg !11036
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11037
  store i32 15, i32* %2, align 4, !dbg !11038
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11039
  %4 = and i32 %3, 262144, !dbg !11041
  %5 = icmp eq i32 %4, 0, !dbg !11042
  br i1 %5, label %8, label %6, !dbg !11043

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11044
  store i32 327680, i32* %7, align 4, !dbg !11046
  br label %15, !dbg !11047

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11048
  %10 = and i32 %9, 65536, !dbg !11050
  %11 = icmp eq i32 %10, 0, !dbg !11051
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11052
  br i1 %11, label %14, label %13, !dbg !11053

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !11054
  br label %15, !dbg !11056

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11057
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11059
  %17 = and i32 %16, 1, !dbg !11061
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11062
  store i32 %17, i32* %18, align 4, !dbg !11064
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11065
  %20 = lshr i32 %19, 3, !dbg !11066
  %21 = and i32 %20, 31, !dbg !11066
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11067
  store i32 %21, i32* %22, align 4, !dbg !11068
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11069
  %24 = and i32 %23, 4, !dbg !11071
  %25 = icmp eq i32 %24, 0, !dbg !11072
  br i1 %25, label %28, label %26, !dbg !11073

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11074
  store i32 5, i32* %27, align 4, !dbg !11076
  br label %35, !dbg !11077

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11078
  %30 = and i32 %29, 1, !dbg !11080
  %31 = icmp eq i32 %30, 0, !dbg !11081
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11082
  br i1 %31, label %34, label %33, !dbg !11083

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !11084
  br label %35, !dbg !11086

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !11087
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11089
  %37 = and i32 %36, 1, !dbg !11091
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11092
  store i32 %37, i32* %38, align 4, !dbg !11094
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11095
  %40 = and i32 %39, 16777216, !dbg !11097
  %41 = icmp eq i32 %40, 0, !dbg !11098
  %42 = select i1 %41, i32 1, i32 2, !dbg !11099
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11100
  store i32 %42, i32* %43, align 4, !dbg !11102
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11103
  %45 = and i32 %44, 4194304, !dbg !11104
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11105
  store i32 %45, i32* %46, align 4, !dbg !11106
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11107
  %48 = and i32 %47, 63, !dbg !11108
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11109
  store i32 %48, i32* %49, align 4, !dbg !11110
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11111
  %51 = lshr i32 %50, 6, !dbg !11112
  %52 = and i32 %51, 511, !dbg !11112
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11113
  store i32 %52, i32* %53, align 4, !dbg !11114
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11115
  %55 = shl i32 %54, 1, !dbg !11116
  %56 = and i32 %55, 393216, !dbg !11116
  %57 = add nuw nsw i32 %56, 131072, !dbg !11116
  %58 = lshr exact i32 %57, 16, !dbg !11117
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11118
  store i32 %58, i32* %59, align 4, !dbg !11119
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11120
  %61 = lshr i32 %60, 24, !dbg !11121
  %62 = and i32 %61, 15, !dbg !11121
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11122
  store i32 %62, i32* %63, align 4, !dbg !11123
  ret void, !dbg !11124
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #15 !dbg !11125 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11129, metadata !DIExpression()), !dbg !11131
  call void @llvm.dbg.value(metadata i32* %1, metadata !11130, metadata !DIExpression()), !dbg !11131
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11132
  store i32 15, i32* %3, align 4, !dbg !11133
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11134
  %5 = and i32 %4, 3, !dbg !11135
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11136
  store i32 %5, i32* %6, align 4, !dbg !11137
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11138
  %8 = and i32 %7, 240, !dbg !11139
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11140
  store i32 %8, i32* %9, align 4, !dbg !11141
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11142
  %11 = and i32 %10, 7168, !dbg !11143
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11144
  store i32 %11, i32* %12, align 4, !dbg !11145
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11146
  %14 = lshr i32 %13, 3, !dbg !11147
  %15 = and i32 %14, 7168, !dbg !11147
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11148
  store i32 %15, i32* %16, align 4, !dbg !11149
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11150
  %18 = and i32 %17, 7, !dbg !11151
  store i32 %18, i32* %1, align 4, !dbg !11152
  ret void, !dbg !11153
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11154 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11155
  %2 = and i32 %1, 128, !dbg !11155
  %3 = icmp eq i32 %2, 0, !dbg !11155
  br i1 %3, label %5, label %4, !dbg !11157

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #24, !dbg !11158
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11160
  br label %5, !dbg !11161

5:                                                ; preds = %4, %0
  ret void, !dbg !11162
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11163 {
  ret void, !dbg !11164
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #14 !dbg !11165 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11168, metadata !DIExpression()), !dbg !11169
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !11170
  ret void, !dbg !11171
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #14 !dbg !11172 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11175, metadata !DIExpression()), !dbg !11177
  call void @llvm.dbg.value(metadata i32 1000, metadata !11176, metadata !DIExpression()), !dbg !11177
  %2 = udiv i32 %0, 1000, !dbg !11178
  %3 = add nsw i32 %2, -1, !dbg !11179
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11180
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11181
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11182
  ret void, !dbg !11183
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #16 !dbg !11184 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11186, metadata !DIExpression()), !dbg !11188
  %3 = bitcast i32* %2 to i8*, !dbg !11189
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11189
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11187, metadata !DIExpression()), !dbg !11190
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11191
  store volatile i32 %4, i32* %2, align 4, !dbg !11190
  %5 = load volatile i32, i32* %2, align 4, !dbg !11192
  %6 = icmp eq i32 %0, -1, !dbg !11193
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11186, metadata !DIExpression()), !dbg !11188
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11188
  call void @llvm.dbg.value(metadata i32 %8, metadata !11186, metadata !DIExpression()), !dbg !11188
  br label %9, !dbg !11195

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11186, metadata !DIExpression()), !dbg !11188
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11196
  call void @llvm.dbg.value(metadata i32 undef, metadata !11186, metadata !DIExpression()), !dbg !11188
  %12 = shl i32 %11, 15, !dbg !11188
  %13 = ashr i32 %12, 31, !dbg !11188
  %14 = add i32 %13, %10, !dbg !11188
  call void @llvm.dbg.value(metadata i32 %14, metadata !11186, metadata !DIExpression()), !dbg !11188
  %15 = icmp eq i32 %14, 0, !dbg !11195
  br i1 %15, label %16, label %9, !dbg !11195

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11199
  ret void, !dbg !11199
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #7 !dbg !11200 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11202, metadata !DIExpression()), !dbg !11203
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11204
  ret void, !dbg !11205
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #14 !dbg !11206 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11211, metadata !DIExpression()), !dbg !11216
  call void @llvm.dbg.value(metadata i32 0, metadata !11214, metadata !DIExpression()), !dbg !11216
  call void @llvm.dbg.value(metadata i32 0, metadata !11215, metadata !DIExpression()), !dbg !11216
  %2 = icmp eq i32 %0, 0, !dbg !11217
  br i1 %2, label %50, label %3, !dbg !11219

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !11220
  %5 = icmp eq i32 %4, 49152, !dbg !11223
  br i1 %5, label %6, label %15, !dbg !11224

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !11214, metadata !DIExpression()), !dbg !11216
  %7 = add i32 %0, -64000001, !dbg !11225
  %8 = icmp ult i32 %7, 26000000, !dbg !11225
  br i1 %8, label %15, label %9, !dbg !11225

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !11228
  %11 = select i1 %10, i32 0, i32 3, !dbg !11230
  call void @llvm.dbg.value(metadata i32 %11, metadata !11214, metadata !DIExpression()), !dbg !11216
  %12 = add i32 %0, -30000001, !dbg !11231
  %13 = icmp ult i32 %12, 60000000, !dbg !11231
  %14 = select i1 %13, i32 1, i32 %11, !dbg !11231
  call void @llvm.dbg.value(metadata i32 %14, metadata !11214, metadata !DIExpression()), !dbg !11216
  br label %15, !dbg !11231

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !11216
  call void @llvm.dbg.value(metadata i32 %16, metadata !11214, metadata !DIExpression()), !dbg !11216
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !11234
  %18 = icmp eq i32 %17, 32768, !dbg !11236
  br i1 %18, label %19, label %27, !dbg !11237

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !11238
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !11241
  br i1 %22, label %27, label %23, !dbg !11241

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !11242
  %25 = and i1 %24, %21, !dbg !11245
  %26 = select i1 %25, i32 1, i32 %16, !dbg !11245
  call void @llvm.dbg.value(metadata i32 %26, metadata !11214, metadata !DIExpression()), !dbg !11216
  br label %27, !dbg !11245

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !11246
  call void @llvm.dbg.value(metadata i32 %28, metadata !11214, metadata !DIExpression()), !dbg !11216
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !11247
  %30 = icmp eq i32 %29, 16384, !dbg !11249
  br i1 %30, label %31, label %39, !dbg !11250

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !11251
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !11254
  br i1 %34, label %39, label %35, !dbg !11254

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !11255
  %37 = select i1 %36, i1 %33, i1 false, !dbg !11258
  %38 = select i1 %37, i32 1, i32 %28, !dbg !11258
  call void @llvm.dbg.value(metadata i32 %38, metadata !11214, metadata !DIExpression()), !dbg !11216
  br label %39, !dbg !11258

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !11246
  call void @llvm.dbg.value(metadata i32 %40, metadata !11214, metadata !DIExpression()), !dbg !11216
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #24, !dbg !11259
  call void @llvm.dbg.value(metadata i32 2, metadata !11212, metadata !DIExpression()), !dbg !11216
  br label %41, !dbg !11260

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !11246
  call void @llvm.dbg.value(metadata i32 %42, metadata !11212, metadata !DIExpression()), !dbg !11216
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !11261
  call void @llvm.dbg.value(metadata i32 %43, metadata !11213, metadata !DIExpression()), !dbg !11216
  %44 = add nsw i32 %42, -1, !dbg !11263
  call void @llvm.dbg.value(metadata i32 %44, metadata !11212, metadata !DIExpression()), !dbg !11216
  %45 = icmp ne i32 %43, %40, !dbg !11264
  %46 = icmp ne i32 %44, 0, !dbg !11265
  %47 = select i1 %45, i1 %46, i1 false, !dbg !11265
  br i1 %47, label %41, label %48, !dbg !11266, !llvm.loop !11267

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !11269
  call void @llvm.dbg.value(metadata i32 %51, metadata !11215, metadata !DIExpression()), !dbg !11216
  ret i32 %51, !dbg !11270
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #15 !dbg !11271 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11273
  %2 = and i32 %1, 49152, !dbg !11273
  ret i32 %2, !dbg !11274
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #14 !dbg !11275 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11277, metadata !DIExpression()), !dbg !11278
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11279
  %3 = and i32 %2, -8, !dbg !11279
  %4 = or i32 %3, %0, !dbg !11279
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11279
  ret void, !dbg !11280
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #15 !dbg !11281 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11282
  %2 = and i32 %1, 7, !dbg !11282
  ret i32 %2, !dbg !11283
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !11284 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !11302, metadata !DIExpression()), !dbg !11306
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11303, metadata !DIExpression()), !dbg !11306
  call void @llvm.dbg.value(metadata i32 0, metadata !11304, metadata !DIExpression()), !dbg !11306
  call void @llvm.dbg.value(metadata i32 0, metadata !11305, metadata !DIExpression()), !dbg !11306
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !11307
  %4 = icmp eq i32 %3, 0, !dbg !11309
  br i1 %4, label %5, label %21, !dbg !11310

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #24, !dbg !11311
  call void @llvm.dbg.value(metadata i32 %6, metadata !11305, metadata !DIExpression()), !dbg !11306
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.135() #24, !dbg !11313
  %8 = icmp eq i32 %7, 1, !dbg !11315
  br i1 %8, label %13, label %9, !dbg !11316

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.136() #24, !dbg !11317
  br label %10, !dbg !11319

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.135() #24, !dbg !11320
  %12 = icmp eq i32 %11, 1, !dbg !11321
  br i1 %12, label %13, label %10, !dbg !11319, !llvm.loop !11322

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !11324
  %15 = load i32, i32* %14, align 4, !dbg !11324
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !11325
  %17 = load i32, i32* %16, align 4, !dbg !11325
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !11326
  %19 = load i32, i32* %18, align 4, !dbg !11326
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.137(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !11327
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #24, !dbg !11328
  call void @llvm.dbg.value(metadata i32 %20, metadata !11304, metadata !DIExpression()), !dbg !11306
  br label %21, !dbg !11329

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !11330
  call void @llvm.dbg.value(metadata i32 %22, metadata !11304, metadata !DIExpression()), !dbg !11306
  ret i32 %22, !dbg !11331
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #15 !dbg !11332 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11336, metadata !DIExpression()), !dbg !11337
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.139() #24, !dbg !11338
  %2 = icmp ne i32 %1, 0, !dbg !11340
  call void @llvm.dbg.value(metadata i1 %2, metadata !11336, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11337
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !11341
  %4 = icmp ne i32 %3, 0, !dbg !11343
  %5 = select i1 %4, i1 true, i1 %2, !dbg !11344
  %6 = zext i1 %5 to i32, !dbg !11344
  call void @llvm.dbg.value(metadata i32 %6, metadata !11336, metadata !DIExpression()), !dbg !11337
  ret i32 %6, !dbg !11345
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #8 !dbg !11346 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11350, metadata !DIExpression()), !dbg !11353
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11351, metadata !DIExpression()), !dbg !11353
  call void @llvm.dbg.value(metadata i32 0, metadata !11352, metadata !DIExpression()), !dbg !11353
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !11354
  %4 = load i32, i32* %3, align 4, !dbg !11354
  %5 = and i32 %4, 63, !dbg !11355
  %6 = udiv i32 %0, %5, !dbg !11356
  call void @llvm.dbg.value(metadata i32 %6, metadata !11352, metadata !DIExpression()), !dbg !11353
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !11357
  %8 = load i32, i32* %7, align 4, !dbg !11357
  %9 = and i32 %8, 511, !dbg !11358
  %10 = mul i32 %9, %6, !dbg !11359
  call void @llvm.dbg.value(metadata i32 %10, metadata !11352, metadata !DIExpression()), !dbg !11353
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !11360
  %12 = load i32, i32* %11, align 4, !dbg !11360
  %13 = lshr i32 %12, 15, !dbg !11361
  %14 = and i32 %13, 131070, !dbg !11361
  %15 = add nuw nsw i32 %14, 2, !dbg !11361
  %16 = udiv i32 %10, %15, !dbg !11362
  call void @llvm.dbg.value(metadata i32 %16, metadata !11352, metadata !DIExpression()), !dbg !11353
  ret i32 %16, !dbg !11363
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.135() unnamed_addr #15 !dbg !11364 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11365
  %2 = lshr i32 %1, 1, !dbg !11366
  %3 = and i32 %2, 1, !dbg !11366
  ret i32 %3, !dbg !11367
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.136() unnamed_addr #14 !dbg !11368 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11369
  %2 = or i32 %1, 1, !dbg !11369
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11369
  ret void, !dbg !11370
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.137(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #14 !dbg !11371 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11373, metadata !DIExpression()), !dbg !11377
  call void @llvm.dbg.value(metadata i32 %1, metadata !11374, metadata !DIExpression()), !dbg !11377
  call void @llvm.dbg.value(metadata i32 %2, metadata !11375, metadata !DIExpression()), !dbg !11377
  call void @llvm.dbg.value(metadata i32 %3, metadata !11376, metadata !DIExpression()), !dbg !11377
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11378
  %6 = and i32 %5, -4227072, !dbg !11378
  %7 = or i32 %1, %0, !dbg !11378
  %8 = shl i32 %2, 6, !dbg !11378
  %9 = or i32 %7, %8, !dbg !11378
  %10 = or i32 %9, %6, !dbg !11378
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11378
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11379
  %12 = and i32 %11, -196609, !dbg !11379
  %13 = or i32 %12, %3, !dbg !11379
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11379
  ret void, !dbg !11380
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #14 !dbg !11381 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11385, metadata !DIExpression()), !dbg !11389
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11386, metadata !DIExpression()), !dbg !11389
  call void @llvm.dbg.value(metadata i32 0, metadata !11387, metadata !DIExpression()), !dbg !11389
  call void @llvm.dbg.value(metadata i32 0, metadata !11388, metadata !DIExpression()), !dbg !11389
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !11390
  %4 = load i32, i32* %3, align 4, !dbg !11390
  %5 = lshr i32 %4, 4, !dbg !11390
  %6 = and i32 %5, 15, !dbg !11390
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !11390
  %8 = load i8, i8* %7, align 1, !dbg !11390
  %9 = zext i8 %8 to i32, !dbg !11390
  %10 = lshr i32 %0, %9, !dbg !11390
  call void @llvm.dbg.value(metadata i32 %10, metadata !11388, metadata !DIExpression()), !dbg !11389
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !11391
  %12 = icmp ult i32 %11, %10, !dbg !11393
  br i1 %12, label %13, label %16, !dbg !11394

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !11395
  call void @llvm.dbg.value(metadata i32 %14, metadata !11387, metadata !DIExpression()), !dbg !11389
  %15 = icmp eq i32 %14, 0, !dbg !11397
  br i1 %15, label %16, label %30, !dbg !11399

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.138() #24, !dbg !11400
  br label %17, !dbg !11402

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.139() #24, !dbg !11403
  %19 = icmp eq i32 %18, 1, !dbg !11404
  br i1 %19, label %20, label %17, !dbg !11402, !llvm.loop !11405

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !11407
  tail call fastcc void @LL_RCC_SetAHBPrescaler.140(i32 noundef %21) #24, !dbg !11408
  tail call fastcc void @LL_RCC_SetSysClkSource.141() #24, !dbg !11409
  br label %22, !dbg !11410

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.142() #24, !dbg !11411
  %24 = icmp eq i32 %23, 8, !dbg !11412
  br i1 %24, label %25, label %22, !dbg !11410, !llvm.loop !11413

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !11415
  %27 = load i32, i32* %26, align 4, !dbg !11415
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.143(i32 noundef %27) #24, !dbg !11416
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !11417
  %29 = load i32, i32* %28, align 4, !dbg !11417
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.144(i32 noundef %29) #24, !dbg !11418
  br label %30, !dbg !11419

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !11420
  %33 = icmp ugt i32 %32, %10, !dbg !11422
  br i1 %33, label %34, label %36, !dbg !11423

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !11424
  call void @llvm.dbg.value(metadata i32 %35, metadata !11387, metadata !DIExpression()), !dbg !11389
  br label %36, !dbg !11426

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !11389
  call void @llvm.dbg.value(metadata i32 %37, metadata !11387, metadata !DIExpression()), !dbg !11389
  %38 = icmp eq i32 %37, 0, !dbg !11427
  br i1 %38, label %39, label %40, !dbg !11429

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !11430
  br label %40, !dbg !11432

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !11433
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.138() unnamed_addr #14 !dbg !11434 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11435
  %2 = or i32 %1, 16777216, !dbg !11435
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11435
  ret void, !dbg !11436
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.139() unnamed_addr #15 !dbg !11437 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11438
  %2 = lshr i32 %1, 25, !dbg !11439
  %3 = and i32 %2, 1, !dbg !11439
  ret i32 %3, !dbg !11440
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.140(i32 noundef %0) unnamed_addr #14 !dbg !11441 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11443, metadata !DIExpression()), !dbg !11444
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11445
  %3 = and i32 %2, -241, !dbg !11445
  %4 = or i32 %3, %0, !dbg !11445
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11445
  ret void, !dbg !11446
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.141() unnamed_addr #14 !dbg !11447 {
  call void @llvm.dbg.value(metadata i32 2, metadata !11449, metadata !DIExpression()), !dbg !11450
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11451
  %2 = and i32 %1, -4, !dbg !11451
  %3 = or i32 %2, 2, !dbg !11451
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11451
  ret void, !dbg !11452
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.142() unnamed_addr #15 !dbg !11453 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11454
  %2 = and i32 %1, 12, !dbg !11454
  ret i32 %2, !dbg !11455
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.143(i32 noundef %0) unnamed_addr #14 !dbg !11456 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11458, metadata !DIExpression()), !dbg !11459
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11460
  %3 = and i32 %2, -7169, !dbg !11460
  %4 = or i32 %3, %0, !dbg !11460
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11460
  ret void, !dbg !11461
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.144(i32 noundef %0) unnamed_addr #14 !dbg !11462 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11464, metadata !DIExpression()), !dbg !11465
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11466
  %3 = and i32 %2, -57345, !dbg !11466
  %4 = or i32 %3, %0, !dbg !11466
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11466
  ret void, !dbg !11467
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #15 !dbg !11468 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11469
  %2 = lshr i32 %1, 27, !dbg !11470
  %3 = and i32 %2, 1, !dbg !11470
  ret i32 %3, !dbg !11471
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #14 !dbg !11472 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11476, metadata !DIExpression()), !dbg !11482
  call void @llvm.dbg.value(metadata i32 %1, metadata !11477, metadata !DIExpression()), !dbg !11482
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !11478, metadata !DIExpression()), !dbg !11482
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !11479, metadata !DIExpression()), !dbg !11482
  call void @llvm.dbg.value(metadata i32 0, metadata !11480, metadata !DIExpression()), !dbg !11482
  call void @llvm.dbg.value(metadata i32 0, metadata !11481, metadata !DIExpression()), !dbg !11482
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !11483
  %6 = icmp eq i32 %5, 0, !dbg !11485
  br i1 %6, label %7, label %27, !dbg !11486

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #24, !dbg !11487
  call void @llvm.dbg.value(metadata i32 %8, metadata !11481, metadata !DIExpression()), !dbg !11482
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.145() #24, !dbg !11489
  %10 = icmp eq i32 %9, 1, !dbg !11491
  br i1 %10, label %19, label %11, !dbg !11492

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !11493
  br i1 %12, label %13, label %14, !dbg !11496

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !11497
  br label %15, !dbg !11499

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.146() #24, !dbg !11500
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.147() #24, !dbg !11502
  br label %16, !dbg !11503

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.145() #24, !dbg !11504
  %18 = icmp eq i32 %17, 1, !dbg !11505
  br i1 %18, label %19, label %16, !dbg !11503, !llvm.loop !11506

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !11508
  %21 = load i32, i32* %20, align 4, !dbg !11508
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !11509
  %23 = load i32, i32* %22, align 4, !dbg !11509
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !11510
  %25 = load i32, i32* %24, align 4, !dbg !11510
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.137(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !11511
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #24, !dbg !11512
  call void @llvm.dbg.value(metadata i32 %26, metadata !11480, metadata !DIExpression()), !dbg !11482
  br label %27, !dbg !11513

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !11514
  call void @llvm.dbg.value(metadata i32 %28, metadata !11480, metadata !DIExpression()), !dbg !11482
  ret i32 %28, !dbg !11515
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.145() unnamed_addr #15 !dbg !11516 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11517
  %2 = lshr i32 %1, 17, !dbg !11518
  %3 = and i32 %2, 1, !dbg !11518
  ret i32 %3, !dbg !11519
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #14 !dbg !11520 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11521
  %2 = or i32 %1, 262144, !dbg !11521
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11521
  ret void, !dbg !11522
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.146() unnamed_addr #14 !dbg !11523 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11524
  %2 = and i32 %1, -262145, !dbg !11524
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11524
  ret void, !dbg !11525
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.147() unnamed_addr #14 !dbg !11526 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11527
  %2 = or i32 %1, 65536, !dbg !11527
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11527
  ret void, !dbg !11528
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !11529 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11532, metadata !DIExpression()), !dbg !11548
  call void @llvm.dbg.value(metadata i32 undef, metadata !11532, metadata !DIExpression()), !dbg !11548
  call void @llvm.dbg.value(metadata i32 undef, metadata !11532, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !11548
  ret void, !dbg !11549
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !11550 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11554, metadata !DIExpression()), !dbg !11556
  %2 = icmp eq i8* %0, null, !dbg !11557
  br i1 %2, label %29, label %3, !dbg !11559

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !11560
  %5 = icmp eq i8 %4, 0, !dbg !11561
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !11562
  br i1 %6, label %29, label %8, !dbg !11562

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11555, metadata !DIExpression()), !dbg !11556
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !11563

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !11555, metadata !DIExpression()), !dbg !11556
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !11565
  br i1 %10, label %11, label %15, !dbg !11570

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !11571
  %13 = load i8*, i8** %12, align 4, !dbg !11571
  %14 = icmp eq i8* %13, %0, !dbg !11572
  br i1 %14, label %29, label %15, !dbg !11573

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !11574
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !11555, metadata !DIExpression()), !dbg !11556
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11575
  br i1 %17, label %7, label %8, !dbg !11576, !llvm.loop !11577

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !11555, metadata !DIExpression()), !dbg !11556
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !11579
  br i1 %20, label %21, label %26, !dbg !11583

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !11584
  %23 = load i8*, i8** %22, align 4, !dbg !11584
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #26, !dbg !11585
  %25 = icmp eq i32 %24, 0, !dbg !11586
  br i1 %25, label %29, label %26, !dbg !11587

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !11588
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !11555, metadata !DIExpression()), !dbg !11556
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11589
  br i1 %28, label %29, label %18, !dbg !11563, !llvm.loop !11590

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !11556
  ret %struct.device* %30, !dbg !11592
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !11593 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11597, metadata !DIExpression()), !dbg !11598
  %2 = icmp eq %struct.device* %0, null, !dbg !11599
  br i1 %2, label %14, label %3, !dbg !11601

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !11602
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !11602
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !11603
  %7 = load i8, i8* %6, align 1, !dbg !11603
  %8 = and i8 %7, 1, !dbg !11603
  %9 = icmp eq i8 %8, 0, !dbg !11603
  br i1 %9, label %14, label %10, !dbg !11604

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !11605
  %12 = load i8, i8* %11, align 1, !dbg !11605
  %13 = icmp eq i8 %12, 0, !dbg !11606
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !11598
  ret i1 %15, !dbg !11607
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !11608 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !11613, metadata !DIExpression()), !dbg !11614
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !11615
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !11616
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11617 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11625, metadata !DIExpression()), !dbg !11630
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11626, metadata !DIExpression()), !dbg !11630
  call void @llvm.dbg.value(metadata i8* %2, metadata !11627, metadata !DIExpression()), !dbg !11630
  %5 = bitcast i32* %4 to i8*, !dbg !11631
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11631
  call void @llvm.dbg.value(metadata i32 0, metadata !11628, metadata !DIExpression()), !dbg !11630
  store i32 0, i32* %4, align 4, !dbg !11632
  call void @llvm.dbg.value(metadata i32* %4, metadata !11628, metadata !DIExpression(DW_OP_deref)), !dbg !11630
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !11633
  call void @llvm.dbg.value(metadata i16* %6, metadata !11629, metadata !DIExpression()), !dbg !11630
  %7 = load i32, i32* %4, align 4, !dbg !11634
  call void @llvm.dbg.value(metadata i32 %7, metadata !11628, metadata !DIExpression()), !dbg !11630
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !11635
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11636
  ret i32 %8, !dbg !11637
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #12 !dbg !11638 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11642, metadata !DIExpression()), !dbg !11648
  call void @llvm.dbg.value(metadata i32* %1, metadata !11643, metadata !DIExpression()), !dbg !11648
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11649
  %4 = load i16*, i16** %3, align 4, !dbg !11649
  call void @llvm.dbg.value(metadata i16* %4, metadata !11644, metadata !DIExpression()), !dbg !11648
  %5 = icmp eq i16* %4, null, !dbg !11650
  br i1 %5, label %14, label %6, !dbg !11651

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !11652
  call void @llvm.dbg.value(metadata i32 %7, metadata !11645, metadata !DIExpression()), !dbg !11652
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !11653
  %9 = load i16, i16* %8, align 2, !dbg !11653
  %10 = add i16 %9, -32767, !dbg !11654
  %11 = icmp ult i16 %10, 2, !dbg !11654
  %12 = add i32 %7, 1, !dbg !11655
  call void @llvm.dbg.value(metadata i32 %12, metadata !11645, metadata !DIExpression()), !dbg !11652
  br i1 %11, label %13, label %6, !dbg !11654, !llvm.loop !11657

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !11660
  br label %14, !dbg !11661

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !11662
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !11663 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !11667, metadata !DIExpression()), !dbg !11678
  call void @llvm.dbg.value(metadata i32 %1, metadata !11668, metadata !DIExpression()), !dbg !11678
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !11669, metadata !DIExpression()), !dbg !11678
  call void @llvm.dbg.value(metadata i8* %3, metadata !11670, metadata !DIExpression()), !dbg !11678
  call void @llvm.dbg.value(metadata i32 0, metadata !11671, metadata !DIExpression()), !dbg !11679
  %5 = icmp eq i32 %1, 0, !dbg !11680
  br i1 %5, label %16, label %8, !dbg !11681

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !11671, metadata !DIExpression()), !dbg !11679
  %7 = icmp eq i32 %15, %1, !dbg !11680
  br i1 %7, label %16, label %8, !dbg !11681, !llvm.loop !11682

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11671, metadata !DIExpression()), !dbg !11679
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !11684
  %11 = load i16, i16* %10, align 2, !dbg !11684
  call void @llvm.dbg.value(metadata i16 %11, metadata !11673, metadata !DIExpression()), !dbg !11685
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !11686
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !11676, metadata !DIExpression()), !dbg !11685
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #26, !dbg !11687
  call void @llvm.dbg.value(metadata i32 %13, metadata !11677, metadata !DIExpression()), !dbg !11685
  %14 = icmp slt i32 %13, 0, !dbg !11688
  %15 = add nuw i32 %9, 1, !dbg !11690
  call void @llvm.dbg.value(metadata i32 %15, metadata !11671, metadata !DIExpression()), !dbg !11679
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !11691
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !11692 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !11696, metadata !DIExpression()), !dbg !11699
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !11697, metadata !DIExpression()), !dbg !11699
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !11698, metadata !DIExpression()), !dbg !11699
  %2 = sext i16 %0 to i32, !dbg !11700
  %3 = icmp slt i16 %0, 1, !dbg !11702
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !11703
  %6 = add nsw i32 %2, -1, !dbg !11703
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !11703
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !11703
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11697, metadata !DIExpression()), !dbg !11699
  ret %struct.device* %8, !dbg !11704
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11705 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11707, metadata !DIExpression()), !dbg !11712
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11708, metadata !DIExpression()), !dbg !11712
  call void @llvm.dbg.value(metadata i8* %2, metadata !11709, metadata !DIExpression()), !dbg !11712
  %5 = bitcast i32* %4 to i8*, !dbg !11713
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11713
  call void @llvm.dbg.value(metadata i32 0, metadata !11710, metadata !DIExpression()), !dbg !11712
  store i32 0, i32* %4, align 4, !dbg !11714
  call void @llvm.dbg.value(metadata i32* %4, metadata !11710, metadata !DIExpression(DW_OP_deref)), !dbg !11712
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !11715
  call void @llvm.dbg.value(metadata i16* %6, metadata !11711, metadata !DIExpression()), !dbg !11712
  %7 = load i32, i32* %4, align 4, !dbg !11716
  call void @llvm.dbg.value(metadata i32 %7, metadata !11710, metadata !DIExpression()), !dbg !11712
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !11717
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11718
  ret i32 %8, !dbg !11719
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #12 !dbg !11720 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11722, metadata !DIExpression()), !dbg !11727
  call void @llvm.dbg.value(metadata i32* %1, metadata !11723, metadata !DIExpression()), !dbg !11727
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11728
  %4 = load i16*, i16** %3, align 4, !dbg !11728
  call void @llvm.dbg.value(metadata i16* %4, metadata !11724, metadata !DIExpression()), !dbg !11727
  call void @llvm.dbg.value(metadata i32 0, metadata !11725, metadata !DIExpression()), !dbg !11727
  call void @llvm.dbg.value(metadata i32 0, metadata !11726, metadata !DIExpression()), !dbg !11727
  %5 = icmp eq i16* %4, null, !dbg !11729
  br i1 %5, label %22, label %6, !dbg !11731

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !11725, metadata !DIExpression()), !dbg !11727
  call void @llvm.dbg.value(metadata i16* %8, metadata !11724, metadata !DIExpression()), !dbg !11727
  %9 = load i16, i16* %8, align 2, !dbg !11732
  %10 = icmp eq i16 %9, -32768, !dbg !11736
  call void @llvm.dbg.value(metadata i32 undef, metadata !11725, metadata !DIExpression()), !dbg !11727
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !11737
  call void @llvm.dbg.value(metadata i16* %11, metadata !11724, metadata !DIExpression()), !dbg !11727
  %12 = zext i1 %10 to i32, !dbg !11738
  %13 = add i32 %7, %12, !dbg !11738
  call void @llvm.dbg.value(metadata i32 %13, metadata !11725, metadata !DIExpression()), !dbg !11727
  %14 = icmp eq i32 %13, 2, !dbg !11739
  br i1 %14, label %15, label %6, !dbg !11740

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !11727
  call void @llvm.dbg.value(metadata i32 %16, metadata !11726, metadata !DIExpression()), !dbg !11727
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !11741
  %18 = load i16, i16* %17, align 2, !dbg !11741
  %19 = icmp eq i16 %18, 32767, !dbg !11742
  %20 = add i32 %16, 1, !dbg !11743
  call void @llvm.dbg.value(metadata i32 %20, metadata !11726, metadata !DIExpression()), !dbg !11727
  br i1 %19, label %21, label %15, !dbg !11745, !llvm.loop !11746

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !11748
  br label %22, !dbg !11749

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !11750
  call void @llvm.dbg.value(metadata i16* %23, metadata !11724, metadata !DIExpression()), !dbg !11727
  ret i16* %23, !dbg !11751
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !11752 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11755
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 7, !dbg !11756
  ret i32* %2, !dbg !11757
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !11758 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !11917, metadata !DIExpression()), !dbg !11920
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !11918, metadata !DIExpression()), !dbg !11920
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11919, metadata !DIExpression()), !dbg !11920
  ret void, !dbg !11921
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !11922 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11926, metadata !DIExpression()), !dbg !11928
  call void @llvm.dbg.value(metadata i32 %1, metadata !11927, metadata !DIExpression()), !dbg !11928
  ret void, !dbg !11929
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !11930 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11934, metadata !DIExpression()), !dbg !11936
  call void @llvm.dbg.value(metadata i32 %1, metadata !11935, metadata !DIExpression()), !dbg !11936
  ret void, !dbg !11937
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !11938 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11942, metadata !DIExpression()), !dbg !11944
  call void @llvm.dbg.value(metadata i8* %1, metadata !11943, metadata !DIExpression()), !dbg !11944
  ret i32 -134, !dbg !11945
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !11946 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11950, metadata !DIExpression()), !dbg !11952
  call void @llvm.dbg.value(metadata i8* %1, metadata !11951, metadata !DIExpression()), !dbg !11952
  ret i32 -134, !dbg !11953
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !11954 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11957, metadata !DIExpression()), !dbg !11958
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11959, !srcloc !11965
  call void @llvm.dbg.value(metadata i32 undef, metadata !11962, metadata !DIExpression()) #23, !dbg !11966
  call void @llvm.dbg.value(metadata i32 undef, metadata !11963, metadata !DIExpression()) #23, !dbg !11966
  br label %3, !dbg !11967

3:                                                ; preds = %3, %1
  br label %3, !dbg !11968, !llvm.loop !11971
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !11974 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11978, metadata !DIExpression()), !dbg !11980
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11979, metadata !DIExpression()), !dbg !11980
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !11981
  unreachable, !dbg !11981
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !11982 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11984, metadata !DIExpression()), !dbg !11985
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !11986
  unreachable, !dbg !11986
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !11987 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11989, metadata !DIExpression()), !dbg !11993
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11990, metadata !DIExpression()), !dbg !11993
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11994, !srcloc !11965
  call void @llvm.dbg.value(metadata i32 undef, metadata !11962, metadata !DIExpression()) #23, !dbg !11996
  call void @llvm.dbg.value(metadata i32 undef, metadata !11963, metadata !DIExpression()) #23, !dbg !11996
  call void @llvm.dbg.value(metadata i32 undef, metadata !11991, metadata !DIExpression()), !dbg !11993
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11992, metadata !DIExpression()), !dbg !11993
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) #24, !dbg !11997
  %4 = icmp eq i32 %0, 4, !dbg !11998
  br i1 %4, label %5, label %6, !dbg !12003

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.156, i32 0, i32 0), i32 noundef 148) #26, !dbg !12004
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.3.157, i32 0, i32 0)) #26, !dbg !12004
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.156, i32 0, i32 0), i32 noundef 148) #26, !dbg !12004
  unreachable, !dbg !12004

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !11994
  call void @llvm.dbg.value(metadata i32 %7, metadata !11962, metadata !DIExpression()) #23, !dbg !11996
  call void @llvm.dbg.value(metadata i32 %7, metadata !11991, metadata !DIExpression()), !dbg !11993
  %8 = tail call fastcc %struct.k_thread* @k_current_get.158() #25, !dbg !12006
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !11992, metadata !DIExpression()), !dbg !11993
  call void @llvm.dbg.value(metadata i32 undef, metadata !12007, metadata !DIExpression()) #23, !dbg !12010
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !12012, !srcloc !12013
  tail call fastcc void @k_thread_abort.159(%struct.k_thread* noundef %8) #24, !dbg !12014
  ret void, !dbg !12017
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.158() unnamed_addr #5 !dbg !12018 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.160() #25, !dbg !12022
  ret %struct.k_thread* %1, !dbg !12023
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.159(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12024 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12028, metadata !DIExpression()), !dbg !12029
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12030, !srcloc !12032
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !12033
  ret void, !dbg !12034
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.160() unnamed_addr #5 !dbg !12035 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12036, !srcloc !12038
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !12039
  ret %struct.k_thread* %1, !dbg !12040
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12041 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12045, metadata !DIExpression()), !dbg !12048
  call void @llvm.dbg.value(metadata i32 %1, metadata !12046, metadata !DIExpression()), !dbg !12048
  call void @llvm.dbg.value(metadata i32 %2, metadata !12047, metadata !DIExpression()), !dbg !12048
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #26, !dbg !12049
  ret void, !dbg !12050
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12051 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12055, metadata !DIExpression()), !dbg !12058
  call void @llvm.dbg.value(metadata i8* %1, metadata !12056, metadata !DIExpression()), !dbg !12058
  call void @llvm.dbg.value(metadata i32 %2, metadata !12057, metadata !DIExpression()), !dbg !12058
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #26, !dbg !12059
  ret void, !dbg !12060
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12061 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !12062
  ret void, !dbg !12063
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12064 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12066, metadata !DIExpression()), !dbg !12067
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !12068
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12069
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12070
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12071
  %4 = trunc i32 %0 to i8, !dbg !12072
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12073
  store i8 %4, i8* %5, align 4, !dbg !12074
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12075
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !12076
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12077
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12078
  store i8* %8, i8** %9, align 4, !dbg !12079
  ret void, !dbg !12080
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12081 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12083, metadata !DIExpression()), !dbg !12089
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12090
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12084, metadata !DIExpression()), !dbg !12089
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12091
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12085, metadata !DIExpression()), !dbg !12089
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.165, i32 0, i32 0), metadata !12088, metadata !DIExpression()), !dbg !12089
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12092
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12093
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 40, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.165, i32 0, i32 0)) #26, !dbg !12094
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !12095
  ret void, !dbg !12096
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !12097 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12101, metadata !DIExpression()), !dbg !12102
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12103
  ret i8* %2, !dbg !12104
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !12105 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12110, metadata !DIExpression()), !dbg !12111
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12112
  %3 = load i8, i8* %2, align 1, !dbg !12113
  %4 = and i8 %3, -5, !dbg !12113
  store i8 %4, i8* %2, align 1, !dbg !12113
  ret void, !dbg !12114
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !12115 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !12118
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #26, !dbg !12119
  %3 = ptrtoint i8* %2 to i32, !dbg !12128
  %4 = add i32 %3, 2048, !dbg !12129
  call void @llvm.dbg.value(metadata i32 %4, metadata !12123, metadata !DIExpression()) #23, !dbg !12130
  call void @llvm.dbg.value(metadata i32 %4, metadata !12131, metadata !DIExpression()) #23, !dbg !12134
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !12136, !srcloc !12137
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12138
  %6 = or i32 %5, 512, !dbg !12138
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12138
  tail call fastcc void @__NVIC_SetPriority.168(i32 noundef -2, i32 noundef 255) #26, !dbg !12139
  tail call fastcc void @__NVIC_SetPriority.168(i32 noundef -5, i32 noundef 0) #26, !dbg !12142
  tail call fastcc void @__NVIC_SetPriority.168(i32 noundef -12, i32 noundef 0) #26, !dbg !12143
  tail call fastcc void @__NVIC_SetPriority.168(i32 noundef -11, i32 noundef 0) #26, !dbg !12144
  tail call fastcc void @__NVIC_SetPriority.168(i32 noundef -10, i32 noundef 0) #26, !dbg !12145
  tail call fastcc void @__NVIC_SetPriority.168(i32 noundef -4, i32 noundef 0) #26, !dbg !12146
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12147
  %8 = or i32 %7, 458752, !dbg !12147
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12147
  tail call void @z_arm_fault_init() #26, !dbg !12148
  tail call void @z_arm_cpu_idle_init() #26, !dbg !12149
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12150
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12153
  %9 = tail call i32 @z_arm_mpu_init() #26, !dbg !12154
  tail call void @z_arm_configure_static_mpu_regions() #26, !dbg !12155
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12156
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %10) #23, !dbg !12156
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12117, metadata !DIExpression()), !dbg !12157
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !12158
  call void @z_device_state_init() #26, !dbg !12159
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !12160
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !12161
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !12162
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !12163
  unreachable, !dbg !12163
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2061 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2065, metadata !DIExpression()), !dbg !12164
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12165
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12165
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2066, metadata !DIExpression()), !dbg !12164
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2066, metadata !DIExpression()), !dbg !12164
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12166
  br i1 %7, label %8, label %35, !dbg !12167

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2066, metadata !DIExpression()), !dbg !12164
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12168
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12168
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2076, metadata !DIExpression()), !dbg !12169
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12170
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12170
  %14 = tail call i32 %13(%struct.device* noundef %11) #26, !dbg !12171
  call void @llvm.dbg.value(metadata i32 %14, metadata !2080, metadata !DIExpression()), !dbg !12169
  %15 = icmp eq %struct.device* %11, null, !dbg !12172
  br i1 %15, label %32, label %16, !dbg !12174

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12175
  br i1 %17, label %26, label %18, !dbg !12178

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12179
  call void @llvm.dbg.value(metadata i32 %19, metadata !2080, metadata !DIExpression()), !dbg !12169
  %20 = icmp ult i32 %19, 255, !dbg !12181
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12181
  call void @llvm.dbg.value(metadata i32 %21, metadata !2080, metadata !DIExpression()), !dbg !12169
  %22 = trunc i32 %21 to i8, !dbg !12182
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12183
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12183
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12184
  store i8 %22, i8* %25, align 1, !dbg !12185
  br label %26, !dbg !12186

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12187
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12187
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12188
  %30 = load i8, i8* %29, align 1, !dbg !12189
  %31 = or i8 %30, 1, !dbg !12189
  store i8 %31, i8* %29, align 1, !dbg !12189
  br label %32, !dbg !12190

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12191
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2066, metadata !DIExpression()), !dbg !12164
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12166
  br i1 %34, label %8, label %35, !dbg !12167, !llvm.loop !12192

35:                                               ; preds = %32, %1
  ret void, !dbg !12194
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.168(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !12195 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12197, metadata !DIExpression()), !dbg !12199
  call void @llvm.dbg.value(metadata i32 %1, metadata !12198, metadata !DIExpression()), !dbg !12199
  %3 = trunc i32 %1 to i8, !dbg !12200
  %4 = shl i8 %3, 4, !dbg !12200
  %5 = and i32 %0, 15, !dbg !12203
  %6 = add nsw i32 %5, -4, !dbg !12204
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12205
  store volatile i8 %4, i8* %7, align 1, !dbg !12206
  ret void, !dbg !12207
}

; Function Attrs: optsize
declare !dbg !12208 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !12209 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12212, metadata !DIExpression()), !dbg !12213
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12214
  store i8 1, i8* %2, align 1, !dbg !12215
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12216
  store i8 1, i8* %3, align 4, !dbg !12217
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !12218
  store i32 0, i32* %4, align 8, !dbg !12219
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 1, !dbg !12220
  store i32 0, i32* %5, align 4, !dbg !12221
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 9, !dbg !12222
  store %struct.k_heap* null, %struct.k_heap** %6, align 4, !dbg !12223
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12224
  ret void, !dbg !12225
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12226 {
  tail call void @z_sched_init() #26, !dbg !12231
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12232
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.169, i32 0, i32 0)) #26, !dbg !12233
  call void @llvm.dbg.value(metadata i8* %1, metadata !12230, metadata !DIExpression()), !dbg !12234
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !12235
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !12236
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !12237
  ret i8* %1, !dbg !12238
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !12239 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12243, metadata !DIExpression()), !dbg !12244
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #26, !dbg !12245
  unreachable, !dbg !12246
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12247 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12249, metadata !DIExpression()), !dbg !12252
  call void @llvm.dbg.value(metadata i8* %1, metadata !12250, metadata !DIExpression()), !dbg !12252
  call void @llvm.dbg.value(metadata i8* %2, metadata !12251, metadata !DIExpression()), !dbg !12252
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12253
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !12254
  tail call void @boot_banner() #26, !dbg !12255
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !12256
  tail call void @z_init_static_threads() #26, !dbg !12257
  tail call void @main() #26, !dbg !12258
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12259
  %5 = and i8 %4, -2, !dbg !12259
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12259
  ret void, !dbg !12260
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !12261 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12271, metadata !DIExpression()), !dbg !12279
  call void @llvm.dbg.value(metadata i8* %1, metadata !12272, metadata !DIExpression()), !dbg !12279
  %3 = icmp eq void (%struct.k_thread*, i8*)* %0, null, !dbg !12280
  br i1 %3, label %4, label %5, !dbg !12283

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.170, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1.171, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.172, i32 0, i32 0), i32 noundef 51) #26, !dbg !12284
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3.173, i32 0, i32 0)) #26, !dbg !12284
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.172, i32 0, i32 0), i32 noundef 51) #26, !dbg !12284
  unreachable, !dbg !12284

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12286, metadata !DIExpression()) #23, !dbg !12293
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12295, !srcloc !12301
  call void @llvm.dbg.value(metadata i32 undef, metadata !12298, metadata !DIExpression()) #23, !dbg !12302
  call void @llvm.dbg.value(metadata i32 undef, metadata !12299, metadata !DIExpression()) #23, !dbg !12302
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !12293
  %7 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12303
  br i1 %7, label %9, label %8, !dbg !12306

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.170, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #26, !dbg !12307
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12307
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #26, !dbg !12307
  unreachable, !dbg !12307

9:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !12298, metadata !DIExpression()) #23, !dbg !12302
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !12293
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12309
  call void @llvm.dbg.value(metadata i32 undef, metadata !12274, metadata !DIExpression()), !dbg !12279
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12273, metadata !DIExpression()), !dbg !12279
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2), align 4, !dbg !12310
  call void @llvm.dbg.value(metadata %struct.k_thread* %10, metadata !12273, metadata !DIExpression()), !dbg !12279
  %11 = icmp eq %struct.k_thread* %10, null, !dbg !12312
  br i1 %11, label %17, label %12, !dbg !12312

12:                                               ; preds = %9, %12
  %13 = phi %struct.k_thread* [ %15, %12 ], [ %10, %9 ]
  tail call void %0(%struct.k_thread* noundef nonnull %13, i8* noundef %1) #26, !dbg !12313
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 5, !dbg !12316
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12273, metadata !DIExpression()), !dbg !12279
  %15 = load %struct.k_thread*, %struct.k_thread** %14, align 4, !dbg !12310
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !12273, metadata !DIExpression()), !dbg !12279
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !12312
  br i1 %16, label %17, label %12, !dbg !12312, !llvm.loop !12317

17:                                               ; preds = %12, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !12319, metadata !DIExpression()) #23, !dbg !12325
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12324, metadata !DIExpression()) #23, !dbg !12325
  %18 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12327
  br i1 %18, label %20, label %19, !dbg !12330

19:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.170, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #26, !dbg !12331
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12331
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #26, !dbg !12331
  unreachable, !dbg !12331

20:                                               ; preds = %17
  %21 = extractvalue { i32, i32 } %6, 0, !dbg !12295
  call void @llvm.dbg.value(metadata i32 %21, metadata !12298, metadata !DIExpression()) #23, !dbg !12302
  call void @llvm.dbg.value(metadata i32 %21, metadata !12292, metadata !DIExpression()) #23, !dbg !12293
  call void @llvm.dbg.value(metadata i32 %21, metadata !12274, metadata !DIExpression()), !dbg !12279
  call void @llvm.dbg.value(metadata i32 undef, metadata !12319, metadata !DIExpression()) #23, !dbg !12325
  call void @llvm.dbg.value(metadata i32 undef, metadata !12333, metadata !DIExpression()) #23, !dbg !12336
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #23, !dbg !12338, !srcloc !12339
  ret void, !dbg !12340
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !12341 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12345, metadata !DIExpression()), !dbg !12347
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !12348
  %3 = load i32, i32* %2, align 4, !dbg !12348
  call void @llvm.dbg.value(metadata i32 %3, metadata !12346, metadata !DIExpression()), !dbg !12347
  %4 = icmp eq i32 %3, 0, !dbg !12349
  br i1 %4, label %10, label %5, !dbg !12351

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !12352
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !12355
  %8 = zext i8 %7 to i32, !dbg !12356
  %9 = icmp eq i32 %6, %8, !dbg !12357
  br i1 %9, label %11, label %10, !dbg !12358

10:                                               ; preds = %5, %1
  br label %11, !dbg !12359

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !12347
  ret i1 %12, !dbg !12360
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #10 !dbg !12361 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12365, metadata !DIExpression()), !dbg !12366
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !12367
  %3 = zext i8 %2 to i32, !dbg !12368
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12369
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !12370
  %6 = or i32 %5, %3, !dbg !12371
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !12372
  store i32 %6, i32* %7, align 4, !dbg !12373
  ret void, !dbg !12374
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #10 !dbg !12375 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12377, metadata !DIExpression()), !dbg !12378
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !12379
  %3 = load i32, i32* %2, align 4, !dbg !12379
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !12381
  %5 = zext i8 %4 to i32, !dbg !12382
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12383
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !12384
  %8 = or i32 %7, %5, !dbg !12385
  %9 = icmp eq i32 %3, %8, !dbg !12386
  br i1 %9, label %10, label %11, !dbg !12387

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !12388
  br label %11, !dbg !12389

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !12390
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !12391 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12393, metadata !DIExpression()), !dbg !12397
  call void @llvm.dbg.value(metadata i8* %1, metadata !12394, metadata !DIExpression()), !dbg !12397
  %3 = icmp eq void (%struct.k_thread*, i8*)* %0, null, !dbg !12398
  br i1 %3, label %4, label %5, !dbg !12401

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.170, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1.171, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.172, i32 0, i32 0), i32 noundef 79) #26, !dbg !12402
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3.173, i32 0, i32 0)) #26, !dbg !12402
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.172, i32 0, i32 0), i32 noundef 79) #26, !dbg !12402
  unreachable, !dbg !12402

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12286, metadata !DIExpression()) #23, !dbg !12404
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12406, !srcloc !12301
  call void @llvm.dbg.value(metadata i32 undef, metadata !12298, metadata !DIExpression()) #23, !dbg !12408
  call void @llvm.dbg.value(metadata i32 undef, metadata !12299, metadata !DIExpression()) #23, !dbg !12408
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !12404
  %7 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12409
  br i1 %7, label %9, label %8, !dbg !12410

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.170, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #26, !dbg !12411
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12411
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #26, !dbg !12411
  unreachable, !dbg !12411

9:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !12298, metadata !DIExpression()) #23, !dbg !12408
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !12404
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12412
  call void @llvm.dbg.value(metadata i32 undef, metadata !12396, metadata !DIExpression()), !dbg !12397
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12395, metadata !DIExpression()), !dbg !12397
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2), align 4, !dbg !12413
  call void @llvm.dbg.value(metadata %struct.k_thread* %10, metadata !12395, metadata !DIExpression()), !dbg !12397
  call void @llvm.dbg.value(metadata i32 undef, metadata !12396, metadata !DIExpression()), !dbg !12397
  %11 = icmp eq %struct.k_thread* %10, null, !dbg !12415
  br i1 %11, label %26, label %12, !dbg !12415

12:                                               ; preds = %9, %22
  %13 = phi %struct.k_thread* [ %24, %22 ], [ %10, %9 ]
  %14 = phi { i32, i32 } [ %19, %22 ], [ %6, %9 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !12319, metadata !DIExpression()) #23, !dbg !12416
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12324, metadata !DIExpression()) #23, !dbg !12416
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12420
  br i1 %15, label %17, label %16, !dbg !12421

16:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.170, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #26, !dbg !12422
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12422
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #26, !dbg !12422
  unreachable, !dbg !12422

17:                                               ; preds = %12
  %18 = extractvalue { i32, i32 } %14, 0, !dbg !12397
  call void @llvm.dbg.value(metadata i32 %18, metadata !12319, metadata !DIExpression()) #23, !dbg !12416
  call void @llvm.dbg.value(metadata i32 %18, metadata !12333, metadata !DIExpression()) #23, !dbg !12423
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !12425, !srcloc !12339
  tail call void %0(%struct.k_thread* noundef nonnull %13, i8* noundef %1) #26, !dbg !12426
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12286, metadata !DIExpression()) #23, !dbg !12427
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12429, !srcloc !12301
  call void @llvm.dbg.value(metadata i32 undef, metadata !12298, metadata !DIExpression()) #23, !dbg !12431
  call void @llvm.dbg.value(metadata i32 undef, metadata !12299, metadata !DIExpression()) #23, !dbg !12431
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !12427
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12432
  br i1 %20, label %22, label %21, !dbg !12433

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.170, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #26, !dbg !12434
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12434
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #26, !dbg !12434
  unreachable, !dbg !12434

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !12298, metadata !DIExpression()) #23, !dbg !12431
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !12427
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12435
  call void @llvm.dbg.value(metadata i32 undef, metadata !12396, metadata !DIExpression()), !dbg !12397
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 5, !dbg !12436
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12395, metadata !DIExpression()), !dbg !12397
  %24 = load %struct.k_thread*, %struct.k_thread** %23, align 4, !dbg !12413
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !12395, metadata !DIExpression()), !dbg !12397
  call void @llvm.dbg.value(metadata i32 undef, metadata !12396, metadata !DIExpression()), !dbg !12397
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !12415
  br i1 %25, label %26, label %12, !dbg !12415, !llvm.loop !12437

26:                                               ; preds = %22, %9
  %27 = phi { i32, i32 } [ %6, %9 ], [ %19, %22 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !12319, metadata !DIExpression()) #23, !dbg !12439
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12324, metadata !DIExpression()) #23, !dbg !12439
  %28 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12441
  br i1 %28, label %30, label %29, !dbg !12442

29:                                               ; preds = %26
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.170, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #26, !dbg !12443
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12443
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #26, !dbg !12443
  unreachable, !dbg !12443

30:                                               ; preds = %26
  %31 = extractvalue { i32, i32 } %27, 0, !dbg !12397
  call void @llvm.dbg.value(metadata i32 %31, metadata !12319, metadata !DIExpression()) #23, !dbg !12439
  call void @llvm.dbg.value(metadata i32 %31, metadata !12333, metadata !DIExpression()) #23, !dbg !12444
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %31) #23, !dbg !12446, !srcloc !12339
  ret void, !dbg !12447
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !12448 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !12449, !srcloc !12456
  call void @llvm.dbg.value(metadata i32 %1, metadata !12452, metadata !DIExpression()) #23, !dbg !12457
  %2 = icmp ne i32 %1, 0, !dbg !12458
  ret i1 %2, !dbg !12459
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #10 !dbg !12460 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12461
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12462
  %3 = load i8, i8* %2, align 4, !dbg !12463
  %4 = or i8 %3, 1, !dbg !12463
  store i8 %4, i8* %2, align 4, !dbg !12463
  ret void, !dbg !12464
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #10 !dbg !12465 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12466
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12467
  %3 = load i8, i8* %2, align 4, !dbg !12468
  %4 = and i8 %3, -2, !dbg !12468
  store i8 %4, i8* %2, align 4, !dbg !12468
  ret void, !dbg !12469
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !12470 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12471
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12472
  %3 = load i8, i8* %2, align 4, !dbg !12472
  %4 = and i8 %3, 1, !dbg !12473
  %5 = icmp ne i8 %4, 0, !dbg !12474
  ret i1 %5, !dbg !12475
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_monitor_exit(%struct.k_thread* noundef readonly %0) local_unnamed_addr #1 !dbg !12476 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12480, metadata !DIExpression()), !dbg !12485
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12286, metadata !DIExpression()) #23, !dbg !12486
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12488, !srcloc !12301
  call void @llvm.dbg.value(metadata i32 undef, metadata !12298, metadata !DIExpression()) #23, !dbg !12490
  call void @llvm.dbg.value(metadata i32 undef, metadata !12299, metadata !DIExpression()) #23, !dbg !12490
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !12486
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12491
  br i1 %3, label %5, label %4, !dbg !12492

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.170, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #26, !dbg !12493
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12493
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #26, !dbg !12493
  unreachable, !dbg !12493

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12298, metadata !DIExpression()) #23, !dbg !12490
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !12486
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12494
  call void @llvm.dbg.value(metadata i32 undef, metadata !12481, metadata !DIExpression()), !dbg !12485
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2), align 4, !dbg !12495
  %7 = icmp eq %struct.k_thread* %6, %0, !dbg !12496
  br i1 %7, label %8, label %11, !dbg !12497

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, !dbg !12498
  %10 = load %struct.k_thread*, %struct.k_thread** %9, align 8, !dbg !12498
  store %struct.k_thread* %10, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2), align 4, !dbg !12500
  br label %22, !dbg !12501

11:                                               ; preds = %5, %14
  %12 = phi %struct.k_thread* [ %16, %14 ], [ %6, %5 ], !dbg !12502
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !12482, metadata !DIExpression()), !dbg !12502
  %13 = icmp eq %struct.k_thread* %12, null, !dbg !12503
  br i1 %13, label %22, label %14, !dbg !12504

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %12, i32 0, i32 5, !dbg !12505
  %16 = load %struct.k_thread*, %struct.k_thread** %15, align 8, !dbg !12505
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !12506
  br i1 %17, label %18, label %11, !dbg !12507, !llvm.loop !12508

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %12, i32 0, i32 5, !dbg !12505
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, !dbg !12510
  %21 = load %struct.k_thread*, %struct.k_thread** %20, align 8, !dbg !12510
  store %struct.k_thread* %21, %struct.k_thread** %19, align 8, !dbg !12513
  br label %22, !dbg !12514

22:                                               ; preds = %11, %18, %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !12319, metadata !DIExpression()) #23, !dbg !12515
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12324, metadata !DIExpression()) #23, !dbg !12515
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12517
  br i1 %23, label %25, label %24, !dbg !12518

24:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.170, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #26, !dbg !12519
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12519
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #26, !dbg !12519
  unreachable, !dbg !12519

25:                                               ; preds = %22
  %26 = extractvalue { i32, i32 } %2, 0, !dbg !12488
  call void @llvm.dbg.value(metadata i32 %26, metadata !12298, metadata !DIExpression()) #23, !dbg !12490
  call void @llvm.dbg.value(metadata i32 %26, metadata !12292, metadata !DIExpression()) #23, !dbg !12486
  call void @llvm.dbg.value(metadata i32 %26, metadata !12481, metadata !DIExpression()), !dbg !12485
  call void @llvm.dbg.value(metadata i32 undef, metadata !12319, metadata !DIExpression()) #23, !dbg !12515
  call void @llvm.dbg.value(metadata i32 undef, metadata !12333, metadata !DIExpression()) #23, !dbg !12520
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !12522, !srcloc !12339
  ret void, !dbg !12523
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !12524 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12528, metadata !DIExpression()), !dbg !12530
  call void @llvm.dbg.value(metadata i8* %1, metadata !12529, metadata !DIExpression()), !dbg !12530
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !12531
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !12533
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12528, metadata !DIExpression()), !dbg !12530
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, i32 0, !dbg !12534
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #26, !dbg !12535
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, i32 31, !dbg !12536
  store i8 0, i8* %8, align 1, !dbg !12537
  ret i32 0, !dbg !12538
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #4 !dbg !12539 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12543, metadata !DIExpression()), !dbg !12544
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !12545
  ret i8* %2, !dbg !12546
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12547 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12551, metadata !DIExpression()), !dbg !12554
  call void @llvm.dbg.value(metadata i8* %1, metadata !12552, metadata !DIExpression()), !dbg !12554
  call void @llvm.dbg.value(metadata i32 %2, metadata !12553, metadata !DIExpression()), !dbg !12554
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !12555
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #26, !dbg !12556
  ret i32 0, !dbg !12557
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2107 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2210, metadata !DIExpression()), !dbg !12558
  call void @llvm.dbg.value(metadata i8* %1, metadata !2211, metadata !DIExpression()), !dbg !12558
  call void @llvm.dbg.value(metadata i32 %2, metadata !2212, metadata !DIExpression()), !dbg !12558
  call void @llvm.dbg.value(metadata i32 0, metadata !2213, metadata !DIExpression()), !dbg !12558
  call void @llvm.dbg.value(metadata i8 undef, metadata !2215, metadata !DIExpression()), !dbg !12558
  %4 = icmp eq i8* %1, null, !dbg !12559
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !12561
  br i1 %6, label %46, label %7, !dbg !12561

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12562
  %9 = load i8, i8* %8, align 1, !dbg !12562
  call void @llvm.dbg.value(metadata i8 %9, metadata !2215, metadata !DIExpression()), !dbg !12558
  %10 = add i32 %2, -1, !dbg !12563
  call void @llvm.dbg.value(metadata i32 %10, metadata !2212, metadata !DIExpression()), !dbg !12558
  call void @llvm.dbg.value(metadata i8 0, metadata !2216, metadata !DIExpression()), !dbg !12564
  call void @llvm.dbg.value(metadata i8 %9, metadata !2215, metadata !DIExpression()), !dbg !12558
  call void @llvm.dbg.value(metadata i32 0, metadata !2213, metadata !DIExpression()), !dbg !12558
  %11 = icmp eq i8 %9, 0, !dbg !12565
  br i1 %11, label %12, label %15, !dbg !12567

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !12568
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !12569
  store i8 0, i8* %14, align 1, !dbg !12570
  br label %46, !dbg !12571

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2216, metadata !DIExpression()), !dbg !12564
  call void @llvm.dbg.value(metadata i8 %17, metadata !2215, metadata !DIExpression()), !dbg !12558
  call void @llvm.dbg.value(metadata i32 %18, metadata !2213, metadata !DIExpression()), !dbg !12558
  %19 = zext i8 %17 to i32, !dbg !12572
  %20 = zext i8 %16 to i32, !dbg !12573
  %21 = shl nuw i32 1, %20, !dbg !12573
  call void @llvm.dbg.value(metadata i32 %21, metadata !2214, metadata !DIExpression()), !dbg !12558
  %22 = and i32 %21, %19, !dbg !12575
  %23 = icmp eq i32 %22, 0, !dbg !12577
  br i1 %23, label %42, label %24, !dbg !12578

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !12579
  %26 = sub i32 %10, %18, !dbg !12580
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !12581
  %28 = load i8*, i8** %27, align 4, !dbg !12581
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !12582
  %30 = load i32, i32* %29, align 4, !dbg !12582
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !12583
  %32 = add i32 %31, %18, !dbg !12584
  call void @llvm.dbg.value(metadata i32 %32, metadata !2213, metadata !DIExpression()), !dbg !12558
  %33 = trunc i32 %21 to i8, !dbg !12585
  %34 = xor i8 %33, -1, !dbg !12585
  %35 = and i8 %17, %34, !dbg !12585
  call void @llvm.dbg.value(metadata i8 %35, metadata !2215, metadata !DIExpression()), !dbg !12558
  %36 = icmp eq i8 %35, 0, !dbg !12586
  br i1 %36, label %12, label %37, !dbg !12588

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !12589
  %39 = sub i32 %10, %32, !dbg !12591
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.182, i32 0, i32 0), i32 noundef 1) #24, !dbg !12592
  %41 = add i32 %40, %32, !dbg !12593
  call void @llvm.dbg.value(metadata i32 %41, metadata !2213, metadata !DIExpression()), !dbg !12558
  br label %42, !dbg !12594

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !12558
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !12558
  call void @llvm.dbg.value(metadata i8 %44, metadata !2215, metadata !DIExpression()), !dbg !12558
  call void @llvm.dbg.value(metadata i32 %43, metadata !2213, metadata !DIExpression()), !dbg !12558
  %45 = add i8 %16, 1, !dbg !12595
  call void @llvm.dbg.value(metadata i8 %45, metadata !2216, metadata !DIExpression()), !dbg !12564
  br label %15, !dbg !12567

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10.183, i32 0, i32 0), %3 ], !dbg !12558
  ret i8* %47, !dbg !12596
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !12597 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12601, metadata !DIExpression()), !dbg !12606
  call void @llvm.dbg.value(metadata i32 %1, metadata !12602, metadata !DIExpression()), !dbg !12606
  call void @llvm.dbg.value(metadata i8* %2, metadata !12603, metadata !DIExpression()), !dbg !12606
  call void @llvm.dbg.value(metadata i32 %3, metadata !12604, metadata !DIExpression()), !dbg !12606
  %5 = icmp ult i32 %1, %3, !dbg !12607
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !12607
  call void @llvm.dbg.value(metadata i32 %6, metadata !12605, metadata !DIExpression()), !dbg !12606
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #26, !dbg !12608
  ret i32 %6, !dbg !12609
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12610 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12612, metadata !DIExpression()), !dbg !12613
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #26, !dbg !12614
  ret void, !dbg !12615
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !12616 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12625, metadata !DIExpression()), !dbg !12637
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12626, metadata !DIExpression()), !dbg !12637
  call void @llvm.dbg.value(metadata i32 %2, metadata !12627, metadata !DIExpression()), !dbg !12637
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12628, metadata !DIExpression()), !dbg !12637
  call void @llvm.dbg.value(metadata i8* %4, metadata !12629, metadata !DIExpression()), !dbg !12637
  call void @llvm.dbg.value(metadata i8* %5, metadata !12630, metadata !DIExpression()), !dbg !12637
  call void @llvm.dbg.value(metadata i8* %6, metadata !12631, metadata !DIExpression()), !dbg !12637
  call void @llvm.dbg.value(metadata i32 %7, metadata !12632, metadata !DIExpression()), !dbg !12637
  call void @llvm.dbg.value(metadata i32 %8, metadata !12633, metadata !DIExpression()), !dbg !12637
  call void @llvm.dbg.value(metadata i8* %9, metadata !12634, metadata !DIExpression()), !dbg !12637
  %11 = icmp eq i32 %7, 40, !dbg !12638
  br i1 %11, label %12, label %15, !dbg !12638

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !12638
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #24, !dbg !12638
  br i1 %14, label %19, label %18, !dbg !12638

15:                                               ; preds = %10
  %16 = add i32 %7, 29, !dbg !12638
  %17 = icmp ult i32 %16, 69, !dbg !12638
  br i1 %17, label %19, label %18, !dbg !12638

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.170, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.13.195, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.172, i32 0, i32 0), i32 noundef 536) #26, !dbg !12642
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14.196, i32 0, i32 0), i32 noundef %7, i32 noundef 39, i32 noundef -29) #26, !dbg !12642
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.172, i32 0, i32 0), i32 noundef 536) #26, !dbg !12642
  unreachable, !dbg !12642

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !12644
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %20) #24, !dbg !12645
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !12646
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !12647
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !12648
  call void @llvm.dbg.value(metadata i8* %22, metadata !12635, metadata !DIExpression()), !dbg !12637
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #26, !dbg !12649
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !12650
  store i8* null, i8** %23, align 4, !dbg !12651
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !12652
  store void (i8*, i8*, i8*)* %3, void (i8*, i8*, i8*)** %24, align 8, !dbg !12653
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 1, !dbg !12654
  store i8* %4, i8** %25, align 4, !dbg !12655
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 2, !dbg !12656
  store i8* %5, i8** %26, align 8, !dbg !12657
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 3, !dbg !12658
  store i8* %6, i8** %27, align 4, !dbg !12659
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12286, metadata !DIExpression()) #23, !dbg !12660
  %28 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12662, !srcloc !12301
  call void @llvm.dbg.value(metadata i32 undef, metadata !12298, metadata !DIExpression()) #23, !dbg !12664
  call void @llvm.dbg.value(metadata i32 undef, metadata !12299, metadata !DIExpression()) #23, !dbg !12664
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !12660
  %29 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12665
  br i1 %29, label %31, label %30, !dbg !12666

30:                                               ; preds = %19
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.170, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #26, !dbg !12667
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12667
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #26, !dbg !12667
  unreachable, !dbg !12667

31:                                               ; preds = %19
  call void @llvm.dbg.value(metadata i32 undef, metadata !12298, metadata !DIExpression()) #23, !dbg !12664
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !12660
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12668
  call void @llvm.dbg.value(metadata i32 undef, metadata !12636, metadata !DIExpression()), !dbg !12637
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2), align 4, !dbg !12669
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, !dbg !12670
  store %struct.k_thread* %32, %struct.k_thread** %33, align 8, !dbg !12671
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2), align 4, !dbg !12672
  call void @llvm.dbg.value(metadata i32 undef, metadata !12319, metadata !DIExpression()) #23, !dbg !12673
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12324, metadata !DIExpression()) #23, !dbg !12673
  %34 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12675
  br i1 %34, label %36, label %35, !dbg !12676

35:                                               ; preds = %31
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.170, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #26, !dbg !12677
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12677
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #26, !dbg !12677
  unreachable, !dbg !12677

36:                                               ; preds = %31
  %37 = extractvalue { i32, i32 } %28, 0, !dbg !12662
  call void @llvm.dbg.value(metadata i32 %37, metadata !12298, metadata !DIExpression()) #23, !dbg !12664
  call void @llvm.dbg.value(metadata i32 %37, metadata !12292, metadata !DIExpression()) #23, !dbg !12660
  call void @llvm.dbg.value(metadata i32 %37, metadata !12636, metadata !DIExpression()), !dbg !12637
  call void @llvm.dbg.value(metadata i32 undef, metadata !12319, metadata !DIExpression()) #23, !dbg !12673
  call void @llvm.dbg.value(metadata i32 undef, metadata !12333, metadata !DIExpression()) #23, !dbg !12678
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %37) #23, !dbg !12680, !srcloc !12339
  %38 = icmp eq i8* %9, null, !dbg !12681
  %39 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !12683
  br i1 %38, label %43, label %40, !dbg !12684

40:                                               ; preds = %36
  %41 = tail call i8* @strncpy(i8* noundef nonnull %39, i8* noundef nonnull %9, i32 noundef 31) #26, !dbg !12685
  %42 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 31, !dbg !12687
  store i8 0, i8* %42, align 1, !dbg !12688
  br label %44, !dbg !12689

43:                                               ; preds = %36
  store i8 0, i8* %39, align 4, !dbg !12690
  br label %44

44:                                               ; preds = %43, %40
  %45 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12692
  %46 = icmp eq %struct.k_thread* %45, null, !dbg !12692
  br i1 %46, label %50, label %47, !dbg !12694

47:                                               ; preds = %44
  %48 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %45, i32 0, i32 9, !dbg !12695
  %49 = load %struct.k_heap*, %struct.k_heap** %48, align 4, !dbg !12695
  br label %50, !dbg !12696

50:                                               ; preds = %44, %47
  %51 = phi %struct.k_heap* [ %49, %47 ], [ null, %44 ], !dbg !12637
  %52 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 9, !dbg !12697
  store %struct.k_heap* %51, %struct.k_heap** %52, align 4, !dbg !12699
  ret i8* %22, !dbg !12700
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #4 !dbg !12701 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12705, metadata !DIExpression()), !dbg !12706
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !12707
  ret i1 %2, !dbg !12708
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !12709 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !12714, metadata !DIExpression()), !dbg !12715
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !12716
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !12717
  ret void, !dbg !12718
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !12719 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12724, metadata !DIExpression()), !dbg !12728
  call void @llvm.dbg.value(metadata i32 %1, metadata !12725, metadata !DIExpression()), !dbg !12728
  call void @llvm.dbg.value(metadata i32 %2, metadata !12726, metadata !DIExpression()), !dbg !12728
  call void @llvm.dbg.value(metadata i32 %3, metadata !12727, metadata !DIExpression()), !dbg !12728
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !12729
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !12730
  %6 = trunc i32 %3 to i8, !dbg !12731
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !12732
  store i8 %6, i8* %7, align 4, !dbg !12733
  %8 = trunc i32 %2 to i8, !dbg !12734
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !12735
  store i8 %8, i8* %9, align 1, !dbg !12736
  %10 = trunc i32 %1 to i8, !dbg !12737
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !12738
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !12738
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !12738
  store i8 %10, i8* %13, align 2, !dbg !12739
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !12740
  store i8 0, i8* %14, align 1, !dbg !12741
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !12742
  ret void, !dbg !12743
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !12744 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12748, metadata !DIExpression()), !dbg !12756
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12749, metadata !DIExpression()), !dbg !12756
  call void @llvm.dbg.value(metadata i32 %2, metadata !12750, metadata !DIExpression()), !dbg !12756
  call void @llvm.dbg.value(metadata i32 0, metadata !12755, metadata !DIExpression()), !dbg !12756
  %4 = add i32 %2, 7, !dbg !12757
  %5 = and i32 %4, -8, !dbg !12757
  %6 = add i32 %5, 64, !dbg !12757
  call void @llvm.dbg.value(metadata i32 %6, metadata !12751, metadata !DIExpression()), !dbg !12756
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.197(%struct.z_thread_stack_element* noundef %1) #24, !dbg !12759
  call void @llvm.dbg.value(metadata i8* %7, metadata !12754, metadata !DIExpression()), !dbg !12756
  call void @llvm.dbg.value(metadata i32 %5, metadata !12752, metadata !DIExpression()), !dbg !12756
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !12760
  call void @llvm.dbg.value(metadata i8* %8, metadata !12753, metadata !DIExpression()), !dbg !12756
  call void @llvm.dbg.value(metadata i32 0, metadata !12755, metadata !DIExpression()), !dbg !12756
  %9 = ptrtoint i8* %7 to i32, !dbg !12761
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !12762
  store i32 %9, i32* %10, align 8, !dbg !12763
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 1, !dbg !12764
  store i32 %5, i32* %11, align 4, !dbg !12765
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 2, !dbg !12766
  store i32 0, i32* %12, align 8, !dbg !12767
  call void @llvm.dbg.value(metadata i8* %8, metadata !12753, metadata !DIExpression()), !dbg !12756
  ret i8* %8, !dbg !12768
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.197(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !12769 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12773, metadata !DIExpression()), !dbg !12774
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12775
  ret i8* %2, !dbg !12776
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !12777 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12782, metadata !DIExpression()), !dbg !12783
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !12784
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !12785
  ret void, !dbg !12786
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !12787 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12789, metadata !DIExpression()), !dbg !12790
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12791
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !12792
  ret void, !dbg !12793
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !12794 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12798, metadata !DIExpression()), !dbg !12799
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12800
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12801
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12802
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12803
  ret void, !dbg !12804
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !12805 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12810, metadata !DIExpression()), !dbg !12811
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12812
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !12813
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12814
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !12815
  ret void, !dbg !12816
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !12817 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12834, metadata !DIExpression()), !dbg !12835
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12825, metadata !DIExpression()), !dbg !12835
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12826, metadata !DIExpression()), !dbg !12835
  call void @llvm.dbg.value(metadata i32 %2, metadata !12827, metadata !DIExpression()), !dbg !12835
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12828, metadata !DIExpression()), !dbg !12835
  call void @llvm.dbg.value(metadata i8* %4, metadata !12829, metadata !DIExpression()), !dbg !12835
  call void @llvm.dbg.value(metadata i8* %5, metadata !12830, metadata !DIExpression()), !dbg !12835
  call void @llvm.dbg.value(metadata i8* %6, metadata !12831, metadata !DIExpression()), !dbg !12835
  call void @llvm.dbg.value(metadata i32 %7, metadata !12832, metadata !DIExpression()), !dbg !12835
  call void @llvm.dbg.value(metadata i32 %8, metadata !12833, metadata !DIExpression()), !dbg !12835
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !12836, !srcloc !12456
  call void @llvm.dbg.value(metadata i32 %11, metadata !12452, metadata !DIExpression()) #23, !dbg !12841
  %12 = icmp eq i32 %11, 0, !dbg !12842
  br i1 %12, label %14, label %13, !dbg !12843

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.170, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.172, i32 0, i32 0), i32 noundef 647) #26, !dbg !12844
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.16.201, i32 0, i32 0)) #26, !dbg !12844
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.172, i32 0, i32 0), i32 noundef 647) #26, !dbg !12844
  unreachable, !dbg !12844

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !12834, metadata !DIExpression()), !dbg !12835
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #24, !dbg !12846
  %17 = icmp eq i64 %15, -1, !dbg !12847
  br i1 %17, label %19, label %18, !dbg !12849

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !12850
  br label %19, !dbg !12852

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !12853
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12854 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12859, metadata !DIExpression()), !dbg !12860
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12858, metadata !DIExpression()), !dbg !12860
  %4 = icmp eq i64 %3, 0, !dbg !12861
  br i1 %4, label %5, label %6, !dbg !12863

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start.202(%struct.k_thread* noundef %0) #24, !dbg !12864
  br label %7, !dbg !12866

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !12867
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !12869
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start.202(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12870 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12874, metadata !DIExpression()), !dbg !12875
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12876, !srcloc !12878
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !12879
  ret void, !dbg !12880
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12881 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12884, metadata !DIExpression()), !dbg !12885
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12883, metadata !DIExpression()), !dbg !12885
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12886
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !12887
  ret void, !dbg !12888
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !12889 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12891, metadata !DIExpression()), !dbg !12911
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !12912

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.170, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.172, i32 0, i32 0), i32 noundef 750) #26, !dbg !12916
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18, i32 0, i32 0)) #26, !dbg !12916
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.172, i32 0, i32 0), i32 noundef 750) #26, !dbg !12916
  unreachable, !dbg !12916

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !12891, metadata !DIExpression()), !dbg !12911
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12919
  br i1 %4, label %6, label %5, !dbg !12920

5:                                                ; preds = %2
  tail call void @k_sched_lock() #26, !dbg !12921
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12909, metadata !DIExpression()), !dbg !12922
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !12923

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !12927
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !12927
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !12929
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !12929
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !12930
  %12 = load i32, i32* %11, align 4, !dbg !12930
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !12931
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !12931
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !12932
  %16 = load i8*, i8** %15, align 4, !dbg !12932
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !12933
  %18 = load i8*, i8** %17, align 4, !dbg !12933
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !12934
  %20 = load i8*, i8** %19, align 4, !dbg !12934
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !12935
  %22 = load i32, i32* %21, align 4, !dbg !12935
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !12936
  %24 = load i32, i32* %23, align 4, !dbg !12936
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !12937
  %26 = load i8*, i8** %25, align 4, !dbg !12937
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #24, !dbg !12938
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !12939
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !12940
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !12941
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !12941
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !12942
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !12891, metadata !DIExpression()), !dbg !12911
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12943
  br i1 %32, label %1, label %2, !dbg !12912, !llvm.loop !12944

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.170, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.172, i32 0, i32 0), i32 noundef 781) #26, !dbg !12946
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18, i32 0, i32 0)) #26, !dbg !12946
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.172, i32 0, i32 0), i32 noundef 781) #26, !dbg !12946
  unreachable, !dbg !12946

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !12909, metadata !DIExpression()), !dbg !12922
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12949
  br i1 %36, label %38, label %37, !dbg !12950

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #26, !dbg !12951
  ret void, !dbg !12952

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !12953
  %40 = load i32, i32* %39, align 4, !dbg !12953
  %41 = icmp eq i32 %40, -1, !dbg !12956
  br i1 %41, label %50, label %42, !dbg !12957

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !12958
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !12958
  %45 = icmp sgt i32 %40, 0, !dbg !12960
  %46 = select i1 %45, i32 %40, i32 0, !dbg !12960
  %47 = zext i32 %46 to i64, !dbg !12960
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64.205(i64 noundef %47) #24, !dbg !12960
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !12961
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #24, !dbg !12961
  br label %50, !dbg !12962

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !12963
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !12909, metadata !DIExpression()), !dbg !12922
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12964
  br i1 %52, label %33, label %34, !dbg !12923, !llvm.loop !12965
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.205(i64 noundef %0) unnamed_addr #4 !dbg !12967 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12969, metadata !DIExpression()), !dbg !12970
  call void @llvm.dbg.value(metadata i64 %0, metadata !12971, metadata !DIExpression()), !dbg !12986
  call void @llvm.dbg.value(metadata i32 1000, metadata !12974, metadata !DIExpression()), !dbg !12986
  call void @llvm.dbg.value(metadata i32 10000, metadata !12975, metadata !DIExpression()), !dbg !12986
  call void @llvm.dbg.value(metadata i8 1, metadata !12976, metadata !DIExpression()), !dbg !12986
  call void @llvm.dbg.value(metadata i8 0, metadata !12977, metadata !DIExpression()), !dbg !12986
  call void @llvm.dbg.value(metadata i8 1, metadata !12978, metadata !DIExpression()), !dbg !12986
  call void @llvm.dbg.value(metadata i8 0, metadata !12979, metadata !DIExpression()), !dbg !12986
  call void @llvm.dbg.value(metadata i8 1, metadata !12980, metadata !DIExpression()), !dbg !12986
  call void @llvm.dbg.value(metadata i8 0, metadata !12981, metadata !DIExpression()), !dbg !12986
  call void @llvm.dbg.value(metadata i64 0, metadata !12982, metadata !DIExpression()), !dbg !12986
  call void @llvm.dbg.value(metadata i64 0, metadata !12982, metadata !DIExpression()), !dbg !12986
  %2 = mul i64 %0, 10, !dbg !12988
  ret i64 %2, !dbg !12994
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !12995 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !12997, metadata !DIExpression()), !dbg !13001
  call void @llvm.dbg.value(metadata i8* %1, metadata !12998, metadata !DIExpression()), !dbg !13001
  call void @llvm.dbg.value(metadata i8* %2, metadata !12999, metadata !DIExpression()), !dbg !13001
  call void @llvm.dbg.value(metadata i8* %3, metadata !13000, metadata !DIExpression()), !dbg !13001
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13002
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13003
  %7 = load i8, i8* %6, align 4, !dbg !13004
  %8 = or i8 %7, 4, !dbg !13004
  store i8 %8, i8* %6, align 4, !dbg !13004
  tail call void @z_thread_essential_clear() #24, !dbg !13005
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13006
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 4, i32 0, !dbg !13007
  store void (i8*, i8*, i8*)* %0, void (i8*, i8*, i8*)** %10, align 8, !dbg !13008
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 4, i32 1, !dbg !13009
  store i8* %1, i8** %11, align 4, !dbg !13010
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 4, i32 2, !dbg !13011
  store i8* %2, i8** %12, align 8, !dbg !13012
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 4, i32 3, !dbg !13013
  store i8* %3, i8** %13, align 4, !dbg !13014
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !13015
  unreachable, !dbg !13015
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !13016 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13020, metadata !DIExpression()), !dbg !13021
  ret i32 -134, !dbg !13022
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13023 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13027, metadata !DIExpression()), !dbg !13029
  call void @llvm.dbg.value(metadata i32 %1, metadata !13028, metadata !DIExpression()), !dbg !13029
  ret i32 -134, !dbg !13030
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #4 !dbg !13031 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13038, metadata !DIExpression()), !dbg !13040
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !13039, metadata !DIExpression()), !dbg !13040
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13041
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !13043
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13040
  ret i32 %6, !dbg !13044
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #4 !dbg !13045 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !13049, metadata !DIExpression()), !dbg !13050
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !13051
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13050
  ret i32 %3, !dbg !13053
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13054 {
  tail call void @sys_clock_idle_exit() #26, !dbg !13056
  ret void, !dbg !13057
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !13058 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13060, metadata !DIExpression()), !dbg !13063
  call void @llvm.dbg.value(metadata i8* %1, metadata !13061, metadata !DIExpression()), !dbg !13063
  call void @llvm.dbg.value(metadata i8* %2, metadata !13062, metadata !DIExpression()), !dbg !13063
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13064
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13064
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13064
  %7 = load i8, i8* %6, align 2, !dbg !13064
  %8 = icmp sgt i8 %7, -1, !dbg !13064
  br i1 %8, label %10, label %9, !dbg !13067

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.208, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.209, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.210, i32 0, i32 0), i32 noundef 39) #26, !dbg !13068
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.210, i32 0, i32 0), i32 noundef 39) #26, !dbg !13068
  unreachable, !dbg !13068

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13070, !srcloc !13077
  call void @llvm.dbg.value(metadata i32 undef, metadata !13073, metadata !DIExpression()) #23, !dbg !13078
  call void @llvm.dbg.value(metadata i32 undef, metadata !13074, metadata !DIExpression()) #23, !dbg !13078
  tail call fastcc void @k_cpu_idle() #24, !dbg !13079
  br label %10, !dbg !13080, !llvm.loop !13081
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13083 {
  tail call void @arch_cpu_idle() #26, !dbg !13084
  ret void, !dbg !13085
}

; Function Attrs: optsize
declare !dbg !13086 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #7 !dbg !13087 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13098, metadata !DIExpression()), !dbg !13099
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13100
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !13101
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13102
  store i32 0, i32* %3, align 4, !dbg !13103
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13104
  tail call fastcc void @z_waitq_init.213(%struct._wait_q_t* noundef %4) #24, !dbg !13105
  ret i32 0, !dbg !13106
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.213(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !13107 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13111, metadata !DIExpression()), !dbg !13112
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13113
  tail call fastcc void @sys_dlist_init.214(%struct._dnode* noundef %2) #24, !dbg !13114
  ret void, !dbg !13115
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.214(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !13116 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13121, metadata !DIExpression()), !dbg !13122
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13123
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13124
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13125
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13126
  ret void, !dbg !13127
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !13128 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13137, metadata !DIExpression()), !dbg !13149
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13136, metadata !DIExpression()), !dbg !13149
  call void @llvm.dbg.value(metadata i8 0, metadata !13144, metadata !DIExpression()), !dbg !13149
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13150, !srcloc !13159
  call void @llvm.dbg.value(metadata i32 %4, metadata !13153, metadata !DIExpression()) #23, !dbg !13160
  %5 = icmp eq i32 %4, 0, !dbg !13161
  br i1 %5, label %7, label %6, !dbg !13162

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.217, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.218, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.219, i32 0, i32 0), i32 noundef 101) #26, !dbg !13163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.220, i32 0, i32 0)) #26, !dbg !13163
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.219, i32 0, i32 0), i32 noundef 101) #26, !dbg !13163
  unreachable, !dbg !13163

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.221, metadata !13165, metadata !DIExpression()) #23, !dbg !13172
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13174, !srcloc !13180
  call void @llvm.dbg.value(metadata i32 undef, metadata !13177, metadata !DIExpression()) #23, !dbg !13181
  call void @llvm.dbg.value(metadata i32 undef, metadata !13178, metadata !DIExpression()) #23, !dbg !13181
  call void @llvm.dbg.value(metadata i32 undef, metadata !13171, metadata !DIExpression()) #23, !dbg !13172
  %9 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.221) #26, !dbg !13182
  br i1 %9, label %11, label %10, !dbg !13185

10:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.217, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.222, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.223, i32 0, i32 0), i32 noundef 148) #26, !dbg !13186
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.224, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.221) #26, !dbg !13186
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.223, i32 0, i32 0), i32 noundef 148) #26, !dbg !13186
  unreachable, !dbg !13186

11:                                               ; preds = %7
  %12 = extractvalue { i32, i32 } %8, 0, !dbg !13174
  call void @llvm.dbg.value(metadata i32 %12, metadata !13177, metadata !DIExpression()) #23, !dbg !13181
  call void @llvm.dbg.value(metadata i32 %12, metadata !13171, metadata !DIExpression()) #23, !dbg !13172
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.221) #26, !dbg !13188
  call void @llvm.dbg.value(metadata i32 %12, metadata !13139, metadata !DIExpression()), !dbg !13149
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13189
  %14 = load i32, i32* %13, align 4, !dbg !13189
  %15 = icmp eq i32 %14, 0, !dbg !13189
  br i1 %15, label %21, label %16, !dbg !13189

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13189
  %18 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !13189
  %19 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13189
  %20 = icmp eq %struct.k_thread* %18, %19, !dbg !13189
  br i1 %20, label %27, label %39, !dbg !13191, !prof !13192

21:                                               ; preds = %11
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13193
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %22, i32 0, i32 0, i32 4, !dbg !13195
  %24 = bitcast %union.anon.2* %23 to i8*, !dbg !13195
  %25 = load i8, i8* %24, align 2, !dbg !13195
  %26 = sext i8 %25 to i32, !dbg !13193
  br label %30, !dbg !13196

27:                                               ; preds = %16
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13197
  %29 = load i32, i32* %28, align 4, !dbg !13197
  br label %30, !dbg !13196

30:                                               ; preds = %27, %21
  %31 = phi %struct.k_thread* [ %22, %21 ], [ %18, %27 ], !dbg !13198
  %32 = phi i32 [ %26, %21 ], [ %29, %27 ], !dbg !13196
  %33 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13199
  store i32 %32, i32* %33, align 4, !dbg !13200
  %34 = add i32 %14, 1, !dbg !13201
  store i32 %34, i32* %13, align 4, !dbg !13201
  %35 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13202
  store %struct.k_thread* %31, %struct.k_thread** %35, align 4, !dbg !13203
  call void @llvm.dbg.value(metadata i32 undef, metadata !13204, metadata !DIExpression()) #23, !dbg !13210
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.221, metadata !13209, metadata !DIExpression()) #23, !dbg !13210
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.221) #26, !dbg !13212
  br i1 %36, label %38, label %37, !dbg !13215

37:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.217, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.223, i32 0, i32 0), i32 noundef 194) #26, !dbg !13216
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.226, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.221) #26, !dbg !13216
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.223, i32 0, i32 0), i32 noundef 194) #26, !dbg !13216
  unreachable, !dbg !13216

38:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %12, metadata !13204, metadata !DIExpression()) #23, !dbg !13210
  call void @llvm.dbg.value(metadata i32 %12, metadata !13218, metadata !DIExpression()) #23, !dbg !13221
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !13223, !srcloc !13224
  br label %97, !dbg !13225

39:                                               ; preds = %16
  %40 = icmp eq i64 %3, 0, !dbg !13226
  br i1 %40, label %41, label %45, !dbg !13228, !prof !13229

41:                                               ; preds = %39
  call void @llvm.dbg.value(metadata i32 undef, metadata !13204, metadata !DIExpression()) #23, !dbg !13230
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.221, metadata !13209, metadata !DIExpression()) #23, !dbg !13230
  %42 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.221) #26, !dbg !13233
  br i1 %42, label %44, label %43, !dbg !13234

43:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.217, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.223, i32 0, i32 0), i32 noundef 194) #26, !dbg !13235
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.226, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.221) #26, !dbg !13235
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.223, i32 0, i32 0), i32 noundef 194) #26, !dbg !13235
  unreachable, !dbg !13235

44:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %12, metadata !13204, metadata !DIExpression()) #23, !dbg !13230
  call void @llvm.dbg.value(metadata i32 %12, metadata !13218, metadata !DIExpression()) #23, !dbg !13236
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !13238, !srcloc !13224
  br label %97, !dbg !13239

45:                                               ; preds = %39
  %46 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %19, i32 0, i32 0, i32 4, !dbg !13240
  %47 = bitcast %union.anon.2* %46 to i8*, !dbg !13240
  %48 = load i8, i8* %47, align 2, !dbg !13240
  %49 = sext i8 %48 to i32, !dbg !13241
  %50 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %18, i32 0, i32 0, i32 4, !dbg !13242
  %51 = bitcast %union.anon.2* %50 to i8*, !dbg !13242
  %52 = load i8, i8* %51, align 2, !dbg !13242
  %53 = sext i8 %52 to i32, !dbg !13243
  %54 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %49, i32 noundef %53) #24, !dbg !13244
  call void @llvm.dbg.value(metadata i32 %54, metadata !13138, metadata !DIExpression()), !dbg !13149
  %55 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %54, i32 noundef %53) #24, !dbg !13245
  br i1 %55, label %56, label %58, !dbg !13247

56:                                               ; preds = %45
  %57 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %54) #24, !dbg !13248
  call void @llvm.dbg.value(metadata i1 %57, metadata !13144, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13149
  br label %58, !dbg !13250

58:                                               ; preds = %56, %45
  %59 = phi i1 [ %57, %56 ], [ false, %45 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !13144, metadata !DIExpression()), !dbg !13149
  %60 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13251
  %61 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !13252
  %62 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.221, [1 x i32] %61, %struct._wait_q_t* noundef %60, [1 x i64] %1) #26, !dbg !13252
  call void @llvm.dbg.value(metadata i32 %62, metadata !13145, metadata !DIExpression()), !dbg !13149
  %63 = icmp eq i32 %62, 0, !dbg !13253
  br i1 %63, label %97, label %64, !dbg !13255

64:                                               ; preds = %58
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.221, metadata !13165, metadata !DIExpression()) #23, !dbg !13256
  %65 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13258, !srcloc !13180
  call void @llvm.dbg.value(metadata i32 undef, metadata !13177, metadata !DIExpression()) #23, !dbg !13260
  call void @llvm.dbg.value(metadata i32 undef, metadata !13178, metadata !DIExpression()) #23, !dbg !13260
  call void @llvm.dbg.value(metadata i32 undef, metadata !13171, metadata !DIExpression()) #23, !dbg !13256
  %66 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.221) #26, !dbg !13261
  br i1 %66, label %68, label %67, !dbg !13262

67:                                               ; preds = %64
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.217, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.222, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.223, i32 0, i32 0), i32 noundef 148) #26, !dbg !13263
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.224, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.221) #26, !dbg !13263
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.223, i32 0, i32 0), i32 noundef 148) #26, !dbg !13263
  unreachable, !dbg !13263

68:                                               ; preds = %64
  %69 = extractvalue { i32, i32 } %65, 0, !dbg !13258
  call void @llvm.dbg.value(metadata i32 %69, metadata !13177, metadata !DIExpression()) #23, !dbg !13260
  call void @llvm.dbg.value(metadata i32 %69, metadata !13171, metadata !DIExpression()) #23, !dbg !13256
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.221) #26, !dbg !13264
  call void @llvm.dbg.value(metadata i32 %69, metadata !13139, metadata !DIExpression()), !dbg !13149
  %70 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !13265
  %71 = icmp eq %struct.k_thread* %70, null, !dbg !13265
  br i1 %71, label %90, label %72, !dbg !13266, !prof !13229

72:                                               ; preds = %68
  %73 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef nonnull %60) #24, !dbg !13267
  call void @llvm.dbg.value(metadata %struct.k_thread* %73, metadata !13146, metadata !DIExpression()), !dbg !13268
  %74 = icmp eq %struct.k_thread* %73, null, !dbg !13269
  br i1 %74, label %83, label %75, !dbg !13270

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %73, i32 0, i32 0, i32 4, !dbg !13271
  %77 = bitcast %union.anon.2* %76 to i8*, !dbg !13271
  %78 = load i8, i8* %77, align 2, !dbg !13271
  %79 = sext i8 %78 to i32, !dbg !13272
  %80 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13273
  %81 = load i32, i32* %80, align 4, !dbg !13273
  %82 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %79, i32 noundef %81) #24, !dbg !13274
  br label %86, !dbg !13270

83:                                               ; preds = %72
  %84 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13275
  %85 = load i32, i32* %84, align 4, !dbg !13275
  br label %86, !dbg !13270

86:                                               ; preds = %83, %75
  %87 = phi i32 [ %82, %75 ], [ %85, %83 ], !dbg !13270
  call void @llvm.dbg.value(metadata i32 %87, metadata !13138, metadata !DIExpression()), !dbg !13149
  %88 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %87) #24, !dbg !13276
  %89 = select i1 %88, i1 true, i1 %59, !dbg !13277
  call void @llvm.dbg.value(metadata i1 %89, metadata !13144, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13149
  call void @llvm.dbg.value(metadata i8 poison, metadata !13144, metadata !DIExpression()), !dbg !13149
  br i1 %89, label %91, label %93, !dbg !13278

90:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i8 poison, metadata !13144, metadata !DIExpression()), !dbg !13149
  br i1 %59, label %91, label %93, !dbg !13278

91:                                               ; preds = %86, %90
  %92 = insertvalue [1 x i32] poison, i32 %69, 0, !dbg !13279
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.221, [1 x i32] %92) #26, !dbg !13279
  br label %97, !dbg !13282

93:                                               ; preds = %86, %90
  call void @llvm.dbg.value(metadata i32 undef, metadata !13204, metadata !DIExpression()) #23, !dbg !13283
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.221, metadata !13209, metadata !DIExpression()) #23, !dbg !13283
  %94 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.221) #26, !dbg !13286
  br i1 %94, label %96, label %95, !dbg !13287

95:                                               ; preds = %93
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.217, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.223, i32 0, i32 0), i32 noundef 194) #26, !dbg !13288
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.226, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.221) #26, !dbg !13288
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.223, i32 0, i32 0), i32 noundef 194) #26, !dbg !13288
  unreachable, !dbg !13288

96:                                               ; preds = %93
  call void @llvm.dbg.value(metadata i32 %69, metadata !13204, metadata !DIExpression()) #23, !dbg !13283
  call void @llvm.dbg.value(metadata i32 %69, metadata !13218, metadata !DIExpression()) #23, !dbg !13289
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %69) #23, !dbg !13291, !srcloc !13224
  br label %97

97:                                               ; preds = %58, %91, %96, %44, %38
  %98 = phi i32 [ 0, %38 ], [ -16, %44 ], [ 0, %58 ], [ -11, %91 ], [ -11, %96 ], !dbg !13149
  ret i32 %98, !dbg !13292
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !13293 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13297, metadata !DIExpression()), !dbg !13300
  call void @llvm.dbg.value(metadata i32 %1, metadata !13298, metadata !DIExpression()), !dbg !13300
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #24, !dbg !13301
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !13301
  call void @llvm.dbg.value(metadata i32 %4, metadata !13299, metadata !DIExpression()), !dbg !13300
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #24, !dbg !13302
  call void @llvm.dbg.value(metadata i32 %5, metadata !13299, metadata !DIExpression()), !dbg !13300
  ret i32 %5, !dbg !13303
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !13304 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13308, metadata !DIExpression()), !dbg !13310
  call void @llvm.dbg.value(metadata i32 %1, metadata !13309, metadata !DIExpression()), !dbg !13310
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !13311
  ret i1 %3, !dbg !13312
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !13313 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13317, metadata !DIExpression()), !dbg !13319
  call void @llvm.dbg.value(metadata i32 %1, metadata !13318, metadata !DIExpression()), !dbg !13319
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13320
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !13320
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13322
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13322
  %7 = load i8, i8* %6, align 2, !dbg !13322
  %8 = sext i8 %7 to i32, !dbg !13323
  %9 = icmp eq i32 %8, %1, !dbg !13324
  br i1 %9, label %12, label %10, !dbg !13325

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #26, !dbg !13326
  br label %12, !dbg !13328

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !13319
  ret i1 %13, !dbg !13329
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !13330 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13334, metadata !DIExpression()), !dbg !13335
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13336
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !13337
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13338
  ret %struct.k_thread* %4, !dbg !13339
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !13340 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13344, metadata !DIExpression()), !dbg !13345
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !13346
  br i1 %2, label %6, label %3, !dbg !13346

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13347
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13347
  br label %6, !dbg !13346

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13346
  ret %struct._dnode* %7, !dbg !13348
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !13349 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13353, metadata !DIExpression()), !dbg !13354
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13355
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13355
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13356
  ret i1 %4, !dbg !13357
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !13358 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13360, metadata !DIExpression()), !dbg !13362
  call void @llvm.dbg.value(metadata i32 %1, metadata !13361, metadata !DIExpression()), !dbg !13362
  %3 = icmp slt i32 %0, %1, !dbg !13363
  ret i1 %3, !dbg !13364
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #4 !dbg !13365 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13367, metadata !DIExpression()), !dbg !13368
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #24, !dbg !13369
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !13369
  ret i32 %3, !dbg !13370
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #4 !dbg !13371 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13375, metadata !DIExpression()), !dbg !13376
  %2 = icmp sgt i32 %0, -128, !dbg !13377
  ret i1 %2, !dbg !13378
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !13379 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13381, metadata !DIExpression()), !dbg !13385
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13386, !srcloc !13159
  call void @llvm.dbg.value(metadata i32 %2, metadata !13153, metadata !DIExpression()) #23, !dbg !13391
  %3 = icmp eq i32 %2, 0, !dbg !13392
  br i1 %3, label %5, label %4, !dbg !13393

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.217, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.218, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.219, i32 0, i32 0), i32 noundef 205) #26, !dbg !13394
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.220, i32 0, i32 0)) #26, !dbg !13394
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.219, i32 0, i32 0), i32 noundef 205) #26, !dbg !13394
  unreachable, !dbg !13394

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13396
  %7 = load %struct.k_thread*, %struct.k_thread** %6, align 4, !dbg !13396
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !13396
  br i1 %8, label %41, label %9, !dbg !13398

9:                                                ; preds = %5
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13399
  %11 = icmp eq %struct.k_thread* %7, %10, !dbg !13399
  br i1 %11, label %12, label %41, !dbg !13401

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13402
  %14 = load i32, i32* %13, align 4, !dbg !13402
  switch i32 %14, label %16 [
    i32 0, label %15
    i32 1, label %18
  ], !dbg !13405

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.217, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.219, i32 0, i32 0), i32 noundef 229) #26, !dbg !13406
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.219, i32 0, i32 0), i32 noundef 229) #26, !dbg !13406
  unreachable, !dbg !13406

16:                                               ; preds = %12
  %17 = add i32 %14, -1, !dbg !13408
  store i32 %17, i32* %13, align 4, !dbg !13408
  br label %41, !dbg !13411

18:                                               ; preds = %12
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.221, metadata !13165, metadata !DIExpression()) #23, !dbg !13412
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13414, !srcloc !13180
  call void @llvm.dbg.value(metadata i32 undef, metadata !13177, metadata !DIExpression()) #23, !dbg !13416
  call void @llvm.dbg.value(metadata i32 undef, metadata !13178, metadata !DIExpression()) #23, !dbg !13416
  call void @llvm.dbg.value(metadata i32 undef, metadata !13171, metadata !DIExpression()) #23, !dbg !13412
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.221) #26, !dbg !13417
  br i1 %20, label %22, label %21, !dbg !13418

21:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.217, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.222, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.223, i32 0, i32 0), i32 noundef 148) #26, !dbg !13419
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.224, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.221) #26, !dbg !13419
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.223, i32 0, i32 0), i32 noundef 148) #26, !dbg !13419
  unreachable, !dbg !13419

22:                                               ; preds = %18
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !13414
  call void @llvm.dbg.value(metadata i32 %23, metadata !13177, metadata !DIExpression()) #23, !dbg !13416
  call void @llvm.dbg.value(metadata i32 %23, metadata !13171, metadata !DIExpression()) #23, !dbg !13412
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.221) #26, !dbg !13420
  call void @llvm.dbg.value(metadata i32 %23, metadata !13383, metadata !DIExpression()), !dbg !13385
  %24 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13421
  %25 = load i32, i32* %24, align 4, !dbg !13421
  %26 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %25) #24, !dbg !13422
  %27 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13423
  %28 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %27) #26, !dbg !13424
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !13382, metadata !DIExpression()), !dbg !13385
  store %struct.k_thread* %28, %struct.k_thread** %6, align 4, !dbg !13425
  %29 = icmp eq %struct.k_thread* %28, null, !dbg !13426
  br i1 %29, label %37, label %30, !dbg !13428

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 0, i32 4, !dbg !13429
  %32 = bitcast %union.anon.2* %31 to i8*, !dbg !13429
  %33 = load i8, i8* %32, align 2, !dbg !13429
  %34 = sext i8 %33 to i32, !dbg !13431
  store i32 %34, i32* %24, align 4, !dbg !13432
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !13433, metadata !DIExpression()), !dbg !13439
  call void @llvm.dbg.value(metadata i32 0, metadata !13438, metadata !DIExpression()), !dbg !13439
  %35 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 10, i32 1, !dbg !13441
  store i32 0, i32* %35, align 4, !dbg !13442
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %28) #26, !dbg !13443
  %36 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !13444
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.221, [1 x i32] %36) #26, !dbg !13444
  br label %41, !dbg !13445

37:                                               ; preds = %22
  store i32 0, i32* %13, align 4, !dbg !13446
  call void @llvm.dbg.value(metadata i32 undef, metadata !13204, metadata !DIExpression()) #23, !dbg !13448
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.221, metadata !13209, metadata !DIExpression()) #23, !dbg !13448
  %38 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.221) #26, !dbg !13450
  br i1 %38, label %40, label %39, !dbg !13451

39:                                               ; preds = %37
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.217, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.223, i32 0, i32 0), i32 noundef 194) #26, !dbg !13452
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.226, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.221) #26, !dbg !13452
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.223, i32 0, i32 0), i32 noundef 194) #26, !dbg !13452
  unreachable, !dbg !13452

40:                                               ; preds = %37
  call void @llvm.dbg.value(metadata i32 %23, metadata !13204, metadata !DIExpression()) #23, !dbg !13448
  call void @llvm.dbg.value(metadata i32 %23, metadata !13218, metadata !DIExpression()) #23, !dbg !13453
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !13455, !srcloc !13224
  br label %41

41:                                               ; preds = %30, %40, %16, %9, %5
  %42 = phi i32 [ -22, %5 ], [ -1, %9 ], [ 0, %16 ], [ 0, %40 ], [ 0, %30 ], !dbg !13385
  ret i32 %42, !dbg !13456
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !13457 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13461, metadata !DIExpression()), !dbg !13465
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13462, metadata !DIExpression()), !dbg !13465
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13466
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !13466
  %5 = load i8, i8* %4, align 2, !dbg !13466
  call void @llvm.dbg.value(metadata i8 %5, metadata !13463, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13465
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13467
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !13467
  %8 = load i8, i8* %7, align 2, !dbg !13467
  call void @llvm.dbg.value(metadata i8 %8, metadata !13464, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13465
  %9 = icmp eq i8 %8, %5, !dbg !13468
  %10 = sext i8 %5 to i32, !dbg !13470
  %11 = sext i8 %8 to i32, !dbg !13470
  %12 = sub nsw i32 %11, %10, !dbg !13470
  %13 = select i1 %9, i32 0, i32 %12, !dbg !13470
  ret i32 %13, !dbg !13471
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !13472 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13476, metadata !DIExpression()), !dbg !13477
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !13478
  %3 = icmp eq i32 %2, 0, !dbg !13480
  br i1 %3, label %8, label %4, !dbg !13481

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #26, !dbg !13482
  %6 = add i32 %5, %2, !dbg !13484
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13485
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !13486
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #26, !dbg !13487
  br label %8, !dbg !13488

8:                                                ; preds = %4, %1
  ret void, !dbg !13489
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !13490 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13494, metadata !DIExpression()), !dbg !13496
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !13497
  call void @llvm.dbg.value(metadata i32 %1, metadata !13495, metadata !DIExpression()), !dbg !13496
  ret i32 %1, !dbg !13498
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13499 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13503, metadata !DIExpression()), !dbg !13512
  call void @llvm.dbg.value(metadata i32 %1, metadata !13504, metadata !DIExpression()), !dbg !13512
  call void @llvm.dbg.value(metadata i32 0, metadata !13505, metadata !DIExpression()), !dbg !13513
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13514, metadata !DIExpression()) #23, !dbg !13521
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13523, !srcloc !13529
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !13530
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()) #23, !dbg !13530
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !13521
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13531
  br i1 %4, label %6, label %5, !dbg !13534

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !13535
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13535
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !13535
  unreachable, !dbg !13535

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !13530
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !13521
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13537
  call void @llvm.dbg.value(metadata i32 undef, metadata !13511, metadata !DIExpression()), !dbg !13513
  call void @llvm.dbg.value(metadata i32 undef, metadata !13505, metadata !DIExpression()), !dbg !13513
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13538
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !13541
  %8 = icmp sgt i32 %0, 0, !dbg !13542
  %9 = icmp sgt i32 %7, 2, !dbg !13544
  %10 = select i1 %9, i32 %7, i32 2, !dbg !13544
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !13544
  store i32 %11, i32* @slice_ticks, align 4, !dbg !13545
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !13546
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !13547
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !13554
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13553, metadata !DIExpression()) #23, !dbg !13554
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13556
  br i1 %12, label %14, label %13, !dbg !13559

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !13560
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.237, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13560
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !13560
  unreachable, !dbg !13560

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !13523
  call void @llvm.dbg.value(metadata i32 %15, metadata !13526, metadata !DIExpression()) #23, !dbg !13530
  call void @llvm.dbg.value(metadata i32 %15, metadata !13520, metadata !DIExpression()) #23, !dbg !13521
  call void @llvm.dbg.value(metadata i32 %15, metadata !13511, metadata !DIExpression()), !dbg !13513
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !13554
  call void @llvm.dbg.value(metadata i32 undef, metadata !13562, metadata !DIExpression()) #23, !dbg !13565
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !13567, !srcloc !13568
  call void @llvm.dbg.value(metadata i32 1, metadata !13505, metadata !DIExpression()), !dbg !13513
  call void @llvm.dbg.value(metadata i32 undef, metadata !13505, metadata !DIExpression()), !dbg !13513
  ret void, !dbg !13569
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !13570 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13572, metadata !DIExpression()), !dbg !13573
  call void @llvm.dbg.value(metadata i32 %0, metadata !13574, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13589
  call void @llvm.dbg.value(metadata i32 1000, metadata !13577, metadata !DIExpression()), !dbg !13589
  call void @llvm.dbg.value(metadata i32 10000, metadata !13578, metadata !DIExpression()), !dbg !13589
  call void @llvm.dbg.value(metadata i8 1, metadata !13579, metadata !DIExpression()), !dbg !13589
  call void @llvm.dbg.value(metadata i1 true, metadata !13580, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13589
  call void @llvm.dbg.value(metadata i1 true, metadata !13581, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13589
  call void @llvm.dbg.value(metadata i8 0, metadata !13582, metadata !DIExpression()), !dbg !13589
  call void @llvm.dbg.value(metadata i1 true, metadata !13583, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13589
  call void @llvm.dbg.value(metadata i1 false, metadata !13584, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13589
  call void @llvm.dbg.value(metadata i64 0, metadata !13585, metadata !DIExpression()), !dbg !13589
  call void @llvm.dbg.value(metadata i64 0, metadata !13585, metadata !DIExpression()), !dbg !13589
  %2 = mul i32 %0, 10, !dbg !13591
  ret i32 %2, !dbg !13597
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !13598 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13600, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13514, metadata !DIExpression()) #23, !dbg !13603
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13605, !srcloc !13529
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !13607
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()) #23, !dbg !13607
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !13603
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13608
  br i1 %3, label %5, label %4, !dbg !13609

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !13610
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13610
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !13610
  unreachable, !dbg !13610

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !13605
  call void @llvm.dbg.value(metadata i32 %6, metadata !13526, metadata !DIExpression()) #23, !dbg !13607
  call void @llvm.dbg.value(metadata i32 %6, metadata !13520, metadata !DIExpression()) #23, !dbg !13603
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13611
  call void @llvm.dbg.value(metadata i32 %6, metadata !13601, metadata !DIExpression()), !dbg !13602
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13612
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13614
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !13615
  br i1 %9, label %10, label %14, !dbg !13616

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !13617
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !13619
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13553, metadata !DIExpression()) #23, !dbg !13619
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13621
  br i1 %11, label %13, label %12, !dbg !13622

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !13623
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.237, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13623
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !13623
  unreachable, !dbg !13623

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !13548, metadata !DIExpression()) #23, !dbg !13619
  call void @llvm.dbg.value(metadata i32 %6, metadata !13562, metadata !DIExpression()) #23, !dbg !13624
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !13626, !srcloc !13568
  br label %33, !dbg !13627

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13628
  %15 = tail call fastcc i32 @slice_time() #24, !dbg !13629
  %16 = icmp eq i32 %15, 0, !dbg !13629
  br i1 %16, label %27, label %17, !dbg !13631

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #24, !dbg !13632
  br i1 %18, label %19, label %27, !dbg !13633

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13634
  %21 = icmp sgt i32 %20, %0, !dbg !13637
  br i1 %21, label %25, label %22, !dbg !13638

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13639
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #24, !dbg !13639
  call void @llvm.dbg.value(metadata i32 %24, metadata !13601, metadata !DIExpression()), !dbg !13602
  br label %28, !dbg !13641

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !13642
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13642
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13644
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !13602
  call void @llvm.dbg.value(metadata i32 %29, metadata !13601, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !13646
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13553, metadata !DIExpression()) #23, !dbg !13646
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13648
  br i1 %30, label %32, label %31, !dbg !13649

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !13650
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.237, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13650
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !13650
  unreachable, !dbg !13650

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !13548, metadata !DIExpression()) #23, !dbg !13646
  call void @llvm.dbg.value(metadata i32 %29, metadata !13562, metadata !DIExpression()) #23, !dbg !13651
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !13653, !srcloc !13568
  br label %33, !dbg !13654

33:                                               ; preds = %32, %13
  ret void, !dbg !13654
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !13655 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13659, metadata !DIExpression()), !dbg !13661
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !13662
  %3 = icmp eq i32 %2, 0, !dbg !13662
  br i1 %3, label %16, label %4, !dbg !13663

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !13664
  br i1 %5, label %16, label %6, !dbg !13665

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13666
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !13666
  %9 = load i8, i8* %8, align 2, !dbg !13666
  %10 = sext i8 %9 to i32, !dbg !13667
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !13668
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.242(i32 noundef %10, i32 noundef %11) #24, !dbg !13669
  br i1 %12, label %16, label %13, !dbg !13670

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !13671
  %15 = xor i1 %14, true, !dbg !13672
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !13661
  call void @llvm.dbg.value(metadata i1 %17, metadata !13660, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13661
  ret i1 %17, !dbg !13673
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !13674 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()), !dbg !13680
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13681
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13679, metadata !DIExpression()), !dbg !13680
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !13682
  br i1 %3, label %5, label %4, !dbg !13684

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !13685
  br label %5, !dbg !13687

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !13678, metadata !DIExpression()), !dbg !13680
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !13688
  ret i32 %6, !dbg !13689
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !13690 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13692, metadata !DIExpression()), !dbg !13694
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13695
  %3 = load i8, i8* %2, align 1, !dbg !13695
  call void @llvm.dbg.value(metadata i8 %3, metadata !13693, metadata !DIExpression()), !dbg !13694
  %4 = and i8 %3, 31, !dbg !13696
  %5 = icmp ne i8 %4, 0, !dbg !13697
  ret i1 %5, !dbg !13698
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13699 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13701, metadata !DIExpression()), !dbg !13702
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !13703
  br i1 %2, label %3, label %7, !dbg !13705

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13706, metadata !DIExpression()) #23, !dbg !13709
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13712
  %5 = load i8, i8* %4, align 1, !dbg !13713
  %6 = and i8 %5, 127, !dbg !13713
  store i8 %6, i8* %4, align 1, !dbg !13713
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13714, metadata !DIExpression()) #23, !dbg !13717
  tail call void @z_priq_rb_remove(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #26, !dbg !13721
  br label %7, !dbg !13722

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13723, metadata !DIExpression()) #23, !dbg !13726
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13728
  %9 = load i8, i8* %8, align 1, !dbg !13729
  %10 = or i8 %9, -128, !dbg !13729
  store i8 %10, i8* %8, align 1, !dbg !13729
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13730, metadata !DIExpression()) #23, !dbg !13733
  tail call void @z_priq_rb_add(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #26, !dbg !13737
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13738
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !13739
  %13 = zext i1 %12 to i32, !dbg !13739
  tail call fastcc void @update_cache(i32 noundef %13) #24, !dbg !13740
  ret void, !dbg !13741
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !13742 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13744, metadata !DIExpression()), !dbg !13745
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #24, !dbg !13746
  ret i1 %2, !dbg !13747
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13748 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13766, metadata !DIExpression()), !dbg !13768
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13767, metadata !DIExpression()), !dbg !13768
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !13769
  br i1 %3, label %4, label %5, !dbg !13772

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.241, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 1200) #26, !dbg !13773
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 1200) #26, !dbg !13773
  unreachable, !dbg !13773

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13775
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !13776
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #26, !dbg !13777
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !13778
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !13778
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !13780
  br i1 %10, label %11, label %13, !dbg !13781

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !13782
  store i32 0, i32* %12, align 4, !dbg !13784
  br label %13, !dbg !13785

13:                                               ; preds = %11, %5
  ret void, !dbg !13786
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13787 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13789, metadata !DIExpression()), !dbg !13804
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13790, metadata !DIExpression()), !dbg !13804
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !13805
  br i1 %4, label %5, label %6, !dbg !13808

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.241, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 1179) #26, !dbg !13809
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 1179) #26, !dbg !13809
  unreachable, !dbg !13809

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !13811
  %8 = load i32, i32* %7, align 4, !dbg !13812
  %9 = add nsw i32 %8, 1, !dbg !13812
  store i32 %9, i32* %7, align 4, !dbg !13812
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !13813
  store i32 %8, i32* %10, align 8, !dbg !13814
  %11 = load i32, i32* %7, align 4, !dbg !13815
  %12 = icmp eq i32 %11, 0, !dbg !13816
  br i1 %12, label %13, label %35, !dbg !13817

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !13818
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !13818
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !13792, metadata !DIExpression()), !dbg !13818
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13818
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !13818
  %17 = load i32, i32* %16, align 4, !dbg !13818
  %18 = shl i32 %17, 2, !dbg !13818
  %19 = alloca i8, i32 %18, align 8, !dbg !13818
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !13818
  store i8* %19, i8** %20, align 4, !dbg !13818
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !13818
  %22 = alloca i8, i32 %17, align 8, !dbg !13818
  store i8* %22, i8** %21, align 4, !dbg !13818
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !13818
  store i32 -1, i32* %23, align 4, !dbg !13818
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !13819
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !13801, metadata !DIExpression()), !dbg !13820
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !13791, metadata !DIExpression()), !dbg !13804
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !13821
  br i1 %25, label %26, label %27, !dbg !13818

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !13821
  br label %35, !dbg !13822

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !13791, metadata !DIExpression()), !dbg !13804
  %29 = load i32, i32* %7, align 4, !dbg !13823
  %30 = add nsw i32 %29, 1, !dbg !13823
  store i32 %30, i32* %7, align 4, !dbg !13823
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !13825
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !13825
  store i32 %29, i32* %32, align 8, !dbg !13826
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !13819
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !13801, metadata !DIExpression()), !dbg !13820
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !13791, metadata !DIExpression()), !dbg !13804
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !13821
  br i1 %34, label %26, label %27, !dbg !13818, !llvm.loop !13827

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13829
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !13830
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #26, !dbg !13831
  ret void, !dbg !13832
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !13833 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13835, metadata !DIExpression()), !dbg !13837
  %2 = tail call %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !13838
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13845, metadata !DIExpression()) #23, !dbg !13847
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13848
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !13849
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !13849
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13836, metadata !DIExpression()), !dbg !13837
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13850, metadata !DIExpression()) #23, !dbg !13856
  call void @llvm.dbg.value(metadata i32 %0, metadata !13855, metadata !DIExpression()) #23, !dbg !13856
  %6 = icmp eq i32 %0, 0, !dbg !13859
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13861
  br i1 %6, label %8, label %18, !dbg !13862

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !13863
  br i1 %9, label %10, label %11, !dbg !13866

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.238, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 137) #26, !dbg !13867
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.240, i32 0, i32 0)) #26, !dbg !13867
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 137) #26, !dbg !13867
  unreachable, !dbg !13867

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #26, !dbg !13869
  br i1 %12, label %18, label %13, !dbg !13871

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #26, !dbg !13872
  br i1 %14, label %18, label %15, !dbg !13874

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #26, !dbg !13875
  %17 = icmp eq i32 %16, 0, !dbg !13875
  br i1 %17, label %21, label %18, !dbg !13877

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !13878
  br i1 %19, label %21, label %20, !dbg !13881

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !13882
  br label %21, !dbg !13884

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !13861
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13861
  ret void, !dbg !13885
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !13886 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13890, metadata !DIExpression()), !dbg !13893
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13891, metadata !DIExpression()), !dbg !13893
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13894
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !13895
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !13892, metadata !DIExpression()), !dbg !13893
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13891, metadata !DIExpression()), !dbg !13893
  ret %struct.k_thread* %4, !dbg !13896
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !13897 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13899, metadata !DIExpression()), !dbg !13900
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13901
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !13902
  %4 = xor i1 %3, true, !dbg !13903
  ret i1 %4, !dbg !13904
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !13905 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13907, metadata !DIExpression()), !dbg !13908
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !13909
  %3 = load i16, i16* %2, align 2, !dbg !13909
  %4 = icmp ult i16 %3, 128, !dbg !13910
  %5 = zext i1 %4 to i32, !dbg !13910
  ret i32 %5, !dbg !13911
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !13912 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13918, metadata !DIExpression()), !dbg !13919
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13920
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !13921
  %4 = xor i1 %3, true, !dbg !13922
  ret i1 %4, !dbg !13923
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !13924 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13930, metadata !DIExpression()), !dbg !13931
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13932
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13932
  %4 = icmp ne %struct._dnode* %3, null, !dbg !13933
  ret i1 %4, !dbg !13934
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !13935 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !13940, metadata !DIExpression()), !dbg !13941
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #26, !dbg !13942
  ret %struct.rbnode* %2, !dbg !13943
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !13944 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13946, metadata !DIExpression()), !dbg !13947
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !13948
  ret i1 %2, !dbg !13949
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !13950 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13954, metadata !DIExpression()), !dbg !13956
  call void @llvm.dbg.value(metadata i32 %1, metadata !13955, metadata !DIExpression()), !dbg !13956
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13957
  %4 = load i8, i8* %3, align 1, !dbg !13957
  %5 = zext i8 %4 to i32, !dbg !13958
  %6 = and i32 %5, %1, !dbg !13959
  %7 = icmp ne i32 %6, 0, !dbg !13960
  ret i1 %7, !dbg !13961
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.242(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !13962 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13964, metadata !DIExpression()), !dbg !13966
  call void @llvm.dbg.value(metadata i32 %1, metadata !13965, metadata !DIExpression()), !dbg !13966
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.243(i32 noundef %0, i32 noundef %1) #24, !dbg !13967
  ret i1 %3, !dbg !13968
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.243(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !13969 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13971, metadata !DIExpression()), !dbg !13973
  call void @llvm.dbg.value(metadata i32 %1, metadata !13972, metadata !DIExpression()), !dbg !13973
  %3 = icmp slt i32 %0, %1, !dbg !13974
  ret i1 %3, !dbg !13975
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13976 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13978, metadata !DIExpression()), !dbg !13982
  call void @llvm.dbg.value(metadata i32 0, metadata !13979, metadata !DIExpression()), !dbg !13983
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13514, metadata !DIExpression()) #23, !dbg !13984
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13986, !srcloc !13529
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !13988
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()) #23, !dbg !13988
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !13984
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13989
  br i1 %3, label %5, label %4, !dbg !13990

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !13991
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13991
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !13991
  unreachable, !dbg !13991

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !13988
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !13984
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13992
  call void @llvm.dbg.value(metadata i32 undef, metadata !13981, metadata !DIExpression()), !dbg !13983
  call void @llvm.dbg.value(metadata i32 undef, metadata !13979, metadata !DIExpression()), !dbg !13983
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !13993
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !13998
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13553, metadata !DIExpression()) #23, !dbg !13998
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14000
  br i1 %6, label %8, label %7, !dbg !14001

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !14002
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.237, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14002
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !14002
  unreachable, !dbg !14002

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !13986
  call void @llvm.dbg.value(metadata i32 %9, metadata !13526, metadata !DIExpression()) #23, !dbg !13988
  call void @llvm.dbg.value(metadata i32 %9, metadata !13520, metadata !DIExpression()) #23, !dbg !13984
  call void @llvm.dbg.value(metadata i32 %9, metadata !13981, metadata !DIExpression()), !dbg !13983
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !13998
  call void @llvm.dbg.value(metadata i32 undef, metadata !13562, metadata !DIExpression()) #23, !dbg !14003
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14005, !srcloc !13568
  call void @llvm.dbg.value(metadata i32 1, metadata !13979, metadata !DIExpression()), !dbg !13983
  call void @llvm.dbg.value(metadata i32 undef, metadata !13979, metadata !DIExpression()), !dbg !13983
  ret void, !dbg !14006
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14007 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14009, metadata !DIExpression()), !dbg !14010
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14011
  br i1 %2, label %9, label %3, !dbg !14013

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !14014
  br i1 %4, label %5, label %9, !dbg !14015

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13723, metadata !DIExpression()) #23, !dbg !14016
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14019
  %7 = load i8, i8* %6, align 1, !dbg !14020
  %8 = or i8 %7, -128, !dbg !14020
  store i8 %8, i8* %6, align 1, !dbg !14020
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13730, metadata !DIExpression()) #23, !dbg !14021
  tail call void @z_priq_rb_add(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #26, !dbg !14023
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !14024
  br label %9, !dbg !14025

9:                                                ; preds = %5, %3, %1
  ret void, !dbg !14026
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14027 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14029, metadata !DIExpression()), !dbg !14030
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14031
  br i1 %2, label %6, label %3, !dbg !14032

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !14033
  %5 = xor i1 %4, true, !dbg !14032
  br label %6, !dbg !14032

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14034
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14035 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14037, metadata !DIExpression()), !dbg !14041
  call void @llvm.dbg.value(metadata i32 0, metadata !14038, metadata !DIExpression()), !dbg !14042
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13514, metadata !DIExpression()) #23, !dbg !14043
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14045, !srcloc !13529
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !14047
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()) #23, !dbg !14047
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !14043
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14048
  br i1 %3, label %5, label %4, !dbg !14049

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !14050
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14050
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !14050
  unreachable, !dbg !14050

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !14047
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !14043
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14051
  call void @llvm.dbg.value(metadata i32 undef, metadata !14040, metadata !DIExpression()), !dbg !14042
  call void @llvm.dbg.value(metadata i32 undef, metadata !14038, metadata !DIExpression()), !dbg !14042
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !14052
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !14055
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13553, metadata !DIExpression()) #23, !dbg !14055
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14057
  br i1 %6, label %8, label %7, !dbg !14058

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !14059
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.237, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14059
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !14059
  unreachable, !dbg !14059

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14045
  call void @llvm.dbg.value(metadata i32 %9, metadata !13526, metadata !DIExpression()) #23, !dbg !14047
  call void @llvm.dbg.value(metadata i32 %9, metadata !13520, metadata !DIExpression()) #23, !dbg !14043
  call void @llvm.dbg.value(metadata i32 %9, metadata !14040, metadata !DIExpression()), !dbg !14042
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !14055
  call void @llvm.dbg.value(metadata i32 undef, metadata !13562, metadata !DIExpression()) #23, !dbg !14060
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14062, !srcloc !13568
  call void @llvm.dbg.value(metadata i32 1, metadata !14038, metadata !DIExpression()), !dbg !14042
  call void @llvm.dbg.value(metadata i32 undef, metadata !14038, metadata !DIExpression()), !dbg !14042
  ret void, !dbg !14063
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14064 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14066, metadata !DIExpression()), !dbg !14068
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13514, metadata !DIExpression()) #23, !dbg !14069
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14071, !srcloc !13529
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !14073
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()) #23, !dbg !14073
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !14069
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14074
  br i1 %3, label %5, label %4, !dbg !14075

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !14076
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14076
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !14076
  unreachable, !dbg !14076

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14071
  call void @llvm.dbg.value(metadata i32 %6, metadata !13526, metadata !DIExpression()) #23, !dbg !14073
  call void @llvm.dbg.value(metadata i32 %6, metadata !13520, metadata !DIExpression()) #23, !dbg !14069
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14077
  call void @llvm.dbg.value(metadata i32 %6, metadata !14067, metadata !DIExpression()), !dbg !14068
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !14078
  br i1 %7, label %8, label %12, !dbg !14080

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !14081
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13553, metadata !DIExpression()) #23, !dbg !14081
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14084
  br i1 %9, label %11, label %10, !dbg !14085

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !14086
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.237, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14086
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !14086
  unreachable, !dbg !14086

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !13548, metadata !DIExpression()) #23, !dbg !14081
  call void @llvm.dbg.value(metadata i32 %6, metadata !13562, metadata !DIExpression()) #23, !dbg !14087
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14089, !srcloc !13568
  br label %14, !dbg !14090

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.248(%struct.k_thread* noundef %0) #24, !dbg !14091
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14092
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14093
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !14093
  br label %14, !dbg !14094

14:                                               ; preds = %12, %11
  ret void, !dbg !14094
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14095 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14097, metadata !DIExpression()), !dbg !14098
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14099
  %3 = load i8, i8* %2, align 1, !dbg !14099
  %4 = and i8 %3, 4, !dbg !14100
  %5 = icmp eq i8 %4, 0, !dbg !14101
  ret i1 %5, !dbg !14102
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.248(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !14103 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14105, metadata !DIExpression()), !dbg !14106
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14107
  %3 = load i8, i8* %2, align 1, !dbg !14108
  %4 = and i8 %3, -5, !dbg !14108
  store i8 %4, i8* %2, align 1, !dbg !14108
  ret void, !dbg !14109
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14110 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14113, metadata !DIExpression()), !dbg !14114
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14112, metadata !DIExpression()), !dbg !14114
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !14115
  br i1 %4, label %5, label %12, !dbg !14117

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !14118
  br i1 %6, label %7, label %12, !dbg !14119

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14120, metadata !DIExpression()) #23, !dbg !14126
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14125, metadata !DIExpression()) #23, !dbg !14126
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14129, metadata !DIExpression()) #23, !dbg !14134
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #26, !dbg !14136
  br i1 %8, label %10, label %9, !dbg !14139

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 225) #26, !dbg !14140
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.237, i32 0, i32 0), %struct.k_spinlock* noundef %0) #26, !dbg !14140
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 225) #26, !dbg !14140
  unreachable, !dbg !14140

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !14120, metadata !DIExpression()) #23, !dbg !14126
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #26, !dbg !14142
  br label %16, !dbg !14143

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !14144
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13553, metadata !DIExpression()) #23, !dbg !14144
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #26, !dbg !14147
  br i1 %13, label %15, label %14, !dbg !14148

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !14149
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.237, i32 0, i32 0), %struct.k_spinlock* noundef %0) #26, !dbg !14149
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !14149
  unreachable, !dbg !14149

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !13548, metadata !DIExpression()) #23, !dbg !14144
  call void @llvm.dbg.value(metadata i32 %3, metadata !13562, metadata !DIExpression()) #23, !dbg !14150
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14152, !srcloc !13568
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !14153
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14154 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14158, metadata !DIExpression()), !dbg !14159
  call void @llvm.dbg.value(metadata i32 %0, metadata !14160, metadata !DIExpression()), !dbg !14165
  %2 = icmp eq i32 %0, 0, !dbg !14167
  br i1 %2, label %3, label %6, !dbg !14168

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14169, !srcloc !14176
  call void @llvm.dbg.value(metadata i32 %4, metadata !14172, metadata !DIExpression()) #23, !dbg !14177
  %5 = icmp eq i32 %4, 0, !dbg !14178
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14159
  ret i1 %7, !dbg !14179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !14180 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14183
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14182, metadata !DIExpression()), !dbg !14184
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14185
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14186
  ret i1 %3, !dbg !14187
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14188 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14190, metadata !DIExpression()), !dbg !14192
  %2 = tail call i32 @arch_swap(i32 noundef %0) #26, !dbg !14193
  call void @llvm.dbg.value(metadata i32 %2, metadata !14191, metadata !DIExpression()), !dbg !14192
  ret i32 %2, !dbg !14194
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14195 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14197, metadata !DIExpression()), !dbg !14201
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !14202
  call void @llvm.dbg.value(metadata i32 0, metadata !14198, metadata !DIExpression()), !dbg !14203
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13514, metadata !DIExpression()) #23, !dbg !14204
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14206, !srcloc !13529
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !14208
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()) #23, !dbg !14208
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !14204
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14209
  br i1 %4, label %6, label %5, !dbg !14210

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !14211
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14211
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !14211
  unreachable, !dbg !14211

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !14206
  call void @llvm.dbg.value(metadata i32 %7, metadata !13526, metadata !DIExpression()) #23, !dbg !14208
  call void @llvm.dbg.value(metadata i32 %7, metadata !13520, metadata !DIExpression()) #23, !dbg !14204
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14212
  call void @llvm.dbg.value(metadata i32 %7, metadata !14200, metadata !DIExpression()), !dbg !14203
  call void @llvm.dbg.value(metadata i32 undef, metadata !14198, metadata !DIExpression()), !dbg !14203
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14213
  br i1 %8, label %9, label %13, !dbg !14217

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13706, metadata !DIExpression()) #23, !dbg !14218
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14221
  %11 = load i8, i8* %10, align 1, !dbg !14222
  %12 = and i8 %11, 127, !dbg !14222
  store i8 %12, i8* %10, align 1, !dbg !14222
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13714, metadata !DIExpression()) #23, !dbg !14223
  tail call void @z_priq_rb_remove(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #26, !dbg !14225
  br label %13, !dbg !14226

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !14227
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14228
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14229
  %16 = zext i1 %15 to i32, !dbg !14229
  tail call fastcc void @update_cache(i32 noundef %16) #24, !dbg !14230
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !14231
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13553, metadata !DIExpression()) #23, !dbg !14231
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14233
  br i1 %17, label %19, label %18, !dbg !14234

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !14235
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.237, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14235
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !14235
  unreachable, !dbg !14235

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !13548, metadata !DIExpression()) #23, !dbg !14231
  call void @llvm.dbg.value(metadata i32 %7, metadata !13562, metadata !DIExpression()) #23, !dbg !14236
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !14238, !srcloc !13568
  call void @llvm.dbg.value(metadata i32 1, metadata !14198, metadata !DIExpression()), !dbg !14203
  call void @llvm.dbg.value(metadata i32 undef, metadata !14198, metadata !DIExpression()), !dbg !14203
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14239
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !14241
  br i1 %21, label %22, label %23, !dbg !14242

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !14243
  br label %23, !dbg !14245

23:                                               ; preds = %22, %19
  ret void, !dbg !14246
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14247 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14249, metadata !DIExpression()), !dbg !14250
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14251
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !14252
  ret i32 %3, !dbg !14253
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !14254 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14256, metadata !DIExpression()), !dbg !14257
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14258
  %3 = load i8, i8* %2, align 1, !dbg !14259
  %4 = or i8 %3, 16, !dbg !14259
  store i8 %4, i8* %2, align 1, !dbg !14259
  ret void, !dbg !14260
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !14261 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14262, !srcloc !13529
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14262
  call void @llvm.dbg.value(metadata i32 %2, metadata !13526, metadata !DIExpression()) #23, !dbg !14264
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()) #23, !dbg !14264
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !14265
  ret void, !dbg !14266
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !14267 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14269, metadata !DIExpression()), !dbg !14270
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !14271
  br i1 %2, label %3, label %5, !dbg !14273

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !14274
  br label %6, !dbg !14276

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !13562, metadata !DIExpression()) #23, !dbg !14277
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !14280, !srcloc !13568
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !14281
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14282 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14284, metadata !DIExpression()), !dbg !14286
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13514, metadata !DIExpression()) #23, !dbg !14287
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14289, !srcloc !13529
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !14291
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()) #23, !dbg !14291
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !14287
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14292
  br i1 %3, label %5, label %4, !dbg !14293

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !14294
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14294
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !14294
  unreachable, !dbg !14294

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14289
  call void @llvm.dbg.value(metadata i32 %6, metadata !13526, metadata !DIExpression()) #23, !dbg !14291
  call void @llvm.dbg.value(metadata i32 %6, metadata !13520, metadata !DIExpression()) #23, !dbg !14287
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14295
  call void @llvm.dbg.value(metadata i32 %6, metadata !14285, metadata !DIExpression()), !dbg !14286
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !14296
  br i1 %7, label %12, label %8, !dbg !14298

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !14299
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13553, metadata !DIExpression()) #23, !dbg !14299
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14302
  br i1 %9, label %11, label %10, !dbg !14303

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !14304
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.237, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14304
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !14304
  unreachable, !dbg !14304

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !13548, metadata !DIExpression()) #23, !dbg !14299
  call void @llvm.dbg.value(metadata i32 %6, metadata !13562, metadata !DIExpression()) #23, !dbg !14305
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14307, !srcloc !13568
  br label %14, !dbg !14308

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !14309
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14310
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14311
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !14311
  br label %14, !dbg !14312

14:                                               ; preds = %12, %11
  ret void, !dbg !14312
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14313 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14315, metadata !DIExpression()), !dbg !14316
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14317
  %3 = load i8, i8* %2, align 1, !dbg !14317
  %4 = and i8 %3, 16, !dbg !14318
  %5 = icmp ne i8 %4, 0, !dbg !14319
  ret i1 %5, !dbg !14320
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !14321 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14323, metadata !DIExpression()), !dbg !14324
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14325
  %3 = load i8, i8* %2, align 1, !dbg !14326
  %4 = and i8 %3, -17, !dbg !14326
  store i8 %4, i8* %2, align 1, !dbg !14326
  ret void, !dbg !14327
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14328 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14338, metadata !DIExpression()), !dbg !14342
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14336, metadata !DIExpression()), !dbg !14342
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14337, metadata !DIExpression()), !dbg !14342
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14343
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !14343
  br i1 %5, label %9, label %6, !dbg !14343

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #24, !dbg !14343
  br i1 %7, label %9, label %8, !dbg !14346

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 773) #26, !dbg !14347
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 773) #26, !dbg !14347
  unreachable, !dbg !14347

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !14339, metadata !DIExpression()), !dbg !14349
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13514, metadata !DIExpression()) #23, !dbg !14350
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14352, !srcloc !13529
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !14354
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()) #23, !dbg !14354
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !14350
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14355
  br i1 %11, label %13, label %12, !dbg !14356

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !14357
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14357
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !14357
  unreachable, !dbg !14357

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !14354
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !14350
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14358
  call void @llvm.dbg.value(metadata i32 undef, metadata !14341, metadata !DIExpression()), !dbg !14349
  call void @llvm.dbg.value(metadata i32 undef, metadata !14339, metadata !DIExpression()), !dbg !14349
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !14359
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !14362
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13553, metadata !DIExpression()) #23, !dbg !14362
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14364
  br i1 %14, label %16, label %15, !dbg !14365

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !14366
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.237, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14366
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !14366
  unreachable, !dbg !14366

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !14352
  call void @llvm.dbg.value(metadata i32 %17, metadata !13526, metadata !DIExpression()) #23, !dbg !14354
  call void @llvm.dbg.value(metadata i32 %17, metadata !13520, metadata !DIExpression()) #23, !dbg !14350
  call void @llvm.dbg.value(metadata i32 %17, metadata !14341, metadata !DIExpression()), !dbg !14349
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !14362
  call void @llvm.dbg.value(metadata i32 undef, metadata !13562, metadata !DIExpression()) #23, !dbg !14367
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !14369, !srcloc !13568
  call void @llvm.dbg.value(metadata i32 1, metadata !14339, metadata !DIExpression()), !dbg !14349
  call void @llvm.dbg.value(metadata i32 undef, metadata !14339, metadata !DIExpression()), !dbg !14349
  ret void, !dbg !14370
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14371 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14373, metadata !DIExpression()), !dbg !14374
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14375
  %3 = load i8, i8* %2, align 1, !dbg !14375
  %4 = and i8 %3, 1, !dbg !14376
  %5 = icmp ne i8 %4, 0, !dbg !14377
  ret i1 %5, !dbg !14378
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !14379 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14383, metadata !DIExpression()), !dbg !14384
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14381, metadata !DIExpression()), !dbg !14384
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14382, metadata !DIExpression()), !dbg !14384
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #24, !dbg !14385
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !14386
  ret void, !dbg !14387
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !14388 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14392, metadata !DIExpression()), !dbg !14394
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14393, metadata !DIExpression()), !dbg !14394
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !14395
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !14396
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !14397
  br i1 %3, label %24, label %4, !dbg !14399

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14400
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !14402
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !14403
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14404, metadata !DIExpression()) #23, !dbg !14412
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14410, metadata !DIExpression()) #23, !dbg !14412
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #26, !dbg !14414
  br i1 %7, label %8, label %9, !dbg !14417

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.241, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 186) #26, !dbg !14418
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 186) #26, !dbg !14418
  unreachable, !dbg !14418

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.257(%struct._dnode* noundef nonnull %6) #26, !dbg !14420
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14411, metadata !DIExpression()) #23, !dbg !14412
  %11 = icmp eq %struct._dnode* %10, null, !dbg !14422
  br i1 %11, label %22, label %12, !dbg !14420

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14411, metadata !DIExpression()) #23, !dbg !14412
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !14424
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14411, metadata !DIExpression()) #23, !dbg !14412
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #26, !dbg !14425
  %16 = icmp sgt i32 %15, 0, !dbg !14428
  br i1 %16, label %17, label %19, !dbg !14429

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14430
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #26, !dbg !14432
  br label %24, !dbg !14433

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #26, !dbg !14422
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14411, metadata !DIExpression()) #23, !dbg !14412
  %21 = icmp eq %struct._dnode* %20, null, !dbg !14422
  br i1 %21, label %22, label %12, !dbg !14420, !llvm.loop !14434

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14436
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #26, !dbg !14437
  br label %24, !dbg !14438

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !14439
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14440 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14445, metadata !DIExpression()), !dbg !14446
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14444, metadata !DIExpression()), !dbg !14446
  %4 = icmp eq i64 %3, -1, !dbg !14447
  br i1 %4, label %6, label %5, !dbg !14449

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.252(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !14450
  br label %6, !dbg !14452

6:                                                ; preds = %5, %2
  ret void, !dbg !14453
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.252(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14454 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14457, metadata !DIExpression()), !dbg !14458
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14456, metadata !DIExpression()), !dbg !14458
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14459
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !14460
  ret void, !dbg !14461
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !14462 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14464, metadata !DIExpression()), !dbg !14472
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !14473
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !14473
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14465, metadata !DIExpression()), !dbg !14472
  call void @llvm.dbg.value(metadata i32 0, metadata !14466, metadata !DIExpression()), !dbg !14474
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13514, metadata !DIExpression()) #23, !dbg !14475
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14477, !srcloc !13529
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !14479
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()) #23, !dbg !14479
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !14475
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14480
  br i1 %5, label %7, label %6, !dbg !14481

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !14482
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14482
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !14482
  unreachable, !dbg !14482

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !14479
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !14475
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14483
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()), !dbg !14474
  call void @llvm.dbg.value(metadata i32 undef, metadata !14466, metadata !DIExpression()), !dbg !14474
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !14484
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !14485
  %10 = load i8, i8* %9, align 1, !dbg !14485
  %11 = and i8 %10, 40, !dbg !14486
  %12 = icmp eq i8 %11, 0, !dbg !14486
  call void @llvm.dbg.value(metadata i1 %12, metadata !14469, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14487
  br i1 %12, label %13, label %20, !dbg !14488

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !14489
  %15 = bitcast void (%struct._timeout*)** %14 to %struct._wait_q_t**, !dbg !14489
  %16 = load %struct._wait_q_t*, %struct._wait_q_t** %15, align 8, !dbg !14489
  %17 = icmp eq %struct._wait_q_t* %16, null, !dbg !14493
  br i1 %17, label %19, label %18, !dbg !14494

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !14495
  br label %19, !dbg !14497

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.248(%struct.k_thread* noundef nonnull %3) #24, !dbg !14498
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !14499
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !14500
  br label %20, !dbg !14501

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !14502
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13553, metadata !DIExpression()) #23, !dbg !14502
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14504
  br i1 %21, label %23, label %22, !dbg !14505

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !14506
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.237, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14506
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !14506
  unreachable, !dbg !14506

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !14477
  call void @llvm.dbg.value(metadata i32 %24, metadata !13526, metadata !DIExpression()) #23, !dbg !14479
  call void @llvm.dbg.value(metadata i32 %24, metadata !13520, metadata !DIExpression()) #23, !dbg !14475
  call void @llvm.dbg.value(metadata i32 %24, metadata !14468, metadata !DIExpression()), !dbg !14474
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !14502
  call void @llvm.dbg.value(metadata i32 undef, metadata !13562, metadata !DIExpression()) #23, !dbg !14507
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !14509, !srcloc !13568
  call void @llvm.dbg.value(metadata i32 1, metadata !14466, metadata !DIExpression()), !dbg !14474
  call void @llvm.dbg.value(metadata i32 undef, metadata !14466, metadata !DIExpression()), !dbg !14474
  ret void, !dbg !14510
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14511 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14513, metadata !DIExpression()), !dbg !14514
  %2 = tail call fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* noundef %0) #24, !dbg !14515
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !14516
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !14517
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14518
  store %struct._wait_q_t* null, %struct._wait_q_t** %3, align 8, !dbg !14519
  ret void, !dbg !14520
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !14521 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14525, metadata !DIExpression()), !dbg !14526
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14527
  %3 = load %struct._wait_q_t*, %struct._wait_q_t** %2, align 8, !dbg !14527
  %4 = icmp eq %struct._wait_q_t* %3, null, !dbg !14527
  br i1 %4, label %5, label %6, !dbg !14530

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 726) #26, !dbg !14531
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 726) #26, !dbg !14531
  unreachable, !dbg !14531

6:                                                ; preds = %1
  ret %struct._wait_q_t* %3, !dbg !14533
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14534 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14536, metadata !DIExpression()), !dbg !14538
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14537, metadata !DIExpression()), !dbg !14538
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !14539
  br i1 %3, label %4, label %5, !dbg !14542

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.241, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 1139) #26, !dbg !14543
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 1139) #26, !dbg !14543
  unreachable, !dbg !14543

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14545
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #24, !dbg !14546
  ret void, !dbg !14547
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !14548 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14550, metadata !DIExpression()), !dbg !14551
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14552
  %3 = load i8, i8* %2, align 1, !dbg !14553
  %4 = and i8 %3, -3, !dbg !14553
  store i8 %4, i8* %2, align 1, !dbg !14553
  ret void, !dbg !14554
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #10 !dbg !14555 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14560, metadata !DIExpression()), !dbg !14564
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14565
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14565
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14561, metadata !DIExpression()), !dbg !14564
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14566
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14566
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14563, metadata !DIExpression()), !dbg !14564
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14567
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14568
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14569
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14570
  tail call fastcc void @sys_dnode_init.255(%struct._dnode* noundef %0) #24, !dbg !14571
  ret void, !dbg !14572
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.255(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14573 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14575, metadata !DIExpression()), !dbg !14576
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14577
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14578
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14579
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14580
  ret void, !dbg !14581
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14582 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14584, metadata !DIExpression()), !dbg !14585
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14586
  br i1 %2, label %3, label %7, !dbg !14588

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13706, metadata !DIExpression()) #23, !dbg !14589
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14592
  %5 = load i8, i8* %4, align 1, !dbg !14593
  %6 = and i8 %5, 127, !dbg !14593
  store i8 %6, i8* %4, align 1, !dbg !14593
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13714, metadata !DIExpression()) #23, !dbg !14594
  tail call void @z_priq_rb_remove(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #26, !dbg !14596
  br label %7, !dbg !14597

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14598
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !14599
  %10 = zext i1 %9 to i32, !dbg !14599
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !14600
  ret void, !dbg !14601
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !14602 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14604, metadata !DIExpression()), !dbg !14605
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14606
  %3 = load i8, i8* %2, align 1, !dbg !14607
  %4 = or i8 %3, 2, !dbg !14607
  store i8 %4, i8* %2, align 1, !dbg !14607
  ret void, !dbg !14608
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.257(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14609 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14613, metadata !DIExpression()), !dbg !14614
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.258(%struct._dnode* noundef %0) #24, !dbg !14615
  br i1 %2, label %6, label %3, !dbg !14615

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14616
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14616
  br label %6, !dbg !14615

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14615
  ret %struct._dnode* %7, !dbg !14617
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #10 !dbg !14618 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14622, metadata !DIExpression()), !dbg !14625
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14623, metadata !DIExpression()), !dbg !14625
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14626
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14626
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14624, metadata !DIExpression()), !dbg !14625
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14627
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14628
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14629
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14630
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14631
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14632
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14633
  ret void, !dbg !14634
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14635 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14639, metadata !DIExpression()), !dbg !14641
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14640, metadata !DIExpression()), !dbg !14641
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14642
  br i1 %3, label %6, label %4, !dbg !14643

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !14644
  br label %6, !dbg !14643

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14643
  ret %struct._dnode* %7, !dbg !14645
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #10 !dbg !14646 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14650, metadata !DIExpression()), !dbg !14653
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14651, metadata !DIExpression()), !dbg !14653
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14654
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14654
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14652, metadata !DIExpression()), !dbg !14653
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14655
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14656
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14657
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14658
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14659
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14660
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14661
  ret void, !dbg !14662
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14663 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14665, metadata !DIExpression()), !dbg !14667
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14666, metadata !DIExpression()), !dbg !14667
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14668
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14668
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14669
  br i1 %5, label %9, label %6, !dbg !14670

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14671
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14671
  br label %9, !dbg !14670

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14670
  ret %struct._dnode* %10, !dbg !14672
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.258(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !14673 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14677, metadata !DIExpression()), !dbg !14678
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14679
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14679
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14680
  ret i1 %4, !dbg !14681
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !14682 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14684, metadata !DIExpression()), !dbg !14688
  call void @llvm.dbg.value(metadata i32 0, metadata !14685, metadata !DIExpression()), !dbg !14689
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13514, metadata !DIExpression()) #23, !dbg !14690
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14692, !srcloc !13529
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !14694
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()) #23, !dbg !14694
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !14690
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14695
  br i1 %3, label %5, label %4, !dbg !14696

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !14697
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14697
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !14697
  unreachable, !dbg !14697

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !14694
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !14690
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14698
  call void @llvm.dbg.value(metadata i32 undef, metadata !14687, metadata !DIExpression()), !dbg !14689
  call void @llvm.dbg.value(metadata i32 undef, metadata !14685, metadata !DIExpression()), !dbg !14689
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !14699
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !14702
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13553, metadata !DIExpression()) #23, !dbg !14702
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14704
  br i1 %6, label %8, label %7, !dbg !14705

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !14706
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.237, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14706
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !14706
  unreachable, !dbg !14706

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14692
  call void @llvm.dbg.value(metadata i32 %9, metadata !13526, metadata !DIExpression()) #23, !dbg !14694
  call void @llvm.dbg.value(metadata i32 %9, metadata !13520, metadata !DIExpression()) #23, !dbg !14690
  call void @llvm.dbg.value(metadata i32 %9, metadata !14687, metadata !DIExpression()), !dbg !14689
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !14702
  call void @llvm.dbg.value(metadata i32 undef, metadata !13562, metadata !DIExpression()) #23, !dbg !14707
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14709, !srcloc !13568
  call void @llvm.dbg.value(metadata i32 1, metadata !14685, metadata !DIExpression()), !dbg !14689
  call void @llvm.dbg.value(metadata i32 undef, metadata !14685, metadata !DIExpression()), !dbg !14689
  ret void, !dbg !14710
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14711 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14717, metadata !DIExpression()), !dbg !14722
  call void @llvm.dbg.value(metadata i32 %0, metadata !14715, metadata !DIExpression()), !dbg !14722
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14716, metadata !DIExpression()), !dbg !14722
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14723
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !14724
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14725
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14726
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !14727
  call void @llvm.dbg.value(metadata i32 %6, metadata !14718, metadata !DIExpression()), !dbg !14722
  call void @llvm.dbg.value(metadata i32 0, metadata !14719, metadata !DIExpression()), !dbg !14728
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13514, metadata !DIExpression()) #23, !dbg !14729
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14731, !srcloc !13529
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !14733
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()) #23, !dbg !14733
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !14729
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14734
  br i1 %8, label %10, label %9, !dbg !14735

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !14736
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14736
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !14736
  unreachable, !dbg !14736

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !14733
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !14729
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14737
  call void @llvm.dbg.value(metadata i32 undef, metadata !14721, metadata !DIExpression()), !dbg !14728
  call void @llvm.dbg.value(metadata i32 undef, metadata !14719, metadata !DIExpression()), !dbg !14728
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14738
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14742
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !14743
  br i1 %13, label %14, label %15, !dbg !14744

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14745
  br label %15, !dbg !14747

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !14748
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13553, metadata !DIExpression()) #23, !dbg !14748
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14750
  br i1 %16, label %18, label %17, !dbg !14751

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !14752
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.237, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14752
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !14752
  unreachable, !dbg !14752

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !14731
  call void @llvm.dbg.value(metadata i32 %19, metadata !13526, metadata !DIExpression()) #23, !dbg !14733
  call void @llvm.dbg.value(metadata i32 %19, metadata !13520, metadata !DIExpression()) #23, !dbg !14729
  call void @llvm.dbg.value(metadata i32 %19, metadata !14721, metadata !DIExpression()), !dbg !14728
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !14748
  call void @llvm.dbg.value(metadata i32 undef, metadata !13562, metadata !DIExpression()) #23, !dbg !14753
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !14755, !srcloc !13568
  call void @llvm.dbg.value(metadata i32 1, metadata !14719, metadata !DIExpression()), !dbg !14728
  call void @llvm.dbg.value(metadata i32 undef, metadata !14719, metadata !DIExpression()), !dbg !14728
  ret i32 %6, !dbg !14756
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !14757 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14762, metadata !DIExpression()), !dbg !14765
  call void @llvm.dbg.value(metadata i64 undef, metadata !14764, metadata !DIExpression()), !dbg !14765
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14761, metadata !DIExpression()), !dbg !14765
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !14763, metadata !DIExpression()), !dbg !14765
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14766
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14767
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !14768
  br i1 %6, label %7, label %8, !dbg !14771

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 846) #26, !dbg !14772
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 846) #26, !dbg !14772
  unreachable, !dbg !14772

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13514, metadata !DIExpression()) #23, !dbg !14774
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14776, !srcloc !13529
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !14778
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()) #23, !dbg !14778
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !14774
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14779
  br i1 %10, label %12, label %11, !dbg !14780

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !14781
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14781
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !14781
  unreachable, !dbg !14781

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !14778
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !14774
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14782
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14783
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !14784
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14129, metadata !DIExpression()) #23, !dbg !14785
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #26, !dbg !14787
  br i1 %14, label %16, label %15, !dbg !14788

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 225) #26, !dbg !14789
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.237, i32 0, i32 0), %struct.k_spinlock* noundef %0) #26, !dbg !14789
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 225) #26, !dbg !14789
  unreachable, !dbg !14789

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !14120, metadata !DIExpression()) #23, !dbg !14790
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14125, metadata !DIExpression()) #23, !dbg !14790
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14129, metadata !DIExpression()) #23, !dbg !14792
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14794
  br i1 %17, label %19, label %18, !dbg !14795

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 225) #26, !dbg !14796
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.237, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14796
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 225) #26, !dbg !14796
  unreachable, !dbg !14796

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !14120, metadata !DIExpression()) #23, !dbg !14790
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #26, !dbg !14797
  ret i32 %21, !dbg !14798
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !14799 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14803, metadata !DIExpression()), !dbg !14808
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14804, metadata !DIExpression()), !dbg !14808
  call void @llvm.dbg.value(metadata i32 0, metadata !14805, metadata !DIExpression()), !dbg !14809
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13514, metadata !DIExpression()) #23, !dbg !14810
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14812, !srcloc !13529
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !14814
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()) #23, !dbg !14814
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !14810
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14815
  br i1 %3, label %5, label %4, !dbg !14816

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !14817
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14817
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !14817
  unreachable, !dbg !14817

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !14814
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !14810
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14818
  call void @llvm.dbg.value(metadata i32 undef, metadata !14807, metadata !DIExpression()), !dbg !14809
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14804, metadata !DIExpression()), !dbg !14808
  call void @llvm.dbg.value(metadata i32 undef, metadata !14805, metadata !DIExpression()), !dbg !14809
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !14819
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14804, metadata !DIExpression()), !dbg !14808
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !14822
  br i1 %8, label %10, label %9, !dbg !14824

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !14825
  br label %10, !dbg !14827

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !14828
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13553, metadata !DIExpression()) #23, !dbg !14828
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14830
  br i1 %11, label %13, label %12, !dbg !14831

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !14832
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.237, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14832
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !14832
  unreachable, !dbg !14832

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !14812
  call void @llvm.dbg.value(metadata i32 %14, metadata !13526, metadata !DIExpression()) #23, !dbg !14814
  call void @llvm.dbg.value(metadata i32 %14, metadata !13520, metadata !DIExpression()) #23, !dbg !14810
  call void @llvm.dbg.value(metadata i32 %14, metadata !14807, metadata !DIExpression()), !dbg !14809
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !14828
  call void @llvm.dbg.value(metadata i32 undef, metadata !13562, metadata !DIExpression()) #23, !dbg !14833
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !14835, !srcloc !13568
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14804, metadata !DIExpression()), !dbg !14808
  call void @llvm.dbg.value(metadata i32 undef, metadata !14805, metadata !DIExpression()), !dbg !14809
  ret %struct.k_thread* %7, !dbg !14836
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !14837 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14841, metadata !DIExpression()), !dbg !14844
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14842, metadata !DIExpression()), !dbg !14844
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.257(%struct._dnode* noundef %0) #24, !dbg !14845
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14843, metadata !DIExpression()), !dbg !14844
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14842, metadata !DIExpression()), !dbg !14844
  ret %struct.k_thread* %3, !dbg !14846
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !14847 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14849, metadata !DIExpression()), !dbg !14854
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14850, metadata !DIExpression()), !dbg !14854
  call void @llvm.dbg.value(metadata i32 0, metadata !14851, metadata !DIExpression()), !dbg !14855
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13514, metadata !DIExpression()) #23, !dbg !14856
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14858, !srcloc !13529
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !14860
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()) #23, !dbg !14860
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !14856
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14861
  br i1 %3, label %5, label %4, !dbg !14862

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !14863
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14863
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !14863
  unreachable, !dbg !14863

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !14860
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !14856
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14864
  call void @llvm.dbg.value(metadata i32 undef, metadata !14853, metadata !DIExpression()), !dbg !14855
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14850, metadata !DIExpression()), !dbg !14854
  call void @llvm.dbg.value(metadata i32 undef, metadata !14851, metadata !DIExpression()), !dbg !14855
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !14865
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14850, metadata !DIExpression()), !dbg !14854
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !14868
  br i1 %8, label %11, label %9, !dbg !14870

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !14871
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !14873
  br label %11, !dbg !14874

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !14875
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13553, metadata !DIExpression()) #23, !dbg !14875
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14877
  br i1 %12, label %14, label %13, !dbg !14878

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !14879
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.237, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14879
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !14879
  unreachable, !dbg !14879

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !14858
  call void @llvm.dbg.value(metadata i32 %15, metadata !13526, metadata !DIExpression()) #23, !dbg !14860
  call void @llvm.dbg.value(metadata i32 %15, metadata !13520, metadata !DIExpression()) #23, !dbg !14856
  call void @llvm.dbg.value(metadata i32 %15, metadata !14853, metadata !DIExpression()), !dbg !14855
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !14875
  call void @llvm.dbg.value(metadata i32 undef, metadata !13562, metadata !DIExpression()) #23, !dbg !14880
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !14882, !srcloc !13568
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14850, metadata !DIExpression()), !dbg !14854
  call void @llvm.dbg.value(metadata i32 undef, metadata !14851, metadata !DIExpression()), !dbg !14855
  ret %struct.k_thread* %7, !dbg !14883
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14884 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14886, metadata !DIExpression()), !dbg !14887
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14684, metadata !DIExpression()) #23, !dbg !14888
  call void @llvm.dbg.value(metadata i32 0, metadata !14685, metadata !DIExpression()) #23, !dbg !14890
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13514, metadata !DIExpression()) #23, !dbg !14891
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14893, !srcloc !13529
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !14895
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()) #23, !dbg !14895
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !14891
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14896
  br i1 %3, label %5, label %4, !dbg !14897

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !14898
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14898
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !14898
  unreachable, !dbg !14898

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !14895
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !14891
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14899
  call void @llvm.dbg.value(metadata i32 undef, metadata !14687, metadata !DIExpression()) #23, !dbg !14890
  call void @llvm.dbg.value(metadata i32 undef, metadata !14685, metadata !DIExpression()) #23, !dbg !14890
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !14900
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !14901
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13553, metadata !DIExpression()) #23, !dbg !14901
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14903
  br i1 %6, label %8, label %7, !dbg !14904

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !14905
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.237, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14905
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !14905
  unreachable, !dbg !14905

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14893
  call void @llvm.dbg.value(metadata i32 %9, metadata !13526, metadata !DIExpression()) #23, !dbg !14895
  call void @llvm.dbg.value(metadata i32 %9, metadata !13520, metadata !DIExpression()) #23, !dbg !14891
  call void @llvm.dbg.value(metadata i32 %9, metadata !14687, metadata !DIExpression()) #23, !dbg !14890
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !14901
  call void @llvm.dbg.value(metadata i32 undef, metadata !13562, metadata !DIExpression()) #23, !dbg !14906
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14908, !srcloc !13568
  call void @llvm.dbg.value(metadata i32 1, metadata !14685, metadata !DIExpression()) #23, !dbg !14890
  call void @llvm.dbg.value(metadata i32 undef, metadata !14685, metadata !DIExpression()) #23, !dbg !14890
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !14909
  ret void, !dbg !14910
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14911 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14913, metadata !DIExpression()), !dbg !14919
  call void @llvm.dbg.value(metadata i32 %1, metadata !14914, metadata !DIExpression()), !dbg !14919
  call void @llvm.dbg.value(metadata i8 0, metadata !14915, metadata !DIExpression()), !dbg !14919
  call void @llvm.dbg.value(metadata i32 0, metadata !14916, metadata !DIExpression()), !dbg !14920
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13514, metadata !DIExpression()) #23, !dbg !14921
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14923, !srcloc !13529
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !14925
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()) #23, !dbg !14925
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !14921
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14926
  br i1 %4, label %6, label %5, !dbg !14927

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !14928
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14928
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !14928
  unreachable, !dbg !14928

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !14925
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !14921
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14929
  call void @llvm.dbg.value(metadata i32 undef, metadata !14918, metadata !DIExpression()), !dbg !14920
  call void @llvm.dbg.value(metadata i8 poison, metadata !14915, metadata !DIExpression()), !dbg !14919
  call void @llvm.dbg.value(metadata i32 undef, metadata !14916, metadata !DIExpression()), !dbg !14920
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !14930
  call void @llvm.dbg.value(metadata i1 %8, metadata !14915, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14919
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %10 = bitcast %union.anon.2* %9 to i8*
  %11 = trunc i32 %1 to i8
  br i1 %8, label %12, label %17, !dbg !14933

12:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13706, metadata !DIExpression()) #23, !dbg !14934
  %13 = load i8, i8* %7, align 1, !dbg !14940
  %14 = and i8 %13, 127, !dbg !14940
  store i8 %14, i8* %7, align 1, !dbg !14940
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13714, metadata !DIExpression()) #23, !dbg !14941
  tail call void @z_priq_rb_remove(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #26, !dbg !14943
  store i8 %11, i8* %10, align 2, !dbg !14944
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13723, metadata !DIExpression()) #23, !dbg !14945
  %15 = load i8, i8* %7, align 1, !dbg !14947
  %16 = or i8 %15, -128, !dbg !14947
  store i8 %16, i8* %7, align 1, !dbg !14947
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13730, metadata !DIExpression()) #23, !dbg !14948
  tail call void @z_priq_rb_add(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #26, !dbg !14950
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !14951
  br label %18, !dbg !14952

17:                                               ; preds = %6
  store i8 %11, i8* %10, align 2, !dbg !14953
  br label %18

18:                                               ; preds = %12, %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !14955
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13553, metadata !DIExpression()) #23, !dbg !14955
  %19 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14957
  br i1 %19, label %21, label %20, !dbg !14958

20:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !14959
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.237, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14959
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !14959
  unreachable, !dbg !14959

21:                                               ; preds = %18
  %22 = extractvalue { i32, i32 } %3, 0, !dbg !14923
  call void @llvm.dbg.value(metadata i32 %22, metadata !13526, metadata !DIExpression()) #23, !dbg !14925
  call void @llvm.dbg.value(metadata i32 %22, metadata !13520, metadata !DIExpression()) #23, !dbg !14921
  call void @llvm.dbg.value(metadata i32 %22, metadata !14918, metadata !DIExpression()), !dbg !14920
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !14955
  call void @llvm.dbg.value(metadata i32 undef, metadata !13562, metadata !DIExpression()) #23, !dbg !14960
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %22) #23, !dbg !14962, !srcloc !13568
  call void @llvm.dbg.value(metadata i8 poison, metadata !14915, metadata !DIExpression()), !dbg !14919
  call void @llvm.dbg.value(metadata i32 undef, metadata !14916, metadata !DIExpression()), !dbg !14920
  ret i1 %8, !dbg !14963
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14964 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14968, metadata !DIExpression()), !dbg !14971
  call void @llvm.dbg.value(metadata i32 %1, metadata !14969, metadata !DIExpression()), !dbg !14971
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !14972
  call void @llvm.dbg.value(metadata i1 %3, metadata !14970, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14971
  br i1 %3, label %4, label %12, !dbg !14973

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14975
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !14976
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !14976
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !14976
  %9 = load i8, i8* %8, align 1, !dbg !14976
  %10 = icmp eq i8 %9, 0, !dbg !14977
  br i1 %10, label %11, label %12, !dbg !14978

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !14979
  br label %12, !dbg !14981

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !14982
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !14983 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14985, metadata !DIExpression()), !dbg !14988
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13514, metadata !DIExpression()) #23, !dbg !14989
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14991, !srcloc !13529
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !14993
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()) #23, !dbg !14993
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !14989
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14994
  br i1 %2, label %4, label %3, !dbg !14995

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !14996
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14996
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !14996
  unreachable, !dbg !14996

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !14993
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !14989
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14997
  call void @llvm.dbg.value(metadata i32 undef, metadata !14987, metadata !DIExpression()), !dbg !14988
  call void @llvm.dbg.value(metadata i32 undef, metadata !14985, metadata !DIExpression()), !dbg !14988
  tail call fastcc void @z_sched_lock() #24, !dbg !14998
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !15001
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13553, metadata !DIExpression()) #23, !dbg !15001
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15003
  br i1 %5, label %7, label %6, !dbg !15004

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !15005
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.237, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15005
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !15005
  unreachable, !dbg !15005

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !14991
  call void @llvm.dbg.value(metadata i32 %8, metadata !13526, metadata !DIExpression()) #23, !dbg !14993
  call void @llvm.dbg.value(metadata i32 %8, metadata !13520, metadata !DIExpression()) #23, !dbg !14989
  call void @llvm.dbg.value(metadata i32 %8, metadata !14987, metadata !DIExpression()), !dbg !14988
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !15001
  call void @llvm.dbg.value(metadata i32 undef, metadata !13562, metadata !DIExpression()) #23, !dbg !15006
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15008, !srcloc !13568
  call void @llvm.dbg.value(metadata i32 1, metadata !14985, metadata !DIExpression()), !dbg !14988
  call void @llvm.dbg.value(metadata i32 undef, metadata !14985, metadata !DIExpression()), !dbg !14988
  ret void, !dbg !15009
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15010 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15011, !srcloc !14176
  call void @llvm.dbg.value(metadata i32 %1, metadata !14172, metadata !DIExpression()) #23, !dbg !15016
  %2 = icmp eq i32 %1, 0, !dbg !15017
  br i1 %2, label %4, label %3, !dbg !15018

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.269, i32 0, i32 0), i32 noundef 253) #26, !dbg !15019
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.240, i32 0, i32 0)) #26, !dbg !15019
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.269, i32 0, i32 0), i32 noundef 253) #26, !dbg !15019
  unreachable, !dbg !15019

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15021
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15021
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15021
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15021
  %9 = load i8, i8* %8, align 1, !dbg !15021
  %10 = icmp eq i8 %9, 1, !dbg !15021
  br i1 %10, label %11, label %12, !dbg !15024

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.269, i32 0, i32 0), i32 noundef 254) #26, !dbg !15025
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.240, i32 0, i32 0)) #26, !dbg !15025
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.269, i32 0, i32 0), i32 noundef 254) #26, !dbg !15025
  unreachable, !dbg !15025

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !15027
  store i8 %13, i8* %8, align 1, !dbg !15027
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15028, !srcloc !15030
  ret void, !dbg !15031
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15032 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15034, metadata !DIExpression()), !dbg !15037
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13514, metadata !DIExpression()) #23, !dbg !15038
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15040, !srcloc !13529
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !15042
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()) #23, !dbg !15042
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !15038
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15043
  br i1 %2, label %4, label %3, !dbg !15044

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !15045
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15045
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !15045
  unreachable, !dbg !15045

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !15042
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !15038
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15046
  call void @llvm.dbg.value(metadata i32 undef, metadata !15036, metadata !DIExpression()), !dbg !15037
  call void @llvm.dbg.value(metadata i32 undef, metadata !15034, metadata !DIExpression()), !dbg !15037
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15047
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15047
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15047
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15047
  %9 = load i8, i8* %8, align 1, !dbg !15047
  %10 = icmp eq i8 %9, 0, !dbg !15047
  br i1 %10, label %11, label %12, !dbg !15052

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 999) #26, !dbg !15053
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.240, i32 0, i32 0)) #26, !dbg !15053
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 999) #26, !dbg !15053
  unreachable, !dbg !15053

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15055, !srcloc !14176
  call void @llvm.dbg.value(metadata i32 %13, metadata !14172, metadata !DIExpression()) #23, !dbg !15060
  %14 = icmp eq i32 %13, 0, !dbg !15061
  br i1 %14, label %16, label %15, !dbg !15062

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 1000) #26, !dbg !15063
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.240, i32 0, i32 0)) #26, !dbg !15063
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 1000) #26, !dbg !15063
  unreachable, !dbg !15063

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15065
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !15066
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !15066
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !15066
  %21 = load i8, i8* %20, align 1, !dbg !15067
  %22 = add i8 %21, 1, !dbg !15067
  store i8 %22, i8* %20, align 1, !dbg !15067
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15068
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !15069
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13553, metadata !DIExpression()) #23, !dbg !15069
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15071
  br i1 %23, label %25, label %24, !dbg !15072

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !15073
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.237, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15073
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !15073
  unreachable, !dbg !15073

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !15040
  call void @llvm.dbg.value(metadata i32 %26, metadata !13526, metadata !DIExpression()) #23, !dbg !15042
  call void @llvm.dbg.value(metadata i32 %26, metadata !13520, metadata !DIExpression()) #23, !dbg !15038
  call void @llvm.dbg.value(metadata i32 %26, metadata !15036, metadata !DIExpression()), !dbg !15037
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !15069
  call void @llvm.dbg.value(metadata i32 undef, metadata !13562, metadata !DIExpression()) #23, !dbg !15074
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !15076, !srcloc !13568
  call void @llvm.dbg.value(metadata i32 1, metadata !15034, metadata !DIExpression()), !dbg !15037
  call void @llvm.dbg.value(metadata i32 undef, metadata !15034, metadata !DIExpression()), !dbg !15037
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15077
  ret void, !dbg !15078
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !15079 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15080
  ret %struct.k_thread* %1, !dbg !15081
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) #8 !dbg !15082 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15084, metadata !DIExpression()), !dbg !15089
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15085, metadata !DIExpression()), !dbg !15089
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15090
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15086, metadata !DIExpression()), !dbg !15089
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15091
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15087, metadata !DIExpression()), !dbg !15089
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !15092
  call void @llvm.dbg.value(metadata i32 %5, metadata !15088, metadata !DIExpression()), !dbg !15089
  %6 = icmp sgt i32 %5, 0, !dbg !15093
  br i1 %6, label %17, label %7, !dbg !15095

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15096
  br i1 %8, label %17, label %9, !dbg !15098

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15099
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15099
  %12 = load i32, i32* %11, align 8, !dbg !15099
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15101
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15101
  %15 = load i32, i32* %14, align 8, !dbg !15101
  %16 = icmp ult i32 %12, %15, !dbg !15102
  br label %17, !dbg !15103

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15104
  ret i1 %18, !dbg !15105
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #17 !dbg !15106 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15116, metadata !DIExpression()), !dbg !15120
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15121
  %3 = load i32, i32* %2, align 4, !dbg !15121
  %4 = icmp eq i32 %3, 0, !dbg !15123
  br i1 %4, label %10, label %5, !dbg !15124

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15117, metadata !DIExpression()), !dbg !15120
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15125, !range !7158
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15126
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15118, metadata !DIExpression()), !dbg !15120
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.257(%struct._dnode* noundef %7) #24, !dbg !15127
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15119, metadata !DIExpression()), !dbg !15120
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15117, metadata !DIExpression()), !dbg !15120
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15120
  ret %struct.k_thread* %11, !dbg !15128
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15129 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15133, metadata !DIExpression()), !dbg !15136
  call void @llvm.dbg.value(metadata i32 0, metadata !15134, metadata !DIExpression()), !dbg !15136
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.274(%struct._wait_q_t* noundef %0) #24, !dbg !15137
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15135, metadata !DIExpression()), !dbg !15136
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15138
  br i1 %3, label %8, label %4, !dbg !15139

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !15140
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !15142
  call void @llvm.dbg.value(metadata i32 1, metadata !15134, metadata !DIExpression()), !dbg !15136
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.274(%struct._wait_q_t* noundef %0) #24, !dbg !15137
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15135, metadata !DIExpression()), !dbg !15136
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15138
  br i1 %7, label %8, label %4, !dbg !15139, !llvm.loop !15143

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15136
  ret i32 %9, !dbg !15145
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.274(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !15146 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15148, metadata !DIExpression()), !dbg !15149
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15150
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.257(%struct._dnode* noundef %2) #24, !dbg !15151
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15152
  ret %struct.k_thread* %4, !dbg !15153
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !15154 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15163, metadata !DIExpression()), !dbg !15164
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, i32 0, i32 0, !dbg !15165
  store %struct.rbnode* null, %struct.rbnode** %2, align 4, !dbg !15165
  %3 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, i32 0, i32 1, !dbg !15165
  store i1 (%struct.rbnode*, %struct.rbnode*)* @z_priq_rb_lessthan, i1 (%struct.rbnode*, %struct.rbnode*)** %3, align 4, !dbg !15165
  %4 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, i32 0, i32 2, !dbg !15165
  store i32 0, i32* %4, align 4, !dbg !15165
  %5 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, i32 1, !dbg !15165
  store i32 0, i32* %5, align 4, !dbg !15165
  ret void, !dbg !15166
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15167 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !15168
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !15169
  ret void, !dbg !15170
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !15171 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15176, metadata !DIExpression()), !dbg !15177
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15178
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15178
  %4 = load i8, i8* %3, align 2, !dbg !15178
  %5 = sext i8 %4 to i32, !dbg !15179
  ret i32 %5, !dbg !15180
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15181 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15185, metadata !DIExpression()), !dbg !15188
  call void @llvm.dbg.value(metadata i32 %1, metadata !15186, metadata !DIExpression()), !dbg !15188
  %3 = add i32 %1, 29, !dbg !15189
  %4 = icmp ult i32 %3, 69, !dbg !15189
  br i1 %4, label %6, label %5, !dbg !15189

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.279, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 1331) #26, !dbg !15193
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.280, i32 0, i32 0), i32 noundef %1, i32 noundef 39, i32 noundef -29) #26, !dbg !15193
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 1331) #26, !dbg !15193
  unreachable, !dbg !15193

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15195, !srcloc !14176
  call void @llvm.dbg.value(metadata i32 %7, metadata !14172, metadata !DIExpression()) #23, !dbg !15200
  %8 = icmp eq i32 %7, 0, !dbg !15201
  br i1 %8, label %10, label %9, !dbg !15202

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 1332) #26, !dbg !15203
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.240, i32 0, i32 0)) #26, !dbg !15203
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 1332) #26, !dbg !15203
  unreachable, !dbg !15203

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15187, metadata !DIExpression()), !dbg !15188
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15205
  ret void, !dbg !15206
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15207 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !15208
  br i1 %1, label %8, label %2, !dbg !15209

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !15210
  br i1 %3, label %8, label %4, !dbg !15211

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15212
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !15213
  %7 = xor i1 %6, true, !dbg !15211
  br label %8, !dbg !15211

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15214
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !15215 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15216, !range !4025
  %2 = icmp eq i8 %1, 0, !dbg !15216
  ret i1 %2, !dbg !15217
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15218 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15221, !srcloc !14176
  call void @llvm.dbg.value(metadata i32 %1, metadata !14172, metadata !DIExpression()) #23, !dbg !15226
  %2 = icmp eq i32 %1, 0, !dbg !15227
  br i1 %2, label %4, label %3, !dbg !15228

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 1392) #26, !dbg !15229
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.240, i32 0, i32 0)) #26, !dbg !15229
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 1392) #26, !dbg !15229
  unreachable, !dbg !15229

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13514, metadata !DIExpression()) #23, !dbg !15231
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15233, !srcloc !13529
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !15235
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()) #23, !dbg !15235
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !15231
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15236
  br i1 %6, label %8, label %7, !dbg !15237

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !15238
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15238
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !15238
  unreachable, !dbg !15238

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !15235
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !15231
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15239
  call void @llvm.dbg.value(metadata i32 undef, metadata !15220, metadata !DIExpression()), !dbg !15240
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15241
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13706, metadata !DIExpression()) #23, !dbg !15244
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !15246
  %11 = load i8, i8* %10, align 1, !dbg !15247
  %12 = and i8 %11, 127, !dbg !15247
  store i8 %12, i8* %10, align 1, !dbg !15247
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13714, metadata !DIExpression()) #23, !dbg !15248
  tail call void @z_priq_rb_remove(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %9) #26, !dbg !15250
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15251
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13723, metadata !DIExpression()) #23, !dbg !15252
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !15254
  %15 = load i8, i8* %14, align 1, !dbg !15255
  %16 = or i8 %15, -128, !dbg !15255
  store i8 %16, i8* %14, align 1, !dbg !15255
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13730, metadata !DIExpression()) #23, !dbg !15256
  tail call void @z_priq_rb_add(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %13) #26, !dbg !15258
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15259
  call void @llvm.dbg.value(metadata i32 undef, metadata !14120, metadata !DIExpression()) #23, !dbg !15260
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14125, metadata !DIExpression()) #23, !dbg !15260
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14129, metadata !DIExpression()) #23, !dbg !15262
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15264
  br i1 %17, label %19, label %18, !dbg !15265

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 225) #26, !dbg !15266
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.237, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15266
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 225) #26, !dbg !15266
  unreachable, !dbg !15266

19:                                               ; preds = %8
  %20 = extractvalue { i32, i32 } %5, 0, !dbg !15233
  call void @llvm.dbg.value(metadata i32 %20, metadata !13526, metadata !DIExpression()) #23, !dbg !15235
  call void @llvm.dbg.value(metadata i32 %20, metadata !13520, metadata !DIExpression()) #23, !dbg !15231
  call void @llvm.dbg.value(metadata i32 %20, metadata !15220, metadata !DIExpression()), !dbg !15240
  call void @llvm.dbg.value(metadata i32 undef, metadata !14120, metadata !DIExpression()) #23, !dbg !15260
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #26, !dbg !15267
  ret void, !dbg !15268
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15269 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15273, metadata !DIExpression()), !dbg !15276
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15277, !srcloc !14176
  call void @llvm.dbg.value(metadata i32 %3, metadata !14172, metadata !DIExpression()) #23, !dbg !15282
  %4 = icmp eq i32 %3, 0, !dbg !15283
  br i1 %4, label %6, label %5, !dbg !15284

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 1463) #26, !dbg !15285
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.240, i32 0, i32 0)) #26, !dbg !15285
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 1463) #26, !dbg !15285
  unreachable, !dbg !15285

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !15287
  br i1 %7, label %8, label %10, !dbg !15289

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15290
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #24, !dbg !15292
  br label %15, !dbg !15293

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !15274, metadata !DIExpression()), !dbg !15276
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !15294
  %12 = sext i32 %11 to i64, !dbg !15294
  call void @llvm.dbg.value(metadata i64 %12, metadata !15274, metadata !DIExpression()), !dbg !15276
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64.283(i64 noundef %12) #24, !dbg !15295
  %14 = trunc i64 %13 to i32, !dbg !15295
  call void @llvm.dbg.value(metadata i32 %14, metadata !15275, metadata !DIExpression()), !dbg !15276
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !15276
  ret i32 %16, !dbg !15296
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15297 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15301, metadata !DIExpression()), !dbg !15302
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15303, !srcloc !15305
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !15306
  ret void, !dbg !15307
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15308 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15312, metadata !DIExpression()), !dbg !15316
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15317, !srcloc !14176
  call void @llvm.dbg.value(metadata i32 %2, metadata !14172, metadata !DIExpression()) #23, !dbg !15322
  %3 = icmp eq i32 %2, 0, !dbg !15323
  br i1 %3, label %5, label %4, !dbg !15324

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 1420) #26, !dbg !15325
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.240, i32 0, i32 0)) #26, !dbg !15325
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 1420) #26, !dbg !15325
  unreachable, !dbg !15325

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !15327
  br i1 %6, label %7, label %8, !dbg !15329

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #24, !dbg !15330
  br label %43, !dbg !15332

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !15314, metadata !DIExpression()), !dbg !15316
  %9 = icmp sgt i64 %0, -3, !dbg !15333
  br i1 %9, label %10, label %14, !dbg !15335

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !15336
  %12 = trunc i64 %0 to i32, !dbg !15338
  %13 = add i32 %11, %12, !dbg !15338
  call void @llvm.dbg.value(metadata i32 %13, metadata !15313, metadata !DIExpression()), !dbg !15316
  br label %17, !dbg !15339

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !15340
  %16 = sub i32 -2, %15, !dbg !15340
  call void @llvm.dbg.value(metadata i32 %16, metadata !15313, metadata !DIExpression()), !dbg !15316
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !15342
  call void @llvm.dbg.value(metadata i32 %18, metadata !15313, metadata !DIExpression()), !dbg !15316
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13514, metadata !DIExpression()) #23, !dbg !15343
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15345, !srcloc !13529
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !15347
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()) #23, !dbg !15347
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !15343
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15348
  br i1 %20, label %22, label %21, !dbg !15349

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !15350
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15350
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !15350
  unreachable, !dbg !15350

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !15347
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !15343
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15351
  call void @llvm.dbg.value(metadata i32 undef, metadata !15315, metadata !DIExpression()), !dbg !15316
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15352
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !15353
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #24, !dbg !15354
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15355
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15356
  tail call fastcc void @z_add_thread_timeout.252(%struct.k_thread* noundef %24, [1 x i64] %25) #24, !dbg !15356
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15357
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #24, !dbg !15358
  call void @llvm.dbg.value(metadata i32 undef, metadata !14120, metadata !DIExpression()) #23, !dbg !15359
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14125, metadata !DIExpression()) #23, !dbg !15359
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14129, metadata !DIExpression()) #23, !dbg !15361
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15363
  br i1 %27, label %29, label %28, !dbg !15364

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 225) #26, !dbg !15365
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.237, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15365
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 225) #26, !dbg !15365
  unreachable, !dbg !15365

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !15345
  call void @llvm.dbg.value(metadata i32 %30, metadata !13526, metadata !DIExpression()) #23, !dbg !15347
  call void @llvm.dbg.value(metadata i32 %30, metadata !13520, metadata !DIExpression()) #23, !dbg !15343
  call void @llvm.dbg.value(metadata i32 %30, metadata !15315, metadata !DIExpression()), !dbg !15316
  call void @llvm.dbg.value(metadata i32 undef, metadata !14120, metadata !DIExpression()) #23, !dbg !15359
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #26, !dbg !15366
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15367
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #24, !dbg !15367
  br i1 %33, label %34, label %35, !dbg !15370

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 1448) #26, !dbg !15371
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.240, i32 0, i32 0)) #26, !dbg !15371
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 1448) #26, !dbg !15371
  unreachable, !dbg !15371

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !15373
  %37 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !15374
  %38 = zext i32 %37 to i64, !dbg !15374
  %39 = sub nsw i64 %36, %38, !dbg !15375
  call void @llvm.dbg.value(metadata i64 %39, metadata !15312, metadata !DIExpression()), !dbg !15316
  %40 = icmp sgt i64 %39, 0, !dbg !15376
  %41 = select i1 %40, i64 %39, i64 0, !dbg !15376
  %42 = trunc i64 %41 to i32, !dbg !15376
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !15316
  ret i32 %44, !dbg !15377
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64.283(i64 noundef %0) unnamed_addr #4 !dbg !15378 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15380, metadata !DIExpression()), !dbg !15381
  call void @llvm.dbg.value(metadata i64 %0, metadata !13574, metadata !DIExpression()), !dbg !15382
  call void @llvm.dbg.value(metadata i32 10000, metadata !13577, metadata !DIExpression()), !dbg !15382
  call void @llvm.dbg.value(metadata i32 1000, metadata !13578, metadata !DIExpression()), !dbg !15382
  call void @llvm.dbg.value(metadata i8 1, metadata !13579, metadata !DIExpression()), !dbg !15382
  call void @llvm.dbg.value(metadata i1 false, metadata !13580, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15382
  call void @llvm.dbg.value(metadata i1 false, metadata !13581, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15382
  call void @llvm.dbg.value(metadata i8 0, metadata !13582, metadata !DIExpression()), !dbg !15382
  call void @llvm.dbg.value(metadata i1 false, metadata !13583, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15382
  call void @llvm.dbg.value(metadata i1 true, metadata !13584, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15382
  call void @llvm.dbg.value(metadata i64 0, metadata !13585, metadata !DIExpression()), !dbg !15382
  call void @llvm.dbg.value(metadata i64 0, metadata !13585, metadata !DIExpression()), !dbg !15382
  call void @llvm.dbg.value(metadata i64 %0, metadata !13574, metadata !DIExpression()), !dbg !15382
  %2 = udiv i64 %0, 10, !dbg !15384
  ret i64 %2, !dbg !15388
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15389 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15390, !srcloc !15392
  tail call void @z_impl_k_yield() #24, !dbg !15393
  ret void, !dbg !15394
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !15395 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15399, metadata !DIExpression()), !dbg !15401
  %2 = sext i32 %0 to i64, !dbg !15402
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !15403
  call void @llvm.dbg.value(metadata i64 %3, metadata !15400, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15401
  %4 = shl i64 %3, 32, !dbg !15404
  %5 = ashr exact i64 %4, 32, !dbg !15404
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !15405
  call void @llvm.dbg.value(metadata i32 %6, metadata !15400, metadata !DIExpression()), !dbg !15401
  %7 = sext i32 %6 to i64, !dbg !15406
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !15407
  %9 = trunc i64 %8 to i32, !dbg !15407
  ret i32 %9, !dbg !15408
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !15409 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15411, metadata !DIExpression()), !dbg !15412
  call void @llvm.dbg.value(metadata i64 %0, metadata !13574, metadata !DIExpression()), !dbg !15413
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13577, metadata !DIExpression()), !dbg !15413
  call void @llvm.dbg.value(metadata i32 10000, metadata !13578, metadata !DIExpression()), !dbg !15413
  call void @llvm.dbg.value(metadata i8 1, metadata !13579, metadata !DIExpression()), !dbg !15413
  call void @llvm.dbg.value(metadata i1 false, metadata !13580, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15413
  call void @llvm.dbg.value(metadata i1 true, metadata !13581, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15413
  call void @llvm.dbg.value(metadata i8 0, metadata !13582, metadata !DIExpression()), !dbg !15413
  call void @llvm.dbg.value(metadata i1 false, metadata !13583, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15413
  call void @llvm.dbg.value(metadata i1 true, metadata !13584, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15413
  call void @llvm.dbg.value(metadata i64 0, metadata !13585, metadata !DIExpression()), !dbg !15413
  call void @llvm.dbg.value(metadata i64 0, metadata !13585, metadata !DIExpression()), !dbg !15413
  %2 = add i64 %0, 99, !dbg !15415
  call void @llvm.dbg.value(metadata i64 %2, metadata !13574, metadata !DIExpression()), !dbg !15413
  %3 = udiv i64 %2, 100, !dbg !15416
  ret i64 %3, !dbg !15417
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !15418 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15420, metadata !DIExpression()), !dbg !15421
  call void @llvm.dbg.value(metadata i64 %0, metadata !13574, metadata !DIExpression()), !dbg !15422
  call void @llvm.dbg.value(metadata i32 10000, metadata !13577, metadata !DIExpression()), !dbg !15422
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13578, metadata !DIExpression()), !dbg !15422
  call void @llvm.dbg.value(metadata i8 1, metadata !13579, metadata !DIExpression()), !dbg !15422
  call void @llvm.dbg.value(metadata i1 false, metadata !13580, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15422
  call void @llvm.dbg.value(metadata i1 false, metadata !13581, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15422
  call void @llvm.dbg.value(metadata i8 0, metadata !13582, metadata !DIExpression()), !dbg !15422
  call void @llvm.dbg.value(metadata i1 true, metadata !13583, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15422
  call void @llvm.dbg.value(metadata i1 false, metadata !13584, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15422
  call void @llvm.dbg.value(metadata i64 0, metadata !13585, metadata !DIExpression()), !dbg !15422
  call void @llvm.dbg.value(metadata i64 0, metadata !13585, metadata !DIExpression()), !dbg !15422
  %2 = mul i64 %0, 100, !dbg !15424
  ret i64 %2, !dbg !15426
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15427 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15429, metadata !DIExpression()), !dbg !15430
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !15431
  br i1 %2, label %14, label %3, !dbg !15433

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15434
  %5 = icmp slt i32 %4, 0, !dbg !15436
  br i1 %5, label %6, label %10, !dbg !15437

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15438
  %8 = load i8, i8* %7, align 1, !dbg !15438
  %9 = icmp eq i8 %8, 16, !dbg !15441
  br i1 %9, label %10, label %14, !dbg !15442

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !15443
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15444
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15445, !srcloc !14176
  call void @llvm.dbg.value(metadata i32 %11, metadata !14172, metadata !DIExpression()) #23, !dbg !15449
  %12 = icmp eq i32 %11, 0, !dbg !15450
  br i1 %12, label %13, label %14, !dbg !15451

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15452
  br label %14, !dbg !15454

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !15455
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15456 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15458, metadata !DIExpression()), !dbg !15459
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15460
  %3 = load i8, i8* %2, align 1, !dbg !15460
  %4 = and i8 %3, 2, !dbg !15461
  %5 = icmp ne i8 %4, 0, !dbg !15462
  ret i1 %5, !dbg !15463
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !15464 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15469
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15468, metadata !DIExpression()), !dbg !15470
  ret %struct.k_thread* %1, !dbg !15471
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !15472 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15473, !srcloc !14176
  call void @llvm.dbg.value(metadata i32 %1, metadata !14172, metadata !DIExpression()) #23, !dbg !15476
  %2 = icmp eq i32 %1, 0, !dbg !15477
  br i1 %2, label %3, label %8, !dbg !15478

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15479
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !15480
  %6 = icmp ne i32 %5, 0, !dbg !15478
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !15481
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15482 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15484, metadata !DIExpression()), !dbg !15486
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13514, metadata !DIExpression()) #23, !dbg !15487
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15489, !srcloc !13529
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !15491
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()) #23, !dbg !15491
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !15487
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15492
  br i1 %3, label %5, label %4, !dbg !15493

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !15494
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15494
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !15494
  unreachable, !dbg !15494

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15489
  call void @llvm.dbg.value(metadata i32 %6, metadata !13526, metadata !DIExpression()) #23, !dbg !15491
  call void @llvm.dbg.value(metadata i32 %6, metadata !13520, metadata !DIExpression()) #23, !dbg !15487
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15495
  call void @llvm.dbg.value(metadata i32 %6, metadata !15485, metadata !DIExpression()), !dbg !15486
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !15496
  %8 = load i8, i8* %7, align 4, !dbg !15496
  %9 = and i8 %8, 1, !dbg !15498
  %10 = icmp eq i8 %9, 0, !dbg !15499
  br i1 %10, label %15, label %11, !dbg !15500

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !15501
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13553, metadata !DIExpression()) #23, !dbg !15501
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15504
  br i1 %12, label %14, label %13, !dbg !15505

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !15506
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.237, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15506
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !15506
  unreachable, !dbg !15506

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !13548, metadata !DIExpression()) #23, !dbg !15501
  call void @llvm.dbg.value(metadata i32 %6, metadata !13562, metadata !DIExpression()) #23, !dbg !15507
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15509, !srcloc !13568
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 1731) #26, !dbg !15510
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.290, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #26, !dbg !15510
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 1731) #26, !dbg !15510
  unreachable, !dbg !15510

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15514
  %17 = load i8, i8* %16, align 1, !dbg !15514
  %18 = and i8 %17, 8, !dbg !15516
  %19 = icmp eq i8 %18, 0, !dbg !15517
  br i1 %19, label %24, label %20, !dbg !15518

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !15519
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13553, metadata !DIExpression()) #23, !dbg !15519
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15522
  br i1 %21, label %23, label %22, !dbg !15523

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !15524
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.237, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15524
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !15524
  unreachable, !dbg !15524

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !13548, metadata !DIExpression()) #23, !dbg !15519
  call void @llvm.dbg.value(metadata i32 %6, metadata !13562, metadata !DIExpression()) #23, !dbg !15525
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15527, !srcloc !13568
  br label %39, !dbg !15528

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !15529
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15530
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !15532
  br i1 %26, label %27, label %35, !dbg !15533

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15534, !srcloc !14176
  call void @llvm.dbg.value(metadata i32 %28, metadata !14172, metadata !DIExpression()) #23, !dbg !15537
  %29 = icmp eq i32 %28, 0, !dbg !15538
  br i1 %29, label %30, label %35, !dbg !15539

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !14120, metadata !DIExpression()) #23, !dbg !15540
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14125, metadata !DIExpression()) #23, !dbg !15540
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14129, metadata !DIExpression()) #23, !dbg !15543
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15545
  br i1 %31, label %33, label %32, !dbg !15546

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 225) #26, !dbg !15547
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.237, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15547
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 225) #26, !dbg !15547
  unreachable, !dbg !15547

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !14120, metadata !DIExpression()) #23, !dbg !15540
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #26, !dbg !15548
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 1778) #26, !dbg !15549
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.291, i32 0, i32 0)) #26, !dbg !15549
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 1778) #26, !dbg !15549
  unreachable, !dbg !15549

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !15553
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13553, metadata !DIExpression()) #23, !dbg !15553
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15555
  br i1 %36, label %38, label %37, !dbg !15556

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !15557
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.237, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15557
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !15557
  unreachable, !dbg !15557

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !13548, metadata !DIExpression()) #23, !dbg !15553
  call void @llvm.dbg.value(metadata i32 %6, metadata !13562, metadata !DIExpression()) #23, !dbg !15558
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15560, !srcloc !13568
  br label %39, !dbg !15561

39:                                               ; preds = %38, %23
  ret void, !dbg !15561
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15562 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15564, metadata !DIExpression()), !dbg !15565
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15566
  %3 = load i8, i8* %2, align 1, !dbg !15566
  %4 = and i8 %3, 8, !dbg !15568
  %5 = icmp eq i8 %4, 0, !dbg !15569
  br i1 %5, label %6, label %20, !dbg !15570

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !15571
  %8 = or i8 %7, 8, !dbg !15571
  store i8 %8, i8* %2, align 1, !dbg !15571
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !15573
  br i1 %9, label %10, label %12, !dbg !15575

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13706, metadata !DIExpression()) #23, !dbg !15576
  %11 = and i8 %8, 95, !dbg !15579
  store i8 %11, i8* %2, align 1, !dbg !15579
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13714, metadata !DIExpression()) #23, !dbg !15580
  tail call void @z_priq_rb_remove(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef nonnull %0) #26, !dbg !15582
  br label %12, !dbg !15583

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15584
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !15584
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !15586
  br i1 %15, label %17, label %16, !dbg !15587

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !15588
  br label %17, !dbg !15590

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !15591
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15592
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #24, !dbg !15593
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15594
  tail call void @z_thread_monitor_exit(%struct.k_thread* noundef nonnull %0) #26, !dbg !15595
  br label %20, !dbg !15596

20:                                               ; preds = %17, %1
  ret void, !dbg !15597
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !15598 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15602, metadata !DIExpression()), !dbg !15604
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.274(%struct._wait_q_t* noundef %0) #24, !dbg !15605
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15603, metadata !DIExpression()), !dbg !15604
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15606
  br i1 %3, label %10, label %4, !dbg !15607

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !15608
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !15610
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15611, metadata !DIExpression()), !dbg !15617
  call void @llvm.dbg.value(metadata i32 0, metadata !15616, metadata !DIExpression()), !dbg !15617
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 10, i32 1, !dbg !15619
  store i32 0, i32* %7, align 4, !dbg !15620
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !15621
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.274(%struct._wait_q_t* noundef %0) #24, !dbg !15605
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !15603, metadata !DIExpression()), !dbg !15604
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !15606
  br i1 %9, label %10, label %4, !dbg !15607, !llvm.loop !15622

10:                                               ; preds = %4, %1
  ret void, !dbg !15624
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !15625 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15630, metadata !DIExpression()), !dbg !15633
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15629, metadata !DIExpression()), !dbg !15633
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13514, metadata !DIExpression()) #23, !dbg !15634
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15636, !srcloc !13529
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !15638
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()) #23, !dbg !15638
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !15634
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15639
  br i1 %4, label %6, label %5, !dbg !15640

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !15641
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15641
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !15641
  unreachable, !dbg !15641

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !15636
  call void @llvm.dbg.value(metadata i32 %7, metadata !13526, metadata !DIExpression()) #23, !dbg !15638
  call void @llvm.dbg.value(metadata i32 %7, metadata !13520, metadata !DIExpression()) #23, !dbg !15634
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15642
  call void @llvm.dbg.value(metadata i32 %7, metadata !15631, metadata !DIExpression()), !dbg !15633
  call void @llvm.dbg.value(metadata i32 0, metadata !15632, metadata !DIExpression()), !dbg !15633
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15643
  %9 = load i8, i8* %8, align 1, !dbg !15643
  %10 = and i8 %9, 8, !dbg !15645
  %11 = icmp eq i8 %10, 0, !dbg !15646
  br i1 %11, label %12, label %35, !dbg !15647

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !15630, metadata !DIExpression()), !dbg !15633
  %14 = icmp eq i64 %13, 0, !dbg !15648
  br i1 %14, label %35, label %15, !dbg !15650

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15651
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !15653
  br i1 %17, label %35, label %18, !dbg !15654

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15655
  %20 = load %struct._wait_q_t*, %struct._wait_q_t** %19, align 8, !dbg !15655
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !15656
  %22 = icmp eq %struct._wait_q_t* %20, %21, !dbg !15657
  br i1 %22, label %35, label %23, !dbg !15658

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15659, !srcloc !14176
  call void @llvm.dbg.value(metadata i32 %24, metadata !14172, metadata !DIExpression()) #23, !dbg !15665
  %25 = icmp eq i32 %24, 0, !dbg !15666
  br i1 %25, label %27, label %26, !dbg !15667

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 1809) #26, !dbg !15668
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.292, i32 0, i32 0)) #26, !dbg !15668
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.239, i32 0, i32 0), i32 noundef 1809) #26, !dbg !15668
  unreachable, !dbg !15668

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15670
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15671
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %struct._wait_q_t* noundef nonnull %29) #24, !dbg !15672
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15673
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #24, !dbg !15674
  call void @llvm.dbg.value(metadata i32 undef, metadata !14120, metadata !DIExpression()) #23, !dbg !15675
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14125, metadata !DIExpression()) #23, !dbg !15675
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14129, metadata !DIExpression()) #23, !dbg !15677
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15679
  br i1 %31, label %33, label %32, !dbg !15680

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 225) #26, !dbg !15681
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.237, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15681
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 225) #26, !dbg !15681
  unreachable, !dbg !15681

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !14120, metadata !DIExpression()) #23, !dbg !15675
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #26, !dbg !15682
  call void @llvm.dbg.value(metadata i32 %34, metadata !15632, metadata !DIExpression()), !dbg !15633
  br label %40, !dbg !15683

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !15684
  call void @llvm.dbg.value(metadata i32 %36, metadata !15632, metadata !DIExpression()), !dbg !15633
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !15685
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13553, metadata !DIExpression()) #23, !dbg !15685
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15687
  br i1 %37, label %39, label %38, !dbg !15688

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !15689
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.237, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15689
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !15689
  unreachable, !dbg !15689

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !13548, metadata !DIExpression()) #23, !dbg !15685
  call void @llvm.dbg.value(metadata i32 %7, metadata !13562, metadata !DIExpression()) #23, !dbg !15690
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !15692, !srcloc !13568
  br label %40, !dbg !15693

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !15633
  ret i32 %41, !dbg !15694
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !15695 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15699, metadata !DIExpression()), !dbg !15707
  call void @llvm.dbg.value(metadata i32 %1, metadata !15700, metadata !DIExpression()), !dbg !15707
  call void @llvm.dbg.value(metadata i8* %2, metadata !15701, metadata !DIExpression()), !dbg !15707
  call void @llvm.dbg.value(metadata i8 0, metadata !15703, metadata !DIExpression()), !dbg !15707
  call void @llvm.dbg.value(metadata i32 0, metadata !15704, metadata !DIExpression()), !dbg !15708
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13514, metadata !DIExpression()) #23, !dbg !15709
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15711, !srcloc !13529
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !15713
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()) #23, !dbg !15713
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !15709
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15714
  br i1 %5, label %7, label %6, !dbg !15715

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !15716
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15716
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #26, !dbg !15716
  unreachable, !dbg !15716

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !13526, metadata !DIExpression()) #23, !dbg !15713
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #23, !dbg !15709
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15717
  call void @llvm.dbg.value(metadata i32 undef, metadata !15706, metadata !DIExpression()), !dbg !15708
  call void @llvm.dbg.value(metadata i8 poison, metadata !15703, metadata !DIExpression()), !dbg !15707
  call void @llvm.dbg.value(metadata i32 undef, metadata !15704, metadata !DIExpression()), !dbg !15708
  %8 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #24, !dbg !15718
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15702, metadata !DIExpression()), !dbg !15707
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !15721
  br i1 %10, label %15, label %11, !dbg !15723

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15724, metadata !DIExpression()), !dbg !15732
  call void @llvm.dbg.value(metadata i32 %1, metadata !15730, metadata !DIExpression()), !dbg !15732
  call void @llvm.dbg.value(metadata i8* %2, metadata !15731, metadata !DIExpression()), !dbg !15732
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15611, metadata !DIExpression()), !dbg !15735
  call void @llvm.dbg.value(metadata i32 %1, metadata !15616, metadata !DIExpression()), !dbg !15735
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 10, i32 1, !dbg !15737
  store i32 %1, i32* %12, align 4, !dbg !15738
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !15739
  store i8* %2, i8** %13, align 4, !dbg !15740
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !15741
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !15742
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #24, !dbg !15743
  call void @llvm.dbg.value(metadata i8 1, metadata !15703, metadata !DIExpression()), !dbg !15707
  br label %15, !dbg !15744

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !15703, metadata !DIExpression()), !dbg !15707
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !15745
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13553, metadata !DIExpression()) #23, !dbg !15745
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15747
  br i1 %16, label %18, label %17, !dbg !15748

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !15749
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.237, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15749
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #26, !dbg !15749
  unreachable, !dbg !15749

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !15707
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !15711
  call void @llvm.dbg.value(metadata i32 %20, metadata !13526, metadata !DIExpression()) #23, !dbg !15713
  call void @llvm.dbg.value(metadata i32 %20, metadata !13520, metadata !DIExpression()) #23, !dbg !15709
  call void @llvm.dbg.value(metadata i32 %20, metadata !15706, metadata !DIExpression()), !dbg !15708
  call void @llvm.dbg.value(metadata i32 undef, metadata !13548, metadata !DIExpression()) #23, !dbg !15745
  call void @llvm.dbg.value(metadata i32 undef, metadata !13562, metadata !DIExpression()) #23, !dbg !15750
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !15752, !srcloc !13568
  call void @llvm.dbg.value(metadata i8 poison, metadata !15703, metadata !DIExpression()), !dbg !15707
  call void @llvm.dbg.value(metadata i32 undef, metadata !15704, metadata !DIExpression()), !dbg !15708
  ret i1 %19, !dbg !15753
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !15754 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15760, metadata !DIExpression()), !dbg !15765
  call void @llvm.dbg.value(metadata i64 undef, metadata !15762, metadata !DIExpression()), !dbg !15765
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15759, metadata !DIExpression()), !dbg !15765
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15761, metadata !DIExpression()), !dbg !15765
  call void @llvm.dbg.value(metadata i8** %4, metadata !15763, metadata !DIExpression()), !dbg !15765
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !15766
  call void @llvm.dbg.value(metadata i32 %6, metadata !15764, metadata !DIExpression()), !dbg !15765
  %7 = icmp eq i8** %4, null, !dbg !15767
  br i1 %7, label %12, label %8, !dbg !15769

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15770
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !15772
  %11 = load i8*, i8** %10, align 4, !dbg !15772
  store i8* %11, i8** %4, align 4, !dbg !15773
  br label %12, !dbg !15774

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !15775
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !15776 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #26, !dbg !15778
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #26, !dbg !15779
  ret void, !dbg !15780
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15781 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !15791, metadata !DIExpression()), !dbg !15808
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15789, metadata !DIExpression()), !dbg !15808
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !15790, metadata !DIExpression()), !dbg !15808
  %5 = icmp eq i64 %4, -1, !dbg !15809
  br i1 %5, label %63, label %6, !dbg !15811

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15812
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.297(%struct._dnode* noundef %7) #24, !dbg !15812
  br i1 %8, label %9, label %10, !dbg !15815

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.300, i32 0, i32 0), i32 noundef 99) #26, !dbg !15816
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.301, i32 0, i32 0)) #26, !dbg !15816
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.300, i32 0, i32 0), i32 noundef 99) #26, !dbg !15816
  unreachable, !dbg !15816

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !15818
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !15819
  call void @llvm.dbg.value(metadata i32 0, metadata !15792, metadata !DIExpression()), !dbg !15820
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15821, metadata !DIExpression()) #23, !dbg !15828
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15830, !srcloc !15836
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #23, !dbg !15837
  call void @llvm.dbg.value(metadata i32 undef, metadata !15834, metadata !DIExpression()) #23, !dbg !15837
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #23, !dbg !15828
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !15838
  br i1 %13, label %15, label %14, !dbg !15841

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #26, !dbg !15842
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !15842
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #26, !dbg !15842
  unreachable, !dbg !15842

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !15830
  call void @llvm.dbg.value(metadata i32 %16, metadata !15833, metadata !DIExpression()) #23, !dbg !15837
  call void @llvm.dbg.value(metadata i32 %16, metadata !15827, metadata !DIExpression()) #23, !dbg !15828
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !15844
  call void @llvm.dbg.value(metadata i32 %16, metadata !15798, metadata !DIExpression()), !dbg !15820
  call void @llvm.dbg.value(metadata i32 undef, metadata !15792, metadata !DIExpression()), !dbg !15820
  %17 = icmp slt i64 %4, -1, !dbg !15845
  br i1 %17, label %18, label %24, !dbg !15846

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !15847
  %20 = add i64 %4, %19, !dbg !15848
  %21 = sub i64 -2, %20, !dbg !15848
  call void @llvm.dbg.value(metadata i64 %21, metadata !15802, metadata !DIExpression()), !dbg !15849
  %22 = icmp sgt i64 %21, 1, !dbg !15850
  %23 = select i1 %22, i64 %21, i64 1, !dbg !15850
  br label %29, !dbg !15851

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !15852
  %26 = tail call fastcc i32 @elapsed.305() #24, !dbg !15854
  %27 = sext i32 %26 to i64, !dbg !15854
  %28 = add nsw i64 %25, %27, !dbg !15855
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !15856
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15857
  store i64 %30, i64* %31, align 8, !dbg !15858
  %32 = tail call fastcc %struct._timeout* @first() #24, !dbg !15859
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !15799, metadata !DIExpression()), !dbg !15861
  %33 = icmp eq %struct._timeout* %32, null, !dbg !15862
  br i1 %33, label %48, label %34, !dbg !15862

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !15863
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !15799, metadata !DIExpression()), !dbg !15861
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !15867
  %38 = load i64, i64* %37, align 8, !dbg !15867
  %39 = icmp slt i64 %35, %38, !dbg !15868
  br i1 %39, label %40, label %44, !dbg !15869

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !15867
  %42 = sub nsw i64 %38, %35, !dbg !15870
  store i64 %42, i64* %41, align 8, !dbg !15870
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !15872
  tail call fastcc void @sys_dlist_insert.306(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #24, !dbg !15873
  br label %49, !dbg !15874

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !15875
  store i64 %45, i64* %31, align 8, !dbg !15875
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #24, !dbg !15876
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !15799, metadata !DIExpression()), !dbg !15861
  %47 = icmp eq %struct._timeout* %46, null, !dbg !15862
  br i1 %47, label %48, label %34, !dbg !15862, !llvm.loop !15877

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.307(%struct._dnode* noundef nonnull %7) #24, !dbg !15879
  br label %49, !dbg !15882

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #24, !dbg !15883
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !15884
  br i1 %51, label %52, label %59, !dbg !15885

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #24, !dbg !15886
  call void @llvm.dbg.value(metadata i32 %53, metadata !15805, metadata !DIExpression()), !dbg !15887
  %54 = icmp ne i32 %53, 0, !dbg !15888
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !15890
  br i1 %57, label %59, label %58, !dbg !15890

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #26, !dbg !15891
  br label %59, !dbg !15893

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !15894, metadata !DIExpression()) #23, !dbg !15900
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15899, metadata !DIExpression()) #23, !dbg !15900
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !15902
  br i1 %60, label %62, label %61, !dbg !15905

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #26, !dbg !15906
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !15906
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #26, !dbg !15906
  unreachable, !dbg !15906

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !15894, metadata !DIExpression()) #23, !dbg !15900
  call void @llvm.dbg.value(metadata i32 %16, metadata !15908, metadata !DIExpression()) #23, !dbg !15911
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !15913, !srcloc !15914
  call void @llvm.dbg.value(metadata i32 undef, metadata !15792, metadata !DIExpression()), !dbg !15820
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !15915
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.297(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15916 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15922, metadata !DIExpression()), !dbg !15923
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15924
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15924
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15925
  ret i1 %4, !dbg !15926
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.305() unnamed_addr #1 !dbg !15927 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !15930
  %2 = icmp eq i32 %1, 0, !dbg !15931
  br i1 %2, label %3, label %5, !dbg !15930

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #26, !dbg !15932
  br label %5, !dbg !15930

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !15930
  ret i32 %6, !dbg !15933
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !15934 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.312() #24, !dbg !15940
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15938, metadata !DIExpression()), !dbg !15941
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !15942
  ret %struct._timeout* %2, !dbg !15943
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.306(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #10 !dbg !15944 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15948, metadata !DIExpression()), !dbg !15952
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15949, metadata !DIExpression()), !dbg !15952
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15953
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15953
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15950, metadata !DIExpression()), !dbg !15952
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15954
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15955
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15956
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15957
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15958
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15959
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15960
  ret void, !dbg !15961
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !15962 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15966, metadata !DIExpression()), !dbg !15968
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15969
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.310(%struct._dnode* noundef %2) #24, !dbg !15970
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15967, metadata !DIExpression()), !dbg !15968
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !15971
  ret %struct._timeout* %4, !dbg !15972
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.307(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !15973 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15978, metadata !DIExpression()), !dbg !15981
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15979, metadata !DIExpression()), !dbg !15981
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15982
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15980, metadata !DIExpression()), !dbg !15981
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15983
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !15984
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15985
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !15986
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !15987
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15988
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15989
  ret void, !dbg !15990
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !15991 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !15996
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !15993, metadata !DIExpression()), !dbg !15997
  %2 = tail call fastcc i32 @elapsed.305() #24, !dbg !15998
  call void @llvm.dbg.value(metadata i32 %2, metadata !15994, metadata !DIExpression()), !dbg !15997
  %3 = icmp eq %struct._timeout* %1, null, !dbg !15999
  br i1 %3, label %14, label %4, !dbg !16001

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16002
  %6 = load i64, i64* %5, align 8, !dbg !16002
  %7 = sext i32 %2 to i64, !dbg !16003
  %8 = sub nsw i64 %6, %7, !dbg !16004
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16005
  br i1 %9, label %14, label %10, !dbg !16006

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16007
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16007
  %13 = trunc i64 %12 to i32, !dbg !16007
  call void @llvm.dbg.value(metadata i32 %13, metadata !15995, metadata !DIExpression()), !dbg !15997
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16009
  call void @llvm.dbg.value(metadata i32 %15, metadata !15995, metadata !DIExpression()), !dbg !15997
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16010
  %17 = icmp ne i32 %16, 0, !dbg !16012
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16013
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16013
  call void @llvm.dbg.value(metadata i32 %20, metadata !15995, metadata !DIExpression()), !dbg !15997
  ret i32 %20, !dbg !16014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.310(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !16015 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16019, metadata !DIExpression()), !dbg !16021
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16020, metadata !DIExpression()), !dbg !16021
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16022
  br i1 %2, label %5, label %3, !dbg !16023

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.311(%struct._dnode* noundef nonnull %0) #24, !dbg !16024
  br label %5, !dbg !16023

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16023
  ret %struct._dnode* %6, !dbg !16025
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.311(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !16026 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16028, metadata !DIExpression()), !dbg !16030
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16029, metadata !DIExpression()), !dbg !16030
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16031
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16032
  br i1 %3, label %7, label %4, !dbg !16033

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16034
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16034
  br label %7, !dbg !16033

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16033
  ret %struct._dnode* %8, !dbg !16035
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.312() unnamed_addr #8 !dbg !16036 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16040, metadata !DIExpression()), !dbg !16041
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.313() #24, !dbg !16042
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16042
  ret %struct._dnode* %3, !dbg !16043
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.313() unnamed_addr #8 !dbg !16044 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16048, metadata !DIExpression()), !dbg !16049
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16050
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16051
  ret i1 %2, !dbg !16052
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16053 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16057, metadata !DIExpression()), !dbg !16062
  call void @llvm.dbg.value(metadata i32 -22, metadata !16058, metadata !DIExpression()), !dbg !16062
  call void @llvm.dbg.value(metadata i32 0, metadata !16059, metadata !DIExpression()), !dbg !16063
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15821, metadata !DIExpression()) #23, !dbg !16064
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16066, !srcloc !15836
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #23, !dbg !16068
  call void @llvm.dbg.value(metadata i32 undef, metadata !15834, metadata !DIExpression()) #23, !dbg !16068
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #23, !dbg !16064
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16069
  br i1 %3, label %5, label %4, !dbg !16070

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #26, !dbg !16071
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16071
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #26, !dbg !16071
  unreachable, !dbg !16071

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #23, !dbg !16068
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #23, !dbg !16064
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16072
  call void @llvm.dbg.value(metadata i32 undef, metadata !16061, metadata !DIExpression()), !dbg !16063
  call void @llvm.dbg.value(metadata i32 -22, metadata !16058, metadata !DIExpression()), !dbg !16062
  call void @llvm.dbg.value(metadata i32 undef, metadata !16059, metadata !DIExpression()), !dbg !16063
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16058, metadata !DIExpression()), !dbg !16062
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.297(%struct._dnode* noundef %6) #24, !dbg !16073
  br i1 %7, label %8, label %9, !dbg !16077

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !16078
  call void @llvm.dbg.value(metadata i32 0, metadata !16058, metadata !DIExpression()), !dbg !16062
  br label %9, !dbg !16080

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !16062
  call void @llvm.dbg.value(metadata i32 %10, metadata !16058, metadata !DIExpression()), !dbg !16062
  call void @llvm.dbg.value(metadata i32 undef, metadata !15894, metadata !DIExpression()) #23, !dbg !16081
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15899, metadata !DIExpression()) #23, !dbg !16081
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16083
  br i1 %11, label %13, label %12, !dbg !16084

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #26, !dbg !16085
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16085
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #26, !dbg !16085
  unreachable, !dbg !16085

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !16066
  call void @llvm.dbg.value(metadata i32 %14, metadata !15833, metadata !DIExpression()) #23, !dbg !16068
  call void @llvm.dbg.value(metadata i32 %14, metadata !15827, metadata !DIExpression()) #23, !dbg !16064
  call void @llvm.dbg.value(metadata i32 %14, metadata !16061, metadata !DIExpression()), !dbg !16063
  call void @llvm.dbg.value(metadata i32 undef, metadata !15894, metadata !DIExpression()) #23, !dbg !16081
  call void @llvm.dbg.value(metadata i32 undef, metadata !15908, metadata !DIExpression()) #23, !dbg !16086
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !16088, !srcloc !15914
  call void @llvm.dbg.value(metadata i32 %10, metadata !16058, metadata !DIExpression()), !dbg !16062
  call void @llvm.dbg.value(metadata i32 undef, metadata !16059, metadata !DIExpression()), !dbg !16063
  ret i32 %10, !dbg !16089
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #10 !dbg !16090 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16092, metadata !DIExpression()), !dbg !16093
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !16094
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16096
  br i1 %3, label %10, label %4, !dbg !16097

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16098
  %6 = load i64, i64* %5, align 8, !dbg !16098
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !16100
  %8 = load i64, i64* %7, align 8, !dbg !16101
  %9 = add nsw i64 %8, %6, !dbg !16101
  store i64 %9, i64* %7, align 8, !dbg !16101
  br label %10, !dbg !16102

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16103
  tail call fastcc void @sys_dlist_remove.316(%struct._dnode* noundef %11) #24, !dbg !16104
  ret void, !dbg !16105
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.316(%struct._dnode* nocapture noundef %0) unnamed_addr #10 !dbg !16106 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16110, metadata !DIExpression()), !dbg !16113
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16114
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16114
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16111, metadata !DIExpression()), !dbg !16113
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16115
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16115
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16112, metadata !DIExpression()), !dbg !16113
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16116
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16117
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16118
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16119
  tail call fastcc void @sys_dnode_init.317(%struct._dnode* noundef %0) #24, !dbg !16120
  ret void, !dbg !16121
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.317(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !16122 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16124, metadata !DIExpression()), !dbg !16125
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16126
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16127
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16128
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16129
  ret void, !dbg !16130
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16131 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16137, metadata !DIExpression()), !dbg !16142
  call void @llvm.dbg.value(metadata i64 0, metadata !16138, metadata !DIExpression()), !dbg !16142
  call void @llvm.dbg.value(metadata i32 0, metadata !16139, metadata !DIExpression()), !dbg !16143
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15821, metadata !DIExpression()) #23, !dbg !16144
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16146, !srcloc !15836
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #23, !dbg !16148
  call void @llvm.dbg.value(metadata i32 undef, metadata !15834, metadata !DIExpression()) #23, !dbg !16148
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #23, !dbg !16144
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16149
  br i1 %3, label %5, label %4, !dbg !16150

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #26, !dbg !16151
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16151
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #26, !dbg !16151
  unreachable, !dbg !16151

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #23, !dbg !16148
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #23, !dbg !16144
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16152
  call void @llvm.dbg.value(metadata i32 undef, metadata !16141, metadata !DIExpression()), !dbg !16143
  call void @llvm.dbg.value(metadata i64 0, metadata !16138, metadata !DIExpression()), !dbg !16142
  call void @llvm.dbg.value(metadata i32 undef, metadata !16139, metadata !DIExpression()), !dbg !16143
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !16153
  call void @llvm.dbg.value(metadata i64 %6, metadata !16138, metadata !DIExpression()), !dbg !16142
  call void @llvm.dbg.value(metadata i32 undef, metadata !15894, metadata !DIExpression()) #23, !dbg !16156
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15899, metadata !DIExpression()) #23, !dbg !16156
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16158
  br i1 %7, label %9, label %8, !dbg !16159

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #26, !dbg !16160
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16160
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #26, !dbg !16160
  unreachable, !dbg !16160

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !16146
  call void @llvm.dbg.value(metadata i32 %10, metadata !15833, metadata !DIExpression()) #23, !dbg !16148
  call void @llvm.dbg.value(metadata i32 %10, metadata !15827, metadata !DIExpression()) #23, !dbg !16144
  call void @llvm.dbg.value(metadata i32 %10, metadata !16141, metadata !DIExpression()), !dbg !16143
  call void @llvm.dbg.value(metadata i32 undef, metadata !15894, metadata !DIExpression()) #23, !dbg !16156
  call void @llvm.dbg.value(metadata i32 undef, metadata !15908, metadata !DIExpression()) #23, !dbg !16161
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !16163, !srcloc !15914
  call void @llvm.dbg.value(metadata i64 %6, metadata !16138, metadata !DIExpression()), !dbg !16142
  call void @llvm.dbg.value(metadata i32 undef, metadata !16139, metadata !DIExpression()), !dbg !16143
  ret i64 %6, !dbg !16164
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !16165 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16167, metadata !DIExpression()), !dbg !16171
  call void @llvm.dbg.value(metadata i64 0, metadata !16168, metadata !DIExpression()), !dbg !16171
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.318(%struct._timeout* noundef %0) #24, !dbg !16172
  br i1 %2, label %21, label %3, !dbg !16174

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !16175
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !16169, metadata !DIExpression()), !dbg !16176
  call void @llvm.dbg.value(metadata i64 0, metadata !16168, metadata !DIExpression()), !dbg !16171
  %5 = icmp eq %struct._timeout* %4, null, !dbg !16177
  br i1 %5, label %16, label %6, !dbg !16179

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !16169, metadata !DIExpression()), !dbg !16176
  call void @llvm.dbg.value(metadata i64 %8, metadata !16168, metadata !DIExpression()), !dbg !16171
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !16180
  %10 = load i64, i64* %9, align 8, !dbg !16180
  %11 = add nsw i64 %10, %8, !dbg !16182
  call void @llvm.dbg.value(metadata i64 %11, metadata !16168, metadata !DIExpression()), !dbg !16171
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !16183
  br i1 %12, label %16, label %13, !dbg !16185

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !16186
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !16169, metadata !DIExpression()), !dbg !16176
  call void @llvm.dbg.value(metadata i64 %11, metadata !16168, metadata !DIExpression()), !dbg !16171
  %15 = icmp eq %struct._timeout* %14, null, !dbg !16177
  br i1 %15, label %16, label %6, !dbg !16179, !llvm.loop !16187

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !16171
  call void @llvm.dbg.value(metadata i64 %17, metadata !16168, metadata !DIExpression()), !dbg !16171
  %18 = tail call fastcc i32 @elapsed.305() #24, !dbg !16189
  %19 = sext i32 %18 to i64, !dbg !16189
  %20 = sub nsw i64 %17, %19, !dbg !16190
  br label %21, !dbg !16191

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !16171
  ret i64 %22, !dbg !16192
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.318(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16193 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16197, metadata !DIExpression()), !dbg !16198
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16199
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.297(%struct._dnode* noundef %2) #24, !dbg !16200
  %4 = xor i1 %3, true, !dbg !16201
  ret i1 %4, !dbg !16202
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16203 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16205, metadata !DIExpression()), !dbg !16210
  call void @llvm.dbg.value(metadata i64 0, metadata !16206, metadata !DIExpression()), !dbg !16210
  call void @llvm.dbg.value(metadata i32 0, metadata !16207, metadata !DIExpression()), !dbg !16211
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15821, metadata !DIExpression()) #23, !dbg !16212
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16214, !srcloc !15836
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #23, !dbg !16216
  call void @llvm.dbg.value(metadata i32 undef, metadata !15834, metadata !DIExpression()) #23, !dbg !16216
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #23, !dbg !16212
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16217
  br i1 %3, label %5, label %4, !dbg !16218

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #26, !dbg !16219
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16219
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #26, !dbg !16219
  unreachable, !dbg !16219

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #23, !dbg !16216
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #23, !dbg !16212
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16220
  call void @llvm.dbg.value(metadata i32 undef, metadata !16209, metadata !DIExpression()), !dbg !16211
  call void @llvm.dbg.value(metadata i64 0, metadata !16206, metadata !DIExpression()), !dbg !16210
  call void @llvm.dbg.value(metadata i32 undef, metadata !16207, metadata !DIExpression()), !dbg !16211
  %6 = load i64, i64* @curr_tick, align 8, !dbg !16221
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !16224
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !16206, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16210
  call void @llvm.dbg.value(metadata i32 undef, metadata !15894, metadata !DIExpression()) #23, !dbg !16225
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15899, metadata !DIExpression()) #23, !dbg !16225
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16227
  br i1 %8, label %10, label %9, !dbg !16228

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #26, !dbg !16229
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16229
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #26, !dbg !16229
  unreachable, !dbg !16229

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !16214
  call void @llvm.dbg.value(metadata i32 %11, metadata !15833, metadata !DIExpression()) #23, !dbg !16216
  call void @llvm.dbg.value(metadata i32 %11, metadata !15827, metadata !DIExpression()) #23, !dbg !16212
  call void @llvm.dbg.value(metadata i32 %11, metadata !16209, metadata !DIExpression()), !dbg !16211
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !16206, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16210
  call void @llvm.dbg.value(metadata i32 undef, metadata !15894, metadata !DIExpression()) #23, !dbg !16225
  call void @llvm.dbg.value(metadata i32 undef, metadata !15908, metadata !DIExpression()) #23, !dbg !16230
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !16232, !srcloc !15914
  call void @llvm.dbg.value(metadata i32 undef, metadata !16207, metadata !DIExpression()), !dbg !16211
  %12 = add i64 %7, %6, !dbg !16233
  ret i64 %12, !dbg !16234
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !16235 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !16237, metadata !DIExpression()), !dbg !16241
  call void @llvm.dbg.value(metadata i32 0, metadata !16238, metadata !DIExpression()), !dbg !16242
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15821, metadata !DIExpression()) #23, !dbg !16243
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16245, !srcloc !15836
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #23, !dbg !16247
  call void @llvm.dbg.value(metadata i32 undef, metadata !15834, metadata !DIExpression()) #23, !dbg !16247
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #23, !dbg !16243
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16248
  br i1 %2, label %4, label %3, !dbg !16249

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #26, !dbg !16250
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16250
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #26, !dbg !16250
  unreachable, !dbg !16250

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #23, !dbg !16247
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #23, !dbg !16243
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16251
  call void @llvm.dbg.value(metadata i32 undef, metadata !16240, metadata !DIExpression()), !dbg !16242
  call void @llvm.dbg.value(metadata i32 -1, metadata !16237, metadata !DIExpression()), !dbg !16241
  call void @llvm.dbg.value(metadata i32 undef, metadata !16238, metadata !DIExpression()), !dbg !16242
  %5 = tail call fastcc i32 @next_timeout() #24, !dbg !16252
  call void @llvm.dbg.value(metadata i32 %5, metadata !16237, metadata !DIExpression()), !dbg !16241
  call void @llvm.dbg.value(metadata i32 undef, metadata !15894, metadata !DIExpression()) #23, !dbg !16255
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15899, metadata !DIExpression()) #23, !dbg !16255
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16257
  br i1 %6, label %8, label %7, !dbg !16258

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #26, !dbg !16259
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16259
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #26, !dbg !16259
  unreachable, !dbg !16259

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !16245
  call void @llvm.dbg.value(metadata i32 %9, metadata !15833, metadata !DIExpression()) #23, !dbg !16247
  call void @llvm.dbg.value(metadata i32 %9, metadata !15827, metadata !DIExpression()) #23, !dbg !16243
  call void @llvm.dbg.value(metadata i32 %9, metadata !16240, metadata !DIExpression()), !dbg !16242
  call void @llvm.dbg.value(metadata i32 undef, metadata !15894, metadata !DIExpression()) #23, !dbg !16255
  call void @llvm.dbg.value(metadata i32 undef, metadata !15908, metadata !DIExpression()) #23, !dbg !16260
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !16262, !srcloc !15914
  call void @llvm.dbg.value(metadata i32 %5, metadata !16237, metadata !DIExpression()), !dbg !16241
  call void @llvm.dbg.value(metadata i32 undef, metadata !16238, metadata !DIExpression()), !dbg !16242
  ret i32 %5, !dbg !16263
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !16264 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16266, metadata !DIExpression()), !dbg !16276
  call void @llvm.dbg.value(metadata i1 %1, metadata !16267, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16276
  call void @llvm.dbg.value(metadata i32 0, metadata !16268, metadata !DIExpression()), !dbg !16277
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15821, metadata !DIExpression()) #23, !dbg !16278
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16280, !srcloc !15836
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #23, !dbg !16282
  call void @llvm.dbg.value(metadata i32 undef, metadata !15834, metadata !DIExpression()) #23, !dbg !16282
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #23, !dbg !16278
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16283
  br i1 %4, label %6, label %5, !dbg !16284

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #26, !dbg !16285
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16285
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #26, !dbg !16285
  unreachable, !dbg !16285

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #23, !dbg !16282
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #23, !dbg !16278
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16286
  call void @llvm.dbg.value(metadata i32 undef, metadata !16270, metadata !DIExpression()), !dbg !16277
  call void @llvm.dbg.value(metadata i32 undef, metadata !16268, metadata !DIExpression()), !dbg !16277
  %7 = tail call fastcc i32 @next_timeout() #24, !dbg !16287
  call void @llvm.dbg.value(metadata i32 %7, metadata !16271, metadata !DIExpression()), !dbg !16288
  call void @llvm.dbg.value(metadata i1 undef, metadata !16274, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16288
  %8 = icmp slt i32 %7, 2, !dbg !16289
  call void @llvm.dbg.value(metadata i1 %8, metadata !16275, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16288
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !16290
  call void @llvm.dbg.value(metadata i1 %9, metadata !16274, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16288
  br i1 %10, label %14, label %11, !dbg !16290

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !16292
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !16292
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #26, !dbg !16294
  br label %14, !dbg !16295

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !15894, metadata !DIExpression()) #23, !dbg !16296
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15899, metadata !DIExpression()) #23, !dbg !16296
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16298
  br i1 %15, label %17, label %16, !dbg !16299

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #26, !dbg !16300
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16300
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #26, !dbg !16300
  unreachable, !dbg !16300

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !16280
  call void @llvm.dbg.value(metadata i32 %18, metadata !15833, metadata !DIExpression()) #23, !dbg !16282
  call void @llvm.dbg.value(metadata i32 %18, metadata !15827, metadata !DIExpression()) #23, !dbg !16278
  call void @llvm.dbg.value(metadata i32 %18, metadata !16270, metadata !DIExpression()), !dbg !16277
  call void @llvm.dbg.value(metadata i32 undef, metadata !15894, metadata !DIExpression()) #23, !dbg !16296
  call void @llvm.dbg.value(metadata i32 undef, metadata !15908, metadata !DIExpression()) #23, !dbg !16301
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !16303, !srcloc !15914
  call void @llvm.dbg.value(metadata i32 1, metadata !16268, metadata !DIExpression()), !dbg !16277
  call void @llvm.dbg.value(metadata i32 undef, metadata !16268, metadata !DIExpression()), !dbg !16277
  ret void, !dbg !16304
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !16305 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16309, metadata !DIExpression()), !dbg !16314
  tail call void @z_time_slice(i32 noundef %0) #26, !dbg !16315
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15821, metadata !DIExpression()) #23, !dbg !16316
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16318, !srcloc !15836
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #23, !dbg !16320
  call void @llvm.dbg.value(metadata i32 undef, metadata !15834, metadata !DIExpression()) #23, !dbg !16320
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #23, !dbg !16316
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16321
  br i1 %3, label %5, label %4, !dbg !16322

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #26, !dbg !16323
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16323
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #26, !dbg !16323
  unreachable, !dbg !16323

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #23, !dbg !16320
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #23, !dbg !16316
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16324
  call void @llvm.dbg.value(metadata i32 undef, metadata !16310, metadata !DIExpression()), !dbg !16314
  store i32 %0, i32* @announce_remaining, align 4, !dbg !16314
  call void @llvm.dbg.value(metadata i32 undef, metadata !16310, metadata !DIExpression()), !dbg !16314
  %6 = tail call fastcc %struct._timeout* @first() #24, !dbg !16325
  %7 = icmp eq %struct._timeout* %6, null, !dbg !16326
  br i1 %7, label %37, label %8, !dbg !16327

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !16314
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !16328
  %14 = load i64, i64* %13, align 8, !dbg !16328
  %15 = sext i32 %11 to i64, !dbg !16329
  %16 = icmp sgt i64 %14, %15, !dbg !16330
  br i1 %16, label %35, label %17, !dbg !16331

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !16311, metadata !DIExpression()), !dbg !16332
  %18 = trunc i64 %14 to i32, !dbg !16333
  call void @llvm.dbg.value(metadata i32 %18, metadata !16313, metadata !DIExpression()), !dbg !16332
  %19 = sext i32 %18 to i64, !dbg !16334
  %20 = load i64, i64* @curr_tick, align 8, !dbg !16335
  %21 = add i64 %20, %19, !dbg !16335
  store i64 %21, i64* @curr_tick, align 8, !dbg !16335
  store i64 0, i64* %13, align 8, !dbg !16336
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #24, !dbg !16337
  call void @llvm.dbg.value(metadata i32 undef, metadata !15894, metadata !DIExpression()) #23, !dbg !16338
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15899, metadata !DIExpression()) #23, !dbg !16338
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16340
  br i1 %22, label %24, label %23, !dbg !16341

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #26, !dbg !16342
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16342
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #26, !dbg !16342
  unreachable, !dbg !16342

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !15894, metadata !DIExpression()) #23, !dbg !16338
  call void @llvm.dbg.value(metadata i32 %12, metadata !15908, metadata !DIExpression()) #23, !dbg !16343
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !16345, !srcloc !15914
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !16346
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !16346
  tail call void %26(%struct._timeout* noundef nonnull %9) #26, !dbg !16347
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15821, metadata !DIExpression()) #23, !dbg !16348
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16350, !srcloc !15836
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #23, !dbg !16352
  call void @llvm.dbg.value(metadata i32 undef, metadata !15834, metadata !DIExpression()) #23, !dbg !16352
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #23, !dbg !16348
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16353
  br i1 %28, label %30, label %29, !dbg !16354

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #26, !dbg !16355
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16355
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #26, !dbg !16355
  unreachable, !dbg !16355

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #23, !dbg !16352
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #23, !dbg !16348
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16356
  call void @llvm.dbg.value(metadata i32 undef, metadata !16310, metadata !DIExpression()), !dbg !16314
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !16357
  %32 = sub nsw i32 %31, %18, !dbg !16357
  store i32 %32, i32* @announce_remaining, align 4, !dbg !16314
  call void @llvm.dbg.value(metadata i32 undef, metadata !16310, metadata !DIExpression()), !dbg !16314
  %33 = tail call fastcc %struct._timeout* @first() #24, !dbg !16325
  %34 = icmp eq %struct._timeout* %33, null, !dbg !16326
  br i1 %34, label %37, label %8, !dbg !16327, !llvm.loop !16358

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !16360
  store i64 %36, i64* %13, align 8, !dbg !16360
  br label %41, !dbg !16363

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !16314
  %40 = sext i32 %39 to i64, !dbg !16364
  br label %41, !dbg !16364

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !16364
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !16365
  %45 = add i64 %44, %42, !dbg !16365
  store i64 %45, i64* @curr_tick, align 8, !dbg !16365
  store i32 0, i32* @announce_remaining, align 4, !dbg !16366
  %46 = tail call fastcc i32 @next_timeout() #24, !dbg !16367
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #26, !dbg !16368
  call void @llvm.dbg.value(metadata i32 undef, metadata !15894, metadata !DIExpression()) #23, !dbg !16369
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15899, metadata !DIExpression()) #23, !dbg !16369
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16371
  br i1 %47, label %49, label %48, !dbg !16372

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #26, !dbg !16373
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16373
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #26, !dbg !16373
  unreachable, !dbg !16373

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !16314
  call void @llvm.dbg.value(metadata i32 %50, metadata !15894, metadata !DIExpression()) #23, !dbg !16369
  call void @llvm.dbg.value(metadata i32 %50, metadata !15908, metadata !DIExpression()) #23, !dbg !16374
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !16376, !srcloc !15914
  ret void, !dbg !16377
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !16378 {
  call void @llvm.dbg.value(metadata i64 0, metadata !16380, metadata !DIExpression()), !dbg !16384
  call void @llvm.dbg.value(metadata i32 0, metadata !16381, metadata !DIExpression()), !dbg !16385
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15821, metadata !DIExpression()) #23, !dbg !16386
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16388, !srcloc !15836
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #23, !dbg !16390
  call void @llvm.dbg.value(metadata i32 undef, metadata !15834, metadata !DIExpression()) #23, !dbg !16390
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #23, !dbg !16386
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16391
  br i1 %2, label %4, label %3, !dbg !16392

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #26, !dbg !16393
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16393
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #26, !dbg !16393
  unreachable, !dbg !16393

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #23, !dbg !16390
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #23, !dbg !16386
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16394
  call void @llvm.dbg.value(metadata i32 undef, metadata !16383, metadata !DIExpression()), !dbg !16385
  call void @llvm.dbg.value(metadata i64 0, metadata !16380, metadata !DIExpression()), !dbg !16384
  call void @llvm.dbg.value(metadata i32 undef, metadata !16381, metadata !DIExpression()), !dbg !16385
  %5 = load i64, i64* @curr_tick, align 8, !dbg !16395
  %6 = tail call fastcc i32 @elapsed.305() #24, !dbg !16398
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !16380, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !16384
  call void @llvm.dbg.value(metadata i32 undef, metadata !15894, metadata !DIExpression()) #23, !dbg !16399
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15899, metadata !DIExpression()) #23, !dbg !16399
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16401
  br i1 %7, label %9, label %8, !dbg !16402

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #26, !dbg !16403
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16403
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #26, !dbg !16403
  unreachable, !dbg !16403

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !16388
  call void @llvm.dbg.value(metadata i32 %10, metadata !15833, metadata !DIExpression()) #23, !dbg !16390
  call void @llvm.dbg.value(metadata i32 %10, metadata !15827, metadata !DIExpression()) #23, !dbg !16386
  call void @llvm.dbg.value(metadata i32 %10, metadata !16383, metadata !DIExpression()), !dbg !16385
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !16380, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !16384
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !16380, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16384
  call void @llvm.dbg.value(metadata i32 undef, metadata !15894, metadata !DIExpression()) #23, !dbg !16399
  call void @llvm.dbg.value(metadata i32 undef, metadata !15908, metadata !DIExpression()) #23, !dbg !16404
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !16406, !srcloc !15914
  call void @llvm.dbg.value(metadata i32 undef, metadata !16381, metadata !DIExpression()), !dbg !16385
  %11 = sext i32 %6 to i64, !dbg !16398
  %12 = add i64 %5, %11, !dbg !16407
  ret i64 %12, !dbg !16408
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !16409 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !16410
  %2 = trunc i64 %1 to i32, !dbg !16411
  ret i32 %2, !dbg !16412
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !16413 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !16414
  ret i64 %1, !dbg !16415
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !16416 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16418, metadata !DIExpression()), !dbg !16425
  %2 = icmp eq i32 %0, 0, !dbg !16426
  br i1 %2, label %10, label %3, !dbg !16428

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !16429
  call void @llvm.dbg.value(metadata i32 %4, metadata !16419, metadata !DIExpression()), !dbg !16425
  %5 = mul i32 %0, 84, !dbg !16430
  call void @llvm.dbg.value(metadata i32 %5, metadata !16420, metadata !DIExpression()), !dbg !16425
  br label %6, !dbg !16431

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !16432
  call void @llvm.dbg.value(metadata i32 %7, metadata !16421, metadata !DIExpression()), !dbg !16433
  %8 = sub i32 %7, %4, !dbg !16434
  %9 = icmp ult i32 %8, %5, !dbg !16436
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !16437
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !16438 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !16439
  ret i32 %1, !dbg !16440
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !16441 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #26, !dbg !16443
  ret i32 %1, !dbg !16444
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !16445 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16449, metadata !DIExpression()), !dbg !16451
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !16452

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !16453
  br label %14, !dbg !16457

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16450, metadata !DIExpression()), !dbg !16451
  %6 = icmp slt i64 %2, -1, !dbg !16458
  br i1 %6, label %7, label %9, !dbg !16461

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !16462
  br label %14, !dbg !16463

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !16465
  %11 = icmp ugt i64 %2, 1, !dbg !16466
  %12 = select i1 %11, i64 %2, i64 1, !dbg !16466
  %13 = add nsw i64 %10, %12, !dbg !16467
  br label %14, !dbg !16468

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !16469
  ret i64 %15, !dbg !16470
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !16471 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.329, i32 0, i32 0)) #26, !dbg !16473
  ret void, !dbg !16474
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { nofree nosync nounwind willreturn }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!785, !2, !2507, !27, !282, !2509, !2523, !2525, !2562, !2564, !292, !345, !374, !2566, !2577, !2623, !2625, !2653, !2681, !2724, !2796, !2841, !387, !531, !2869, !567, !592, !817, !2874, !953, !1019, !1326, !1543, !2912, !1656, !1746, !2914, !2999, !3063, !1797, !3066, !1804, !2086, !3084, !2224, !2343, !3086, !2468, !3089}
!llvm.ident = !{!3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091}
!llvm.module.flags = !{!3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "forks", scope: !27, file: !116, line: 149, type: !278, isLocal: true, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !113, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/philosophers/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !104, !108, !109, !110, !111}
!102 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !103)
!103 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !105, line: 46, baseType: !106)
!105 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !107)
!107 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!109 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !112)
!112 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!113 = !{!114, !25, !266, !269}
!114 = !DIGlobalVariableExpression(var: !115, expr: !DIExpression())
!115 = distinct !DIGlobalVariable(name: "fork_objs", scope: !27, file: !116, line: 146, type: !117, isLocal: false, isDefinition: true)
!116 = !DIFile(filename: "zephyr/samples/philosophers/src/phil_obj_abstract.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 960, elements: !264)
!118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !119, line: 2720, size: 160, elements: !120)
!119 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!120 = !{!121, !142, !262, !263}
!121 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !118, file: !119, line: 2722, baseType: !122, size: 64)
!122 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !124)
!123 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!124 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !125)
!125 = !{!126}
!126 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !124, file: !123, line: 232, baseType: !127, size: 64)
!127 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !129)
!128 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !130)
!130 = !{!131, !137}
!131 = !DIDerivedType(tag: DW_TAG_member, scope: !129, file: !128, line: 38, baseType: !132, size: 32)
!132 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !129, file: !128, line: 38, size: 32, elements: !133)
!133 = !{!134, !136}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !132, file: !128, line: 39, baseType: !135, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 32)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !132, file: !128, line: 40, baseType: !135, size: 32)
!137 = !DIDerivedType(tag: DW_TAG_member, scope: !129, file: !128, line: 42, baseType: !138, size: 32, offset: 32)
!138 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !129, file: !128, line: 42, size: 32, elements: !139)
!139 = !{!140, !141}
!140 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !138, file: !128, line: 43, baseType: !135, size: 32)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !138, file: !128, line: 44, baseType: !135, size: 32)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !118, file: !119, line: 2724, baseType: !143, size: 32, offset: 64)
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !146)
!145 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!146 = !{!147, !196, !209, !210, !211, !223, !224, !229, !230, !238, !257}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !144, file: !145, line: 247, baseType: !148, size: 384)
!148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !149)
!149 = !{!150, !164, !166, !169, !170, !183, !184, !185}
!150 = !DIDerivedType(tag: DW_TAG_member, scope: !148, file: !145, line: 60, baseType: !151, size: 64)
!151 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !148, file: !145, line: 60, size: 64, elements: !152)
!152 = !{!153, !155}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !151, file: !145, line: 61, baseType: !154, size: 64)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !129)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !151, file: !145, line: 62, baseType: !156, size: 64)
!156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !158)
!157 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!158 = !{!159}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !156, file: !157, line: 50, baseType: !160, size: 64)
!160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 64, elements: !162)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 32)
!162 = !{!163}
!163 = !DISubrange(count: 2)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !148, file: !145, line: 68, baseType: !165, size: 32, offset: 64)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 32)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !148, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !168)
!168 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !148, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!170 = !DIDerivedType(tag: DW_TAG_member, scope: !148, file: !145, line: 90, baseType: !171, size: 16, offset: 112)
!171 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !148, file: !145, line: 90, size: 16, elements: !172)
!172 = !{!173, !180}
!173 = !DIDerivedType(tag: DW_TAG_member, scope: !171, file: !145, line: 91, baseType: !174, size: 16)
!174 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !171, file: !145, line: 91, size: 16, elements: !175)
!175 = !{!176, !179}
!176 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !174, file: !145, line: 96, baseType: !177, size: 8)
!177 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !178)
!178 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !174, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !171, file: !145, line: 100, baseType: !181, size: 16)
!181 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !182)
!182 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !148, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !148, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !148, file: !145, line: 131, baseType: !186, size: 192, offset: 192)
!186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !187)
!187 = !{!188, !189, !195}
!188 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !186, file: !123, line: 245, baseType: !154, size: 64)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !186, file: !123, line: 246, baseType: !190, size: 32, offset: 64)
!190 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !191)
!191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 32)
!192 = !DISubroutineType(types: !193)
!193 = !{null, !194}
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 32)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !186, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !144, file: !145, line: 250, baseType: !197, size: 288, offset: 384)
!197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !199)
!198 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!199 = !{!200, !201, !202, !203, !204, !205, !206, !207, !208}
!200 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !197, file: !198, line: 26, baseType: !110, size: 32)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !197, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !197, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !197, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !197, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !197, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !197, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !197, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !197, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !144, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !144, file: !145, line: 256, baseType: !122, size: 64, offset: 704)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !144, file: !145, line: 271, baseType: !212, size: 128, offset: 768)
!212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !213)
!213 = !{!214, !220, !221, !222}
!214 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !212, file: !145, line: 35, baseType: !215, size: 32)
!215 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !216, line: 46, baseType: !217)
!216 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 32)
!218 = !DISubroutineType(types: !219)
!219 = !{null, !108, !108, !108}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !212, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !212, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !212, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !144, file: !145, line: 274, baseType: !143, size: 32, offset: 896)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !144, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !226, size: 256, elements: !227)
!226 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!227 = !{!228}
!228 = !DISubrange(count: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !144, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !144, file: !145, line: 300, baseType: !231, size: 96, offset: 1216)
!231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !232)
!232 = !{!233, !234, !237}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !231, file: !145, line: 153, baseType: !22, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !231, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!235 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !236, line: 214, baseType: !32)
!236 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!237 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !231, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !144, file: !145, line: 325, baseType: !239, size: 32, offset: 1312)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 32)
!240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !241)
!241 = !{!242, !251, !252}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !240, file: !119, line: 5074, baseType: !243, size: 96)
!243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !245)
!244 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!245 = !{!246, !249, !250}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !243, file: !244, line: 57, baseType: !247, size: 32)
!247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 32)
!248 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !244, line: 57, flags: DIFlagFwdDecl)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !243, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !243, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !240, file: !119, line: 5075, baseType: !122, size: 64, offset: 96)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !240, file: !119, line: 5076, baseType: !253, size: 32, offset: 160)
!253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !255)
!254 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!255 = !{!256}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !253, file: !254, line: 52, baseType: !22, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !144, file: !145, line: 343, baseType: !258, size: 64, offset: 1344)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !259)
!259 = !{!260, !261}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !258, file: !198, line: 63, baseType: !110, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !258, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !118, file: !119, line: 2727, baseType: !110, size: 32, offset: 96)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !118, file: !119, line: 2730, baseType: !109, size: 32, offset: 128)
!264 = !{!265}
!265 = !DISubrange(count: 6)
!266 = !DIGlobalVariableExpression(var: !267, expr: !DIExpression())
!267 = distinct !DIGlobalVariable(name: "threads", scope: !27, file: !116, line: 160, type: !268, isLocal: true, isDefinition: true)
!268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 8448, elements: !264)
!269 = !DIGlobalVariableExpression(var: !270, expr: !DIExpression())
!270 = distinct !DIGlobalVariable(name: "stacks", scope: !27, file: !116, line: 159, type: !271, isLocal: true, isDefinition: true, align: 512)
!271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 101376, elements: !276)
!272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !273, line: 47, size: 8, elements: !274)
!273 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!274 = !{!275}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !272, file: !273, line: 48, baseType: !226, size: 8)
!276 = !{!265, !277}
!277 = !DISubrange(count: 2112)
!278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 192, elements: !264)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!280 = !DIGlobalVariableExpression(var: !281, expr: !DIExpression())
!281 = distinct !DIGlobalVariable(name: "_char_out", scope: !282, file: !286, line: 54, type: !287, isLocal: false, isDefinition: true)
!282 = distinct !DICompileUnit(language: DW_LANG_C99, file: !283, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, globals: !285, splitDebugInlining: false, nameTableKind: None)
!283 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!284 = !{!108, !109}
!285 = !{!280}
!286 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = !DISubroutineType(types: !289)
!289 = !{!109, !109}
!290 = !DIGlobalVariableExpression(var: !291, expr: !DIExpression())
!291 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !292, file: !309, line: 56, type: !310, isLocal: true, isDefinition: true, align: 32)
!292 = distinct !DICompileUnit(language: DW_LANG_C99, file: !293, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !294, globals: !308, splitDebugInlining: false, nameTableKind: None)
!293 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!294 = !{!295}
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 32)
!296 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !297, line: 379, baseType: !298)
!297 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f412cx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 370, size: 224, elements: !299)
!299 = !{!300, !302, !303, !304, !305, !306, !307}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !298, file: !297, line: 372, baseType: !301, size: 32)
!301 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !110)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !298, file: !297, line: 373, baseType: !301, size: 32, offset: 32)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !298, file: !297, line: 374, baseType: !301, size: 32, offset: 64)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !298, file: !297, line: 375, baseType: !301, size: 32, offset: 96)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !298, file: !297, line: 376, baseType: !301, size: 32, offset: 128)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !298, file: !297, line: 377, baseType: !301, size: 32, offset: 160)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !298, file: !297, line: 378, baseType: !301, size: 32, offset: 192)
!308 = !{!290}
!309 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!310 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !311)
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !312, line: 51, size: 64, elements: !313)
!312 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!313 = !{!314, !342}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !311, file: !312, line: 60, baseType: !315, size: 32)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 32)
!316 = !DISubroutineType(types: !317)
!317 = !{!109, !318}
!318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !319, size: 32)
!319 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !320)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !321, line: 378, size: 192, elements: !322)
!321 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!322 = !{!323, !326, !327, !328, !335, !336}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !320, file: !321, line: 380, baseType: !324, size: 32)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 32)
!325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !226)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !320, file: !321, line: 382, baseType: !13, size: 32, offset: 32)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !320, file: !321, line: 384, baseType: !13, size: 32, offset: 64)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !320, file: !321, line: 386, baseType: !329, size: 32, offset: 96)
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 32)
!330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !321, line: 351, size: 16, elements: !331)
!331 = !{!332, !333}
!332 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !330, file: !321, line: 359, baseType: !167, size: 8)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !330, file: !321, line: 364, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!334 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !320, file: !321, line: 388, baseType: !108, size: 32, offset: 128)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !320, file: !321, line: 396, baseType: !337, size: 32, offset: 160)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 32)
!338 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !339)
!339 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !321, line: 43, baseType: !340)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !341)
!341 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !311, file: !312, line: 65, baseType: !318, size: 32, offset: 32)
!343 = !DIGlobalVariableExpression(var: !344, expr: !DIExpression())
!344 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !345, file: !348, line: 71, type: !349, isLocal: true, isDefinition: true, align: 32)
!345 = distinct !DICompileUnit(language: DW_LANG_C99, file: !346, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !347, splitDebugInlining: false, nameTableKind: None)
!346 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!347 = !{!343}
!348 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !350)
!350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !312, line: 51, size: 64, elements: !351)
!351 = !{!352, !371}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !350, file: !312, line: 60, baseType: !353, size: 32)
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 32)
!354 = !DISubroutineType(types: !355)
!355 = !{!109, !356}
!356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 32)
!357 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !358)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !321, line: 378, size: 192, elements: !359)
!359 = !{!360, !361, !362, !363, !369, !370}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !358, file: !321, line: 380, baseType: !324, size: 32)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !358, file: !321, line: 382, baseType: !13, size: 32, offset: 32)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !358, file: !321, line: 384, baseType: !13, size: 32, offset: 64)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !358, file: !321, line: 386, baseType: !364, size: 32, offset: 96)
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 32)
!365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !321, line: 351, size: 16, elements: !366)
!366 = !{!367, !368}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !365, file: !321, line: 359, baseType: !167, size: 8)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !365, file: !321, line: 364, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !358, file: !321, line: 388, baseType: !108, size: 32, offset: 128)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !358, file: !321, line: 396, baseType: !337, size: 32, offset: 160)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !350, file: !312, line: 65, baseType: !356, size: 32, offset: 32)
!372 = !DIGlobalVariableExpression(var: !373, expr: !DIExpression())
!373 = distinct !DIGlobalVariable(name: "_kernel_thread_info_offsets", scope: !374, file: !379, line: 41, type: !382, isLocal: false, isDefinition: true)
!374 = distinct !DICompileUnit(language: DW_LANG_C99, file: !375, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, globals: !376, splitDebugInlining: false, nameTableKind: None)
!375 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/debug/thread_info.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!376 = !{!372, !377, !380}
!377 = !DIGlobalVariableExpression(var: !378, expr: !DIExpression())
!378 = distinct !DIGlobalVariable(name: "_kernel_thread_info_num_offsets", scope: !374, file: !379, line: 140, type: !235, isLocal: false, isDefinition: true)
!379 = !DIFile(filename: "zephyr/subsys/debug/thread_info.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!380 = !DIGlobalVariableExpression(var: !381, expr: !DIExpression())
!381 = distinct !DIGlobalVariable(name: "_kernel_thread_info_size_t_size", scope: !374, file: !379, line: 145, type: !167, isLocal: false, isDefinition: true)
!382 = !DICompositeType(tag: DW_TAG_array_type, baseType: !235, size: 448, elements: !383)
!383 = !{!384}
!384 = !DISubrange(count: 14)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "static_regions", scope: !387, file: !394, line: 62, type: !527, isLocal: true, isDefinition: true)
!387 = distinct !DICompileUnit(language: DW_LANG_C99, file: !388, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !389, globals: !390, splitDebugInlining: false, nameTableKind: None)
!388 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!389 = !{!235, !109, !110, !108}
!390 = !{!391, !385}
!391 = !DIGlobalVariableExpression(var: !392, expr: !DIExpression())
!392 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !393, file: !394, line: 198, type: !513, isLocal: true, isDefinition: true)
!393 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !394, file: !394, line: 175, type: !395, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !508)
!394 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!395 = !DISubroutineType(types: !396)
!396 = !{null, !397}
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 32)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !399)
!399 = !{!400, !458, !470, !471, !472, !479, !480, !481, !482, !488, !503}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !398, file: !145, line: 247, baseType: !401, size: 384)
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !402)
!402 = !{!403, !427, !434, !435, !436, !445, !446, !447}
!403 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !145, line: 60, baseType: !404, size: 64)
!404 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !401, file: !145, line: 60, size: 64, elements: !405)
!405 = !{!406, !421}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !404, file: !145, line: 61, baseType: !407, size: 64)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !408)
!408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !409)
!409 = !{!410, !416}
!410 = !DIDerivedType(tag: DW_TAG_member, scope: !408, file: !128, line: 38, baseType: !411, size: 32)
!411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !408, file: !128, line: 38, size: 32, elements: !412)
!412 = !{!413, !415}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !411, file: !128, line: 39, baseType: !414, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 32)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !411, file: !128, line: 40, baseType: !414, size: 32)
!416 = !DIDerivedType(tag: DW_TAG_member, scope: !408, file: !128, line: 42, baseType: !417, size: 32, offset: 32)
!417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !408, file: !128, line: 42, size: 32, elements: !418)
!418 = !{!419, !420}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !417, file: !128, line: 43, baseType: !414, size: 32)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !417, file: !128, line: 44, baseType: !414, size: 32)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !404, file: !145, line: 62, baseType: !422, size: 64)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !423)
!423 = !{!424}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !422, file: !157, line: 50, baseType: !425, size: 64)
!425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 64, elements: !162)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !401, file: !145, line: 68, baseType: !428, size: 32, offset: 64)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 32)
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !430)
!430 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !431)
!431 = !{!432}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !430, file: !123, line: 232, baseType: !433, size: 64)
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !408)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !401, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !401, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!436 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !145, line: 90, baseType: !437, size: 16, offset: 112)
!437 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !401, file: !145, line: 90, size: 16, elements: !438)
!438 = !{!439, !444}
!439 = !DIDerivedType(tag: DW_TAG_member, scope: !437, file: !145, line: 91, baseType: !440, size: 16)
!440 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !437, file: !145, line: 91, size: 16, elements: !441)
!441 = !{!442, !443}
!442 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !440, file: !145, line: 96, baseType: !177, size: 8)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !440, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !437, file: !145, line: 100, baseType: !181, size: 16)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !401, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !401, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !401, file: !145, line: 131, baseType: !448, size: 192, offset: 192)
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !449)
!449 = !{!450, !451, !457}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !448, file: !123, line: 245, baseType: !407, size: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !448, file: !123, line: 246, baseType: !452, size: 32, offset: 64)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !453)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 32)
!454 = !DISubroutineType(types: !455)
!455 = !{null, !456}
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 32)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !448, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !398, file: !145, line: 250, baseType: !459, size: 288, offset: 384)
!459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !460)
!460 = !{!461, !462, !463, !464, !465, !466, !467, !468, !469}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !459, file: !198, line: 26, baseType: !110, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !459, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !459, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !459, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !459, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !459, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !459, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !459, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !459, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !398, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !398, file: !145, line: 256, baseType: !429, size: 64, offset: 704)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !398, file: !145, line: 271, baseType: !473, size: 128, offset: 768)
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !474)
!474 = !{!475, !476, !477, !478}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !473, file: !145, line: 35, baseType: !215, size: 32)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !473, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !473, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !473, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !398, file: !145, line: 274, baseType: !397, size: 32, offset: 896)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !398, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !398, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !398, file: !145, line: 300, baseType: !483, size: 96, offset: 1216)
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !484)
!484 = !{!485, !486, !487}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !483, file: !145, line: 153, baseType: !22, size: 32)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !483, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !483, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !398, file: !145, line: 325, baseType: !489, size: 32, offset: 1312)
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 32)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !491)
!491 = !{!492, !498, !499}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !490, file: !119, line: 5074, baseType: !493, size: 96)
!493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !494)
!494 = !{!495, !496, !497}
!495 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !493, file: !244, line: 57, baseType: !247, size: 32)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !493, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !493, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !490, file: !119, line: 5075, baseType: !429, size: 64, offset: 96)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !490, file: !119, line: 5076, baseType: !500, size: 32, offset: 160)
!500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !501)
!501 = !{!502}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !500, file: !254, line: 52, baseType: !22, size: 32)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !398, file: !145, line: 343, baseType: !504, size: 64, offset: 1344)
!504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !505)
!505 = !{!506, !507}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !504, file: !198, line: 63, baseType: !110, size: 32)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !504, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!508 = !{!509, !510, !511, !512}
!509 = !DILocalVariable(name: "thread", arg: 1, scope: !393, file: !394, line: 175, type: !397)
!510 = !DILocalVariable(name: "region_num", scope: !393, file: !394, line: 200, type: !167)
!511 = !DILocalVariable(name: "guard_start", scope: !393, file: !394, line: 265, type: !22)
!512 = !DILocalVariable(name: "guard_size", scope: !393, file: !394, line: 266, type: !235)
!513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !514, size: 96, elements: !525)
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !515, line: 52, size: 96, elements: !516)
!515 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!516 = !{!517, !518, !519}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !514, file: !515, line: 53, baseType: !22, size: 32)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !514, file: !515, line: 54, baseType: !235, size: 32, offset: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !514, file: !515, line: 55, baseType: !520, size: 32, offset: 64)
!520 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !521, line: 151, baseType: !522)
!521 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !521, line: 149, size: 32, elements: !523)
!523 = !{!524}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !522, file: !521, line: 150, baseType: !110, size: 32)
!525 = !{!526}
!526 = !DISubrange(count: 1)
!527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !528, size: 96, elements: !525)
!528 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !514)
!529 = !DIGlobalVariableExpression(var: !530, expr: !DIExpression())
!530 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !531, file: !564, line: 39, type: !167, isLocal: true, isDefinition: true)
!531 = distinct !DICompileUnit(language: DW_LANG_C99, file: !532, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !533, globals: !563, splitDebugInlining: false, nameTableKind: None)
!532 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!533 = !{!534, !108, !109, !551, !167}
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !535, size: 32)
!535 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !536, line: 1226, baseType: !537)
!536 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!537 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 1213, size: 352, elements: !538)
!538 = !{!539, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550}
!539 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !537, file: !536, line: 1215, baseType: !540, size: 32)
!540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !301)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !537, file: !536, line: 1216, baseType: !301, size: 32, offset: 32)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !537, file: !536, line: 1217, baseType: !301, size: 32, offset: 64)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !537, file: !536, line: 1218, baseType: !301, size: 32, offset: 96)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !537, file: !536, line: 1219, baseType: !301, size: 32, offset: 128)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !537, file: !536, line: 1220, baseType: !301, size: 32, offset: 160)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !537, file: !536, line: 1221, baseType: !301, size: 32, offset: 192)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !537, file: !536, line: 1222, baseType: !301, size: 32, offset: 224)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !537, file: !536, line: 1223, baseType: !301, size: 32, offset: 256)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !537, file: !536, line: 1224, baseType: !301, size: 32, offset: 288)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !537, file: !536, line: 1225, baseType: !301, size: 32, offset: 320)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 32)
!552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !553)
!553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !554, line: 27, size: 96, elements: !555)
!554 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!555 = !{!556, !557, !558}
!556 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !553, file: !554, line: 29, baseType: !110, size: 32)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !553, file: !554, line: 31, baseType: !324, size: 32, offset: 32)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !553, file: !554, line: 37, baseType: !559, size: 32, offset: 64)
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !521, line: 146, baseType: !560)
!560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !521, line: 141, size: 32, elements: !561)
!561 = !{!562}
!562 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !560, file: !521, line: 143, baseType: !110, size: 32)
!563 = !{!529}
!564 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!565 = !DIGlobalVariableExpression(var: !566, expr: !DIExpression())
!566 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !567, file: !572, line: 13, type: !589, isLocal: true, isDefinition: true)
!567 = distinct !DICompileUnit(language: DW_LANG_C99, file: !568, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !569, splitDebugInlining: false, nameTableKind: None)
!568 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!569 = !{!570, !565}
!570 = !DIGlobalVariableExpression(var: !571, expr: !DIExpression())
!571 = distinct !DIGlobalVariable(name: "mpu_config", scope: !567, file: !572, line: 37, type: !573, isLocal: false, isDefinition: true)
!572 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !574)
!574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !554, line: 41, size: 64, elements: !575)
!575 = !{!576, !577}
!576 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !574, file: !554, line: 43, baseType: !110, size: 32)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !574, file: !554, line: 45, baseType: !578, size: 32, offset: 32)
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 32)
!579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !580)
!580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !554, line: 27, size: 96, elements: !581)
!581 = !{!582, !583, !584}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !580, file: !554, line: 29, baseType: !110, size: 32)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !580, file: !554, line: 31, baseType: !324, size: 32, offset: 32)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !580, file: !554, line: 37, baseType: !585, size: 32, offset: 64)
!585 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !521, line: 146, baseType: !586)
!586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !521, line: 141, size: 32, elements: !587)
!587 = !{!588}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !586, file: !521, line: 143, baseType: !110, size: 32)
!589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !579, size: 192, elements: !162)
!590 = !DIGlobalVariableExpression(var: !591, expr: !DIExpression())
!591 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !592, file: !696, line: 72, type: !780, isLocal: true, isDefinition: true)
!592 = distinct !DICompileUnit(language: DW_LANG_C99, file: !593, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !594, retainedTypes: !682, globals: !693, splitDebugInlining: false, nameTableKind: None)
!593 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!594 = !{!30, !595}
!595 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !297, line: 65, baseType: !109, size: 32, elements: !596)
!596 = !{!597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681}
!597 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!598 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!599 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!600 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!601 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!602 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!603 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!604 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!605 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!606 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!607 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!608 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!609 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!610 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!611 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!612 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!613 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!614 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!615 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!616 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!617 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!618 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!619 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!620 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!621 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!622 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!623 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!624 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!625 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!626 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!627 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!628 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!629 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!630 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!631 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!632 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!633 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!634 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!635 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!636 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!637 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!638 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!639 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!640 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!641 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!642 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!643 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!644 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!645 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!646 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!647 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!648 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!649 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!650 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!651 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!652 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!653 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!654 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!655 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!656 = !DIEnumerator(name: "TIM6_IRQn", value: 54)
!657 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!658 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!659 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!660 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!661 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!662 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!663 = !DIEnumerator(name: "DFSDM1_FLT0_IRQn", value: 61)
!664 = !DIEnumerator(name: "DFSDM1_FLT1_IRQn", value: 62)
!665 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!666 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!667 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!668 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!669 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!670 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!671 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!672 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!673 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!674 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!675 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!676 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!677 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!678 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!679 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!680 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!681 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!682 = !{!235, !109, !108, !683}
!683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !684, size: 32)
!684 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !297, line: 364, baseType: !685)
!685 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 356, size: 192, elements: !686)
!686 = !{!687, !688, !689, !690, !691, !692}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !685, file: !297, line: 358, baseType: !301, size: 32)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !685, file: !297, line: 359, baseType: !301, size: 32, offset: 32)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !685, file: !297, line: 360, baseType: !301, size: 32, offset: 64)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !685, file: !297, line: 361, baseType: !301, size: 32, offset: 96)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !685, file: !297, line: 362, baseType: !301, size: 32, offset: 128)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !685, file: !297, line: 363, baseType: !301, size: 32, offset: 160)
!693 = !{!694, !700, !716, !727, !744, !590, !746, !760, !762, !764, !766, !768, !770, !772, !774, !776, !778}
!694 = !DIGlobalVariableExpression(var: !695, expr: !DIExpression())
!695 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !592, file: !696, line: 424, type: !697, isLocal: false, isDefinition: true, align: 16)
!696 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, size: 64, elements: !698)
!698 = !{!699}
!699 = !DISubrange(count: 4)
!700 = !DIGlobalVariableExpression(var: !701, expr: !DIExpression())
!701 = distinct !DIGlobalVariable(name: "__device_dts_ord_35", scope: !592, file: !696, line: 424, type: !702, isLocal: false, isDefinition: true, align: 32)
!702 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !703)
!703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !321, line: 378, size: 192, elements: !704)
!704 = !{!705, !706, !707, !708, !714, !715}
!705 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !703, file: !321, line: 380, baseType: !324, size: 32)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !703, file: !321, line: 382, baseType: !13, size: 32, offset: 32)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !703, file: !321, line: 384, baseType: !13, size: 32, offset: 64)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !703, file: !321, line: 386, baseType: !709, size: 32, offset: 96)
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 32)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !321, line: 351, size: 16, elements: !711)
!711 = !{!712, !713}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !710, file: !321, line: 359, baseType: !167, size: 8)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !710, file: !321, line: 364, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !703, file: !321, line: 388, baseType: !108, size: 32, offset: 128)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !703, file: !321, line: 396, baseType: !337, size: 32, offset: 160)
!716 = !DIGlobalVariableExpression(var: !717, expr: !DIExpression())
!717 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_35", scope: !592, file: !696, line: 424, type: !718, isLocal: true, isDefinition: true, align: 32)
!718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !719)
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !312, line: 51, size: 64, elements: !720)
!720 = !{!721, !726}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !719, file: !312, line: 60, baseType: !722, size: 32)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 32)
!723 = !DISubroutineType(types: !724)
!724 = !{!109, !725}
!725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 32)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !719, file: !312, line: 65, baseType: !725, size: 32, offset: 32)
!727 = !DIGlobalVariableExpression(var: !728, expr: !DIExpression())
!728 = distinct !DIGlobalVariable(name: "exti_data", scope: !592, file: !696, line: 423, type: !729, isLocal: true, isDefinition: true)
!729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !696, line: 107, size: 1472, elements: !730)
!730 = !{!731}
!731 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !729, file: !696, line: 109, baseType: !732, size: 1472)
!732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !733, size: 1472, elements: !742)
!733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !696, line: 101, size: 64, elements: !734)
!734 = !{!735, !741}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !733, file: !696, line: 102, baseType: !736, size: 32)
!736 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !737, line: 63, baseType: !738)
!737 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 32)
!739 = !DISubroutineType(types: !740)
!740 = !{null, !109, !108}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !733, file: !696, line: 103, baseType: !108, size: 32, offset: 32)
!742 = !{!743}
!743 = !DISubrange(count: 23)
!744 = !DIGlobalVariableExpression(var: !745, expr: !DIExpression())
!745 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_35", scope: !592, file: !696, line: 424, type: !710, isLocal: true, isDefinition: true, align: 8)
!746 = !DIGlobalVariableExpression(var: !747, expr: !DIExpression())
!747 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !748, file: !696, line: 493, type: !753, isLocal: true, isDefinition: true, align: 32)
!748 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !696, file: !696, line: 460, type: !749, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !751)
!749 = !DISubroutineType(types: !750)
!750 = !{null, !725}
!751 = !{!752}
!752 = !DILocalVariable(name: "dev", arg: 1, scope: !748, file: !696, line: 460, type: !725)
!753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !754)
!754 = !{!755, !757, !758, !759}
!755 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !753, file: !10, line: 55, baseType: !756, size: 32)
!756 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !109)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !753, file: !10, line: 57, baseType: !756, size: 32, offset: 32)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !753, file: !10, line: 59, baseType: !108, size: 32, offset: 64)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !753, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!760 = !DIGlobalVariableExpression(var: !761, expr: !DIExpression())
!761 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !748, file: !696, line: 497, type: !753, isLocal: true, isDefinition: true, align: 32)
!762 = !DIGlobalVariableExpression(var: !763, expr: !DIExpression())
!763 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !748, file: !696, line: 507, type: !753, isLocal: true, isDefinition: true, align: 32)
!764 = !DIGlobalVariableExpression(var: !765, expr: !DIExpression())
!765 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !748, file: !696, line: 512, type: !753, isLocal: true, isDefinition: true, align: 32)
!766 = !DIGlobalVariableExpression(var: !767, expr: !DIExpression())
!767 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !748, file: !696, line: 516, type: !753, isLocal: true, isDefinition: true, align: 32)
!768 = !DIGlobalVariableExpression(var: !769, expr: !DIExpression())
!769 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !748, file: !696, line: 523, type: !753, isLocal: true, isDefinition: true, align: 32)
!770 = !DIGlobalVariableExpression(var: !771, expr: !DIExpression())
!771 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !748, file: !696, line: 527, type: !753, isLocal: true, isDefinition: true, align: 32)
!772 = !DIGlobalVariableExpression(var: !773, expr: !DIExpression())
!773 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !748, file: !696, line: 581, type: !753, isLocal: true, isDefinition: true, align: 32)
!774 = !DIGlobalVariableExpression(var: !775, expr: !DIExpression())
!775 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !748, file: !696, line: 586, type: !753, isLocal: true, isDefinition: true, align: 32)
!776 = !DIGlobalVariableExpression(var: !777, expr: !DIExpression())
!777 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !748, file: !696, line: 591, type: !753, isLocal: true, isDefinition: true, align: 32)
!778 = !DIGlobalVariableExpression(var: !779, expr: !DIExpression())
!779 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !748, file: !696, line: 595, type: !753, isLocal: true, isDefinition: true, align: 32)
!780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !781, size: 736, elements: !742)
!781 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !782)
!782 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !297, line: 154, baseType: !595)
!783 = !DIGlobalVariableExpression(var: !784, expr: !DIExpression())
!784 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !785, file: !790, line: 22, type: !812, isLocal: false, isDefinition: true, align: 16)
!785 = distinct !DICompileUnit(language: DW_LANG_C99, file: !786, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !787, splitDebugInlining: false, nameTableKind: None)
!786 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!787 = !{!788, !783, !794, !796, !798, !800, !802, !804, !806, !808, !810}
!788 = !DIGlobalVariableExpression(var: !789, expr: !DIExpression())
!789 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !785, file: !790, line: 17, type: !791, isLocal: false, isDefinition: true, align: 16)
!790 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, size: 192, elements: !792)
!792 = !{!793}
!793 = !DISubrange(count: 12)
!794 = !DIGlobalVariableExpression(var: !795, expr: !DIExpression())
!795 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !785, file: !790, line: 29, type: !697, isLocal: false, isDefinition: true, align: 16)
!796 = !DIGlobalVariableExpression(var: !797, expr: !DIExpression())
!797 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !785, file: !790, line: 36, type: !697, isLocal: false, isDefinition: true, align: 16)
!798 = !DIGlobalVariableExpression(var: !799, expr: !DIExpression())
!799 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !785, file: !790, line: 43, type: !697, isLocal: false, isDefinition: true, align: 16)
!800 = !DIGlobalVariableExpression(var: !801, expr: !DIExpression())
!801 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !785, file: !790, line: 50, type: !697, isLocal: false, isDefinition: true, align: 16)
!802 = !DIGlobalVariableExpression(var: !803, expr: !DIExpression())
!803 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !785, file: !790, line: 57, type: !697, isLocal: false, isDefinition: true, align: 16)
!804 = !DIGlobalVariableExpression(var: !805, expr: !DIExpression())
!805 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !785, file: !790, line: 64, type: !697, isLocal: false, isDefinition: true, align: 16)
!806 = !DIGlobalVariableExpression(var: !807, expr: !DIExpression())
!807 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !785, file: !790, line: 71, type: !697, isLocal: false, isDefinition: true, align: 16)
!808 = !DIGlobalVariableExpression(var: !809, expr: !DIExpression())
!809 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !785, file: !790, line: 78, type: !697, isLocal: false, isDefinition: true, align: 16)
!810 = !DIGlobalVariableExpression(var: !811, expr: !DIExpression())
!811 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !785, file: !790, line: 85, type: !697, isLocal: false, isDefinition: true, align: 16)
!812 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, size: 48, elements: !813)
!813 = !{!814}
!814 = !DISubrange(count: 3)
!815 = !DIGlobalVariableExpression(var: !816, expr: !DIExpression())
!816 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !817, file: !879, line: 398, type: !912, isLocal: true, isDefinition: true)
!817 = distinct !DICompileUnit(language: DW_LANG_C99, file: !818, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !819, retainedTypes: !832, globals: !876, splitDebugInlining: false, nameTableKind: None)
!818 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!819 = !{!820, !30, !825}
!820 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !821, line: 197, baseType: !32, size: 32, elements: !822)
!821 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!822 = !{!823, !824}
!823 = !DIEnumerator(name: "SUCCESS", value: 0)
!824 = !DIEnumerator(name: "ERROR", value: 1)
!825 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !826, line: 44, baseType: !32, size: 32, elements: !827)
!826 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!827 = !{!828, !829, !830, !831}
!828 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!829 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!830 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!831 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!832 = !{!108, !109, !110, !833, !869, !875}
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 32)
!834 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !297, line: 510, baseType: !835)
!835 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 477, size: 1216, elements: !836)
!836 = !{!837, !838, !839, !840, !841, !842, !843, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !835, file: !297, line: 479, baseType: !301, size: 32)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !835, file: !297, line: 480, baseType: !301, size: 32, offset: 32)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !835, file: !297, line: 481, baseType: !301, size: 32, offset: 64)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !835, file: !297, line: 482, baseType: !301, size: 32, offset: 96)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !835, file: !297, line: 483, baseType: !301, size: 32, offset: 128)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !835, file: !297, line: 484, baseType: !301, size: 32, offset: 160)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !835, file: !297, line: 485, baseType: !844, size: 64, offset: 192)
!844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 64, elements: !162)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !835, file: !297, line: 486, baseType: !301, size: 32, offset: 256)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !835, file: !297, line: 487, baseType: !301, size: 32, offset: 288)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !835, file: !297, line: 488, baseType: !844, size: 64, offset: 320)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !835, file: !297, line: 489, baseType: !301, size: 32, offset: 384)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !835, file: !297, line: 490, baseType: !301, size: 32, offset: 416)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !835, file: !297, line: 491, baseType: !844, size: 64, offset: 448)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !835, file: !297, line: 492, baseType: !301, size: 32, offset: 512)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !835, file: !297, line: 493, baseType: !301, size: 32, offset: 544)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !835, file: !297, line: 494, baseType: !844, size: 64, offset: 576)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !835, file: !297, line: 495, baseType: !301, size: 32, offset: 640)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !835, file: !297, line: 496, baseType: !301, size: 32, offset: 672)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !835, file: !297, line: 497, baseType: !844, size: 64, offset: 704)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !835, file: !297, line: 498, baseType: !301, size: 32, offset: 768)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !835, file: !297, line: 499, baseType: !301, size: 32, offset: 800)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !835, file: !297, line: 500, baseType: !844, size: 64, offset: 832)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !835, file: !297, line: 501, baseType: !301, size: 32, offset: 896)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !835, file: !297, line: 502, baseType: !301, size: 32, offset: 928)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !835, file: !297, line: 503, baseType: !844, size: 64, offset: 960)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !835, file: !297, line: 504, baseType: !301, size: 32, offset: 1024)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !835, file: !297, line: 505, baseType: !301, size: 32, offset: 1056)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !835, file: !297, line: 506, baseType: !110, size: 32, offset: 1088)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !835, file: !297, line: 507, baseType: !301, size: 32, offset: 1120)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !835, file: !297, line: 508, baseType: !301, size: 32, offset: 1152)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !835, file: !297, line: 509, baseType: !301, size: 32, offset: 1184)
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 32)
!870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !871, line: 343, size: 64, elements: !872)
!871 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!872 = !{!873, !874}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !870, file: !871, line: 344, baseType: !110, size: 32)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !870, file: !871, line: 345, baseType: !110, size: 32, offset: 32)
!875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 32)
!876 = !{!877, !883, !899, !910, !815}
!877 = !DIGlobalVariableExpression(var: !878, expr: !DIExpression())
!878 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !817, file: !879, line: 752, type: !880, isLocal: false, isDefinition: true, align: 16)
!879 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, size: 848, elements: !881)
!881 = !{!882}
!882 = !DISubrange(count: 53)
!883 = !DIGlobalVariableExpression(var: !884, expr: !DIExpression())
!884 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !817, file: !879, line: 752, type: !885, isLocal: false, isDefinition: true, align: 32)
!885 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !886)
!886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !321, line: 378, size: 192, elements: !887)
!887 = !{!888, !889, !890, !891, !897, !898}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !886, file: !321, line: 380, baseType: !324, size: 32)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !886, file: !321, line: 382, baseType: !13, size: 32, offset: 32)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !886, file: !321, line: 384, baseType: !13, size: 32, offset: 64)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !886, file: !321, line: 386, baseType: !892, size: 32, offset: 96)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 32)
!893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !321, line: 351, size: 16, elements: !894)
!894 = !{!895, !896}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !893, file: !321, line: 359, baseType: !167, size: 8)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !893, file: !321, line: 364, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !886, file: !321, line: 388, baseType: !108, size: 32, offset: 128)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !886, file: !321, line: 396, baseType: !337, size: 32, offset: 160)
!899 = !DIGlobalVariableExpression(var: !900, expr: !DIExpression())
!900 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !817, file: !879, line: 752, type: !901, isLocal: true, isDefinition: true, align: 32)
!901 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !902)
!902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !312, line: 51, size: 64, elements: !903)
!903 = !{!904, !909}
!904 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !902, file: !312, line: 60, baseType: !905, size: 32)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 32)
!906 = !DISubroutineType(types: !907)
!907 = !{!109, !908}
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 32)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !902, file: !312, line: 65, baseType: !908, size: 32, offset: 32)
!910 = !DIGlobalVariableExpression(var: !911, expr: !DIExpression())
!911 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !817, file: !879, line: 752, type: !893, isLocal: true, isDefinition: true, align: 8)
!912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !826, line: 100, size: 224, elements: !913)
!913 = !{!914, !920, !921, !930, !935, !940, !946}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !912, file: !826, line: 101, baseType: !915, size: 32)
!915 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !826, line: 76, baseType: !916)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 32)
!917 = !DISubroutineType(types: !918)
!918 = !{!109, !908, !919}
!919 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !826, line: 56, baseType: !108)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !912, file: !826, line: 102, baseType: !915, size: 32, offset: 32)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !912, file: !826, line: 103, baseType: !922, size: 32, offset: 64)
!922 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !826, line: 83, baseType: !923)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 32)
!924 = !DISubroutineType(types: !925)
!925 = !{!109, !908, !919, !926, !108}
!926 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !826, line: 72, baseType: !927)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 32)
!928 = !DISubroutineType(types: !929)
!929 = !{null, !908, !919, !108}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !912, file: !826, line: 104, baseType: !931, size: 32, offset: 96)
!931 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !826, line: 79, baseType: !932)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 32)
!933 = !DISubroutineType(types: !934)
!934 = !{!109, !908, !919, !875}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !912, file: !826, line: 105, baseType: !936, size: 32, offset: 128)
!936 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !826, line: 88, baseType: !937)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 32)
!938 = !DISubroutineType(types: !939)
!939 = !{!825, !908, !919}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !912, file: !826, line: 106, baseType: !941, size: 32, offset: 160)
!941 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !826, line: 92, baseType: !942)
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 32)
!943 = !DISubroutineType(types: !944)
!944 = !{!109, !908, !919, !945}
!945 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !826, line: 64, baseType: !108)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !912, file: !826, line: 107, baseType: !947, size: 32, offset: 192)
!947 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !826, line: 96, baseType: !948)
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 32)
!949 = !DISubroutineType(types: !950)
!950 = !{!109, !908, !919, !108}
!951 = !DIGlobalVariableExpression(var: !952, expr: !DIExpression())
!952 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !953, file: !1010, line: 603, type: !1012, isLocal: true, isDefinition: true, align: 32)
!953 = distinct !DICompileUnit(language: DW_LANG_C99, file: !954, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !955, globals: !1007, splitDebugInlining: false, nameTableKind: None)
!954 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!955 = !{!108, !109, !956}
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 32)
!957 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !958)
!958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !959, line: 336, size: 160, elements: !960)
!959 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!960 = !{!961, !981, !985, !989, !1002}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !958, file: !959, line: 365, baseType: !962, size: 32)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 32)
!963 = !DISubroutineType(types: !964)
!964 = !{!109, !965, !980}
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 32)
!966 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !967)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !321, line: 378, size: 192, elements: !968)
!968 = !{!969, !970, !971, !972, !978, !979}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !967, file: !321, line: 380, baseType: !324, size: 32)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !967, file: !321, line: 382, baseType: !13, size: 32, offset: 32)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !967, file: !321, line: 384, baseType: !13, size: 32, offset: 64)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !967, file: !321, line: 386, baseType: !973, size: 32, offset: 96)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 32)
!974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !321, line: 351, size: 16, elements: !975)
!975 = !{!976, !977}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !974, file: !321, line: 359, baseType: !167, size: 8)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !974, file: !321, line: 364, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !967, file: !321, line: 388, baseType: !108, size: 32, offset: 128)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !967, file: !321, line: 396, baseType: !337, size: 32, offset: 160)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 32)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !958, file: !959, line: 366, baseType: !982, size: 32, offset: 32)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 32)
!983 = !DISubroutineType(types: !984)
!984 = !{null, !965, !168}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !958, file: !959, line: 374, baseType: !986, size: 32, offset: 64)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 32)
!987 = !DISubroutineType(types: !988)
!988 = !{!109, !965}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !958, file: !959, line: 377, baseType: !990, size: 32, offset: 96)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 32)
!991 = !DISubroutineType(types: !992)
!992 = !{!109, !965, !993}
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 32)
!994 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !995)
!995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !959, line: 122, size: 64, elements: !996)
!996 = !{!997, !998, !999, !1000, !1001}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !995, file: !959, line: 123, baseType: !110, size: 32)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !995, file: !959, line: 124, baseType: !167, size: 8, offset: 32)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !995, file: !959, line: 125, baseType: !167, size: 8, offset: 40)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !995, file: !959, line: 126, baseType: !167, size: 8, offset: 48)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !995, file: !959, line: 127, baseType: !167, size: 8, offset: 56)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !958, file: !959, line: 379, baseType: !1003, size: 32, offset: 128)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 32)
!1004 = !DISubroutineType(types: !1005)
!1005 = !{!109, !965, !1006}
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 32)
!1007 = !{!951, !1008}
!1008 = !DIGlobalVariableExpression(var: !1009, expr: !DIExpression())
!1009 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !953, file: !1010, line: 38, type: !1011, isLocal: true, isDefinition: true)
!1010 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1011 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !965)
!1012 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1013)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !312, line: 51, size: 64, elements: !1014)
!1014 = !{!1015, !1016}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1013, file: !312, line: 60, baseType: !986, size: 32)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1013, file: !312, line: 65, baseType: !965, size: 32, offset: 32)
!1017 = !DIGlobalVariableExpression(var: !1018, expr: !DIExpression())
!1018 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1019, file: !1191, line: 762, type: !1301, isLocal: true, isDefinition: true)
!1019 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1020, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1021, retainedTypes: !1039, globals: !1188, splitDebugInlining: false, nameTableKind: None)
!1020 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!1021 = !{!30, !1022, !1028, !1033, !825}
!1022 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1023, line: 506, baseType: !32, size: 32, elements: !1024)
!1023 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1024 = !{!1025, !1026, !1027}
!1025 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1026 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1027 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1028 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1023, line: 512, baseType: !32, size: 32, elements: !1029)
!1029 = !{!1030, !1031, !1032}
!1030 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1031 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1032 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1033 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !737, line: 43, baseType: !32, size: 32, elements: !1034)
!1034 = !{!1035, !1036, !1037, !1038}
!1035 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1036 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1037 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1038 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1039 = !{!108, !109, !1040, !1110, !1115, !1075, !1028, !1022, !1120, !1121, !110, !1135, !1090, !1147, !1148, !1149}
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 32)
!1041 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1042)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1023, line: 523, size: 288, elements: !1043)
!1043 = !{!1044, !1065, !1071, !1076, !1080, !1081, !1082, !1086, !1106}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1042, file: !1023, line: 524, baseType: !1045, size: 32)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 32)
!1046 = !DISubroutineType(types: !1047)
!1047 = !{!109, !1048, !1063, !1064}
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 32)
!1049 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1050)
!1050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !321, line: 378, size: 192, elements: !1051)
!1051 = !{!1052, !1053, !1054, !1055, !1061, !1062}
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1050, file: !321, line: 380, baseType: !324, size: 32)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1050, file: !321, line: 382, baseType: !13, size: 32, offset: 32)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1050, file: !321, line: 384, baseType: !13, size: 32, offset: 64)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1050, file: !321, line: 386, baseType: !1056, size: 32, offset: 96)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 32)
!1057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !321, line: 351, size: 16, elements: !1058)
!1058 = !{!1059, !1060}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1057, file: !321, line: 359, baseType: !167, size: 8)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1057, file: !321, line: 364, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1050, file: !321, line: 388, baseType: !108, size: 32, offset: 128)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1050, file: !321, line: 396, baseType: !337, size: 32, offset: 160)
!1063 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1023, line: 237, baseType: !167)
!1064 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1023, line: 257, baseType: !110)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1042, file: !1023, line: 530, baseType: !1066, size: 32, offset: 32)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 32)
!1067 = !DISubroutineType(types: !1068)
!1068 = !{!109, !1048, !1069}
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 32)
!1070 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1023, line: 229, baseType: !110)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1042, file: !1023, line: 532, baseType: !1072, size: 32, offset: 64)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 32)
!1073 = !DISubroutineType(types: !1074)
!1074 = !{!109, !1048, !1075, !1070}
!1075 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1023, line: 216, baseType: !110)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1042, file: !1023, line: 535, baseType: !1077, size: 32, offset: 96)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 32)
!1078 = !DISubroutineType(types: !1079)
!1079 = !{!109, !1048, !1075}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1042, file: !1023, line: 537, baseType: !1077, size: 32, offset: 128)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1042, file: !1023, line: 539, baseType: !1077, size: 32, offset: 160)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1042, file: !1023, line: 541, baseType: !1083, size: 32, offset: 192)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 32)
!1084 = !DISubroutineType(types: !1085)
!1085 = !{!109, !1048, !1063, !1022, !1028}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1042, file: !1023, line: 544, baseType: !1087, size: 32, offset: 224)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 32)
!1088 = !DISubroutineType(types: !1089)
!1089 = !{!109, !1048, !1090, !334}
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 32)
!1091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1023, line: 478, size: 96, elements: !1092)
!1092 = !{!1093, !1100, !1105}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1091, file: !1023, line: 482, baseType: !1094, size: 32)
!1094 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1095, line: 33, baseType: !1096)
!1095 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1095, line: 29, size: 32, elements: !1097)
!1097 = !{!1098}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1096, file: !1095, line: 30, baseType: !1099, size: 32)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 32)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1091, file: !1023, line: 485, baseType: !1101, size: 32, offset: 32)
!1101 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1023, line: 464, baseType: !1102)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 32)
!1103 = !DISubroutineType(types: !1104)
!1104 = !{null, !1048, !1090, !1075}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1091, file: !1023, line: 493, baseType: !1075, size: 32, offset: 64)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1042, file: !1023, line: 547, baseType: !1107, size: 32, offset: 256)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 32)
!1108 = !DISubroutineType(types: !1109)
!1109 = !{!110, !1048}
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 32)
!1111 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1112)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1023, line: 428, size: 32, elements: !1113)
!1113 = !{!1114}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1112, file: !1023, line: 434, baseType: !1075, size: 32)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 32)
!1116 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1117)
!1117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1023, line: 441, size: 32, elements: !1118)
!1118 = !{!1119}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1117, file: !1023, line: 447, baseType: !1075, size: 32)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 32)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 32)
!1122 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !297, line: 396, baseType: !1123)
!1123 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 385, size: 320, elements: !1124)
!1124 = !{!1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1123, file: !297, line: 387, baseType: !301, size: 32)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1123, file: !297, line: 388, baseType: !301, size: 32, offset: 32)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1123, file: !297, line: 389, baseType: !301, size: 32, offset: 64)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1123, file: !297, line: 390, baseType: !301, size: 32, offset: 96)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1123, file: !297, line: 391, baseType: !301, size: 32, offset: 128)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1123, file: !297, line: 392, baseType: !301, size: 32, offset: 160)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1123, file: !297, line: 393, baseType: !301, size: 32, offset: 192)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1123, file: !297, line: 394, baseType: !301, size: 32, offset: 224)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1123, file: !297, line: 395, baseType: !1134, size: 64, offset: 256)
!1134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 64, elements: !162)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 32)
!1136 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !297, line: 411, baseType: !1137)
!1137 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 402, size: 320, elements: !1138)
!1138 = !{!1139, !1140, !1141, !1143, !1144, !1145, !1146}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1137, file: !297, line: 404, baseType: !301, size: 32)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1137, file: !297, line: 405, baseType: !301, size: 32, offset: 32)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1137, file: !297, line: 406, baseType: !1142, size: 128, offset: 64)
!1142 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 128, elements: !698)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1137, file: !297, line: 407, baseType: !110, size: 32, offset: 192)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR2", scope: !1137, file: !297, line: 408, baseType: !301, size: 32, offset: 224)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1137, file: !297, line: 409, baseType: !301, size: 32, offset: 256)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1137, file: !297, line: 410, baseType: !301, size: 32, offset: 288)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 32)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 32)
!1149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1150, size: 32)
!1150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1151)
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !826, line: 100, size: 224, elements: !1152)
!1152 = !{!1153, !1158, !1159, !1168, !1173, !1178, !1183}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1151, file: !826, line: 101, baseType: !1154, size: 32)
!1154 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !826, line: 76, baseType: !1155)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 32)
!1156 = !DISubroutineType(types: !1157)
!1157 = !{!109, !1048, !919}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1151, file: !826, line: 102, baseType: !1154, size: 32, offset: 32)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1151, file: !826, line: 103, baseType: !1160, size: 32, offset: 64)
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !826, line: 83, baseType: !1161)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 32)
!1162 = !DISubroutineType(types: !1163)
!1163 = !{!109, !1048, !919, !1164, !108}
!1164 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !826, line: 72, baseType: !1165)
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 32)
!1166 = !DISubroutineType(types: !1167)
!1167 = !{null, !1048, !919, !108}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1151, file: !826, line: 104, baseType: !1169, size: 32, offset: 96)
!1169 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !826, line: 79, baseType: !1170)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 32)
!1171 = !DISubroutineType(types: !1172)
!1172 = !{!109, !1048, !919, !875}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1151, file: !826, line: 105, baseType: !1174, size: 32, offset: 128)
!1174 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !826, line: 88, baseType: !1175)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 32)
!1176 = !DISubroutineType(types: !1177)
!1177 = !{!825, !1048, !919}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1151, file: !826, line: 106, baseType: !1179, size: 32, offset: 160)
!1179 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !826, line: 92, baseType: !1180)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 32)
!1181 = !DISubroutineType(types: !1182)
!1182 = !{!109, !1048, !919, !945}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1151, file: !826, line: 107, baseType: !1184, size: 32, offset: 192)
!1184 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !826, line: 96, baseType: !1185)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 32)
!1186 = !DISubroutineType(types: !1187)
!1187 = !{!109, !1048, !919, !108}
!1188 = !{!1189, !1195, !1197, !1207, !1209, !1211, !1213, !1216, !1218, !1220, !1225, !1227, !1229, !1231, !1233, !1235, !1237, !1239, !1241, !1243, !1245, !1247, !1249, !1251, !1253, !1267, !1269, !1271, !1273, !1275, !1277, !1279, !1281, !1283, !1285, !1287, !1289, !1291, !1293, !1295, !1017, !1297, !1299, !1312, !1314, !1316, !1318, !1320, !1322}
!1189 = !DIGlobalVariableExpression(var: !1190, expr: !DIExpression())
!1190 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1019, file: !1191, line: 762, type: !1192, isLocal: false, isDefinition: true, align: 16)
!1191 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, size: 112, elements: !1193)
!1193 = !{!1194}
!1194 = !DISubrange(count: 7)
!1195 = !DIGlobalVariableExpression(var: !1196, expr: !DIExpression())
!1196 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1019, file: !1191, line: 762, type: !1049, isLocal: false, isDefinition: true, align: 32)
!1197 = !DIGlobalVariableExpression(var: !1198, expr: !DIExpression())
!1198 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1019, file: !1191, line: 762, type: !1199, isLocal: true, isDefinition: true, align: 32)
!1199 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1200)
!1200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !312, line: 51, size: 64, elements: !1201)
!1201 = !{!1202, !1206}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1200, file: !312, line: 60, baseType: !1203, size: 32)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 32)
!1204 = !DISubroutineType(types: !1205)
!1205 = !{!109, !1048}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1200, file: !312, line: 65, baseType: !1048, size: 32, offset: 32)
!1207 = !DIGlobalVariableExpression(var: !1208, expr: !DIExpression())
!1208 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !1019, file: !1191, line: 766, type: !1192, isLocal: false, isDefinition: true, align: 16)
!1209 = !DIGlobalVariableExpression(var: !1210, expr: !DIExpression())
!1210 = distinct !DIGlobalVariable(name: "__device_dts_ord_24", scope: !1019, file: !1191, line: 766, type: !1049, isLocal: false, isDefinition: true, align: 32)
!1211 = !DIGlobalVariableExpression(var: !1212, expr: !DIExpression())
!1212 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_24", scope: !1019, file: !1191, line: 766, type: !1199, isLocal: true, isDefinition: true, align: 32)
!1213 = !DIGlobalVariableExpression(var: !1214, expr: !DIExpression())
!1214 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !1019, file: !1191, line: 770, type: !1215, isLocal: false, isDefinition: true, align: 16)
!1215 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, size: 96, elements: !264)
!1216 = !DIGlobalVariableExpression(var: !1217, expr: !DIExpression())
!1217 = distinct !DIGlobalVariable(name: "__device_dts_ord_22", scope: !1019, file: !1191, line: 770, type: !1049, isLocal: false, isDefinition: true, align: 32)
!1218 = !DIGlobalVariableExpression(var: !1219, expr: !DIExpression())
!1219 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_22", scope: !1019, file: !1191, line: 770, type: !1199, isLocal: true, isDefinition: true, align: 32)
!1220 = !DIGlobalVariableExpression(var: !1221, expr: !DIExpression())
!1221 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !1019, file: !1191, line: 774, type: !1222, isLocal: false, isDefinition: true, align: 16)
!1222 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, size: 80, elements: !1223)
!1223 = !{!1224}
!1224 = !DISubrange(count: 5)
!1225 = !DIGlobalVariableExpression(var: !1226, expr: !DIExpression())
!1226 = distinct !DIGlobalVariable(name: "__device_dts_ord_75", scope: !1019, file: !1191, line: 774, type: !1049, isLocal: false, isDefinition: true, align: 32)
!1227 = !DIGlobalVariableExpression(var: !1228, expr: !DIExpression())
!1228 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_75", scope: !1019, file: !1191, line: 774, type: !1199, isLocal: true, isDefinition: true, align: 32)
!1229 = !DIGlobalVariableExpression(var: !1230, expr: !DIExpression())
!1230 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !1019, file: !1191, line: 778, type: !1222, isLocal: false, isDefinition: true, align: 16)
!1231 = !DIGlobalVariableExpression(var: !1232, expr: !DIExpression())
!1232 = distinct !DIGlobalVariable(name: "__device_dts_ord_76", scope: !1019, file: !1191, line: 778, type: !1049, isLocal: false, isDefinition: true, align: 32)
!1233 = !DIGlobalVariableExpression(var: !1234, expr: !DIExpression())
!1234 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_76", scope: !1019, file: !1191, line: 778, type: !1199, isLocal: true, isDefinition: true, align: 32)
!1235 = !DIGlobalVariableExpression(var: !1236, expr: !DIExpression())
!1236 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !1019, file: !1191, line: 782, type: !1222, isLocal: false, isDefinition: true, align: 16)
!1237 = !DIGlobalVariableExpression(var: !1238, expr: !DIExpression())
!1238 = distinct !DIGlobalVariable(name: "__device_dts_ord_77", scope: !1019, file: !1191, line: 782, type: !1049, isLocal: false, isDefinition: true, align: 32)
!1239 = !DIGlobalVariableExpression(var: !1240, expr: !DIExpression())
!1240 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_77", scope: !1019, file: !1191, line: 782, type: !1199, isLocal: true, isDefinition: true, align: 32)
!1241 = !DIGlobalVariableExpression(var: !1242, expr: !DIExpression())
!1242 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !1019, file: !1191, line: 786, type: !1222, isLocal: false, isDefinition: true, align: 16)
!1243 = !DIGlobalVariableExpression(var: !1244, expr: !DIExpression())
!1244 = distinct !DIGlobalVariable(name: "__device_dts_ord_78", scope: !1019, file: !1191, line: 786, type: !1049, isLocal: false, isDefinition: true, align: 32)
!1245 = !DIGlobalVariableExpression(var: !1246, expr: !DIExpression())
!1246 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_78", scope: !1019, file: !1191, line: 786, type: !1199, isLocal: true, isDefinition: true, align: 32)
!1247 = !DIGlobalVariableExpression(var: !1248, expr: !DIExpression())
!1248 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !1019, file: !1191, line: 790, type: !1222, isLocal: false, isDefinition: true, align: 16)
!1249 = !DIGlobalVariableExpression(var: !1250, expr: !DIExpression())
!1250 = distinct !DIGlobalVariable(name: "__device_dts_ord_79", scope: !1019, file: !1191, line: 790, type: !1049, isLocal: false, isDefinition: true, align: 32)
!1251 = !DIGlobalVariableExpression(var: !1252, expr: !DIExpression())
!1252 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_79", scope: !1019, file: !1191, line: 790, type: !1199, isLocal: true, isDefinition: true, align: 32)
!1253 = !DIGlobalVariableExpression(var: !1254, expr: !DIExpression())
!1254 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1019, file: !1191, line: 762, type: !1255, isLocal: true, isDefinition: true)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1256, line: 237, size: 128, elements: !1257)
!1256 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1257 = !{!1258, !1259, !1260}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1255, file: !1256, line: 239, baseType: !1117, size: 32)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1255, file: !1256, line: 241, baseType: !1048, size: 32, offset: 32)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1255, file: !1256, line: 243, baseType: !1261, size: 64, offset: 64)
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1095, line: 40, baseType: !1262)
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1095, line: 35, size: 64, elements: !1263)
!1263 = !{!1264, !1266}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1262, file: !1095, line: 36, baseType: !1265, size: 32)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 32)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1262, file: !1095, line: 37, baseType: !1265, size: 32, offset: 32)
!1267 = !DIGlobalVariableExpression(var: !1268, expr: !DIExpression())
!1268 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1019, file: !1191, line: 762, type: !1057, isLocal: true, isDefinition: true, align: 8)
!1269 = !DIGlobalVariableExpression(var: !1270, expr: !DIExpression())
!1270 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1019, file: !1191, line: 766, type: !1255, isLocal: true, isDefinition: true)
!1271 = !DIGlobalVariableExpression(var: !1272, expr: !DIExpression())
!1272 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_24", scope: !1019, file: !1191, line: 766, type: !1057, isLocal: true, isDefinition: true, align: 8)
!1273 = !DIGlobalVariableExpression(var: !1274, expr: !DIExpression())
!1274 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1019, file: !1191, line: 770, type: !1255, isLocal: true, isDefinition: true)
!1275 = !DIGlobalVariableExpression(var: !1276, expr: !DIExpression())
!1276 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_22", scope: !1019, file: !1191, line: 770, type: !1057, isLocal: true, isDefinition: true, align: 8)
!1277 = !DIGlobalVariableExpression(var: !1278, expr: !DIExpression())
!1278 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1019, file: !1191, line: 774, type: !1255, isLocal: true, isDefinition: true)
!1279 = !DIGlobalVariableExpression(var: !1280, expr: !DIExpression())
!1280 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_75", scope: !1019, file: !1191, line: 774, type: !1057, isLocal: true, isDefinition: true, align: 8)
!1281 = !DIGlobalVariableExpression(var: !1282, expr: !DIExpression())
!1282 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1019, file: !1191, line: 778, type: !1255, isLocal: true, isDefinition: true)
!1283 = !DIGlobalVariableExpression(var: !1284, expr: !DIExpression())
!1284 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_76", scope: !1019, file: !1191, line: 778, type: !1057, isLocal: true, isDefinition: true, align: 8)
!1285 = !DIGlobalVariableExpression(var: !1286, expr: !DIExpression())
!1286 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1019, file: !1191, line: 782, type: !1255, isLocal: true, isDefinition: true)
!1287 = !DIGlobalVariableExpression(var: !1288, expr: !DIExpression())
!1288 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_77", scope: !1019, file: !1191, line: 782, type: !1057, isLocal: true, isDefinition: true, align: 8)
!1289 = !DIGlobalVariableExpression(var: !1290, expr: !DIExpression())
!1290 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1019, file: !1191, line: 786, type: !1255, isLocal: true, isDefinition: true)
!1291 = !DIGlobalVariableExpression(var: !1292, expr: !DIExpression())
!1292 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_78", scope: !1019, file: !1191, line: 786, type: !1057, isLocal: true, isDefinition: true, align: 8)
!1293 = !DIGlobalVariableExpression(var: !1294, expr: !DIExpression())
!1294 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1019, file: !1191, line: 790, type: !1255, isLocal: true, isDefinition: true)
!1295 = !DIGlobalVariableExpression(var: !1296, expr: !DIExpression())
!1296 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_79", scope: !1019, file: !1191, line: 790, type: !1057, isLocal: true, isDefinition: true, align: 8)
!1297 = !DIGlobalVariableExpression(var: !1298, expr: !DIExpression())
!1298 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1019, file: !1191, line: 656, type: !1041, isLocal: true, isDefinition: true)
!1299 = !DIGlobalVariableExpression(var: !1300, expr: !DIExpression())
!1300 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1019, file: !1191, line: 766, type: !1301, isLocal: true, isDefinition: true)
!1301 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1302)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1256, line: 224, size: 160, elements: !1303)
!1303 = !{!1304, !1305, !1306, !1307}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1302, file: !1256, line: 226, baseType: !1112, size: 32)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1302, file: !1256, line: 228, baseType: !875, size: 32, offset: 32)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1302, file: !1256, line: 230, baseType: !109, size: 32, offset: 64)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1302, file: !1256, line: 231, baseType: !1308, size: 64, offset: 96)
!1308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !871, line: 343, size: 64, elements: !1309)
!1309 = !{!1310, !1311}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1308, file: !871, line: 344, baseType: !110, size: 32)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1308, file: !871, line: 345, baseType: !110, size: 32, offset: 32)
!1312 = !DIGlobalVariableExpression(var: !1313, expr: !DIExpression())
!1313 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1019, file: !1191, line: 770, type: !1301, isLocal: true, isDefinition: true)
!1314 = !DIGlobalVariableExpression(var: !1315, expr: !DIExpression())
!1315 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1019, file: !1191, line: 774, type: !1301, isLocal: true, isDefinition: true)
!1316 = !DIGlobalVariableExpression(var: !1317, expr: !DIExpression())
!1317 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1019, file: !1191, line: 778, type: !1301, isLocal: true, isDefinition: true)
!1318 = !DIGlobalVariableExpression(var: !1319, expr: !DIExpression())
!1319 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1019, file: !1191, line: 782, type: !1301, isLocal: true, isDefinition: true)
!1320 = !DIGlobalVariableExpression(var: !1321, expr: !DIExpression())
!1321 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1019, file: !1191, line: 786, type: !1301, isLocal: true, isDefinition: true)
!1322 = !DIGlobalVariableExpression(var: !1323, expr: !DIExpression())
!1323 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1019, file: !1191, line: 790, type: !1301, isLocal: true, isDefinition: true)
!1324 = !DIGlobalVariableExpression(var: !1325, expr: !DIExpression())
!1325 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1326, file: !1465, line: 1914, type: !1526, isLocal: true, isDefinition: true)
!1326 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1327, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1328, retainedTypes: !1361, globals: !1462, splitDebugInlining: false, nameTableKind: None)
!1327 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!1328 = !{!30, !1329, !1336, !1343, !1350, !1356, !825}
!1329 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !959, line: 47, baseType: !32, size: 32, elements: !1330)
!1330 = !{!1331, !1332, !1333, !1334, !1335}
!1331 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1332 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1333 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1334 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1335 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1336 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !959, line: 75, baseType: !32, size: 32, elements: !1337)
!1337 = !{!1338, !1339, !1340, !1341, !1342}
!1338 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1339 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1340 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1341 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1342 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1343 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !959, line: 92, baseType: !32, size: 32, elements: !1344)
!1344 = !{!1345, !1346, !1347, !1348, !1349}
!1345 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1346 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1347 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1348 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1349 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1350 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !959, line: 84, baseType: !32, size: 32, elements: !1351)
!1351 = !{!1352, !1353, !1354, !1355}
!1352 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1353 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1354 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1355 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1356 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !959, line: 107, baseType: !32, size: 32, elements: !1357)
!1357 = !{!1358, !1359, !1360}
!1358 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1359 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1360 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1361 = !{!108, !109, !1362, !168, !167, !1411, !110, !919, !1422, !181, !111, !1461}
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 32)
!1363 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1364)
!1364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !959, line: 336, size: 160, elements: !1365)
!1365 = !{!1366, !1385, !1389, !1393, !1406}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1364, file: !959, line: 365, baseType: !1367, size: 32)
!1367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1368, size: 32)
!1368 = !DISubroutineType(types: !1369)
!1369 = !{!109, !1370, !980}
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 32)
!1371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1372)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !321, line: 378, size: 192, elements: !1373)
!1373 = !{!1374, !1375, !1376, !1377, !1383, !1384}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1372, file: !321, line: 380, baseType: !324, size: 32)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1372, file: !321, line: 382, baseType: !13, size: 32, offset: 32)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1372, file: !321, line: 384, baseType: !13, size: 32, offset: 64)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1372, file: !321, line: 386, baseType: !1378, size: 32, offset: 96)
!1378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 32)
!1379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !321, line: 351, size: 16, elements: !1380)
!1380 = !{!1381, !1382}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1379, file: !321, line: 359, baseType: !167, size: 8)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1379, file: !321, line: 364, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1372, file: !321, line: 388, baseType: !108, size: 32, offset: 128)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1372, file: !321, line: 396, baseType: !337, size: 32, offset: 160)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1364, file: !959, line: 366, baseType: !1386, size: 32, offset: 32)
!1386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1387, size: 32)
!1387 = !DISubroutineType(types: !1388)
!1388 = !{null, !1370, !168}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1364, file: !959, line: 374, baseType: !1390, size: 32, offset: 64)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 32)
!1391 = !DISubroutineType(types: !1392)
!1392 = !{!109, !1370}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1364, file: !959, line: 377, baseType: !1394, size: 32, offset: 96)
!1394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1395, size: 32)
!1395 = !DISubroutineType(types: !1396)
!1396 = !{!109, !1370, !1397}
!1397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 32)
!1398 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1399)
!1399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !959, line: 122, size: 64, elements: !1400)
!1400 = !{!1401, !1402, !1403, !1404, !1405}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1399, file: !959, line: 123, baseType: !110, size: 32)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1399, file: !959, line: 124, baseType: !167, size: 8, offset: 32)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1399, file: !959, line: 125, baseType: !167, size: 8, offset: 40)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1399, file: !959, line: 126, baseType: !167, size: 8, offset: 48)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1399, file: !959, line: 127, baseType: !167, size: 8, offset: 56)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1364, file: !959, line: 379, baseType: !1407, size: 32, offset: 128)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 32)
!1408 = !DISubroutineType(types: !1409)
!1409 = !{!109, !1370, !1410}
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 32)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 32)
!1412 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !297, line: 648, baseType: !1413)
!1413 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 639, size: 224, elements: !1414)
!1414 = !{!1415, !1416, !1417, !1418, !1419, !1420, !1421}
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1413, file: !297, line: 641, baseType: !301, size: 32)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1413, file: !297, line: 642, baseType: !301, size: 32, offset: 32)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1413, file: !297, line: 643, baseType: !301, size: 32, offset: 64)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1413, file: !297, line: 644, baseType: !301, size: 32, offset: 96)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1413, file: !297, line: 645, baseType: !301, size: 32, offset: 128)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1413, file: !297, line: 646, baseType: !301, size: 32, offset: 160)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1413, file: !297, line: 647, baseType: !301, size: 32, offset: 192)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 32)
!1423 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1424)
!1424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !826, line: 100, size: 224, elements: !1425)
!1425 = !{!1426, !1431, !1432, !1441, !1446, !1451, !1456}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1424, file: !826, line: 101, baseType: !1427, size: 32)
!1427 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !826, line: 76, baseType: !1428)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 32)
!1429 = !DISubroutineType(types: !1430)
!1430 = !{!109, !1370, !919}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1424, file: !826, line: 102, baseType: !1427, size: 32, offset: 32)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1424, file: !826, line: 103, baseType: !1433, size: 32, offset: 64)
!1433 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !826, line: 83, baseType: !1434)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 32)
!1435 = !DISubroutineType(types: !1436)
!1436 = !{!109, !1370, !919, !1437, !108}
!1437 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !826, line: 72, baseType: !1438)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 32)
!1439 = !DISubroutineType(types: !1440)
!1440 = !{null, !1370, !919, !108}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1424, file: !826, line: 104, baseType: !1442, size: 32, offset: 96)
!1442 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !826, line: 79, baseType: !1443)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 32)
!1444 = !DISubroutineType(types: !1445)
!1445 = !{!109, !1370, !919, !875}
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1424, file: !826, line: 105, baseType: !1447, size: 32, offset: 128)
!1447 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !826, line: 88, baseType: !1448)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 32)
!1449 = !DISubroutineType(types: !1450)
!1450 = !{!825, !1370, !919}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1424, file: !826, line: 106, baseType: !1452, size: 32, offset: 160)
!1452 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !826, line: 92, baseType: !1453)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 32)
!1454 = !DISubroutineType(types: !1455)
!1455 = !{!109, !1370, !919, !945}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1424, file: !826, line: 107, baseType: !1457, size: 32, offset: 192)
!1457 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !826, line: 96, baseType: !1458)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 32)
!1459 = !DISubroutineType(types: !1460)
!1460 = !{!109, !1370, !919, !108}
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 32)
!1462 = !{!1463, !1469, !1471, !1478, !1324, !1480, !1488, !1511, !1514, !1517, !1519}
!1463 = !DIGlobalVariableExpression(var: !1464, expr: !DIExpression())
!1464 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !1326, file: !1465, line: 1914, type: !1466, isLocal: false, isDefinition: true, align: 16)
!1465 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, size: 128, elements: !1467)
!1467 = !{!1468}
!1468 = !DISubrange(count: 8)
!1469 = !DIGlobalVariableExpression(var: !1470, expr: !DIExpression())
!1470 = distinct !DIGlobalVariable(name: "__device_dts_ord_44", scope: !1326, file: !1465, line: 1914, type: !1371, isLocal: false, isDefinition: true, align: 32)
!1471 = !DIGlobalVariableExpression(var: !1472, expr: !DIExpression())
!1472 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_44", scope: !1326, file: !1465, line: 1914, type: !1473, isLocal: true, isDefinition: true, align: 32)
!1473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1474)
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !312, line: 51, size: 64, elements: !1475)
!1475 = !{!1476, !1477}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1474, file: !312, line: 60, baseType: !1390, size: 32)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1474, file: !312, line: 65, baseType: !1370, size: 32, offset: 32)
!1478 = !DIGlobalVariableExpression(var: !1479, expr: !DIExpression())
!1479 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_44", scope: !1326, file: !1465, line: 1914, type: !1379, isLocal: true, isDefinition: true, align: 8)
!1480 = !DIGlobalVariableExpression(var: !1481, expr: !DIExpression())
!1481 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1326, file: !1465, line: 1914, type: !1482, isLocal: true, isDefinition: true)
!1482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1483, size: 64, elements: !525)
!1483 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1484)
!1484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !871, line: 343, size: 64, elements: !1485)
!1485 = !{!1486, !1487}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1484, file: !871, line: 344, baseType: !110, size: 32)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1484, file: !871, line: 345, baseType: !110, size: 32, offset: 32)
!1488 = !DIGlobalVariableExpression(var: !1489, expr: !DIExpression())
!1489 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_44", scope: !1326, file: !1465, line: 1914, type: !1490, isLocal: true, isDefinition: true)
!1490 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1491)
!1491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1492, line: 60, size: 64, elements: !1493)
!1492 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1493 = !{!1494, !1510}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1491, file: !1492, line: 69, baseType: !1495, size: 32)
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 32)
!1496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1497)
!1497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1492, line: 50, size: 64, elements: !1498)
!1498 = !{!1499, !1508, !1509}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1497, file: !1492, line: 52, baseType: !1500, size: 32)
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 32)
!1501 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1502)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1503, line: 37, baseType: !1504)
!1503 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1503, line: 32, size: 64, elements: !1505)
!1505 = !{!1506, !1507}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1504, file: !1503, line: 34, baseType: !110, size: 32)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1504, file: !1503, line: 36, baseType: !110, size: 32, offset: 32)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1497, file: !1492, line: 54, baseType: !167, size: 8, offset: 32)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1497, file: !1492, line: 56, baseType: !167, size: 8, offset: 40)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1491, file: !1492, line: 71, baseType: !167, size: 8, offset: 32)
!1511 = !DIGlobalVariableExpression(var: !1512, expr: !DIExpression())
!1512 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_44", scope: !1326, file: !1465, line: 1914, type: !1513, isLocal: true, isDefinition: true)
!1513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1496, size: 64, elements: !525)
!1514 = !DIGlobalVariableExpression(var: !1515, expr: !DIExpression())
!1515 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_44", scope: !1326, file: !1465, line: 1914, type: !1516, isLocal: true, isDefinition: true)
!1516 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1501, size: 128, elements: !162)
!1517 = !DIGlobalVariableExpression(var: !1518, expr: !DIExpression())
!1518 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1326, file: !1465, line: 1539, type: !1363, isLocal: true, isDefinition: true)
!1519 = !DIGlobalVariableExpression(var: !1520, expr: !DIExpression())
!1520 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1326, file: !1465, line: 1914, type: !1521, isLocal: true, isDefinition: true)
!1521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1522, line: 74, size: 64, elements: !1523)
!1522 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1523 = !{!1524, !1525}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1521, file: !1522, line: 76, baseType: !110, size: 32)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1521, file: !1522, line: 78, baseType: !1370, size: 32, offset: 32)
!1526 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1527)
!1527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1522, line: 22, size: 224, elements: !1528)
!1528 = !{!1529, !1530, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1527, file: !1522, line: 24, baseType: !1411, size: 32)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1527, file: !1522, line: 26, baseType: !1531, size: 32, offset: 32)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 32)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1527, file: !1522, line: 28, baseType: !235, size: 32, offset: 64)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1527, file: !1522, line: 30, baseType: !334, size: 8, offset: 96)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1527, file: !1522, line: 32, baseType: !109, size: 32, offset: 128)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1527, file: !1522, line: 34, baseType: !334, size: 8, offset: 160)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1527, file: !1522, line: 36, baseType: !334, size: 8, offset: 168)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1527, file: !1522, line: 38, baseType: !334, size: 8, offset: 176)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1527, file: !1522, line: 40, baseType: !334, size: 8, offset: 184)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1527, file: !1522, line: 41, baseType: !1540, size: 32, offset: 192)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 32)
!1541 = !DIGlobalVariableExpression(var: !1542, expr: !DIExpression())
!1542 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1543, file: !1619, line: 65, type: !301, isLocal: true, isDefinition: true)
!1543 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1544, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1545, retainedTypes: !1546, globals: !1616, splitDebugInlining: false, nameTableKind: None)
!1544 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!1545 = !{!595}
!1546 = !{!104, !1547, !756, !167, !110, !1555, !1586}
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 32)
!1548 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !536, line: 770, baseType: !1549)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 764, size: 128, elements: !1550)
!1550 = !{!1551, !1552, !1553, !1554}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1549, file: !536, line: 766, baseType: !301, size: 32)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1549, file: !536, line: 767, baseType: !301, size: 32, offset: 32)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1549, file: !536, line: 768, baseType: !301, size: 32, offset: 64)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1549, file: !536, line: 769, baseType: !540, size: 32, offset: 96)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 32)
!1556 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !536, line: 426, baseType: !1557)
!1557 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 411, size: 28704, elements: !1558)
!1558 = !{!1559, !1561, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1576, !1581, !1585}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1557, file: !536, line: 413, baseType: !1560, size: 256)
!1560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 256, elements: !1467)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1557, file: !536, line: 414, baseType: !1562, size: 768, offset: 256)
!1562 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 768, elements: !1563)
!1563 = !{!1564}
!1564 = !DISubrange(count: 24)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1557, file: !536, line: 415, baseType: !1560, size: 256, offset: 1024)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1557, file: !536, line: 416, baseType: !1562, size: 768, offset: 1280)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1557, file: !536, line: 417, baseType: !1560, size: 256, offset: 2048)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1557, file: !536, line: 418, baseType: !1562, size: 768, offset: 2304)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1557, file: !536, line: 419, baseType: !1560, size: 256, offset: 3072)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1557, file: !536, line: 420, baseType: !1562, size: 768, offset: 3328)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1557, file: !536, line: 421, baseType: !1560, size: 256, offset: 4096)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1557, file: !536, line: 422, baseType: !1573, size: 1792, offset: 4352)
!1573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 1792, elements: !1574)
!1574 = !{!1575}
!1575 = !DISubrange(count: 56)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1557, file: !536, line: 423, baseType: !1577, size: 1920, offset: 6144)
!1577 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1578, size: 1920, elements: !1579)
!1578 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !167)
!1579 = !{!1580}
!1580 = !DISubrange(count: 240)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1557, file: !536, line: 424, baseType: !1582, size: 20608, offset: 8064)
!1582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 20608, elements: !1583)
!1583 = !{!1584}
!1584 = !DISubrange(count: 644)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1557, file: !536, line: 425, baseType: !301, size: 32, offset: 28672)
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1587, size: 32)
!1587 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !536, line: 468, baseType: !1588)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 445, size: 1120, elements: !1589)
!1589 = !{!1590, !1591, !1592, !1593, !1594, !1595, !1596, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1607, !1608, !1609, !1611, !1613, !1615}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1588, file: !536, line: 447, baseType: !540, size: 32)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1588, file: !536, line: 448, baseType: !301, size: 32, offset: 32)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1588, file: !536, line: 449, baseType: !301, size: 32, offset: 64)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1588, file: !536, line: 450, baseType: !301, size: 32, offset: 96)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1588, file: !536, line: 451, baseType: !301, size: 32, offset: 128)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1588, file: !536, line: 452, baseType: !301, size: 32, offset: 160)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1588, file: !536, line: 453, baseType: !1597, size: 96, offset: 192)
!1597 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1578, size: 96, elements: !792)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1588, file: !536, line: 454, baseType: !301, size: 32, offset: 288)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1588, file: !536, line: 455, baseType: !301, size: 32, offset: 320)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1588, file: !536, line: 456, baseType: !301, size: 32, offset: 352)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1588, file: !536, line: 457, baseType: !301, size: 32, offset: 384)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1588, file: !536, line: 458, baseType: !301, size: 32, offset: 416)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1588, file: !536, line: 459, baseType: !301, size: 32, offset: 448)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1588, file: !536, line: 460, baseType: !301, size: 32, offset: 480)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1588, file: !536, line: 461, baseType: !1606, size: 64, offset: 512)
!1606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !540, size: 64, elements: !162)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1588, file: !536, line: 462, baseType: !540, size: 32, offset: 576)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1588, file: !536, line: 463, baseType: !540, size: 32, offset: 608)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1588, file: !536, line: 464, baseType: !1610, size: 128, offset: 640)
!1610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !540, size: 128, elements: !698)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1588, file: !536, line: 465, baseType: !1612, size: 160, offset: 768)
!1612 = !DICompositeType(tag: DW_TAG_array_type, baseType: !540, size: 160, elements: !1223)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1588, file: !536, line: 466, baseType: !1614, size: 160, offset: 928)
!1614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 160, elements: !1223)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1588, file: !536, line: 467, baseType: !301, size: 32, offset: 1088)
!1616 = !{!1617, !1643, !1648, !1650, !1652, !1541}
!1617 = !DIGlobalVariableExpression(var: !1618, expr: !DIExpression())
!1618 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1543, file: !1619, line: 285, type: !1620, isLocal: true, isDefinition: true, align: 32)
!1619 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1620 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1621)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !312, line: 51, size: 64, elements: !1622)
!1622 = !{!1623, !1642}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1621, file: !312, line: 60, baseType: !1624, size: 32)
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 32)
!1625 = !DISubroutineType(types: !1626)
!1626 = !{!109, !1627}
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 32)
!1628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1629)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !321, line: 378, size: 192, elements: !1630)
!1630 = !{!1631, !1632, !1633, !1634, !1640, !1641}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1629, file: !321, line: 380, baseType: !324, size: 32)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1629, file: !321, line: 382, baseType: !13, size: 32, offset: 32)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1629, file: !321, line: 384, baseType: !13, size: 32, offset: 64)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1629, file: !321, line: 386, baseType: !1635, size: 32, offset: 96)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 32)
!1636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !321, line: 351, size: 16, elements: !1637)
!1637 = !{!1638, !1639}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1636, file: !321, line: 359, baseType: !167, size: 8)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1636, file: !321, line: 364, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1629, file: !321, line: 388, baseType: !108, size: 32, offset: 128)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1629, file: !321, line: 396, baseType: !337, size: 32, offset: 160)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1621, file: !312, line: 65, baseType: !1627, size: 32, offset: 32)
!1643 = !DIGlobalVariableExpression(var: !1644, expr: !DIExpression())
!1644 = distinct !DIGlobalVariable(name: "lock", scope: !1543, file: !1619, line: 34, type: !1645, isLocal: true, isDefinition: true)
!1645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !1646)
!1646 = !{!1647}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1645, file: !254, line: 52, baseType: !22, size: 32)
!1648 = !DIGlobalVariableExpression(var: !1649, expr: !DIExpression())
!1649 = distinct !DIGlobalVariable(name: "last_load", scope: !1543, file: !1619, line: 36, type: !110, isLocal: true, isDefinition: true)
!1650 = !DIGlobalVariableExpression(var: !1651, expr: !DIExpression())
!1651 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1543, file: !1619, line: 48, type: !110, isLocal: true, isDefinition: true)
!1652 = !DIGlobalVariableExpression(var: !1653, expr: !DIExpression())
!1653 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1543, file: !1619, line: 54, type: !110, isLocal: true, isDefinition: true)
!1654 = !DIGlobalVariableExpression(var: !1655, expr: !DIExpression())
!1655 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1656, file: !1738, line: 22, type: !1740, isLocal: true, isDefinition: true)
!1656 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1657, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1658, retainedTypes: !1659, globals: !1735, splitDebugInlining: false, nameTableKind: None)
!1657 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!1658 = !{!1022, !1028}
!1659 = !{!1660, !1724, !1729, !1075, !1028, !1022, !1734, !108}
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 32)
!1661 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1662)
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1023, line: 523, size: 288, elements: !1663)
!1663 = !{!1664, !1683, !1687, !1691, !1695, !1696, !1697, !1701, !1720}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1662, file: !1023, line: 524, baseType: !1665, size: 32)
!1665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1666, size: 32)
!1666 = !DISubroutineType(types: !1667)
!1667 = !{!109, !1668, !1063, !1064}
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 32)
!1669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1670)
!1670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !321, line: 378, size: 192, elements: !1671)
!1671 = !{!1672, !1673, !1674, !1675, !1681, !1682}
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1670, file: !321, line: 380, baseType: !324, size: 32)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1670, file: !321, line: 382, baseType: !13, size: 32, offset: 32)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1670, file: !321, line: 384, baseType: !13, size: 32, offset: 64)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1670, file: !321, line: 386, baseType: !1676, size: 32, offset: 96)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 32)
!1677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !321, line: 351, size: 16, elements: !1678)
!1678 = !{!1679, !1680}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1677, file: !321, line: 359, baseType: !167, size: 8)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1677, file: !321, line: 364, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1670, file: !321, line: 388, baseType: !108, size: 32, offset: 128)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1670, file: !321, line: 396, baseType: !337, size: 32, offset: 160)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1662, file: !1023, line: 530, baseType: !1684, size: 32, offset: 32)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 32)
!1685 = !DISubroutineType(types: !1686)
!1686 = !{!109, !1668, !1069}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1662, file: !1023, line: 532, baseType: !1688, size: 32, offset: 64)
!1688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 32)
!1689 = !DISubroutineType(types: !1690)
!1690 = !{!109, !1668, !1075, !1070}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1662, file: !1023, line: 535, baseType: !1692, size: 32, offset: 96)
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1693, size: 32)
!1693 = !DISubroutineType(types: !1694)
!1694 = !{!109, !1668, !1075}
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1662, file: !1023, line: 537, baseType: !1692, size: 32, offset: 128)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1662, file: !1023, line: 539, baseType: !1692, size: 32, offset: 160)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1662, file: !1023, line: 541, baseType: !1698, size: 32, offset: 192)
!1698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1699, size: 32)
!1699 = !DISubroutineType(types: !1700)
!1700 = !{!109, !1668, !1063, !1022, !1028}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1662, file: !1023, line: 544, baseType: !1702, size: 32, offset: 224)
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 32)
!1703 = !DISubroutineType(types: !1704)
!1704 = !{!109, !1668, !1705, !334}
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 32)
!1706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1023, line: 478, size: 96, elements: !1707)
!1707 = !{!1708, !1714, !1719}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1706, file: !1023, line: 482, baseType: !1709, size: 32)
!1709 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1095, line: 33, baseType: !1710)
!1710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1095, line: 29, size: 32, elements: !1711)
!1711 = !{!1712}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1710, file: !1095, line: 30, baseType: !1713, size: 32)
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 32)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1706, file: !1023, line: 485, baseType: !1715, size: 32, offset: 32)
!1715 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1023, line: 464, baseType: !1716)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 32)
!1717 = !DISubroutineType(types: !1718)
!1718 = !{null, !1668, !1705, !1075}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1706, file: !1023, line: 493, baseType: !1075, size: 32, offset: 64)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1662, file: !1023, line: 547, baseType: !1721, size: 32, offset: 256)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 32)
!1722 = !DISubroutineType(types: !1723)
!1723 = !{!110, !1668}
!1724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 32)
!1725 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1726)
!1726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1023, line: 428, size: 32, elements: !1727)
!1727 = !{!1728}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1726, file: !1023, line: 434, baseType: !1075, size: 32)
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 32)
!1730 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1731)
!1731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1023, line: 441, size: 32, elements: !1732)
!1732 = !{!1733}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1731, file: !1023, line: 447, baseType: !1075, size: 32)
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 32)
!1735 = !{!1736, !1654}
!1736 = !DIGlobalVariableExpression(var: !1737, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1737 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1656, file: !1738, line: 37, type: !1739, isLocal: true, isDefinition: true)
!1738 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1739 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !235)
!1740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1741, size: 352, elements: !1742)
!1741 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1668)
!1742 = !{!1743}
!1743 = !DISubrange(count: 11)
!1744 = !DIGlobalVariableExpression(var: !1745, expr: !DIExpression())
!1745 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1746, file: !1787, line: 139, type: !1794, isLocal: false, isDefinition: true)
!1746 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1747, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1748, globals: !1784, splitDebugInlining: false, nameTableKind: None)
!1747 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!1748 = !{!1749}
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1750, size: 32)
!1750 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !297, line: 510, baseType: !1751)
!1751 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 477, size: 1216, elements: !1752)
!1752 = !{!1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1751, file: !297, line: 479, baseType: !301, size: 32)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1751, file: !297, line: 480, baseType: !301, size: 32, offset: 32)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1751, file: !297, line: 481, baseType: !301, size: 32, offset: 64)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1751, file: !297, line: 482, baseType: !301, size: 32, offset: 96)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1751, file: !297, line: 483, baseType: !301, size: 32, offset: 128)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1751, file: !297, line: 484, baseType: !301, size: 32, offset: 160)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1751, file: !297, line: 485, baseType: !844, size: 64, offset: 192)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1751, file: !297, line: 486, baseType: !301, size: 32, offset: 256)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1751, file: !297, line: 487, baseType: !301, size: 32, offset: 288)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1751, file: !297, line: 488, baseType: !844, size: 64, offset: 320)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1751, file: !297, line: 489, baseType: !301, size: 32, offset: 384)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1751, file: !297, line: 490, baseType: !301, size: 32, offset: 416)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1751, file: !297, line: 491, baseType: !844, size: 64, offset: 448)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1751, file: !297, line: 492, baseType: !301, size: 32, offset: 512)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1751, file: !297, line: 493, baseType: !301, size: 32, offset: 544)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1751, file: !297, line: 494, baseType: !844, size: 64, offset: 576)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1751, file: !297, line: 495, baseType: !301, size: 32, offset: 640)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1751, file: !297, line: 496, baseType: !301, size: 32, offset: 672)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1751, file: !297, line: 497, baseType: !844, size: 64, offset: 704)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1751, file: !297, line: 498, baseType: !301, size: 32, offset: 768)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1751, file: !297, line: 499, baseType: !301, size: 32, offset: 800)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1751, file: !297, line: 500, baseType: !844, size: 64, offset: 832)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1751, file: !297, line: 501, baseType: !301, size: 32, offset: 896)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1751, file: !297, line: 502, baseType: !301, size: 32, offset: 928)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1751, file: !297, line: 503, baseType: !844, size: 64, offset: 960)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1751, file: !297, line: 504, baseType: !301, size: 32, offset: 1024)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1751, file: !297, line: 505, baseType: !301, size: 32, offset: 1056)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1751, file: !297, line: 506, baseType: !110, size: 32, offset: 1088)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1751, file: !297, line: 507, baseType: !301, size: 32, offset: 1120)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1751, file: !297, line: 508, baseType: !301, size: 32, offset: 1152)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1751, file: !297, line: 509, baseType: !301, size: 32, offset: 1184)
!1784 = !{!1785, !1788, !1744}
!1785 = !DIGlobalVariableExpression(var: !1786, expr: !DIExpression())
!1786 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1746, file: !1787, line: 137, type: !110, isLocal: false, isDefinition: true)
!1787 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1788 = !DIGlobalVariableExpression(var: !1789, expr: !DIExpression())
!1789 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1746, file: !1787, line: 138, type: !1790, isLocal: false, isDefinition: true)
!1790 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1791, size: 128, elements: !1792)
!1791 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !167)
!1792 = !{!1793}
!1793 = !DISubrange(count: 16)
!1794 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1791, size: 64, elements: !1467)
!1795 = !DIGlobalVariableExpression(var: !1796, expr: !DIExpression())
!1796 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1797, file: !1800, line: 23, type: !1801, isLocal: false, isDefinition: true)
!1797 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1798, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, globals: !1799, splitDebugInlining: false, nameTableKind: None)
!1798 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!1799 = !{!1795}
!1800 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1801 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!1802 = !DIGlobalVariableExpression(var: !1803, expr: !DIExpression())
!1803 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1804, file: !1808, line: 86, type: !2082, isLocal: false, isDefinition: true, align: 512)
!1804 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1805, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1806, retainedTypes: !1815, globals: !1889, splitDebugInlining: false, nameTableKind: None)
!1805 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!1806 = !{!1807, !30, !595}
!1807 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1808, line: 63, baseType: !32, size: 32, elements: !1809)
!1808 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1809 = !{!1810, !1811, !1812, !1813, !1814}
!1810 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1811 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1812 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1813 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1814 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1815 = !{!235, !108, !109, !1816, !1147, !110, !1847, !756, !167, !1872}
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 32)
!1817 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1818)
!1818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1819, line: 51, size: 64, elements: !1820)
!1819 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1820 = !{!1821, !1842}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1818, file: !1819, line: 52, baseType: !1822, size: 32)
!1822 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1819, line: 38, baseType: !1823)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 32)
!1824 = !DISubroutineType(types: !1825)
!1825 = !{!109, !1826, !1841, !181}
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 32)
!1827 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1828)
!1828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !321, line: 378, size: 192, elements: !1829)
!1829 = !{!1830, !1831, !1832, !1833, !1839, !1840}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1828, file: !321, line: 380, baseType: !324, size: 32)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1828, file: !321, line: 382, baseType: !13, size: 32, offset: 32)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1828, file: !321, line: 384, baseType: !13, size: 32, offset: 64)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1828, file: !321, line: 386, baseType: !1834, size: 32, offset: 96)
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 32)
!1835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !321, line: 351, size: 16, elements: !1836)
!1836 = !{!1837, !1838}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1835, file: !321, line: 359, baseType: !167, size: 8)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1835, file: !321, line: 364, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1828, file: !321, line: 388, baseType: !108, size: 32, offset: 128)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1828, file: !321, line: 396, baseType: !337, size: 32, offset: 160)
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 32)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1818, file: !1819, line: 53, baseType: !1843, size: 32, offset: 32)
!1843 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1819, line: 47, baseType: !1844)
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 32)
!1845 = !DISubroutineType(types: !1846)
!1846 = !{!109, !1826, !1841, !181, !110}
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 32)
!1848 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !536, line: 468, baseType: !1849)
!1849 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 445, size: 1120, elements: !1850)
!1850 = !{!1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1849, file: !536, line: 447, baseType: !540, size: 32)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1849, file: !536, line: 448, baseType: !301, size: 32, offset: 32)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1849, file: !536, line: 449, baseType: !301, size: 32, offset: 64)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1849, file: !536, line: 450, baseType: !301, size: 32, offset: 96)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1849, file: !536, line: 451, baseType: !301, size: 32, offset: 128)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1849, file: !536, line: 452, baseType: !301, size: 32, offset: 160)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1849, file: !536, line: 453, baseType: !1597, size: 96, offset: 192)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1849, file: !536, line: 454, baseType: !301, size: 32, offset: 288)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1849, file: !536, line: 455, baseType: !301, size: 32, offset: 320)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1849, file: !536, line: 456, baseType: !301, size: 32, offset: 352)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1849, file: !536, line: 457, baseType: !301, size: 32, offset: 384)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1849, file: !536, line: 458, baseType: !301, size: 32, offset: 416)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1849, file: !536, line: 459, baseType: !301, size: 32, offset: 448)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1849, file: !536, line: 460, baseType: !301, size: 32, offset: 480)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1849, file: !536, line: 461, baseType: !1606, size: 64, offset: 512)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1849, file: !536, line: 462, baseType: !540, size: 32, offset: 576)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1849, file: !536, line: 463, baseType: !540, size: 32, offset: 608)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1849, file: !536, line: 464, baseType: !1610, size: 128, offset: 640)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1849, file: !536, line: 465, baseType: !1612, size: 160, offset: 768)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1849, file: !536, line: 466, baseType: !1614, size: 160, offset: 928)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1849, file: !536, line: 467, baseType: !301, size: 32, offset: 1088)
!1872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1873, size: 32)
!1873 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !536, line: 426, baseType: !1874)
!1874 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 411, size: 28704, elements: !1875)
!1875 = !{!1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1874, file: !536, line: 413, baseType: !1560, size: 256)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1874, file: !536, line: 414, baseType: !1562, size: 768, offset: 256)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1874, file: !536, line: 415, baseType: !1560, size: 256, offset: 1024)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1874, file: !536, line: 416, baseType: !1562, size: 768, offset: 1280)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1874, file: !536, line: 417, baseType: !1560, size: 256, offset: 2048)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1874, file: !536, line: 418, baseType: !1562, size: 768, offset: 2304)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1874, file: !536, line: 419, baseType: !1560, size: 256, offset: 3072)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1874, file: !536, line: 420, baseType: !1562, size: 768, offset: 3328)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1874, file: !536, line: 421, baseType: !1560, size: 256, offset: 4096)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1874, file: !536, line: 422, baseType: !1573, size: 1792, offset: 4352)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1874, file: !536, line: 423, baseType: !1577, size: 1920, offset: 6144)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1874, file: !536, line: 424, baseType: !1582, size: 20608, offset: 8064)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1874, file: !536, line: 425, baseType: !301, size: 32, offset: 28672)
!1889 = !{!1890, !2039, !2047, !2049, !1802, !2052, !2054, !2059}
!1890 = !DIGlobalVariableExpression(var: !1891, expr: !DIExpression())
!1891 = distinct !DIGlobalVariable(name: "_kernel", scope: !1804, file: !1808, line: 40, type: !1892, isLocal: false, isDefinition: true)
!1892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !123, line: 158, size: 384, elements: !1893)
!1893 = !{!1894, !2019, !2038}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1892, file: !123, line: 159, baseType: !1895, size: 192)
!1895 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1896, size: 192, elements: !525)
!1896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !123, line: 100, size: 192, elements: !1897)
!1897 = !{!1898, !1899, !1900, !2012, !2013, !2014, !2015}
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1896, file: !123, line: 102, baseType: !110, size: 32)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1896, file: !123, line: 105, baseType: !1147, size: 32, offset: 32)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1896, file: !123, line: 108, baseType: !1901, size: 32, offset: 64)
!1901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 32)
!1902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !1903)
!1903 = !{!1904, !1962, !1974, !1975, !1976, !1983, !1984, !1985, !1986, !1992, !2007}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1902, file: !145, line: 247, baseType: !1905, size: 384)
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !1906)
!1906 = !{!1907, !1931, !1938, !1939, !1940, !1949, !1950, !1951}
!1907 = !DIDerivedType(tag: DW_TAG_member, scope: !1905, file: !145, line: 60, baseType: !1908, size: 64)
!1908 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1905, file: !145, line: 60, size: 64, elements: !1909)
!1909 = !{!1910, !1925}
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1908, file: !145, line: 61, baseType: !1911, size: 64)
!1911 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !1912)
!1912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !1913)
!1913 = !{!1914, !1920}
!1914 = !DIDerivedType(tag: DW_TAG_member, scope: !1912, file: !128, line: 38, baseType: !1915, size: 32)
!1915 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1912, file: !128, line: 38, size: 32, elements: !1916)
!1916 = !{!1917, !1919}
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1915, file: !128, line: 39, baseType: !1918, size: 32)
!1918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1912, size: 32)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1915, file: !128, line: 40, baseType: !1918, size: 32)
!1920 = !DIDerivedType(tag: DW_TAG_member, scope: !1912, file: !128, line: 42, baseType: !1921, size: 32, offset: 32)
!1921 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1912, file: !128, line: 42, size: 32, elements: !1922)
!1922 = !{!1923, !1924}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1921, file: !128, line: 43, baseType: !1918, size: 32)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1921, file: !128, line: 44, baseType: !1918, size: 32)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1908, file: !145, line: 62, baseType: !1926, size: 64)
!1926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !1927)
!1927 = !{!1928}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1926, file: !157, line: 50, baseType: !1929, size: 64)
!1929 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1930, size: 64, elements: !162)
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1926, size: 32)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1905, file: !145, line: 68, baseType: !1932, size: 32, offset: 64)
!1932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1933, size: 32)
!1933 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !1934)
!1934 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !1935)
!1935 = !{!1936}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1934, file: !123, line: 232, baseType: !1937, size: 64)
!1937 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !1912)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1905, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1905, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!1940 = !DIDerivedType(tag: DW_TAG_member, scope: !1905, file: !145, line: 90, baseType: !1941, size: 16, offset: 112)
!1941 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1905, file: !145, line: 90, size: 16, elements: !1942)
!1942 = !{!1943, !1948}
!1943 = !DIDerivedType(tag: DW_TAG_member, scope: !1941, file: !145, line: 91, baseType: !1944, size: 16)
!1944 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1941, file: !145, line: 91, size: 16, elements: !1945)
!1945 = !{!1946, !1947}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1944, file: !145, line: 96, baseType: !177, size: 8)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1944, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1941, file: !145, line: 100, baseType: !181, size: 16)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1905, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1905, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1905, file: !145, line: 131, baseType: !1952, size: 192, offset: 192)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !1953)
!1953 = !{!1954, !1955, !1961}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1952, file: !123, line: 245, baseType: !1911, size: 64)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1952, file: !123, line: 246, baseType: !1956, size: 32, offset: 64)
!1956 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !1957)
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 32)
!1958 = !DISubroutineType(types: !1959)
!1959 = !{null, !1960}
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 32)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1952, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1902, file: !145, line: 250, baseType: !1963, size: 288, offset: 384)
!1963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !1964)
!1964 = !{!1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1963, file: !198, line: 26, baseType: !110, size: 32)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1963, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1963, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1963, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1963, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1963, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1963, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1963, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1963, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1902, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1902, file: !145, line: 256, baseType: !1933, size: 64, offset: 704)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1902, file: !145, line: 271, baseType: !1977, size: 128, offset: 768)
!1977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !1978)
!1978 = !{!1979, !1980, !1981, !1982}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !1977, file: !145, line: 35, baseType: !215, size: 32)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !1977, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !1977, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !1977, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !1902, file: !145, line: 274, baseType: !1901, size: 32, offset: 896)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1902, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1902, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1902, file: !145, line: 300, baseType: !1987, size: 96, offset: 1216)
!1987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !1988)
!1988 = !{!1989, !1990, !1991}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1987, file: !145, line: 153, baseType: !22, size: 32)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1987, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1987, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1902, file: !145, line: 325, baseType: !1993, size: 32, offset: 1312)
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 32)
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !1995)
!1995 = !{!1996, !2002, !2003}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1994, file: !119, line: 5074, baseType: !1997, size: 96)
!1997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !1998)
!1998 = !{!1999, !2000, !2001}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1997, file: !244, line: 57, baseType: !247, size: 32)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1997, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1997, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1994, file: !119, line: 5075, baseType: !1933, size: 64, offset: 96)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1994, file: !119, line: 5076, baseType: !2004, size: 32, offset: 160)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !2005)
!2005 = !{!2006}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2004, file: !254, line: 52, baseType: !22, size: 32)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1902, file: !145, line: 343, baseType: !2008, size: 64, offset: 1344)
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !2009)
!2009 = !{!2010, !2011}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2008, file: !198, line: 63, baseType: !110, size: 32)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2008, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1896, file: !123, line: 111, baseType: !1901, size: 32, offset: 96)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1896, file: !123, line: 124, baseType: !109, size: 32, offset: 128)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1896, file: !123, line: 127, baseType: !167, size: 8, offset: 160)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1896, file: !123, line: 153, baseType: !2016, offset: 168)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2017, line: 33, elements: !2018)
!2017 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2018 = !{}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1892, file: !123, line: 170, baseType: !2020, size: 160, offset: 192)
!2020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !123, line: 83, size: 160, elements: !2021)
!2021 = !{!2022, !2023}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2020, file: !123, line: 86, baseType: !1901, size: 32)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2020, file: !123, line: 92, baseType: !2024, size: 128, offset: 32)
!2024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !2025, line: 37, size: 128, elements: !2026)
!2025 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2026 = !{!2027, !2037}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !2024, file: !2025, line: 38, baseType: !2028, size: 96)
!2028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !157, line: 83, size: 96, elements: !2029)
!2029 = !{!2030, !2031, !2036}
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2028, file: !157, line: 84, baseType: !1930, size: 32)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !2028, file: !157, line: 85, baseType: !2032, size: 32, offset: 32)
!2032 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !157, line: 81, baseType: !2033)
!2033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 32)
!2034 = !DISubroutineType(types: !2035)
!2035 = !{!334, !1930, !1930}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !2028, file: !157, line: 86, baseType: !109, size: 32, offset: 64)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !2024, file: !2025, line: 39, baseType: !109, size: 32, offset: 96)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1892, file: !123, line: 188, baseType: !1901, size: 32, offset: 352)
!2039 = !DIGlobalVariableExpression(var: !2040, expr: !DIExpression())
!2040 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1804, file: !1808, line: 43, type: !2041, isLocal: false, isDefinition: true, align: 512)
!2041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2042, size: 8704, elements: !2045)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !273, line: 47, size: 8, elements: !2043)
!2043 = !{!2044}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2042, file: !273, line: 48, baseType: !226, size: 8)
!2045 = !{!2046}
!2046 = !DISubrange(count: 1088)
!2047 = !DIGlobalVariableExpression(var: !2048, expr: !DIExpression())
!2048 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1804, file: !1808, line: 44, type: !1902, isLocal: false, isDefinition: true)
!2049 = !DIGlobalVariableExpression(var: !2050, expr: !DIExpression())
!2050 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1804, file: !1808, line: 48, type: !2051, isLocal: false, isDefinition: true)
!2051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1902, size: 1408, elements: !525)
!2052 = !DIGlobalVariableExpression(var: !2053, expr: !DIExpression())
!2053 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1804, file: !1808, line: 217, type: !334, isLocal: false, isDefinition: true)
!2054 = !DIGlobalVariableExpression(var: !2055, expr: !DIExpression())
!2055 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1804, file: !1808, line: 50, type: !2056, isLocal: true, isDefinition: true, align: 512)
!2056 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2042, size: 3072, elements: !2057)
!2057 = !{!526, !2058}
!2058 = !DISubrange(count: 384)
!2059 = !DIGlobalVariableExpression(var: !2060, expr: !DIExpression())
!2060 = distinct !DIGlobalVariable(name: "levels", scope: !2061, file: !1808, line: 232, type: !2081, isLocal: true, isDefinition: true)
!2061 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1808, file: !1808, line: 230, type: !2062, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1804, retainedNodes: !2064)
!2062 = !DISubroutineType(types: !2063)
!2063 = !{null, !1807}
!2064 = !{!2065, !2066, !2076, !2080}
!2065 = !DILocalVariable(name: "level", arg: 1, scope: !2061, file: !1808, line: 230, type: !1807)
!2066 = !DILocalVariable(name: "entry", scope: !2061, file: !1808, line: 244, type: !2067)
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 32)
!2068 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2069)
!2069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !312, line: 51, size: 64, elements: !2070)
!2070 = !{!2071, !2075}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2069, file: !312, line: 60, baseType: !2072, size: 32)
!2072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 32)
!2073 = !DISubroutineType(types: !2074)
!2074 = !{!109, !1826}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2069, file: !312, line: 65, baseType: !1826, size: 32, offset: 32)
!2076 = !DILocalVariable(name: "dev", scope: !2077, file: !1808, line: 247, type: !1826)
!2077 = distinct !DILexicalBlock(scope: !2078, file: !1808, line: 246, column: 64)
!2078 = distinct !DILexicalBlock(scope: !2079, file: !1808, line: 246, column: 2)
!2079 = distinct !DILexicalBlock(scope: !2061, file: !1808, line: 246, column: 2)
!2080 = !DILocalVariable(name: "rc", scope: !2077, file: !1808, line: 248, type: !109)
!2081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2067, size: 192, elements: !264)
!2082 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2042, size: 16896, elements: !2083)
!2083 = !{!526, !277}
!2084 = !DIGlobalVariableExpression(var: !2085, expr: !DIExpression())
!2085 = distinct !DIGlobalVariable(name: "z_thread_monitor_lock", scope: !2086, file: !2108, line: 39, type: !2201, isLocal: true, isDefinition: true)
!2086 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2087, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2088, globals: !2104, splitDebugInlining: false, nameTableKind: None)
!2087 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!2088 = !{!108, !324, !104, !167, !22, !109, !2089, !24, !235, !1147, !110, !111}
!2089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2090, size: 32)
!2090 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !2091)
!2091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !2092)
!2092 = !{!2093, !2099}
!2093 = !DIDerivedType(tag: DW_TAG_member, scope: !2091, file: !128, line: 38, baseType: !2094, size: 32)
!2094 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2091, file: !128, line: 38, size: 32, elements: !2095)
!2095 = !{!2096, !2098}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2094, file: !128, line: 39, baseType: !2097, size: 32)
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2091, size: 32)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2094, file: !128, line: 40, baseType: !2097, size: 32)
!2099 = !DIDerivedType(tag: DW_TAG_member, scope: !2091, file: !128, line: 42, baseType: !2100, size: 32, offset: 32)
!2100 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2091, file: !128, line: 42, size: 32, elements: !2101)
!2101 = !{!2102, !2103}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2100, file: !128, line: 43, baseType: !2097, size: 32)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2100, file: !128, line: 44, baseType: !2097, size: 32)
!2104 = !{!2105, !2219, !2084}
!2105 = !DIGlobalVariableExpression(var: !2106, expr: !DIExpression())
!2106 = distinct !DIGlobalVariable(name: "states_str", scope: !2107, file: !2108, line: 276, type: !2218, isLocal: true, isDefinition: true)
!2107 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2108, file: !2108, line: 271, type: !2109, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !2209)
!2108 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2109 = !DISubroutineType(types: !2110)
!2110 = !{!324, !2111, !1147, !235}
!2111 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !145, line: 347, baseType: !2112)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 32)
!2113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !2114)
!2114 = !{!2115, !2159, !2171, !2172, !2173, !2180, !2181, !2182, !2183, !2189, !2204}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2113, file: !145, line: 247, baseType: !2116, size: 384)
!2116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !2117)
!2117 = !{!2118, !2128, !2135, !2136, !2137, !2146, !2147, !2148}
!2118 = !DIDerivedType(tag: DW_TAG_member, scope: !2116, file: !145, line: 60, baseType: !2119, size: 64)
!2119 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2116, file: !145, line: 60, size: 64, elements: !2120)
!2120 = !{!2121, !2122}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2119, file: !145, line: 61, baseType: !2090, size: 64)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2119, file: !145, line: 62, baseType: !2123, size: 64)
!2123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !2124)
!2124 = !{!2125}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2123, file: !157, line: 50, baseType: !2126, size: 64)
!2126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2127, size: 64, elements: !162)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 32)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2116, file: !145, line: 68, baseType: !2129, size: 32, offset: 64)
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 32)
!2130 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !2131)
!2131 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !2132)
!2132 = !{!2133}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2131, file: !123, line: 232, baseType: !2134, size: 64)
!2134 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !2091)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2116, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2116, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!2137 = !DIDerivedType(tag: DW_TAG_member, scope: !2116, file: !145, line: 90, baseType: !2138, size: 16, offset: 112)
!2138 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2116, file: !145, line: 90, size: 16, elements: !2139)
!2139 = !{!2140, !2145}
!2140 = !DIDerivedType(tag: DW_TAG_member, scope: !2138, file: !145, line: 91, baseType: !2141, size: 16)
!2141 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2138, file: !145, line: 91, size: 16, elements: !2142)
!2142 = !{!2143, !2144}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2141, file: !145, line: 96, baseType: !177, size: 8)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2141, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2138, file: !145, line: 100, baseType: !181, size: 16)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2116, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2116, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2116, file: !145, line: 131, baseType: !2149, size: 192, offset: 192)
!2149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !2150)
!2150 = !{!2151, !2152, !2158}
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2149, file: !123, line: 245, baseType: !2090, size: 64)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2149, file: !123, line: 246, baseType: !2153, size: 32, offset: 64)
!2153 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !2154)
!2154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2155, size: 32)
!2155 = !DISubroutineType(types: !2156)
!2156 = !{null, !2157}
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 32)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2149, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2113, file: !145, line: 250, baseType: !2160, size: 288, offset: 384)
!2160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !2161)
!2161 = !{!2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2160, file: !198, line: 26, baseType: !110, size: 32)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2160, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2160, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2160, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2160, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2160, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2160, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2160, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2160, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2113, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2113, file: !145, line: 256, baseType: !2130, size: 64, offset: 704)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2113, file: !145, line: 271, baseType: !2174, size: 128, offset: 768)
!2174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !2175)
!2175 = !{!2176, !2177, !2178, !2179}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !2174, file: !145, line: 35, baseType: !215, size: 32)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !2174, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !2174, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !2174, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !2113, file: !145, line: 274, baseType: !2112, size: 32, offset: 896)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2113, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2113, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2113, file: !145, line: 300, baseType: !2184, size: 96, offset: 1216)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !2185)
!2185 = !{!2186, !2187, !2188}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2184, file: !145, line: 153, baseType: !22, size: 32)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2184, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2184, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2113, file: !145, line: 325, baseType: !2190, size: 32, offset: 1312)
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2191, size: 32)
!2191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !2192)
!2192 = !{!2193, !2199, !2200}
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2191, file: !119, line: 5074, baseType: !2194, size: 96)
!2194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !2195)
!2195 = !{!2196, !2197, !2198}
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2194, file: !244, line: 57, baseType: !247, size: 32)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2194, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2194, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2191, file: !119, line: 5075, baseType: !2130, size: 64, offset: 96)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2191, file: !119, line: 5076, baseType: !2201, size: 32, offset: 160)
!2201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !2202)
!2202 = !{!2203}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2201, file: !254, line: 52, baseType: !22, size: 32)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2113, file: !145, line: 343, baseType: !2205, size: 64, offset: 1344)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !2206)
!2206 = !{!2207, !2208}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2205, file: !198, line: 63, baseType: !110, size: 32)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2205, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!2209 = !{!2210, !2211, !2212, !2213, !2214, !2215, !2216}
!2210 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2107, file: !2108, line: 271, type: !2111)
!2211 = !DILocalVariable(name: "buf", arg: 2, scope: !2107, file: !2108, line: 271, type: !1147)
!2212 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2107, file: !2108, line: 271, type: !235)
!2213 = !DILocalVariable(name: "off", scope: !2107, file: !2108, line: 273, type: !235)
!2214 = !DILocalVariable(name: "bit", scope: !2107, file: !2108, line: 274, type: !167)
!2215 = !DILocalVariable(name: "thread_state", scope: !2107, file: !2108, line: 275, type: !167)
!2216 = !DILocalVariable(name: "index", scope: !2217, file: !2108, line: 293, type: !167)
!2217 = distinct !DILexicalBlock(scope: !2107, file: !2108, line: 293, column: 2)
!2218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !324, size: 256, elements: !1467)
!2219 = !DIGlobalVariableExpression(var: !2220, expr: !DIExpression())
!2220 = distinct !DIGlobalVariable(name: "states_sz", scope: !2107, file: !2108, line: 279, type: !2221, isLocal: true, isDefinition: true)
!2221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1739, size: 256, elements: !1467)
!2222 = !DIGlobalVariableExpression(var: !2223, expr: !DIExpression())
!2223 = distinct !DIGlobalVariable(name: "lock", scope: !2224, file: !2340, line: 47, type: !2331, isLocal: true, isDefinition: true)
!2224 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2225, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2226, globals: !2339, splitDebugInlining: false, nameTableKind: None)
!2225 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!2226 = !{!334, !108, !109, !2227, !2242}
!2227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2228, size: 32)
!2228 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !2229)
!2229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !2230)
!2230 = !{!2231, !2237}
!2231 = !DIDerivedType(tag: DW_TAG_member, scope: !2229, file: !128, line: 38, baseType: !2232, size: 32)
!2232 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2229, file: !128, line: 38, size: 32, elements: !2233)
!2233 = !{!2234, !2236}
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2232, file: !128, line: 39, baseType: !2235, size: 32)
!2235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2229, size: 32)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2232, file: !128, line: 40, baseType: !2235, size: 32)
!2237 = !DIDerivedType(tag: DW_TAG_member, scope: !2229, file: !128, line: 42, baseType: !2238, size: 32, offset: 32)
!2238 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2229, file: !128, line: 42, size: 32, elements: !2239)
!2239 = !{!2240, !2241}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2238, file: !128, line: 43, baseType: !2235, size: 32)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2238, file: !128, line: 44, baseType: !2235, size: 32)
!2242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2243, size: 32)
!2243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !2244)
!2244 = !{!2245, !2289, !2301, !2302, !2303, !2310, !2311, !2312, !2313, !2319, !2334}
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2243, file: !145, line: 247, baseType: !2246, size: 384)
!2246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !2247)
!2247 = !{!2248, !2258, !2265, !2266, !2267, !2276, !2277, !2278}
!2248 = !DIDerivedType(tag: DW_TAG_member, scope: !2246, file: !145, line: 60, baseType: !2249, size: 64)
!2249 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2246, file: !145, line: 60, size: 64, elements: !2250)
!2250 = !{!2251, !2252}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2249, file: !145, line: 61, baseType: !2228, size: 64)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2249, file: !145, line: 62, baseType: !2253, size: 64)
!2253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !2254)
!2254 = !{!2255}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2253, file: !157, line: 50, baseType: !2256, size: 64)
!2256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2257, size: 64, elements: !162)
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 32)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2246, file: !145, line: 68, baseType: !2259, size: 32, offset: 64)
!2259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2260, size: 32)
!2260 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !2261)
!2261 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !2262)
!2262 = !{!2263}
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2261, file: !123, line: 232, baseType: !2264, size: 64)
!2264 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !2229)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2246, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2246, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!2267 = !DIDerivedType(tag: DW_TAG_member, scope: !2246, file: !145, line: 90, baseType: !2268, size: 16, offset: 112)
!2268 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2246, file: !145, line: 90, size: 16, elements: !2269)
!2269 = !{!2270, !2275}
!2270 = !DIDerivedType(tag: DW_TAG_member, scope: !2268, file: !145, line: 91, baseType: !2271, size: 16)
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2268, file: !145, line: 91, size: 16, elements: !2272)
!2272 = !{!2273, !2274}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2271, file: !145, line: 96, baseType: !177, size: 8)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2271, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2268, file: !145, line: 100, baseType: !181, size: 16)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2246, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2246, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2246, file: !145, line: 131, baseType: !2279, size: 192, offset: 192)
!2279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !2280)
!2280 = !{!2281, !2282, !2288}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2279, file: !123, line: 245, baseType: !2228, size: 64)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2279, file: !123, line: 246, baseType: !2283, size: 32, offset: 64)
!2283 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !2284)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 32)
!2285 = !DISubroutineType(types: !2286)
!2286 = !{null, !2287}
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2279, size: 32)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2279, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2243, file: !145, line: 250, baseType: !2290, size: 288, offset: 384)
!2290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !2291)
!2291 = !{!2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300}
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2290, file: !198, line: 26, baseType: !110, size: 32)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2290, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2290, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2290, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2290, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2290, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2290, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2290, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2290, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2243, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2243, file: !145, line: 256, baseType: !2260, size: 64, offset: 704)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2243, file: !145, line: 271, baseType: !2304, size: 128, offset: 768)
!2304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !2305)
!2305 = !{!2306, !2307, !2308, !2309}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !2304, file: !145, line: 35, baseType: !215, size: 32)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !2304, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !2304, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !2304, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !2243, file: !145, line: 274, baseType: !2242, size: 32, offset: 896)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2243, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2243, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2243, file: !145, line: 300, baseType: !2314, size: 96, offset: 1216)
!2314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !2315)
!2315 = !{!2316, !2317, !2318}
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2314, file: !145, line: 153, baseType: !22, size: 32)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2314, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2314, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2243, file: !145, line: 325, baseType: !2320, size: 32, offset: 1312)
!2320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 32)
!2321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !2322)
!2322 = !{!2323, !2329, !2330}
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2321, file: !119, line: 5074, baseType: !2324, size: 96)
!2324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !2325)
!2325 = !{!2326, !2327, !2328}
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2324, file: !244, line: 57, baseType: !247, size: 32)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2324, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2324, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2321, file: !119, line: 5075, baseType: !2260, size: 64, offset: 96)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2321, file: !119, line: 5076, baseType: !2331, size: 32, offset: 160)
!2331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !2332)
!2332 = !{!2333}
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2331, file: !254, line: 52, baseType: !22, size: 32)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2243, file: !145, line: 343, baseType: !2335, size: 64, offset: 1344)
!2335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !2336)
!2336 = !{!2337, !2338}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2335, file: !198, line: 63, baseType: !110, size: 32)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2335, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!2339 = !{!2222}
!2340 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2341 = !DIGlobalVariableExpression(var: !2342, expr: !DIExpression())
!2342 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2343, file: !2461, line: 56, type: !2449, isLocal: false, isDefinition: true)
!2343 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2344, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2345, globals: !2458, splitDebugInlining: false, nameTableKind: None)
!2344 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!2345 = !{!2346, !1147, !108, !2457, !1841, !104, !756, !109, !110, !111}
!2346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 32)
!2347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !2348)
!2348 = !{!2349, !2407, !2419, !2420, !2421, !2428, !2429, !2430, !2431, !2437, !2452}
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2347, file: !145, line: 247, baseType: !2350, size: 384)
!2350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !2351)
!2351 = !{!2352, !2376, !2383, !2384, !2385, !2394, !2395, !2396}
!2352 = !DIDerivedType(tag: DW_TAG_member, scope: !2350, file: !145, line: 60, baseType: !2353, size: 64)
!2353 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2350, file: !145, line: 60, size: 64, elements: !2354)
!2354 = !{!2355, !2370}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2353, file: !145, line: 61, baseType: !2356, size: 64)
!2356 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !2357)
!2357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !2358)
!2358 = !{!2359, !2365}
!2359 = !DIDerivedType(tag: DW_TAG_member, scope: !2357, file: !128, line: 38, baseType: !2360, size: 32)
!2360 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2357, file: !128, line: 38, size: 32, elements: !2361)
!2361 = !{!2362, !2364}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2360, file: !128, line: 39, baseType: !2363, size: 32)
!2363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2357, size: 32)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2360, file: !128, line: 40, baseType: !2363, size: 32)
!2365 = !DIDerivedType(tag: DW_TAG_member, scope: !2357, file: !128, line: 42, baseType: !2366, size: 32, offset: 32)
!2366 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2357, file: !128, line: 42, size: 32, elements: !2367)
!2367 = !{!2368, !2369}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2366, file: !128, line: 43, baseType: !2363, size: 32)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2366, file: !128, line: 44, baseType: !2363, size: 32)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2353, file: !145, line: 62, baseType: !2371, size: 64)
!2371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !2372)
!2372 = !{!2373}
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2371, file: !157, line: 50, baseType: !2374, size: 64)
!2374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2375, size: 64, elements: !162)
!2375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 32)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2350, file: !145, line: 68, baseType: !2377, size: 32, offset: 64)
!2377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2378, size: 32)
!2378 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !2379)
!2379 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !2380)
!2380 = !{!2381}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2379, file: !123, line: 232, baseType: !2382, size: 64)
!2382 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !2357)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2350, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2350, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!2385 = !DIDerivedType(tag: DW_TAG_member, scope: !2350, file: !145, line: 90, baseType: !2386, size: 16, offset: 112)
!2386 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2350, file: !145, line: 90, size: 16, elements: !2387)
!2387 = !{!2388, !2393}
!2388 = !DIDerivedType(tag: DW_TAG_member, scope: !2386, file: !145, line: 91, baseType: !2389, size: 16)
!2389 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2386, file: !145, line: 91, size: 16, elements: !2390)
!2390 = !{!2391, !2392}
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2389, file: !145, line: 96, baseType: !177, size: 8)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2389, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2386, file: !145, line: 100, baseType: !181, size: 16)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2350, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2350, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2350, file: !145, line: 131, baseType: !2397, size: 192, offset: 192)
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !2398)
!2398 = !{!2399, !2400, !2406}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2397, file: !123, line: 245, baseType: !2356, size: 64)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2397, file: !123, line: 246, baseType: !2401, size: 32, offset: 64)
!2401 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !2402)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 32)
!2403 = !DISubroutineType(types: !2404)
!2404 = !{null, !2405}
!2405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 32)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2397, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2347, file: !145, line: 250, baseType: !2408, size: 288, offset: 384)
!2408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !2409)
!2409 = !{!2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418}
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2408, file: !198, line: 26, baseType: !110, size: 32)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2408, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2408, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2408, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2408, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2408, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2408, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2408, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2408, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2347, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2347, file: !145, line: 256, baseType: !2378, size: 64, offset: 704)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2347, file: !145, line: 271, baseType: !2422, size: 128, offset: 768)
!2422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !2423)
!2423 = !{!2424, !2425, !2426, !2427}
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !2422, file: !145, line: 35, baseType: !215, size: 32)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !2422, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !2422, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !2422, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !2347, file: !145, line: 274, baseType: !2346, size: 32, offset: 896)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2347, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2347, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2347, file: !145, line: 300, baseType: !2432, size: 96, offset: 1216)
!2432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !2433)
!2433 = !{!2434, !2435, !2436}
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2432, file: !145, line: 153, baseType: !22, size: 32)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2432, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2432, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2347, file: !145, line: 325, baseType: !2438, size: 32, offset: 1312)
!2438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2439, size: 32)
!2439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !2440)
!2440 = !{!2441, !2447, !2448}
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2439, file: !119, line: 5074, baseType: !2442, size: 96)
!2442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !2443)
!2443 = !{!2444, !2445, !2446}
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2442, file: !244, line: 57, baseType: !247, size: 32)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2442, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2442, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2439, file: !119, line: 5075, baseType: !2378, size: 64, offset: 96)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2439, file: !119, line: 5076, baseType: !2449, size: 32, offset: 160)
!2449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !2450)
!2450 = !{!2451}
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2449, file: !254, line: 52, baseType: !22, size: 32)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2347, file: !145, line: 343, baseType: !2453, size: 64, offset: 1344)
!2453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !2454)
!2454 = !{!2455, !2456}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2453, file: !198, line: 63, baseType: !110, size: 32)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2453, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!2457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 32)
!2458 = !{!2341, !2459, !2462, !2464}
!2459 = !DIGlobalVariableExpression(var: !2460, expr: !DIExpression())
!2460 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2343, file: !2461, line: 404, type: !109, isLocal: true, isDefinition: true)
!2461 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2462 = !DIGlobalVariableExpression(var: !2463, expr: !DIExpression())
!2463 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2343, file: !2461, line: 405, type: !109, isLocal: true, isDefinition: true)
!2464 = !DIGlobalVariableExpression(var: !2465, expr: !DIExpression())
!2465 = distinct !DIGlobalVariable(name: "pending_current", scope: !2343, file: !2461, line: 425, type: !2346, isLocal: true, isDefinition: true)
!2466 = !DIGlobalVariableExpression(var: !2467, expr: !DIExpression())
!2467 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2468, file: !2498, line: 19, type: !2504, isLocal: true, isDefinition: true)
!2468 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2469, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2470, globals: !2495, splitDebugInlining: false, nameTableKind: None)
!2469 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!2470 = !{!104, !108, !756, !110, !111, !109, !2471, !1147, !106}
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2472, size: 32)
!2472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !2473)
!2473 = !{!2474, !2489, !2494}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2472, file: !123, line: 245, baseType: !2475, size: 64)
!2475 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !2476)
!2476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !2477)
!2477 = !{!2478, !2484}
!2478 = !DIDerivedType(tag: DW_TAG_member, scope: !2476, file: !128, line: 38, baseType: !2479, size: 32)
!2479 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2476, file: !128, line: 38, size: 32, elements: !2480)
!2480 = !{!2481, !2483}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2479, file: !128, line: 39, baseType: !2482, size: 32)
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2476, size: 32)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2479, file: !128, line: 40, baseType: !2482, size: 32)
!2484 = !DIDerivedType(tag: DW_TAG_member, scope: !2476, file: !128, line: 42, baseType: !2485, size: 32, offset: 32)
!2485 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2476, file: !128, line: 42, size: 32, elements: !2486)
!2486 = !{!2487, !2488}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2485, file: !128, line: 43, baseType: !2482, size: 32)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2485, file: !128, line: 44, baseType: !2482, size: 32)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2472, file: !123, line: 246, baseType: !2490, size: 32, offset: 64)
!2490 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !2491)
!2491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2492, size: 32)
!2492 = !DISubroutineType(types: !2493)
!2493 = !{null, !2471}
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2472, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!2495 = !{!2496, !2466, !2499, !2501}
!2496 = !DIGlobalVariableExpression(var: !2497, expr: !DIExpression())
!2497 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2468, file: !2498, line: 15, type: !111, isLocal: true, isDefinition: true)
!2498 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2499 = !DIGlobalVariableExpression(var: !2500, expr: !DIExpression())
!2500 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2468, file: !2498, line: 25, type: !109, isLocal: true, isDefinition: true)
!2501 = !DIGlobalVariableExpression(var: !2502, expr: !DIExpression())
!2502 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2468, file: !2498, line: 17, type: !2503, isLocal: true, isDefinition: true)
!2503 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !2476)
!2504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !2505)
!2505 = !{!2506}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2504, file: !254, line: 52, baseType: !22, size: 32)
!2507 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2508, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, splitDebugInlining: false, nameTableKind: None)
!2508 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!2509 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2510, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2511, retainedTypes: !2517, splitDebugInlining: false, nameTableKind: None)
!2510 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/rb.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!2511 = !{!2512, !30}
!2512 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rb_color", file: !2513, line: 19, baseType: !32, size: 32, elements: !2514)
!2513 = !DIFile(filename: "zephyr/lib/os/rb.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2514 = !{!2515, !2516}
!2515 = !DIEnumerator(name: "RED", value: 0)
!2516 = !DIEnumerator(name: "BLACK", value: 1)
!2517 = !{!108, !109, !22, !2518, !167}
!2518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2519, size: 32)
!2519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !2520)
!2520 = !{!2521}
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2519, file: !157, line: 50, baseType: !2522, size: 64)
!2522 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2518, size: 64, elements: !162)
!2523 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2524, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, splitDebugInlining: false, nameTableKind: None)
!2524 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!2525 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2526, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2527, retainedTypes: !2547, splitDebugInlining: false, nameTableKind: None)
!2526 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!2527 = !{!2528, !2536}
!2528 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2529, line: 69, baseType: !32, size: 32, elements: !2530)
!2529 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2530 = !{!2531, !2532, !2533, !2534, !2535}
!2531 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2532 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2533 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2534 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2535 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2536 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2529, line: 56, baseType: !32, size: 32, elements: !2537)
!2537 = !{!2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546}
!2538 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2539 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2540 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2541 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2542 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2543 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2544 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2545 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2546 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2547 = !{!109, !2528, !2536, !2548, !178, !341, !2550, !2551, !168, !182, !324, !235, !108, !22, !32, !2553, !2554, !2555, !103, !2556, !107, !2557, !2549, !2558, !2559, !2560, !2561}
!2548 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2529, line: 31, baseType: !2549)
!2549 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !107)
!2550 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !236, line: 329, baseType: !32)
!2551 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2529, line: 32, baseType: !2552)
!2552 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !112)
!2553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!2554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 32)
!2555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 32)
!2556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!2558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2549, size: 32)
!2559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 32)
!2560 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !236, line: 145, baseType: !109)
!2561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2560, size: 32)
!2562 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2563, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, splitDebugInlining: false, nameTableKind: None)
!2563 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!2564 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2565, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2565 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!2566 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2567, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2568, retainedTypes: !284, splitDebugInlining: false, nameTableKind: None)
!2567 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!2568 = !{!2569, !30}
!2569 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2570, line: 27, baseType: !32, size: 32, elements: !2571)
!2570 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2571 = !{!2572, !2573, !2574, !2575, !2576}
!2572 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2573 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2574 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2575 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2576 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2577 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2578, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2579, retainedTypes: !2580, splitDebugInlining: false, nameTableKind: None)
!2578 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!2579 = !{!595, !2569, !30}
!2580 = !{!782, !2581, !108, !109, !756, !110, !167, !2598}
!2581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2582, size: 32)
!2582 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !536, line: 426, baseType: !2583)
!2583 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 411, size: 28704, elements: !2584)
!2584 = !{!2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597}
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2583, file: !536, line: 413, baseType: !1560, size: 256)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2583, file: !536, line: 414, baseType: !1562, size: 768, offset: 256)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2583, file: !536, line: 415, baseType: !1560, size: 256, offset: 1024)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2583, file: !536, line: 416, baseType: !1562, size: 768, offset: 1280)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2583, file: !536, line: 417, baseType: !1560, size: 256, offset: 2048)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2583, file: !536, line: 418, baseType: !1562, size: 768, offset: 2304)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2583, file: !536, line: 419, baseType: !1560, size: 256, offset: 3072)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2583, file: !536, line: 420, baseType: !1562, size: 768, offset: 3328)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2583, file: !536, line: 421, baseType: !1560, size: 256, offset: 4096)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2583, file: !536, line: 422, baseType: !1573, size: 1792, offset: 4352)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2583, file: !536, line: 423, baseType: !1577, size: 1920, offset: 6144)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2583, file: !536, line: 424, baseType: !1582, size: 20608, offset: 8064)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2583, file: !536, line: 425, baseType: !301, size: 32, offset: 28672)
!2598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2599, size: 32)
!2599 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !536, line: 468, baseType: !2600)
!2600 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 445, size: 1120, elements: !2601)
!2601 = !{!2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622}
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2600, file: !536, line: 447, baseType: !540, size: 32)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2600, file: !536, line: 448, baseType: !301, size: 32, offset: 32)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2600, file: !536, line: 449, baseType: !301, size: 32, offset: 64)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2600, file: !536, line: 450, baseType: !301, size: 32, offset: 96)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2600, file: !536, line: 451, baseType: !301, size: 32, offset: 128)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2600, file: !536, line: 452, baseType: !301, size: 32, offset: 160)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2600, file: !536, line: 453, baseType: !1597, size: 96, offset: 192)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2600, file: !536, line: 454, baseType: !301, size: 32, offset: 288)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2600, file: !536, line: 455, baseType: !301, size: 32, offset: 320)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2600, file: !536, line: 456, baseType: !301, size: 32, offset: 352)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2600, file: !536, line: 457, baseType: !301, size: 32, offset: 384)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2600, file: !536, line: 458, baseType: !301, size: 32, offset: 416)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2600, file: !536, line: 459, baseType: !301, size: 32, offset: 448)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2600, file: !536, line: 460, baseType: !301, size: 32, offset: 480)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2600, file: !536, line: 461, baseType: !1606, size: 64, offset: 512)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2600, file: !536, line: 462, baseType: !540, size: 32, offset: 576)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2600, file: !536, line: 463, baseType: !540, size: 32, offset: 608)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2600, file: !536, line: 464, baseType: !1610, size: 128, offset: 640)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2600, file: !536, line: 465, baseType: !1612, size: 160, offset: 768)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2600, file: !536, line: 466, baseType: !1614, size: 160, offset: 928)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2600, file: !536, line: 467, baseType: !301, size: 32, offset: 1088)
!2623 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2624, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, splitDebugInlining: false, nameTableKind: None)
!2624 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!2625 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2626, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2627, splitDebugInlining: false, nameTableKind: None)
!2626 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!2627 = !{!108, !109, !22, !2628}
!2628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2629, size: 32)
!2629 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !536, line: 468, baseType: !2630)
!2630 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 445, size: 1120, elements: !2631)
!2631 = !{!2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652}
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2630, file: !536, line: 447, baseType: !540, size: 32)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2630, file: !536, line: 448, baseType: !301, size: 32, offset: 32)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2630, file: !536, line: 449, baseType: !301, size: 32, offset: 64)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2630, file: !536, line: 450, baseType: !301, size: 32, offset: 96)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2630, file: !536, line: 451, baseType: !301, size: 32, offset: 128)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2630, file: !536, line: 452, baseType: !301, size: 32, offset: 160)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2630, file: !536, line: 453, baseType: !1597, size: 96, offset: 192)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2630, file: !536, line: 454, baseType: !301, size: 32, offset: 288)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2630, file: !536, line: 455, baseType: !301, size: 32, offset: 320)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2630, file: !536, line: 456, baseType: !301, size: 32, offset: 352)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2630, file: !536, line: 457, baseType: !301, size: 32, offset: 384)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2630, file: !536, line: 458, baseType: !301, size: 32, offset: 416)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2630, file: !536, line: 459, baseType: !301, size: 32, offset: 448)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2630, file: !536, line: 460, baseType: !301, size: 32, offset: 480)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2630, file: !536, line: 461, baseType: !1606, size: 64, offset: 512)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2630, file: !536, line: 462, baseType: !540, size: 32, offset: 576)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2630, file: !536, line: 463, baseType: !540, size: 32, offset: 608)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2630, file: !536, line: 464, baseType: !1610, size: 128, offset: 640)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2630, file: !536, line: 465, baseType: !1612, size: 160, offset: 768)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2630, file: !536, line: 466, baseType: !1614, size: 160, offset: 928)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2630, file: !536, line: 467, baseType: !301, size: 32, offset: 1088)
!2653 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2654, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2655, splitDebugInlining: false, nameTableKind: None)
!2654 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!2655 = !{!2656, !108, !109}
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2657, size: 32)
!2657 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !536, line: 468, baseType: !2658)
!2658 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 445, size: 1120, elements: !2659)
!2659 = !{!2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2658, file: !536, line: 447, baseType: !540, size: 32)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2658, file: !536, line: 448, baseType: !301, size: 32, offset: 32)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2658, file: !536, line: 449, baseType: !301, size: 32, offset: 64)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2658, file: !536, line: 450, baseType: !301, size: 32, offset: 96)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2658, file: !536, line: 451, baseType: !301, size: 32, offset: 128)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2658, file: !536, line: 452, baseType: !301, size: 32, offset: 160)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2658, file: !536, line: 453, baseType: !1597, size: 96, offset: 192)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2658, file: !536, line: 454, baseType: !301, size: 32, offset: 288)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2658, file: !536, line: 455, baseType: !301, size: 32, offset: 320)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2658, file: !536, line: 456, baseType: !301, size: 32, offset: 352)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2658, file: !536, line: 457, baseType: !301, size: 32, offset: 384)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2658, file: !536, line: 458, baseType: !301, size: 32, offset: 416)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2658, file: !536, line: 459, baseType: !301, size: 32, offset: 448)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2658, file: !536, line: 460, baseType: !301, size: 32, offset: 480)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2658, file: !536, line: 461, baseType: !1606, size: 64, offset: 512)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2658, file: !536, line: 462, baseType: !540, size: 32, offset: 576)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2658, file: !536, line: 463, baseType: !540, size: 32, offset: 608)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2658, file: !536, line: 464, baseType: !1610, size: 128, offset: 640)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2658, file: !536, line: 465, baseType: !1612, size: 160, offset: 768)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2658, file: !536, line: 466, baseType: !1614, size: 160, offset: 928)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2658, file: !536, line: 467, baseType: !301, size: 32, offset: 1088)
!2681 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2682, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2683, splitDebugInlining: false, nameTableKind: None)
!2682 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!2683 = !{!2684, !110, !108, !109}
!2684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2685, size: 32)
!2685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2686, line: 98, size: 256, elements: !2687)
!2686 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2687 = !{!2688, !2693, !2698, !2703, !2708, !2713, !2718, !2723}
!2688 = !DIDerivedType(tag: DW_TAG_member, scope: !2685, file: !2686, line: 99, baseType: !2689, size: 32)
!2689 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2685, file: !2686, line: 99, size: 32, elements: !2690)
!2690 = !{!2691, !2692}
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2689, file: !2686, line: 99, baseType: !110, size: 32)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2689, file: !2686, line: 99, baseType: !110, size: 32)
!2693 = !DIDerivedType(tag: DW_TAG_member, scope: !2685, file: !2686, line: 100, baseType: !2694, size: 32, offset: 32)
!2694 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2685, file: !2686, line: 100, size: 32, elements: !2695)
!2695 = !{!2696, !2697}
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2694, file: !2686, line: 100, baseType: !110, size: 32)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2694, file: !2686, line: 100, baseType: !110, size: 32)
!2698 = !DIDerivedType(tag: DW_TAG_member, scope: !2685, file: !2686, line: 101, baseType: !2699, size: 32, offset: 64)
!2699 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2685, file: !2686, line: 101, size: 32, elements: !2700)
!2700 = !{!2701, !2702}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2699, file: !2686, line: 101, baseType: !110, size: 32)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2699, file: !2686, line: 101, baseType: !110, size: 32)
!2703 = !DIDerivedType(tag: DW_TAG_member, scope: !2685, file: !2686, line: 102, baseType: !2704, size: 32, offset: 96)
!2704 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2685, file: !2686, line: 102, size: 32, elements: !2705)
!2705 = !{!2706, !2707}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2704, file: !2686, line: 102, baseType: !110, size: 32)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2704, file: !2686, line: 102, baseType: !110, size: 32)
!2708 = !DIDerivedType(tag: DW_TAG_member, scope: !2685, file: !2686, line: 103, baseType: !2709, size: 32, offset: 128)
!2709 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2685, file: !2686, line: 103, size: 32, elements: !2710)
!2710 = !{!2711, !2712}
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2709, file: !2686, line: 103, baseType: !110, size: 32)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2709, file: !2686, line: 103, baseType: !110, size: 32)
!2713 = !DIDerivedType(tag: DW_TAG_member, scope: !2685, file: !2686, line: 104, baseType: !2714, size: 32, offset: 160)
!2714 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2685, file: !2686, line: 104, size: 32, elements: !2715)
!2715 = !{!2716, !2717}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2714, file: !2686, line: 104, baseType: !110, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2714, file: !2686, line: 104, baseType: !110, size: 32)
!2718 = !DIDerivedType(tag: DW_TAG_member, scope: !2685, file: !2686, line: 105, baseType: !2719, size: 32, offset: 192)
!2719 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2685, file: !2686, line: 105, size: 32, elements: !2720)
!2720 = !{!2721, !2722}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2719, file: !2686, line: 105, baseType: !110, size: 32)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2719, file: !2686, line: 105, baseType: !110, size: 32)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2685, file: !2686, line: 106, baseType: !110, size: 32, offset: 224)
!2724 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2725, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2568, retainedTypes: !2726, splitDebugInlining: false, nameTableKind: None)
!2725 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!2726 = !{!2727, !108, !109, !2752, !2795, !110}
!2727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2728, size: 32)
!2728 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !536, line: 468, baseType: !2729)
!2729 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 445, size: 1120, elements: !2730)
!2730 = !{!2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751}
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2729, file: !536, line: 447, baseType: !540, size: 32)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2729, file: !536, line: 448, baseType: !301, size: 32, offset: 32)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2729, file: !536, line: 449, baseType: !301, size: 32, offset: 64)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2729, file: !536, line: 450, baseType: !301, size: 32, offset: 96)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2729, file: !536, line: 451, baseType: !301, size: 32, offset: 128)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2729, file: !536, line: 452, baseType: !301, size: 32, offset: 160)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2729, file: !536, line: 453, baseType: !1597, size: 96, offset: 192)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2729, file: !536, line: 454, baseType: !301, size: 32, offset: 288)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2729, file: !536, line: 455, baseType: !301, size: 32, offset: 320)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2729, file: !536, line: 456, baseType: !301, size: 32, offset: 352)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2729, file: !536, line: 457, baseType: !301, size: 32, offset: 384)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2729, file: !536, line: 458, baseType: !301, size: 32, offset: 416)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2729, file: !536, line: 459, baseType: !301, size: 32, offset: 448)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2729, file: !536, line: 460, baseType: !301, size: 32, offset: 480)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2729, file: !536, line: 461, baseType: !1606, size: 64, offset: 512)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2729, file: !536, line: 462, baseType: !540, size: 32, offset: 576)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2729, file: !536, line: 463, baseType: !540, size: 32, offset: 608)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2729, file: !536, line: 464, baseType: !1610, size: 128, offset: 640)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2729, file: !536, line: 465, baseType: !1612, size: 160, offset: 768)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2729, file: !536, line: 466, baseType: !1614, size: 160, offset: 928)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2729, file: !536, line: 467, baseType: !301, size: 32, offset: 1088)
!2752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2753, size: 32)
!2753 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2686, line: 141, baseType: !2754)
!2754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2686, line: 97, size: 256, elements: !2755)
!2755 = !{!2756}
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2754, file: !2686, line: 107, baseType: !2757, size: 256)
!2757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2686, line: 98, size: 256, elements: !2758)
!2758 = !{!2759, !2764, !2769, !2774, !2779, !2784, !2789, !2794}
!2759 = !DIDerivedType(tag: DW_TAG_member, scope: !2757, file: !2686, line: 99, baseType: !2760, size: 32)
!2760 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2757, file: !2686, line: 99, size: 32, elements: !2761)
!2761 = !{!2762, !2763}
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2760, file: !2686, line: 99, baseType: !110, size: 32)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2760, file: !2686, line: 99, baseType: !110, size: 32)
!2764 = !DIDerivedType(tag: DW_TAG_member, scope: !2757, file: !2686, line: 100, baseType: !2765, size: 32, offset: 32)
!2765 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2757, file: !2686, line: 100, size: 32, elements: !2766)
!2766 = !{!2767, !2768}
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2765, file: !2686, line: 100, baseType: !110, size: 32)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2765, file: !2686, line: 100, baseType: !110, size: 32)
!2769 = !DIDerivedType(tag: DW_TAG_member, scope: !2757, file: !2686, line: 101, baseType: !2770, size: 32, offset: 64)
!2770 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2757, file: !2686, line: 101, size: 32, elements: !2771)
!2771 = !{!2772, !2773}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2770, file: !2686, line: 101, baseType: !110, size: 32)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2770, file: !2686, line: 101, baseType: !110, size: 32)
!2774 = !DIDerivedType(tag: DW_TAG_member, scope: !2757, file: !2686, line: 102, baseType: !2775, size: 32, offset: 96)
!2775 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2757, file: !2686, line: 102, size: 32, elements: !2776)
!2776 = !{!2777, !2778}
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2775, file: !2686, line: 102, baseType: !110, size: 32)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2775, file: !2686, line: 102, baseType: !110, size: 32)
!2779 = !DIDerivedType(tag: DW_TAG_member, scope: !2757, file: !2686, line: 103, baseType: !2780, size: 32, offset: 128)
!2780 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2757, file: !2686, line: 103, size: 32, elements: !2781)
!2781 = !{!2782, !2783}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2780, file: !2686, line: 103, baseType: !110, size: 32)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2780, file: !2686, line: 103, baseType: !110, size: 32)
!2784 = !DIDerivedType(tag: DW_TAG_member, scope: !2757, file: !2686, line: 104, baseType: !2785, size: 32, offset: 160)
!2785 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2757, file: !2686, line: 104, size: 32, elements: !2786)
!2786 = !{!2787, !2788}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2785, file: !2686, line: 104, baseType: !110, size: 32)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2785, file: !2686, line: 104, baseType: !110, size: 32)
!2789 = !DIDerivedType(tag: DW_TAG_member, scope: !2757, file: !2686, line: 105, baseType: !2790, size: 32, offset: 192)
!2790 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2757, file: !2686, line: 105, size: 32, elements: !2791)
!2791 = !{!2792, !2793}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2790, file: !2686, line: 105, baseType: !110, size: 32)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2790, file: !2686, line: 105, baseType: !110, size: 32)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2757, file: !2686, line: 106, baseType: !110, size: 32, offset: 224)
!2795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!2796 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2797, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1545, retainedTypes: !2798, splitDebugInlining: false, nameTableKind: None)
!2797 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!2798 = !{!782, !756, !167, !110, !2799, !2816}
!2799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2800, size: 32)
!2800 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !536, line: 426, baseType: !2801)
!2801 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 411, size: 28704, elements: !2802)
!2802 = !{!2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815}
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2801, file: !536, line: 413, baseType: !1560, size: 256)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2801, file: !536, line: 414, baseType: !1562, size: 768, offset: 256)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2801, file: !536, line: 415, baseType: !1560, size: 256, offset: 1024)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2801, file: !536, line: 416, baseType: !1562, size: 768, offset: 1280)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2801, file: !536, line: 417, baseType: !1560, size: 256, offset: 2048)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2801, file: !536, line: 418, baseType: !1562, size: 768, offset: 2304)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2801, file: !536, line: 419, baseType: !1560, size: 256, offset: 3072)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2801, file: !536, line: 420, baseType: !1562, size: 768, offset: 3328)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2801, file: !536, line: 421, baseType: !1560, size: 256, offset: 4096)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2801, file: !536, line: 422, baseType: !1573, size: 1792, offset: 4352)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2801, file: !536, line: 423, baseType: !1577, size: 1920, offset: 6144)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2801, file: !536, line: 424, baseType: !1582, size: 20608, offset: 8064)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2801, file: !536, line: 425, baseType: !301, size: 32, offset: 28672)
!2816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2817, size: 32)
!2817 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !536, line: 468, baseType: !2818)
!2818 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 445, size: 1120, elements: !2819)
!2819 = !{!2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840}
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2818, file: !536, line: 447, baseType: !540, size: 32)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2818, file: !536, line: 448, baseType: !301, size: 32, offset: 32)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2818, file: !536, line: 449, baseType: !301, size: 32, offset: 64)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2818, file: !536, line: 450, baseType: !301, size: 32, offset: 96)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2818, file: !536, line: 451, baseType: !301, size: 32, offset: 128)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2818, file: !536, line: 452, baseType: !301, size: 32, offset: 160)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2818, file: !536, line: 453, baseType: !1597, size: 96, offset: 192)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2818, file: !536, line: 454, baseType: !301, size: 32, offset: 288)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2818, file: !536, line: 455, baseType: !301, size: 32, offset: 320)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2818, file: !536, line: 456, baseType: !301, size: 32, offset: 352)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2818, file: !536, line: 457, baseType: !301, size: 32, offset: 384)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2818, file: !536, line: 458, baseType: !301, size: 32, offset: 416)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2818, file: !536, line: 459, baseType: !301, size: 32, offset: 448)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2818, file: !536, line: 460, baseType: !301, size: 32, offset: 480)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2818, file: !536, line: 461, baseType: !1606, size: 64, offset: 512)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2818, file: !536, line: 462, baseType: !540, size: 32, offset: 576)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2818, file: !536, line: 463, baseType: !540, size: 32, offset: 608)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2818, file: !536, line: 464, baseType: !1610, size: 128, offset: 640)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2818, file: !536, line: 465, baseType: !1612, size: 160, offset: 768)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2818, file: !536, line: 466, baseType: !1614, size: 160, offset: 928)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2818, file: !536, line: 467, baseType: !301, size: 32, offset: 1088)
!2841 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2842, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2843, splitDebugInlining: false, nameTableKind: None)
!2842 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!2843 = !{!2844, !108, !109}
!2844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2845, size: 32)
!2845 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !536, line: 468, baseType: !2846)
!2846 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 445, size: 1120, elements: !2847)
!2847 = !{!2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868}
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2846, file: !536, line: 447, baseType: !540, size: 32)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2846, file: !536, line: 448, baseType: !301, size: 32, offset: 32)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2846, file: !536, line: 449, baseType: !301, size: 32, offset: 64)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2846, file: !536, line: 450, baseType: !301, size: 32, offset: 96)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2846, file: !536, line: 451, baseType: !301, size: 32, offset: 128)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2846, file: !536, line: 452, baseType: !301, size: 32, offset: 160)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2846, file: !536, line: 453, baseType: !1597, size: 96, offset: 192)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2846, file: !536, line: 454, baseType: !301, size: 32, offset: 288)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2846, file: !536, line: 455, baseType: !301, size: 32, offset: 320)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2846, file: !536, line: 456, baseType: !301, size: 32, offset: 352)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2846, file: !536, line: 457, baseType: !301, size: 32, offset: 384)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2846, file: !536, line: 458, baseType: !301, size: 32, offset: 416)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2846, file: !536, line: 459, baseType: !301, size: 32, offset: 448)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2846, file: !536, line: 460, baseType: !301, size: 32, offset: 480)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2846, file: !536, line: 461, baseType: !1606, size: 64, offset: 512)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2846, file: !536, line: 462, baseType: !540, size: 32, offset: 576)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2846, file: !536, line: 463, baseType: !540, size: 32, offset: 608)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2846, file: !536, line: 464, baseType: !1610, size: 128, offset: 640)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2846, file: !536, line: 465, baseType: !1612, size: 160, offset: 768)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2846, file: !536, line: 466, baseType: !1614, size: 160, offset: 928)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2846, file: !536, line: 467, baseType: !301, size: 32, offset: 1088)
!2869 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2870, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2871, splitDebugInlining: false, nameTableKind: None)
!2870 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!2871 = !{!226, !1147, !235, !980, !2872, !168, !108}
!2872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2873, size: 32)
!2873 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !168)
!2874 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2875, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2876, splitDebugInlining: false, nameTableKind: None)
!2875 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!2876 = !{!2877}
!2877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2878, size: 32)
!2878 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !297, line: 510, baseType: !2879)
!2879 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 477, size: 1216, elements: !2880)
!2880 = !{!2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911}
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2879, file: !297, line: 479, baseType: !301, size: 32)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2879, file: !297, line: 480, baseType: !301, size: 32, offset: 32)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2879, file: !297, line: 481, baseType: !301, size: 32, offset: 64)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2879, file: !297, line: 482, baseType: !301, size: 32, offset: 96)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2879, file: !297, line: 483, baseType: !301, size: 32, offset: 128)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2879, file: !297, line: 484, baseType: !301, size: 32, offset: 160)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2879, file: !297, line: 485, baseType: !844, size: 64, offset: 192)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2879, file: !297, line: 486, baseType: !301, size: 32, offset: 256)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2879, file: !297, line: 487, baseType: !301, size: 32, offset: 288)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2879, file: !297, line: 488, baseType: !844, size: 64, offset: 320)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2879, file: !297, line: 489, baseType: !301, size: 32, offset: 384)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2879, file: !297, line: 490, baseType: !301, size: 32, offset: 416)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2879, file: !297, line: 491, baseType: !844, size: 64, offset: 448)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2879, file: !297, line: 492, baseType: !301, size: 32, offset: 512)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2879, file: !297, line: 493, baseType: !301, size: 32, offset: 544)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2879, file: !297, line: 494, baseType: !844, size: 64, offset: 576)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2879, file: !297, line: 495, baseType: !301, size: 32, offset: 640)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2879, file: !297, line: 496, baseType: !301, size: 32, offset: 672)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2879, file: !297, line: 497, baseType: !844, size: 64, offset: 704)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2879, file: !297, line: 498, baseType: !301, size: 32, offset: 768)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2879, file: !297, line: 499, baseType: !301, size: 32, offset: 800)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2879, file: !297, line: 500, baseType: !844, size: 64, offset: 832)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2879, file: !297, line: 501, baseType: !301, size: 32, offset: 896)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2879, file: !297, line: 502, baseType: !301, size: 32, offset: 928)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2879, file: !297, line: 503, baseType: !844, size: 64, offset: 960)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2879, file: !297, line: 504, baseType: !301, size: 32, offset: 1024)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2879, file: !297, line: 505, baseType: !301, size: 32, offset: 1056)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2879, file: !297, line: 506, baseType: !110, size: 32, offset: 1088)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2879, file: !297, line: 507, baseType: !301, size: 32, offset: 1120)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2879, file: !297, line: 508, baseType: !301, size: 32, offset: 1152)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2879, file: !297, line: 509, baseType: !301, size: 32, offset: 1184)
!2912 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2913, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2913 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!2914 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2915, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2916, retainedTypes: !2932, splitDebugInlining: false, nameTableKind: None)
!2915 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!2916 = !{!2917, !2924, !2928}
!2917 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2918, line: 38, baseType: !32, size: 32, elements: !2919)
!2918 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2919 = !{!2920, !2921, !2922, !2923}
!2920 = !DIEnumerator(name: "HAL_OK", value: 0)
!2921 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2922 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2923 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2924 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !821, line: 184, baseType: !32, size: 32, elements: !2925)
!2925 = !{!2926, !2927}
!2926 = !DIEnumerator(name: "RESET", value: 0)
!2927 = !DIEnumerator(name: "SET", value: 1)
!2928 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !821, line: 190, baseType: !32, size: 32, elements: !2929)
!2929 = !{!2930, !2931}
!2930 = !DIEnumerator(name: "DISABLE", value: 0)
!2931 = !DIEnumerator(name: "ENABLE", value: 1)
!2932 = !{!108, !2933, !167, !110, !1461, !2968, !2974, !2985, !181, !2986, !111}
!2933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2934, size: 32)
!2934 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !297, line: 510, baseType: !2935)
!2935 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 477, size: 1216, elements: !2936)
!2936 = !{!2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967}
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2935, file: !297, line: 479, baseType: !301, size: 32)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2935, file: !297, line: 480, baseType: !301, size: 32, offset: 32)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2935, file: !297, line: 481, baseType: !301, size: 32, offset: 64)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2935, file: !297, line: 482, baseType: !301, size: 32, offset: 96)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2935, file: !297, line: 483, baseType: !301, size: 32, offset: 128)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2935, file: !297, line: 484, baseType: !301, size: 32, offset: 160)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2935, file: !297, line: 485, baseType: !844, size: 64, offset: 192)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2935, file: !297, line: 486, baseType: !301, size: 32, offset: 256)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2935, file: !297, line: 487, baseType: !301, size: 32, offset: 288)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2935, file: !297, line: 488, baseType: !844, size: 64, offset: 320)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2935, file: !297, line: 489, baseType: !301, size: 32, offset: 384)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2935, file: !297, line: 490, baseType: !301, size: 32, offset: 416)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2935, file: !297, line: 491, baseType: !844, size: 64, offset: 448)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2935, file: !297, line: 492, baseType: !301, size: 32, offset: 512)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2935, file: !297, line: 493, baseType: !301, size: 32, offset: 544)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2935, file: !297, line: 494, baseType: !844, size: 64, offset: 576)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2935, file: !297, line: 495, baseType: !301, size: 32, offset: 640)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2935, file: !297, line: 496, baseType: !301, size: 32, offset: 672)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2935, file: !297, line: 497, baseType: !844, size: 64, offset: 704)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2935, file: !297, line: 498, baseType: !301, size: 32, offset: 768)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2935, file: !297, line: 499, baseType: !301, size: 32, offset: 800)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2935, file: !297, line: 500, baseType: !844, size: 64, offset: 832)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2935, file: !297, line: 501, baseType: !301, size: 32, offset: 896)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2935, file: !297, line: 502, baseType: !301, size: 32, offset: 928)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2935, file: !297, line: 503, baseType: !844, size: 64, offset: 960)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2935, file: !297, line: 504, baseType: !301, size: 32, offset: 1024)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2935, file: !297, line: 505, baseType: !301, size: 32, offset: 1056)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2935, file: !297, line: 506, baseType: !110, size: 32, offset: 1088)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2935, file: !297, line: 507, baseType: !301, size: 32, offset: 1120)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2935, file: !297, line: 508, baseType: !301, size: 32, offset: 1152)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2935, file: !297, line: 509, baseType: !301, size: 32, offset: 1184)
!2968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2969, size: 32)
!2969 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !297, line: 471, baseType: !2970)
!2970 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 467, size: 64, elements: !2971)
!2971 = !{!2972, !2973}
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2970, file: !297, line: 469, baseType: !301, size: 32)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2970, file: !297, line: 470, baseType: !301, size: 32, offset: 32)
!2974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2975, size: 32)
!2975 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !297, line: 379, baseType: !2976)
!2976 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 370, size: 224, elements: !2977)
!2977 = !{!2978, !2979, !2980, !2981, !2982, !2983, !2984}
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2976, file: !297, line: 372, baseType: !301, size: 32)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2976, file: !297, line: 373, baseType: !301, size: 32, offset: 32)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2976, file: !297, line: 374, baseType: !301, size: 32, offset: 64)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2976, file: !297, line: 375, baseType: !301, size: 32, offset: 96)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2976, file: !297, line: 376, baseType: !301, size: 32, offset: 128)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2976, file: !297, line: 377, baseType: !301, size: 32, offset: 160)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2976, file: !297, line: 378, baseType: !301, size: 32, offset: 192)
!2985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 32)
!2986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2987, size: 32)
!2987 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !297, line: 396, baseType: !2988)
!2988 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 385, size: 320, elements: !2989)
!2989 = !{!2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998}
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2988, file: !297, line: 387, baseType: !301, size: 32)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2988, file: !297, line: 388, baseType: !301, size: 32, offset: 32)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2988, file: !297, line: 389, baseType: !301, size: 32, offset: 64)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2988, file: !297, line: 390, baseType: !301, size: 32, offset: 96)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2988, file: !297, line: 391, baseType: !301, size: 32, offset: 128)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2988, file: !297, line: 392, baseType: !301, size: 32, offset: 160)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2988, file: !297, line: 393, baseType: !301, size: 32, offset: 192)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2988, file: !297, line: 394, baseType: !301, size: 32, offset: 224)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2988, file: !297, line: 395, baseType: !1134, size: 64, offset: 256)
!2999 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3000, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3001, retainedTypes: !3002, splitDebugInlining: false, nameTableKind: None)
!3000 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!3001 = !{!820}
!3002 = !{!3003, !110, !3011, !3017, !3028}
!3003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3004, size: 32)
!3004 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !536, line: 770, baseType: !3005)
!3005 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 764, size: 128, elements: !3006)
!3006 = !{!3007, !3008, !3009, !3010}
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3005, file: !536, line: 766, baseType: !301, size: 32)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3005, file: !536, line: 767, baseType: !301, size: 32, offset: 32)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3005, file: !536, line: 768, baseType: !301, size: 32, offset: 64)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3005, file: !536, line: 769, baseType: !540, size: 32, offset: 96)
!3011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3012, size: 32)
!3012 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !297, line: 471, baseType: !3013)
!3013 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 467, size: 64, elements: !3014)
!3014 = !{!3015, !3016}
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3013, file: !297, line: 469, baseType: !301, size: 32)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3013, file: !297, line: 470, baseType: !301, size: 32, offset: 32)
!3017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3018, size: 32)
!3018 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !297, line: 379, baseType: !3019)
!3019 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 370, size: 224, elements: !3020)
!3020 = !{!3021, !3022, !3023, !3024, !3025, !3026, !3027}
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3019, file: !297, line: 372, baseType: !301, size: 32)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3019, file: !297, line: 373, baseType: !301, size: 32, offset: 32)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3019, file: !297, line: 374, baseType: !301, size: 32, offset: 64)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3019, file: !297, line: 375, baseType: !301, size: 32, offset: 96)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3019, file: !297, line: 376, baseType: !301, size: 32, offset: 128)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3019, file: !297, line: 377, baseType: !301, size: 32, offset: 160)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3019, file: !297, line: 378, baseType: !301, size: 32, offset: 192)
!3028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3029, size: 32)
!3029 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !297, line: 510, baseType: !3030)
!3030 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 477, size: 1216, elements: !3031)
!3031 = !{!3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062}
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3030, file: !297, line: 479, baseType: !301, size: 32)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3030, file: !297, line: 480, baseType: !301, size: 32, offset: 32)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3030, file: !297, line: 481, baseType: !301, size: 32, offset: 64)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3030, file: !297, line: 482, baseType: !301, size: 32, offset: 96)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3030, file: !297, line: 483, baseType: !301, size: 32, offset: 128)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3030, file: !297, line: 484, baseType: !301, size: 32, offset: 160)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3030, file: !297, line: 485, baseType: !844, size: 64, offset: 192)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3030, file: !297, line: 486, baseType: !301, size: 32, offset: 256)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3030, file: !297, line: 487, baseType: !301, size: 32, offset: 288)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3030, file: !297, line: 488, baseType: !844, size: 64, offset: 320)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3030, file: !297, line: 489, baseType: !301, size: 32, offset: 384)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3030, file: !297, line: 490, baseType: !301, size: 32, offset: 416)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3030, file: !297, line: 491, baseType: !844, size: 64, offset: 448)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3030, file: !297, line: 492, baseType: !301, size: 32, offset: 512)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3030, file: !297, line: 493, baseType: !301, size: 32, offset: 544)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3030, file: !297, line: 494, baseType: !844, size: 64, offset: 576)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3030, file: !297, line: 495, baseType: !301, size: 32, offset: 640)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3030, file: !297, line: 496, baseType: !301, size: 32, offset: 672)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3030, file: !297, line: 497, baseType: !844, size: 64, offset: 704)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3030, file: !297, line: 498, baseType: !301, size: 32, offset: 768)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3030, file: !297, line: 499, baseType: !301, size: 32, offset: 800)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3030, file: !297, line: 500, baseType: !844, size: 64, offset: 832)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3030, file: !297, line: 501, baseType: !301, size: 32, offset: 896)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3030, file: !297, line: 502, baseType: !301, size: 32, offset: 928)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3030, file: !297, line: 503, baseType: !844, size: 64, offset: 960)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3030, file: !297, line: 504, baseType: !301, size: 32, offset: 1024)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3030, file: !297, line: 505, baseType: !301, size: 32, offset: 1056)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3030, file: !297, line: 506, baseType: !110, size: 32, offset: 1088)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3030, file: !297, line: 507, baseType: !301, size: 32, offset: 1120)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3030, file: !297, line: 508, baseType: !301, size: 32, offset: 1152)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3030, file: !297, line: 509, baseType: !301, size: 32, offset: 1184)
!3063 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3064, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3065, splitDebugInlining: false, nameTableKind: None)
!3064 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!3065 = !{!108, !235}
!3066 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3067, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3068, retainedTypes: !284, splitDebugInlining: false, nameTableKind: None)
!3067 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!3068 = !{!3069, !3076, !2569, !30}
!3069 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3070, line: 14, baseType: !32, size: 32, elements: !3071)
!3070 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3071 = !{!3072, !3073, !3074, !3075}
!3072 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3073 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3074 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3075 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3076 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3070, line: 42, baseType: !32, size: 32, elements: !3077)
!3077 = !{!3078, !3079, !3080, !3081, !3082, !3083}
!3078 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3079 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3080 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3081 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3082 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3083 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3084 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3085, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, splitDebugInlining: false, nameTableKind: None)
!3085 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!3086 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3087, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3088, splitDebugInlining: false, nameTableKind: None)
!3087 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!3088 = !{!22, !108, !109}
!3089 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3090, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, splitDebugInlining: false, nameTableKind: None)
!3090 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!3091 = !{!"Ubuntu clang version 14.0.6"}
!3092 = !{i32 7, !"Dwarf Version", i32 4}
!3093 = !{i32 2, !"Debug Info Version", i32 3}
!3094 = !{i32 1, !"wchar_size", i32 4}
!3095 = !{i32 1, !"min_enum_size", i32 4}
!3096 = !{i32 1, !"branch-target-enforcement", i32 0}
!3097 = !{i32 1, !"sign-return-address", i32 0}
!3098 = !{i32 1, !"sign-return-address-all", i32 0}
!3099 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3100 = !{i32 7, !"frame-pointer", i32 2}
!3101 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3102, file: !3102, line: 26, type: !3103, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !2018)
!3102 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3103 = !DISubroutineType(types: !3104)
!3104 = !{null}
!3105 = !DILocation(line: 28, column: 1, scope: !3101)
!3106 = !{i64 2155035703, i64 2155035723, i64 2155035786}
!3107 = !DILocation(line: 29, column: 1, scope: !3101)
!3108 = !{i64 2155036118, i64 2155036138, i64 2155036201}
!3109 = !DILocation(line: 30, column: 1, scope: !3101)
!3110 = !{i64 2155036537, i64 2155036557, i64 2155036620}
!3111 = !DILocation(line: 31, column: 1, scope: !3101)
!3112 = !{i64 2155036956, i64 2155036976, i64 2155037039}
!3113 = !DILocation(line: 33, column: 1, scope: !3101)
!3114 = !{i64 2155037248, i64 2155037268, i64 2155037331}
!3115 = !DILocation(line: 35, column: 1, scope: !3101)
!3116 = !{i64 2155037573, i64 2155037593, i64 2155037656}
!3117 = !DILocation(line: 42, column: 1, scope: !3101)
!3118 = !{i64 2155038000, i64 2155038020, i64 2155038083}
!3119 = !DILocation(line: 50, column: 1, scope: !3101)
!3120 = !{i64 2155038442, i64 2155038462, i64 2155038525}
!3121 = !DILocation(line: 54, column: 1, scope: !3101)
!3122 = !{i64 2155038881, i64 2155038901, i64 2155038964}
!3123 = !DILocation(line: 61, column: 1, scope: !3101)
!3124 = !{i64 2155039198, i64 2155039218, i64 2155039281}
!3125 = !DILocation(line: 63, column: 1, scope: !3101)
!3126 = !{i64 2155039578, i64 2155039598, i64 2155039661}
!3127 = !DILocation(line: 64, column: 1, scope: !3101)
!3128 = !{i64 2155044161, i64 2155044181, i64 2155044244}
!3129 = !DILocation(line: 65, column: 1, scope: !3101)
!3130 = !{i64 2155044659, i64 2155044679, i64 2155044742}
!3131 = !DILocation(line: 66, column: 1, scope: !3101)
!3132 = !{i64 2155045141, i64 2155045161, i64 2155045224}
!3133 = !DILocation(line: 67, column: 1, scope: !3101)
!3134 = !{i64 2155045648, i64 2155045668, i64 2155045731}
!3135 = !DILocation(line: 68, column: 1, scope: !3101)
!3136 = !{i64 2155046136, i64 2155046156, i64 2155046219}
!3137 = !DILocation(line: 70, column: 1, scope: !3101)
!3138 = !{i64 2155046604, i64 2155046624, i64 2155046687}
!3139 = !DILocation(line: 71, column: 1, scope: !3101)
!3140 = !{i64 2155047046, i64 2155047066, i64 2155047129}
!3141 = !DILocation(line: 72, column: 1, scope: !3101)
!3142 = !{i64 2155047504, i64 2155047524, i64 2155047587}
!3143 = !DILocation(line: 79, column: 1, scope: !3101)
!3144 = !{i64 2155047958, i64 2155047978, i64 2155048041}
!3145 = !DILocation(line: 80, column: 1, scope: !3101)
!3146 = !{i64 2155048469, i64 2155048489, i64 2155048552}
!3147 = !DILocation(line: 82, column: 1, scope: !3101)
!3148 = !{i64 2155048960, i64 2155048980, i64 2155049043}
!3149 = !DILocation(line: 86, column: 1, scope: !3101)
!3150 = !{i64 2155049429, i64 2155049449, i64 2155049512}
!3151 = !DILocation(line: 97, column: 1, scope: !3101)
!3152 = !{i64 2155049771, i64 2155049791, i64 2155049854}
!3153 = !DILocation(line: 99, column: 1, scope: !3101)
!3154 = !{i64 2155049989, i64 2155050009, i64 2155050072}
!3155 = !DILocation(line: 102, column: 1, scope: !3101)
!3156 = !{i64 2155050246, i64 2155050266, i64 2155050329}
!3157 = !DILocation(line: 105, column: 1, scope: !3101)
!3158 = !{i64 2155050486, i64 2155050506, i64 2155050569}
!3159 = !DILocation(line: 115, column: 1, scope: !3101)
!3160 = !{i64 2155050825, i64 2155050845, i64 2155050908}
!3161 = !DILocation(line: 118, column: 1, scope: !3101)
!3162 = !{i64 2155051169, i64 2155051189, i64 2155051252}
!3163 = !DILocation(line: 32, column: 1, scope: !3164)
!3164 = !DILexicalBlockFile(scope: !3101, file: !3165, discriminator: 0)
!3165 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3166 = !{i64 2155051525, i64 2155051545, i64 2155051608}
!3167 = !DILocation(line: 33, column: 1, scope: !3164)
!3168 = !{i64 2155052037, i64 2155052057, i64 2155052120}
!3169 = !DILocation(line: 53, column: 1, scope: !3164)
!3170 = !{i64 2155052545, i64 2155052565, i64 2155052628}
!3171 = !DILocation(line: 54, column: 1, scope: !3164)
!3172 = !{i64 2155052963, i64 2155052983, i64 2155053046}
!3173 = !DILocation(line: 55, column: 1, scope: !3164)
!3174 = !{i64 2155057442, i64 2155057462, i64 2155057525}
!3175 = !DILocation(line: 56, column: 1, scope: !3164)
!3176 = !{i64 2155057860, i64 2155057880, i64 2155057943}
!3177 = !DILocation(line: 57, column: 1, scope: !3164)
!3178 = !{i64 2155058278, i64 2155058298, i64 2155058361}
!3179 = !DILocation(line: 58, column: 1, scope: !3164)
!3180 = !{i64 2155058696, i64 2155058716, i64 2155058779}
!3181 = !DILocation(line: 59, column: 1, scope: !3164)
!3182 = !{i64 2155059114, i64 2155059134, i64 2155059197}
!3183 = !DILocation(line: 60, column: 1, scope: !3164)
!3184 = !{i64 2155059538, i64 2155059558, i64 2155059621}
!3185 = !DILocation(line: 61, column: 1, scope: !3164)
!3186 = !{i64 2155059855, i64 2155059875, i64 2155059938}
!3187 = !DILocation(line: 70, column: 1, scope: !3164)
!3188 = !{i64 2155060084, i64 2155060104, i64 2155060167}
!3189 = !DILocation(line: 72, column: 1, scope: !3164)
!3190 = !{i64 2155060416, i64 2155060436, i64 2155060499}
!3191 = !DILocation(line: 73, column: 1, scope: !3164)
!3192 = !{i64 2155060866, i64 2155060886, i64 2155060949}
!3193 = !DILocation(line: 74, column: 1, scope: !3164)
!3194 = !{i64 2155061316, i64 2155061336, i64 2155061399}
!3195 = !DILocation(line: 75, column: 1, scope: !3164)
!3196 = !{i64 2155061766, i64 2155061786, i64 2155061849}
!3197 = !DILocation(line: 76, column: 1, scope: !3164)
!3198 = !{i64 2155062216, i64 2155062236, i64 2155062299}
!3199 = !DILocation(line: 77, column: 1, scope: !3164)
!3200 = !{i64 2155062666, i64 2155062686, i64 2155062749}
!3201 = !DILocation(line: 78, column: 1, scope: !3164)
!3202 = !{i64 2155063116, i64 2155063136, i64 2155063199}
!3203 = !DILocation(line: 79, column: 1, scope: !3164)
!3204 = !{i64 2155063566, i64 2155063586, i64 2155063649}
!3205 = !DILocation(line: 80, column: 1, scope: !3164)
!3206 = !{i64 2155064019, i64 2155064039, i64 2155064102}
!3207 = !DILocation(line: 84, column: 1, scope: !3164)
!3208 = !{i64 2155064351, i64 2155064371, i64 2155064434}
!3209 = !DILocation(line: 91, column: 1, scope: !3164)
!3210 = !{i64 2155064748, i64 2155064768, i64 2155064831}
!3211 = !DILocation(line: 93, column: 1, scope: !3164)
!3212 = !{i64 2155065115, i64 2155065135, i64 2155065198}
!3213 = !DILocation(line: 106, column: 1, scope: !3164)
!3214 = !{i64 2155065385, i64 2155065405, i64 2155065468}
!3215 = !DILocation(line: 11, column: 1, scope: !3216)
!3216 = !DILexicalBlockFile(scope: !3101, file: !3217, discriminator: 0)
!3217 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3218 = distinct !DISubprogram(name: "philosopher", scope: !3219, file: !3219, line: 140, type: !218, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3220)
!3219 = !DIFile(filename: "zephyr/samples/philosophers/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3220 = !{!3221, !3222, !3223, !3224, !3225, !3226, !3227}
!3221 = !DILocalVariable(name: "id", arg: 1, scope: !3218, file: !3219, line: 140, type: !108)
!3222 = !DILocalVariable(name: "unused1", arg: 2, scope: !3218, file: !3219, line: 140, type: !108)
!3223 = !DILocalVariable(name: "unused2", arg: 3, scope: !3218, file: !3219, line: 140, type: !108)
!3224 = !DILocalVariable(name: "fork1", scope: !3218, file: !3219, line: 145, type: !279)
!3225 = !DILocalVariable(name: "fork2", scope: !3218, file: !3219, line: 146, type: !279)
!3226 = !DILocalVariable(name: "my_id", scope: !3218, file: !3219, line: 148, type: !109)
!3227 = !DILocalVariable(name: "delay", scope: !3228, file: !3219, line: 160, type: !756)
!3228 = distinct !DILexicalBlock(scope: !3218, file: !3219, line: 159, column: 12)
!3229 = !DILocation(line: 0, scope: !3218)
!3230 = !DILocation(line: 148, column: 14, scope: !3218)
!3231 = !DILocation(line: 151, column: 6, scope: !3232)
!3232 = distinct !DILexicalBlock(scope: !3218, file: !3219, line: 151, column: 6)
!3233 = !DILocation(line: 151, column: 6, scope: !3218)
!3234 = !DILocation(line: 155, column: 11, scope: !3235)
!3235 = distinct !DILexicalBlock(scope: !3232, file: !3219, line: 154, column: 9)
!3236 = !DILocation(line: 156, column: 11, scope: !3235)
!3237 = !DILocation(line: 0, scope: !3232)
!3238 = !DILocation(line: 159, column: 2, scope: !3218)
!3239 = !DILocation(line: 162, column: 3, scope: !3228)
!3240 = !DILocation(line: 163, column: 3, scope: !3228)
!3241 = !DILocation(line: 164, column: 3, scope: !3228)
!3242 = !DILocation(line: 165, column: 3, scope: !3228)
!3243 = !DILocation(line: 167, column: 11, scope: !3228)
!3244 = !DILocation(line: 0, scope: !3228)
!3245 = !DILocation(line: 168, column: 3, scope: !3228)
!3246 = !DILocation(line: 169, column: 3, scope: !3228)
!3247 = !DILocation(line: 171, column: 3, scope: !3228)
!3248 = !DILocation(line: 172, column: 3, scope: !3228)
!3249 = !DILocation(line: 173, column: 3, scope: !3228)
!3250 = !DILocation(line: 175, column: 11, scope: !3228)
!3251 = !DILocation(line: 176, column: 3, scope: !3228)
!3252 = !DILocation(line: 177, column: 3, scope: !3228)
!3253 = distinct !{!3253, !3238, !3254}
!3254 = !DILocation(line: 178, column: 2, scope: !3218)
!3255 = distinct !DISubprogram(name: "is_last_philosopher", scope: !3219, file: !3219, line: 135, type: !288, scopeLine: 136, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3256)
!3256 = !{!3257}
!3257 = !DILocalVariable(name: "id", arg: 1, scope: !3255, file: !3219, line: 135, type: !109)
!3258 = !DILocation(line: 0, scope: !3255)
!3259 = !DILocation(line: 137, column: 12, scope: !3255)
!3260 = !DILocation(line: 137, column: 2, scope: !3255)
!3261 = distinct !DISubprogram(name: "print_phil_state", scope: !3219, file: !3219, line: 100, type: !3262, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3264)
!3262 = !DISubroutineType(types: !3263)
!3263 = !{null, !109, !324, !756}
!3264 = !{!3265, !3266, !3267, !3268}
!3265 = !DILocalVariable(name: "id", arg: 1, scope: !3261, file: !3219, line: 100, type: !109)
!3266 = !DILocalVariable(name: "fmt", arg: 2, scope: !3261, file: !3219, line: 100, type: !324)
!3267 = !DILocalVariable(name: "delay", arg: 3, scope: !3261, file: !3219, line: 100, type: !756)
!3268 = !DILocalVariable(name: "prio", scope: !3261, file: !3219, line: 102, type: !109)
!3269 = !DILocation(line: 0, scope: !3261)
!3270 = !DILocation(line: 102, column: 35, scope: !3261)
!3271 = !DILocation(line: 102, column: 13, scope: !3261)
!3272 = !DILocation(line: 104, column: 2, scope: !3261)
!3273 = !DILocation(line: 107, column: 18, scope: !3261)
!3274 = !DILocation(line: 107, column: 13, scope: !3261)
!3275 = !DILocation(line: 108, column: 9, scope: !3261)
!3276 = !DILocation(line: 106, column: 2, scope: !3261)
!3277 = !DILocation(line: 111, column: 6, scope: !3278)
!3278 = distinct !DILexicalBlock(scope: !3261, file: !3219, line: 111, column: 6)
!3279 = !DILocation(line: 111, column: 6, scope: !3261)
!3280 = !DILocation(line: 112, column: 3, scope: !3281)
!3281 = distinct !DILexicalBlock(scope: !3278, file: !3219, line: 111, column: 13)
!3282 = !DILocation(line: 113, column: 2, scope: !3281)
!3283 = !DILocation(line: 114, column: 3, scope: !3284)
!3284 = distinct !DILexicalBlock(scope: !3278, file: !3219, line: 113, column: 9)
!3285 = !DILocation(line: 117, column: 2, scope: !3261)
!3286 = !DILocation(line: 118, column: 1, scope: !3261)
!3287 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3288, file: !3288, line: 927, type: !3289, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3295)
!3288 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!3289 = !DISubroutineType(types: !3290)
!3290 = !{!109, !279, !3291}
!3291 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !3292)
!3292 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !3293)
!3293 = !{!3294}
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3292, file: !105, line: 66, baseType: !104, size: 64)
!3295 = !{!3296, !3297}
!3296 = !DILocalVariable(name: "mutex", arg: 1, scope: !3287, file: !3288, line: 927, type: !279)
!3297 = !DILocalVariable(name: "timeout", arg: 2, scope: !3287, file: !3288, line: 927, type: !3291)
!3298 = !DILocation(line: 0, scope: !3287)
!3299 = !DILocation(line: 936, column: 2, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !3287, file: !3288, line: 936, column: 2)
!3301 = !{i64 2154752810}
!3302 = !DILocation(line: 937, column: 9, scope: !3287)
!3303 = !DILocation(line: 937, column: 2, scope: !3287)
!3304 = distinct !DISubprogram(name: "get_random_delay", scope: !3219, file: !3219, line: 120, type: !3305, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3307)
!3305 = !DISubroutineType(types: !3306)
!3306 = !{!756, !109, !109}
!3307 = !{!3308, !3309, !3310, !3311}
!3308 = !DILocalVariable(name: "id", arg: 1, scope: !3304, file: !3219, line: 120, type: !109)
!3309 = !DILocalVariable(name: "period_in_ms", arg: 2, scope: !3304, file: !3219, line: 120, type: !109)
!3310 = !DILocalVariable(name: "delay", scope: !3304, file: !3219, line: 127, type: !756)
!3311 = !DILocalVariable(name: "ms", scope: !3304, file: !3219, line: 130, type: !756)
!3312 = !DILocation(line: 0, scope: !3304)
!3313 = !DILocation(line: 127, column: 19, scope: !3304)
!3314 = !DILocation(line: 127, column: 36, scope: !3304)
!3315 = !DILocation(line: 127, column: 47, scope: !3304)
!3316 = !DILocation(line: 127, column: 41, scope: !3304)
!3317 = !DILocation(line: 127, column: 53, scope: !3304)
!3318 = !DILocation(line: 130, column: 27, scope: !3304)
!3319 = !DILocation(line: 132, column: 2, scope: !3304)
!3320 = distinct !DISubprogram(name: "k_msleep", scope: !119, file: !119, line: 439, type: !3321, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3323)
!3321 = !DISubroutineType(types: !3322)
!3322 = !{!756, !756}
!3323 = !{!3324}
!3324 = !DILocalVariable(name: "ms", arg: 1, scope: !3320, file: !119, line: 439, type: !756)
!3325 = !DILocation(line: 0, scope: !3320)
!3326 = !DILocation(line: 441, column: 17, scope: !3320)
!3327 = !DILocation(line: 441, column: 9, scope: !3320)
!3328 = !DILocation(line: 441, column: 2, scope: !3320)
!3329 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3288, file: !3288, line: 944, type: !3330, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3332)
!3330 = !DISubroutineType(types: !3331)
!3331 = !{!109, !279}
!3332 = !{!3333}
!3333 = !DILocalVariable(name: "mutex", arg: 1, scope: !3329, file: !3288, line: 944, type: !279)
!3334 = !DILocation(line: 0, scope: !3329)
!3335 = !DILocation(line: 952, column: 2, scope: !3336)
!3336 = distinct !DILexicalBlock(scope: !3329, file: !3288, line: 952, column: 2)
!3337 = !{i64 2154752878}
!3338 = !DILocation(line: 953, column: 9, scope: !3329)
!3339 = !DILocation(line: 953, column: 2, scope: !3329)
!3340 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3341, file: !3341, line: 403, type: !3342, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3344)
!3341 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3342 = !DISubroutineType(types: !3343)
!3343 = !{!111, !111}
!3344 = !{!3345}
!3345 = !DILocalVariable(name: "t", arg: 1, scope: !3340, file: !3341, line: 403, type: !111)
!3346 = !DILocation(line: 0, scope: !3340)
!3347 = !DILocalVariable(name: "t", arg: 1, scope: !3348, file: !3341, line: 102, type: !111)
!3348 = distinct !DISubprogram(name: "z_tmcvt", scope: !3341, file: !3341, line: 102, type: !3349, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3351)
!3349 = !DISubroutineType(types: !3350)
!3350 = !{!111, !111, !110, !110, !334, !334, !334, !334}
!3351 = !{!3347, !3352, !3353, !3354, !3355, !3356, !3357, !3358, !3359, !3360, !3361}
!3352 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3348, file: !3341, line: 102, type: !110)
!3353 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3348, file: !3341, line: 103, type: !110)
!3354 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3348, file: !3341, line: 103, type: !334)
!3355 = !DILocalVariable(name: "result32", arg: 5, scope: !3348, file: !3341, line: 104, type: !334)
!3356 = !DILocalVariable(name: "round_up", arg: 6, scope: !3348, file: !3341, line: 104, type: !334)
!3357 = !DILocalVariable(name: "round_off", arg: 7, scope: !3348, file: !3341, line: 105, type: !334)
!3358 = !DILocalVariable(name: "mul_ratio", scope: !3348, file: !3341, line: 107, type: !334)
!3359 = !DILocalVariable(name: "div_ratio", scope: !3348, file: !3341, line: 109, type: !334)
!3360 = !DILocalVariable(name: "off", scope: !3348, file: !3341, line: 116, type: !111)
!3361 = !DILocalVariable(name: "rdivisor", scope: !3362, file: !3341, line: 119, type: !110)
!3362 = distinct !DILexicalBlock(scope: !3363, file: !3341, line: 118, column: 18)
!3363 = distinct !DILexicalBlock(scope: !3348, file: !3341, line: 118, column: 6)
!3364 = !DILocation(line: 0, scope: !3348, inlinedAt: !3365)
!3365 = distinct !DILocation(line: 406, column: 9, scope: !3340)
!3366 = !DILocation(line: 145, column: 13, scope: !3367, inlinedAt: !3365)
!3367 = distinct !DILexicalBlock(scope: !3368, file: !3341, line: 144, column: 10)
!3368 = distinct !DILexicalBlock(scope: !3369, file: !3341, line: 142, column: 7)
!3369 = distinct !DILexicalBlock(scope: !3370, file: !3341, line: 141, column: 24)
!3370 = distinct !DILexicalBlock(scope: !3371, file: !3341, line: 141, column: 13)
!3371 = distinct !DILexicalBlock(scope: !3348, file: !3341, line: 134, column: 6)
!3372 = !DILocation(line: 406, column: 2, scope: !3340)
!3373 = distinct !DISubprogram(name: "k_sleep", scope: !3288, file: !3288, line: 91, type: !3374, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3376)
!3374 = !DISubroutineType(types: !3375)
!3375 = !{!756, !3291}
!3376 = !{!3377}
!3377 = !DILocalVariable(name: "timeout", arg: 1, scope: !3373, file: !3288, line: 91, type: !3291)
!3378 = !DILocation(line: 0, scope: !3373)
!3379 = !DILocation(line: 99, column: 2, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !3373, file: !3288, line: 99, column: 2)
!3381 = !{i64 2154749442}
!3382 = !DILocation(line: 100, column: 9, scope: !3373)
!3383 = !DILocation(line: 100, column: 2, scope: !3373)
!3384 = distinct !DISubprogram(name: "k_uptime_get_32", scope: !119, file: !119, line: 1640, type: !3385, scopeLine: 1641, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2018)
!3385 = !DISubroutineType(types: !3386)
!3386 = !{!110}
!3387 = !DILocation(line: 1642, column: 19, scope: !3384)
!3388 = !DILocation(line: 1642, column: 9, scope: !3384)
!3389 = !DILocation(line: 1642, column: 2, scope: !3384)
!3390 = distinct !DISubprogram(name: "k_uptime_get", scope: !119, file: !119, line: 1616, type: !3391, scopeLine: 1617, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2018)
!3391 = !DISubroutineType(types: !3392)
!3392 = !{!106}
!3393 = !DILocation(line: 1618, column: 31, scope: !3390)
!3394 = !DILocation(line: 1618, column: 9, scope: !3390)
!3395 = !DILocation(line: 1618, column: 2, scope: !3390)
!3396 = distinct !DISubprogram(name: "k_uptime_ticks", scope: !3288, file: !3288, line: 564, type: !3391, scopeLine: 565, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2018)
!3397 = !DILocation(line: 573, column: 2, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3396, file: !3288, line: 573, column: 2)
!3399 = !{i64 2154751346}
!3400 = !DILocation(line: 574, column: 9, scope: !3396)
!3401 = !DILocation(line: 574, column: 2, scope: !3396)
!3402 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3341, file: !3341, line: 1103, type: !3342, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3403)
!3403 = !{!3404}
!3404 = !DILocalVariable(name: "t", arg: 1, scope: !3402, file: !3341, line: 1103, type: !111)
!3405 = !DILocation(line: 0, scope: !3402)
!3406 = !DILocation(line: 0, scope: !3348, inlinedAt: !3407)
!3407 = distinct !DILocation(line: 1106, column: 9, scope: !3402)
!3408 = !DILocation(line: 139, column: 13, scope: !3409, inlinedAt: !3407)
!3409 = distinct !DILexicalBlock(scope: !3410, file: !3341, line: 138, column: 10)
!3410 = distinct !DILexicalBlock(scope: !3411, file: !3341, line: 136, column: 7)
!3411 = distinct !DILexicalBlock(scope: !3371, file: !3341, line: 134, column: 17)
!3412 = !DILocation(line: 1106, column: 2, scope: !3402)
!3413 = distinct !DISubprogram(name: "k_current_get", scope: !119, file: !119, line: 530, type: !3414, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2018)
!3414 = !DISubroutineType(types: !3415)
!3415 = !{!3416}
!3416 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !145, line: 347, baseType: !143)
!3417 = !DILocation(line: 535, column: 9, scope: !3413)
!3418 = !DILocation(line: 535, column: 2, scope: !3413)
!3419 = distinct !DISubprogram(name: "k_thread_priority_get", scope: !3288, file: !3288, line: 258, type: !3420, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3422)
!3420 = !DISubroutineType(types: !3421)
!3421 = !{!109, !3416}
!3422 = !{!3423}
!3423 = !DILocalVariable(name: "thread", arg: 1, scope: !3419, file: !3288, line: 258, type: !3416)
!3424 = !DILocation(line: 0, scope: !3419)
!3425 = !DILocation(line: 266, column: 2, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3419, file: !3288, line: 266, column: 2)
!3427 = !{i64 2154750122}
!3428 = !DILocation(line: 267, column: 9, scope: !3419)
!3429 = !DILocation(line: 267, column: 2, scope: !3419)
!3430 = distinct !DISubprogram(name: "set_phil_state_pos", scope: !3219, file: !3219, line: 92, type: !3431, scopeLine: 93, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3433)
!3431 = !DISubroutineType(types: !3432)
!3432 = !{null, !109}
!3433 = !{!3434}
!3434 = !DILocalVariable(name: "id", arg: 1, scope: !3430, file: !3219, line: 92, type: !109)
!3435 = !DILocation(line: 0, scope: !3430)
!3436 = !DILocation(line: 95, column: 27, scope: !3430)
!3437 = !DILocation(line: 95, column: 2, scope: !3430)
!3438 = !DILocation(line: 97, column: 1, scope: !3430)
!3439 = distinct !DISubprogram(name: "z_current_get", scope: !3288, file: !3288, line: 173, type: !3414, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2018)
!3440 = !DILocation(line: 180, column: 2, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3439, file: !3288, line: 180, column: 2)
!3442 = !{i64 2154749782}
!3443 = !DILocation(line: 181, column: 9, scope: !3439)
!3444 = !DILocation(line: 181, column: 2, scope: !3439)
!3445 = distinct !DISubprogram(name: "main", scope: !3219, file: !3219, line: 252, type: !3103, scopeLine: 253, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2018)
!3446 = !DILocation(line: 254, column: 2, scope: !3445)
!3447 = !DILocation(line: 256, column: 2, scope: !3445)
!3448 = !DILocation(line: 259, column: 2, scope: !3445)
!3449 = !DILocation(line: 260, column: 2, scope: !3445)
!3450 = !DILocation(line: 268, column: 1, scope: !3445)
!3451 = distinct !DISubprogram(name: "display_demo_description", scope: !3219, file: !3219, line: 245, type: !3103, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2018)
!3452 = !DILocation(line: 248, column: 2, scope: !3451)
!3453 = !DILocation(line: 250, column: 1, scope: !3451)
!3454 = distinct !DISubprogram(name: "init_objects", scope: !3219, file: !3219, line: 201, type: !3103, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3455)
!3455 = !{!3456}
!3456 = !DILocalVariable(name: "i", scope: !3457, file: !3219, line: 204, type: !109)
!3457 = distinct !DILexicalBlock(scope: !3454, file: !3219, line: 204, column: 2)
!3458 = !DILocation(line: 0, scope: !3457)
!3459 = !DILocation(line: 204, column: 2, scope: !3457)
!3460 = !DILocation(line: 208, column: 1, scope: !3454)
!3461 = !DILocation(line: 205, column: 3, scope: !3462)
!3462 = distinct !DILexicalBlock(scope: !3463, file: !3219, line: 204, column: 37)
!3463 = distinct !DILexicalBlock(scope: !3457, file: !3219, line: 204, column: 2)
!3464 = !DILocation(line: 204, column: 33, scope: !3463)
!3465 = !DILocation(line: 204, column: 20, scope: !3463)
!3466 = distinct !{!3466, !3459, !3467}
!3467 = !DILocation(line: 206, column: 2, scope: !3457)
!3468 = distinct !DISubprogram(name: "start_threads", scope: !3219, file: !3219, line: 210, type: !3103, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3469)
!3469 = !{!3470, !3472, !3475}
!3470 = !DILocalVariable(name: "i", scope: !3471, file: !3219, line: 216, type: !109)
!3471 = distinct !DILexicalBlock(scope: !3468, file: !3219, line: 216, column: 2)
!3472 = !DILocalVariable(name: "prio", scope: !3473, file: !3219, line: 217, type: !109)
!3473 = distinct !DILexicalBlock(scope: !3474, file: !3219, line: 216, column: 37)
!3474 = distinct !DILexicalBlock(scope: !3471, file: !3219, line: 216, column: 2)
!3475 = !DILocalVariable(name: "tname", scope: !3473, file: !3219, line: 223, type: !225)
!3476 = !DILocation(line: 0, scope: !3471)
!3477 = !DILocation(line: 216, column: 2, scope: !3471)
!3478 = !DILocation(line: 233, column: 1, scope: !3468)
!3479 = !DILocation(line: 217, column: 14, scope: !3473)
!3480 = !{i32 -2, i32 -2147483644}
!3481 = !DILocation(line: 0, scope: !3473)
!3482 = !DILocation(line: 219, column: 20, scope: !3473)
!3483 = !DILocation(line: 219, column: 33, scope: !3473)
!3484 = !DILocation(line: 220, column: 18, scope: !3473)
!3485 = !DILocation(line: 219, column: 3, scope: !3473)
!3486 = !DILocation(line: 223, column: 3, scope: !3473)
!3487 = !DILocation(line: 223, column: 8, scope: !3473)
!3488 = !DILocation(line: 225, column: 3, scope: !3473)
!3489 = !DILocation(line: 226, column: 3, scope: !3473)
!3490 = !DILocation(line: 228, column: 3, scope: !3473)
!3491 = !DILocation(line: 229, column: 25, scope: !3473)
!3492 = !DILocation(line: 229, column: 3, scope: !3473)
!3493 = !DILocation(line: 231, column: 3, scope: !3473)
!3494 = !DILocation(line: 232, column: 2, scope: !3474)
!3495 = !DILocation(line: 216, column: 20, scope: !3474)
!3496 = distinct !{!3496, !3477, !3497}
!3497 = !DILocation(line: 232, column: 2, scope: !3471)
!3498 = distinct !DISubprogram(name: "new_prio", scope: !3219, file: !3219, line: 182, type: !288, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3499)
!3499 = !{!3500}
!3500 = !DILocalVariable(name: "phil", arg: 1, scope: !3498, file: !3219, line: 182, type: !109)
!3501 = !DILocation(line: 0, scope: !3498)
!3502 = !DILocation(line: 188, column: 9, scope: !3498)
!3503 = !DILocation(line: 188, column: 2, scope: !3498)
!3504 = distinct !DISubprogram(name: "k_thread_create", scope: !3288, file: !3288, line: 24, type: !3505, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3509)
!3505 = !DISubroutineType(types: !3506)
!3506 = !{!3416, !143, !3507, !235, !215, !108, !108, !108, !109, !110, !3291}
!3507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3508, size: 32)
!3508 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !216, line: 44, baseType: !272)
!3509 = !{!3510, !3511, !3512, !3513, !3514, !3515, !3516, !3517, !3518, !3519}
!3510 = !DILocalVariable(name: "new_thread", arg: 1, scope: !3504, file: !3288, line: 24, type: !143)
!3511 = !DILocalVariable(name: "stack", arg: 2, scope: !3504, file: !3288, line: 24, type: !3507)
!3512 = !DILocalVariable(name: "stack_size", arg: 3, scope: !3504, file: !3288, line: 24, type: !235)
!3513 = !DILocalVariable(name: "entry", arg: 4, scope: !3504, file: !3288, line: 24, type: !215)
!3514 = !DILocalVariable(name: "p1", arg: 5, scope: !3504, file: !3288, line: 24, type: !108)
!3515 = !DILocalVariable(name: "p2", arg: 6, scope: !3504, file: !3288, line: 24, type: !108)
!3516 = !DILocalVariable(name: "p3", arg: 7, scope: !3504, file: !3288, line: 24, type: !108)
!3517 = !DILocalVariable(name: "prio", arg: 8, scope: !3504, file: !3288, line: 24, type: !109)
!3518 = !DILocalVariable(name: "options", arg: 9, scope: !3504, file: !3288, line: 24, type: !110)
!3519 = !DILocalVariable(name: "delay", arg: 10, scope: !3504, file: !3288, line: 24, type: !3291)
!3520 = !DILocation(line: 0, scope: !3504)
!3521 = !DILocation(line: 49, column: 2, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3504, file: !3288, line: 49, column: 2)
!3523 = !{i64 2154749238}
!3524 = !DILocation(line: 50, column: 9, scope: !3504)
!3525 = !DILocation(line: 50, column: 2, scope: !3504)
!3526 = distinct !DISubprogram(name: "k_thread_name_set", scope: !3288, file: !3288, line: 391, type: !3527, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3529)
!3527 = !DISubroutineType(types: !3528)
!3528 = !{!109, !3416, !324}
!3529 = !{!3530, !3531}
!3530 = !DILocalVariable(name: "thread", arg: 1, scope: !3526, file: !3288, line: 391, type: !3416)
!3531 = !DILocalVariable(name: "str", arg: 2, scope: !3526, file: !3288, line: 391, type: !324)
!3532 = !DILocation(line: 0, scope: !3526)
!3533 = !DILocation(line: 400, column: 2, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !3526, file: !3288, line: 400, column: 2)
!3535 = !{i64 2154750666}
!3536 = !DILocation(line: 401, column: 9, scope: !3526)
!3537 = !DILocation(line: 401, column: 2, scope: !3526)
!3538 = distinct !DISubprogram(name: "k_object_access_grant", scope: !3539, file: !3539, line: 24, type: !3540, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3542)
!3539 = !DIFile(filename: "zephyr/include/generated/syscalls/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!3540 = !DISubroutineType(types: !3541)
!3541 = !{null, !13, !143}
!3542 = !{!3543, !3544}
!3543 = !DILocalVariable(name: "object", arg: 1, scope: !3538, file: !3539, line: 24, type: !13)
!3544 = !DILocalVariable(name: "thread", arg: 2, scope: !3538, file: !3539, line: 24, type: !143)
!3545 = !DILocation(line: 0, scope: !3538)
!3546 = !DILocation(line: 34, column: 2, scope: !3547)
!3547 = distinct !DILexicalBlock(scope: !3538, file: !3539, line: 34, column: 2)
!3548 = !{i64 2154265658}
!3549 = !DILocation(line: 36, column: 1, scope: !3538)
!3550 = distinct !DISubprogram(name: "k_thread_start", scope: !3288, file: !3288, line: 205, type: !3551, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3553)
!3551 = !DISubroutineType(types: !3552)
!3552 = !{null, !3416}
!3553 = !{!3554}
!3554 = !DILocalVariable(name: "thread", arg: 1, scope: !3550, file: !3288, line: 205, type: !3416)
!3555 = !DILocation(line: 0, scope: !3550)
!3556 = !DILocation(line: 214, column: 2, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3550, file: !3288, line: 214, column: 2)
!3558 = !{i64 2154749918}
!3559 = !DILocation(line: 215, column: 2, scope: !3550)
!3560 = !DILocation(line: 216, column: 1, scope: !3550)
!3561 = distinct !DISubprogram(name: "k_mutex_init", scope: !3288, file: !3288, line: 911, type: !3330, scopeLine: 912, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3562)
!3562 = !{!3563}
!3563 = !DILocalVariable(name: "mutex", arg: 1, scope: !3561, file: !3288, line: 911, type: !279)
!3564 = !DILocation(line: 0, scope: !3561)
!3565 = !DILocation(line: 919, column: 2, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3561, file: !3288, line: 919, column: 2)
!3567 = !{i64 2154752742}
!3568 = !DILocation(line: 920, column: 9, scope: !3561)
!3569 = !DILocation(line: 920, column: 2, scope: !3561)
!3570 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !286, file: !286, line: 45, type: !288, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3571)
!3571 = !{!3572}
!3572 = !DILocalVariable(name: "c", arg: 1, scope: !3570, file: !286, line: 45, type: !109)
!3573 = !DILocation(line: 0, scope: !3570)
!3574 = !DILocation(line: 50, column: 2, scope: !3570)
!3575 = distinct !DISubprogram(name: "__printk_hook_install", scope: !286, file: !286, line: 63, type: !3576, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3578)
!3576 = !DISubroutineType(types: !3577)
!3577 = !{null, !287}
!3578 = !{!3579}
!3579 = !DILocalVariable(name: "fn", arg: 1, scope: !3575, file: !286, line: 63, type: !287)
!3580 = !DILocation(line: 0, scope: !3575)
!3581 = !DILocation(line: 65, column: 12, scope: !3575)
!3582 = !DILocation(line: 66, column: 1, scope: !3575)
!3583 = distinct !DISubprogram(name: "__printk_get_hook", scope: !286, file: !286, line: 76, type: !3584, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !2018)
!3584 = !DISubroutineType(types: !3585)
!3585 = !{!108}
!3586 = !DILocation(line: 78, column: 9, scope: !3583)
!3587 = !DILocation(line: 78, column: 2, scope: !3583)
!3588 = distinct !DISubprogram(name: "vprintk", scope: !286, file: !286, line: 113, type: !3589, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3598)
!3589 = !DISubroutineType(types: !3590)
!3590 = !{null, !324, !3591}
!3591 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3592, line: 99, baseType: !3593)
!3592 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3593 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3592, line: 40, baseType: !3594)
!3594 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !286, baseType: !3595)
!3595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3596)
!3596 = !{!3597}
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3595, file: !286, line: 79, baseType: !108, size: 32)
!3598 = !{!3599, !3600, !3601}
!3599 = !DILocalVariable(name: "fmt", arg: 1, scope: !3588, file: !286, line: 113, type: !324)
!3600 = !DILocalVariable(name: "ap", arg: 2, scope: !3588, file: !286, line: 113, type: !3591)
!3601 = !DILocalVariable(name: "ctx", scope: !3602, file: !286, line: 121, type: !3604)
!3602 = distinct !DILexicalBlock(scope: !3603, file: !286, line: 120, column: 27)
!3603 = distinct !DILexicalBlock(scope: !3588, file: !286, line: 120, column: 6)
!3604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !286, line: 81, size: 32, elements: !3605)
!3605 = !{!3606, !3607}
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3604, file: !286, line: 85, baseType: !32, size: 32)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3604, file: !286, line: 86, baseType: !3608, offset: 32)
!3608 = !DICompositeType(tag: DW_TAG_array_type, baseType: !226, elements: !3609)
!3609 = !{!3610}
!3610 = !DISubrange(count: 0)
!3611 = !DILocation(line: 0, scope: !3588)
!3612 = !DILocation(line: 148, column: 3, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3603, file: !286, line: 138, column: 9)
!3614 = !DILocation(line: 155, column: 1, scope: !3588)
!3615 = distinct !DISubprogram(name: "char_out", scope: !286, file: !286, line: 107, type: !3616, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3618)
!3616 = !DISubroutineType(types: !3617)
!3617 = !{!109, !109, !108}
!3618 = !{!3619, !3620}
!3619 = !DILocalVariable(name: "c", arg: 1, scope: !3615, file: !286, line: 107, type: !109)
!3620 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3615, file: !286, line: 107, type: !108)
!3621 = !DILocation(line: 0, scope: !3615)
!3622 = !DILocation(line: 110, column: 9, scope: !3615)
!3623 = !DILocation(line: 110, column: 2, scope: !3615)
!3624 = distinct !DISubprogram(name: "cbvprintf", scope: !3625, file: !3625, line: 739, type: !3626, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3632)
!3625 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3626 = !DISubroutineType(types: !3627)
!3627 = !{!109, !3628, !108, !324, !3591}
!3628 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3625, line: 297, baseType: !3629)
!3629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3630, size: 32)
!3630 = !DISubroutineType(types: !3631)
!3631 = !{!109, null}
!3632 = !{!3633, !3634, !3635, !3636}
!3633 = !DILocalVariable(name: "out", arg: 1, scope: !3624, file: !3625, line: 739, type: !3628)
!3634 = !DILocalVariable(name: "ctx", arg: 2, scope: !3624, file: !3625, line: 739, type: !108)
!3635 = !DILocalVariable(name: "format", arg: 3, scope: !3624, file: !3625, line: 739, type: !324)
!3636 = !DILocalVariable(name: "ap", arg: 4, scope: !3624, file: !3625, line: 739, type: !3591)
!3637 = !DILocation(line: 0, scope: !3624)
!3638 = !DILocation(line: 741, column: 9, scope: !3624)
!3639 = !DILocation(line: 741, column: 2, scope: !3624)
!3640 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !286, file: !286, line: 157, type: !3641, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3643)
!3641 = !DISubroutineType(types: !3642)
!3642 = !{null, !1147, !235}
!3643 = !{!3644, !3645, !3646}
!3644 = !DILocalVariable(name: "c", arg: 1, scope: !3640, file: !286, line: 157, type: !1147)
!3645 = !DILocalVariable(name: "n", arg: 2, scope: !3640, file: !286, line: 157, type: !235)
!3646 = !DILocalVariable(name: "i", scope: !3640, file: !286, line: 159, type: !235)
!3647 = !DILocation(line: 0, scope: !3640)
!3648 = !DILocation(line: 164, column: 16, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3650, file: !286, line: 164, column: 2)
!3650 = distinct !DILexicalBlock(scope: !3640, file: !286, line: 164, column: 2)
!3651 = !DILocation(line: 164, column: 2, scope: !3650)
!3652 = !DILocation(line: 165, column: 3, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3649, file: !286, line: 164, column: 26)
!3654 = !DILocation(line: 165, column: 13, scope: !3653)
!3655 = !DILocation(line: 164, column: 22, scope: !3649)
!3656 = distinct !{!3656, !3651, !3657}
!3657 = !DILocation(line: 166, column: 2, scope: !3650)
!3658 = !DILocation(line: 171, column: 1, scope: !3640)
!3659 = distinct !DISubprogram(name: "printk", scope: !286, file: !286, line: 203, type: !3660, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3662)
!3660 = !DISubroutineType(types: !3661)
!3661 = !{null, !324, null}
!3662 = !{!3663, !3664}
!3663 = !DILocalVariable(name: "fmt", arg: 1, scope: !3659, file: !286, line: 203, type: !324)
!3664 = !DILocalVariable(name: "ap", scope: !3659, file: !286, line: 205, type: !3591)
!3665 = !DILocation(line: 0, scope: !3659)
!3666 = !DILocation(line: 205, column: 2, scope: !3659)
!3667 = !DILocation(line: 205, column: 10, scope: !3659)
!3668 = !DILocation(line: 207, column: 2, scope: !3659)
!3669 = !DILocation(line: 209, column: 2, scope: !3659)
!3670 = !DILocation(line: 211, column: 2, scope: !3659)
!3671 = !DILocation(line: 212, column: 1, scope: !3659)
!3672 = distinct !DISubprogram(name: "snprintk", scope: !286, file: !286, line: 239, type: !3673, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3675)
!3673 = !DISubroutineType(types: !3674)
!3674 = !{!109, !1147, !235, !324, null}
!3675 = !{!3676, !3677, !3678, !3679, !3680}
!3676 = !DILocalVariable(name: "str", arg: 1, scope: !3672, file: !286, line: 239, type: !1147)
!3677 = !DILocalVariable(name: "size", arg: 2, scope: !3672, file: !286, line: 239, type: !235)
!3678 = !DILocalVariable(name: "fmt", arg: 3, scope: !3672, file: !286, line: 239, type: !324)
!3679 = !DILocalVariable(name: "ap", scope: !3672, file: !286, line: 241, type: !3591)
!3680 = !DILocalVariable(name: "ret", scope: !3672, file: !286, line: 242, type: !109)
!3681 = !DILocation(line: 0, scope: !3672)
!3682 = !DILocation(line: 241, column: 2, scope: !3672)
!3683 = !DILocation(line: 241, column: 10, scope: !3672)
!3684 = !DILocation(line: 244, column: 2, scope: !3672)
!3685 = !DILocation(line: 245, column: 8, scope: !3672)
!3686 = !DILocation(line: 246, column: 2, scope: !3672)
!3687 = !DILocation(line: 249, column: 1, scope: !3672)
!3688 = !DILocation(line: 248, column: 2, scope: !3672)
!3689 = distinct !DISubprogram(name: "vsnprintk", scope: !286, file: !286, line: 251, type: !3690, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3692)
!3690 = !DISubroutineType(types: !3691)
!3691 = !{!109, !1147, !235, !324, !3591}
!3692 = !{!3693, !3694, !3695, !3696, !3697}
!3693 = !DILocalVariable(name: "str", arg: 1, scope: !3689, file: !286, line: 251, type: !1147)
!3694 = !DILocalVariable(name: "size", arg: 2, scope: !3689, file: !286, line: 251, type: !235)
!3695 = !DILocalVariable(name: "fmt", arg: 3, scope: !3689, file: !286, line: 251, type: !324)
!3696 = !DILocalVariable(name: "ap", arg: 4, scope: !3689, file: !286, line: 251, type: !3591)
!3697 = !DILocalVariable(name: "ctx", scope: !3689, file: !286, line: 253, type: !3698)
!3698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !286, line: 217, size: 96, elements: !3699)
!3699 = !{!3700, !3701, !3702}
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3698, file: !286, line: 218, baseType: !1147, size: 32)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3698, file: !286, line: 219, baseType: !109, size: 32, offset: 32)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3698, file: !286, line: 220, baseType: !109, size: 32, offset: 64)
!3703 = !DILocation(line: 0, scope: !3689)
!3704 = !DILocation(line: 253, column: 2, scope: !3689)
!3705 = !DILocation(line: 253, column: 21, scope: !3689)
!3706 = !DILocation(line: 253, column: 27, scope: !3689)
!3707 = !DILocation(line: 255, column: 2, scope: !3689)
!3708 = !DILocation(line: 257, column: 10, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !3689, file: !286, line: 257, column: 6)
!3710 = !DILocation(line: 257, column: 22, scope: !3709)
!3711 = !DILocation(line: 257, column: 16, scope: !3709)
!3712 = !DILocation(line: 257, column: 6, scope: !3689)
!3713 = !DILocation(line: 258, column: 3, scope: !3714)
!3714 = distinct !DILexicalBlock(scope: !3709, file: !286, line: 257, column: 27)
!3715 = !DILocation(line: 258, column: 18, scope: !3714)
!3716 = !DILocation(line: 259, column: 2, scope: !3714)
!3717 = !DILocation(line: 262, column: 1, scope: !3689)
!3718 = !DILocation(line: 261, column: 2, scope: !3689)
!3719 = distinct !DISubprogram(name: "str_out", scope: !286, file: !286, line: 223, type: !3720, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3723)
!3720 = !DISubroutineType(types: !3721)
!3721 = !{!109, !109, !3722}
!3722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3698, size: 32)
!3723 = !{!3724, !3725}
!3724 = !DILocalVariable(name: "c", arg: 1, scope: !3719, file: !286, line: 223, type: !109)
!3725 = !DILocalVariable(name: "ctx", arg: 2, scope: !3719, file: !286, line: 223, type: !3722)
!3726 = !DILocation(line: 0, scope: !3719)
!3727 = !DILocation(line: 225, column: 11, scope: !3728)
!3728 = distinct !DILexicalBlock(scope: !3719, file: !286, line: 225, column: 6)
!3729 = !DILocation(line: 225, column: 15, scope: !3728)
!3730 = !DILocation(line: 0, scope: !3728)
!3731 = !DILocation(line: 225, column: 23, scope: !3728)
!3732 = !DILocation(line: 225, column: 45, scope: !3728)
!3733 = !DILocation(line: 225, column: 37, scope: !3728)
!3734 = !DILocation(line: 225, column: 6, scope: !3719)
!3735 = !DILocation(line: 226, column: 8, scope: !3736)
!3736 = distinct !DILexicalBlock(scope: !3728, file: !286, line: 225, column: 50)
!3737 = !DILocation(line: 226, column: 13, scope: !3736)
!3738 = !DILocation(line: 227, column: 3, scope: !3736)
!3739 = !DILocation(line: 230, column: 29, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !3719, file: !286, line: 230, column: 6)
!3741 = !DILocation(line: 230, column: 17, scope: !3740)
!3742 = !DILocation(line: 230, column: 6, scope: !3719)
!3743 = !DILocation(line: 231, column: 22, scope: !3744)
!3744 = distinct !DILexicalBlock(scope: !3740, file: !286, line: 230, column: 34)
!3745 = !DILocation(line: 231, column: 3, scope: !3744)
!3746 = !DILocation(line: 231, column: 26, scope: !3744)
!3747 = !DILocation(line: 232, column: 2, scope: !3744)
!3748 = !DILocation(line: 233, column: 28, scope: !3749)
!3749 = distinct !DILexicalBlock(scope: !3740, file: !286, line: 232, column: 9)
!3750 = !DILocation(line: 233, column: 22, scope: !3749)
!3751 = !DILocation(line: 233, column: 3, scope: !3749)
!3752 = !DILocation(line: 233, column: 26, scope: !3749)
!3753 = !DILocation(line: 237, column: 1, scope: !3719)
!3754 = distinct !DISubprogram(name: "z_rb_get_minmax", scope: !2513, file: !2513, line: 100, type: !3755, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !3767)
!3755 = !DISubroutineType(types: !3756)
!3756 = !{!2518, !3757, !167}
!3757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3758, size: 32)
!3758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !157, line: 83, size: 96, elements: !3759)
!3759 = !{!3760, !3761, !3766}
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3758, file: !157, line: 84, baseType: !2518, size: 32)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !3758, file: !157, line: 85, baseType: !3762, size: 32, offset: 32)
!3762 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !157, line: 81, baseType: !3763)
!3763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3764, size: 32)
!3764 = !DISubroutineType(types: !3765)
!3765 = !{!334, !2518, !2518}
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !3758, file: !157, line: 86, baseType: !109, size: 32, offset: 64)
!3767 = !{!3768, !3769, !3770}
!3768 = !DILocalVariable(name: "tree", arg: 1, scope: !3754, file: !2513, line: 100, type: !3757)
!3769 = !DILocalVariable(name: "side", arg: 2, scope: !3754, file: !2513, line: 100, type: !167)
!3770 = !DILocalVariable(name: "n", scope: !3754, file: !2513, line: 102, type: !2518)
!3771 = !DILocation(line: 0, scope: !3754)
!3772 = !DILocation(line: 104, column: 17, scope: !3773)
!3773 = distinct !DILexicalBlock(scope: !3754, file: !2513, line: 104, column: 2)
!3774 = !DILocation(line: 104, column: 7, scope: !3773)
!3775 = !DILocation(line: 0, scope: !3773)
!3776 = !DILocation(line: 104, column: 26, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3773, file: !2513, line: 104, column: 2)
!3778 = !DILocation(line: 104, column: 35, scope: !3777)
!3779 = !DILocation(line: 104, column: 39, scope: !3777)
!3780 = !DILocation(line: 104, column: 58, scope: !3777)
!3781 = !DILocation(line: 104, column: 2, scope: !3773)
!3782 = distinct !{!3782, !3781, !3783}
!3783 = !DILocation(line: 107, column: 2, scope: !3773)
!3784 = !DILocation(line: 108, column: 2, scope: !3754)
!3785 = distinct !DISubprogram(name: "get_child", scope: !2513, file: !2513, line: 21, type: !3786, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !3788)
!3786 = !DISubroutineType(types: !3787)
!3787 = !{!2518, !2518, !167}
!3788 = !{!3789, !3790, !3791}
!3789 = !DILocalVariable(name: "n", arg: 1, scope: !3785, file: !2513, line: 21, type: !2518)
!3790 = !DILocalVariable(name: "side", arg: 2, scope: !3785, file: !2513, line: 21, type: !167)
!3791 = !DILocalVariable(name: "l", scope: !3785, file: !2513, line: 28, type: !22)
!3792 = !DILocation(line: 0, scope: !3785)
!3793 = !DILocation(line: 24, column: 11, scope: !3794)
!3794 = distinct !DILexicalBlock(scope: !3785, file: !2513, line: 24, column: 6)
!3795 = !DILocation(line: 24, column: 6, scope: !3785)
!3796 = !DILocation(line: 25, column: 10, scope: !3797)
!3797 = distinct !DILexicalBlock(scope: !3794, file: !2513, line: 24, column: 18)
!3798 = !DILocation(line: 25, column: 3, scope: !3797)
!3799 = !DILocation(line: 28, column: 28, scope: !3785)
!3800 = !DILocation(line: 28, column: 16, scope: !3785)
!3801 = !DILocation(line: 30, column: 4, scope: !3785)
!3802 = !DILocation(line: 31, column: 9, scope: !3785)
!3803 = !DILocation(line: 32, column: 1, scope: !3785)
!3804 = distinct !DISubprogram(name: "rb_insert", scope: !2513, file: !2513, line: 217, type: !3805, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !3807)
!3805 = !DISubroutineType(types: !3806)
!3806 = !{null, !3757, !2518}
!3807 = !{!3808, !3809, !3810, !3811, !3815, !3816, !3817}
!3808 = !DILocalVariable(name: "tree", arg: 1, scope: !3804, file: !2513, line: 217, type: !3757)
!3809 = !DILocalVariable(name: "node", arg: 2, scope: !3804, file: !2513, line: 217, type: !2518)
!3810 = !DILocalVariable(name: "__vla_expr0", scope: !3804, type: !32, flags: DIFlagArtificial)
!3811 = !DILocalVariable(name: "stack", scope: !3804, file: !2513, line: 232, type: !3812)
!3812 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2518, elements: !3813)
!3813 = !{!3814}
!3814 = !DISubrange(count: !3810)
!3815 = !DILocalVariable(name: "stacksz", scope: !3804, file: !2513, line: 235, type: !109)
!3816 = !DILocalVariable(name: "parent", scope: !3804, file: !2513, line: 237, type: !2518)
!3817 = !DILocalVariable(name: "side", scope: !3804, file: !2513, line: 239, type: !167)
!3818 = !DILocation(line: 0, scope: !3804)
!3819 = !DILocation(line: 219, column: 2, scope: !3804)
!3820 = !DILocation(line: 220, column: 2, scope: !3804)
!3821 = !DILocation(line: 222, column: 12, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !3804, file: !2513, line: 222, column: 6)
!3823 = !DILocation(line: 222, column: 17, scope: !3822)
!3824 = !DILocation(line: 222, column: 6, scope: !3804)
!3825 = !DILocation(line: 223, column: 14, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3822, file: !2513, line: 222, column: 26)
!3827 = !DILocation(line: 224, column: 9, scope: !3826)
!3828 = !DILocation(line: 224, column: 19, scope: !3826)
!3829 = !DILocation(line: 225, column: 3, scope: !3826)
!3830 = !DILocation(line: 226, column: 3, scope: !3826)
!3831 = !DILocation(line: 232, column: 29, scope: !3804)
!3832 = !DILocation(line: 232, column: 39, scope: !3804)
!3833 = !DILocation(line: 232, column: 2, scope: !3804)
!3834 = !DILocation(line: 232, column: 17, scope: !3804)
!3835 = !DILocation(line: 235, column: 16, scope: !3804)
!3836 = !DILocation(line: 237, column: 40, scope: !3804)
!3837 = !DILocation(line: 237, column: 26, scope: !3804)
!3838 = !DILocation(line: 239, column: 23, scope: !3804)
!3839 = !DILocation(line: 239, column: 17, scope: !3804)
!3840 = !DILocation(line: 241, column: 26, scope: !3804)
!3841 = !DILocation(line: 241, column: 2, scope: !3804)
!3842 = !DILocation(line: 242, column: 2, scope: !3804)
!3843 = !DILocation(line: 244, column: 15, scope: !3804)
!3844 = !DILocation(line: 244, column: 2, scope: !3804)
!3845 = !DILocation(line: 244, column: 19, scope: !3804)
!3846 = !DILocation(line: 245, column: 2, scope: !3804)
!3847 = !DILocation(line: 247, column: 22, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3804, file: !2513, line: 247, column: 6)
!3849 = !DILocation(line: 247, column: 14, scope: !3848)
!3850 = !DILocation(line: 247, column: 6, scope: !3804)
!3851 = !DILocation(line: 248, column: 19, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !3848, file: !2513, line: 247, column: 33)
!3853 = !DILocation(line: 249, column: 2, scope: !3852)
!3854 = !DILocation(line: 252, column: 15, scope: !3804)
!3855 = !DILocation(line: 252, column: 13, scope: !3804)
!3856 = !DILocation(line: 254, column: 1, scope: !3804)
!3857 = distinct !DISubprogram(name: "set_child", scope: !2513, file: !2513, line: 34, type: !3858, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !3860)
!3858 = !DISubroutineType(types: !3859)
!3859 = !{null, !2518, !167, !108}
!3860 = !{!3861, !3862, !3863, !3864, !3867}
!3861 = !DILocalVariable(name: "n", arg: 1, scope: !3857, file: !2513, line: 34, type: !2518)
!3862 = !DILocalVariable(name: "side", arg: 2, scope: !3857, file: !2513, line: 34, type: !167)
!3863 = !DILocalVariable(name: "val", arg: 3, scope: !3857, file: !2513, line: 34, type: !108)
!3864 = !DILocalVariable(name: "old", scope: !3865, file: !2513, line: 40, type: !22)
!3865 = distinct !DILexicalBlock(scope: !3866, file: !2513, line: 39, column: 9)
!3866 = distinct !DILexicalBlock(scope: !3857, file: !2513, line: 37, column: 6)
!3867 = !DILocalVariable(name: "new", scope: !3865, file: !2513, line: 41, type: !22)
!3868 = !DILocation(line: 0, scope: !3857)
!3869 = !DILocation(line: 37, column: 11, scope: !3866)
!3870 = !DILocation(line: 37, column: 6, scope: !3857)
!3871 = !DILocation(line: 38, column: 3, scope: !3872)
!3872 = distinct !DILexicalBlock(scope: !3866, file: !2513, line: 37, column: 18)
!3873 = !DILocation(line: 38, column: 18, scope: !3872)
!3874 = !DILocation(line: 39, column: 2, scope: !3872)
!3875 = !DILocation(line: 40, column: 31, scope: !3865)
!3876 = !DILocation(line: 40, column: 19, scope: !3865)
!3877 = !DILocation(line: 0, scope: !3865)
!3878 = !DILocation(line: 41, column: 19, scope: !3865)
!3879 = !DILocation(line: 43, column: 41, scope: !3865)
!3880 = !DILocation(line: 43, column: 34, scope: !3865)
!3881 = !DILocation(line: 43, column: 20, scope: !3865)
!3882 = !DILocation(line: 43, column: 18, scope: !3865)
!3883 = !DILocation(line: 45, column: 1, scope: !3857)
!3884 = distinct !DISubprogram(name: "set_color", scope: !2513, file: !2513, line: 63, type: !3885, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !3887)
!3885 = !DISubroutineType(types: !3886)
!3886 = !{null, !2518, !2512}
!3887 = !{!3888, !3889, !3890}
!3888 = !DILocalVariable(name: "n", arg: 1, scope: !3884, file: !2513, line: 63, type: !2518)
!3889 = !DILocalVariable(name: "color", arg: 2, scope: !3884, file: !2513, line: 63, type: !2512)
!3890 = !DILocalVariable(name: "p", scope: !3884, file: !2513, line: 67, type: !3891)
!3891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 32)
!3892 = !DILocation(line: 0, scope: !3884)
!3893 = !DILocation(line: 67, column: 17, scope: !3884)
!3894 = !DILocation(line: 69, column: 8, scope: !3884)
!3895 = !DILocation(line: 69, column: 11, scope: !3884)
!3896 = !DILocation(line: 69, column: 21, scope: !3884)
!3897 = !DILocation(line: 69, column: 19, scope: !3884)
!3898 = !DILocation(line: 69, column: 5, scope: !3884)
!3899 = !DILocation(line: 70, column: 1, scope: !3884)
!3900 = distinct !DISubprogram(name: "find_and_stack", scope: !2513, file: !2513, line: 79, type: !3901, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !3904)
!3901 = !DISubroutineType(types: !3902)
!3902 = !{!109, !3757, !2518, !3903}
!3903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2518, size: 32)
!3904 = !{!3905, !3906, !3907, !3908, !3909, !3911}
!3905 = !DILocalVariable(name: "tree", arg: 1, scope: !3900, file: !2513, line: 79, type: !3757)
!3906 = !DILocalVariable(name: "node", arg: 2, scope: !3900, file: !2513, line: 79, type: !2518)
!3907 = !DILocalVariable(name: "stack", arg: 3, scope: !3900, file: !2513, line: 80, type: !3903)
!3908 = !DILocalVariable(name: "sz", scope: !3900, file: !2513, line: 82, type: !109)
!3909 = !DILocalVariable(name: "side", scope: !3910, file: !2513, line: 87, type: !167)
!3910 = distinct !DILexicalBlock(scope: !3900, file: !2513, line: 86, column: 32)
!3911 = !DILocalVariable(name: "ch", scope: !3910, file: !2513, line: 88, type: !2518)
!3912 = !DILocation(line: 0, scope: !3900)
!3913 = !DILocation(line: 84, column: 22, scope: !3900)
!3914 = !DILocation(line: 84, column: 14, scope: !3900)
!3915 = !DILocation(line: 87, column: 24, scope: !3910)
!3916 = !DILocation(line: 86, column: 23, scope: !3900)
!3917 = !DILocation(line: 86, column: 2, scope: !3900)
!3918 = !DILocation(line: 87, column: 18, scope: !3910)
!3919 = !DILocation(line: 0, scope: !3910)
!3920 = !DILocation(line: 88, column: 33, scope: !3910)
!3921 = !DILocation(line: 88, column: 23, scope: !3910)
!3922 = !DILocation(line: 90, column: 10, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !3910, file: !2513, line: 90, column: 7)
!3924 = !DILocation(line: 90, column: 7, scope: !3910)
!3925 = !DILocation(line: 91, column: 12, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3923, file: !2513, line: 90, column: 19)
!3927 = !DILocation(line: 91, column: 4, scope: !3926)
!3928 = !DILocation(line: 91, column: 16, scope: !3926)
!3929 = !DILocation(line: 97, column: 2, scope: !3900)
!3930 = distinct !DISubprogram(name: "fix_extra_red", scope: !2513, file: !2513, line: 155, type: !3931, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !3933)
!3931 = !DISubroutineType(types: !3932)
!3932 = !{null, !3903, !109}
!3933 = !{!3934, !3935, !3936, !3938, !3939, !3940, !3941, !3942}
!3934 = !DILocalVariable(name: "stack", arg: 1, scope: !3930, file: !2513, line: 155, type: !3903)
!3935 = !DILocalVariable(name: "stacksz", arg: 2, scope: !3930, file: !2513, line: 155, type: !109)
!3936 = !DILocalVariable(name: "node", scope: !3937, file: !2513, line: 158, type: !2518)
!3937 = distinct !DILexicalBlock(scope: !3930, file: !2513, line: 157, column: 22)
!3938 = !DILocalVariable(name: "parent", scope: !3937, file: !2513, line: 159, type: !2518)
!3939 = !DILocalVariable(name: "grandparent", scope: !3937, file: !2513, line: 176, type: !2518)
!3940 = !DILocalVariable(name: "side", scope: !3937, file: !2513, line: 177, type: !167)
!3941 = !DILocalVariable(name: "aunt", scope: !3937, file: !2513, line: 178, type: !2518)
!3942 = !DILocalVariable(name: "parent_side", scope: !3937, file: !2513, line: 198, type: !167)
!3943 = !DILocation(line: 0, scope: !3930)
!3944 = !DILocation(line: 157, column: 17, scope: !3930)
!3945 = !DILocation(line: 157, column: 2, scope: !3930)
!3946 = !DILocation(line: 158, column: 39, scope: !3937)
!3947 = !DILocation(line: 158, column: 25, scope: !3937)
!3948 = !DILocation(line: 0, scope: !3937)
!3949 = !DILocation(line: 159, column: 41, scope: !3937)
!3950 = !DILocation(line: 159, column: 27, scope: !3937)
!3951 = !DILocation(line: 167, column: 7, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3937, file: !2513, line: 167, column: 7)
!3953 = !DILocation(line: 167, column: 7, scope: !3937)
!3954 = !DILocation(line: 176, column: 46, scope: !3937)
!3955 = !DILocation(line: 176, column: 32, scope: !3937)
!3956 = !DILocation(line: 177, column: 18, scope: !3937)
!3957 = !DILocation(line: 179, column: 13, scope: !3937)
!3958 = !DILocation(line: 179, column: 7, scope: !3937)
!3959 = !DILocation(line: 178, column: 25, scope: !3937)
!3960 = !DILocation(line: 181, column: 13, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3937, file: !2513, line: 181, column: 7)
!3962 = !DILocation(line: 181, column: 22, scope: !3961)
!3963 = !DILocation(line: 181, column: 25, scope: !3961)
!3964 = !DILocation(line: 181, column: 7, scope: !3937)
!3965 = !DILocation(line: 198, column: 25, scope: !3937)
!3966 = !DILocation(line: 200, column: 19, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3937, file: !2513, line: 200, column: 7)
!3968 = !DILocation(line: 200, column: 7, scope: !3937)
!3969 = !DILocation(line: 201, column: 4, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3967, file: !2513, line: 200, column: 28)
!3971 = !DILocation(line: 202, column: 3, scope: !3970)
!3972 = !DILocation(line: 205, column: 3, scope: !3937)
!3973 = !DILocation(line: 206, column: 13, scope: !3937)
!3974 = !DILocation(line: 206, column: 3, scope: !3937)
!3975 = !DILocation(line: 182, column: 4, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3961, file: !2513, line: 181, column: 39)
!3977 = !DILocation(line: 183, column: 4, scope: !3976)
!3978 = !DILocation(line: 184, column: 4, scope: !3976)
!3979 = !DILocation(line: 215, column: 1, scope: !3930)
!3980 = distinct !DISubprogram(name: "is_black", scope: !2513, file: !2513, line: 53, type: !3981, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !3983)
!3981 = !DISubroutineType(types: !3982)
!3982 = !{!334, !2518}
!3983 = !{!3984}
!3984 = !DILocalVariable(name: "n", arg: 1, scope: !3980, file: !2513, line: 53, type: !2518)
!3985 = !DILocation(line: 0, scope: !3980)
!3986 = !DILocation(line: 55, column: 9, scope: !3980)
!3987 = !DILocation(line: 55, column: 22, scope: !3980)
!3988 = !DILocation(line: 55, column: 2, scope: !3980)
!3989 = distinct !DISubprogram(name: "get_side", scope: !2513, file: !2513, line: 111, type: !3990, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !3992)
!3990 = !DISubroutineType(types: !3991)
!3991 = !{!167, !2518, !2518}
!3992 = !{!3993, !3994}
!3993 = !DILocalVariable(name: "parent", arg: 1, scope: !3989, file: !2513, line: 111, type: !2518)
!3994 = !DILocalVariable(name: "child", arg: 2, scope: !3989, file: !2513, line: 111, type: !2518)
!3995 = !DILocation(line: 0, scope: !3989)
!3996 = !DILocation(line: 115, column: 10, scope: !3989)
!3997 = !DILocation(line: 115, column: 32, scope: !3989)
!3998 = !DILocation(line: 115, column: 9, scope: !3989)
!3999 = !DILocation(line: 115, column: 2, scope: !3989)
!4000 = distinct !DISubprogram(name: "is_red", scope: !2513, file: !2513, line: 58, type: !3981, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !4001)
!4001 = !{!4002}
!4002 = !DILocalVariable(name: "n", arg: 1, scope: !4000, file: !2513, line: 58, type: !2518)
!4003 = !DILocation(line: 0, scope: !4000)
!4004 = !DILocation(line: 60, column: 9, scope: !4000)
!4005 = !DILocation(line: 60, column: 22, scope: !4000)
!4006 = !DILocation(line: 60, column: 2, scope: !4000)
!4007 = distinct !DISubprogram(name: "rotate", scope: !2513, file: !2513, line: 128, type: !3931, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !4008)
!4008 = !{!4009, !4010, !4011, !4012, !4013, !4014, !4015, !4016}
!4009 = !DILocalVariable(name: "stack", arg: 1, scope: !4007, file: !2513, line: 128, type: !3903)
!4010 = !DILocalVariable(name: "stacksz", arg: 2, scope: !4007, file: !2513, line: 128, type: !109)
!4011 = !DILocalVariable(name: "parent", scope: !4007, file: !2513, line: 132, type: !2518)
!4012 = !DILocalVariable(name: "child", scope: !4007, file: !2513, line: 133, type: !2518)
!4013 = !DILocalVariable(name: "side", scope: !4007, file: !2513, line: 134, type: !167)
!4014 = !DILocalVariable(name: "a", scope: !4007, file: !2513, line: 135, type: !2518)
!4015 = !DILocalVariable(name: "b", scope: !4007, file: !2513, line: 136, type: !2518)
!4016 = !DILocalVariable(name: "grandparent", scope: !4017, file: !2513, line: 139, type: !2518)
!4017 = distinct !DILexicalBlock(scope: !4018, file: !2513, line: 138, column: 20)
!4018 = distinct !DILexicalBlock(scope: !4007, file: !2513, line: 138, column: 6)
!4019 = !DILocation(line: 0, scope: !4007)
!4020 = !DILocation(line: 132, column: 40, scope: !4007)
!4021 = !DILocation(line: 132, column: 26, scope: !4007)
!4022 = !DILocation(line: 133, column: 39, scope: !4007)
!4023 = !DILocation(line: 133, column: 25, scope: !4007)
!4024 = !DILocation(line: 134, column: 17, scope: !4007)
!4025 = !{i8 0, i8 2}
!4026 = !DILocation(line: 135, column: 21, scope: !4007)
!4027 = !DILocation(line: 136, column: 38, scope: !4007)
!4028 = !DILocation(line: 136, column: 21, scope: !4007)
!4029 = !DILocation(line: 138, column: 14, scope: !4018)
!4030 = !DILocation(line: 138, column: 6, scope: !4007)
!4031 = !DILocation(line: 139, column: 46, scope: !4017)
!4032 = !DILocation(line: 139, column: 32, scope: !4017)
!4033 = !DILocation(line: 0, scope: !4017)
!4034 = !DILocation(line: 141, column: 26, scope: !4017)
!4035 = !DILocation(line: 141, column: 57, scope: !4017)
!4036 = !DILocation(line: 141, column: 3, scope: !4017)
!4037 = !DILocation(line: 142, column: 2, scope: !4017)
!4038 = !DILocation(line: 144, column: 25, scope: !4007)
!4039 = !DILocation(line: 144, column: 2, scope: !4007)
!4040 = !DILocation(line: 145, column: 43, scope: !4007)
!4041 = !DILocation(line: 145, column: 2, scope: !4007)
!4042 = !DILocation(line: 146, column: 26, scope: !4007)
!4043 = !DILocation(line: 146, column: 2, scope: !4007)
!4044 = !DILocation(line: 147, column: 21, scope: !4007)
!4045 = !DILocation(line: 148, column: 21, scope: !4007)
!4046 = !DILocation(line: 149, column: 1, scope: !4007)
!4047 = distinct !DISubprogram(name: "get_color", scope: !2513, file: !2513, line: 47, type: !4048, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !4050)
!4048 = !DISubroutineType(types: !4049)
!4049 = !{!2512, !2518}
!4050 = !{!4051}
!4051 = !DILocalVariable(name: "n", arg: 1, scope: !4047, file: !2513, line: 47, type: !2518)
!4052 = !DILocation(line: 0, scope: !4047)
!4053 = !DILocation(line: 50, column: 21, scope: !4047)
!4054 = !DILocation(line: 50, column: 10, scope: !4047)
!4055 = !DILocation(line: 50, column: 37, scope: !4047)
!4056 = !DILocation(line: 50, column: 2, scope: !4047)
!4057 = distinct !DISubprogram(name: "rb_remove", scope: !2513, file: !2513, line: 367, type: !3805, scopeLine: 368, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !4058)
!4058 = !{!4059, !4060, !4061, !4062, !4063, !4067, !4068, !4071, !4072, !4073, !4074, !4075, !4076}
!4059 = !DILocalVariable(name: "tree", arg: 1, scope: !4057, file: !2513, line: 367, type: !3757)
!4060 = !DILocalVariable(name: "node", arg: 2, scope: !4057, file: !2513, line: 367, type: !2518)
!4061 = !DILocalVariable(name: "tmp", scope: !4057, file: !2513, line: 369, type: !2518)
!4062 = !DILocalVariable(name: "__vla_expr0", scope: !4057, type: !32, flags: DIFlagArtificial)
!4063 = !DILocalVariable(name: "stack", scope: !4057, file: !2513, line: 373, type: !4064)
!4064 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2518, elements: !4065)
!4065 = !{!4066}
!4066 = !DISubrange(count: !4062)
!4067 = !DILocalVariable(name: "stacksz", scope: !4057, file: !2513, line: 376, type: !109)
!4068 = !DILocalVariable(name: "stacksz0", scope: !4069, file: !2513, line: 388, type: !109)
!4069 = distinct !DILexicalBlock(scope: !4070, file: !2513, line: 387, column: 70)
!4070 = distinct !DILexicalBlock(scope: !4057, file: !2513, line: 387, column: 6)
!4071 = !DILocalVariable(name: "hiparent", scope: !4069, file: !2513, line: 389, type: !2518)
!4072 = !DILocalVariable(name: "loparent", scope: !4069, file: !2513, line: 389, type: !2518)
!4073 = !DILocalVariable(name: "node2", scope: !4069, file: !2513, line: 390, type: !2518)
!4074 = !DILocalVariable(name: "ctmp", scope: !4069, file: !2513, line: 440, type: !2512)
!4075 = !DILocalVariable(name: "child", scope: !4057, file: !2513, line: 449, type: !2518)
!4076 = !DILocalVariable(name: "parent", scope: !4057, file: !2513, line: 466, type: !2518)
!4077 = !DILocation(line: 0, scope: !4057)
!4078 = !DILocation(line: 373, column: 29, scope: !4057)
!4079 = !DILocation(line: 373, column: 39, scope: !4057)
!4080 = !DILocation(line: 373, column: 2, scope: !4057)
!4081 = !DILocation(line: 373, column: 17, scope: !4057)
!4082 = !DILocation(line: 376, column: 16, scope: !4057)
!4083 = !DILocation(line: 378, column: 28, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !4057, file: !2513, line: 378, column: 6)
!4085 = !DILocation(line: 378, column: 14, scope: !4084)
!4086 = !DILocation(line: 378, column: 11, scope: !4084)
!4087 = !DILocation(line: 378, column: 6, scope: !4057)
!4088 = !DILocation(line: 387, column: 7, scope: !4070)
!4089 = !DILocation(line: 387, column: 27, scope: !4070)
!4090 = !DILocation(line: 387, column: 36, scope: !4070)
!4091 = !DILocation(line: 387, column: 40, scope: !4070)
!4092 = !DILocation(line: 387, column: 60, scope: !4070)
!4093 = !DILocation(line: 387, column: 6, scope: !4057)
!4094 = !DILocation(line: 0, scope: !4069)
!4095 = !DILocation(line: 392, column: 23, scope: !4069)
!4096 = !DILocation(line: 392, column: 14, scope: !4069)
!4097 = !DILocation(line: 392, column: 44, scope: !4069)
!4098 = !DILocation(line: 392, column: 30, scope: !4069)
!4099 = !DILocation(line: 393, column: 3, scope: !4069)
!4100 = !DILocation(line: 393, column: 20, scope: !4069)
!4101 = !DILocation(line: 394, column: 10, scope: !4069)
!4102 = !DILocation(line: 394, column: 31, scope: !4069)
!4103 = !DILocation(line: 394, column: 3, scope: !4069)
!4104 = !DILocation(line: 396, column: 4, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !4069, file: !2513, line: 394, column: 40)
!4106 = !DILocation(line: 396, column: 21, scope: !4105)
!4107 = distinct !{!4107, !4103, !4108}
!4108 = !DILocation(line: 397, column: 3, scope: !4069)
!4109 = !DILocation(line: 399, column: 28, scope: !4069)
!4110 = !DILocation(line: 399, column: 14, scope: !4069)
!4111 = !DILocation(line: 417, column: 16, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !4069, file: !2513, line: 417, column: 7)
!4113 = !DILocation(line: 417, column: 7, scope: !4069)
!4114 = !DILocation(line: 418, column: 24, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !4112, file: !2513, line: 417, column: 25)
!4116 = !DILocation(line: 418, column: 50, scope: !4115)
!4117 = !DILocation(line: 418, column: 4, scope: !4115)
!4118 = !DILocation(line: 419, column: 3, scope: !4115)
!4119 = !DILocation(line: 420, column: 10, scope: !4120)
!4120 = distinct !DILexicalBlock(scope: !4112, file: !2513, line: 419, column: 10)
!4121 = !DILocation(line: 420, column: 15, scope: !4120)
!4122 = !DILocation(line: 423, column: 16, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !4069, file: !2513, line: 423, column: 7)
!4124 = !DILocation(line: 423, column: 7, scope: !4069)
!4125 = !DILocation(line: 427, column: 24, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4123, file: !2513, line: 426, column: 10)
!4127 = !DILocation(line: 427, column: 51, scope: !4126)
!4128 = !DILocation(line: 427, column: 4, scope: !4126)
!4129 = !DILocation(line: 428, column: 10, scope: !4126)
!4130 = !DILocation(line: 0, scope: !4123)
!4131 = !DILocation(line: 433, column: 24, scope: !4069)
!4132 = !DILocation(line: 433, column: 3, scope: !4069)
!4133 = !DILocation(line: 434, column: 3, scope: !4069)
!4134 = !DILocation(line: 436, column: 9, scope: !4069)
!4135 = !DILocation(line: 437, column: 25, scope: !4069)
!4136 = !DILocation(line: 437, column: 23, scope: !4069)
!4137 = !DILocation(line: 438, column: 22, scope: !4069)
!4138 = !DILocation(line: 440, column: 24, scope: !4069)
!4139 = !DILocation(line: 442, column: 19, scope: !4069)
!4140 = !{i32 0, i32 2}
!4141 = !DILocation(line: 442, column: 3, scope: !4069)
!4142 = !DILocation(line: 443, column: 3, scope: !4069)
!4143 = !DILocation(line: 444, column: 2, scope: !4069)
!4144 = !DILocation(line: 449, column: 25, scope: !4057)
!4145 = !DILocation(line: 451, column: 12, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !4057, file: !2513, line: 451, column: 6)
!4147 = !DILocation(line: 451, column: 6, scope: !4057)
!4148 = !DILocation(line: 452, column: 11, scope: !4149)
!4149 = distinct !DILexicalBlock(scope: !4146, file: !2513, line: 451, column: 21)
!4150 = !DILocation(line: 453, column: 2, scope: !4149)
!4151 = !DILocation(line: 456, column: 14, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4057, file: !2513, line: 456, column: 6)
!4153 = !DILocation(line: 456, column: 6, scope: !4057)
!4154 = !DILocation(line: 457, column: 9, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4152, file: !2513, line: 456, column: 19)
!4156 = !DILocation(line: 457, column: 14, scope: !4155)
!4157 = !DILocation(line: 458, column: 13, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4155, file: !2513, line: 458, column: 7)
!4159 = !DILocation(line: 458, column: 7, scope: !4155)
!4160 = !DILocation(line: 459, column: 4, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4158, file: !2513, line: 458, column: 22)
!4162 = !DILocation(line: 460, column: 3, scope: !4161)
!4163 = !DILocation(line: 461, column: 20, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4158, file: !2513, line: 460, column: 10)
!4165 = !DILocation(line: 466, column: 40, scope: !4057)
!4166 = !DILocation(line: 466, column: 26, scope: !4057)
!4167 = !DILocation(line: 473, column: 12, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4057, file: !2513, line: 473, column: 6)
!4169 = !DILocation(line: 473, column: 6, scope: !4057)
!4170 = !DILocation(line: 474, column: 7, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4172, file: !2513, line: 474, column: 7)
!4172 = distinct !DILexicalBlock(scope: !4168, file: !2513, line: 473, column: 21)
!4173 = !DILocation(line: 474, column: 7, scope: !4172)
!4174 = !DILocation(line: 475, column: 4, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4171, file: !2513, line: 474, column: 23)
!4176 = !DILocation(line: 476, column: 3, scope: !4175)
!4177 = !DILocation(line: 478, column: 22, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !4171, file: !2513, line: 476, column: 10)
!4179 = !DILocation(line: 478, column: 4, scope: !4178)
!4180 = !DILocation(line: 481, column: 21, scope: !4181)
!4181 = distinct !DILexicalBlock(scope: !4168, file: !2513, line: 480, column: 9)
!4182 = !DILocation(line: 481, column: 45, scope: !4181)
!4183 = !DILocation(line: 481, column: 3, scope: !4181)
!4184 = !DILocation(line: 486, column: 3, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4186, file: !2513, line: 486, column: 3)
!4186 = distinct !DILexicalBlock(scope: !4181, file: !2513, line: 486, column: 3)
!4187 = !DILocation(line: 486, column: 3, scope: !4186)
!4188 = !DILocation(line: 486, column: 3, scope: !4189)
!4189 = distinct !DILexicalBlock(scope: !4185, file: !2513, line: 486, column: 3)
!4190 = !DILocation(line: 487, column: 7, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4181, file: !2513, line: 487, column: 7)
!4192 = !DILocation(line: 487, column: 20, scope: !4191)
!4193 = !DILocation(line: 487, column: 23, scope: !4191)
!4194 = !DILocation(line: 487, column: 7, scope: !4181)
!4195 = !DILocation(line: 488, column: 4, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4191, file: !2513, line: 487, column: 38)
!4197 = !DILocation(line: 489, column: 3, scope: !4196)
!4198 = !DILocation(line: 493, column: 15, scope: !4057)
!4199 = !DILocation(line: 493, column: 8, scope: !4057)
!4200 = !DILocation(line: 493, column: 13, scope: !4057)
!4201 = !DILocation(line: 494, column: 1, scope: !4057)
!4202 = distinct !DISubprogram(name: "fix_missing_black", scope: !2513, file: !2513, line: 266, type: !4203, scopeLine: 268, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !4205)
!4203 = !DISubroutineType(types: !4204)
!4204 = !{null, !3903, !109, !2518}
!4205 = !{!4206, !4207, !4208, !4209, !4211, !4212, !4213, !4214, !4215, !4216, !4217}
!4206 = !DILocalVariable(name: "stack", arg: 1, scope: !4202, file: !2513, line: 266, type: !3903)
!4207 = !DILocalVariable(name: "stacksz", arg: 2, scope: !4202, file: !2513, line: 266, type: !109)
!4208 = !DILocalVariable(name: "null_node", arg: 3, scope: !4202, file: !2513, line: 267, type: !2518)
!4209 = !DILocalVariable(name: "c0", scope: !4210, file: !2513, line: 271, type: !2518)
!4210 = distinct !DILexicalBlock(scope: !4202, file: !2513, line: 270, column: 22)
!4211 = !DILocalVariable(name: "c1", scope: !4210, file: !2513, line: 271, type: !2518)
!4212 = !DILocalVariable(name: "inner", scope: !4210, file: !2513, line: 271, type: !2518)
!4213 = !DILocalVariable(name: "outer", scope: !4210, file: !2513, line: 271, type: !2518)
!4214 = !DILocalVariable(name: "n", scope: !4210, file: !2513, line: 272, type: !2518)
!4215 = !DILocalVariable(name: "parent", scope: !4210, file: !2513, line: 273, type: !2518)
!4216 = !DILocalVariable(name: "n_side", scope: !4210, file: !2513, line: 274, type: !167)
!4217 = !DILocalVariable(name: "sib", scope: !4210, file: !2513, line: 275, type: !2518)
!4218 = !DILocation(line: 0, scope: !4202)
!4219 = !DILocation(line: 270, column: 17, scope: !4202)
!4220 = !DILocation(line: 270, column: 2, scope: !4202)
!4221 = !DILocation(line: 272, column: 36, scope: !4210)
!4222 = !DILocation(line: 272, column: 22, scope: !4210)
!4223 = !DILocation(line: 0, scope: !4210)
!4224 = !DILocation(line: 273, column: 41, scope: !4210)
!4225 = !DILocation(line: 273, column: 27, scope: !4210)
!4226 = !DILocation(line: 274, column: 20, scope: !4210)
!4227 = !DILocation(line: 276, column: 21, scope: !4210)
!4228 = !DILocation(line: 276, column: 13, scope: !4210)
!4229 = !DILocation(line: 275, column: 24, scope: !4210)
!4230 = !DILocation(line: 285, column: 8, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4210, file: !2513, line: 285, column: 7)
!4232 = !DILocation(line: 285, column: 7, scope: !4210)
!4233 = !DILocation(line: 286, column: 23, scope: !4234)
!4234 = distinct !DILexicalBlock(scope: !4231, file: !2513, line: 285, column: 23)
!4235 = !DILocation(line: 287, column: 4, scope: !4234)
!4236 = !DILocation(line: 288, column: 4, scope: !4234)
!4237 = !DILocation(line: 289, column: 4, scope: !4234)
!4238 = !DILocation(line: 290, column: 17, scope: !4234)
!4239 = !DILocation(line: 290, column: 4, scope: !4234)
!4240 = !DILocation(line: 290, column: 21, scope: !4234)
!4241 = !DILocation(line: 292, column: 13, scope: !4234)
!4242 = !DILocation(line: 293, column: 10, scope: !4234)
!4243 = !DILocation(line: 294, column: 3, scope: !4234)
!4244 = !DILocation(line: 301, column: 8, scope: !4210)
!4245 = !DILocation(line: 302, column: 8, scope: !4210)
!4246 = !DILocation(line: 303, column: 12, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4210, file: !2513, line: 303, column: 7)
!4248 = !DILocation(line: 303, column: 21, scope: !4247)
!4249 = !DILocation(line: 303, column: 24, scope: !4247)
!4250 = !DILocation(line: 303, column: 38, scope: !4247)
!4251 = !DILocation(line: 303, column: 46, scope: !4247)
!4252 = !DILocation(line: 303, column: 55, scope: !4247)
!4253 = !DILocation(line: 304, column: 6, scope: !4247)
!4254 = !DILocation(line: 303, column: 7, scope: !4210)
!4255 = !DILocation(line: 305, column: 10, scope: !4256)
!4256 = distinct !DILexicalBlock(scope: !4257, file: !2513, line: 305, column: 8)
!4257 = distinct !DILexicalBlock(scope: !4247, file: !2513, line: 304, column: 21)
!4258 = !DILocation(line: 305, column: 8, scope: !4257)
!4259 = !DILocation(line: 306, column: 5, scope: !4260)
!4260 = distinct !DILexicalBlock(scope: !4256, file: !2513, line: 305, column: 24)
!4261 = !DILocation(line: 307, column: 4, scope: !4260)
!4262 = !DILocation(line: 309, column: 4, scope: !4257)
!4263 = !DILocation(line: 310, column: 8, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4257, file: !2513, line: 310, column: 8)
!4265 = !DILocation(line: 310, column: 8, scope: !4257)
!4266 = !DILocation(line: 320, column: 5, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4264, file: !2513, line: 318, column: 11)
!4268 = !DILocation(line: 321, column: 5, scope: !4267)
!4269 = !DILocation(line: 331, column: 11, scope: !4210)
!4270 = !DILocation(line: 332, column: 16, scope: !4271)
!4271 = distinct !DILexicalBlock(scope: !4210, file: !2513, line: 332, column: 7)
!4272 = !DILocation(line: 332, column: 25, scope: !4271)
!4273 = !DILocation(line: 332, column: 28, scope: !4271)
!4274 = !DILocation(line: 332, column: 7, scope: !4210)
!4275 = !DILocation(line: 358, column: 17, scope: !4210)
!4276 = !DILocation(line: 333, column: 12, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4271, file: !2513, line: 332, column: 44)
!4278 = !DILocation(line: 335, column: 18, scope: !4277)
!4279 = !DILocation(line: 335, column: 4, scope: !4277)
!4280 = !DILocation(line: 335, column: 23, scope: !4277)
!4281 = !DILocation(line: 336, column: 17, scope: !4277)
!4282 = !DILocation(line: 336, column: 4, scope: !4277)
!4283 = !DILocation(line: 336, column: 21, scope: !4277)
!4284 = !DILocation(line: 337, column: 4, scope: !4277)
!4285 = !DILocation(line: 338, column: 4, scope: !4277)
!4286 = !DILocation(line: 339, column: 4, scope: !4277)
!4287 = !DILocation(line: 344, column: 10, scope: !4277)
!4288 = !DILocation(line: 345, column: 12, scope: !4277)
!4289 = !DILocation(line: 346, column: 23, scope: !4277)
!4290 = !DILocation(line: 348, column: 3, scope: !4277)
!4291 = !DILocation(line: 355, column: 18, scope: !4210)
!4292 = !DILocation(line: 355, column: 3, scope: !4210)
!4293 = !DILocation(line: 356, column: 3, scope: !4210)
!4294 = !DILocation(line: 357, column: 3, scope: !4210)
!4295 = !DILocation(line: 358, column: 3, scope: !4210)
!4296 = !DILocation(line: 358, column: 22, scope: !4210)
!4297 = !DILocation(line: 359, column: 3, scope: !4210)
!4298 = !DILocation(line: 360, column: 9, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !4210, file: !2513, line: 360, column: 7)
!4300 = !DILocation(line: 360, column: 7, scope: !4210)
!4301 = !DILocation(line: 361, column: 4, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4299, file: !2513, line: 360, column: 23)
!4303 = !DILocation(line: 362, column: 3, scope: !4302)
!4304 = !DILocation(line: 316, column: 12, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4264, file: !2513, line: 310, column: 26)
!4306 = !DILocation(line: 365, column: 1, scope: !4202)
!4307 = distinct !DISubprogram(name: "z_rb_walk", scope: !2513, file: !2513, line: 497, type: !4308, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !4314)
!4308 = !DISubroutineType(types: !4309)
!4309 = !{null, !2518, !4310, !108}
!4310 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_visit_t", file: !157, line: 93, baseType: !4311)
!4311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4312, size: 32)
!4312 = !DISubroutineType(types: !4313)
!4313 = !{null, !2518, !108}
!4314 = !{!4315, !4316, !4317}
!4315 = !DILocalVariable(name: "node", arg: 1, scope: !4307, file: !2513, line: 497, type: !2518)
!4316 = !DILocalVariable(name: "visit_fn", arg: 2, scope: !4307, file: !2513, line: 497, type: !4310)
!4317 = !DILocalVariable(name: "cookie", arg: 3, scope: !4307, file: !2513, line: 497, type: !108)
!4318 = !DILocation(line: 0, scope: !4307)
!4319 = !DILocation(line: 499, column: 11, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4307, file: !2513, line: 499, column: 6)
!4321 = !DILocation(line: 499, column: 6, scope: !4307)
!4322 = !DILocation(line: 500, column: 13, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4320, file: !2513, line: 499, column: 20)
!4324 = !DILocation(line: 500, column: 3, scope: !4323)
!4325 = !DILocation(line: 501, column: 3, scope: !4323)
!4326 = !DILocation(line: 502, column: 13, scope: !4323)
!4327 = !DILocation(line: 504, column: 1, scope: !4307)
!4328 = distinct !DISubprogram(name: "z_rb_child", scope: !2513, file: !2513, line: 507, type: !3786, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !4329)
!4329 = !{!4330, !4331}
!4330 = !DILocalVariable(name: "node", arg: 1, scope: !4328, file: !2513, line: 507, type: !2518)
!4331 = !DILocalVariable(name: "side", arg: 2, scope: !4328, file: !2513, line: 507, type: !167)
!4332 = !DILocation(line: 0, scope: !4328)
!4333 = !DILocation(line: 509, column: 9, scope: !4328)
!4334 = !DILocation(line: 509, column: 2, scope: !4328)
!4335 = distinct !DISubprogram(name: "z_rb_is_black", scope: !2513, file: !2513, line: 512, type: !4336, scopeLine: 513, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !4338)
!4336 = !DISubroutineType(types: !4337)
!4337 = !{!109, !2518}
!4338 = !{!4339}
!4339 = !DILocalVariable(name: "node", arg: 1, scope: !4335, file: !2513, line: 512, type: !2518)
!4340 = !DILocation(line: 0, scope: !4335)
!4341 = !DILocation(line: 514, column: 9, scope: !4335)
!4342 = !DILocation(line: 514, column: 2, scope: !4335)
!4343 = distinct !DISubprogram(name: "rb_contains", scope: !2513, file: !2513, line: 517, type: !4344, scopeLine: 518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !4346)
!4344 = !DISubroutineType(types: !4345)
!4345 = !{!334, !3757, !2518}
!4346 = !{!4347, !4348, !4349}
!4347 = !DILocalVariable(name: "tree", arg: 1, scope: !4343, file: !2513, line: 517, type: !3757)
!4348 = !DILocalVariable(name: "node", arg: 2, scope: !4343, file: !2513, line: 517, type: !2518)
!4349 = !DILocalVariable(name: "n", scope: !4343, file: !2513, line: 519, type: !2518)
!4350 = !DILocation(line: 0, scope: !4343)
!4351 = !DILocation(line: 519, column: 27, scope: !4343)
!4352 = !DILocation(line: 521, column: 12, scope: !4343)
!4353 = !DILocation(line: 521, column: 21, scope: !4343)
!4354 = !DILocation(line: 521, column: 2, scope: !4343)
!4355 = !DILocation(line: 522, column: 26, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !4343, file: !2513, line: 521, column: 37)
!4357 = !DILocation(line: 522, column: 20, scope: !4356)
!4358 = !DILocation(line: 522, column: 7, scope: !4356)
!4359 = distinct !{!4359, !4354, !4360}
!4360 = !DILocation(line: 523, column: 2, scope: !4343)
!4361 = !DILocation(line: 525, column: 11, scope: !4343)
!4362 = !DILocation(line: 525, column: 2, scope: !4343)
!4363 = distinct !DISubprogram(name: "z_rb_foreach_next", scope: !2513, file: !2513, line: 557, type: !4364, scopeLine: 558, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !4372)
!4364 = !DISubroutineType(types: !4365)
!4365 = !{!2518, !3757, !4366}
!4366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4367, size: 32)
!4367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !157, line: 155, size: 96, elements: !4368)
!4368 = !{!4369, !4370, !4371}
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !4367, file: !157, line: 156, baseType: !3903, size: 32)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !4367, file: !157, line: 157, baseType: !1841, size: 32, offset: 32)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !4367, file: !157, line: 158, baseType: !756, size: 32, offset: 64)
!4372 = !{!4373, !4374, !4375}
!4373 = !DILocalVariable(name: "tree", arg: 1, scope: !4363, file: !2513, line: 557, type: !3757)
!4374 = !DILocalVariable(name: "f", arg: 2, scope: !4363, file: !2513, line: 557, type: !4366)
!4375 = !DILocalVariable(name: "n", scope: !4363, file: !2513, line: 559, type: !2518)
!4376 = !DILocation(line: 0, scope: !4363)
!4377 = !DILocation(line: 561, column: 12, scope: !4378)
!4378 = distinct !DILexicalBlock(scope: !4363, file: !2513, line: 561, column: 6)
!4379 = !DILocation(line: 561, column: 17, scope: !4378)
!4380 = !DILocation(line: 561, column: 6, scope: !4363)
!4381 = !DILocation(line: 568, column: 9, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4363, file: !2513, line: 568, column: 6)
!4383 = !DILocation(line: 568, column: 13, scope: !4382)
!4384 = !DILocation(line: 568, column: 6, scope: !4363)
!4385 = !DILocation(line: 569, column: 10, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4382, file: !2513, line: 568, column: 20)
!4387 = !DILocation(line: 569, column: 3, scope: !4386)
!4388 = !DILocation(line: 575, column: 19, scope: !4363)
!4389 = !DILocation(line: 575, column: 16, scope: !4363)
!4390 = !DILocation(line: 575, column: 6, scope: !4363)
!4391 = !DILocation(line: 576, column: 8, scope: !4392)
!4392 = distinct !DILexicalBlock(scope: !4363, file: !2513, line: 576, column: 6)
!4393 = !DILocation(line: 576, column: 6, scope: !4363)
!4394 = !DILocation(line: 577, column: 10, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4392, file: !2513, line: 576, column: 17)
!4396 = !DILocation(line: 577, column: 3, scope: !4395)
!4397 = !DILocation(line: 585, column: 9, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4363, file: !2513, line: 585, column: 6)
!4399 = !DILocation(line: 585, column: 6, scope: !4398)
!4400 = !DILocation(line: 585, column: 25, scope: !4398)
!4401 = !DILocation(line: 585, column: 6, scope: !4363)
!4402 = !DILocation(line: 586, column: 19, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4398, file: !2513, line: 585, column: 32)
!4404 = !DILocation(line: 586, column: 10, scope: !4403)
!4405 = !DILocation(line: 586, column: 3, scope: !4403)
!4406 = !DILocation(line: 593, column: 17, scope: !4363)
!4407 = !DILocation(line: 593, column: 22, scope: !4363)
!4408 = !DILocation(line: 594, column: 9, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4363, file: !2513, line: 593, column: 53)
!4410 = distinct !{!4410, !4411, !4412}
!4411 = !DILocation(line: 593, column: 2, scope: !4363)
!4412 = !DILocation(line: 595, column: 2, scope: !4363)
!4413 = !DILocation(line: 593, column: 26, scope: !4363)
!4414 = !DILocation(line: 593, column: 45, scope: !4363)
!4415 = !DILocation(line: 593, column: 13, scope: !4363)
!4416 = !DILocation(line: 597, column: 8, scope: !4363)
!4417 = !DILocation(line: 598, column: 9, scope: !4363)
!4418 = !DILocation(line: 598, column: 25, scope: !4363)
!4419 = !DILocation(line: 599, column: 1, scope: !4363)
!4420 = distinct !DISubprogram(name: "stack_left_limb", scope: !2513, file: !2513, line: 533, type: !4421, scopeLine: 535, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !4423)
!4421 = !DISubroutineType(types: !4422)
!4422 = !{!2518, !2518, !4366}
!4423 = !{!4424, !4425}
!4424 = !DILocalVariable(name: "n", arg: 1, scope: !4420, file: !2513, line: 533, type: !2518)
!4425 = !DILocalVariable(name: "f", arg: 2, scope: !4420, file: !2513, line: 534, type: !4366)
!4426 = !DILocation(line: 0, scope: !4420)
!4427 = !DILocation(line: 536, column: 5, scope: !4420)
!4428 = !DILocation(line: 536, column: 8, scope: !4420)
!4429 = !DILocation(line: 537, column: 5, scope: !4420)
!4430 = !DILocation(line: 537, column: 2, scope: !4420)
!4431 = !DILocation(line: 537, column: 19, scope: !4420)
!4432 = !DILocation(line: 538, column: 5, scope: !4420)
!4433 = !DILocation(line: 538, column: 16, scope: !4420)
!4434 = !DILocation(line: 538, column: 2, scope: !4420)
!4435 = !DILocation(line: 538, column: 21, scope: !4420)
!4436 = !DILocation(line: 540, column: 14, scope: !4420)
!4437 = !DILocation(line: 540, column: 32, scope: !4420)
!4438 = !DILocation(line: 540, column: 2, scope: !4420)
!4439 = !DILocation(line: 541, column: 9, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4420, file: !2513, line: 540, column: 41)
!4441 = !DILocation(line: 542, column: 6, scope: !4440)
!4442 = !DILocation(line: 542, column: 3, scope: !4440)
!4443 = !DILocation(line: 542, column: 20, scope: !4440)
!4444 = !DILocation(line: 543, column: 6, scope: !4440)
!4445 = !DILocation(line: 543, column: 17, scope: !4440)
!4446 = !DILocation(line: 543, column: 3, scope: !4440)
!4447 = !DILocation(line: 543, column: 22, scope: !4440)
!4448 = distinct !{!4448, !4438, !4449}
!4449 = !DILocation(line: 544, column: 2, scope: !4420)
!4450 = !DILocation(line: 546, column: 12, scope: !4420)
!4451 = !DILocation(line: 546, column: 21, scope: !4420)
!4452 = !DILocation(line: 546, column: 9, scope: !4420)
!4453 = !DILocation(line: 546, column: 2, scope: !4420)
!4454 = distinct !DISubprogram(name: "z_thread_entry", scope: !4455, file: !4455, line: 30, type: !4456, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !4458)
!4455 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4456 = !DISubroutineType(types: !4457)
!4457 = !{null, !215, !108, !108, !108}
!4458 = !{!4459, !4460, !4461, !4462}
!4459 = !DILocalVariable(name: "entry", arg: 1, scope: !4454, file: !4455, line: 30, type: !215)
!4460 = !DILocalVariable(name: "p1", arg: 2, scope: !4454, file: !4455, line: 31, type: !108)
!4461 = !DILocalVariable(name: "p2", arg: 3, scope: !4454, file: !4455, line: 31, type: !108)
!4462 = !DILocalVariable(name: "p3", arg: 4, scope: !4454, file: !4455, line: 31, type: !108)
!4463 = !DILocation(line: 0, scope: !4454)
!4464 = !DILocation(line: 36, column: 2, scope: !4454)
!4465 = !DILocation(line: 38, column: 17, scope: !4454)
!4466 = !DILocation(line: 38, column: 2, scope: !4454)
!4467 = !DILocation(line: 45, column: 2, scope: !4454)
!4468 = distinct !DISubprogram(name: "k_current_get", scope: !119, file: !119, line: 530, type: !4469, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !2018)
!4469 = !DISubroutineType(types: !4470)
!4470 = !{!4471}
!4471 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !145, line: 347, baseType: !4472)
!4472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4473, size: 32)
!4473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !4474)
!4474 = !{!4475, !4533, !4545, !4546, !4547, !4554, !4555, !4556, !4557, !4563, !4578}
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4473, file: !145, line: 247, baseType: !4476, size: 384)
!4476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !4477)
!4477 = !{!4478, !4502, !4509, !4510, !4511, !4520, !4521, !4522}
!4478 = !DIDerivedType(tag: DW_TAG_member, scope: !4476, file: !145, line: 60, baseType: !4479, size: 64)
!4479 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4476, file: !145, line: 60, size: 64, elements: !4480)
!4480 = !{!4481, !4496}
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4479, file: !145, line: 61, baseType: !4482, size: 64)
!4482 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !4483)
!4483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !4484)
!4484 = !{!4485, !4491}
!4485 = !DIDerivedType(tag: DW_TAG_member, scope: !4483, file: !128, line: 38, baseType: !4486, size: 32)
!4486 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4483, file: !128, line: 38, size: 32, elements: !4487)
!4487 = !{!4488, !4490}
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4486, file: !128, line: 39, baseType: !4489, size: 32)
!4489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4483, size: 32)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4486, file: !128, line: 40, baseType: !4489, size: 32)
!4491 = !DIDerivedType(tag: DW_TAG_member, scope: !4483, file: !128, line: 42, baseType: !4492, size: 32, offset: 32)
!4492 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4483, file: !128, line: 42, size: 32, elements: !4493)
!4493 = !{!4494, !4495}
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4492, file: !128, line: 43, baseType: !4489, size: 32)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4492, file: !128, line: 44, baseType: !4489, size: 32)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4479, file: !145, line: 62, baseType: !4497, size: 64)
!4497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !4498)
!4498 = !{!4499}
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4497, file: !157, line: 50, baseType: !4500, size: 64)
!4500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4501, size: 64, elements: !162)
!4501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4497, size: 32)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4476, file: !145, line: 68, baseType: !4503, size: 32, offset: 64)
!4503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4504, size: 32)
!4504 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !4505)
!4505 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !4506)
!4506 = !{!4507}
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4505, file: !123, line: 232, baseType: !4508, size: 64)
!4508 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !4483)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4476, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4476, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!4511 = !DIDerivedType(tag: DW_TAG_member, scope: !4476, file: !145, line: 90, baseType: !4512, size: 16, offset: 112)
!4512 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4476, file: !145, line: 90, size: 16, elements: !4513)
!4513 = !{!4514, !4519}
!4514 = !DIDerivedType(tag: DW_TAG_member, scope: !4512, file: !145, line: 91, baseType: !4515, size: 16)
!4515 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4512, file: !145, line: 91, size: 16, elements: !4516)
!4516 = !{!4517, !4518}
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4515, file: !145, line: 96, baseType: !177, size: 8)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4515, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4512, file: !145, line: 100, baseType: !181, size: 16)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4476, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4476, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4476, file: !145, line: 131, baseType: !4523, size: 192, offset: 192)
!4523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !4524)
!4524 = !{!4525, !4526, !4532}
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4523, file: !123, line: 245, baseType: !4482, size: 64)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4523, file: !123, line: 246, baseType: !4527, size: 32, offset: 64)
!4527 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !4528)
!4528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4529, size: 32)
!4529 = !DISubroutineType(types: !4530)
!4530 = !{null, !4531}
!4531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4523, size: 32)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4523, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4473, file: !145, line: 250, baseType: !4534, size: 288, offset: 384)
!4534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !4535)
!4535 = !{!4536, !4537, !4538, !4539, !4540, !4541, !4542, !4543, !4544}
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4534, file: !198, line: 26, baseType: !110, size: 32)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4534, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4534, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4534, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4534, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4534, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4534, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4534, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4534, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4473, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4473, file: !145, line: 256, baseType: !4504, size: 64, offset: 704)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4473, file: !145, line: 271, baseType: !4548, size: 128, offset: 768)
!4548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !4549)
!4549 = !{!4550, !4551, !4552, !4553}
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !4548, file: !145, line: 35, baseType: !215, size: 32)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !4548, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !4548, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !4548, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !4473, file: !145, line: 274, baseType: !4472, size: 32, offset: 896)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4473, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4473, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4473, file: !145, line: 300, baseType: !4558, size: 96, offset: 1216)
!4558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !4559)
!4559 = !{!4560, !4561, !4562}
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4558, file: !145, line: 153, baseType: !22, size: 32)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4558, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4558, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4473, file: !145, line: 325, baseType: !4564, size: 32, offset: 1312)
!4564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4565, size: 32)
!4565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !4566)
!4566 = !{!4567, !4573, !4574}
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4565, file: !119, line: 5074, baseType: !4568, size: 96)
!4568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !4569)
!4569 = !{!4570, !4571, !4572}
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4568, file: !244, line: 57, baseType: !247, size: 32)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4568, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4568, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4565, file: !119, line: 5075, baseType: !4504, size: 64, offset: 96)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4565, file: !119, line: 5076, baseType: !4575, size: 32, offset: 160)
!4575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !4576)
!4576 = !{!4577}
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4575, file: !254, line: 52, baseType: !22, size: 32)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4473, file: !145, line: 343, baseType: !4579, size: 64, offset: 1344)
!4579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !4580)
!4580 = !{!4581, !4582}
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4579, file: !198, line: 63, baseType: !110, size: 32)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4579, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!4583 = !DILocation(line: 535, column: 9, scope: !4468)
!4584 = !DILocation(line: 535, column: 2, scope: !4468)
!4585 = distinct !DISubprogram(name: "k_thread_abort", scope: !3288, file: !3288, line: 188, type: !4586, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !4588)
!4586 = !DISubroutineType(types: !4587)
!4587 = !{null, !4471}
!4588 = !{!4589}
!4589 = !DILocalVariable(name: "thread", arg: 1, scope: !4585, file: !3288, line: 188, type: !4471)
!4590 = !DILocation(line: 0, scope: !4585)
!4591 = !DILocation(line: 197, column: 2, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4585, file: !3288, line: 197, column: 2)
!4593 = !{i64 2154744993}
!4594 = !DILocation(line: 198, column: 2, scope: !4585)
!4595 = !DILocation(line: 199, column: 1, scope: !4585)
!4596 = distinct !DISubprogram(name: "z_current_get", scope: !3288, file: !3288, line: 173, type: !4469, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !2018)
!4597 = !DILocation(line: 180, column: 2, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4596, file: !3288, line: 180, column: 2)
!4599 = !{i64 2154744925}
!4600 = !DILocation(line: 181, column: 9, scope: !4596)
!4601 = !DILocation(line: 181, column: 2, scope: !4596)
!4602 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2529, file: !2529, line: 1338, type: !4603, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !4611)
!4603 = !DISubroutineType(types: !4604)
!4604 = !{!109, !3628, !108, !324, !4605, !110}
!4605 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3592, line: 99, baseType: !4606)
!4606 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3592, line: 40, baseType: !4607)
!4607 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2529, baseType: !4608)
!4608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4609)
!4609 = !{!4610}
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4608, file: !2529, baseType: !108, size: 32)
!4611 = !{!4612, !4613, !4614, !4615, !4616, !4617, !4621, !4622, !4623, !4625, !4630, !4675, !4678, !4681, !4682, !4683, !4684, !4685, !4686, !4687, !4690, !4691, !4692, !4696, !4699, !4701, !4704, !4705, !4706, !4711, !4717, !4720, !4724, !4730, !4734, !4737, !4739, !4742}
!4612 = !DILocalVariable(name: "out", arg: 1, scope: !4602, file: !2529, line: 1338, type: !3628)
!4613 = !DILocalVariable(name: "ctx", arg: 2, scope: !4602, file: !2529, line: 1338, type: !108)
!4614 = !DILocalVariable(name: "fp", arg: 3, scope: !4602, file: !2529, line: 1338, type: !324)
!4615 = !DILocalVariable(name: "ap", arg: 4, scope: !4602, file: !2529, line: 1339, type: !4605)
!4616 = !DILocalVariable(name: "flags", arg: 5, scope: !4602, file: !2529, line: 1339, type: !110)
!4617 = !DILocalVariable(name: "buf", scope: !4602, file: !2529, line: 1341, type: !4618)
!4618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !226, size: 176, elements: !4619)
!4619 = !{!4620}
!4620 = !DISubrange(count: 22)
!4621 = !DILocalVariable(name: "count", scope: !4602, file: !2529, line: 1342, type: !235)
!4622 = !DILocalVariable(name: "sint", scope: !4602, file: !2529, line: 1343, type: !2548)
!4623 = !DILocalVariable(name: "tagged_ap", scope: !4602, file: !2529, line: 1345, type: !4624)
!4624 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !334)
!4625 = !DILocalVariable(name: "rc", scope: !4626, file: !2529, line: 1377, type: !109)
!4626 = distinct !DILexicalBlock(scope: !4627, file: !2529, line: 1377, column: 4)
!4627 = distinct !DILexicalBlock(scope: !4628, file: !2529, line: 1376, column: 19)
!4628 = distinct !DILexicalBlock(scope: !4629, file: !2529, line: 1376, column: 7)
!4629 = distinct !DILexicalBlock(scope: !4602, file: !2529, line: 1375, column: 19)
!4630 = !DILocalVariable(name: "state", scope: !4629, file: !2529, line: 1395, type: !4631)
!4631 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4602, file: !2529, line: 1392, size: 192, elements: !4632)
!4632 = !{!4633, !4643}
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4631, file: !2529, line: 1393, baseType: !4634, size: 64)
!4634 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2529, line: 166, size: 64, elements: !4635)
!4635 = !{!4636, !4637, !4638, !4640, !4642}
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4634, file: !2529, line: 168, baseType: !2548, size: 64)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4634, file: !2529, line: 171, baseType: !2551, size: 64)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4634, file: !2529, line: 174, baseType: !4639, size: 64)
!4639 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4634, file: !2529, line: 177, baseType: !4641, size: 64)
!4641 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4634, file: !2529, line: 180, baseType: !108, size: 32)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4631, file: !2529, line: 1394, baseType: !4644, size: 96, offset: 64)
!4644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2529, line: 189, size: 96, elements: !4645)
!4645 = !{!4646, !4647, !4648, !4649, !4650, !4651, !4652, !4653, !4654, !4655, !4656, !4657, !4658, !4659, !4660, !4661, !4662, !4663, !4664, !4665, !4670}
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4644, file: !2529, line: 191, baseType: !334, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4644, file: !2529, line: 194, baseType: !334, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4644, file: !2529, line: 197, baseType: !334, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4644, file: !2529, line: 200, baseType: !334, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4644, file: !2529, line: 203, baseType: !334, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4644, file: !2529, line: 206, baseType: !334, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4644, file: !2529, line: 209, baseType: !334, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4644, file: !2529, line: 212, baseType: !334, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4644, file: !2529, line: 219, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4644, file: !2529, line: 222, baseType: !334, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4644, file: !2529, line: 229, baseType: !334, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4644, file: !2529, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4644, file: !2529, line: 238, baseType: !334, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4644, file: !2529, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4644, file: !2529, line: 244, baseType: !334, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4644, file: !2529, line: 247, baseType: !334, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4644, file: !2529, line: 252, baseType: !334, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4644, file: !2529, line: 257, baseType: !334, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4644, file: !2529, line: 260, baseType: !168, size: 8, offset: 24)
!4665 = !DIDerivedType(tag: DW_TAG_member, scope: !4644, file: !2529, line: 262, baseType: !4666, size: 32, offset: 32)
!4666 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4644, file: !2529, line: 262, size: 32, elements: !4667)
!4667 = !{!4668, !4669}
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4666, file: !2529, line: 267, baseType: !109, size: 32)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4666, file: !2529, line: 289, baseType: !109, size: 32)
!4670 = !DIDerivedType(tag: DW_TAG_member, scope: !4644, file: !2529, line: 292, baseType: !4671, size: 32, offset: 64)
!4671 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4644, file: !2529, line: 292, size: 32, elements: !4672)
!4672 = !{!4673, !4674}
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4671, file: !2529, line: 297, baseType: !109, size: 32)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4671, file: !2529, line: 306, baseType: !109, size: 32)
!4675 = !DILocalVariable(name: "conv", scope: !4629, file: !2529, line: 1400, type: !4676)
!4676 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4677)
!4677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4644, size: 32)
!4678 = !DILocalVariable(name: "value", scope: !4629, file: !2529, line: 1401, type: !4679)
!4679 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4680)
!4680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4634, size: 32)
!4681 = !DILocalVariable(name: "sp", scope: !4629, file: !2529, line: 1402, type: !324)
!4682 = !DILocalVariable(name: "width", scope: !4629, file: !2529, line: 1403, type: !109)
!4683 = !DILocalVariable(name: "precision", scope: !4629, file: !2529, line: 1404, type: !109)
!4684 = !DILocalVariable(name: "bps", scope: !4629, file: !2529, line: 1405, type: !324)
!4685 = !DILocalVariable(name: "bpe", scope: !4629, file: !2529, line: 1406, type: !324)
!4686 = !DILocalVariable(name: "sign", scope: !4629, file: !2529, line: 1407, type: !226)
!4687 = !DILocalVariable(name: "arg", scope: !4688, file: !2529, line: 1432, type: !109)
!4688 = distinct !DILexicalBlock(scope: !4689, file: !2529, line: 1431, column: 24)
!4689 = distinct !DILexicalBlock(scope: !4629, file: !2529, line: 1431, column: 7)
!4690 = !DILocalVariable(name: "specifier_cat", scope: !4629, file: !2529, line: 1468, type: !2528)
!4691 = !DILocalVariable(name: "length_mod", scope: !4629, file: !2529, line: 1470, type: !2536)
!4692 = !DILocalVariable(name: "rc", scope: !4693, file: !2529, line: 1575, type: !109)
!4693 = distinct !DILexicalBlock(scope: !4694, file: !2529, line: 1575, column: 4)
!4694 = distinct !DILexicalBlock(scope: !4695, file: !2529, line: 1574, column: 43)
!4695 = distinct !DILexicalBlock(scope: !4629, file: !2529, line: 1574, column: 7)
!4696 = !DILocalVariable(name: "rc", scope: !4697, file: !2529, line: 1584, type: !109)
!4697 = distinct !DILexicalBlock(scope: !4698, file: !2529, line: 1584, column: 4)
!4698 = distinct !DILexicalBlock(scope: !4629, file: !2529, line: 1582, column: 28)
!4699 = !DILocalVariable(name: "len", scope: !4700, file: !2529, line: 1589, type: !235)
!4700 = distinct !DILexicalBlock(scope: !4698, file: !2529, line: 1586, column: 13)
!4701 = !DILocalVariable(name: "len", scope: !4702, file: !2529, line: 1641, type: !235)
!4702 = distinct !DILexicalBlock(scope: !4703, file: !2529, line: 1640, column: 24)
!4703 = distinct !DILexicalBlock(scope: !4698, file: !2529, line: 1640, column: 8)
!4704 = !DILocalVariable(name: "nj_len", scope: !4629, file: !2529, line: 1722, type: !235)
!4705 = !DILocalVariable(name: "pad_len", scope: !4629, file: !2529, line: 1723, type: !109)
!4706 = !DILocalVariable(name: "pad", scope: !4707, file: !2529, line: 1751, type: !226)
!4707 = distinct !DILexicalBlock(scope: !4708, file: !2529, line: 1750, column: 26)
!4708 = distinct !DILexicalBlock(scope: !4709, file: !2529, line: 1750, column: 8)
!4709 = distinct !DILexicalBlock(scope: !4710, file: !2529, line: 1747, column: 18)
!4710 = distinct !DILexicalBlock(scope: !4629, file: !2529, line: 1747, column: 7)
!4711 = !DILocalVariable(name: "rc", scope: !4712, file: !2529, line: 1758, type: !109)
!4712 = distinct !DILexicalBlock(scope: !4713, file: !2529, line: 1758, column: 7)
!4713 = distinct !DILexicalBlock(scope: !4714, file: !2529, line: 1757, column: 21)
!4714 = distinct !DILexicalBlock(scope: !4715, file: !2529, line: 1757, column: 10)
!4715 = distinct !DILexicalBlock(scope: !4716, file: !2529, line: 1756, column: 26)
!4716 = distinct !DILexicalBlock(scope: !4707, file: !2529, line: 1756, column: 9)
!4717 = !DILocalVariable(name: "rc", scope: !4718, file: !2529, line: 1765, type: !109)
!4718 = distinct !DILexicalBlock(scope: !4719, file: !2529, line: 1765, column: 6)
!4719 = distinct !DILexicalBlock(scope: !4707, file: !2529, line: 1764, column: 25)
!4720 = !DILocalVariable(name: "rc", scope: !4721, file: !2529, line: 1774, type: !109)
!4721 = distinct !DILexicalBlock(scope: !4722, file: !2529, line: 1774, column: 4)
!4722 = distinct !DILexicalBlock(scope: !4723, file: !2529, line: 1773, column: 18)
!4723 = distinct !DILexicalBlock(scope: !4629, file: !2529, line: 1773, column: 7)
!4724 = !DILocalVariable(name: "rc", scope: !4725, file: !2529, line: 1819, type: !109)
!4725 = distinct !DILexicalBlock(scope: !4726, file: !2529, line: 1819, column: 5)
!4726 = distinct !DILexicalBlock(scope: !4727, file: !2529, line: 1818, column: 44)
!4727 = distinct !DILexicalBlock(scope: !4728, file: !2529, line: 1818, column: 8)
!4728 = distinct !DILexicalBlock(scope: !4729, file: !2529, line: 1817, column: 10)
!4729 = distinct !DILexicalBlock(scope: !4629, file: !2529, line: 1777, column: 7)
!4730 = !DILocalVariable(name: "rc", scope: !4731, file: !2529, line: 1823, type: !109)
!4731 = distinct !DILexicalBlock(scope: !4732, file: !2529, line: 1823, column: 5)
!4732 = distinct !DILexicalBlock(scope: !4733, file: !2529, line: 1822, column: 26)
!4733 = distinct !DILexicalBlock(scope: !4728, file: !2529, line: 1822, column: 8)
!4734 = !DILocalVariable(name: "rc", scope: !4735, file: !2529, line: 1828, type: !109)
!4735 = distinct !DILexicalBlock(scope: !4736, file: !2529, line: 1828, column: 5)
!4736 = distinct !DILexicalBlock(scope: !4728, file: !2529, line: 1827, column: 26)
!4737 = !DILocalVariable(name: "rc", scope: !4738, file: !2529, line: 1831, type: !109)
!4738 = distinct !DILexicalBlock(scope: !4728, file: !2529, line: 1831, column: 4)
!4739 = !DILocalVariable(name: "rc", scope: !4740, file: !2529, line: 1836, type: !109)
!4740 = distinct !DILexicalBlock(scope: !4741, file: !2529, line: 1836, column: 4)
!4741 = distinct !DILexicalBlock(scope: !4629, file: !2529, line: 1835, column: 21)
!4742 = !DILabel(scope: !4698, name: "prec_int_pad0", file: !2529, line: 1634)
!4743 = !DILocation(line: 0, scope: !4602)
!4744 = !DILocation(line: 1341, column: 2, scope: !4602)
!4745 = !DILocation(line: 1341, column: 7, scope: !4602)
!4746 = !DILocation(line: 1375, column: 2, scope: !4602)
!4747 = !DILocation(line: 1342, column: 9, scope: !4602)
!4748 = !DILocation(line: 1375, column: 9, scope: !4602)
!4749 = !DILocation(line: 1377, column: 4, scope: !4626)
!4750 = !DILocation(line: 0, scope: !4626)
!4751 = !DILocation(line: 1377, column: 4, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4626, file: !2529, line: 1377, column: 4)
!4753 = distinct !{!4753, !4746, !4754}
!4754 = !DILocation(line: 1839, column: 2, scope: !4602)
!4755 = !DILocation(line: 1392, column: 3, scope: !4629)
!4756 = !DILocation(line: 1395, column: 5, scope: !4629)
!4757 = !DILocation(line: 0, scope: !4629)
!4758 = !DILocation(line: 1409, column: 8, scope: !4629)
!4759 = !DILocation(line: 1414, column: 13, scope: !4760)
!4760 = distinct !DILexicalBlock(scope: !4629, file: !2529, line: 1414, column: 7)
!4761 = !DILocation(line: 1414, column: 7, scope: !4629)
!4762 = !DILocation(line: 1415, column: 12, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4760, file: !2529, line: 1414, column: 25)
!4764 = !DILocation(line: 1417, column: 14, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4763, file: !2529, line: 1417, column: 8)
!4766 = !DILocation(line: 1417, column: 8, scope: !4763)
!4767 = !DILocation(line: 1418, column: 21, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4765, file: !2529, line: 1417, column: 19)
!4769 = !DILocation(line: 1419, column: 13, scope: !4768)
!4770 = !DILocation(line: 1420, column: 4, scope: !4768)
!4771 = !DILocation(line: 1421, column: 20, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4760, file: !2529, line: 1421, column: 14)
!4773 = !DILocation(line: 1421, column: 14, scope: !4760)
!4774 = !DILocation(line: 1431, column: 13, scope: !4689)
!4775 = !DILocation(line: 1431, column: 7, scope: !4629)
!4776 = !DILocation(line: 1432, column: 14, scope: !4688)
!4777 = !DILocation(line: 0, scope: !4688)
!4778 = !DILocation(line: 1434, column: 12, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4688, file: !2529, line: 1434, column: 8)
!4780 = !DILocation(line: 1434, column: 8, scope: !4688)
!4781 = !DILocation(line: 1435, column: 24, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4779, file: !2529, line: 1434, column: 17)
!4783 = !DILocation(line: 1436, column: 4, scope: !4782)
!4784 = !DILocation(line: 1439, column: 20, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4689, file: !2529, line: 1439, column: 14)
!4786 = !DILocation(line: 1439, column: 14, scope: !4689)
!4787 = !DILocation(line: 1469, column: 37, scope: !4629)
!4788 = !DILocation(line: 1448, column: 20, scope: !4629)
!4789 = !DILocation(line: 1449, column: 22, scope: !4629)
!4790 = !DILocation(line: 1471, column: 34, scope: !4629)
!4791 = !DILocation(line: 1478, column: 7, scope: !4629)
!4792 = !DILocation(line: 1479, column: 4, scope: !4793)
!4793 = distinct !DILexicalBlock(scope: !4794, file: !2529, line: 1478, column: 40)
!4794 = distinct !DILexicalBlock(scope: !4629, file: !2529, line: 1478, column: 7)
!4795 = !DILocation(line: 1484, column: 19, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4793, file: !2529, line: 1479, column: 24)
!4797 = !DILocation(line: 1484, column: 17, scope: !4796)
!4798 = !DILocation(line: 1485, column: 5, scope: !4796)
!4799 = !DILocation(line: 1492, column: 20, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4801, file: !2529, line: 1491, column: 12)
!4801 = distinct !DILexicalBlock(scope: !4796, file: !2529, line: 1487, column: 9)
!4802 = !DILocation(line: 1492, column: 18, scope: !4800)
!4803 = !DILocation(line: 1494, column: 5, scope: !4796)
!4804 = !DILocation(line: 1497, column: 23, scope: !4796)
!4805 = !DILocation(line: 1496, column: 17, scope: !4796)
!4806 = !DILocation(line: 1498, column: 5, scope: !4796)
!4807 = !DILocation(line: 1501, column: 23, scope: !4796)
!4808 = !DILocation(line: 1500, column: 17, scope: !4796)
!4809 = !DILocation(line: 1502, column: 5, scope: !4796)
!4810 = !DILocation(line: 1513, column: 23, scope: !4796)
!4811 = !DILocation(line: 1513, column: 6, scope: !4796)
!4812 = !DILocation(line: 1512, column: 17, scope: !4796)
!4813 = !DILocation(line: 1514, column: 5, scope: !4796)
!4814 = !DILocation(line: 0, scope: !4796)
!4815 = !DILocation(line: 1516, column: 8, scope: !4793)
!4816 = !DILocation(line: 1517, column: 19, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4818, file: !2529, line: 1516, column: 33)
!4818 = distinct !DILexicalBlock(scope: !4793, file: !2529, line: 1516, column: 8)
!4819 = !DILocation(line: 1517, column: 17, scope: !4817)
!4820 = !DILocation(line: 1518, column: 4, scope: !4817)
!4821 = !DILocation(line: 1519, column: 19, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4823, file: !2529, line: 1518, column: 39)
!4823 = distinct !DILexicalBlock(scope: !4818, file: !2529, line: 1518, column: 15)
!4824 = !DILocation(line: 1519, column: 17, scope: !4822)
!4825 = !DILocation(line: 1520, column: 4, scope: !4822)
!4826 = !DILocation(line: 1522, column: 4, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4828, file: !2529, line: 1521, column: 47)
!4828 = distinct !DILexicalBlock(scope: !4794, file: !2529, line: 1521, column: 14)
!4829 = !DILocation(line: 1527, column: 19, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4827, file: !2529, line: 1522, column: 24)
!4831 = !DILocation(line: 1527, column: 17, scope: !4830)
!4832 = !DILocation(line: 1528, column: 5, scope: !4830)
!4833 = !DILocation(line: 0, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4830, file: !2529, line: 1530, column: 9)
!4835 = !DILocation(line: 1540, column: 23, scope: !4830)
!4836 = !DILocation(line: 1539, column: 17, scope: !4830)
!4837 = !DILocation(line: 1542, column: 5, scope: !4830)
!4838 = !DILocation(line: 1545, column: 23, scope: !4830)
!4839 = !DILocation(line: 1544, column: 17, scope: !4830)
!4840 = !DILocation(line: 1547, column: 5, scope: !4830)
!4841 = !DILocation(line: 1551, column: 23, scope: !4830)
!4842 = !DILocation(line: 1551, column: 6, scope: !4830)
!4843 = !DILocation(line: 1550, column: 17, scope: !4830)
!4844 = !DILocation(line: 1552, column: 5, scope: !4830)
!4845 = !DILocation(line: 0, scope: !4830)
!4846 = !DILocation(line: 1554, column: 8, scope: !4827)
!4847 = !DILocation(line: 1555, column: 19, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4849, file: !2529, line: 1554, column: 33)
!4849 = distinct !DILexicalBlock(scope: !4827, file: !2529, line: 1554, column: 8)
!4850 = !DILocation(line: 1555, column: 17, scope: !4848)
!4851 = !DILocation(line: 1556, column: 4, scope: !4848)
!4852 = !DILocation(line: 1557, column: 19, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4854, file: !2529, line: 1556, column: 39)
!4854 = distinct !DILexicalBlock(scope: !4849, file: !2529, line: 1556, column: 15)
!4855 = !DILocation(line: 1557, column: 17, scope: !4853)
!4856 = !DILocation(line: 1558, column: 4, scope: !4853)
!4857 = !DILocation(line: 0, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4859, file: !2529, line: 1560, column: 8)
!4859 = distinct !DILexicalBlock(scope: !4860, file: !2529, line: 1559, column: 45)
!4860 = distinct !DILexicalBlock(scope: !4828, file: !2529, line: 1559, column: 14)
!4861 = !DILocation(line: 1566, column: 17, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4863, file: !2529, line: 1565, column: 46)
!4863 = distinct !DILexicalBlock(scope: !4860, file: !2529, line: 1565, column: 14)
!4864 = !DILocation(line: 1566, column: 15, scope: !4862)
!4865 = !DILocation(line: 1567, column: 3, scope: !4862)
!4866 = !DILocation(line: 1574, column: 21, scope: !4695)
!4867 = !DILocation(line: 1575, column: 4, scope: !4693)
!4868 = !DILocation(line: 0, scope: !4693)
!4869 = !DILocation(line: 1575, column: 4, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4693, file: !2529, line: 1575, column: 4)
!4871 = !DILocation(line: 1582, column: 17, scope: !4629)
!4872 = !DILocation(line: 1582, column: 3, scope: !4629)
!4873 = !DILocation(line: 1584, column: 4, scope: !4697)
!4874 = !DILocation(line: 0, scope: !4697)
!4875 = !DILocation(line: 1584, column: 4, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4697, file: !2529, line: 1584, column: 4)
!4877 = !DILocation(line: 1587, column: 31, scope: !4700)
!4878 = !DILocation(line: 1591, column: 18, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4700, file: !2529, line: 1591, column: 8)
!4880 = !DILocation(line: 1591, column: 8, scope: !4700)
!4881 = !DILocation(line: 1592, column: 11, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4879, file: !2529, line: 1591, column: 24)
!4883 = !DILocation(line: 0, scope: !4700)
!4884 = !DILocation(line: 1593, column: 4, scope: !4882)
!4885 = !DILocation(line: 1594, column: 11, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4879, file: !2529, line: 1593, column: 11)
!4887 = !DILocation(line: 1604, column: 51, scope: !4698)
!4888 = !DILocation(line: 1604, column: 13, scope: !4698)
!4889 = !DILocation(line: 1604, column: 11, scope: !4698)
!4890 = !DILocation(line: 1606, column: 4, scope: !4698)
!4891 = !DILocation(line: 1609, column: 14, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4698, file: !2529, line: 1609, column: 8)
!4893 = !DILocation(line: 1609, column: 8, scope: !4698)
!4894 = !DILocation(line: 1619, column: 18, scope: !4698)
!4895 = !DILocation(line: 1620, column: 13, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4698, file: !2529, line: 1620, column: 8)
!4897 = !DILocation(line: 1620, column: 8, scope: !4698)
!4898 = !DILocation(line: 1622, column: 36, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4896, file: !2529, line: 1620, column: 18)
!4900 = !DILocation(line: 1622, column: 17, scope: !4899)
!4901 = !DILocation(line: 1623, column: 4, scope: !4899)
!4902 = !DILocation(line: 1632, column: 29, scope: !4698)
!4903 = !DILocation(line: 1632, column: 10, scope: !4698)
!4904 = !DILocation(line: 1632, column: 4, scope: !4698)
!4905 = !DILocation(line: 1407, column: 8, scope: !4629)
!4906 = !DILocation(line: 0, scope: !4698)
!4907 = !DILocation(line: 1634, column: 3, scope: !4698)
!4908 = !DILocation(line: 1640, column: 18, scope: !4703)
!4909 = !DILocation(line: 1640, column: 8, scope: !4698)
!4910 = !DILocation(line: 1729, column: 13, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4629, file: !2529, line: 1729, column: 7)
!4912 = !DILocation(line: 1641, column: 22, scope: !4702)
!4913 = !DILocation(line: 0, scope: !4702)
!4914 = !DILocation(line: 1646, column: 21, scope: !4702)
!4915 = !DILocation(line: 1649, column: 13, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4702, file: !2529, line: 1649, column: 9)
!4917 = !DILocation(line: 1649, column: 9, scope: !4702)
!4918 = !DILocation(line: 1650, column: 35, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4916, file: !2529, line: 1649, column: 34)
!4920 = !DILocation(line: 1650, column: 23, scope: !4919)
!4921 = !DILocation(line: 1651, column: 5, scope: !4919)
!4922 = !DILocation(line: 1660, column: 15, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4698, file: !2529, line: 1660, column: 8)
!4924 = !DILocation(line: 1660, column: 19, scope: !4923)
!4925 = !DILocation(line: 1660, column: 8, scope: !4698)
!4926 = !DILocation(line: 1661, column: 23, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4923, file: !2529, line: 1660, column: 28)
!4928 = !DILocation(line: 1661, column: 11, scope: !4927)
!4929 = !DILocation(line: 1665, column: 22, scope: !4927)
!4930 = !DILocation(line: 1666, column: 21, scope: !4927)
!4931 = !DILocation(line: 1668, column: 5, scope: !4927)
!4932 = !DILocation(line: 1677, column: 30, scope: !4933)
!4933 = distinct !DILexicalBlock(scope: !4934, file: !2529, line: 1676, column: 49)
!4934 = distinct !DILexicalBlock(scope: !4698, file: !2529, line: 1676, column: 8)
!4935 = !DILocation(line: 1677, column: 5, scope: !4933)
!4936 = !DILocation(line: 1680, column: 4, scope: !4698)
!4937 = !DILocation(line: 0, scope: !4879)
!4938 = !DILocation(line: 1597, column: 14, scope: !4700)
!4939 = !DILocation(line: 1699, column: 11, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4629, file: !2529, line: 1699, column: 7)
!4941 = !DILocation(line: 1699, column: 7, scope: !4629)
!4942 = !DILocation(line: 1725, column: 7, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4629, file: !2529, line: 1725, column: 7)
!4944 = !DILocation(line: 1725, column: 12, scope: !4943)
!4945 = !DILocation(line: 1747, column: 13, scope: !4710)
!4946 = !DILocation(line: 1747, column: 7, scope: !4629)
!4947 = !DILocation(line: 1722, column: 24, scope: !4629)
!4948 = !DILocation(line: 1725, column: 7, scope: !4629)
!4949 = !DILocation(line: 1729, column: 7, scope: !4629)
!4950 = !DILocation(line: 1736, column: 13, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !4629, file: !2529, line: 1736, column: 7)
!4952 = !DILocation(line: 1735, column: 19, scope: !4629)
!4953 = !DILocation(line: 1736, column: 7, scope: !4629)
!4954 = !DILocation(line: 1748, column: 10, scope: !4709)
!4955 = !DILocation(line: 1750, column: 15, scope: !4708)
!4956 = !DILocation(line: 1750, column: 8, scope: !4709)
!4957 = !DILocation(line: 0, scope: !4707)
!4958 = !DILocation(line: 1756, column: 15, scope: !4716)
!4959 = !DILocation(line: 1756, column: 9, scope: !4707)
!4960 = !DILocation(line: 1758, column: 7, scope: !4712)
!4961 = !DILocation(line: 0, scope: !4712)
!4962 = !DILocation(line: 1758, column: 7, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4712, file: !2529, line: 1758, column: 7)
!4964 = !DILocation(line: 1764, column: 5, scope: !4707)
!4965 = !DILocation(line: 0, scope: !4709)
!4966 = !DILocation(line: 1764, column: 20, scope: !4707)
!4967 = !DILocation(line: 1764, column: 17, scope: !4707)
!4968 = !DILocation(line: 1765, column: 6, scope: !4718)
!4969 = !DILocation(line: 0, scope: !4718)
!4970 = !DILocation(line: 1765, column: 6, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4718, file: !2529, line: 1765, column: 6)
!4972 = distinct !{!4972, !4964, !4973}
!4973 = !DILocation(line: 1766, column: 5, scope: !4707)
!4974 = !DILocation(line: 1773, column: 12, scope: !4723)
!4975 = !DILocation(line: 1773, column: 7, scope: !4629)
!4976 = !DILocation(line: 1773, column: 7, scope: !4723)
!4977 = !DILocation(line: 1774, column: 4, scope: !4721)
!4978 = !DILocation(line: 0, scope: !4721)
!4979 = !DILocation(line: 1774, column: 4, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !4721, file: !2529, line: 1774, column: 4)
!4981 = !DILocation(line: 1818, column: 8, scope: !4727)
!4982 = !DILocation(line: 1818, column: 27, scope: !4727)
!4983 = !DILocation(line: 1818, column: 25, scope: !4727)
!4984 = !DILocation(line: 1818, column: 8, scope: !4728)
!4985 = !DILocation(line: 1819, column: 5, scope: !4725)
!4986 = !DILocation(line: 0, scope: !4725)
!4987 = !DILocation(line: 1819, column: 5, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4725, file: !2529, line: 1819, column: 5)
!4989 = !DILocation(line: 1822, column: 14, scope: !4733)
!4990 = !DILocation(line: 1822, column: 8, scope: !4728)
!4991 = !DILocation(line: 1823, column: 5, scope: !4731)
!4992 = !DILocation(line: 0, scope: !4731)
!4993 = !DILocation(line: 1823, column: 5, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4731, file: !2529, line: 1823, column: 5)
!4995 = !DILocation(line: 1826, column: 20, scope: !4728)
!4996 = !DILocation(line: 1827, column: 4, scope: !4728)
!4997 = !DILocation(line: 0, scope: !4728)
!4998 = !DILocation(line: 1827, column: 21, scope: !4728)
!4999 = !DILocation(line: 1827, column: 18, scope: !4728)
!5000 = !DILocation(line: 1828, column: 5, scope: !4735)
!5001 = !DILocation(line: 0, scope: !4735)
!5002 = !DILocation(line: 1828, column: 5, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4735, file: !2529, line: 1828, column: 5)
!5004 = distinct !{!5004, !4996, !5005}
!5005 = !DILocation(line: 1829, column: 4, scope: !4728)
!5006 = !DILocation(line: 1831, column: 4, scope: !4738)
!5007 = !DILocation(line: 0, scope: !4738)
!5008 = !DILocation(line: 1831, column: 4, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !4738, file: !2529, line: 1831, column: 4)
!5010 = !DILocation(line: 1835, column: 16, scope: !4629)
!5011 = !DILocation(line: 1835, column: 3, scope: !4629)
!5012 = !DILocation(line: 1836, column: 4, scope: !4740)
!5013 = !DILocation(line: 0, scope: !4740)
!5014 = !DILocation(line: 1836, column: 4, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !4740, file: !2529, line: 1836, column: 4)
!5016 = !DILocation(line: 1837, column: 4, scope: !4741)
!5017 = distinct !{!5017, !5011, !5018}
!5018 = !DILocation(line: 1838, column: 3, scope: !4629)
!5019 = !DILocation(line: 1844, column: 1, scope: !4602)
!5020 = distinct !DISubprogram(name: "extract_conversion", scope: !2529, file: !2529, line: 642, type: !5021, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !5023)
!5021 = !DISubroutineType(types: !5022)
!5022 = !{!324, !4677, !324}
!5023 = !{!5024, !5025}
!5024 = !DILocalVariable(name: "conv", arg: 1, scope: !5020, file: !2529, line: 642, type: !4677)
!5025 = !DILocalVariable(name: "sp", arg: 2, scope: !5020, file: !2529, line: 643, type: !324)
!5026 = !DILocation(line: 0, scope: !5020)
!5027 = !DILocation(line: 645, column: 10, scope: !5020)
!5028 = !DILocation(line: 653, column: 2, scope: !5020)
!5029 = !DILocation(line: 654, column: 6, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !5020, file: !2529, line: 654, column: 6)
!5031 = !DILocation(line: 654, column: 10, scope: !5030)
!5032 = !DILocation(line: 654, column: 6, scope: !5020)
!5033 = !DILocation(line: 655, column: 24, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !5030, file: !2529, line: 654, column: 18)
!5035 = !DILocation(line: 655, column: 19, scope: !5034)
!5036 = !DILocation(line: 656, column: 3, scope: !5034)
!5037 = !DILocation(line: 659, column: 7, scope: !5020)
!5038 = !DILocation(line: 660, column: 7, scope: !5020)
!5039 = !DILocation(line: 661, column: 7, scope: !5020)
!5040 = !DILocation(line: 662, column: 7, scope: !5020)
!5041 = !DILocation(line: 663, column: 7, scope: !5020)
!5042 = !DILocation(line: 665, column: 2, scope: !5020)
!5043 = !DILocation(line: 666, column: 1, scope: !5020)
!5044 = distinct !DISubprogram(name: "outs", scope: !2529, file: !2529, line: 1319, type: !5045, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !5047)
!5045 = !DISubroutineType(types: !5046)
!5046 = !{!109, !3628, !108, !324, !324}
!5047 = !{!5048, !5049, !5050, !5051, !5052, !5053}
!5048 = !DILocalVariable(name: "out", arg: 1, scope: !5044, file: !2529, line: 1319, type: !3628)
!5049 = !DILocalVariable(name: "ctx", arg: 2, scope: !5044, file: !2529, line: 1320, type: !108)
!5050 = !DILocalVariable(name: "sp", arg: 3, scope: !5044, file: !2529, line: 1321, type: !324)
!5051 = !DILocalVariable(name: "ep", arg: 4, scope: !5044, file: !2529, line: 1322, type: !324)
!5052 = !DILocalVariable(name: "count", scope: !5044, file: !2529, line: 1324, type: !235)
!5053 = !DILocalVariable(name: "rc", scope: !5054, file: !2529, line: 1327, type: !109)
!5054 = distinct !DILexicalBlock(scope: !5044, file: !2529, line: 1326, column: 45)
!5055 = !DILocation(line: 0, scope: !5044)
!5056 = !DILocation(line: 1326, column: 2, scope: !5044)
!5057 = !DILocation(line: 1324, column: 9, scope: !5044)
!5058 = !DILocation(line: 1326, column: 13, scope: !5044)
!5059 = !DILocation(line: 1326, column: 19, scope: !5044)
!5060 = !DILocation(line: 1327, column: 21, scope: !5054)
!5061 = !DILocation(line: 1326, column: 36, scope: !5044)
!5062 = !DILocation(line: 1326, column: 39, scope: !5044)
!5063 = !DILocation(line: 1327, column: 24, scope: !5054)
!5064 = !DILocation(line: 1327, column: 16, scope: !5054)
!5065 = !DILocation(line: 1327, column: 12, scope: !5054)
!5066 = !DILocation(line: 0, scope: !5054)
!5067 = !DILocation(line: 1329, column: 10, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5054, file: !2529, line: 1329, column: 7)
!5069 = !DILocation(line: 1329, column: 7, scope: !5054)
!5070 = distinct !{!5070, !5056, !5071}
!5071 = !DILocation(line: 1333, column: 2, scope: !5044)
!5072 = !DILocation(line: 1336, column: 1, scope: !5044)
!5073 = distinct !DISubprogram(name: "encode_uint", scope: !2529, file: !2529, line: 788, type: !5074, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !5076)
!5074 = !DISubroutineType(types: !5075)
!5075 = !{!1147, !2551, !4677, !1147, !324}
!5076 = !{!5077, !5078, !5079, !5080, !5081, !5082, !5084, !5085}
!5077 = !DILocalVariable(name: "value", arg: 1, scope: !5073, file: !2529, line: 788, type: !2551)
!5078 = !DILocalVariable(name: "conv", arg: 2, scope: !5073, file: !2529, line: 789, type: !4677)
!5079 = !DILocalVariable(name: "bps", arg: 3, scope: !5073, file: !2529, line: 790, type: !1147)
!5080 = !DILocalVariable(name: "bpe", arg: 4, scope: !5073, file: !2529, line: 791, type: !324)
!5081 = !DILocalVariable(name: "upcase", scope: !5073, file: !2529, line: 793, type: !334)
!5082 = !DILocalVariable(name: "radix", scope: !5073, file: !2529, line: 794, type: !5083)
!5083 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5084 = !DILocalVariable(name: "bp", scope: !5073, file: !2529, line: 795, type: !1147)
!5085 = !DILocalVariable(name: "lsv", scope: !5086, file: !2529, line: 798, type: !32)
!5086 = distinct !DILexicalBlock(scope: !5073, file: !2529, line: 797, column: 5)
!5087 = !DILocation(line: 0, scope: !5073)
!5088 = !DILocation(line: 793, column: 35, scope: !5073)
!5089 = !DILocation(line: 793, column: 24, scope: !5073)
!5090 = !DILocation(line: 793, column: 16, scope: !5073)
!5091 = !DILocation(line: 794, column: 29, scope: !5073)
!5092 = !DILocation(line: 795, column: 24, scope: !5073)
!5093 = !DILocation(line: 795, column: 17, scope: !5073)
!5094 = !DILocation(line: 797, column: 2, scope: !5073)
!5095 = !DILocation(line: 802, column: 9, scope: !5086)
!5096 = !DILocation(line: 798, column: 22, scope: !5086)
!5097 = !DILocation(line: 0, scope: !5086)
!5098 = !DILocation(line: 800, column: 16, scope: !5086)
!5099 = !DILocation(line: 800, column: 11, scope: !5086)
!5100 = !DILocation(line: 800, column: 4, scope: !5086)
!5101 = !DILocation(line: 800, column: 9, scope: !5086)
!5102 = !DILocation(line: 803, column: 18, scope: !5073)
!5103 = !DILocation(line: 803, column: 24, scope: !5073)
!5104 = !DILocation(line: 803, column: 2, scope: !5086)
!5105 = distinct !{!5105, !5094, !5106}
!5106 = !DILocation(line: 803, column: 37, scope: !5073)
!5107 = !DILocation(line: 808, column: 12, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !5073, file: !2529, line: 808, column: 6)
!5109 = !DILocation(line: 808, column: 6, scope: !5073)
!5110 = !DILocation(line: 809, column: 7, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5108, file: !2529, line: 808, column: 23)
!5112 = !DILocation(line: 813, column: 3, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5114, file: !2529, line: 811, column: 27)
!5114 = distinct !DILexicalBlock(scope: !5115, file: !2529, line: 811, column: 14)
!5115 = distinct !DILexicalBlock(scope: !5111, file: !2529, line: 809, column: 7)
!5116 = !DILocation(line: 0, scope: !5115)
!5117 = !DILocation(line: 818, column: 2, scope: !5073)
!5118 = distinct !DISubprogram(name: "store_count", scope: !2529, file: !2529, line: 1280, type: !5119, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !5123)
!5119 = !DISubroutineType(types: !5120)
!5120 = !{null, !5121, !108, !109}
!5121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5122, size: 32)
!5122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4644)
!5123 = !{!5124, !5125, !5126}
!5124 = !DILocalVariable(name: "conv", arg: 1, scope: !5118, file: !2529, line: 1280, type: !5121)
!5125 = !DILocalVariable(name: "dp", arg: 2, scope: !5118, file: !2529, line: 1281, type: !108)
!5126 = !DILocalVariable(name: "count", arg: 3, scope: !5118, file: !2529, line: 1282, type: !109)
!5127 = !DILocation(line: 0, scope: !5118)
!5128 = !DILocation(line: 1284, column: 38, scope: !5118)
!5129 = !DILocation(line: 1284, column: 2, scope: !5118)
!5130 = !DILocation(line: 1286, column: 4, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5118, file: !2529, line: 1284, column: 50)
!5132 = !DILocation(line: 1286, column: 14, scope: !5131)
!5133 = !DILocation(line: 1287, column: 3, scope: !5131)
!5134 = !DILocation(line: 1289, column: 24, scope: !5131)
!5135 = !DILocation(line: 1289, column: 22, scope: !5131)
!5136 = !DILocation(line: 1290, column: 3, scope: !5131)
!5137 = !DILocation(line: 1292, column: 18, scope: !5131)
!5138 = !DILocation(line: 1292, column: 4, scope: !5131)
!5139 = !DILocation(line: 1292, column: 16, scope: !5131)
!5140 = !DILocation(line: 1293, column: 3, scope: !5131)
!5141 = !DILocation(line: 1295, column: 4, scope: !5131)
!5142 = !DILocation(line: 1295, column: 15, scope: !5131)
!5143 = !DILocation(line: 1296, column: 3, scope: !5131)
!5144 = !DILocation(line: 1298, column: 22, scope: !5131)
!5145 = !DILocation(line: 1298, column: 4, scope: !5131)
!5146 = !DILocation(line: 1298, column: 20, scope: !5131)
!5147 = !DILocation(line: 1299, column: 3, scope: !5131)
!5148 = !DILocation(line: 1301, column: 21, scope: !5131)
!5149 = !DILocation(line: 1301, column: 4, scope: !5131)
!5150 = !DILocation(line: 1301, column: 19, scope: !5131)
!5151 = !DILocation(line: 1302, column: 3, scope: !5131)
!5152 = !DILocation(line: 1304, column: 4, scope: !5131)
!5153 = !DILocation(line: 1304, column: 17, scope: !5131)
!5154 = !DILocation(line: 1305, column: 3, scope: !5131)
!5155 = !DILocation(line: 1307, column: 4, scope: !5131)
!5156 = !DILocation(line: 1307, column: 20, scope: !5131)
!5157 = !DILocation(line: 1308, column: 3, scope: !5131)
!5158 = !DILocation(line: 1316, column: 1, scope: !5118)
!5159 = distinct !DISubprogram(name: "isupper", scope: !5160, file: !5160, line: 16, type: !288, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !5161)
!5160 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5161 = !{!5162}
!5162 = !DILocalVariable(name: "a", arg: 1, scope: !5159, file: !5160, line: 16, type: !109)
!5163 = !DILocation(line: 0, scope: !5159)
!5164 = !DILocation(line: 18, column: 29, scope: !5159)
!5165 = !DILocation(line: 18, column: 45, scope: !5159)
!5166 = !DILocation(line: 18, column: 2, scope: !5159)
!5167 = distinct !DISubprogram(name: "conversion_radix", scope: !2529, file: !2529, line: 761, type: !5168, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !5170)
!5168 = !DISubroutineType(types: !5169)
!5169 = !{!235, !226}
!5170 = !{!5171}
!5171 = !DILocalVariable(name: "specifier", arg: 1, scope: !5167, file: !2529, line: 761, type: !226)
!5172 = !DILocation(line: 0, scope: !5167)
!5173 = !DILocation(line: 763, column: 2, scope: !5167)
!5174 = !DILocation(line: 770, column: 3, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5167, file: !2529, line: 763, column: 21)
!5176 = !DILocation(line: 774, column: 3, scope: !5175)
!5177 = !DILocation(line: 0, scope: !5175)
!5178 = !DILocation(line: 776, column: 1, scope: !5167)
!5179 = distinct !DISubprogram(name: "extract_flags", scope: !2529, file: !2529, line: 339, type: !5021, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !5180)
!5180 = !{!5181, !5182, !5183}
!5181 = !DILocalVariable(name: "conv", arg: 1, scope: !5179, file: !2529, line: 339, type: !4677)
!5182 = !DILocalVariable(name: "sp", arg: 2, scope: !5179, file: !2529, line: 340, type: !324)
!5183 = !DILocalVariable(name: "loop", scope: !5179, file: !2529, line: 342, type: !334)
!5184 = !DILocation(line: 0, scope: !5179)
!5185 = !DILocation(line: 344, column: 2, scope: !5179)
!5186 = !DILocation(line: 345, column: 11, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5179, file: !2529, line: 344, column: 5)
!5188 = !DILocation(line: 345, column: 3, scope: !5187)
!5189 = !DILocation(line: 351, column: 4, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5187, file: !2529, line: 345, column: 16)
!5191 = !DILocation(line: 354, column: 4, scope: !5190)
!5192 = !DILocation(line: 357, column: 4, scope: !5190)
!5193 = !DILocation(line: 360, column: 4, scope: !5190)
!5194 = !DILocation(line: 0, scope: !5190)
!5195 = !DILocation(line: 370, column: 12, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5179, file: !2529, line: 370, column: 6)
!5197 = !DILocation(line: 370, column: 22, scope: !5196)
!5198 = !DILocation(line: 371, column: 19, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !5196, file: !2529, line: 370, column: 42)
!5200 = !DILocation(line: 372, column: 2, scope: !5199)
!5201 = !DILocation(line: 376, column: 2, scope: !5179)
!5202 = distinct !DISubprogram(name: "extract_width", scope: !2529, file: !2529, line: 388, type: !5021, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !5203)
!5203 = !{!5204, !5205, !5206, !5207}
!5204 = !DILocalVariable(name: "conv", arg: 1, scope: !5202, file: !2529, line: 388, type: !4677)
!5205 = !DILocalVariable(name: "sp", arg: 2, scope: !5202, file: !2529, line: 389, type: !324)
!5206 = !DILocalVariable(name: "wp", scope: !5202, file: !2529, line: 398, type: !324)
!5207 = !DILocalVariable(name: "width", scope: !5202, file: !2529, line: 399, type: !235)
!5208 = !DILocation(line: 0, scope: !5202)
!5209 = !DILocation(line: 391, column: 8, scope: !5202)
!5210 = !DILocation(line: 391, column: 22, scope: !5202)
!5211 = !DILocation(line: 393, column: 6, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5202, file: !2529, line: 393, column: 6)
!5213 = !DILocation(line: 393, column: 10, scope: !5212)
!5214 = !DILocation(line: 393, column: 6, scope: !5202)
!5215 = !DILocation(line: 394, column: 20, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5212, file: !2529, line: 393, column: 18)
!5217 = !DILocation(line: 395, column: 10, scope: !5216)
!5218 = !DILocation(line: 395, column: 3, scope: !5216)
!5219 = !DILocation(line: 399, column: 17, scope: !5202)
!5220 = !DILocation(line: 401, column: 6, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5202, file: !2529, line: 401, column: 6)
!5222 = !DILocation(line: 401, column: 9, scope: !5221)
!5223 = !DILocation(line: 401, column: 6, scope: !5202)
!5224 = !DILocation(line: 402, column: 23, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5221, file: !2529, line: 401, column: 16)
!5226 = !DILocation(line: 403, column: 9, scope: !5225)
!5227 = !DILocation(line: 403, column: 21, scope: !5225)
!5228 = !DILocation(line: 405, column: 11, scope: !5225)
!5229 = !DILocation(line: 404, column: 21, scope: !5225)
!5230 = !DILocation(line: 406, column: 2, scope: !5225)
!5231 = !DILocation(line: 409, column: 1, scope: !5202)
!5232 = distinct !DISubprogram(name: "extract_prec", scope: !2529, file: !2529, line: 420, type: !5021, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !5233)
!5233 = !{!5234, !5235, !5236}
!5234 = !DILocalVariable(name: "conv", arg: 1, scope: !5232, file: !2529, line: 420, type: !4677)
!5235 = !DILocalVariable(name: "sp", arg: 2, scope: !5232, file: !2529, line: 421, type: !324)
!5236 = !DILocalVariable(name: "prec", scope: !5232, file: !2529, line: 435, type: !235)
!5237 = !DILocation(line: 0, scope: !5232)
!5238 = !DILocation(line: 423, column: 24, scope: !5232)
!5239 = !DILocation(line: 423, column: 28, scope: !5232)
!5240 = !DILocation(line: 423, column: 8, scope: !5232)
!5241 = !DILocation(line: 423, column: 21, scope: !5232)
!5242 = !DILocation(line: 425, column: 6, scope: !5232)
!5243 = !DILocation(line: 428, column: 2, scope: !5232)
!5244 = !DILocation(line: 430, column: 6, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5232, file: !2529, line: 430, column: 6)
!5246 = !DILocation(line: 430, column: 10, scope: !5245)
!5247 = !DILocation(line: 430, column: 6, scope: !5232)
!5248 = !DILocation(line: 431, column: 19, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !5245, file: !2529, line: 430, column: 18)
!5250 = !DILocation(line: 432, column: 10, scope: !5249)
!5251 = !DILocation(line: 432, column: 3, scope: !5249)
!5252 = !DILocation(line: 435, column: 16, scope: !5232)
!5253 = !DILocation(line: 437, column: 8, scope: !5232)
!5254 = !DILocation(line: 437, column: 19, scope: !5232)
!5255 = !DILocation(line: 439, column: 10, scope: !5232)
!5256 = !DILocation(line: 438, column: 20, scope: !5232)
!5257 = !DILocation(line: 441, column: 9, scope: !5232)
!5258 = !DILocation(line: 442, column: 1, scope: !5232)
!5259 = distinct !DISubprogram(name: "extract_length", scope: !2529, file: !2529, line: 453, type: !5021, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !5260)
!5260 = !{!5261, !5262}
!5261 = !DILocalVariable(name: "conv", arg: 1, scope: !5259, file: !2529, line: 453, type: !4677)
!5262 = !DILocalVariable(name: "sp", arg: 2, scope: !5259, file: !2529, line: 454, type: !324)
!5263 = !DILocation(line: 0, scope: !5259)
!5264 = !DILocation(line: 456, column: 10, scope: !5259)
!5265 = !DILocation(line: 456, column: 2, scope: !5259)
!5266 = !DILocation(line: 458, column: 8, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5268, file: !2529, line: 458, column: 7)
!5268 = distinct !DILexicalBlock(scope: !5259, file: !2529, line: 456, column: 15)
!5269 = !DILocation(line: 458, column: 7, scope: !5267)
!5270 = !DILocation(line: 458, column: 13, scope: !5267)
!5271 = !DILocation(line: 0, scope: !5267)
!5272 = !DILocation(line: 458, column: 7, scope: !5268)
!5273 = !DILocation(line: 459, column: 21, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5267, file: !2529, line: 458, column: 21)
!5275 = !DILocation(line: 460, column: 4, scope: !5274)
!5276 = !DILocation(line: 461, column: 3, scope: !5274)
!5277 = !DILocation(line: 462, column: 21, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5267, file: !2529, line: 461, column: 10)
!5279 = !DILocation(line: 466, column: 8, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5268, file: !2529, line: 466, column: 7)
!5281 = !DILocation(line: 466, column: 7, scope: !5280)
!5282 = !DILocation(line: 466, column: 13, scope: !5280)
!5283 = !DILocation(line: 0, scope: !5280)
!5284 = !DILocation(line: 466, column: 7, scope: !5268)
!5285 = !DILocation(line: 467, column: 21, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5280, file: !2529, line: 466, column: 21)
!5287 = !DILocation(line: 468, column: 4, scope: !5286)
!5288 = !DILocation(line: 469, column: 3, scope: !5286)
!5289 = !DILocation(line: 470, column: 21, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5280, file: !2529, line: 469, column: 10)
!5291 = !DILocation(line: 474, column: 9, scope: !5268)
!5292 = !DILocation(line: 474, column: 20, scope: !5268)
!5293 = !DILocation(line: 475, column: 3, scope: !5268)
!5294 = !DILocation(line: 476, column: 3, scope: !5268)
!5295 = !DILocation(line: 478, column: 9, scope: !5268)
!5296 = !DILocation(line: 478, column: 20, scope: !5268)
!5297 = !DILocation(line: 479, column: 3, scope: !5268)
!5298 = !DILocation(line: 480, column: 3, scope: !5268)
!5299 = !DILocation(line: 482, column: 9, scope: !5268)
!5300 = !DILocation(line: 482, column: 20, scope: !5268)
!5301 = !DILocation(line: 483, column: 3, scope: !5268)
!5302 = !DILocation(line: 484, column: 3, scope: !5268)
!5303 = !DILocation(line: 486, column: 9, scope: !5268)
!5304 = !DILocation(line: 486, column: 20, scope: !5268)
!5305 = !DILocation(line: 487, column: 3, scope: !5268)
!5306 = !DILocation(line: 492, column: 21, scope: !5268)
!5307 = !DILocation(line: 493, column: 3, scope: !5268)
!5308 = !DILocation(line: 495, column: 9, scope: !5268)
!5309 = !DILocation(line: 495, column: 20, scope: !5268)
!5310 = !DILocation(line: 496, column: 3, scope: !5268)
!5311 = !DILocation(line: 498, column: 2, scope: !5259)
!5312 = distinct !DISubprogram(name: "extract_specifier", scope: !2529, file: !2529, line: 513, type: !5021, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !5313)
!5313 = !{!5314, !5315, !5316, !5317}
!5314 = !DILocalVariable(name: "conv", arg: 1, scope: !5312, file: !2529, line: 513, type: !4677)
!5315 = !DILocalVariable(name: "sp", arg: 2, scope: !5312, file: !2529, line: 514, type: !324)
!5316 = !DILocalVariable(name: "unsupported", scope: !5312, file: !2529, line: 516, type: !334)
!5317 = !DILabel(scope: !5318, name: "int_conv", file: !2529, line: 526)
!5318 = distinct !DILexicalBlock(scope: !5312, file: !2529, line: 520, column: 27)
!5319 = !DILocation(line: 0, scope: !5312)
!5320 = !DILocation(line: 518, column: 20, scope: !5312)
!5321 = !DILocation(line: 518, column: 8, scope: !5312)
!5322 = !DILocation(line: 518, column: 18, scope: !5312)
!5323 = !DILocation(line: 520, column: 2, scope: !5312)
!5324 = !DILocation(line: 525, column: 3, scope: !5318)
!5325 = !DILocation(line: 0, scope: !5318)
!5326 = !DILocation(line: 526, column: 1, scope: !5318)
!5327 = !DILocation(line: 528, column: 24, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !5318, file: !2529, line: 528, column: 7)
!5329 = !DILocation(line: 528, column: 7, scope: !5318)
!5330 = !DILocation(line: 535, column: 23, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5318, file: !2529, line: 535, column: 7)
!5332 = !DILocation(line: 535, column: 7, scope: !5318)
!5333 = !DILocation(line: 536, column: 36, scope: !5334)
!5334 = distinct !DILexicalBlock(scope: !5331, file: !2529, line: 535, column: 31)
!5335 = !DILocation(line: 537, column: 3, scope: !5334)
!5336 = !DILocation(line: 570, column: 9, scope: !5318)
!5337 = !DILocation(line: 570, column: 23, scope: !5318)
!5338 = !DILocation(line: 575, column: 4, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5340, file: !2529, line: 573, column: 48)
!5340 = distinct !DILexicalBlock(scope: !5318, file: !2529, line: 573, column: 7)
!5341 = !DILocation(line: 603, column: 9, scope: !5318)
!5342 = !DILocation(line: 603, column: 23, scope: !5318)
!5343 = !DILocation(line: 605, column: 24, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5318, file: !2529, line: 605, column: 7)
!5345 = !DILocation(line: 605, column: 7, scope: !5318)
!5346 = !DILocation(line: 612, column: 9, scope: !5318)
!5347 = !DILocation(line: 612, column: 23, scope: !5318)
!5348 = !DILocation(line: 619, column: 24, scope: !5349)
!5349 = distinct !DILexicalBlock(scope: !5318, file: !2529, line: 619, column: 7)
!5350 = !DILocation(line: 619, column: 7, scope: !5318)
!5351 = !DILocation(line: 625, column: 9, scope: !5318)
!5352 = !DILocation(line: 625, column: 17, scope: !5318)
!5353 = !DILocation(line: 626, column: 3, scope: !5318)
!5354 = !DILocation(line: 629, column: 20, scope: !5312)
!5355 = !DILocation(line: 629, column: 8, scope: !5312)
!5356 = !DILocation(line: 518, column: 23, scope: !5312)
!5357 = !DILocation(line: 631, column: 2, scope: !5312)
!5358 = distinct !DISubprogram(name: "extract_decimal", scope: !2529, file: !2529, line: 318, type: !5359, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !5362)
!5359 = !DISubroutineType(types: !5360)
!5360 = !{!235, !5361}
!5361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !324, size: 32)
!5362 = !{!5363, !5364, !5365}
!5363 = !DILocalVariable(name: "str", arg: 1, scope: !5358, file: !2529, line: 318, type: !5361)
!5364 = !DILocalVariable(name: "sp", scope: !5358, file: !2529, line: 320, type: !324)
!5365 = !DILocalVariable(name: "val", scope: !5358, file: !2529, line: 321, type: !235)
!5366 = !DILocation(line: 0, scope: !5358)
!5367 = !DILocation(line: 320, column: 19, scope: !5358)
!5368 = !DILocation(line: 323, column: 37, scope: !5358)
!5369 = !DILocation(line: 323, column: 17, scope: !5358)
!5370 = !DILocation(line: 323, column: 9, scope: !5358)
!5371 = !DILocation(line: 323, column: 2, scope: !5358)
!5372 = !DILocation(line: 324, column: 13, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !5358, file: !2529, line: 323, column: 43)
!5374 = !DILocation(line: 324, column: 24, scope: !5373)
!5375 = !DILocation(line: 324, column: 19, scope: !5373)
!5376 = !DILocation(line: 324, column: 27, scope: !5373)
!5377 = distinct !{!5377, !5371, !5378}
!5378 = !DILocation(line: 325, column: 2, scope: !5358)
!5379 = !DILocation(line: 326, column: 7, scope: !5358)
!5380 = !DILocation(line: 327, column: 2, scope: !5358)
!5381 = distinct !DISubprogram(name: "isdigit", scope: !5160, file: !5160, line: 43, type: !288, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !5382)
!5382 = !{!5383}
!5383 = !DILocalVariable(name: "a", arg: 1, scope: !5381, file: !5160, line: 43, type: !109)
!5384 = !DILocation(line: 0, scope: !5381)
!5385 = !DILocation(line: 45, column: 29, scope: !5381)
!5386 = !DILocation(line: 45, column: 45, scope: !5381)
!5387 = !DILocation(line: 45, column: 2, scope: !5381)
!5388 = distinct !DISubprogram(name: "assert_post_action", scope: !5389, file: !5389, line: 26, type: !5390, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2562, retainedNodes: !5392)
!5389 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5390 = !DISubroutineType(types: !5391)
!5391 = !{null, !324, !32}
!5392 = !{!5393, !5394}
!5393 = !DILocalVariable(name: "file", arg: 1, scope: !5388, file: !5389, line: 26, type: !324)
!5394 = !DILocalVariable(name: "line", arg: 2, scope: !5388, file: !5389, line: 26, type: !32)
!5395 = !DILocation(line: 0, scope: !5388)
!5396 = !DILocation(line: 43, column: 2, scope: !5397)
!5397 = distinct !DILexicalBlock(scope: !5388, file: !5389, line: 43, column: 2)
!5398 = !{i64 2154750337, i64 2154750353, i64 2154750379, i64 2154750407, i64 2154750427}
!5399 = !DILocation(line: 44, column: 1, scope: !5388)
!5400 = distinct !DISubprogram(name: "assert_print", scope: !5389, file: !5389, line: 46, type: !3660, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2562, retainedNodes: !5401)
!5401 = !{!5402, !5403}
!5402 = !DILocalVariable(name: "fmt", arg: 1, scope: !5400, file: !5389, line: 46, type: !324)
!5403 = !DILocalVariable(name: "ap", scope: !5400, file: !5389, line: 48, type: !5404)
!5404 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3592, line: 99, baseType: !5405)
!5405 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3592, line: 40, baseType: !5406)
!5406 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5389, baseType: !5407)
!5407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5408)
!5408 = !{!5409}
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5407, file: !5389, line: 48, baseType: !108, size: 32)
!5410 = !DILocation(line: 0, scope: !5400)
!5411 = !DILocation(line: 48, column: 2, scope: !5400)
!5412 = !DILocation(line: 48, column: 10, scope: !5400)
!5413 = !DILocation(line: 50, column: 2, scope: !5400)
!5414 = !DILocation(line: 52, column: 2, scope: !5400)
!5415 = !DILocation(line: 54, column: 2, scope: !5400)
!5416 = !DILocation(line: 55, column: 1, scope: !5400)
!5417 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5418, file: !5418, line: 9, type: !3103, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !2018)
!5418 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!5419 = !DILocation(line: 11, column: 1, scope: !5417)
!5420 = !{i64 2147562138, i64 2147562181, i64 2147562221}
!5421 = !DILocation(line: 12, column: 1, scope: !5417)
!5422 = !{i64 2147566365, i64 2147566408, i64 2147566448}
!5423 = !DILocation(line: 13, column: 1, scope: !5417)
!5424 = !{i64 2147566574, i64 2147566617, i64 2147566657}
!5425 = !DILocation(line: 14, column: 1, scope: !5417)
!5426 = !{i64 2147566743, i64 2147566786, i64 2147566826}
!5427 = !DILocation(line: 15, column: 1, scope: !5417)
!5428 = !{i64 2147566906, i64 2147566949, i64 2147566989}
!5429 = !DILocation(line: 16, column: 1, scope: !5417)
!5430 = !{i64 2147567090, i64 2147567133, i64 2147567173}
!5431 = !DILocation(line: 17, column: 1, scope: !5417)
!5432 = !{i64 2147567269, i64 2147567312, i64 2147567352}
!5433 = !DILocation(line: 18, column: 1, scope: !5417)
!5434 = !{i64 2147567511, i64 2147567554, i64 2147567594}
!5435 = !DILocation(line: 19, column: 1, scope: !5417)
!5436 = !{i64 2147567746, i64 2147567789, i64 2147567829}
!5437 = !DILocation(line: 20, column: 1, scope: !5417)
!5438 = !{i64 2147567933, i64 2147567976, i64 2147568016}
!5439 = !DILocation(line: 21, column: 1, scope: !5417)
!5440 = !{i64 2147568149, i64 2147568192, i64 2147568232}
!5441 = !DILocation(line: 22, column: 1, scope: !5417)
!5442 = !{i64 2147568352, i64 2147568395, i64 2147568435}
!5443 = !DILocation(line: 23, column: 1, scope: !5417)
!5444 = !{i64 2147568555, i64 2147568598, i64 2147568638}
!5445 = !DILocation(line: 24, column: 1, scope: !5417)
!5446 = !{i64 2147568730, i64 2147568773, i64 2147568813}
!5447 = !DILocation(line: 25, column: 1, scope: !5417)
!5448 = !{i64 2147568938, i64 2147568981, i64 2147569021}
!5449 = !DILocation(line: 26, column: 1, scope: !5417)
!5450 = !{i64 2147569142, i64 2147569185, i64 2147569225}
!5451 = !DILocation(line: 27, column: 1, scope: !5417)
!5452 = !{i64 2147569335, i64 2147569378, i64 2147569418}
!5453 = !DILocation(line: 28, column: 1, scope: !5417)
!5454 = !{i64 2147569537, i64 2147569580, i64 2147569620}
!5455 = !DILocation(line: 29, column: 1, scope: !5417)
!5456 = !{i64 2147569764, i64 2147569807, i64 2147569847}
!5457 = !DILocation(line: 30, column: 1, scope: !5417)
!5458 = !{i64 2147569966, i64 2147570009, i64 2147570049}
!5459 = !DILocation(line: 31, column: 1, scope: !5417)
!5460 = !{i64 2147570181, i64 2147570224, i64 2147570264}
!5461 = !DILocation(line: 32, column: 1, scope: !5417)
!5462 = !{i64 2147570353, i64 2147570396, i64 2147570436}
!5463 = !DILocation(line: 33, column: 1, scope: !5417)
!5464 = !{i64 2147570555, i64 2147570598, i64 2147570638}
!5465 = !DILocation(line: 34, column: 1, scope: !5417)
!5466 = !{i64 2147570781, i64 2147570824, i64 2147570864}
!5467 = !DILocation(line: 35, column: 1, scope: !5417)
!5468 = !{i64 2147570980, i64 2147571023, i64 2147571063}
!5469 = !DILocation(line: 36, column: 1, scope: !5417)
!5470 = !{i64 2147571155, i64 2147571198, i64 2147571238}
!5471 = !DILocation(line: 37, column: 1, scope: !5417)
!5472 = !{i64 2147571408, i64 2147571451, i64 2147571491}
!5473 = !DILocation(line: 38, column: 1, scope: !5417)
!5474 = !{i64 2147571649, i64 2147571692, i64 2147571732}
!5475 = !DILocation(line: 39, column: 1, scope: !5417)
!5476 = !{i64 2147571884, i64 2147571927, i64 2147571967}
!5477 = !DILocation(line: 40, column: 1, scope: !5417)
!5478 = !{i64 2147572116, i64 2147572159, i64 2147572199}
!5479 = !DILocation(line: 41, column: 1, scope: !5417)
!5480 = !{i64 2147572342, i64 2147572385, i64 2147572425}
!5481 = !DILocation(line: 42, column: 1, scope: !5417)
!5482 = !{i64 2147572568, i64 2147572611, i64 2147572651}
!5483 = !DILocation(line: 43, column: 1, scope: !5417)
!5484 = !{i64 2147572794, i64 2147572837, i64 2147572877}
!5485 = !DILocation(line: 44, column: 1, scope: !5417)
!5486 = !{i64 2147573029, i64 2147573072, i64 2147573112}
!5487 = !DILocation(line: 45, column: 1, scope: !5417)
!5488 = !{i64 2147573255, i64 2147573298, i64 2147573338}
!5489 = !DILocation(line: 46, column: 1, scope: !5417)
!5490 = !{i64 2147573502, i64 2147573545, i64 2147573585}
!5491 = !DILocation(line: 47, column: 1, scope: !5417)
!5492 = !{i64 2147573731, i64 2147573774, i64 2147573814}
!5493 = !DILocation(line: 48, column: 1, scope: !5417)
!5494 = !{i64 2147573963, i64 2147574006, i64 2147574046}
!5495 = !DILocation(line: 49, column: 1, scope: !5417)
!5496 = !{i64 2147574207, i64 2147574250, i64 2147574290}
!5497 = !DILocation(line: 50, column: 1, scope: !5417)
!5498 = !{i64 2147574445, i64 2147574488, i64 2147574528}
!5499 = !DILocation(line: 51, column: 1, scope: !5417)
!5500 = !{i64 2147574719, i64 2147574762, i64 2147574802}
!5501 = !DILocation(line: 52, column: 1, scope: !5417)
!5502 = !{i64 2147574957, i64 2147575000, i64 2147575040}
!5503 = !DILocation(line: 53, column: 1, scope: !5417)
!5504 = !{i64 2147579271, i64 2147579314, i64 2147579354}
!5505 = !DILocation(line: 54, column: 1, scope: !5417)
!5506 = !{i64 2147579515, i64 2147579558, i64 2147579598}
!5507 = !DILocation(line: 55, column: 1, scope: !5417)
!5508 = !{i64 2147579750, i64 2147579793, i64 2147579833}
!5509 = !DILocation(line: 56, column: 1, scope: !5417)
!5510 = !{i64 2147580000, i64 2147580043, i64 2147580083}
!5511 = !DILocation(line: 57, column: 1, scope: !5417)
!5512 = !{i64 2147580247, i64 2147580290, i64 2147580330}
!5513 = !DILocation(line: 58, column: 1, scope: !5417)
!5514 = !{i64 2147580482, i64 2147580525, i64 2147580565}
!5515 = !DILocation(line: 59, column: 1, scope: !5417)
!5516 = !{i64 2147580717, i64 2147580760, i64 2147580800}
!5517 = !DILocation(line: 60, column: 1, scope: !5417)
!5518 = !{i64 2147580952, i64 2147580995, i64 2147581035}
!5519 = !DILocation(line: 61, column: 1, scope: !5417)
!5520 = !{i64 2147581190, i64 2147581233, i64 2147581273}
!5521 = !DILocation(line: 62, column: 1, scope: !5417)
!5522 = !{i64 2147581431, i64 2147581474, i64 2147581514}
!5523 = !DILocation(line: 63, column: 1, scope: !5417)
!5524 = !{i64 2147581711, i64 2147581754, i64 2147581794}
!5525 = !DILocation(line: 64, column: 1, scope: !5417)
!5526 = !{i64 2147581970, i64 2147582013, i64 2147582053}
!5527 = !DILocation(line: 65, column: 1, scope: !5417)
!5528 = !{i64 2147582199, i64 2147582242, i64 2147582282}
!5529 = !DILocation(line: 66, column: 1, scope: !5417)
!5530 = !{i64 2147582425, i64 2147582468, i64 2147582508}
!5531 = !DILocation(line: 67, column: 1, scope: !5417)
!5532 = !{i64 2147582663, i64 2147582706, i64 2147582746}
!5533 = !DILocation(line: 68, column: 1, scope: !5417)
!5534 = !{i64 2147582892, i64 2147582935, i64 2147582975}
!5535 = !DILocation(line: 69, column: 1, scope: !5417)
!5536 = !{i64 2147583100, i64 2147583143, i64 2147583183}
!5537 = !DILocation(line: 70, column: 1, scope: !5417)
!5538 = !{i64 2147583311, i64 2147583354, i64 2147583394}
!5539 = !DILocation(line: 71, column: 1, scope: !5417)
!5540 = !{i64 2147583546, i64 2147583589, i64 2147583629}
!5541 = !DILocation(line: 72, column: 1, scope: !5417)
!5542 = !{i64 2147583775, i64 2147583818, i64 2147583858}
!5543 = !DILocation(line: 73, column: 1, scope: !5417)
!5544 = !{i64 2147584013, i64 2147584056, i64 2147584096}
!5545 = !DILocation(line: 74, column: 1, scope: !5417)
!5546 = !{i64 2147584245, i64 2147584288, i64 2147584328}
!5547 = !DILocation(line: 75, column: 1, scope: !5417)
!5548 = !{i64 2147584471, i64 2147584514, i64 2147584554}
!5549 = !DILocation(line: 76, column: 1, scope: !5417)
!5550 = !{i64 2147584688, i64 2147584731, i64 2147584771}
!5551 = !DILocation(line: 77, column: 1, scope: !5417)
!5552 = !{i64 2147584920, i64 2147584963, i64 2147585003}
!5553 = !DILocation(line: 78, column: 1, scope: !5417)
!5554 = !{i64 2147585146, i64 2147585189, i64 2147585229}
!5555 = !DILocation(line: 79, column: 1, scope: !5417)
!5556 = !{i64 2147585360, i64 2147585403, i64 2147585443}
!5557 = !DILocation(line: 80, column: 1, scope: !5417)
!5558 = !{i64 2147585580, i64 2147585623, i64 2147585663}
!5559 = !DILocation(line: 81, column: 1, scope: !5417)
!5560 = !{i64 2147585812, i64 2147585855, i64 2147585895}
!5561 = !DILocation(line: 82, column: 1, scope: !5417)
!5562 = !{i64 2147586020, i64 2147586063, i64 2147586103}
!5563 = !DILocation(line: 83, column: 1, scope: !5417)
!5564 = !{i64 2147586225, i64 2147586268, i64 2147586308}
!5565 = !DILocation(line: 84, column: 1, scope: !5417)
!5566 = !{i64 2147586442, i64 2147586485, i64 2147586525}
!5567 = !DILocation(line: 85, column: 1, scope: !5417)
!5568 = !{i64 2147586656, i64 2147586699, i64 2147586739}
!5569 = !DILocation(line: 86, column: 1, scope: !5417)
!5570 = !{i64 2147586882, i64 2147586925, i64 2147586965}
!5571 = !DILocation(line: 87, column: 1, scope: !5417)
!5572 = !{i64 2147587102, i64 2147587145, i64 2147587185}
!5573 = !DILocation(line: 88, column: 1, scope: !5417)
!5574 = !{i64 2147591368, i64 2147591411, i64 2147591451}
!5575 = !DILocation(line: 89, column: 1, scope: !5417)
!5576 = !{i64 2147591600, i64 2147591643, i64 2147591683}
!5577 = !DILocation(line: 90, column: 1, scope: !5417)
!5578 = !{i64 2147591835, i64 2147591878, i64 2147591918}
!5579 = !DILocation(line: 91, column: 1, scope: !5417)
!5580 = !{i64 2147592085, i64 2147592128, i64 2147592168}
!5581 = !DILocation(line: 92, column: 1, scope: !5417)
!5582 = !{i64 2147592335, i64 2147592378, i64 2147592418}
!5583 = !DILocation(line: 93, column: 1, scope: !5417)
!5584 = !{i64 2147592573, i64 2147592616, i64 2147592656}
!5585 = !DILocation(line: 94, column: 1, scope: !5417)
!5586 = !{i64 2147592784, i64 2147592827, i64 2147592867}
!5587 = !DILocation(line: 95, column: 1, scope: !5417)
!5588 = !{i64 2147593001, i64 2147593044, i64 2147593084}
!5589 = !DILocation(line: 96, column: 1, scope: !5417)
!5590 = !{i64 2147593197, i64 2147593240, i64 2147593280}
!5591 = !DILocation(line: 97, column: 1, scope: !5417)
!5592 = !{i64 2147593399, i64 2147593442, i64 2147593482}
!5593 = !DILocation(line: 98, column: 1, scope: !5417)
!5594 = !{i64 2147593592, i64 2147593635, i64 2147593675}
!5595 = !DILocation(line: 99, column: 1, scope: !5417)
!5596 = !{i64 2147593800, i64 2147593843, i64 2147593883}
!5597 = !DILocation(line: 100, column: 1, scope: !5417)
!5598 = !{i64 2147593996, i64 2147594039, i64 2147594079}
!5599 = !DILocation(line: 101, column: 1, scope: !5417)
!5600 = !{i64 2147594204, i64 2147594247, i64 2147594287}
!5601 = !DILocation(line: 102, column: 1, scope: !5417)
!5602 = !{i64 2147594415, i64 2147594458, i64 2147594498}
!5603 = !DILocation(line: 103, column: 1, scope: !5417)
!5604 = !{i64 2147594614, i64 2147594657, i64 2147594697}
!5605 = !DILocation(line: 104, column: 1, scope: !5417)
!5606 = !{i64 2147594789, i64 2147594832, i64 2147594872}
!5607 = !DILocation(line: 105, column: 1, scope: !5417)
!5608 = !{i64 2147594973, i64 2147595016, i64 2147595056}
!5609 = !DILocation(line: 106, column: 1, scope: !5417)
!5610 = !{i64 2147595175, i64 2147595218, i64 2147595258}
!5611 = !DILocation(line: 107, column: 1, scope: !5417)
!5612 = !{i64 2147595374, i64 2147595417, i64 2147595457}
!5613 = !DILocation(line: 108, column: 1, scope: !5417)
!5614 = !{i64 2147595540, i64 2147595583, i64 2147595623}
!5615 = !DILocation(line: 109, column: 1, scope: !5417)
!5616 = !{i64 2147595724, i64 2147595767, i64 2147595807}
!5617 = !DILocation(line: 110, column: 1, scope: !5417)
!5618 = !{i64 2147595914, i64 2147595957, i64 2147595997}
!5619 = !DILocation(line: 111, column: 1, scope: !5417)
!5620 = !{i64 2147596098, i64 2147596141, i64 2147596181}
!5621 = !DILocation(line: 112, column: 1, scope: !5417)
!5622 = !{i64 2147596312, i64 2147596355, i64 2147596395}
!5623 = !DILocation(line: 113, column: 1, scope: !5417)
!5624 = !{i64 2147596523, i64 2147596566, i64 2147596606}
!5625 = !DILocation(line: 114, column: 1, scope: !5417)
!5626 = !{i64 2147596746, i64 2147596789, i64 2147596829}
!5627 = !DILocation(line: 115, column: 1, scope: !5417)
!5628 = !{i64 2147596930, i64 2147596973, i64 2147597013}
!5629 = !DILocation(line: 116, column: 1, scope: !5417)
!5630 = !{i64 2147597144, i64 2147597187, i64 2147597227}
!5631 = !DILocation(line: 117, column: 1, scope: !5417)
!5632 = !{i64 2147597310, i64 2147597353, i64 2147597393}
!5633 = !DILocation(line: 118, column: 1, scope: !5417)
!5634 = !{i64 2147597491, i64 2147597534, i64 2147597574}
!5635 = !DILocation(line: 119, column: 1, scope: !5417)
!5636 = !{i64 2147597684, i64 2147597727, i64 2147597767}
!5637 = !DILocation(line: 120, column: 1, scope: !5417)
!5638 = !{i64 2147597910, i64 2147597953, i64 2147597993}
!5639 = !DILocation(line: 121, column: 1, scope: !5417)
!5640 = !{i64 2147598124, i64 2147598167, i64 2147598207}
!5641 = !DILocation(line: 122, column: 1, scope: !5417)
!5642 = !{i64 2147598350, i64 2147598393, i64 2147598433}
!5643 = !DILocation(line: 123, column: 1, scope: !5417)
!5644 = !{i64 2147598567, i64 2147598610, i64 2147598650}
!5645 = !DILocation(line: 124, column: 1, scope: !5417)
!5646 = !{i64 2147598844, i64 2147598887, i64 2147598927}
!5647 = !DILocation(line: 125, column: 1, scope: !5417)
!5648 = !{i64 2147599070, i64 2147599113, i64 2147599153}
!5649 = !DILocation(line: 126, column: 1, scope: !5417)
!5650 = !{i64 2147599278, i64 2147599321, i64 2147599361}
!5651 = !DILocation(line: 127, column: 1, scope: !5417)
!5652 = !{i64 2147599474, i64 2147599517, i64 2147599557}
!5653 = !DILocation(line: 128, column: 1, scope: !5417)
!5654 = !{i64 2147599739, i64 2147599782, i64 2147599822}
!5655 = !DILocation(line: 129, column: 1, scope: !5417)
!5656 = !{i64 2147599953, i64 2147599996, i64 2147600036}
!5657 = !DILocation(line: 130, column: 1, scope: !5417)
!5658 = !{i64 2147600128, i64 2147600171, i64 2147600211}
!5659 = !DILocation(line: 131, column: 1, scope: !5417)
!5660 = !{i64 2147600382, i64 2147600425, i64 2147600465}
!5661 = !DILocation(line: 132, column: 1, scope: !5417)
!5662 = !{i64 2147604642, i64 2147604685, i64 2147604725}
!5663 = !DILocation(line: 133, column: 1, scope: !5417)
!5664 = !{i64 2147604884, i64 2147604927, i64 2147604967}
!5665 = !DILocation(line: 134, column: 1, scope: !5417)
!5666 = !{i64 2147605047, i64 2147605090, i64 2147605130}
!5667 = !DILocation(line: 135, column: 1, scope: !5417)
!5668 = !{i64 2147605234, i64 2147605277, i64 2147605317}
!5669 = !DILocation(line: 136, column: 1, scope: !5417)
!5670 = !{i64 2147605427, i64 2147605470, i64 2147605510}
!5671 = !DILocation(line: 137, column: 1, scope: !5417)
!5672 = !{i64 2147605610, i64 2147605653, i64 2147605693}
!5673 = !DILocation(line: 138, column: 1, scope: !5417)
!5674 = !{i64 2147605824, i64 2147605867, i64 2147605907}
!5675 = !DILocation(line: 139, column: 1, scope: !5417)
!5676 = !{i64 2147606035, i64 2147606078, i64 2147606118}
!5677 = !DILocation(line: 140, column: 1, scope: !5417)
!5678 = !{i64 2147606255, i64 2147606298, i64 2147606338}
!5679 = !DILocation(line: 141, column: 1, scope: !5417)
!5680 = !{i64 2147606462, i64 2147606505, i64 2147606545}
!5681 = !DILocation(line: 142, column: 1, scope: !5417)
!5682 = !{i64 2147606735, i64 2147606778, i64 2147606818}
!5683 = !DILocation(line: 143, column: 1, scope: !5417)
!5684 = !{i64 2147606983, i64 2147607026, i64 2147607066}
!5685 = !DILocation(line: 144, column: 1, scope: !5417)
!5686 = !{i64 2147607182, i64 2147607225, i64 2147607265}
!5687 = !DILocation(line: 145, column: 1, scope: !5417)
!5688 = !{i64 2147607417, i64 2147607460, i64 2147607500}
!5689 = !DILocation(line: 146, column: 1, scope: !5417)
!5690 = !{i64 2147607667, i64 2147607710, i64 2147607750}
!5691 = !DILocation(line: 147, column: 1, scope: !5417)
!5692 = !{i64 2147607869, i64 2147607912, i64 2147607952}
!5693 = !DILocation(line: 148, column: 1, scope: !5417)
!5694 = !{i64 2147608092, i64 2147608135, i64 2147608175}
!5695 = !DILocation(line: 149, column: 1, scope: !5417)
!5696 = !{i64 2147608306, i64 2147608349, i64 2147608389}
!5697 = !DILocation(line: 150, column: 1, scope: !5417)
!5698 = !{i64 2147608550, i64 2147608593, i64 2147608633}
!5699 = !DILocation(line: 151, column: 1, scope: !5417)
!5700 = !{i64 2147608779, i64 2147608822, i64 2147608862}
!5701 = !DILocation(line: 152, column: 1, scope: !5417)
!5702 = !{i64 2147609008, i64 2147609051, i64 2147609091}
!5703 = !DILocation(line: 153, column: 1, scope: !5417)
!5704 = !{i64 2147609216, i64 2147609259, i64 2147609299}
!5705 = !DILocation(line: 154, column: 1, scope: !5417)
!5706 = !{i64 2147609454, i64 2147609497, i64 2147609537}
!5707 = !DILocation(line: 155, column: 1, scope: !5417)
!5708 = !{i64 2147609680, i64 2147609723, i64 2147609763}
!5709 = !DILocation(line: 156, column: 1, scope: !5417)
!5710 = !{i64 2147609939, i64 2147609982, i64 2147610022}
!5711 = !DILocation(line: 157, column: 1, scope: !5417)
!5712 = !{i64 2147610159, i64 2147610202, i64 2147610242}
!5713 = !DILocation(line: 158, column: 1, scope: !5417)
!5714 = !{i64 2147610391, i64 2147610434, i64 2147610474}
!5715 = !DILocation(line: 159, column: 1, scope: !5417)
!5716 = !{i64 2147610632, i64 2147610675, i64 2147610715}
!5717 = !DILocation(line: 160, column: 1, scope: !5417)
!5718 = !{i64 2147610873, i64 2147610916, i64 2147610956}
!5719 = !DILocation(line: 161, column: 1, scope: !5417)
!5720 = !{i64 2147611096, i64 2147611139, i64 2147611179}
!5721 = !DILocation(line: 162, column: 1, scope: !5417)
!5722 = !{i64 2147611313, i64 2147611356, i64 2147611396}
!5723 = !DILocation(line: 163, column: 1, scope: !5417)
!5724 = !{i64 2147611554, i64 2147611597, i64 2147611637}
!5725 = !DILocation(line: 164, column: 1, scope: !5417)
!5726 = !{i64 2147611741, i64 2147611784, i64 2147611824}
!5727 = !DILocation(line: 165, column: 1, scope: !5417)
!5728 = !{i64 2147611928, i64 2147611971, i64 2147612011}
!5729 = !DILocation(line: 166, column: 1, scope: !5417)
!5730 = !{i64 2147612091, i64 2147612134, i64 2147612174}
!5731 = !DILocation(line: 167, column: 1, scope: !5417)
!5732 = !{i64 2147612350, i64 2147612393, i64 2147612433}
!5733 = !DILocation(line: 168, column: 1, scope: !5417)
!5734 = !{i64 2147612573, i64 2147612616, i64 2147612656}
!5735 = !DILocation(line: 169, column: 1, scope: !5417)
!5736 = !{i64 2147612802, i64 2147612845, i64 2147612885}
!5737 = !DILocation(line: 170, column: 1, scope: !5417)
!5738 = !{i64 2147612998, i64 2147613041, i64 2147613081}
!5739 = !DILocation(line: 171, column: 1, scope: !5417)
!5740 = !{i64 2147617271, i64 2147617314, i64 2147617354}
!5741 = !DILocation(line: 172, column: 1, scope: !5417)
!5742 = !{i64 2147617492, i64 2147617535, i64 2147617575}
!5743 = !DILocation(line: 173, column: 1, scope: !5417)
!5744 = !{i64 2147617706, i64 2147617749, i64 2147617789}
!5745 = !DILocation(line: 174, column: 1, scope: !5417)
!5746 = !{i64 2147617896, i64 2147617939, i64 2147617979}
!5747 = !DILocation(line: 175, column: 1, scope: !5417)
!5748 = !{i64 2147618095, i64 2147618138, i64 2147618178}
!5749 = !DILocation(line: 176, column: 1, scope: !5417)
!5750 = !{i64 2147618300, i64 2147618343, i64 2147618383}
!5751 = !DILocation(line: 177, column: 1, scope: !5417)
!5752 = !{i64 2147618520, i64 2147618563, i64 2147618603}
!5753 = !DILocation(line: 178, column: 1, scope: !5417)
!5754 = !{i64 2147618721, i64 2147618764, i64 2147618804}
!5755 = !DILocation(line: 179, column: 1, scope: !5417)
!5756 = !{i64 2147618920, i64 2147618963, i64 2147619003}
!5757 = !DILocation(line: 180, column: 1, scope: !5417)
!5758 = !{i64 2147619125, i64 2147619168, i64 2147619208}
!5759 = !DILocation(line: 181, column: 1, scope: !5417)
!5760 = !{i64 2147619294, i64 2147619337, i64 2147619377}
!5761 = !DILocation(line: 182, column: 1, scope: !5417)
!5762 = !{i64 2147619490, i64 2147619533, i64 2147619573}
!5763 = !DILocation(line: 183, column: 1, scope: !5417)
!5764 = !{i64 2147619674, i64 2147619717, i64 2147619757}
!5765 = !DILocation(line: 184, column: 1, scope: !5417)
!5766 = !{i64 2147619861, i64 2147619904, i64 2147619944}
!5767 = !DILocation(line: 185, column: 1, scope: !5417)
!5768 = !{i64 2147620045, i64 2147620088, i64 2147620128}
!5769 = !DILocation(line: 186, column: 1, scope: !5417)
!5770 = !{i64 2147620241, i64 2147620284, i64 2147620324}
!5771 = !DILocation(line: 187, column: 1, scope: !5417)
!5772 = !{i64 2147620428, i64 2147620471, i64 2147620511}
!5773 = !DILocation(line: 188, column: 1, scope: !5417)
!5774 = !{i64 2147620640, i64 2147620683, i64 2147620723}
!5775 = !DILocation(line: 189, column: 1, scope: !5417)
!5776 = !{i64 2147620878, i64 2147620921, i64 2147620961}
!5777 = !DILocation(line: 190, column: 1, scope: !5417)
!5778 = !{i64 2147621108, i64 2147621151, i64 2147621191}
!5779 = !DILocation(line: 191, column: 1, scope: !5417)
!5780 = !{i64 2147621337, i64 2147621380, i64 2147621420}
!5781 = !DILocation(line: 192, column: 1, scope: !5417)
!5782 = !{i64 2147621524, i64 2147621567, i64 2147621607}
!5783 = !DILocation(line: 193, column: 1, scope: !5417)
!5784 = !{i64 2147621720, i64 2147621763, i64 2147621803}
!5785 = !DILocation(line: 194, column: 1, scope: !5417)
!5786 = !{i64 2147621928, i64 2147621971, i64 2147622011}
!5787 = !DILocation(line: 195, column: 1, scope: !5417)
!5788 = !{i64 2147622140, i64 2147622183, i64 2147622223}
!5789 = !DILocation(line: 196, column: 1, scope: !5417)
!5790 = !{i64 2147622339, i64 2147622382, i64 2147622422}
!5791 = !DILocation(line: 197, column: 1, scope: !5417)
!5792 = !{i64 2147622577, i64 2147622620, i64 2147622660}
!5793 = !DILocation(line: 198, column: 1, scope: !5417)
!5794 = !{i64 2147622773, i64 2147622816, i64 2147622856}
!5795 = !DILocation(line: 199, column: 1, scope: !5417)
!5796 = !{i64 2147622975, i64 2147623018, i64 2147623058}
!5797 = !DILocation(line: 200, column: 1, scope: !5417)
!5798 = !{i64 2147623168, i64 2147623211, i64 2147623251}
!5799 = !DILocation(line: 201, column: 1, scope: !5417)
!5800 = !{i64 2147623402, i64 2147623445, i64 2147623485}
!5801 = !DILocation(line: 202, column: 1, scope: !5417)
!5802 = !{i64 2147623565, i64 2147623608, i64 2147623648}
!5803 = !DILocation(line: 203, column: 1, scope: !5417)
!5804 = !{i64 2147623804, i64 2147623847, i64 2147623887}
!5805 = !DILocation(line: 204, column: 1, scope: !5417)
!5806 = !{i64 2147624043, i64 2147624086, i64 2147624126}
!5807 = !DILocation(line: 205, column: 1, scope: !5417)
!5808 = !{i64 2147624279, i64 2147624322, i64 2147624362}
!5809 = !DILocation(line: 206, column: 1, scope: !5417)
!5810 = !{i64 2147624509, i64 2147624552, i64 2147624592}
!5811 = !DILocation(line: 207, column: 1, scope: !5417)
!5812 = !{i64 2147624696, i64 2147624739, i64 2147624779}
!5813 = !DILocation(line: 208, column: 1, scope: !5417)
!5814 = !{i64 2147624895, i64 2147624938, i64 2147624978}
!5815 = !DILocation(line: 209, column: 1, scope: !5417)
!5816 = !{i64 2147625166, i64 2147625209, i64 2147625249}
!5817 = !DILocation(line: 210, column: 1, scope: !5417)
!5818 = !{i64 2147625341, i64 2147625384, i64 2147625424}
!5819 = !DILocation(line: 211, column: 1, scope: !5417)
!5820 = !{i64 2147625575, i64 2147625618, i64 2147625658}
!5821 = !DILocation(line: 212, column: 1, scope: !5417)
!5822 = !{i64 2147625783, i64 2147625826, i64 2147625866}
!5823 = !DILocation(line: 213, column: 1, scope: !5417)
!5824 = !{i64 2147626001, i64 2147626044, i64 2147626084}
!5825 = !DILocation(line: 214, column: 1, scope: !5417)
!5826 = !{i64 2147626191, i64 2147626234, i64 2147626274}
!5827 = !DILocation(line: 215, column: 1, scope: !5417)
!5828 = !{i64 2147630448, i64 2147630491, i64 2147630531}
!5829 = !DILocation(line: 216, column: 1, scope: !5417)
!5830 = !{i64 2147630654, i64 2147630697, i64 2147630737}
!5831 = !DILocation(line: 217, column: 1, scope: !5417)
!5832 = !{i64 2147630859, i64 2147630902, i64 2147630942}
!5833 = !DILocation(line: 218, column: 1, scope: !5417)
!5834 = !{i64 2147631073, i64 2147631116, i64 2147631156}
!5835 = !DILocation(line: 219, column: 1, scope: !5417)
!5836 = !{i64 2147631299, i64 2147631342, i64 2147631382}
!5837 = !DILocation(line: 220, column: 1, scope: !5417)
!5838 = !{i64 2147631531, i64 2147631574, i64 2147631614}
!5839 = !DILocation(line: 221, column: 1, scope: !5417)
!5840 = !{i64 2147631715, i64 2147631758, i64 2147631798}
!5841 = !DILocation(line: 222, column: 1, scope: !5417)
!5842 = !{i64 2147631924, i64 2147631967, i64 2147632007}
!5843 = !DILocation(line: 223, column: 1, scope: !5417)
!5844 = !{i64 2147632108, i64 2147632151, i64 2147632191}
!5845 = !DILocation(line: 224, column: 1, scope: !5417)
!5846 = !{i64 2147632334, i64 2147632377, i64 2147632417}
!5847 = !DILocation(line: 225, column: 1, scope: !5417)
!5848 = !{i64 2147632560, i64 2147632603, i64 2147632643}
!5849 = !DILocation(line: 226, column: 1, scope: !5417)
!5850 = !{i64 2147632786, i64 2147632829, i64 2147632869}
!5851 = !DILocation(line: 227, column: 1, scope: !5417)
!5852 = !{i64 2147633012, i64 2147633055, i64 2147633095}
!5853 = !DILocation(line: 228, column: 1, scope: !5417)
!5854 = !{i64 2147633238, i64 2147633281, i64 2147633321}
!5855 = !DILocation(line: 229, column: 1, scope: !5417)
!5856 = !{i64 2147633470, i64 2147633513, i64 2147633553}
!5857 = !DILocation(line: 230, column: 1, scope: !5417)
!5858 = !{i64 2147633708, i64 2147633751, i64 2147633791}
!5859 = !DILocation(line: 231, column: 1, scope: !5417)
!5860 = !{i64 2147633928, i64 2147633971, i64 2147634011}
!5861 = !DILocation(line: 232, column: 1, scope: !5417)
!5862 = !{i64 2147634172, i64 2147634215, i64 2147634255}
!5863 = !DILocation(line: 233, column: 1, scope: !5417)
!5864 = !{i64 2147634413, i64 2147634456, i64 2147634496}
!5865 = !DILocation(line: 234, column: 1, scope: !5417)
!5866 = !{i64 2147634648, i64 2147634691, i64 2147634731}
!5867 = !DILocation(line: 235, column: 1, scope: !5417)
!5868 = !{i64 2147634880, i64 2147634923, i64 2147634963}
!5869 = !DILocation(line: 236, column: 1, scope: !5417)
!5870 = !{i64 2147635082, i64 2147635125, i64 2147635165}
!5871 = !DILocation(line: 237, column: 1, scope: !5417)
!5872 = !{i64 2147635332, i64 2147635375, i64 2147635415}
!5873 = !DILocation(line: 238, column: 1, scope: !5417)
!5874 = !{i64 2147635570, i64 2147635613, i64 2147635653}
!5875 = !DILocation(line: 239, column: 1, scope: !5417)
!5876 = !{i64 2147635754, i64 2147635797, i64 2147635837}
!5877 = !DILocation(line: 240, column: 1, scope: !5417)
!5878 = !{i64 2147635978, i64 2147636021, i64 2147636061}
!5879 = !DILocation(line: 241, column: 1, scope: !5417)
!5880 = !{i64 2147636216, i64 2147636259, i64 2147636299}
!5881 = !DILocation(line: 242, column: 1, scope: !5417)
!5882 = !{i64 2147636454, i64 2147636497, i64 2147636537}
!5883 = !DILocation(line: 243, column: 1, scope: !5417)
!5884 = !{i64 2147636647, i64 2147636690, i64 2147636730}
!5885 = !DILocation(line: 244, column: 1, scope: !5417)
!5886 = !{i64 2147636900, i64 2147636943, i64 2147636983}
!5887 = !DILocation(line: 245, column: 1, scope: !5417)
!5888 = !{i64 2147637114, i64 2147637157, i64 2147637197}
!5889 = !DILocation(line: 246, column: 1, scope: !5417)
!5890 = !{i64 2147637322, i64 2147637365, i64 2147637405}
!5891 = !DILocation(line: 247, column: 1, scope: !5417)
!5892 = !{i64 2147637512, i64 2147637555, i64 2147637595}
!5893 = !DILocation(line: 248, column: 1, scope: !5417)
!5894 = !{i64 2147637726, i64 2147637769, i64 2147637809}
!5895 = !DILocation(line: 249, column: 1, scope: !5417)
!5896 = !{i64 2147637988, i64 2147638031, i64 2147638071}
!5897 = !DILocation(line: 250, column: 1, scope: !5417)
!5898 = !{i64 2147638199, i64 2147638242, i64 2147638282}
!5899 = !DILocation(line: 251, column: 1, scope: !5417)
!5900 = !{i64 2147638443, i64 2147638486, i64 2147638526}
!5901 = !DILocation(line: 252, column: 1, scope: !5417)
!5902 = !{i64 2147638654, i64 2147638697, i64 2147638737}
!5903 = !DILocation(line: 253, column: 1, scope: !5417)
!5904 = !{i64 2147642944, i64 2147642987, i64 2147643027}
!5905 = !DILocation(line: 254, column: 1, scope: !5417)
!5906 = !{i64 2147643209, i64 2147643252, i64 2147643292}
!5907 = !DILocation(line: 255, column: 1, scope: !5417)
!5908 = !{i64 2147643414, i64 2147643457, i64 2147643497}
!5909 = !DILocation(line: 256, column: 1, scope: !5417)
!5910 = !{i64 2147643637, i64 2147643680, i64 2147643720}
!5911 = !DILocation(line: 257, column: 1, scope: !5417)
!5912 = !{i64 2147643800, i64 2147643843, i64 2147643883}
!5913 = !DILocation(line: 258, column: 1, scope: !5417)
!5914 = !{i64 2147644005, i64 2147644048, i64 2147644088}
!5915 = !DILocation(line: 259, column: 1, scope: !5417)
!5916 = !{i64 2147644225, i64 2147644268, i64 2147644308}
!5917 = !DILocation(line: 260, column: 1, scope: !5417)
!5918 = !{i64 2147644439, i64 2147644482, i64 2147644522}
!5919 = !DILocation(line: 261, column: 1, scope: !5417)
!5920 = !{i64 2147644653, i64 2147644696, i64 2147644736}
!5921 = !DILocation(line: 262, column: 1, scope: !5417)
!5922 = !{i64 2147644864, i64 2147644907, i64 2147644947}
!5923 = !DILocation(line: 263, column: 1, scope: !5417)
!5924 = !{i64 2147645057, i64 2147645100, i64 2147645140}
!5925 = !DILocation(line: 264, column: 1, scope: !5417)
!5926 = !{i64 2147645256, i64 2147645299, i64 2147645339}
!5927 = !DILocation(line: 265, column: 1, scope: !5417)
!5928 = !{i64 2147645428, i64 2147645471, i64 2147645511}
!5929 = !DILocation(line: 266, column: 1, scope: !5417)
!5930 = !{i64 2147645621, i64 2147645664, i64 2147645704}
!5931 = !DILocation(line: 267, column: 1, scope: !5417)
!5932 = !{i64 2147645793, i64 2147645836, i64 2147645876}
!5933 = !DILocation(line: 268, column: 1, scope: !5417)
!5934 = !{i64 2147645983, i64 2147646026, i64 2147646066}
!5935 = !DILocation(line: 269, column: 1, scope: !5417)
!5936 = !{i64 2147646176, i64 2147646219, i64 2147646259}
!5937 = !DILocation(line: 270, column: 1, scope: !5417)
!5938 = !{i64 2147646372, i64 2147646415, i64 2147646455}
!5939 = !DILocation(line: 271, column: 1, scope: !5417)
!5940 = !{i64 2147646577, i64 2147646620, i64 2147646660}
!5941 = !DILocation(line: 272, column: 1, scope: !5417)
!5942 = !{i64 2147646804, i64 2147646847, i64 2147646887}
!5943 = !DILocation(line: 273, column: 1, scope: !5417)
!5944 = !{i64 2147647021, i64 2147647064, i64 2147647104}
!5945 = !DILocation(line: 274, column: 1, scope: !5417)
!5946 = !{i64 2147647313, i64 2147647356, i64 2147647396}
!5947 = !DILocation(line: 275, column: 1, scope: !5417)
!5948 = !{i64 2147647545, i64 2147647588, i64 2147647628}
!5949 = !DILocation(line: 276, column: 1, scope: !5417)
!5950 = !{i64 2147647762, i64 2147647805, i64 2147647845}
!5951 = !DILocation(line: 277, column: 1, scope: !5417)
!5952 = !{i64 2147647969, i64 2147648012, i64 2147648052}
!5953 = !DILocation(line: 278, column: 1, scope: !5417)
!5954 = !{i64 2147648170, i64 2147648213, i64 2147648253}
!5955 = !DILocation(line: 279, column: 1, scope: !5417)
!5956 = !{i64 2147648402, i64 2147648445, i64 2147648485}
!5957 = !DILocation(line: 280, column: 1, scope: !5417)
!5958 = !{i64 2147648610, i64 2147648653, i64 2147648693}
!5959 = !DILocation(line: 281, column: 1, scope: !5417)
!5960 = !{i64 2147648800, i64 2147648843, i64 2147648883}
!5961 = !DILocation(line: 282, column: 1, scope: !5417)
!5962 = !{i64 2147649026, i64 2147649069, i64 2147649109}
!5963 = !DILocation(line: 283, column: 1, scope: !5417)
!5964 = !{i64 2147649215, i64 2147649258, i64 2147649298}
!5965 = !DILocation(line: 284, column: 1, scope: !5417)
!5966 = !{i64 2147649486, i64 2147649529, i64 2147649569}
!5967 = !DILocation(line: 285, column: 1, scope: !5417)
!5968 = !{i64 2147649706, i64 2147649749, i64 2147649789}
!5969 = !DILocation(line: 286, column: 1, scope: !5417)
!5970 = !{i64 2147649959, i64 2147650002, i64 2147650042}
!5971 = !DILocation(line: 287, column: 1, scope: !5417)
!5972 = !{i64 2147650167, i64 2147650210, i64 2147650250}
!5973 = !DILocation(line: 288, column: 1, scope: !5417)
!5974 = !{i64 2147650399, i64 2147650442, i64 2147650482}
!5975 = !DILocation(line: 289, column: 1, scope: !5417)
!5976 = !{i64 2147650610, i64 2147650653, i64 2147650693}
!5977 = !DILocation(line: 290, column: 1, scope: !5417)
!5978 = !{i64 2147650800, i64 2147650843, i64 2147650883}
!5979 = !DILocation(line: 291, column: 1, scope: !5417)
!5980 = !{i64 2147651014, i64 2147651057, i64 2147651097}
!5981 = !DILocation(line: 292, column: 1, scope: !5417)
!5982 = !{i64 2147651213, i64 2147651256, i64 2147651296}
!5983 = !DILocation(line: 293, column: 1, scope: !5417)
!5984 = !{i64 2147651400, i64 2147651443, i64 2147651483}
!5985 = !DILocation(line: 294, column: 1, scope: !5417)
!5986 = !{i64 2147651608, i64 2147651651, i64 2147651691}
!5987 = !DILocation(line: 295, column: 1, scope: !5417)
!5988 = !{i64 2147651837, i64 2147651880, i64 2147651920}
!5989 = !DILocation(line: 296, column: 1, scope: !5417)
!5990 = !{i64 2147656100, i64 2147656143, i64 2147656183}
!5991 = !DILocation(line: 297, column: 1, scope: !5417)
!5992 = !{i64 2147656299, i64 2147656342, i64 2147656382}
!5993 = !DILocation(line: 298, column: 1, scope: !5417)
!5994 = !{i64 2147656516, i64 2147656559, i64 2147656599}
!5995 = !DILocation(line: 300, column: 1, scope: !5417)
!5996 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !309, file: !309, line: 30, type: !316, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !5997)
!5997 = !{!5998, !5999}
!5998 = !DILocalVariable(name: "arg", arg: 1, scope: !5996, file: !309, line: 30, type: !318)
!5999 = !DILocalVariable(name: "key", scope: !5996, file: !309, line: 32, type: !110)
!6000 = !DILocation(line: 0, scope: !5996)
!6001 = !DILocation(line: 37, column: 2, scope: !5996)
!6002 = !DILocation(line: 38, column: 2, scope: !5996)
!6003 = !DILocation(line: 55, column: 2, scope: !6004, inlinedAt: !6011)
!6004 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6005, file: !6005, line: 42, type: !6006, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !6008)
!6005 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6006 = !DISubroutineType(types: !6007)
!6007 = !{!32}
!6008 = !{!6009, !6010}
!6009 = !DILocalVariable(name: "key", scope: !6004, file: !6005, line: 44, type: !32)
!6010 = !DILocalVariable(name: "tmp", scope: !6004, file: !6005, line: 53, type: !32)
!6011 = distinct !DILocation(line: 40, column: 8, scope: !5996)
!6012 = !{i64 2133821}
!6013 = !DILocation(line: 0, scope: !6004, inlinedAt: !6011)
!6014 = !DILocalVariable(name: "key", arg: 1, scope: !6015, file: !6005, line: 84, type: !32)
!6015 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6005, file: !6005, line: 84, type: !6016, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !6018)
!6016 = !DISubroutineType(types: !6017)
!6017 = !{null, !32}
!6018 = !{!6014}
!6019 = !DILocation(line: 0, scope: !6015, inlinedAt: !6020)
!6020 = distinct !DILocation(line: 47, column: 2, scope: !5996)
!6021 = !DILocation(line: 95, column: 2, scope: !6015, inlinedAt: !6020)
!6022 = !{i64 2134638}
!6023 = !DILocation(line: 51, column: 18, scope: !5996)
!6024 = !DILocation(line: 53, column: 2, scope: !5996)
!6025 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6026, file: !6026, line: 1609, type: !3103, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !2018)
!6026 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6027 = !DILocation(line: 1611, column: 3, scope: !6025)
!6028 = !DILocation(line: 1612, column: 1, scope: !6025)
!6029 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6026, file: !6026, line: 1629, type: !3103, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !2018)
!6030 = !DILocation(line: 1631, column: 3, scope: !6029)
!6031 = !DILocation(line: 1632, column: 1, scope: !6029)
!6032 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !348, file: !348, line: 26, type: !354, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !6033)
!6033 = !{!6034}
!6034 = !DILocalVariable(name: "dev", arg: 1, scope: !6032, file: !348, line: 26, type: !356)
!6035 = !DILocation(line: 0, scope: !6032)
!6036 = !DILocation(line: 68, column: 2, scope: !6032)
!6037 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6038, file: !6038, line: 57, type: !6039, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !6085)
!6038 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6039 = !DISubroutineType(types: !6040)
!6040 = !{null, !32, !6041}
!6041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6042, size: 32)
!6042 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6043)
!6043 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2686, line: 141, baseType: !6044)
!6044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2686, line: 97, size: 256, elements: !6045)
!6045 = !{!6046}
!6046 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6044, file: !2686, line: 107, baseType: !6047, size: 256)
!6047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2686, line: 98, size: 256, elements: !6048)
!6048 = !{!6049, !6054, !6059, !6064, !6069, !6074, !6079, !6084}
!6049 = !DIDerivedType(tag: DW_TAG_member, scope: !6047, file: !2686, line: 99, baseType: !6050, size: 32)
!6050 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6047, file: !2686, line: 99, size: 32, elements: !6051)
!6051 = !{!6052, !6053}
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6050, file: !2686, line: 99, baseType: !110, size: 32)
!6053 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6050, file: !2686, line: 99, baseType: !110, size: 32)
!6054 = !DIDerivedType(tag: DW_TAG_member, scope: !6047, file: !2686, line: 100, baseType: !6055, size: 32, offset: 32)
!6055 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6047, file: !2686, line: 100, size: 32, elements: !6056)
!6056 = !{!6057, !6058}
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6055, file: !2686, line: 100, baseType: !110, size: 32)
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6055, file: !2686, line: 100, baseType: !110, size: 32)
!6059 = !DIDerivedType(tag: DW_TAG_member, scope: !6047, file: !2686, line: 101, baseType: !6060, size: 32, offset: 64)
!6060 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6047, file: !2686, line: 101, size: 32, elements: !6061)
!6061 = !{!6062, !6063}
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6060, file: !2686, line: 101, baseType: !110, size: 32)
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6060, file: !2686, line: 101, baseType: !110, size: 32)
!6064 = !DIDerivedType(tag: DW_TAG_member, scope: !6047, file: !2686, line: 102, baseType: !6065, size: 32, offset: 96)
!6065 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6047, file: !2686, line: 102, size: 32, elements: !6066)
!6066 = !{!6067, !6068}
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6065, file: !2686, line: 102, baseType: !110, size: 32)
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6065, file: !2686, line: 102, baseType: !110, size: 32)
!6069 = !DIDerivedType(tag: DW_TAG_member, scope: !6047, file: !2686, line: 103, baseType: !6070, size: 32, offset: 128)
!6070 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6047, file: !2686, line: 103, size: 32, elements: !6071)
!6071 = !{!6072, !6073}
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6070, file: !2686, line: 103, baseType: !110, size: 32)
!6073 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6070, file: !2686, line: 103, baseType: !110, size: 32)
!6074 = !DIDerivedType(tag: DW_TAG_member, scope: !6047, file: !2686, line: 104, baseType: !6075, size: 32, offset: 160)
!6075 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6047, file: !2686, line: 104, size: 32, elements: !6076)
!6076 = !{!6077, !6078}
!6077 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6075, file: !2686, line: 104, baseType: !110, size: 32)
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6075, file: !2686, line: 104, baseType: !110, size: 32)
!6079 = !DIDerivedType(tag: DW_TAG_member, scope: !6047, file: !2686, line: 105, baseType: !6080, size: 32, offset: 192)
!6080 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6047, file: !2686, line: 105, size: 32, elements: !6081)
!6081 = !{!6082, !6083}
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6080, file: !2686, line: 105, baseType: !110, size: 32)
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6080, file: !2686, line: 105, baseType: !110, size: 32)
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6047, file: !2686, line: 106, baseType: !110, size: 32, offset: 224)
!6085 = !{!6086, !6087}
!6086 = !DILocalVariable(name: "reason", arg: 1, scope: !6037, file: !6038, line: 57, type: !32)
!6087 = !DILocalVariable(name: "esf", arg: 2, scope: !6037, file: !6038, line: 57, type: !6041)
!6088 = !DILocation(line: 0, scope: !6037)
!6089 = !DILocation(line: 63, column: 2, scope: !6037)
!6090 = !DILocation(line: 64, column: 1, scope: !6037)
!6091 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6038, file: !6038, line: 82, type: !6092, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !6107)
!6092 = !DISubroutineType(types: !6093)
!6093 = !{null, !6041, !6094}
!6094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6095, size: 32)
!6095 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !198, line: 37, baseType: !6096)
!6096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !6097)
!6097 = !{!6098, !6099, !6100, !6101, !6102, !6103, !6104, !6105, !6106}
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6096, file: !198, line: 26, baseType: !110, size: 32)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6096, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6096, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6096, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6096, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6096, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6096, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6096, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6096, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!6107 = !{!6108, !6109, !6110}
!6108 = !DILocalVariable(name: "esf", arg: 1, scope: !6091, file: !6038, line: 82, type: !6041)
!6109 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6091, file: !6038, line: 82, type: !6094)
!6110 = !DILocalVariable(name: "reason", scope: !6091, file: !6038, line: 88, type: !32)
!6111 = !DILocation(line: 0, scope: !6091)
!6112 = !DILocation(line: 88, column: 35, scope: !6091)
!6113 = !DILocation(line: 108, column: 2, scope: !6091)
!6114 = !DILocation(line: 131, column: 1, scope: !6091)
!6115 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6038, file: !6038, line: 133, type: !6116, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !6118)
!6116 = !DISubroutineType(types: !6117)
!6117 = !{null, !108}
!6118 = !{!6119, !6120, !6121}
!6119 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6115, file: !6038, line: 133, type: !108)
!6120 = !DILocalVariable(name: "ssf_contents", scope: !6115, file: !6038, line: 135, type: !875)
!6121 = !DILocalVariable(name: "oops_esf", scope: !6115, file: !6038, line: 136, type: !6043)
!6122 = !DILocation(line: 0, scope: !6115)
!6123 = !DILocation(line: 136, column: 2, scope: !6115)
!6124 = !DILocation(line: 136, column: 15, scope: !6115)
!6125 = !DILocation(line: 139, column: 22, scope: !6115)
!6126 = !DILocation(line: 139, column: 17, scope: !6115)
!6127 = !DILocation(line: 139, column: 20, scope: !6115)
!6128 = !DILocation(line: 141, column: 2, scope: !6115)
!6129 = !DILocation(line: 142, column: 2, scope: !6115)
!6130 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6131, file: !6131, line: 40, type: !6016, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2577, retainedNodes: !6132)
!6131 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6132 = !{!6133}
!6133 = !DILocalVariable(name: "irq", arg: 1, scope: !6130, file: !6131, line: 40, type: !32)
!6134 = !DILocation(line: 0, scope: !6130)
!6135 = !DILocation(line: 42, column: 2, scope: !6130)
!6136 = !DILocation(line: 43, column: 1, scope: !6130)
!6137 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !536, file: !536, line: 1684, type: !6138, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2577, retainedNodes: !6140)
!6138 = !DISubroutineType(types: !6139)
!6139 = !{null, !782}
!6140 = !{!6141}
!6141 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6137, file: !536, line: 1684, type: !782)
!6142 = !DILocation(line: 0, scope: !6137)
!6143 = !DILocation(line: 1686, column: 23, scope: !6144)
!6144 = distinct !DILexicalBlock(scope: !6137, file: !536, line: 1686, column: 7)
!6145 = !DILocation(line: 1686, column: 7, scope: !6137)
!6146 = !DILocation(line: 1688, column: 5, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !6144, file: !536, line: 1687, column: 3)
!6148 = !{i64 2151026047}
!6149 = !DILocation(line: 1689, column: 81, scope: !6147)
!6150 = !DILocation(line: 1689, column: 60, scope: !6147)
!6151 = !DILocation(line: 1689, column: 34, scope: !6147)
!6152 = !DILocation(line: 1689, column: 5, scope: !6147)
!6153 = !DILocation(line: 1689, column: 43, scope: !6147)
!6154 = !DILocation(line: 1690, column: 5, scope: !6147)
!6155 = !{i64 2151026161}
!6156 = !DILocation(line: 1691, column: 3, scope: !6147)
!6157 = !DILocation(line: 1692, column: 1, scope: !6137)
!6158 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6131, file: !6131, line: 45, type: !6016, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2577, retainedNodes: !6159)
!6159 = !{!6160}
!6160 = !DILocalVariable(name: "irq", arg: 1, scope: !6158, file: !6131, line: 45, type: !32)
!6161 = !DILocation(line: 0, scope: !6158)
!6162 = !DILocation(line: 47, column: 2, scope: !6158)
!6163 = !DILocation(line: 48, column: 1, scope: !6158)
!6164 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !536, file: !536, line: 1722, type: !6138, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2577, retainedNodes: !6165)
!6165 = !{!6166}
!6166 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6164, file: !536, line: 1722, type: !782)
!6167 = !DILocation(line: 0, scope: !6164)
!6168 = !DILocation(line: 1724, column: 23, scope: !6169)
!6169 = distinct !DILexicalBlock(scope: !6164, file: !536, line: 1724, column: 7)
!6170 = !DILocation(line: 1724, column: 7, scope: !6164)
!6171 = !DILocation(line: 1726, column: 81, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !6169, file: !536, line: 1725, column: 3)
!6173 = !DILocation(line: 1726, column: 60, scope: !6172)
!6174 = !DILocation(line: 1726, column: 34, scope: !6172)
!6175 = !DILocation(line: 1726, column: 5, scope: !6172)
!6176 = !DILocation(line: 1726, column: 43, scope: !6172)
!6177 = !DILocation(line: 271, column: 3, scope: !6178, inlinedAt: !6180)
!6178 = distinct !DISubprogram(name: "__DSB", scope: !6179, file: !6179, line: 269, type: !3103, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2577, retainedNodes: !2018)
!6179 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6180 = distinct !DILocation(line: 1727, column: 5, scope: !6172)
!6181 = !{i64 3480430}
!6182 = !DILocation(line: 260, column: 3, scope: !6183, inlinedAt: !6184)
!6183 = distinct !DISubprogram(name: "__ISB", scope: !6179, file: !6179, line: 258, type: !3103, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2577, retainedNodes: !2018)
!6184 = distinct !DILocation(line: 1728, column: 5, scope: !6172)
!6185 = !{i64 3480147}
!6186 = !DILocation(line: 1729, column: 3, scope: !6172)
!6187 = !DILocation(line: 1730, column: 1, scope: !6164)
!6188 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6131, file: !6131, line: 50, type: !6189, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2577, retainedNodes: !6191)
!6189 = !DISubroutineType(types: !6190)
!6190 = !{!109, !32}
!6191 = !{!6192}
!6192 = !DILocalVariable(name: "irq", arg: 1, scope: !6188, file: !6131, line: 50, type: !32)
!6193 = !DILocation(line: 0, scope: !6188)
!6194 = !DILocation(line: 52, column: 20, scope: !6188)
!6195 = !DILocation(line: 52, column: 9, scope: !6188)
!6196 = !DILocation(line: 52, column: 41, scope: !6188)
!6197 = !DILocation(line: 52, column: 39, scope: !6188)
!6198 = !DILocation(line: 52, column: 2, scope: !6188)
!6199 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6131, file: !6131, line: 64, type: !6200, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2577, retainedNodes: !6202)
!6200 = !DISubroutineType(types: !6201)
!6201 = !{null, !32, !32, !110}
!6202 = !{!6203, !6204, !6205}
!6203 = !DILocalVariable(name: "irq", arg: 1, scope: !6199, file: !6131, line: 64, type: !32)
!6204 = !DILocalVariable(name: "prio", arg: 2, scope: !6199, file: !6131, line: 64, type: !32)
!6205 = !DILocalVariable(name: "flags", arg: 3, scope: !6199, file: !6131, line: 64, type: !110)
!6206 = !DILocation(line: 0, scope: !6199)
!6207 = !DILocation(line: 83, column: 8, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6209, file: !6131, line: 82, column: 9)
!6209 = distinct !DILexicalBlock(scope: !6199, file: !6131, line: 76, column: 6)
!6210 = !DILocation(line: 91, column: 2, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6212, file: !6131, line: 91, column: 2)
!6212 = distinct !DILexicalBlock(scope: !6199, file: !6131, line: 91, column: 2)
!6213 = !DILocation(line: 91, column: 2, scope: !6212)
!6214 = !DILocation(line: 91, column: 2, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6211, file: !6131, line: 91, column: 2)
!6216 = !DILocation(line: 95, column: 2, scope: !6199)
!6217 = !DILocation(line: 96, column: 1, scope: !6199)
!6218 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !536, file: !536, line: 1814, type: !6219, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2577, retainedNodes: !6221)
!6219 = !DISubroutineType(types: !6220)
!6220 = !{null, !782, !110}
!6221 = !{!6222, !6223}
!6222 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6218, file: !536, line: 1814, type: !782)
!6223 = !DILocalVariable(name: "priority", arg: 2, scope: !6218, file: !536, line: 1814, type: !110)
!6224 = !DILocation(line: 0, scope: !6218)
!6225 = !DILocation(line: 0, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6218, file: !536, line: 1816, column: 7)
!6227 = !DILocation(line: 1816, column: 7, scope: !6218)
!6228 = !DILocation(line: 1824, column: 1, scope: !6218)
!6229 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6131, file: !6131, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2577, retainedNodes: !6230)
!6230 = !{!6231}
!6231 = !DILocalVariable(name: "unused", arg: 1, scope: !6229, file: !6131, line: 155, type: !13)
!6232 = !DILocation(line: 0, scope: !6229)
!6233 = !DILocation(line: 159, column: 2, scope: !6229)
!6234 = !DILocation(line: 160, column: 1, scope: !6229)
!6235 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6236, file: !6236, line: 87, type: !3103, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !2018)
!6236 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6237 = !DILocation(line: 89, column: 2, scope: !6235)
!6238 = !DILocation(line: 90, column: 2, scope: !6235)
!6239 = !DILocation(line: 91, column: 1, scope: !6235)
!6240 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6236, file: !6236, line: 23, type: !3103, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2018)
!6241 = !DISubprogram(name: "z_arm_int_exit", scope: !6242, file: !6242, line: 153, type: !3103, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2018)
!6242 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6243 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6244, file: !6244, line: 256, type: !3103, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2625, retainedNodes: !2018)
!6244 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6245 = !DILocation(line: 258, column: 2, scope: !6243)
!6246 = !DILocation(line: 260, column: 2, scope: !6243)
!6247 = !DILocation(line: 262, column: 2, scope: !6243)
!6248 = !DILocation(line: 263, column: 2, scope: !6243)
!6249 = !DILocation(line: 267, column: 2, scope: !6243)
!6250 = !DILocation(line: 268, column: 2, scope: !6243)
!6251 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6244, file: !6244, line: 53, type: !3103, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2625, retainedNodes: !2018)
!6252 = !DILocation(line: 55, column: 12, scope: !6251)
!6253 = !DILocation(line: 271, column: 3, scope: !6254, inlinedAt: !6255)
!6254 = distinct !DISubprogram(name: "__DSB", scope: !6179, file: !6179, line: 269, type: !3103, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2625, retainedNodes: !2018)
!6255 = distinct !DILocation(line: 56, column: 2, scope: !6251)
!6256 = !{i64 3479101}
!6257 = !DILocation(line: 260, column: 3, scope: !6258, inlinedAt: !6259)
!6258 = distinct !DISubprogram(name: "__ISB", scope: !6179, file: !6179, line: 258, type: !3103, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2625, retainedNodes: !2018)
!6259 = distinct !DILocation(line: 57, column: 2, scope: !6251)
!6260 = !{i64 3478818}
!6261 = !DILocation(line: 58, column: 1, scope: !6251)
!6262 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6244, file: !6244, line: 96, type: !3103, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2625, retainedNodes: !2018)
!6263 = !DILocation(line: 103, column: 13, scope: !6262)
!6264 = !DILocation(line: 975, column: 3, scope: !6265, inlinedAt: !6268)
!6265 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6179, file: !6179, line: 971, type: !3385, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2625, retainedNodes: !6266)
!6266 = !{!6267}
!6267 = !DILocalVariable(name: "result", scope: !6265, file: !6179, line: 973, type: !110)
!6268 = distinct !DILocation(line: 189, column: 16, scope: !6262)
!6269 = !{i64 3499931}
!6270 = !DILocation(line: 0, scope: !6265, inlinedAt: !6268)
!6271 = !DILocation(line: 189, column: 32, scope: !6262)
!6272 = !DILocalVariable(name: "control", arg: 1, scope: !6273, file: !6179, line: 1001, type: !110)
!6273 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6179, file: !6179, line: 1001, type: !6274, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2625, retainedNodes: !6276)
!6274 = !DISubroutineType(types: !6275)
!6275 = !{null, !110}
!6276 = !{!6272}
!6277 = !DILocation(line: 0, scope: !6273, inlinedAt: !6278)
!6278 = distinct !DILocation(line: 189, column: 2, scope: !6262)
!6279 = !DILocation(line: 1003, column: 3, scope: !6273, inlinedAt: !6278)
!6280 = !{i64 3500651}
!6281 = !DILocation(line: 260, column: 3, scope: !6258, inlinedAt: !6282)
!6282 = distinct !DILocation(line: 1004, column: 3, scope: !6273, inlinedAt: !6278)
!6283 = !DILocation(line: 191, column: 1, scope: !6262)
!6284 = distinct !DISubprogram(name: "arch_swap", scope: !6285, file: !6285, line: 33, type: !6189, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !6286)
!6285 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6286 = !{!6287}
!6287 = !DILocalVariable(name: "key", arg: 1, scope: !6284, file: !6285, line: 33, type: !32)
!6288 = !DILocation(line: 0, scope: !6284)
!6289 = !DILocation(line: 36, column: 2, scope: !6284)
!6290 = !DILocation(line: 36, column: 17, scope: !6284)
!6291 = !DILocation(line: 36, column: 25, scope: !6284)
!6292 = !DILocation(line: 37, column: 37, scope: !6284)
!6293 = !DILocation(line: 37, column: 17, scope: !6284)
!6294 = !DILocation(line: 37, column: 35, scope: !6284)
!6295 = !DILocation(line: 41, column: 12, scope: !6284)
!6296 = !DILocalVariable(name: "key", arg: 1, scope: !6297, file: !6005, line: 84, type: !32)
!6297 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6005, file: !6005, line: 84, type: !6016, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !6298)
!6298 = !{!6296}
!6299 = !DILocation(line: 0, scope: !6297, inlinedAt: !6300)
!6300 = distinct !DILocation(line: 44, column: 2, scope: !6284)
!6301 = !DILocation(line: 95, column: 2, scope: !6297, inlinedAt: !6300)
!6302 = !{i64 2241165}
!6303 = !DILocation(line: 53, column: 9, scope: !6284)
!6304 = !DILocation(line: 53, column: 24, scope: !6284)
!6305 = !DILocation(line: 53, column: 2, scope: !6284)
!6306 = distinct !DISubprogram(name: "arch_new_thread", scope: !6307, file: !6307, line: 56, type: !6308, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2681, retainedNodes: !6426)
!6307 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6308 = !DISubroutineType(types: !6309)
!6309 = !{null, !6310, !6421, !1147, !215, !108, !108, !108}
!6310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6311, size: 32)
!6311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !6312)
!6312 = !{!6313, !6371, !6383, !6384, !6385, !6392, !6393, !6394, !6395, !6401, !6416}
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6311, file: !145, line: 247, baseType: !6314, size: 384)
!6314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !6315)
!6315 = !{!6316, !6340, !6347, !6348, !6349, !6358, !6359, !6360}
!6316 = !DIDerivedType(tag: DW_TAG_member, scope: !6314, file: !145, line: 60, baseType: !6317, size: 64)
!6317 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6314, file: !145, line: 60, size: 64, elements: !6318)
!6318 = !{!6319, !6334}
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6317, file: !145, line: 61, baseType: !6320, size: 64)
!6320 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !6321)
!6321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !6322)
!6322 = !{!6323, !6329}
!6323 = !DIDerivedType(tag: DW_TAG_member, scope: !6321, file: !128, line: 38, baseType: !6324, size: 32)
!6324 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6321, file: !128, line: 38, size: 32, elements: !6325)
!6325 = !{!6326, !6328}
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6324, file: !128, line: 39, baseType: !6327, size: 32)
!6327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6321, size: 32)
!6328 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6324, file: !128, line: 40, baseType: !6327, size: 32)
!6329 = !DIDerivedType(tag: DW_TAG_member, scope: !6321, file: !128, line: 42, baseType: !6330, size: 32, offset: 32)
!6330 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6321, file: !128, line: 42, size: 32, elements: !6331)
!6331 = !{!6332, !6333}
!6332 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6330, file: !128, line: 43, baseType: !6327, size: 32)
!6333 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6330, file: !128, line: 44, baseType: !6327, size: 32)
!6334 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6317, file: !145, line: 62, baseType: !6335, size: 64)
!6335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !6336)
!6336 = !{!6337}
!6337 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6335, file: !157, line: 50, baseType: !6338, size: 64)
!6338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6339, size: 64, elements: !162)
!6339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6335, size: 32)
!6340 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6314, file: !145, line: 68, baseType: !6341, size: 32, offset: 64)
!6341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6342, size: 32)
!6342 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !6343)
!6343 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !6344)
!6344 = !{!6345}
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6343, file: !123, line: 232, baseType: !6346, size: 64)
!6346 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !6321)
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6314, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6314, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!6349 = !DIDerivedType(tag: DW_TAG_member, scope: !6314, file: !145, line: 90, baseType: !6350, size: 16, offset: 112)
!6350 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6314, file: !145, line: 90, size: 16, elements: !6351)
!6351 = !{!6352, !6357}
!6352 = !DIDerivedType(tag: DW_TAG_member, scope: !6350, file: !145, line: 91, baseType: !6353, size: 16)
!6353 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6350, file: !145, line: 91, size: 16, elements: !6354)
!6354 = !{!6355, !6356}
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6353, file: !145, line: 96, baseType: !177, size: 8)
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6353, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!6357 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6350, file: !145, line: 100, baseType: !181, size: 16)
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6314, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!6359 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6314, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!6360 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6314, file: !145, line: 131, baseType: !6361, size: 192, offset: 192)
!6361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !6362)
!6362 = !{!6363, !6364, !6370}
!6363 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6361, file: !123, line: 245, baseType: !6320, size: 64)
!6364 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6361, file: !123, line: 246, baseType: !6365, size: 32, offset: 64)
!6365 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !6366)
!6366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6367, size: 32)
!6367 = !DISubroutineType(types: !6368)
!6368 = !{null, !6369}
!6369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6361, size: 32)
!6370 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6361, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!6371 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6311, file: !145, line: 250, baseType: !6372, size: 288, offset: 384)
!6372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !6373)
!6373 = !{!6374, !6375, !6376, !6377, !6378, !6379, !6380, !6381, !6382}
!6374 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6372, file: !198, line: 26, baseType: !110, size: 32)
!6375 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6372, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!6376 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6372, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!6377 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6372, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!6378 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6372, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!6379 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6372, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!6380 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6372, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!6381 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6372, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!6382 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6372, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!6383 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6311, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!6384 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6311, file: !145, line: 256, baseType: !6342, size: 64, offset: 704)
!6385 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6311, file: !145, line: 271, baseType: !6386, size: 128, offset: 768)
!6386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !6387)
!6387 = !{!6388, !6389, !6390, !6391}
!6388 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !6386, file: !145, line: 35, baseType: !215, size: 32)
!6389 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !6386, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !6386, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !6386, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !6311, file: !145, line: 274, baseType: !6310, size: 32, offset: 896)
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6311, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!6394 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6311, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6311, file: !145, line: 300, baseType: !6396, size: 96, offset: 1216)
!6396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !6397)
!6397 = !{!6398, !6399, !6400}
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6396, file: !145, line: 153, baseType: !22, size: 32)
!6399 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6396, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6396, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6311, file: !145, line: 325, baseType: !6402, size: 32, offset: 1312)
!6402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6403, size: 32)
!6403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !6404)
!6404 = !{!6405, !6411, !6412}
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6403, file: !119, line: 5074, baseType: !6406, size: 96)
!6406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !6407)
!6407 = !{!6408, !6409, !6410}
!6408 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6406, file: !244, line: 57, baseType: !247, size: 32)
!6409 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6406, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!6410 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6406, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!6411 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6403, file: !119, line: 5075, baseType: !6342, size: 64, offset: 96)
!6412 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6403, file: !119, line: 5076, baseType: !6413, size: 32, offset: 160)
!6413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !6414)
!6414 = !{!6415}
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6413, file: !254, line: 52, baseType: !22, size: 32)
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6311, file: !145, line: 343, baseType: !6417, size: 64, offset: 1344)
!6417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !6418)
!6418 = !{!6419, !6420}
!6419 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6417, file: !198, line: 63, baseType: !110, size: 32)
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6417, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!6421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6422, size: 32)
!6422 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !216, line: 44, baseType: !6423)
!6423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !273, line: 47, size: 8, elements: !6424)
!6424 = !{!6425}
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6423, file: !273, line: 48, baseType: !226, size: 8)
!6426 = !{!6427, !6428, !6429, !6430, !6431, !6432, !6433, !6434}
!6427 = !DILocalVariable(name: "thread", arg: 1, scope: !6306, file: !6307, line: 56, type: !6310)
!6428 = !DILocalVariable(name: "stack", arg: 2, scope: !6306, file: !6307, line: 56, type: !6421)
!6429 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6306, file: !6307, line: 57, type: !1147)
!6430 = !DILocalVariable(name: "entry", arg: 4, scope: !6306, file: !6307, line: 57, type: !215)
!6431 = !DILocalVariable(name: "p1", arg: 5, scope: !6306, file: !6307, line: 58, type: !108)
!6432 = !DILocalVariable(name: "p2", arg: 6, scope: !6306, file: !6307, line: 58, type: !108)
!6433 = !DILocalVariable(name: "p3", arg: 7, scope: !6306, file: !6307, line: 58, type: !108)
!6434 = !DILocalVariable(name: "iframe", scope: !6306, file: !6307, line: 60, type: !2684)
!6435 = !DILocation(line: 0, scope: !6306)
!6436 = !DILocation(line: 85, column: 11, scope: !6306)
!6437 = !DILocation(line: 93, column: 10, scope: !6306)
!6438 = !DILocation(line: 98, column: 13, scope: !6306)
!6439 = !DILocation(line: 100, column: 15, scope: !6306)
!6440 = !DILocation(line: 100, column: 10, scope: !6306)
!6441 = !DILocation(line: 100, column: 13, scope: !6306)
!6442 = !DILocation(line: 101, column: 15, scope: !6306)
!6443 = !DILocation(line: 101, column: 10, scope: !6306)
!6444 = !DILocation(line: 101, column: 13, scope: !6306)
!6445 = !DILocation(line: 102, column: 15, scope: !6306)
!6446 = !DILocation(line: 102, column: 10, scope: !6306)
!6447 = !DILocation(line: 102, column: 13, scope: !6306)
!6448 = !DILocation(line: 103, column: 15, scope: !6306)
!6449 = !DILocation(line: 103, column: 10, scope: !6306)
!6450 = !DILocation(line: 103, column: 13, scope: !6306)
!6451 = !DILocation(line: 106, column: 10, scope: !6306)
!6452 = !DILocation(line: 106, column: 15, scope: !6306)
!6453 = !DILocation(line: 122, column: 29, scope: !6306)
!6454 = !DILocation(line: 122, column: 23, scope: !6306)
!6455 = !DILocation(line: 122, column: 27, scope: !6306)
!6456 = !DILocation(line: 123, column: 15, scope: !6306)
!6457 = !DILocation(line: 123, column: 23, scope: !6306)
!6458 = !DILocation(line: 143, column: 1, scope: !6306)
!6459 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6307, file: !6307, line: 385, type: !6460, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2681, retainedNodes: !6463)
!6460 = !DISubroutineType(types: !6461)
!6461 = !{!110, !6462, !6462}
!6462 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !110)
!6463 = !{!6464, !6465, !6466, !6469}
!6464 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6459, file: !6307, line: 385, type: !6462)
!6465 = !DILocalVariable(name: "psp", arg: 2, scope: !6459, file: !6307, line: 385, type: !6462)
!6466 = !DILocalVariable(name: "thread", scope: !6459, file: !6307, line: 388, type: !6467)
!6467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6468, size: 32)
!6468 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6311)
!6469 = !DILocalVariable(name: "guard_len", scope: !6459, file: !6307, line: 405, type: !110)
!6470 = !DILocation(line: 0, scope: !6459)
!6471 = !DILocation(line: 388, column: 34, scope: !6459)
!6472 = !DILocation(line: 390, column: 13, scope: !6473)
!6473 = distinct !DILexicalBlock(scope: !6459, file: !6307, line: 390, column: 6)
!6474 = !DILocation(line: 390, column: 6, scope: !6459)
!6475 = !DILocation(line: 438, column: 6, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6459, file: !6307, line: 438, column: 6)
!6477 = !DILocation(line: 438, column: 6, scope: !6459)
!6478 = !DILocation(line: 442, column: 3, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6476, file: !6307, line: 440, column: 22)
!6480 = !DILocation(line: 455, column: 1, scope: !6459)
!6481 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6307, file: !6307, line: 530, type: !6482, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2681, retainedNodes: !6484)
!6482 = !DISubroutineType(types: !6483)
!6483 = !{null, !6310, !1147, !215}
!6484 = !{!6485, !6486, !6487}
!6485 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6481, file: !6307, line: 530, type: !6310)
!6486 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6481, file: !6307, line: 530, type: !1147)
!6487 = !DILocalVariable(name: "_main", arg: 3, scope: !6481, file: !6307, line: 531, type: !215)
!6488 = !DILocation(line: 0, scope: !6481)
!6489 = !DILocation(line: 535, column: 11, scope: !6481)
!6490 = !DILocation(line: 560, column: 2, scope: !6481)
!6491 = !DILocation(line: 576, column: 2, scope: !6481)
!6492 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6493 = !DILocation(line: 603, column: 2, scope: !6481)
!6494 = distinct !DISubprogram(name: "z_arm_fault", scope: !6495, file: !6495, line: 1036, type: !6496, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !6511)
!6495 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6496 = !DISubroutineType(types: !6497)
!6497 = !{null, !110, !110, !110, !6498}
!6498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6499, size: 32)
!6499 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !198, line: 37, baseType: !6500)
!6500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !6501)
!6501 = !{!6502, !6503, !6504, !6505, !6506, !6507, !6508, !6509, !6510}
!6502 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6500, file: !198, line: 26, baseType: !110, size: 32)
!6503 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6500, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!6504 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6500, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!6505 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6500, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!6506 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6500, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!6507 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6500, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!6508 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6500, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!6509 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6500, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6500, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!6511 = !{!6512, !6513, !6514, !6515, !6516, !6517, !6518, !6519, !6520, !6521}
!6512 = !DILocalVariable(name: "msp", arg: 1, scope: !6494, file: !6495, line: 1036, type: !110)
!6513 = !DILocalVariable(name: "psp", arg: 2, scope: !6494, file: !6495, line: 1036, type: !110)
!6514 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6494, file: !6495, line: 1036, type: !110)
!6515 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6494, file: !6495, line: 1037, type: !6498)
!6516 = !DILocalVariable(name: "reason", scope: !6494, file: !6495, line: 1039, type: !110)
!6517 = !DILocalVariable(name: "fault", scope: !6494, file: !6495, line: 1040, type: !109)
!6518 = !DILocalVariable(name: "recoverable", scope: !6494, file: !6495, line: 1041, type: !334)
!6519 = !DILocalVariable(name: "nested_exc", scope: !6494, file: !6495, line: 1041, type: !334)
!6520 = !DILocalVariable(name: "esf", scope: !6494, file: !6495, line: 1042, type: !2752)
!6521 = !DILocalVariable(name: "esf_copy", scope: !6494, file: !6495, line: 1047, type: !2753)
!6522 = !DILocation(line: 0, scope: !6494)
!6523 = !DILocation(line: 1040, column: 19, scope: !6494)
!6524 = !DILocation(line: 1041, column: 2, scope: !6494)
!6525 = !DILocation(line: 1047, column: 2, scope: !6494)
!6526 = !DILocation(line: 1047, column: 15, scope: !6494)
!6527 = !DILocalVariable(name: "key", arg: 1, scope: !6528, file: !6005, line: 84, type: !32)
!6528 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6005, file: !6005, line: 84, type: !6016, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !6529)
!6529 = !{!6527}
!6530 = !DILocation(line: 0, scope: !6528, inlinedAt: !6531)
!6531 = distinct !DILocation(line: 1050, column: 2, scope: !6494)
!6532 = !DILocation(line: 95, column: 2, scope: !6528, inlinedAt: !6531)
!6533 = !{i64 2274409}
!6534 = !DILocation(line: 1055, column: 9, scope: !6494)
!6535 = !DILocation(line: 1056, column: 2, scope: !6536)
!6536 = distinct !DILexicalBlock(scope: !6537, file: !6495, line: 1056, column: 2)
!6537 = distinct !DILexicalBlock(scope: !6494, file: !6495, line: 1056, column: 2)
!6538 = !DILocation(line: 1056, column: 2, scope: !6537)
!6539 = !DILocation(line: 1056, column: 2, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6536, file: !6495, line: 1056, column: 2)
!6541 = !DILocation(line: 1040, column: 24, scope: !6494)
!6542 = !DILocation(line: 1063, column: 11, scope: !6494)
!6543 = !DILocation(line: 1064, column: 6, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6494, file: !6495, line: 1064, column: 6)
!6545 = !DILocation(line: 1064, column: 6, scope: !6494)
!6546 = !DILocation(line: 1070, column: 20, scope: !6494)
!6547 = !DILocation(line: 1070, column: 2, scope: !6494)
!6548 = !DILocation(line: 1089, column: 6, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6494, file: !6495, line: 1089, column: 6)
!6550 = !DILocation(line: 0, scope: !6549)
!6551 = !DILocation(line: 1089, column: 6, scope: !6494)
!6552 = !DILocation(line: 1090, column: 28, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6554, file: !6495, line: 1090, column: 7)
!6554 = distinct !DILexicalBlock(scope: !6549, file: !6495, line: 1089, column: 18)
!6555 = !DILocation(line: 1090, column: 44, scope: !6553)
!6556 = !DILocation(line: 1090, column: 7, scope: !6554)
!6557 = !DILocation(line: 1091, column: 24, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !6553, file: !6495, line: 1090, column: 50)
!6559 = !DILocation(line: 1092, column: 3, scope: !6558)
!6560 = !DILocation(line: 1094, column: 23, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6549, file: !6495, line: 1093, column: 9)
!6562 = !DILocation(line: 1097, column: 2, scope: !6494)
!6563 = !DILocation(line: 1098, column: 1, scope: !6494)
!6564 = distinct !DISubprogram(name: "get_esf", scope: !6495, file: !6495, line: 894, type: !6565, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !6568)
!6565 = !DISubroutineType(types: !6566)
!6566 = !{!2752, !110, !110, !110, !6567}
!6567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 32)
!6568 = !{!6569, !6570, !6571, !6572, !6573, !6574}
!6569 = !DILocalVariable(name: "msp", arg: 1, scope: !6564, file: !6495, line: 894, type: !110)
!6570 = !DILocalVariable(name: "psp", arg: 2, scope: !6564, file: !6495, line: 894, type: !110)
!6571 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6564, file: !6495, line: 894, type: !110)
!6572 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6564, file: !6495, line: 895, type: !6567)
!6573 = !DILocalVariable(name: "alternative_state_exc", scope: !6564, file: !6495, line: 897, type: !334)
!6574 = !DILocalVariable(name: "ptr_esf", scope: !6564, file: !6495, line: 898, type: !2752)
!6575 = !DILocation(line: 0, scope: !6564)
!6576 = !DILocation(line: 900, column: 14, scope: !6564)
!6577 = !DILocation(line: 902, column: 49, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6564, file: !6495, line: 902, column: 6)
!6579 = !DILocation(line: 902, column: 6, scope: !6564)
!6580 = !DILocation(line: 983, column: 18, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6564, file: !6495, line: 983, column: 6)
!6582 = !DILocation(line: 991, column: 7, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6584, file: !6495, line: 990, column: 30)
!6584 = distinct !DILexicalBlock(scope: !6564, file: !6495, line: 990, column: 6)
!6585 = !DILocation(line: 998, column: 16, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6587, file: !6495, line: 995, column: 10)
!6587 = distinct !DILexicalBlock(scope: !6583, file: !6495, line: 991, column: 7)
!6588 = !DILocation(line: 1002, column: 2, scope: !6564)
!6589 = !DILocation(line: 1003, column: 1, scope: !6564)
!6590 = distinct !DISubprogram(name: "fault_handle", scope: !6495, file: !6495, line: 786, type: !6591, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !6593)
!6591 = !DISubroutineType(types: !6592)
!6592 = !{!110, !2752, !109, !6567}
!6593 = !{!6594, !6595, !6596, !6597}
!6594 = !DILocalVariable(name: "esf", arg: 1, scope: !6590, file: !6495, line: 786, type: !2752)
!6595 = !DILocalVariable(name: "fault", arg: 2, scope: !6590, file: !6495, line: 786, type: !109)
!6596 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6590, file: !6495, line: 786, type: !6567)
!6597 = !DILocalVariable(name: "reason", scope: !6590, file: !6495, line: 788, type: !110)
!6598 = !DILocation(line: 0, scope: !6590)
!6599 = !DILocation(line: 790, column: 15, scope: !6590)
!6600 = !DILocation(line: 792, column: 2, scope: !6590)
!6601 = !DILocation(line: 794, column: 12, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6590, file: !6495, line: 792, column: 17)
!6603 = !DILocation(line: 795, column: 3, scope: !6602)
!6604 = !DILocation(line: 800, column: 12, scope: !6602)
!6605 = !DILocation(line: 801, column: 3, scope: !6602)
!6606 = !DILocation(line: 803, column: 12, scope: !6602)
!6607 = !DILocation(line: 804, column: 3, scope: !6602)
!6608 = !DILocation(line: 806, column: 12, scope: !6602)
!6609 = !DILocation(line: 807, column: 3, scope: !6602)
!6610 = !DILocation(line: 814, column: 3, scope: !6602)
!6611 = !DILocation(line: 815, column: 3, scope: !6602)
!6612 = !DILocation(line: 829, column: 2, scope: !6590)
!6613 = distinct !DISubprogram(name: "hard_fault", scope: !6495, file: !6495, line: 709, type: !6614, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !6616)
!6614 = !DISubroutineType(types: !6615)
!6615 = !{!110, !2752, !6567}
!6616 = !{!6617, !6618, !6619}
!6617 = !DILocalVariable(name: "esf", arg: 1, scope: !6613, file: !6495, line: 709, type: !2752)
!6618 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6613, file: !6495, line: 709, type: !6567)
!6619 = !DILocalVariable(name: "reason", scope: !6613, file: !6495, line: 711, type: !110)
!6620 = !DILocation(line: 0, scope: !6613)
!6621 = !DILocation(line: 732, column: 15, scope: !6613)
!6622 = !DILocation(line: 734, column: 12, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6613, file: !6495, line: 734, column: 6)
!6624 = !DILocation(line: 734, column: 17, scope: !6623)
!6625 = !DILocation(line: 734, column: 41, scope: !6623)
!6626 = !DILocation(line: 734, column: 6, scope: !6613)
!6627 = !DILocation(line: 736, column: 19, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6623, file: !6495, line: 736, column: 13)
!6629 = !DILocation(line: 736, column: 49, scope: !6628)
!6630 = !DILocation(line: 736, column: 13, scope: !6623)
!6631 = !DILocation(line: 738, column: 19, scope: !6632)
!6632 = distinct !DILexicalBlock(scope: !6628, file: !6495, line: 738, column: 13)
!6633 = !DILocation(line: 738, column: 24, scope: !6632)
!6634 = !DILocation(line: 738, column: 47, scope: !6632)
!6635 = !DILocation(line: 738, column: 13, scope: !6628)
!6636 = !DILocation(line: 740, column: 7, scope: !6637)
!6637 = distinct !DILexicalBlock(scope: !6638, file: !6495, line: 740, column: 7)
!6638 = distinct !DILexicalBlock(scope: !6632, file: !6495, line: 738, column: 53)
!6639 = !DILocation(line: 740, column: 7, scope: !6638)
!6640 = !DILocation(line: 742, column: 24, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6637, file: !6495, line: 740, column: 38)
!6642 = !DILocation(line: 743, column: 3, scope: !6641)
!6643 = !DILocation(line: 743, column: 20, scope: !6644)
!6644 = distinct !DILexicalBlock(scope: !6637, file: !6495, line: 743, column: 14)
!6645 = !DILocation(line: 743, column: 25, scope: !6644)
!6646 = !DILocation(line: 743, column: 52, scope: !6644)
!6647 = !DILocation(line: 743, column: 14, scope: !6637)
!6648 = !DILocation(line: 744, column: 13, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6644, file: !6495, line: 743, column: 58)
!6650 = !DILocation(line: 745, column: 3, scope: !6649)
!6651 = !DILocation(line: 745, column: 20, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6644, file: !6495, line: 745, column: 14)
!6653 = !DILocation(line: 745, column: 25, scope: !6652)
!6654 = !DILocation(line: 745, column: 52, scope: !6652)
!6655 = !DILocation(line: 745, column: 14, scope: !6644)
!6656 = !DILocation(line: 746, column: 13, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !6652, file: !6495, line: 745, column: 58)
!6658 = !DILocation(line: 747, column: 3, scope: !6657)
!6659 = !DILocation(line: 747, column: 20, scope: !6660)
!6660 = distinct !DILexicalBlock(scope: !6652, file: !6495, line: 747, column: 14)
!6661 = !DILocation(line: 747, column: 52, scope: !6660)
!6662 = !DILocation(line: 747, column: 14, scope: !6652)
!6663 = !DILocation(line: 748, column: 13, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !6660, file: !6495, line: 747, column: 58)
!6665 = !DILocation(line: 754, column: 4, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6667, file: !6495, line: 754, column: 4)
!6667 = distinct !DILexicalBlock(scope: !6668, file: !6495, line: 754, column: 4)
!6668 = distinct !DILexicalBlock(scope: !6669, file: !6495, line: 754, column: 4)
!6669 = distinct !DILexicalBlock(scope: !6660, file: !6495, line: 753, column: 10)
!6670 = !DILocation(line: 758, column: 3, scope: !6671)
!6671 = distinct !DILexicalBlock(scope: !6672, file: !6495, line: 758, column: 3)
!6672 = distinct !DILexicalBlock(scope: !6673, file: !6495, line: 758, column: 3)
!6673 = distinct !DILexicalBlock(scope: !6674, file: !6495, line: 758, column: 3)
!6674 = distinct !DILexicalBlock(scope: !6632, file: !6495, line: 757, column: 9)
!6675 = !DILocation(line: 766, column: 2, scope: !6613)
!6676 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6495, file: !6495, line: 229, type: !6591, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !6677)
!6677 = !{!6678, !6679, !6680, !6681, !6682, !6683, !6686}
!6678 = !DILocalVariable(name: "esf", arg: 1, scope: !6676, file: !6495, line: 229, type: !2752)
!6679 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6676, file: !6495, line: 229, type: !109)
!6680 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6676, file: !6495, line: 230, type: !6567)
!6681 = !DILocalVariable(name: "reason", scope: !6676, file: !6495, line: 232, type: !110)
!6682 = !DILocalVariable(name: "mmfar", scope: !6676, file: !6495, line: 233, type: !110)
!6683 = !DILocalVariable(name: "temp", scope: !6684, file: !6495, line: 254, type: !110)
!6684 = distinct !DILexicalBlock(scope: !6685, file: !6495, line: 244, column: 48)
!6685 = distinct !DILexicalBlock(scope: !6676, file: !6495, line: 244, column: 6)
!6686 = !DILocalVariable(name: "min_stack_ptr", scope: !6687, file: !6495, line: 309, type: !110)
!6687 = distinct !DILexicalBlock(scope: !6688, file: !6495, line: 308, column: 43)
!6688 = distinct !DILexicalBlock(scope: !6689, file: !6495, line: 308, column: 7)
!6689 = distinct !DILexicalBlock(scope: !6690, file: !6495, line: 289, column: 40)
!6690 = distinct !DILexicalBlock(scope: !6676, file: !6495, line: 288, column: 6)
!6691 = !DILocation(line: 0, scope: !6676)
!6692 = !DILocation(line: 237, column: 12, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6676, file: !6495, line: 237, column: 6)
!6694 = !DILocation(line: 241, column: 12, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6676, file: !6495, line: 241, column: 6)
!6696 = !DILocation(line: 244, column: 12, scope: !6685)
!6697 = !DILocation(line: 244, column: 17, scope: !6685)
!6698 = !DILocation(line: 244, column: 42, scope: !6685)
!6699 = !DILocation(line: 244, column: 6, scope: !6676)
!6700 = !DILocation(line: 254, column: 24, scope: !6684)
!6701 = !DILocation(line: 0, scope: !6684)
!6702 = !DILocation(line: 256, column: 13, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6684, file: !6495, line: 256, column: 7)
!6704 = !DILocation(line: 256, column: 18, scope: !6703)
!6705 = !DILocation(line: 256, column: 44, scope: !6703)
!6706 = !DILocation(line: 256, column: 7, scope: !6684)
!6707 = !DILocation(line: 259, column: 24, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6709, file: !6495, line: 259, column: 8)
!6709 = distinct !DILexicalBlock(scope: !6703, file: !6495, line: 256, column: 50)
!6710 = !DILocation(line: 259, column: 8, scope: !6709)
!6711 = !DILocation(line: 261, column: 15, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !6708, file: !6495, line: 259, column: 30)
!6713 = !DILocation(line: 262, column: 4, scope: !6712)
!6714 = !DILocation(line: 265, column: 12, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6676, file: !6495, line: 265, column: 6)
!6716 = !DILocation(line: 269, column: 12, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6676, file: !6495, line: 269, column: 6)
!6718 = !DILocation(line: 288, column: 12, scope: !6690)
!6719 = !DILocation(line: 288, column: 17, scope: !6690)
!6720 = !DILocation(line: 288, column: 41, scope: !6690)
!6721 = !DILocation(line: 289, column: 9, scope: !6690)
!6722 = !DILocation(line: 289, column: 14, scope: !6690)
!6723 = !DILocation(line: 288, column: 6, scope: !6676)
!6724 = !DILocation(line: 308, column: 12, scope: !6688)
!6725 = !DILocation(line: 308, column: 17, scope: !6688)
!6726 = !DILocation(line: 308, column: 7, scope: !6689)
!6727 = !DILocation(line: 310, column: 6, scope: !6687)
!6728 = !DILocation(line: 309, column: 29, scope: !6687)
!6729 = !DILocation(line: 0, scope: !6687)
!6730 = !DILocation(line: 312, column: 8, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6687, file: !6495, line: 312, column: 8)
!6732 = !DILocation(line: 312, column: 8, scope: !6687)
!6733 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6734, file: !6179, line: 1099, type: !110)
!6734 = distinct !DISubprogram(name: "__set_PSP", scope: !6179, file: !6179, line: 1099, type: !6274, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !6735)
!6735 = !{!6733}
!6736 = !DILocation(line: 0, scope: !6734, inlinedAt: !6737)
!6737 = distinct !DILocation(line: 338, column: 5, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6731, file: !6495, line: 312, column: 23)
!6739 = !DILocation(line: 1101, column: 3, scope: !6734, inlinedAt: !6737)
!6740 = !{i64 3530070}
!6741 = !DILocation(line: 341, column: 4, scope: !6738)
!6742 = !DILocation(line: 342, column: 5, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6744, file: !6495, line: 342, column: 5)
!6744 = distinct !DILexicalBlock(scope: !6745, file: !6495, line: 342, column: 5)
!6745 = distinct !DILexicalBlock(scope: !6731, file: !6495, line: 341, column: 11)
!6746 = !DILocation(line: 342, column: 5, scope: !6744)
!6747 = !DILocation(line: 342, column: 5, scope: !6748)
!6748 = distinct !DILexicalBlock(scope: !6743, file: !6495, line: 342, column: 5)
!6749 = !DILocation(line: 360, column: 12, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6676, file: !6495, line: 360, column: 6)
!6751 = !DILocation(line: 360, column: 17, scope: !6750)
!6752 = !DILocation(line: 360, column: 41, scope: !6750)
!6753 = !DILocation(line: 360, column: 6, scope: !6676)
!6754 = !DILocation(line: 361, column: 14, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6750, file: !6495, line: 360, column: 47)
!6756 = !DILocation(line: 362, column: 2, scope: !6755)
!6757 = !DILocation(line: 366, column: 12, scope: !6676)
!6758 = !DILocation(line: 369, column: 15, scope: !6676)
!6759 = !DILocation(line: 371, column: 2, scope: !6676)
!6760 = distinct !DISubprogram(name: "bus_fault", scope: !6495, file: !6495, line: 383, type: !6761, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !6763)
!6761 = !DISubroutineType(types: !6762)
!6762 = !{!109, !2752, !109, !6567}
!6763 = !{!6764, !6765, !6766, !6767, !6768}
!6764 = !DILocalVariable(name: "esf", arg: 1, scope: !6760, file: !6495, line: 383, type: !2752)
!6765 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6760, file: !6495, line: 383, type: !109)
!6766 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6760, file: !6495, line: 383, type: !6567)
!6767 = !DILocalVariable(name: "reason", scope: !6760, file: !6495, line: 385, type: !110)
!6768 = !DILocalVariable(name: "bfar", scope: !6769, file: !6495, line: 405, type: !110)
!6769 = distinct !DILexicalBlock(scope: !6770, file: !6495, line: 395, column: 42)
!6770 = distinct !DILexicalBlock(scope: !6760, file: !6495, line: 395, column: 6)
!6771 = !DILocation(line: 0, scope: !6760)
!6772 = !DILocation(line: 389, column: 11, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6760, file: !6495, line: 389, column: 6)
!6774 = !DILocation(line: 392, column: 11, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6760, file: !6495, line: 392, column: 6)
!6776 = !DILocation(line: 395, column: 11, scope: !6770)
!6777 = !DILocation(line: 395, column: 16, scope: !6770)
!6778 = !DILocation(line: 395, column: 6, scope: !6760)
!6779 = !DILocation(line: 405, column: 3, scope: !6769)
!6780 = !DILocation(line: 0, scope: !6769)
!6781 = !DILocation(line: 407, column: 13, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6769, file: !6495, line: 407, column: 7)
!6783 = !DILocation(line: 407, column: 18, scope: !6782)
!6784 = !DILocation(line: 407, column: 44, scope: !6782)
!6785 = !DILocation(line: 407, column: 7, scope: !6769)
!6786 = !DILocation(line: 411, column: 15, scope: !6787)
!6787 = distinct !DILexicalBlock(scope: !6788, file: !6495, line: 409, column: 30)
!6788 = distinct !DILexicalBlock(scope: !6789, file: !6495, line: 409, column: 8)
!6789 = distinct !DILexicalBlock(scope: !6782, file: !6495, line: 407, column: 50)
!6790 = !DILocation(line: 412, column: 4, scope: !6787)
!6791 = !DILocation(line: 415, column: 11, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6760, file: !6495, line: 415, column: 6)
!6793 = !DILocation(line: 418, column: 12, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6760, file: !6495, line: 418, column: 6)
!6795 = !DILocation(line: 418, column: 17, scope: !6794)
!6796 = !DILocation(line: 418, column: 41, scope: !6794)
!6797 = !DILocation(line: 418, column: 6, scope: !6760)
!6798 = !DILocation(line: 423, column: 18, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6794, file: !6495, line: 423, column: 13)
!6800 = !DILocation(line: 524, column: 12, scope: !6760)
!6801 = !DILocation(line: 526, column: 15, scope: !6760)
!6802 = !DILocation(line: 528, column: 2, scope: !6760)
!6803 = distinct !DISubprogram(name: "usage_fault", scope: !6495, file: !6495, line: 539, type: !6804, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !6808)
!6804 = !DISubroutineType(types: !6805)
!6805 = !{!110, !6806}
!6806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6807, size: 32)
!6807 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2753)
!6808 = !{!6809, !6810}
!6809 = !DILocalVariable(name: "esf", arg: 1, scope: !6803, file: !6495, line: 539, type: !6806)
!6810 = !DILocalVariable(name: "reason", scope: !6803, file: !6495, line: 541, type: !110)
!6811 = !DILocation(line: 0, scope: !6803)
!6812 = !DILocation(line: 546, column: 12, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6803, file: !6495, line: 546, column: 6)
!6814 = !DILocation(line: 549, column: 12, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6803, file: !6495, line: 549, column: 6)
!6816 = !DILocation(line: 567, column: 12, scope: !6817)
!6817 = distinct !DILexicalBlock(scope: !6803, file: !6495, line: 567, column: 6)
!6818 = !DILocation(line: 570, column: 12, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6803, file: !6495, line: 570, column: 6)
!6820 = !DILocation(line: 573, column: 12, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6803, file: !6495, line: 573, column: 6)
!6822 = !DILocation(line: 576, column: 12, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !6803, file: !6495, line: 576, column: 6)
!6824 = !DILocation(line: 581, column: 12, scope: !6803)
!6825 = !DILocation(line: 583, column: 2, scope: !6803)
!6826 = distinct !DISubprogram(name: "debug_monitor", scope: !6495, file: !6495, line: 632, type: !6827, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !6829)
!6827 = !DISubroutineType(types: !6828)
!6828 = !{null, !2752, !6567}
!6829 = !{!6830, !6831}
!6830 = !DILocalVariable(name: "esf", arg: 1, scope: !6826, file: !6495, line: 632, type: !2752)
!6831 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6826, file: !6495, line: 632, type: !6567)
!6832 = !DILocation(line: 0, scope: !6826)
!6833 = !DILocation(line: 634, column: 15, scope: !6826)
!6834 = !DILocation(line: 652, column: 1, scope: !6826)
!6835 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6495, file: !6495, line: 658, type: !6836, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !6838)
!6836 = !DISubroutineType(types: !6837)
!6837 = !{!334, !2752}
!6838 = !{!6839, !6840, !6841}
!6839 = !DILocalVariable(name: "esf", arg: 1, scope: !6835, file: !6495, line: 658, type: !2752)
!6840 = !DILocalVariable(name: "ret_addr", scope: !6835, file: !6495, line: 660, type: !2795)
!6841 = !DILocalVariable(name: "fault_insn", scope: !6835, file: !6495, line: 686, type: !181)
!6842 = !DILocation(line: 0, scope: !6835)
!6843 = !DILocation(line: 660, column: 46, scope: !6835)
!6844 = !DILocation(line: 660, column: 23, scope: !6835)
!6845 = !DILocation(line: 682, column: 11, scope: !6835)
!6846 = !DILocation(line: 271, column: 3, scope: !6847, inlinedAt: !6848)
!6847 = distinct !DISubprogram(name: "__DSB", scope: !6179, file: !6179, line: 269, type: !3103, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !2018)
!6848 = distinct !DILocation(line: 683, column: 2, scope: !6835)
!6849 = !{i64 3506205}
!6850 = !DILocation(line: 260, column: 3, scope: !6851, inlinedAt: !6852)
!6851 = distinct !DISubprogram(name: "__ISB", scope: !6179, file: !6179, line: 258, type: !3103, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !2018)
!6852 = distinct !DILocation(line: 684, column: 2, scope: !6835)
!6853 = !{i64 3505922}
!6854 = !DILocation(line: 686, column: 35, scope: !6835)
!6855 = !DILocation(line: 686, column: 24, scope: !6835)
!6856 = !DILocation(line: 688, column: 11, scope: !6835)
!6857 = !DILocation(line: 271, column: 3, scope: !6847, inlinedAt: !6858)
!6858 = distinct !DILocation(line: 689, column: 2, scope: !6835)
!6859 = !DILocation(line: 260, column: 3, scope: !6851, inlinedAt: !6860)
!6860 = distinct !DILocation(line: 690, column: 2, scope: !6835)
!6861 = !DILocation(line: 693, column: 45, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6835, file: !6495, line: 693, column: 6)
!6863 = !DILocation(line: 699, column: 1, scope: !6835)
!6864 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6495, file: !6495, line: 1107, type: !3103, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !2018)
!6865 = !DILocation(line: 1111, column: 11, scope: !6864)
!6866 = !DILocation(line: 1136, column: 1, scope: !6864)
!6867 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6868, file: !6868, line: 26, type: !3103, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2796, retainedNodes: !6869)
!6868 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6869 = !{!6870}
!6870 = !DILocalVariable(name: "irq", scope: !6867, file: !6868, line: 28, type: !109)
!6871 = !DILocation(line: 0, scope: !6867)
!6872 = !DILocation(line: 30, column: 2, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6867, file: !6868, line: 30, column: 2)
!6874 = !DILocation(line: 31, column: 3, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6876, file: !6868, line: 30, column: 39)
!6876 = distinct !DILexicalBlock(scope: !6873, file: !6868, line: 30, column: 2)
!6877 = !DILocation(line: 30, column: 35, scope: !6876)
!6878 = !DILocation(line: 30, column: 13, scope: !6876)
!6879 = distinct !{!6879, !6872, !6880}
!6880 = !DILocation(line: 32, column: 2, scope: !6873)
!6881 = !DILocation(line: 33, column: 1, scope: !6867)
!6882 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !536, file: !536, line: 1814, type: !6219, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2796, retainedNodes: !6883)
!6883 = !{!6884, !6885}
!6884 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6882, file: !536, line: 1814, type: !782)
!6885 = !DILocalVariable(name: "priority", arg: 2, scope: !6882, file: !536, line: 1814, type: !110)
!6886 = !DILocation(line: 0, scope: !6882)
!6887 = !DILocation(line: 1816, column: 7, scope: !6882)
!6888 = !DILocation(line: 0, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6882, file: !536, line: 1816, column: 7)
!6890 = !DILocation(line: 1824, column: 1, scope: !6882)
!6891 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6892, file: !6892, line: 27, type: !6893, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2841, retainedNodes: !7007)
!6892 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6893 = !DISubroutineType(types: !6894)
!6894 = !{null, !6895}
!6895 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !145, line: 347, baseType: !6896)
!6896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6897, size: 32)
!6897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !6898)
!6898 = !{!6899, !6957, !6969, !6970, !6971, !6978, !6979, !6980, !6981, !6987, !7002}
!6899 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6897, file: !145, line: 247, baseType: !6900, size: 384)
!6900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !6901)
!6901 = !{!6902, !6926, !6933, !6934, !6935, !6944, !6945, !6946}
!6902 = !DIDerivedType(tag: DW_TAG_member, scope: !6900, file: !145, line: 60, baseType: !6903, size: 64)
!6903 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6900, file: !145, line: 60, size: 64, elements: !6904)
!6904 = !{!6905, !6920}
!6905 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6903, file: !145, line: 61, baseType: !6906, size: 64)
!6906 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !6907)
!6907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !6908)
!6908 = !{!6909, !6915}
!6909 = !DIDerivedType(tag: DW_TAG_member, scope: !6907, file: !128, line: 38, baseType: !6910, size: 32)
!6910 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6907, file: !128, line: 38, size: 32, elements: !6911)
!6911 = !{!6912, !6914}
!6912 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6910, file: !128, line: 39, baseType: !6913, size: 32)
!6913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6907, size: 32)
!6914 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6910, file: !128, line: 40, baseType: !6913, size: 32)
!6915 = !DIDerivedType(tag: DW_TAG_member, scope: !6907, file: !128, line: 42, baseType: !6916, size: 32, offset: 32)
!6916 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6907, file: !128, line: 42, size: 32, elements: !6917)
!6917 = !{!6918, !6919}
!6918 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6916, file: !128, line: 43, baseType: !6913, size: 32)
!6919 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6916, file: !128, line: 44, baseType: !6913, size: 32)
!6920 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6903, file: !145, line: 62, baseType: !6921, size: 64)
!6921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !6922)
!6922 = !{!6923}
!6923 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6921, file: !157, line: 50, baseType: !6924, size: 64)
!6924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6925, size: 64, elements: !162)
!6925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6921, size: 32)
!6926 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6900, file: !145, line: 68, baseType: !6927, size: 32, offset: 64)
!6927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6928, size: 32)
!6928 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !6929)
!6929 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !6930)
!6930 = !{!6931}
!6931 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6929, file: !123, line: 232, baseType: !6932, size: 64)
!6932 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !6907)
!6933 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6900, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6900, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!6935 = !DIDerivedType(tag: DW_TAG_member, scope: !6900, file: !145, line: 90, baseType: !6936, size: 16, offset: 112)
!6936 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6900, file: !145, line: 90, size: 16, elements: !6937)
!6937 = !{!6938, !6943}
!6938 = !DIDerivedType(tag: DW_TAG_member, scope: !6936, file: !145, line: 91, baseType: !6939, size: 16)
!6939 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6936, file: !145, line: 91, size: 16, elements: !6940)
!6940 = !{!6941, !6942}
!6941 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6939, file: !145, line: 96, baseType: !177, size: 8)
!6942 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6939, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!6943 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6936, file: !145, line: 100, baseType: !181, size: 16)
!6944 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6900, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!6945 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6900, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!6946 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6900, file: !145, line: 131, baseType: !6947, size: 192, offset: 192)
!6947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !6948)
!6948 = !{!6949, !6950, !6956}
!6949 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6947, file: !123, line: 245, baseType: !6906, size: 64)
!6950 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6947, file: !123, line: 246, baseType: !6951, size: 32, offset: 64)
!6951 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !6952)
!6952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6953, size: 32)
!6953 = !DISubroutineType(types: !6954)
!6954 = !{null, !6955}
!6955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6947, size: 32)
!6956 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6947, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!6957 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6897, file: !145, line: 250, baseType: !6958, size: 288, offset: 384)
!6958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !6959)
!6959 = !{!6960, !6961, !6962, !6963, !6964, !6965, !6966, !6967, !6968}
!6960 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6958, file: !198, line: 26, baseType: !110, size: 32)
!6961 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6958, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!6962 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6958, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6958, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6958, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6958, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6958, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!6967 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6958, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!6968 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6958, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!6969 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6897, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!6970 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6897, file: !145, line: 256, baseType: !6928, size: 64, offset: 704)
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6897, file: !145, line: 271, baseType: !6972, size: 128, offset: 768)
!6972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !6973)
!6973 = !{!6974, !6975, !6976, !6977}
!6974 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !6972, file: !145, line: 35, baseType: !215, size: 32)
!6975 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !6972, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!6976 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !6972, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!6977 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !6972, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!6978 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !6897, file: !145, line: 274, baseType: !6896, size: 32, offset: 896)
!6979 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6897, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!6980 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6897, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!6981 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6897, file: !145, line: 300, baseType: !6982, size: 96, offset: 1216)
!6982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !6983)
!6983 = !{!6984, !6985, !6986}
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6982, file: !145, line: 153, baseType: !22, size: 32)
!6985 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6982, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!6986 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6982, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!6987 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6897, file: !145, line: 325, baseType: !6988, size: 32, offset: 1312)
!6988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6989, size: 32)
!6989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !6990)
!6990 = !{!6991, !6997, !6998}
!6991 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6989, file: !119, line: 5074, baseType: !6992, size: 96)
!6992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !6993)
!6993 = !{!6994, !6995, !6996}
!6994 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6992, file: !244, line: 57, baseType: !247, size: 32)
!6995 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6992, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!6996 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6992, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6989, file: !119, line: 5075, baseType: !6928, size: 64, offset: 96)
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6989, file: !119, line: 5076, baseType: !6999, size: 32, offset: 160)
!6999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !7000)
!7000 = !{!7001}
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6999, file: !254, line: 52, baseType: !22, size: 32)
!7002 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6897, file: !145, line: 343, baseType: !7003, size: 64, offset: 1344)
!7003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !7004)
!7004 = !{!7005, !7006}
!7005 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7003, file: !198, line: 63, baseType: !110, size: 32)
!7006 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7003, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!7007 = !{!7008}
!7008 = !DILocalVariable(name: "thread", arg: 1, scope: !6891, file: !6892, line: 27, type: !6895)
!7009 = !DILocation(line: 0, scope: !6891)
!7010 = !DILocation(line: 29, column: 6, scope: !7011)
!7011 = distinct !DILexicalBlock(scope: !6891, file: !6892, line: 29, column: 6)
!7012 = !DILocation(line: 29, column: 15, scope: !7011)
!7013 = !DILocation(line: 29, column: 6, scope: !6891)
!7014 = !DILocation(line: 1031, column: 3, scope: !7015, inlinedAt: !7018)
!7015 = distinct !DISubprogram(name: "__get_IPSR", scope: !6179, file: !6179, line: 1027, type: !3385, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2841, retainedNodes: !7016)
!7016 = !{!7017}
!7017 = !DILocalVariable(name: "result", scope: !7015, file: !6179, line: 1029, type: !110)
!7018 = distinct !DILocation(line: 48, column: 10, scope: !7019, inlinedAt: !7023)
!7019 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7020, file: !7020, line: 46, type: !7021, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2841, retainedNodes: !2018)
!7020 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7021 = !DISubroutineType(types: !7022)
!7022 = !{!334}
!7023 = distinct !DILocation(line: 30, column: 7, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !7025, file: !6892, line: 30, column: 7)
!7025 = distinct !DILexicalBlock(scope: !7011, file: !6892, line: 29, column: 26)
!7026 = !{i64 3495053}
!7027 = !DILocation(line: 0, scope: !7015, inlinedAt: !7018)
!7028 = !DILocation(line: 48, column: 9, scope: !7019, inlinedAt: !7023)
!7029 = !DILocation(line: 30, column: 7, scope: !7025)
!7030 = !DILocation(line: 42, column: 14, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !7024, file: !6892, line: 30, column: 25)
!7032 = !DILocation(line: 48, column: 15, scope: !7031)
!7033 = !DILocation(line: 49, column: 3, scope: !7031)
!7034 = !DILocation(line: 52, column: 2, scope: !6891)
!7035 = !DILocation(line: 53, column: 1, scope: !6891)
!7036 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !394, file: !394, line: 127, type: !3103, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !2018)
!7037 = !DILocation(line: 134, column: 2, scope: !7036)
!7038 = !DILocation(line: 156, column: 1, scope: !7036)
!7039 = !DILocation(line: 0, scope: !393)
!7040 = !DILocation(line: 289, column: 36, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !393, file: !394, line: 285, column: 2)
!7042 = !DILocation(line: 289, column: 42, scope: !7041)
!7043 = !DILocation(line: 300, column: 36, scope: !393)
!7044 = !DILocation(line: 301, column: 35, scope: !393)
!7045 = !DILocation(line: 302, column: 37, scope: !393)
!7046 = !DILocation(line: 311, column: 2, scope: !393)
!7047 = !DILocation(line: 316, column: 1, scope: !393)
!7048 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !564, file: !564, line: 180, type: !3103, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !2018)
!7049 = !DILocation(line: 188, column: 12, scope: !7048)
!7050 = !DILocation(line: 271, column: 3, scope: !7051, inlinedAt: !7052)
!7051 = distinct !DISubprogram(name: "__DSB", scope: !6179, file: !6179, line: 269, type: !3103, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !2018)
!7052 = distinct !DILocation(line: 192, column: 2, scope: !7048)
!7053 = !{i64 3666869}
!7054 = !DILocation(line: 260, column: 3, scope: !7055, inlinedAt: !7056)
!7055 = distinct !DISubprogram(name: "__ISB", scope: !6179, file: !6179, line: 258, type: !3103, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !2018)
!7056 = distinct !DILocation(line: 193, column: 2, scope: !7048)
!7057 = !{i64 3666586}
!7058 = !DILocation(line: 194, column: 1, scope: !7048)
!7059 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !564, file: !564, line: 199, type: !3103, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !2018)
!7060 = !DILocation(line: 282, column: 3, scope: !7061, inlinedAt: !7062)
!7061 = distinct !DISubprogram(name: "__DMB", scope: !6179, file: !6179, line: 280, type: !3103, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !2018)
!7062 = distinct !DILocation(line: 202, column: 2, scope: !7059)
!7063 = !{i64 3667145}
!7064 = !DILocation(line: 205, column: 12, scope: !7059)
!7065 = !DILocation(line: 206, column: 1, scope: !7059)
!7066 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !564, file: !564, line: 275, type: !7067, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7080)
!7067 = !DISubroutineType(types: !7068)
!7068 = !{null, !7069, !1791, !6462, !6462}
!7069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7070, size: 32)
!7070 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7071)
!7071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !515, line: 52, size: 96, elements: !7072)
!7072 = !{!7073, !7074, !7075}
!7073 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7071, file: !515, line: 53, baseType: !22, size: 32)
!7074 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7071, file: !515, line: 54, baseType: !235, size: 32, offset: 32)
!7075 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7071, file: !515, line: 55, baseType: !7076, size: 32, offset: 64)
!7076 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !521, line: 151, baseType: !7077)
!7077 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !521, line: 149, size: 32, elements: !7078)
!7078 = !{!7079}
!7079 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7077, file: !521, line: 150, baseType: !110, size: 32)
!7080 = !{!7081, !7082, !7083, !7084}
!7081 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7066, file: !564, line: 276, type: !7069)
!7082 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7066, file: !564, line: 276, type: !1791)
!7083 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7066, file: !564, line: 277, type: !6462)
!7084 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7066, file: !564, line: 277, type: !6462)
!7085 = !DILocation(line: 0, scope: !7066)
!7086 = !DILocation(line: 279, column: 6, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7066, file: !564, line: 279, column: 6)
!7088 = !DILocation(line: 280, column: 57, scope: !7087)
!7089 = !DILocation(line: 279, column: 6, scope: !7066)
!7090 = !DILocation(line: 282, column: 3, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !7092, file: !564, line: 282, column: 3)
!7092 = distinct !DILexicalBlock(scope: !7093, file: !564, line: 282, column: 3)
!7093 = distinct !DILexicalBlock(scope: !7094, file: !564, line: 282, column: 3)
!7094 = distinct !DILexicalBlock(scope: !7087, file: !564, line: 280, column: 69)
!7095 = !DILocation(line: 285, column: 1, scope: !7066)
!7096 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7097, file: !7097, line: 220, type: !7098, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7100)
!7097 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7098 = !DISubroutineType(types: !7099)
!7099 = !{!109, !7069, !1791, !6462, !6462}
!7100 = !{!7101, !7102, !7103, !7104, !7105}
!7101 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7096, file: !7097, line: 221, type: !7069)
!7102 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7096, file: !7097, line: 221, type: !1791)
!7103 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7096, file: !7097, line: 222, type: !6462)
!7104 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7096, file: !7097, line: 223, type: !6462)
!7105 = !DILocalVariable(name: "mpu_reg_index", scope: !7096, file: !7097, line: 225, type: !109)
!7106 = !DILocation(line: 0, scope: !7096)
!7107 = !DILocation(line: 225, column: 22, scope: !7096)
!7108 = !DILocation(line: 233, column: 18, scope: !7096)
!7109 = !DILocation(line: 236, column: 23, scope: !7096)
!7110 = !DILocation(line: 236, column: 21, scope: !7096)
!7111 = !DILocation(line: 238, column: 2, scope: !7096)
!7112 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !564, file: !564, line: 105, type: !7113, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7115)
!7113 = !DISubroutineType(types: !7114)
!7114 = !{!109, !7069, !167, !167, !334}
!7115 = !{!7116, !7117, !7118, !7119, !7120, !7121}
!7116 = !DILocalVariable(name: "regions", arg: 1, scope: !7112, file: !564, line: 106, type: !7069)
!7117 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7112, file: !564, line: 106, type: !167)
!7118 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7112, file: !564, line: 106, type: !167)
!7119 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7112, file: !564, line: 107, type: !334)
!7120 = !DILocalVariable(name: "i", scope: !7112, file: !564, line: 109, type: !109)
!7121 = !DILocalVariable(name: "reg_index", scope: !7112, file: !564, line: 110, type: !109)
!7122 = !DILocation(line: 0, scope: !7112)
!7123 = !DILocation(line: 110, column: 18, scope: !7112)
!7124 = !DILocation(line: 112, column: 16, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !7126, file: !564, line: 112, column: 2)
!7126 = distinct !DILexicalBlock(scope: !7112, file: !564, line: 112, column: 2)
!7127 = !DILocation(line: 112, column: 2, scope: !7126)
!7128 = !DILocation(line: 113, column: 7, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7130, file: !564, line: 113, column: 7)
!7130 = distinct !DILexicalBlock(scope: !7125, file: !564, line: 112, column: 36)
!7131 = !DILocation(line: 113, column: 18, scope: !7129)
!7132 = !DILocation(line: 113, column: 23, scope: !7129)
!7133 = !DILocation(line: 113, column: 7, scope: !7130)
!7134 = !DILocation(line: 118, column: 23, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !7130, file: !564, line: 118, column: 7)
!7136 = !DILocation(line: 119, column: 7, scope: !7135)
!7137 = !DILocation(line: 118, column: 7, scope: !7130)
!7138 = !DILocation(line: 124, column: 36, scope: !7130)
!7139 = !DILocation(line: 124, column: 15, scope: !7130)
!7140 = !DILocation(line: 126, column: 17, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7130, file: !564, line: 126, column: 7)
!7142 = !DILocation(line: 126, column: 7, scope: !7130)
!7143 = !DILocation(line: 131, column: 12, scope: !7130)
!7144 = !DILocation(line: 132, column: 2, scope: !7130)
!7145 = !DILocation(line: 112, column: 32, scope: !7125)
!7146 = distinct !{!7146, !7127, !7147}
!7147 = !DILocation(line: 132, column: 2, scope: !7126)
!7148 = !DILocation(line: 135, column: 1, scope: !7112)
!7149 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7097, file: !7097, line: 63, type: !7150, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7152)
!7150 = !DISubroutineType(types: !7151)
!7151 = !{!109, !7069}
!7152 = !{!7153, !7154}
!7153 = !DILocalVariable(name: "part", arg: 1, scope: !7149, file: !7097, line: 63, type: !7069)
!7154 = !DILocalVariable(name: "partition_is_valid", scope: !7149, file: !7097, line: 70, type: !109)
!7155 = !DILocation(line: 0, scope: !7149)
!7156 = !DILocation(line: 71, column: 11, scope: !7149)
!7157 = !DILocation(line: 71, column: 37, scope: !7149)
!7158 = !{i32 0, i32 33}
!7159 = !DILocation(line: 72, column: 3, scope: !7149)
!7160 = !DILocation(line: 71, column: 30, scope: !7149)
!7161 = !DILocation(line: 75, column: 11, scope: !7149)
!7162 = !DILocation(line: 75, column: 17, scope: !7149)
!7163 = !DILocation(line: 75, column: 38, scope: !7149)
!7164 = !DILocation(line: 77, column: 2, scope: !7149)
!7165 = distinct !DISubprogram(name: "mpu_configure_region", scope: !564, file: !564, line: 79, type: !7166, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7168)
!7166 = !DISubroutineType(types: !7167)
!7167 = !{!109, !1791, !7069}
!7168 = !{!7169, !7170, !7171}
!7169 = !DILocalVariable(name: "index", arg: 1, scope: !7165, file: !564, line: 79, type: !1791)
!7170 = !DILocalVariable(name: "new_region", arg: 2, scope: !7165, file: !564, line: 80, type: !7069)
!7171 = !DILocalVariable(name: "region_conf", scope: !7165, file: !564, line: 82, type: !553)
!7172 = !DILocation(line: 0, scope: !7165)
!7173 = !DILocation(line: 82, column: 2, scope: !7165)
!7174 = !DILocation(line: 82, column: 24, scope: !7165)
!7175 = !DILocation(line: 87, column: 33, scope: !7165)
!7176 = !DILocation(line: 87, column: 14, scope: !7165)
!7177 = !DILocation(line: 87, column: 19, scope: !7165)
!7178 = !DILocation(line: 91, column: 55, scope: !7165)
!7179 = !DILocation(line: 92, column: 16, scope: !7165)
!7180 = !DILocation(line: 92, column: 53, scope: !7165)
!7181 = !DILocation(line: 91, column: 2, scope: !7165)
!7182 = !DILocation(line: 95, column: 9, scope: !7165)
!7183 = !DILocation(line: 97, column: 1, scope: !7165)
!7184 = !DILocation(line: 95, column: 2, scope: !7165)
!7185 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7097, file: !7097, line: 113, type: !7186, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7191)
!7186 = !DISubroutineType(types: !7187)
!7187 = !{null, !7188, !7189, !110, !110}
!7188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !559, size: 32)
!7189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7190, size: 32)
!7190 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7076)
!7191 = !{!7192, !7193, !7194, !7195}
!7192 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7185, file: !7097, line: 114, type: !7188)
!7193 = !DILocalVariable(name: "attr", arg: 2, scope: !7185, file: !7097, line: 115, type: !7189)
!7194 = !DILocalVariable(name: "base", arg: 3, scope: !7185, file: !7097, line: 115, type: !110)
!7195 = !DILocalVariable(name: "size", arg: 4, scope: !7185, file: !7097, line: 115, type: !110)
!7196 = !DILocation(line: 0, scope: !7185)
!7197 = !DILocation(line: 127, column: 23, scope: !7185)
!7198 = !DILocation(line: 127, column: 35, scope: !7185)
!7199 = !DILocation(line: 127, column: 33, scope: !7185)
!7200 = !DILocation(line: 127, column: 10, scope: !7185)
!7201 = !DILocation(line: 127, column: 15, scope: !7185)
!7202 = !DILocation(line: 129, column: 1, scope: !7185)
!7203 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !564, file: !564, line: 57, type: !7204, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7206)
!7204 = !DISubroutineType(types: !7205)
!7205 = !{!109, !1791, !551}
!7206 = !{!7207, !7208}
!7207 = !DILocalVariable(name: "index", arg: 1, scope: !7203, file: !564, line: 57, type: !1791)
!7208 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7203, file: !564, line: 58, type: !551)
!7209 = !DILocation(line: 0, scope: !7203)
!7210 = !DILocation(line: 61, column: 6, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7203, file: !564, line: 61, column: 6)
!7212 = !DILocation(line: 61, column: 12, scope: !7211)
!7213 = !DILocation(line: 61, column: 6, scope: !7203)
!7214 = !DILocation(line: 71, column: 2, scope: !7203)
!7215 = !DILocation(line: 73, column: 2, scope: !7203)
!7216 = !DILocation(line: 74, column: 1, scope: !7203)
!7217 = distinct !DISubprogram(name: "region_init", scope: !7097, file: !7097, line: 29, type: !7218, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7220)
!7218 = !DISubroutineType(types: !7219)
!7219 = !{null, !6462, !551}
!7220 = !{!7221, !7222}
!7221 = !DILocalVariable(name: "index", arg: 1, scope: !7217, file: !7097, line: 29, type: !6462)
!7222 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7217, file: !7097, line: 30, type: !551)
!7223 = !DILocation(line: 0, scope: !7217)
!7224 = !DILocation(line: 33, column: 2, scope: !7217)
!7225 = !DILocation(line: 47, column: 28, scope: !7217)
!7226 = !DILocation(line: 47, column: 33, scope: !7217)
!7227 = !DILocation(line: 48, column: 26, scope: !7217)
!7228 = !DILocation(line: 47, column: 12, scope: !7217)
!7229 = !DILocation(line: 49, column: 32, scope: !7217)
!7230 = !DILocation(line: 49, column: 37, scope: !7217)
!7231 = !DILocation(line: 49, column: 12, scope: !7217)
!7232 = !DILocation(line: 53, column: 1, scope: !7217)
!7233 = distinct !DISubprogram(name: "set_region_number", scope: !7234, file: !7234, line: 32, type: !6274, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7235)
!7234 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7235 = !{!7236}
!7236 = !DILocalVariable(name: "index", arg: 1, scope: !7233, file: !7234, line: 32, type: !110)
!7237 = !DILocation(line: 0, scope: !7233)
!7238 = !DILocation(line: 34, column: 11, scope: !7233)
!7239 = !DILocation(line: 35, column: 1, scope: !7233)
!7240 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7097, file: !7097, line: 88, type: !7241, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7243)
!7241 = !DISubroutineType(types: !7242)
!7242 = !{!110, !110}
!7243 = !{!7244}
!7244 = !DILocalVariable(name: "size", arg: 1, scope: !7240, file: !7097, line: 88, type: !110)
!7245 = !DILocation(line: 0, scope: !7240)
!7246 = !DILocation(line: 91, column: 11, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7240, file: !7097, line: 91, column: 6)
!7248 = !DILocation(line: 91, column: 6, scope: !7240)
!7249 = !DILocation(line: 100, column: 11, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !7240, file: !7097, line: 100, column: 6)
!7251 = !DILocation(line: 100, column: 6, scope: !7240)
!7252 = !DILocation(line: 104, column: 35, scope: !7240)
!7253 = !DILocation(line: 104, column: 16, scope: !7240)
!7254 = !DILocation(line: 104, column: 50, scope: !7240)
!7255 = !DILocation(line: 104, column: 72, scope: !7240)
!7256 = !DILocation(line: 104, column: 2, scope: !7240)
!7257 = !DILocation(line: 106, column: 1, scope: !7240)
!7258 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !564, file: !564, line: 307, type: !7259, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7261)
!7259 = !DISubroutineType(types: !7260)
!7260 = !{null, !7069, !167}
!7261 = !{!7262, !7263}
!7262 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7258, file: !564, line: 308, type: !7069)
!7263 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7258, file: !564, line: 308, type: !167)
!7264 = !DILocation(line: 0, scope: !7258)
!7265 = !DILocation(line: 310, column: 6, scope: !7266)
!7266 = distinct !DILexicalBlock(scope: !7258, file: !564, line: 310, column: 6)
!7267 = !DILocation(line: 311, column: 3, scope: !7266)
!7268 = !DILocation(line: 310, column: 6, scope: !7258)
!7269 = !DILocation(line: 313, column: 3, scope: !7270)
!7270 = distinct !DILexicalBlock(scope: !7271, file: !564, line: 313, column: 3)
!7271 = distinct !DILexicalBlock(scope: !7272, file: !564, line: 313, column: 3)
!7272 = distinct !DILexicalBlock(scope: !7273, file: !564, line: 313, column: 3)
!7273 = distinct !DILexicalBlock(scope: !7266, file: !564, line: 311, column: 15)
!7274 = !DILocation(line: 316, column: 1, scope: !7258)
!7275 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7097, file: !7097, line: 249, type: !7276, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7278)
!7276 = !DISubroutineType(types: !7277)
!7277 = !{!109, !7069, !167}
!7278 = !{!7279, !7280, !7281, !7282}
!7279 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7275, file: !7097, line: 250, type: !7069)
!7280 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7275, file: !7097, line: 250, type: !167)
!7281 = !DILocalVariable(name: "mpu_reg_index", scope: !7275, file: !7097, line: 252, type: !109)
!7282 = !DILocalVariable(name: "i", scope: !7283, file: !7097, line: 264, type: !109)
!7283 = distinct !DILexicalBlock(scope: !7284, file: !7097, line: 264, column: 3)
!7284 = distinct !DILexicalBlock(scope: !7285, file: !7097, line: 261, column: 32)
!7285 = distinct !DILexicalBlock(scope: !7275, file: !7097, line: 261, column: 6)
!7286 = !DILocation(line: 0, scope: !7275)
!7287 = !DILocation(line: 252, column: 22, scope: !7275)
!7288 = !DILocation(line: 258, column: 18, scope: !7275)
!7289 = !DILocation(line: 261, column: 20, scope: !7285)
!7290 = !DILocation(line: 261, column: 6, scope: !7275)
!7291 = !DILocation(line: 0, scope: !7283)
!7292 = !DILocation(line: 265, column: 4, scope: !7293)
!7293 = distinct !DILexicalBlock(scope: !7294, file: !7097, line: 264, column: 59)
!7294 = distinct !DILexicalBlock(scope: !7283, file: !7097, line: 264, column: 3)
!7295 = !DILocation(line: 264, column: 55, scope: !7294)
!7296 = !DILocation(line: 264, column: 33, scope: !7294)
!7297 = !DILocation(line: 264, column: 3, scope: !7283)
!7298 = distinct !{!7298, !7297, !7299}
!7299 = !DILocation(line: 266, column: 3, scope: !7283)
!7300 = !DILocation(line: 269, column: 2, scope: !7275)
!7301 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7302, file: !7302, line: 218, type: !6274, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7303)
!7302 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7303 = !{!7304}
!7304 = !DILocalVariable(name: "rnr", arg: 1, scope: !7301, file: !7302, line: 218, type: !110)
!7305 = !DILocation(line: 0, scope: !7301)
!7306 = !DILocation(line: 220, column: 12, scope: !7301)
!7307 = !DILocation(line: 221, column: 13, scope: !7301)
!7308 = !DILocation(line: 222, column: 1, scope: !7301)
!7309 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !564, file: !564, line: 326, type: !7310, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7312)
!7310 = !DISubroutineType(types: !7311)
!7311 = !{!109}
!7312 = !{!7313}
!7313 = !DILocalVariable(name: "r_index", scope: !7309, file: !564, line: 328, type: !110)
!7314 = !DILocation(line: 330, column: 17, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7309, file: !564, line: 330, column: 6)
!7316 = !DILocation(line: 330, column: 29, scope: !7315)
!7317 = !DILocation(line: 330, column: 6, scope: !7309)
!7318 = !DILocation(line: 337, column: 3, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !7320, file: !564, line: 337, column: 3)
!7320 = distinct !DILexicalBlock(scope: !7321, file: !564, line: 337, column: 3)
!7321 = distinct !DILexicalBlock(scope: !7322, file: !564, line: 337, column: 3)
!7322 = distinct !DILexicalBlock(scope: !7315, file: !564, line: 330, column: 50)
!7323 = !DILocation(line: 347, column: 2, scope: !7309)
!7324 = !DILocation(line: 0, scope: !7309)
!7325 = !DILocation(line: 364, column: 29, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7327, file: !564, line: 364, column: 2)
!7327 = distinct !DILexicalBlock(scope: !7309, file: !564, line: 364, column: 2)
!7328 = !DILocation(line: 364, column: 2, scope: !7327)
!7329 = !DILocation(line: 365, column: 25, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !7326, file: !564, line: 364, column: 66)
!7331 = !DILocation(line: 365, column: 3, scope: !7330)
!7332 = !DILocation(line: 364, column: 62, scope: !7326)
!7333 = distinct !{!7333, !7328, !7334}
!7334 = !DILocation(line: 366, column: 2, scope: !7327)
!7335 = !DILocation(line: 369, column: 23, scope: !7309)
!7336 = !DILocation(line: 369, column: 21, scope: !7309)
!7337 = !DILocation(line: 372, column: 2, scope: !7309)
!7338 = !DILocation(line: 433, column: 2, scope: !7339)
!7339 = distinct !DILexicalBlock(scope: !7340, file: !564, line: 433, column: 2)
!7340 = distinct !DILexicalBlock(scope: !7309, file: !564, line: 433, column: 2)
!7341 = !DILocation(line: 433, column: 2, scope: !7340)
!7342 = !DILocation(line: 433, column: 2, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !7339, file: !564, line: 433, column: 2)
!7344 = !DILocation(line: 444, column: 1, scope: !7309)
!7345 = distinct !DISubprogram(name: "strcpy", scope: !7346, file: !7346, line: 20, type: !7347, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !7351)
!7346 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7347 = !DISubroutineType(types: !7348)
!7348 = !{!1147, !7349, !7350}
!7349 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1147)
!7350 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !324)
!7351 = !{!7352, !7353, !7354}
!7352 = !DILocalVariable(name: "d", arg: 1, scope: !7345, file: !7346, line: 20, type: !7349)
!7353 = !DILocalVariable(name: "s", arg: 2, scope: !7345, file: !7346, line: 20, type: !7350)
!7354 = !DILocalVariable(name: "dest", scope: !7345, file: !7346, line: 22, type: !1147)
!7355 = !DILocation(line: 0, scope: !7345)
!7356 = !DILocation(line: 24, column: 9, scope: !7345)
!7357 = !DILocation(line: 24, column: 12, scope: !7345)
!7358 = !DILocation(line: 24, column: 2, scope: !7345)
!7359 = !DILocation(line: 25, column: 6, scope: !7360)
!7360 = distinct !DILexicalBlock(scope: !7345, file: !7346, line: 24, column: 21)
!7361 = !DILocation(line: 26, column: 4, scope: !7360)
!7362 = !DILocation(line: 27, column: 4, scope: !7360)
!7363 = distinct !{!7363, !7358, !7364}
!7364 = !DILocation(line: 28, column: 2, scope: !7345)
!7365 = !DILocation(line: 30, column: 5, scope: !7345)
!7366 = !DILocation(line: 32, column: 2, scope: !7345)
!7367 = distinct !DISubprogram(name: "strncpy", scope: !7346, file: !7346, line: 42, type: !7368, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !7370)
!7368 = !DISubroutineType(types: !7369)
!7369 = !{!1147, !7349, !7350, !235}
!7370 = !{!7371, !7372, !7373, !7374}
!7371 = !DILocalVariable(name: "d", arg: 1, scope: !7367, file: !7346, line: 42, type: !7349)
!7372 = !DILocalVariable(name: "s", arg: 2, scope: !7367, file: !7346, line: 42, type: !7350)
!7373 = !DILocalVariable(name: "n", arg: 3, scope: !7367, file: !7346, line: 42, type: !235)
!7374 = !DILocalVariable(name: "dest", scope: !7367, file: !7346, line: 44, type: !1147)
!7375 = !DILocation(line: 0, scope: !7367)
!7376 = !DILocation(line: 46, column: 12, scope: !7367)
!7377 = !DILocation(line: 46, column: 17, scope: !7367)
!7378 = !DILocation(line: 46, column: 20, scope: !7367)
!7379 = !DILocation(line: 46, column: 23, scope: !7367)
!7380 = !DILocation(line: 46, column: 2, scope: !7367)
!7381 = !DILocation(line: 47, column: 6, scope: !7382)
!7382 = distinct !DILexicalBlock(scope: !7367, file: !7346, line: 46, column: 32)
!7383 = !DILocation(line: 48, column: 4, scope: !7382)
!7384 = !DILocation(line: 49, column: 4, scope: !7382)
!7385 = !DILocation(line: 50, column: 4, scope: !7382)
!7386 = distinct !{!7386, !7380, !7387}
!7387 = !DILocation(line: 51, column: 2, scope: !7367)
!7388 = !DILocation(line: 54, column: 6, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7367, file: !7346, line: 53, column: 16)
!7390 = !DILocation(line: 55, column: 4, scope: !7389)
!7391 = !DILocation(line: 56, column: 4, scope: !7389)
!7392 = !DILocation(line: 53, column: 11, scope: !7367)
!7393 = !DILocation(line: 53, column: 2, scope: !7367)
!7394 = distinct !{!7394, !7393, !7395}
!7395 = !DILocation(line: 57, column: 2, scope: !7367)
!7396 = !DILocation(line: 59, column: 2, scope: !7367)
!7397 = distinct !DISubprogram(name: "strchr", scope: !7346, file: !7346, line: 69, type: !7398, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !7400)
!7398 = !DISubroutineType(types: !7399)
!7399 = !{!1147, !324, !109}
!7400 = !{!7401, !7402, !7403}
!7401 = !DILocalVariable(name: "s", arg: 1, scope: !7397, file: !7346, line: 69, type: !324)
!7402 = !DILocalVariable(name: "c", arg: 2, scope: !7397, file: !7346, line: 69, type: !109)
!7403 = !DILocalVariable(name: "tmp", scope: !7397, file: !7346, line: 71, type: !226)
!7404 = !DILocation(line: 0, scope: !7397)
!7405 = !DILocation(line: 73, column: 2, scope: !7397)
!7406 = !DILocation(line: 73, column: 10, scope: !7397)
!7407 = !DILocation(line: 73, column: 13, scope: !7397)
!7408 = !DILocation(line: 73, column: 21, scope: !7397)
!7409 = !DILocation(line: 74, column: 4, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7397, file: !7346, line: 73, column: 38)
!7411 = distinct !{!7411, !7405, !7412}
!7412 = !DILocation(line: 75, column: 2, scope: !7397)
!7413 = !DILocation(line: 77, column: 9, scope: !7397)
!7414 = !DILocation(line: 77, column: 2, scope: !7397)
!7415 = distinct !DISubprogram(name: "strrchr", scope: !7346, file: !7346, line: 87, type: !7398, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !7416)
!7416 = !{!7417, !7418, !7419}
!7417 = !DILocalVariable(name: "s", arg: 1, scope: !7415, file: !7346, line: 87, type: !324)
!7418 = !DILocalVariable(name: "c", arg: 2, scope: !7415, file: !7346, line: 87, type: !109)
!7419 = !DILocalVariable(name: "match", scope: !7415, file: !7346, line: 89, type: !1147)
!7420 = !DILocation(line: 0, scope: !7415)
!7421 = !DILocation(line: 91, column: 2, scope: !7415)
!7422 = !DILocation(line: 92, column: 7, scope: !7423)
!7423 = distinct !DILexicalBlock(scope: !7424, file: !7346, line: 92, column: 7)
!7424 = distinct !DILexicalBlock(scope: !7415, file: !7346, line: 91, column: 5)
!7425 = !DILocation(line: 92, column: 10, scope: !7423)
!7426 = !DILocation(line: 92, column: 7, scope: !7424)
!7427 = !DILocation(line: 95, column: 13, scope: !7415)
!7428 = !DILocation(line: 95, column: 2, scope: !7424)
!7429 = distinct !{!7429, !7421, !7430}
!7430 = !DILocation(line: 95, column: 15, scope: !7415)
!7431 = !DILocation(line: 97, column: 2, scope: !7415)
!7432 = distinct !DISubprogram(name: "strlen", scope: !7346, file: !7346, line: 107, type: !7433, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !7435)
!7433 = !DISubroutineType(types: !7434)
!7434 = !{!235, !324}
!7435 = !{!7436, !7437}
!7436 = !DILocalVariable(name: "s", arg: 1, scope: !7432, file: !7346, line: 107, type: !324)
!7437 = !DILocalVariable(name: "n", scope: !7432, file: !7346, line: 109, type: !235)
!7438 = !DILocation(line: 0, scope: !7432)
!7439 = !DILocation(line: 111, column: 9, scope: !7432)
!7440 = !DILocation(line: 111, column: 12, scope: !7432)
!7441 = !DILocation(line: 111, column: 2, scope: !7432)
!7442 = !DILocation(line: 112, column: 4, scope: !7443)
!7443 = distinct !DILexicalBlock(scope: !7432, file: !7346, line: 111, column: 21)
!7444 = !DILocation(line: 113, column: 4, scope: !7443)
!7445 = distinct !{!7445, !7441, !7446}
!7446 = !DILocation(line: 114, column: 2, scope: !7432)
!7447 = !DILocation(line: 116, column: 2, scope: !7432)
!7448 = distinct !DISubprogram(name: "strnlen", scope: !7346, file: !7346, line: 126, type: !7449, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !7451)
!7449 = !DISubroutineType(types: !7450)
!7450 = !{!235, !324, !235}
!7451 = !{!7452, !7453, !7454}
!7452 = !DILocalVariable(name: "s", arg: 1, scope: !7448, file: !7346, line: 126, type: !324)
!7453 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7448, file: !7346, line: 126, type: !235)
!7454 = !DILocalVariable(name: "n", scope: !7448, file: !7346, line: 128, type: !235)
!7455 = !DILocation(line: 0, scope: !7448)
!7456 = !DILocation(line: 130, column: 9, scope: !7448)
!7457 = !DILocation(line: 130, column: 12, scope: !7448)
!7458 = !DILocation(line: 130, column: 20, scope: !7448)
!7459 = !DILocation(line: 130, column: 2, scope: !7448)
!7460 = !DILocation(line: 131, column: 4, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7448, file: !7346, line: 130, column: 35)
!7462 = !DILocation(line: 132, column: 4, scope: !7461)
!7463 = distinct !{!7463, !7459, !7464}
!7464 = !DILocation(line: 133, column: 2, scope: !7448)
!7465 = !DILocation(line: 135, column: 2, scope: !7448)
!7466 = distinct !DISubprogram(name: "strcmp", scope: !7346, file: !7346, line: 145, type: !7467, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !7469)
!7467 = !DISubroutineType(types: !7468)
!7468 = !{!109, !324, !324}
!7469 = !{!7470, !7471}
!7470 = !DILocalVariable(name: "s1", arg: 1, scope: !7466, file: !7346, line: 145, type: !324)
!7471 = !DILocalVariable(name: "s2", arg: 2, scope: !7466, file: !7346, line: 145, type: !324)
!7472 = !DILocation(line: 0, scope: !7466)
!7473 = !DILocation(line: 147, column: 10, scope: !7466)
!7474 = !DILocation(line: 147, column: 17, scope: !7466)
!7475 = !DILocation(line: 147, column: 14, scope: !7466)
!7476 = !DILocation(line: 147, column: 22, scope: !7466)
!7477 = !DILocation(line: 148, column: 5, scope: !7478)
!7478 = distinct !DILexicalBlock(scope: !7466, file: !7346, line: 147, column: 40)
!7479 = !DILocation(line: 149, column: 5, scope: !7478)
!7480 = distinct !{!7480, !7481, !7482}
!7481 = !DILocation(line: 147, column: 2, scope: !7466)
!7482 = !DILocation(line: 150, column: 2, scope: !7466)
!7483 = !DILocation(line: 152, column: 9, scope: !7466)
!7484 = !DILocation(line: 152, column: 15, scope: !7466)
!7485 = !DILocation(line: 152, column: 13, scope: !7466)
!7486 = !DILocation(line: 152, column: 2, scope: !7466)
!7487 = distinct !DISubprogram(name: "strncmp", scope: !7346, file: !7346, line: 162, type: !7488, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !7490)
!7488 = !DISubroutineType(types: !7489)
!7489 = !{!109, !324, !324, !235}
!7490 = !{!7491, !7492, !7493}
!7491 = !DILocalVariable(name: "s1", arg: 1, scope: !7487, file: !7346, line: 162, type: !324)
!7492 = !DILocalVariable(name: "s2", arg: 2, scope: !7487, file: !7346, line: 162, type: !324)
!7493 = !DILocalVariable(name: "n", arg: 3, scope: !7487, file: !7346, line: 162, type: !235)
!7494 = !DILocation(line: 0, scope: !7487)
!7495 = !DILocation(line: 164, column: 17, scope: !7487)
!7496 = !DILocation(line: 164, column: 21, scope: !7487)
!7497 = !DILocation(line: 164, column: 28, scope: !7487)
!7498 = !DILocation(line: 164, column: 25, scope: !7487)
!7499 = !DILocation(line: 164, column: 33, scope: !7487)
!7500 = !DILocation(line: 165, column: 5, scope: !7501)
!7501 = distinct !DILexicalBlock(scope: !7487, file: !7346, line: 164, column: 51)
!7502 = !DILocation(line: 166, column: 5, scope: !7501)
!7503 = !DILocation(line: 167, column: 4, scope: !7501)
!7504 = distinct !{!7504, !7505, !7506}
!7505 = !DILocation(line: 164, column: 2, scope: !7487)
!7506 = !DILocation(line: 168, column: 2, scope: !7487)
!7507 = !DILocation(line: 170, column: 25, scope: !7487)
!7508 = !DILocation(line: 170, column: 31, scope: !7487)
!7509 = !DILocation(line: 170, column: 29, scope: !7487)
!7510 = !DILocation(line: 170, column: 9, scope: !7487)
!7511 = !DILocation(line: 170, column: 2, scope: !7487)
!7512 = distinct !DISubprogram(name: "strtok_r", scope: !7346, file: !7346, line: 180, type: !7513, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !7516)
!7513 = !DISubroutineType(types: !7514)
!7514 = !{!1147, !1147, !324, !7515}
!7515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 32)
!7516 = !{!7517, !7518, !7519, !7520, !7521}
!7517 = !DILocalVariable(name: "str", arg: 1, scope: !7512, file: !7346, line: 180, type: !1147)
!7518 = !DILocalVariable(name: "sep", arg: 2, scope: !7512, file: !7346, line: 180, type: !324)
!7519 = !DILocalVariable(name: "state", arg: 3, scope: !7512, file: !7346, line: 180, type: !7515)
!7520 = !DILocalVariable(name: "start", scope: !7512, file: !7346, line: 182, type: !1147)
!7521 = !DILocalVariable(name: "end", scope: !7512, file: !7346, line: 182, type: !1147)
!7522 = !DILocation(line: 0, scope: !7512)
!7523 = !DILocation(line: 184, column: 10, scope: !7512)
!7524 = !DILocation(line: 184, column: 22, scope: !7512)
!7525 = !DILocation(line: 187, column: 9, scope: !7512)
!7526 = !DILocation(line: 187, column: 16, scope: !7512)
!7527 = !DILocation(line: 187, column: 19, scope: !7512)
!7528 = !DILocation(line: 187, column: 2, scope: !7512)
!7529 = !DILocation(line: 188, column: 8, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !7512, file: !7346, line: 187, column: 40)
!7531 = distinct !{!7531, !7528, !7532}
!7532 = !DILocation(line: 189, column: 2, scope: !7512)
!7533 = !DILocation(line: 198, column: 9, scope: !7512)
!7534 = !DILocation(line: 198, column: 18, scope: !7512)
!7535 = !DILocation(line: 198, column: 17, scope: !7512)
!7536 = !DILocation(line: 198, column: 2, scope: !7512)
!7537 = !DILocation(line: 199, column: 6, scope: !7538)
!7538 = distinct !DILexicalBlock(scope: !7512, file: !7346, line: 198, column: 37)
!7539 = !DILocation(line: 198, column: 14, scope: !7512)
!7540 = distinct !{!7540, !7536, !7541}
!7541 = !DILocation(line: 200, column: 2, scope: !7512)
!7542 = !DILocation(line: 203, column: 8, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7544, file: !7346, line: 202, column: 20)
!7544 = distinct !DILexicalBlock(scope: !7512, file: !7346, line: 202, column: 6)
!7545 = !DILocation(line: 204, column: 16, scope: !7543)
!7546 = !DILocation(line: 205, column: 2, scope: !7543)
!7547 = !DILocation(line: 210, column: 1, scope: !7512)
!7548 = distinct !DISubprogram(name: "strcat", scope: !7346, file: !7346, line: 212, type: !7347, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !7549)
!7549 = !{!7550, !7551}
!7550 = !DILocalVariable(name: "dest", arg: 1, scope: !7548, file: !7346, line: 212, type: !7349)
!7551 = !DILocalVariable(name: "src", arg: 2, scope: !7548, file: !7346, line: 212, type: !7350)
!7552 = !DILocation(line: 0, scope: !7548)
!7553 = !DILocation(line: 214, column: 16, scope: !7548)
!7554 = !DILocation(line: 214, column: 14, scope: !7548)
!7555 = !DILocation(line: 214, column: 2, scope: !7548)
!7556 = !DILocation(line: 215, column: 2, scope: !7548)
!7557 = distinct !DISubprogram(name: "strncat", scope: !7346, file: !7346, line: 218, type: !7368, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !7558)
!7558 = !{!7559, !7560, !7561, !7562, !7563}
!7559 = !DILocalVariable(name: "dest", arg: 1, scope: !7557, file: !7346, line: 218, type: !7349)
!7560 = !DILocalVariable(name: "src", arg: 2, scope: !7557, file: !7346, line: 218, type: !7350)
!7561 = !DILocalVariable(name: "n", arg: 3, scope: !7557, file: !7346, line: 219, type: !235)
!7562 = !DILocalVariable(name: "orig_dest", scope: !7557, file: !7346, line: 221, type: !1147)
!7563 = !DILocalVariable(name: "len", scope: !7557, file: !7346, line: 222, type: !235)
!7564 = !DILocation(line: 0, scope: !7557)
!7565 = !DILocation(line: 222, column: 15, scope: !7557)
!7566 = !DILocation(line: 224, column: 7, scope: !7557)
!7567 = !DILocation(line: 225, column: 14, scope: !7557)
!7568 = !DILocation(line: 225, column: 19, scope: !7557)
!7569 = !DILocation(line: 225, column: 11, scope: !7557)
!7570 = !DILocation(line: 225, column: 23, scope: !7557)
!7571 = !DILocation(line: 225, column: 28, scope: !7557)
!7572 = !DILocation(line: 225, column: 2, scope: !7557)
!7573 = !DILocation(line: 226, column: 17, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7557, file: !7346, line: 225, column: 38)
!7575 = !DILocation(line: 226, column: 8, scope: !7574)
!7576 = !DILocation(line: 226, column: 11, scope: !7574)
!7577 = distinct !{!7577, !7572, !7578}
!7578 = !DILocation(line: 227, column: 2, scope: !7557)
!7579 = !DILocation(line: 228, column: 8, scope: !7557)
!7580 = !DILocation(line: 230, column: 2, scope: !7557)
!7581 = distinct !DISubprogram(name: "memcmp", scope: !7346, file: !7346, line: 239, type: !7582, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !7584)
!7582 = !DISubroutineType(types: !7583)
!7583 = !{!109, !13, !13, !235}
!7584 = !{!7585, !7586, !7587, !7588, !7589}
!7585 = !DILocalVariable(name: "m1", arg: 1, scope: !7581, file: !7346, line: 239, type: !13)
!7586 = !DILocalVariable(name: "m2", arg: 2, scope: !7581, file: !7346, line: 239, type: !13)
!7587 = !DILocalVariable(name: "n", arg: 3, scope: !7581, file: !7346, line: 239, type: !235)
!7588 = !DILocalVariable(name: "c1", scope: !7581, file: !7346, line: 241, type: !324)
!7589 = !DILocalVariable(name: "c2", scope: !7581, file: !7346, line: 242, type: !324)
!7590 = !DILocation(line: 0, scope: !7581)
!7591 = !DILocation(line: 244, column: 7, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7581, file: !7346, line: 244, column: 6)
!7593 = !DILocation(line: 244, column: 6, scope: !7581)
!7594 = !DILocation(line: 248, column: 10, scope: !7581)
!7595 = !DILocation(line: 248, column: 14, scope: !7581)
!7596 = !DILocation(line: 248, column: 19, scope: !7581)
!7597 = !DILocation(line: 248, column: 2, scope: !7581)
!7598 = !DILocation(line: 248, column: 23, scope: !7581)
!7599 = !DILocation(line: 248, column: 30, scope: !7581)
!7600 = !DILocation(line: 248, column: 27, scope: !7581)
!7601 = !DILocation(line: 249, column: 5, scope: !7602)
!7602 = distinct !DILexicalBlock(scope: !7581, file: !7346, line: 248, column: 36)
!7603 = !DILocation(line: 250, column: 5, scope: !7602)
!7604 = distinct !{!7604, !7597, !7605}
!7605 = !DILocation(line: 251, column: 2, scope: !7581)
!7606 = !DILocation(line: 253, column: 9, scope: !7581)
!7607 = !DILocation(line: 253, column: 15, scope: !7581)
!7608 = !DILocation(line: 253, column: 13, scope: !7581)
!7609 = !DILocation(line: 253, column: 2, scope: !7581)
!7610 = !DILocation(line: 254, column: 1, scope: !7581)
!7611 = distinct !DISubprogram(name: "memmove", scope: !7346, file: !7346, line: 263, type: !7612, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !7614)
!7612 = !DISubroutineType(types: !7613)
!7613 = !{!108, !108, !13, !235}
!7614 = !{!7615, !7616, !7617, !7618, !7619}
!7615 = !DILocalVariable(name: "d", arg: 1, scope: !7611, file: !7346, line: 263, type: !108)
!7616 = !DILocalVariable(name: "s", arg: 2, scope: !7611, file: !7346, line: 263, type: !13)
!7617 = !DILocalVariable(name: "n", arg: 3, scope: !7611, file: !7346, line: 263, type: !235)
!7618 = !DILocalVariable(name: "dest", scope: !7611, file: !7346, line: 265, type: !1147)
!7619 = !DILocalVariable(name: "src", scope: !7611, file: !7346, line: 266, type: !324)
!7620 = !DILocation(line: 0, scope: !7611)
!7621 = !DILocation(line: 268, column: 21, scope: !7622)
!7622 = distinct !DILexicalBlock(scope: !7611, file: !7346, line: 268, column: 6)
!7623 = !DILocation(line: 268, column: 28, scope: !7622)
!7624 = !DILocation(line: 268, column: 6, scope: !7611)
!7625 = !DILocation(line: 280, column: 12, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7622, file: !7346, line: 278, column: 9)
!7627 = !DILocation(line: 280, column: 3, scope: !7626)
!7628 = !DILocation(line: 275, column: 5, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7630, file: !7346, line: 274, column: 17)
!7630 = distinct !DILexicalBlock(scope: !7622, file: !7346, line: 268, column: 33)
!7631 = !DILocation(line: 276, column: 14, scope: !7629)
!7632 = !DILocation(line: 276, column: 4, scope: !7629)
!7633 = !DILocation(line: 276, column: 12, scope: !7629)
!7634 = !DILocation(line: 274, column: 12, scope: !7630)
!7635 = !DILocation(line: 274, column: 3, scope: !7630)
!7636 = distinct !{!7636, !7635, !7637}
!7637 = !DILocation(line: 277, column: 3, scope: !7630)
!7638 = !DILocation(line: 281, column: 12, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7626, file: !7346, line: 280, column: 17)
!7640 = !DILocation(line: 281, column: 10, scope: !7639)
!7641 = !DILocation(line: 282, column: 8, scope: !7639)
!7642 = !DILocation(line: 283, column: 7, scope: !7639)
!7643 = !DILocation(line: 284, column: 5, scope: !7639)
!7644 = distinct !{!7644, !7627, !7645}
!7645 = !DILocation(line: 285, column: 3, scope: !7626)
!7646 = !DILocation(line: 288, column: 2, scope: !7611)
!7647 = distinct !DISubprogram(name: "memcpy", scope: !7346, file: !7346, line: 298, type: !7648, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !7652)
!7648 = !DISubroutineType(types: !7649)
!7649 = !{!108, !7650, !7651, !235}
!7650 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !108)
!7651 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7652 = !{!7653, !7654, !7655, !7656, !7657}
!7653 = !DILocalVariable(name: "d", arg: 1, scope: !7647, file: !7346, line: 298, type: !7650)
!7654 = !DILocalVariable(name: "s", arg: 2, scope: !7647, file: !7346, line: 298, type: !7651)
!7655 = !DILocalVariable(name: "n", arg: 3, scope: !7647, file: !7346, line: 298, type: !235)
!7656 = !DILocalVariable(name: "d_byte", scope: !7647, file: !7346, line: 302, type: !980)
!7657 = !DILocalVariable(name: "s_byte", scope: !7647, file: !7346, line: 303, type: !2872)
!7658 = !DILocation(line: 0, scope: !7647)
!7659 = !DILocation(line: 337, column: 11, scope: !7647)
!7660 = !DILocation(line: 337, column: 2, scope: !7647)
!7661 = !DILocation(line: 338, column: 25, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7647, file: !7346, line: 337, column: 16)
!7663 = !DILocation(line: 338, column: 17, scope: !7662)
!7664 = !DILocation(line: 338, column: 11, scope: !7662)
!7665 = !DILocation(line: 338, column: 15, scope: !7662)
!7666 = !DILocation(line: 339, column: 4, scope: !7662)
!7667 = distinct !{!7667, !7660, !7668}
!7668 = !DILocation(line: 340, column: 2, scope: !7647)
!7669 = !DILocation(line: 342, column: 2, scope: !7647)
!7670 = distinct !DISubprogram(name: "memset", scope: !7346, file: !7346, line: 352, type: !7671, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !7673)
!7671 = !DISubroutineType(types: !7672)
!7672 = !{!108, !108, !109, !235}
!7673 = !{!7674, !7675, !7676, !7677, !7678}
!7674 = !DILocalVariable(name: "buf", arg: 1, scope: !7670, file: !7346, line: 352, type: !108)
!7675 = !DILocalVariable(name: "c", arg: 2, scope: !7670, file: !7346, line: 352, type: !109)
!7676 = !DILocalVariable(name: "n", arg: 3, scope: !7670, file: !7346, line: 352, type: !235)
!7677 = !DILocalVariable(name: "d_byte", scope: !7670, file: !7346, line: 356, type: !980)
!7678 = !DILocalVariable(name: "c_byte", scope: !7670, file: !7346, line: 357, type: !168)
!7679 = !DILocation(line: 0, scope: !7670)
!7680 = !DILocation(line: 357, column: 25, scope: !7670)
!7681 = !DILocation(line: 389, column: 11, scope: !7670)
!7682 = !DILocation(line: 389, column: 2, scope: !7670)
!7683 = !DILocation(line: 390, column: 11, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7670, file: !7346, line: 389, column: 16)
!7685 = !DILocation(line: 390, column: 15, scope: !7684)
!7686 = !DILocation(line: 391, column: 4, scope: !7684)
!7687 = distinct !{!7687, !7682, !7688}
!7688 = !DILocation(line: 392, column: 2, scope: !7670)
!7689 = !DILocation(line: 394, column: 2, scope: !7670)
!7690 = distinct !DISubprogram(name: "memchr", scope: !7346, file: !7346, line: 404, type: !7691, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !7693)
!7691 = !DISubroutineType(types: !7692)
!7692 = !{!108, !13, !109, !235}
!7693 = !{!7694, !7695, !7696, !7697}
!7694 = !DILocalVariable(name: "s", arg: 1, scope: !7690, file: !7346, line: 404, type: !13)
!7695 = !DILocalVariable(name: "c", arg: 2, scope: !7690, file: !7346, line: 404, type: !109)
!7696 = !DILocalVariable(name: "n", arg: 3, scope: !7690, file: !7346, line: 404, type: !235)
!7697 = !DILocalVariable(name: "p", scope: !7698, file: !7346, line: 407, type: !2872)
!7698 = distinct !DILexicalBlock(scope: !7699, file: !7346, line: 406, column: 14)
!7699 = distinct !DILexicalBlock(scope: !7690, file: !7346, line: 406, column: 6)
!7700 = !DILocation(line: 0, scope: !7690)
!7701 = !DILocation(line: 406, column: 8, scope: !7699)
!7702 = !DILocation(line: 406, column: 6, scope: !7690)
!7703 = !DILocation(line: 409, column: 3, scope: !7698)
!7704 = !DILocation(line: 0, scope: !7698)
!7705 = !DILocation(line: 410, column: 8, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7707, file: !7346, line: 410, column: 8)
!7707 = distinct !DILexicalBlock(scope: !7698, file: !7346, line: 409, column: 6)
!7708 = !DILocation(line: 410, column: 13, scope: !7706)
!7709 = !DILocation(line: 410, column: 8, scope: !7707)
!7710 = distinct !{!7710, !7703, !7711}
!7711 = !DILocation(line: 414, column: 20, scope: !7698)
!7712 = !DILocation(line: 417, column: 2, scope: !7690)
!7713 = !DILocation(line: 418, column: 1, scope: !7690)
!7714 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !696, file: !696, line: 368, type: !749, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7715)
!7715 = !{!7716}
!7716 = !DILocalVariable(name: "dev", arg: 1, scope: !7714, file: !696, line: 368, type: !725)
!7717 = !DILocation(line: 0, scope: !7714)
!7718 = !DILocation(line: 370, column: 2, scope: !7714)
!7719 = !DILocation(line: 371, column: 1, scope: !7714)
!7720 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !696, file: !696, line: 243, type: !7721, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7723)
!7721 = !DISubroutineType(types: !7722)
!7722 = !{null, !109, !109, !725}
!7723 = !{!7724, !7725, !7726, !7727, !7729}
!7724 = !DILocalVariable(name: "min", arg: 1, scope: !7720, file: !696, line: 243, type: !109)
!7725 = !DILocalVariable(name: "max", arg: 2, scope: !7720, file: !696, line: 243, type: !109)
!7726 = !DILocalVariable(name: "dev", arg: 3, scope: !7720, file: !696, line: 243, type: !725)
!7727 = !DILocalVariable(name: "data", scope: !7720, file: !696, line: 245, type: !7728)
!7728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 32)
!7729 = !DILocalVariable(name: "line", scope: !7720, file: !696, line: 246, type: !109)
!7730 = !DILocation(line: 0, scope: !7720)
!7731 = !DILocation(line: 245, column: 38, scope: !7720)
!7732 = !DILocation(line: 249, column: 24, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7734, file: !696, line: 249, column: 2)
!7734 = distinct !DILexicalBlock(scope: !7720, file: !696, line: 249, column: 2)
!7735 = !DILocation(line: 249, column: 2, scope: !7734)
!7736 = !DILocation(line: 251, column: 7, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7738, file: !696, line: 251, column: 7)
!7738 = distinct !DILexicalBlock(scope: !7733, file: !696, line: 249, column: 39)
!7739 = !DILocation(line: 251, column: 7, scope: !7738)
!7740 = !DILocation(line: 253, column: 4, scope: !7741)
!7741 = distinct !DILexicalBlock(scope: !7737, file: !696, line: 251, column: 36)
!7742 = !DILocation(line: 256, column: 24, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7741, file: !696, line: 256, column: 8)
!7744 = !DILocation(line: 256, column: 9, scope: !7743)
!7745 = !DILocation(line: 256, column: 8, scope: !7741)
!7746 = !DILocation(line: 260, column: 43, scope: !7741)
!7747 = !DILocation(line: 260, column: 4, scope: !7741)
!7748 = !DILocation(line: 261, column: 3, scope: !7741)
!7749 = !DILocation(line: 249, column: 35, scope: !7733)
!7750 = distinct !{!7750, !7735, !7751}
!7751 = !DILocation(line: 262, column: 2, scope: !7734)
!7752 = !DILocation(line: 263, column: 1, scope: !7720)
!7753 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !696, file: !696, line: 158, type: !288, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7754)
!7754 = !{!7755}
!7755 = !DILocalVariable(name: "line", arg: 1, scope: !7753, file: !696, line: 158, type: !109)
!7756 = !DILocation(line: 0, scope: !7753)
!7757 = !DILocation(line: 170, column: 38, scope: !7758)
!7758 = distinct !DILexicalBlock(scope: !7759, file: !696, line: 160, column: 17)
!7759 = distinct !DILexicalBlock(scope: !7753, file: !696, line: 160, column: 6)
!7760 = !DILocation(line: 170, column: 10, scope: !7758)
!7761 = !DILocation(line: 176, column: 1, scope: !7753)
!7762 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !696, file: !696, line: 183, type: !3431, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7763)
!7763 = !{!7764}
!7764 = !DILocalVariable(name: "line", arg: 1, scope: !7762, file: !696, line: 183, type: !109)
!7765 = !DILocation(line: 0, scope: !7762)
!7766 = !DILocation(line: 195, column: 28, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7768, file: !696, line: 185, column: 17)
!7768 = distinct !DILexicalBlock(scope: !7762, file: !696, line: 185, column: 6)
!7769 = !DILocation(line: 195, column: 3, scope: !7767)
!7770 = !DILocation(line: 200, column: 1, scope: !7762)
!7771 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !7772, file: !7772, line: 910, type: !6274, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7773)
!7772 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7773 = !{!7774}
!7774 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7771, file: !7772, line: 910, type: !110)
!7775 = !DILocation(line: 0, scope: !7771)
!7776 = !DILocation(line: 912, column: 3, scope: !7771)
!7777 = !DILocation(line: 913, column: 1, scope: !7771)
!7778 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !7772, file: !7772, line: 834, type: !7241, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7779)
!7779 = !{!7780}
!7780 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7778, file: !7772, line: 834, type: !110)
!7781 = !DILocation(line: 0, scope: !7778)
!7782 = !DILocation(line: 836, column: 11, scope: !7778)
!7783 = !DILocation(line: 836, column: 40, scope: !7778)
!7784 = !DILocation(line: 836, column: 3, scope: !7778)
!7785 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !696, file: !696, line: 304, type: !749, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7786)
!7786 = !{!7787}
!7787 = !DILocalVariable(name: "dev", arg: 1, scope: !7785, file: !696, line: 304, type: !725)
!7788 = !DILocation(line: 0, scope: !7785)
!7789 = !DILocation(line: 306, column: 2, scope: !7785)
!7790 = !DILocation(line: 307, column: 1, scope: !7785)
!7791 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !696, file: !696, line: 299, type: !749, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7792)
!7792 = !{!7793}
!7793 = !DILocalVariable(name: "dev", arg: 1, scope: !7791, file: !696, line: 299, type: !725)
!7794 = !DILocation(line: 0, scope: !7791)
!7795 = !DILocation(line: 301, column: 2, scope: !7791)
!7796 = !DILocation(line: 302, column: 1, scope: !7791)
!7797 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !696, file: !696, line: 294, type: !749, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7798)
!7798 = !{!7799}
!7799 = !DILocalVariable(name: "dev", arg: 1, scope: !7797, file: !696, line: 294, type: !725)
!7800 = !DILocation(line: 0, scope: !7797)
!7801 = !DILocation(line: 296, column: 2, scope: !7797)
!7802 = !DILocation(line: 297, column: 1, scope: !7797)
!7803 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !696, file: !696, line: 397, type: !749, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7804)
!7804 = !{!7805}
!7805 = !DILocalVariable(name: "dev", arg: 1, scope: !7803, file: !696, line: 397, type: !725)
!7806 = !DILocation(line: 0, scope: !7803)
!7807 = !DILocation(line: 399, column: 2, scope: !7803)
!7808 = !DILocation(line: 400, column: 1, scope: !7803)
!7809 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !696, file: !696, line: 392, type: !749, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7810)
!7810 = !{!7811}
!7811 = !DILocalVariable(name: "dev", arg: 1, scope: !7809, file: !696, line: 392, type: !725)
!7812 = !DILocation(line: 0, scope: !7809)
!7813 = !DILocation(line: 394, column: 2, scope: !7809)
!7814 = !DILocation(line: 395, column: 1, scope: !7809)
!7815 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !696, file: !696, line: 289, type: !749, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7816)
!7816 = !{!7817}
!7817 = !DILocalVariable(name: "dev", arg: 1, scope: !7815, file: !696, line: 289, type: !725)
!7818 = !DILocation(line: 0, scope: !7815)
!7819 = !DILocation(line: 291, column: 2, scope: !7815)
!7820 = !DILocation(line: 292, column: 1, scope: !7815)
!7821 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !696, file: !696, line: 387, type: !749, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7822)
!7822 = !{!7823}
!7823 = !DILocalVariable(name: "dev", arg: 1, scope: !7821, file: !696, line: 387, type: !725)
!7824 = !DILocation(line: 0, scope: !7821)
!7825 = !DILocation(line: 389, column: 2, scope: !7821)
!7826 = !DILocation(line: 390, column: 1, scope: !7821)
!7827 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !696, file: !696, line: 382, type: !749, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7828)
!7828 = !{!7829}
!7829 = !DILocalVariable(name: "dev", arg: 1, scope: !7827, file: !696, line: 382, type: !725)
!7830 = !DILocation(line: 0, scope: !7827)
!7831 = !DILocation(line: 384, column: 2, scope: !7827)
!7832 = !DILocation(line: 385, column: 1, scope: !7827)
!7833 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !696, file: !696, line: 373, type: !749, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7834)
!7834 = !{!7835}
!7835 = !DILocalVariable(name: "dev", arg: 1, scope: !7833, file: !696, line: 373, type: !725)
!7836 = !DILocation(line: 0, scope: !7833)
!7837 = !DILocation(line: 375, column: 2, scope: !7833)
!7838 = !DILocation(line: 376, column: 1, scope: !7833)
!7839 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !696, file: !696, line: 284, type: !749, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7840)
!7840 = !{!7841}
!7841 = !DILocalVariable(name: "dev", arg: 1, scope: !7839, file: !696, line: 284, type: !725)
!7842 = !DILocation(line: 0, scope: !7839)
!7843 = !DILocation(line: 286, column: 2, scope: !7839)
!7844 = !DILocation(line: 287, column: 1, scope: !7839)
!7845 = distinct !DISubprogram(name: "stm32_exti_init", scope: !696, file: !696, line: 416, type: !723, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7846)
!7846 = !{!7847}
!7847 = !DILocalVariable(name: "dev", arg: 1, scope: !7845, file: !696, line: 416, type: !725)
!7848 = !DILocation(line: 0, scope: !7845)
!7849 = !DILocation(line: 418, column: 2, scope: !7845)
!7850 = !DILocation(line: 420, column: 2, scope: !7845)
!7851 = !DILocation(line: 0, scope: !748)
!7852 = !DILocation(line: 493, column: 2, scope: !7853)
!7853 = distinct !DILexicalBlock(scope: !748, file: !696, line: 493, column: 2)
!7854 = !DILocation(line: 497, column: 2, scope: !7855)
!7855 = distinct !DILexicalBlock(scope: !748, file: !696, line: 497, column: 2)
!7856 = !DILocation(line: 507, column: 2, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !748, file: !696, line: 507, column: 2)
!7858 = !DILocation(line: 512, column: 2, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !748, file: !696, line: 512, column: 2)
!7860 = !DILocation(line: 516, column: 2, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !748, file: !696, line: 516, column: 2)
!7862 = !DILocation(line: 523, column: 2, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !748, file: !696, line: 523, column: 2)
!7864 = !DILocation(line: 527, column: 2, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !748, file: !696, line: 527, column: 2)
!7866 = !DILocation(line: 581, column: 2, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !748, file: !696, line: 581, column: 2)
!7868 = !DILocation(line: 586, column: 2, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !748, file: !696, line: 586, column: 2)
!7870 = !DILocation(line: 591, column: 2, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !748, file: !696, line: 591, column: 2)
!7872 = !DILocation(line: 595, column: 2, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !748, file: !696, line: 595, column: 2)
!7874 = !DILocation(line: 607, column: 1, scope: !748)
!7875 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !696, file: !696, line: 112, type: !3431, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7876)
!7876 = !{!7877, !7878}
!7877 = !DILocalVariable(name: "line", arg: 1, scope: !7875, file: !696, line: 112, type: !109)
!7878 = !DILocalVariable(name: "irqnum", scope: !7875, file: !696, line: 114, type: !109)
!7879 = !DILocation(line: 0, scope: !7875)
!7880 = !DILocation(line: 122, column: 13, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7875, file: !696, line: 122, column: 6)
!7882 = !DILocation(line: 122, column: 6, scope: !7875)
!7883 = !DILocation(line: 123, column: 3, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !7885, file: !696, line: 123, column: 3)
!7885 = distinct !DILexicalBlock(scope: !7886, file: !696, line: 123, column: 3)
!7886 = distinct !DILexicalBlock(scope: !7887, file: !696, line: 123, column: 3)
!7887 = distinct !DILexicalBlock(scope: !7881, file: !696, line: 122, column: 22)
!7888 = !DILocation(line: 121, column: 11, scope: !7875)
!7889 = !DILocation(line: 130, column: 26, scope: !7875)
!7890 = !DILocation(line: 130, column: 2, scope: !7875)
!7891 = !DILocation(line: 134, column: 2, scope: !7875)
!7892 = !DILocation(line: 135, column: 1, scope: !7875)
!7893 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !7772, file: !7772, line: 268, type: !6274, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7894)
!7894 = !{!7895}
!7895 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7893, file: !7772, line: 268, type: !110)
!7896 = !DILocation(line: 0, scope: !7893)
!7897 = !DILocation(line: 270, column: 3, scope: !7893)
!7898 = !DILocation(line: 271, column: 1, scope: !7893)
!7899 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !696, file: !696, line: 137, type: !3431, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7900)
!7900 = !{!7901}
!7901 = !DILocalVariable(name: "line", arg: 1, scope: !7899, file: !696, line: 137, type: !109)
!7902 = !DILocation(line: 0, scope: !7899)
!7903 = !DILocation(line: 141, column: 11, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7899, file: !696, line: 141, column: 6)
!7905 = !DILocation(line: 141, column: 6, scope: !7899)
!7906 = !DILocation(line: 145, column: 28, scope: !7907)
!7907 = distinct !DILexicalBlock(scope: !7904, file: !696, line: 141, column: 17)
!7908 = !DILocation(line: 145, column: 3, scope: !7907)
!7909 = !DILocation(line: 147, column: 2, scope: !7907)
!7910 = !DILocation(line: 151, column: 1, scope: !7899)
!7911 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !7772, file: !7772, line: 309, type: !6274, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7912)
!7912 = !{!7913}
!7913 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7911, file: !7772, line: 309, type: !110)
!7914 = !DILocation(line: 0, scope: !7911)
!7915 = !DILocation(line: 311, column: 3, scope: !7911)
!7916 = !DILocation(line: 312, column: 1, scope: !7911)
!7917 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !696, file: !696, line: 202, type: !7918, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7920)
!7918 = !DISubroutineType(types: !7919)
!7919 = !{null, !109, !109}
!7920 = !{!7921, !7922}
!7921 = !DILocalVariable(name: "line", arg: 1, scope: !7917, file: !696, line: 202, type: !109)
!7922 = !DILocalVariable(name: "trigger", arg: 2, scope: !7917, file: !696, line: 202, type: !109)
!7923 = !DILocation(line: 0, scope: !7917)
!7924 = !DILocation(line: 211, column: 2, scope: !7917)
!7925 = !DILocation(line: 213, column: 36, scope: !7926)
!7926 = distinct !DILexicalBlock(scope: !7917, file: !696, line: 211, column: 19)
!7927 = !DILocation(line: 213, column: 3, scope: !7926)
!7928 = !DILocation(line: 214, column: 3, scope: !7926)
!7929 = !DILocation(line: 215, column: 3, scope: !7926)
!7930 = !DILocation(line: 217, column: 35, scope: !7926)
!7931 = !DILocation(line: 217, column: 3, scope: !7926)
!7932 = !DILocation(line: 218, column: 3, scope: !7926)
!7933 = !DILocation(line: 219, column: 3, scope: !7926)
!7934 = !DILocation(line: 221, column: 36, scope: !7926)
!7935 = !DILocation(line: 221, column: 3, scope: !7926)
!7936 = !DILocation(line: 222, column: 3, scope: !7926)
!7937 = !DILocation(line: 223, column: 3, scope: !7926)
!7938 = !DILocation(line: 225, column: 35, scope: !7926)
!7939 = !DILocation(line: 225, column: 3, scope: !7926)
!7940 = !DILocation(line: 226, column: 3, scope: !7926)
!7941 = !DILocation(line: 227, column: 3, scope: !7926)
!7942 = !DILocation(line: 232, column: 1, scope: !7917)
!7943 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !7772, file: !7772, line: 573, type: !6274, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7944)
!7944 = !{!7945}
!7945 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7943, file: !7772, line: 573, type: !110)
!7946 = !DILocation(line: 0, scope: !7943)
!7947 = !DILocation(line: 575, column: 3, scope: !7943)
!7948 = !DILocation(line: 577, column: 1, scope: !7943)
!7949 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !7772, file: !7772, line: 703, type: !6274, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7950)
!7950 = !{!7951}
!7951 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7949, file: !7772, line: 703, type: !110)
!7952 = !DILocation(line: 0, scope: !7949)
!7953 = !DILocation(line: 705, column: 3, scope: !7949)
!7954 = !DILocation(line: 706, column: 1, scope: !7949)
!7955 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !7772, file: !7772, line: 529, type: !6274, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7956)
!7956 = !{!7957}
!7957 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7955, file: !7772, line: 529, type: !110)
!7958 = !DILocation(line: 0, scope: !7955)
!7959 = !DILocation(line: 531, column: 3, scope: !7955)
!7960 = !DILocation(line: 533, column: 1, scope: !7955)
!7961 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !7772, file: !7772, line: 661, type: !6274, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7962)
!7962 = !{!7963}
!7963 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7961, file: !7772, line: 661, type: !110)
!7964 = !DILocation(line: 0, scope: !7961)
!7965 = !DILocation(line: 663, column: 3, scope: !7961)
!7966 = !DILocation(line: 664, column: 1, scope: !7961)
!7967 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !696, file: !696, line: 433, type: !7968, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7970)
!7968 = !DISubroutineType(types: !7969)
!7969 = !{!109, !109, !736, !108}
!7970 = !{!7971, !7972, !7973, !7974, !7976}
!7971 = !DILocalVariable(name: "line", arg: 1, scope: !7967, file: !696, line: 433, type: !109)
!7972 = !DILocalVariable(name: "cb", arg: 2, scope: !7967, file: !696, line: 433, type: !736)
!7973 = !DILocalVariable(name: "arg", arg: 3, scope: !7967, file: !696, line: 433, type: !108)
!7974 = !DILocalVariable(name: "dev", scope: !7967, file: !696, line: 435, type: !7975)
!7975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !725)
!7976 = !DILocalVariable(name: "data", scope: !7967, file: !696, line: 436, type: !7728)
!7977 = !DILocation(line: 0, scope: !7967)
!7978 = !DILocation(line: 438, column: 21, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7967, file: !696, line: 438, column: 6)
!7980 = !DILocation(line: 438, column: 6, scope: !7979)
!7981 = !DILocation(line: 438, column: 6, scope: !7967)
!7982 = !DILocation(line: 442, column: 20, scope: !7967)
!7983 = !DILocation(line: 443, column: 17, scope: !7967)
!7984 = !DILocation(line: 443, column: 22, scope: !7967)
!7985 = !DILocation(line: 445, column: 2, scope: !7967)
!7986 = !DILocation(line: 446, column: 1, scope: !7967)
!7987 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !696, file: !696, line: 448, type: !3431, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7988)
!7988 = !{!7989, !7990, !7991}
!7989 = !DILocalVariable(name: "line", arg: 1, scope: !7987, file: !696, line: 448, type: !109)
!7990 = !DILocalVariable(name: "dev", scope: !7987, file: !696, line: 450, type: !7975)
!7991 = !DILocalVariable(name: "data", scope: !7987, file: !696, line: 451, type: !7728)
!7992 = !DILocation(line: 0, scope: !7987)
!7993 = !DILocation(line: 453, column: 17, scope: !7987)
!7994 = !DILocation(line: 453, column: 20, scope: !7987)
!7995 = !DILocation(line: 454, column: 17, scope: !7987)
!7996 = !DILocation(line: 454, column: 22, scope: !7987)
!7997 = !DILocation(line: 455, column: 1, scope: !7987)
!7998 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !879, file: !879, line: 183, type: !917, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !7999)
!7999 = !{!8000, !8001, !8002, !8003, !8004}
!8000 = !DILocalVariable(name: "dev", arg: 1, scope: !7998, file: !879, line: 183, type: !908)
!8001 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7998, file: !879, line: 184, type: !919)
!8002 = !DILocalVariable(name: "pclken", scope: !7998, file: !879, line: 186, type: !869)
!8003 = !DILocalVariable(name: "reg", scope: !7998, file: !879, line: 187, type: !1461)
!8004 = !DILocalVariable(name: "reg_val", scope: !7998, file: !879, line: 188, type: !110)
!8005 = !DILocation(line: 0, scope: !7998)
!8006 = !DILocation(line: 192, column: 6, scope: !8007)
!8007 = distinct !DILexicalBlock(scope: !7998, file: !879, line: 192, column: 6)
!8008 = !DILocation(line: 192, column: 6, scope: !7998)
!8009 = !DILocation(line: 197, column: 52, scope: !7998)
!8010 = !DILocation(line: 197, column: 8, scope: !7998)
!8011 = !DILocation(line: 198, column: 12, scope: !7998)
!8012 = !DILocation(line: 199, column: 21, scope: !7998)
!8013 = !DILocation(line: 199, column: 10, scope: !7998)
!8014 = !DILocation(line: 200, column: 7, scope: !7998)
!8015 = !DILocation(line: 202, column: 2, scope: !7998)
!8016 = !DILocation(line: 203, column: 1, scope: !7998)
!8017 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !879, file: !879, line: 205, type: !917, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !8018)
!8018 = !{!8019, !8020, !8021, !8022, !8023}
!8019 = !DILocalVariable(name: "dev", arg: 1, scope: !8017, file: !879, line: 205, type: !908)
!8020 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8017, file: !879, line: 206, type: !919)
!8021 = !DILocalVariable(name: "pclken", scope: !8017, file: !879, line: 208, type: !869)
!8022 = !DILocalVariable(name: "reg", scope: !8017, file: !879, line: 209, type: !1461)
!8023 = !DILocalVariable(name: "reg_val", scope: !8017, file: !879, line: 210, type: !110)
!8024 = !DILocation(line: 0, scope: !8017)
!8025 = !DILocation(line: 214, column: 6, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !8017, file: !879, line: 214, column: 6)
!8027 = !DILocation(line: 214, column: 6, scope: !8017)
!8028 = !DILocation(line: 219, column: 52, scope: !8017)
!8029 = !DILocation(line: 219, column: 8, scope: !8017)
!8030 = !DILocation(line: 220, column: 12, scope: !8017)
!8031 = !DILocation(line: 221, column: 22, scope: !8017)
!8032 = !DILocation(line: 221, column: 13, scope: !8017)
!8033 = !DILocation(line: 221, column: 10, scope: !8017)
!8034 = !DILocation(line: 222, column: 7, scope: !8017)
!8035 = !DILocation(line: 224, column: 2, scope: !8017)
!8036 = !DILocation(line: 225, column: 1, scope: !8017)
!8037 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !879, file: !879, line: 262, type: !933, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !8038)
!8038 = !{!8039, !8040, !8041, !8042, !8043, !8044, !8045, !8046}
!8039 = !DILocalVariable(name: "clock", arg: 1, scope: !8037, file: !879, line: 262, type: !908)
!8040 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8037, file: !879, line: 263, type: !919)
!8041 = !DILocalVariable(name: "rate", arg: 3, scope: !8037, file: !879, line: 264, type: !875)
!8042 = !DILocalVariable(name: "pclken", scope: !8037, file: !879, line: 266, type: !869)
!8043 = !DILocalVariable(name: "ahb_clock", scope: !8037, file: !879, line: 273, type: !110)
!8044 = !DILocalVariable(name: "apb1_clock", scope: !8037, file: !879, line: 274, type: !110)
!8045 = !DILocalVariable(name: "apb2_clock", scope: !8037, file: !879, line: 276, type: !110)
!8046 = !DILocalVariable(name: "ahb3_clock", scope: !8037, file: !879, line: 286, type: !110)
!8047 = !DILocation(line: 0, scope: !8037)
!8048 = !DILocation(line: 273, column: 23, scope: !8037)
!8049 = !DILocation(line: 274, column: 24, scope: !8037)
!8050 = !DILocation(line: 299, column: 18, scope: !8037)
!8051 = !DILocation(line: 299, column: 2, scope: !8037)
!8052 = !DILocation(line: 319, column: 3, scope: !8053)
!8053 = distinct !DILexicalBlock(scope: !8037, file: !879, line: 299, column: 23)
!8054 = !DILocation(line: 323, column: 3, scope: !8053)
!8055 = !DILocation(line: 346, column: 33, scope: !8053)
!8056 = !DILocation(line: 346, column: 11, scope: !8053)
!8057 = !DILocation(line: 350, column: 3, scope: !8053)
!8058 = !DILocation(line: 354, column: 33, scope: !8053)
!8059 = !DILocation(line: 354, column: 11, scope: !8053)
!8060 = !DILocation(line: 358, column: 3, scope: !8053)
!8061 = !DILocation(line: 374, column: 3, scope: !8053)
!8062 = !DILocation(line: 379, column: 3, scope: !8053)
!8063 = !DILocation(line: 0, scope: !8053)
!8064 = !DILocation(line: 396, column: 1, scope: !8037)
!8065 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !879, file: !879, line: 227, type: !949, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !8066)
!8066 = !{!8067, !8068, !8069, !8070, !8071, !8072, !8073, !8074}
!8067 = !DILocalVariable(name: "dev", arg: 1, scope: !8065, file: !879, line: 227, type: !908)
!8068 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8065, file: !879, line: 228, type: !919)
!8069 = !DILocalVariable(name: "data", arg: 3, scope: !8065, file: !879, line: 229, type: !108)
!8070 = !DILocalVariable(name: "pclken", scope: !8065, file: !879, line: 233, type: !869)
!8071 = !DILocalVariable(name: "reg", scope: !8065, file: !879, line: 234, type: !1461)
!8072 = !DILocalVariable(name: "reg_val", scope: !8065, file: !879, line: 235, type: !110)
!8073 = !DILocalVariable(name: "dt_val", scope: !8065, file: !879, line: 235, type: !110)
!8074 = !DILocalVariable(name: "err", scope: !8065, file: !879, line: 236, type: !109)
!8075 = !DILocation(line: 0, scope: !8065)
!8076 = !DILocation(line: 241, column: 30, scope: !8065)
!8077 = !DILocation(line: 241, column: 8, scope: !8065)
!8078 = !DILocation(line: 242, column: 10, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8065, file: !879, line: 242, column: 6)
!8080 = !DILocation(line: 242, column: 6, scope: !8065)
!8081 = !DILocation(line: 247, column: 11, scope: !8065)
!8082 = !DILocation(line: 248, column: 6, scope: !8065)
!8083 = !DILocation(line: 247, column: 44, scope: !8065)
!8084 = !DILocation(line: 250, column: 6, scope: !8065)
!8085 = !DILocation(line: 249, column: 52, scope: !8065)
!8086 = !DILocation(line: 249, column: 8, scope: !8065)
!8087 = !DILocation(line: 251, column: 12, scope: !8065)
!8088 = !DILocation(line: 252, column: 10, scope: !8065)
!8089 = !DILocation(line: 253, column: 7, scope: !8065)
!8090 = !DILocation(line: 255, column: 2, scope: !8065)
!8091 = !DILocation(line: 260, column: 1, scope: !8065)
!8092 = distinct !DISubprogram(name: "enabled_clock", scope: !879, file: !879, line: 100, type: !8093, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !8095)
!8093 = !DISubroutineType(types: !8094)
!8094 = !{!109, !110}
!8095 = !{!8096, !8097}
!8096 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8092, file: !879, line: 100, type: !110)
!8097 = !DILocalVariable(name: "r", scope: !8092, file: !879, line: 102, type: !109)
!8098 = !DILocation(line: 0, scope: !8092)
!8099 = !DILocation(line: 104, column: 2, scope: !8092)
!8100 = !DILocation(line: 180, column: 2, scope: !8092)
!8101 = !DILocation(line: 181, column: 1, scope: !8092)
!8102 = distinct !DISubprogram(name: "get_bus_clock", scope: !879, file: !879, line: 79, type: !8103, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !8105)
!8103 = !DISubroutineType(types: !8104)
!8104 = !{!110, !110, !110}
!8105 = !{!8106, !8107}
!8106 = !DILocalVariable(name: "clock", arg: 1, scope: !8102, file: !879, line: 79, type: !110)
!8107 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8102, file: !879, line: 79, type: !110)
!8108 = !DILocation(line: 0, scope: !8102)
!8109 = !DILocation(line: 81, column: 15, scope: !8102)
!8110 = !DILocation(line: 81, column: 2, scope: !8102)
!8111 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !879, file: !879, line: 68, type: !8112, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !8114)
!8112 = !DISubroutineType(types: !8113)
!8113 = !{!110, !110, !109, !109, !109}
!8114 = !{!8115, !8116, !8117, !8118}
!8115 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8111, file: !879, line: 68, type: !110)
!8116 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8111, file: !879, line: 69, type: !109)
!8117 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8111, file: !879, line: 70, type: !109)
!8118 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8111, file: !879, line: 71, type: !109)
!8119 = !DILocation(line: 0, scope: !8111)
!8120 = !DILocation(line: 75, column: 22, scope: !8111)
!8121 = !DILocation(line: 76, column: 13, scope: !8111)
!8122 = !DILocation(line: 75, column: 34, scope: !8111)
!8123 = !DILocation(line: 75, column: 2, scope: !8111)
!8124 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !879, file: !879, line: 641, type: !906, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !8125)
!8125 = !{!8126, !8127, !8128}
!8126 = !DILocalVariable(name: "dev", arg: 1, scope: !8124, file: !879, line: 641, type: !908)
!8127 = !DILocalVariable(name: "old_flash_freq", scope: !8124, file: !879, line: 664, type: !110)
!8128 = !DILocalVariable(name: "new_flash_freq", scope: !8124, file: !879, line: 665, type: !110)
!8129 = !DILocation(line: 0, scope: !8124)
!8130 = !DILocation(line: 646, column: 2, scope: !8124)
!8131 = !DILocation(line: 667, column: 19, scope: !8124)
!8132 = !DILocation(line: 674, column: 21, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8124, file: !879, line: 674, column: 6)
!8134 = !DILocation(line: 674, column: 6, scope: !8124)
!8135 = !DILocation(line: 675, column: 3, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8133, file: !879, line: 674, column: 59)
!8137 = !DILocation(line: 676, column: 2, scope: !8136)
!8138 = !DILocation(line: 680, column: 2, scope: !8124)
!8139 = !DILocation(line: 683, column: 2, scope: !8124)
!8140 = !DILocation(line: 690, column: 3, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8142, file: !879, line: 689, column: 9)
!8142 = distinct !DILexicalBlock(scope: !8124, file: !879, line: 685, column: 6)
!8143 = !DILocation(line: 695, column: 2, scope: !8124)
!8144 = !DILocation(line: 696, column: 2, scope: !8124)
!8145 = !DILocation(line: 696, column: 9, scope: !8124)
!8146 = !DILocation(line: 696, column: 34, scope: !8124)
!8147 = distinct !{!8147, !8144, !8148}
!8148 = !DILocation(line: 697, column: 2, scope: !8124)
!8149 = !DILocation(line: 720, column: 21, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !8124, file: !879, line: 720, column: 6)
!8151 = !DILocation(line: 720, column: 6, scope: !8124)
!8152 = !DILocation(line: 721, column: 3, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8150, file: !879, line: 720, column: 60)
!8154 = !DILocation(line: 722, column: 2, scope: !8153)
!8155 = !DILocation(line: 725, column: 18, scope: !8124)
!8156 = !DILocation(line: 728, column: 2, scope: !8124)
!8157 = !DILocation(line: 730, column: 2, scope: !8124)
!8158 = !DILocation(line: 745, column: 2, scope: !8124)
!8159 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8160, file: !8160, line: 3275, type: !3385, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !2018)
!8160 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8161 = !DILocation(line: 3277, column: 21, scope: !8159)
!8162 = !DILocation(line: 3277, column: 3, scope: !8159)
!8163 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !879, file: !879, line: 507, type: !3103, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !2018)
!8164 = !DILocation(line: 516, column: 4, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8166, file: !879, line: 515, column: 10)
!8166 = distinct !DILexicalBlock(scope: !8167, file: !879, line: 513, column: 7)
!8167 = distinct !DILexicalBlock(scope: !8168, file: !879, line: 510, column: 37)
!8168 = distinct !DILexicalBlock(scope: !8163, file: !879, line: 510, column: 6)
!8169 = !DILocation(line: 526, column: 3, scope: !8167)
!8170 = !DILocation(line: 527, column: 3, scope: !8167)
!8171 = !DILocation(line: 527, column: 10, scope: !8167)
!8172 = !DILocation(line: 527, column: 31, scope: !8167)
!8173 = distinct !{!8173, !8170, !8174}
!8174 = !DILocation(line: 529, column: 3, scope: !8167)
!8175 = !DILocation(line: 583, column: 3, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !8177, file: !879, line: 577, column: 37)
!8177 = distinct !DILexicalBlock(scope: !8163, file: !879, line: 577, column: 6)
!8178 = !DILocation(line: 584, column: 3, scope: !8176)
!8179 = !DILocation(line: 584, column: 10, scope: !8176)
!8180 = !DILocation(line: 584, column: 31, scope: !8176)
!8181 = distinct !{!8181, !8178, !8182}
!8182 = !DILocation(line: 585, column: 3, scope: !8176)
!8183 = !DILocation(line: 627, column: 1, scope: !8163)
!8184 = distinct !DISubprogram(name: "set_up_plls", scope: !879, file: !879, line: 448, type: !3103, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !2018)
!8185 = !DILocation(line: 460, column: 6, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !8184, file: !879, line: 460, column: 6)
!8187 = !DILocation(line: 460, column: 31, scope: !8186)
!8188 = !DILocation(line: 460, column: 6, scope: !8184)
!8189 = !DILocation(line: 461, column: 3, scope: !8190)
!8190 = distinct !DILexicalBlock(scope: !8186, file: !879, line: 460, column: 67)
!8191 = !DILocation(line: 462, column: 3, scope: !8190)
!8192 = !DILocation(line: 463, column: 2, scope: !8190)
!8193 = !DILocation(line: 464, column: 2, scope: !8184)
!8194 = !DILocation(line: 488, column: 2, scope: !8184)
!8195 = !DILocation(line: 492, column: 2, scope: !8184)
!8196 = !DILocation(line: 496, column: 2, scope: !8184)
!8197 = !DILocation(line: 499, column: 2, scope: !8184)
!8198 = !DILocation(line: 500, column: 2, scope: !8184)
!8199 = !DILocation(line: 500, column: 9, scope: !8184)
!8200 = !DILocation(line: 500, column: 30, scope: !8184)
!8201 = distinct !{!8201, !8198, !8202}
!8202 = !DILocation(line: 502, column: 2, scope: !8184)
!8203 = !DILocation(line: 505, column: 1, scope: !8184)
!8204 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8160, file: !8160, line: 3224, type: !6274, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !8205)
!8205 = !{!8206}
!8206 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8204, file: !8160, line: 3224, type: !110)
!8207 = !DILocation(line: 0, scope: !8204)
!8208 = !DILocation(line: 3226, column: 3, scope: !8204)
!8209 = !DILocation(line: 3227, column: 1, scope: !8204)
!8210 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8160, file: !8160, line: 3188, type: !6274, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !8211)
!8211 = !{!8212}
!8212 = !DILocalVariable(name: "Source", arg: 1, scope: !8210, file: !8160, line: 3188, type: !110)
!8213 = !DILocation(line: 0, scope: !8210)
!8214 = !DILocation(line: 3190, column: 3, scope: !8210)
!8215 = !DILocation(line: 3191, column: 1, scope: !8210)
!8216 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8160, file: !8160, line: 3204, type: !3385, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !2018)
!8217 = !DILocation(line: 3206, column: 21, scope: !8216)
!8218 = !DILocation(line: 3206, column: 3, scope: !8216)
!8219 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8160, file: !8160, line: 3240, type: !6274, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !8220)
!8220 = !{!8221}
!8221 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8219, file: !8160, line: 3240, type: !110)
!8222 = !DILocation(line: 0, scope: !8219)
!8223 = !DILocation(line: 3242, column: 3, scope: !8219)
!8224 = !DILocation(line: 3243, column: 1, scope: !8219)
!8225 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8160, file: !8160, line: 3256, type: !6274, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !8226)
!8226 = !{!8227}
!8227 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8225, file: !8160, line: 3256, type: !110)
!8228 = !DILocation(line: 0, scope: !8225)
!8229 = !DILocation(line: 3258, column: 3, scope: !8225)
!8230 = !DILocation(line: 3259, column: 1, scope: !8225)
!8231 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !879, file: !879, line: 409, type: !3103, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !2018)
!8232 = !DILocation(line: 412, column: 6, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8231, file: !879, line: 412, column: 6)
!8234 = !DILocation(line: 412, column: 27, scope: !8233)
!8235 = !DILocation(line: 412, column: 6, scope: !8231)
!8236 = !DILocation(line: 414, column: 3, scope: !8237)
!8237 = distinct !DILexicalBlock(scope: !8233, file: !879, line: 412, column: 33)
!8238 = !DILocation(line: 415, column: 3, scope: !8237)
!8239 = !DILocation(line: 415, column: 10, scope: !8237)
!8240 = !DILocation(line: 415, column: 31, scope: !8237)
!8241 = distinct !{!8241, !8238, !8242}
!8242 = !DILocation(line: 417, column: 3, scope: !8237)
!8243 = !DILocation(line: 421, column: 2, scope: !8231)
!8244 = !DILocation(line: 422, column: 2, scope: !8231)
!8245 = !DILocation(line: 422, column: 9, scope: !8231)
!8246 = !DILocation(line: 422, column: 34, scope: !8231)
!8247 = distinct !{!8247, !8244, !8248}
!8248 = !DILocation(line: 423, column: 2, scope: !8231)
!8249 = !DILocation(line: 424, column: 1, scope: !8231)
!8250 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8160, file: !8160, line: 4195, type: !3103, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !2018)
!8251 = !DILocation(line: 4197, column: 3, scope: !8250)
!8252 = !DILocation(line: 4198, column: 1, scope: !8250)
!8253 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8160, file: !8160, line: 4184, type: !3103, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !2018)
!8254 = !DILocation(line: 4186, column: 3, scope: !8253)
!8255 = !DILocation(line: 4187, column: 1, scope: !8253)
!8256 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8160, file: !8160, line: 4205, type: !3385, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !2018)
!8257 = !DILocation(line: 4207, column: 11, scope: !8256)
!8258 = !DILocation(line: 4207, column: 44, scope: !8256)
!8259 = !DILocation(line: 4207, column: 3, scope: !8256)
!8260 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8160, file: !8160, line: 3007, type: !3385, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !2018)
!8261 = !DILocation(line: 3009, column: 11, scope: !8260)
!8262 = !DILocation(line: 3009, column: 44, scope: !8260)
!8263 = !DILocation(line: 3009, column: 3, scope: !8260)
!8264 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8160, file: !8160, line: 2987, type: !3103, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !2018)
!8265 = !DILocation(line: 2989, column: 3, scope: !8264)
!8266 = !DILocation(line: 2990, column: 1, scope: !8264)
!8267 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8160, file: !8160, line: 2939, type: !3103, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !2018)
!8268 = !DILocation(line: 2941, column: 3, scope: !8267)
!8269 = !DILocation(line: 2942, column: 1, scope: !8267)
!8270 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8160, file: !8160, line: 2949, type: !3103, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !2018)
!8271 = !DILocation(line: 2951, column: 3, scope: !8270)
!8272 = !DILocation(line: 2952, column: 1, scope: !8270)
!8273 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8160, file: !8160, line: 2969, type: !3385, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !2018)
!8274 = !DILocation(line: 2971, column: 11, scope: !8273)
!8275 = !DILocation(line: 2971, column: 44, scope: !8273)
!8276 = !DILocation(line: 2971, column: 3, scope: !8273)
!8277 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8160, file: !8160, line: 3143, type: !3103, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !2018)
!8278 = !DILocation(line: 3145, column: 3, scope: !8277)
!8279 = !DILocation(line: 3146, column: 1, scope: !8277)
!8280 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8160, file: !8160, line: 3163, type: !3385, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !2018)
!8281 = !DILocation(line: 3165, column: 11, scope: !8280)
!8282 = !DILocation(line: 3165, column: 46, scope: !8280)
!8283 = !DILocation(line: 3165, column: 3, scope: !8280)
!8284 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8285, file: !8285, line: 40, type: !3385, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !2018)
!8285 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8286 = !DILocation(line: 45, column: 3, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8288, file: !8285, line: 44, column: 44)
!8288 = distinct !DILexicalBlock(scope: !8289, file: !8285, line: 44, column: 13)
!8289 = distinct !DILexicalBlock(scope: !8284, file: !8285, line: 42, column: 6)
!8290 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8285, file: !8285, line: 56, type: !3103, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !2018)
!8291 = !DILocation(line: 58, column: 2, scope: !8290)
!8292 = !DILocation(line: 62, column: 1, scope: !8290)
!8293 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8160, file: !8160, line: 4304, type: !8294, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !8296)
!8294 = !DISubroutineType(types: !8295)
!8295 = !{null, !110, !110, !110, !110}
!8296 = !{!8297, !8298, !8299, !8300}
!8297 = !DILocalVariable(name: "Source", arg: 1, scope: !8293, file: !8160, line: 4304, type: !110)
!8298 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8293, file: !8160, line: 4304, type: !110)
!8299 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8293, file: !8160, line: 4304, type: !110)
!8300 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8293, file: !8160, line: 4304, type: !110)
!8301 = !DILocation(line: 0, scope: !8293)
!8302 = !DILocation(line: 4306, column: 3, scope: !8293)
!8303 = !DILocation(line: 4308, column: 3, scope: !8293)
!8304 = !DILocation(line: 4312, column: 1, scope: !8293)
!8305 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8285, file: !8285, line: 69, type: !3103, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !2018)
!8306 = !DILocation(line: 72, column: 2, scope: !8305)
!8307 = !DILocation(line: 73, column: 1, scope: !8305)
!8308 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8309, file: !8309, line: 1185, type: !6274, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !8310)
!8309 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8310 = !{!8311, !8312}
!8311 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8308, file: !8309, line: 1185, type: !110)
!8312 = !DILocalVariable(name: "tmpreg", scope: !8308, file: !8309, line: 1187, type: !301)
!8313 = !DILocation(line: 0, scope: !8308)
!8314 = !DILocation(line: 1187, column: 3, scope: !8308)
!8315 = !DILocation(line: 1187, column: 17, scope: !8308)
!8316 = !DILocation(line: 1188, column: 3, scope: !8308)
!8317 = !DILocation(line: 1190, column: 12, scope: !8308)
!8318 = !DILocation(line: 1190, column: 10, scope: !8308)
!8319 = !DILocation(line: 1191, column: 9, scope: !8308)
!8320 = !DILocation(line: 1192, column: 1, scope: !8308)
!8321 = distinct !DISubprogram(name: "uart_console_init", scope: !1010, file: !1010, line: 588, type: !987, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !953, retainedNodes: !8322)
!8322 = !{!8323}
!8323 = !DILocalVariable(name: "arg", arg: 1, scope: !8321, file: !1010, line: 588, type: !965)
!8324 = !DILocation(line: 0, scope: !8321)
!8325 = !DILocation(line: 593, column: 7, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8321, file: !1010, line: 593, column: 6)
!8327 = !DILocation(line: 593, column: 6, scope: !8321)
!8328 = !DILocation(line: 597, column: 2, scope: !8321)
!8329 = !DILocation(line: 599, column: 2, scope: !8321)
!8330 = !DILocation(line: 600, column: 1, scope: !8321)
!8331 = distinct !DISubprogram(name: "device_is_ready", scope: !8332, file: !8332, line: 47, type: !8333, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !953, retainedNodes: !8335)
!8332 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!8333 = !DISubroutineType(types: !8334)
!8334 = !{!334, !965}
!8335 = !{!8336}
!8336 = !DILocalVariable(name: "dev", arg: 1, scope: !8331, file: !8332, line: 47, type: !965)
!8337 = !DILocation(line: 0, scope: !8331)
!8338 = !DILocation(line: 55, column: 2, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8331, file: !8332, line: 55, column: 2)
!8340 = !{i64 2154961610}
!8341 = !DILocation(line: 56, column: 9, scope: !8331)
!8342 = !DILocation(line: 56, column: 2, scope: !8331)
!8343 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1010, file: !1010, line: 573, type: !3103, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !953, retainedNodes: !2018)
!8344 = !DILocation(line: 579, column: 2, scope: !8343)
!8345 = !DILocation(line: 581, column: 1, scope: !8343)
!8346 = distinct !DISubprogram(name: "console_out", scope: !1010, file: !1010, line: 77, type: !288, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !953, retainedNodes: !8347)
!8347 = !{!8348}
!8348 = !DILocalVariable(name: "c", arg: 1, scope: !8346, file: !1010, line: 77, type: !109)
!8349 = !DILocation(line: 0, scope: !8346)
!8350 = !DILocation(line: 89, column: 11, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !8346, file: !1010, line: 89, column: 6)
!8352 = !DILocation(line: 89, column: 6, scope: !8346)
!8353 = !DILocation(line: 90, column: 3, scope: !8354)
!8354 = distinct !DILexicalBlock(scope: !8351, file: !1010, line: 89, column: 17)
!8355 = !DILocation(line: 91, column: 2, scope: !8354)
!8356 = !DILocation(line: 92, column: 34, scope: !8346)
!8357 = !DILocation(line: 92, column: 2, scope: !8346)
!8358 = !DILocation(line: 94, column: 2, scope: !8346)
!8359 = distinct !DISubprogram(name: "uart_poll_out", scope: !8360, file: !8360, line: 95, type: !983, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !953, retainedNodes: !8361)
!8360 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/philosophers")
!8361 = !{!8362, !8363}
!8362 = !DILocalVariable(name: "dev", arg: 1, scope: !8359, file: !8360, line: 95, type: !965)
!8363 = !DILocalVariable(name: "out_char", arg: 2, scope: !8359, file: !8360, line: 95, type: !168)
!8364 = !DILocation(line: 0, scope: !8359)
!8365 = !DILocation(line: 105, column: 2, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8359, file: !8360, line: 105, column: 2)
!8367 = !{i64 2155045001}
!8368 = !DILocation(line: 106, column: 2, scope: !8359)
!8369 = !DILocation(line: 107, column: 1, scope: !8359)
!8370 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !959, file: !959, line: 574, type: !983, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !953, retainedNodes: !8371)
!8371 = !{!8372, !8373, !8374}
!8372 = !DILocalVariable(name: "dev", arg: 1, scope: !8370, file: !959, line: 574, type: !965)
!8373 = !DILocalVariable(name: "out_char", arg: 2, scope: !8370, file: !959, line: 575, type: !168)
!8374 = !DILocalVariable(name: "api", scope: !8370, file: !959, line: 577, type: !956)
!8375 = !DILocation(line: 0, scope: !8370)
!8376 = !DILocation(line: 578, column: 40, scope: !8370)
!8377 = !DILocation(line: 580, column: 7, scope: !8370)
!8378 = !DILocation(line: 580, column: 2, scope: !8370)
!8379 = !DILocation(line: 581, column: 1, scope: !8370)
!8380 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !321, file: !321, line: 730, type: !8333, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !953, retainedNodes: !8381)
!8381 = !{!8382}
!8382 = !DILocalVariable(name: "dev", arg: 1, scope: !8380, file: !321, line: 730, type: !965)
!8383 = !DILocation(line: 0, scope: !8380)
!8384 = !DILocation(line: 732, column: 9, scope: !8380)
!8385 = !DILocation(line: 732, column: 2, scope: !8380)
!8386 = distinct !DISubprogram(name: "uart_register_input", scope: !1010, file: !1010, line: 560, type: !8387, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !953, retainedNodes: !8434)
!8387 = !DISubroutineType(types: !8388)
!8388 = !{null, !8389, !8389, !8431}
!8389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8390, size: 32)
!8390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !119, line: 2208, size: 160, elements: !8391)
!8391 = !{!8392}
!8392 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8390, file: !119, line: 2209, baseType: !8393, size: 160)
!8393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !119, line: 1709, size: 160, elements: !8394)
!8394 = !{!8395, !8408, !8412}
!8395 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8393, file: !119, line: 1710, baseType: !8396, size: 64)
!8396 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !8397, line: 46, baseType: !8398)
!8397 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !8397, line: 41, size: 64, elements: !8399)
!8399 = !{!8400, !8407}
!8400 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8398, file: !8397, line: 42, baseType: !8401, size: 32)
!8401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8402, size: 32)
!8402 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !8397, line: 39, baseType: !8403)
!8403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !8397, line: 35, size: 32, elements: !8404)
!8404 = !{!8405}
!8405 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !8403, file: !8397, line: 36, baseType: !8406, size: 32)
!8406 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !8397, line: 32, baseType: !110)
!8407 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8398, file: !8397, line: 43, baseType: !8401, size: 32, offset: 32)
!8408 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8393, file: !119, line: 1711, baseType: !8409, size: 32, offset: 64)
!8409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !8410)
!8410 = !{!8411}
!8411 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8409, file: !254, line: 52, baseType: !22, size: 32)
!8412 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8393, file: !119, line: 1712, baseType: !8413, size: 64, offset: 96)
!8413 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !8414)
!8414 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !8415)
!8415 = !{!8416}
!8416 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8414, file: !123, line: 232, baseType: !8417, size: 64)
!8417 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !8418)
!8418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !8419)
!8419 = !{!8420, !8426}
!8420 = !DIDerivedType(tag: DW_TAG_member, scope: !8418, file: !128, line: 38, baseType: !8421, size: 32)
!8421 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8418, file: !128, line: 38, size: 32, elements: !8422)
!8422 = !{!8423, !8425}
!8423 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8421, file: !128, line: 39, baseType: !8424, size: 32)
!8424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8418, size: 32)
!8425 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8421, file: !128, line: 40, baseType: !8424, size: 32)
!8426 = !DIDerivedType(tag: DW_TAG_member, scope: !8418, file: !128, line: 42, baseType: !8427, size: 32, offset: 32)
!8427 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8418, file: !128, line: 42, size: 32, elements: !8428)
!8428 = !{!8429, !8430}
!8429 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8427, file: !128, line: 43, baseType: !8424, size: 32)
!8430 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8427, file: !128, line: 44, baseType: !8424, size: 32)
!8431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8432, size: 32)
!8432 = !DISubroutineType(types: !8433)
!8433 = !{!167, !1147, !167}
!8434 = !{!8435, !8436, !8437}
!8435 = !DILocalVariable(name: "avail", arg: 1, scope: !8386, file: !1010, line: 560, type: !8389)
!8436 = !DILocalVariable(name: "lines", arg: 2, scope: !8386, file: !1010, line: 560, type: !8389)
!8437 = !DILocalVariable(name: "completion", arg: 3, scope: !8386, file: !1010, line: 561, type: !8431)
!8438 = !DILocation(line: 0, scope: !8386)
!8439 = !DILocation(line: 566, column: 1, scope: !8386)
!8440 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1191, file: !1191, line: 523, type: !1046, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8441)
!8441 = !{!8442, !8443, !8444, !8445, !8446}
!8442 = !DILocalVariable(name: "dev", arg: 1, scope: !8440, file: !1191, line: 523, type: !1048)
!8443 = !DILocalVariable(name: "pin", arg: 2, scope: !8440, file: !1191, line: 524, type: !1063)
!8444 = !DILocalVariable(name: "flags", arg: 3, scope: !8440, file: !1191, line: 524, type: !1064)
!8445 = !DILocalVariable(name: "err", scope: !8440, file: !1191, line: 526, type: !109)
!8446 = !DILocalVariable(name: "pincfg", scope: !8440, file: !1191, line: 527, type: !109)
!8447 = !DILocation(line: 0, scope: !8440)
!8448 = !DILocation(line: 527, column: 2, scope: !8440)
!8449 = !DILocation(line: 532, column: 8, scope: !8440)
!8450 = !DILocation(line: 533, column: 10, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8440, file: !1191, line: 533, column: 6)
!8452 = !DILocation(line: 533, column: 6, scope: !8440)
!8453 = !DILocation(line: 543, column: 13, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8440, file: !1191, line: 543, column: 6)
!8455 = !DILocation(line: 543, column: 28, scope: !8454)
!8456 = !DILocation(line: 543, column: 6, scope: !8440)
!8457 = !DILocation(line: 544, column: 14, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !8459, file: !1191, line: 544, column: 7)
!8459 = distinct !DILexicalBlock(scope: !8454, file: !1191, line: 543, column: 34)
!8460 = !DILocation(line: 544, column: 39, scope: !8458)
!8461 = !DILocation(line: 544, column: 7, scope: !8459)
!8462 = !DILocation(line: 545, column: 38, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8458, file: !1191, line: 544, column: 45)
!8464 = !DILocation(line: 545, column: 4, scope: !8463)
!8465 = !DILocation(line: 546, column: 3, scope: !8463)
!8466 = !DILocation(line: 546, column: 21, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8458, file: !1191, line: 546, column: 14)
!8468 = !DILocation(line: 546, column: 45, scope: !8467)
!8469 = !DILocation(line: 546, column: 14, scope: !8458)
!8470 = !DILocation(line: 547, column: 40, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !8467, file: !1191, line: 546, column: 51)
!8472 = !DILocation(line: 547, column: 4, scope: !8471)
!8473 = !DILocation(line: 548, column: 3, scope: !8471)
!8474 = !DILocation(line: 551, column: 32, scope: !8440)
!8475 = !DILocation(line: 551, column: 37, scope: !8440)
!8476 = !DILocation(line: 551, column: 2, scope: !8440)
!8477 = !DILocation(line: 554, column: 6, scope: !8440)
!8478 = !DILocation(line: 562, column: 1, scope: !8440)
!8479 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1191, file: !1191, line: 410, type: !8480, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8482)
!8480 = !DISubroutineType(types: !8481)
!8481 = !{!109, !1048, !875}
!8482 = !{!8483, !8484, !8485, !8487}
!8483 = !DILocalVariable(name: "dev", arg: 1, scope: !8479, file: !1191, line: 410, type: !1048)
!8484 = !DILocalVariable(name: "value", arg: 2, scope: !8479, file: !1191, line: 410, type: !875)
!8485 = !DILocalVariable(name: "cfg", scope: !8479, file: !1191, line: 412, type: !8486)
!8486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 32)
!8487 = !DILocalVariable(name: "gpio", scope: !8479, file: !1191, line: 413, type: !1121)
!8488 = !DILocation(line: 0, scope: !8479)
!8489 = !DILocation(line: 412, column: 45, scope: !8479)
!8490 = !DILocation(line: 413, column: 44, scope: !8479)
!8491 = !DILocation(line: 415, column: 11, scope: !8479)
!8492 = !DILocation(line: 415, column: 9, scope: !8479)
!8493 = !DILocation(line: 417, column: 2, scope: !8479)
!8494 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1191, file: !1191, line: 420, type: !1073, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8495)
!8495 = !{!8496, !8497, !8498, !8499, !8500, !8501}
!8496 = !DILocalVariable(name: "dev", arg: 1, scope: !8494, file: !1191, line: 420, type: !1048)
!8497 = !DILocalVariable(name: "mask", arg: 2, scope: !8494, file: !1191, line: 421, type: !1075)
!8498 = !DILocalVariable(name: "value", arg: 3, scope: !8494, file: !1191, line: 422, type: !1070)
!8499 = !DILocalVariable(name: "cfg", scope: !8494, file: !1191, line: 424, type: !8486)
!8500 = !DILocalVariable(name: "gpio", scope: !8494, file: !1191, line: 425, type: !1121)
!8501 = !DILocalVariable(name: "port_value", scope: !8494, file: !1191, line: 426, type: !110)
!8502 = !DILocation(line: 0, scope: !8494)
!8503 = !DILocation(line: 424, column: 45, scope: !8494)
!8504 = !DILocation(line: 425, column: 44, scope: !8494)
!8505 = !DILocation(line: 430, column: 15, scope: !8494)
!8506 = !DILocation(line: 431, column: 46, scope: !8494)
!8507 = !DILocation(line: 431, column: 44, scope: !8494)
!8508 = !DILocation(line: 431, column: 61, scope: !8494)
!8509 = !DILocation(line: 431, column: 53, scope: !8494)
!8510 = !DILocation(line: 431, column: 2, scope: !8494)
!8511 = !DILocation(line: 435, column: 2, scope: !8494)
!8512 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1191, file: !1191, line: 438, type: !1078, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8513)
!8513 = !{!8514, !8515, !8516, !8517}
!8514 = !DILocalVariable(name: "dev", arg: 1, scope: !8512, file: !1191, line: 438, type: !1048)
!8515 = !DILocalVariable(name: "pins", arg: 2, scope: !8512, file: !1191, line: 439, type: !1075)
!8516 = !DILocalVariable(name: "cfg", scope: !8512, file: !1191, line: 441, type: !8486)
!8517 = !DILocalVariable(name: "gpio", scope: !8512, file: !1191, line: 442, type: !1121)
!8518 = !DILocation(line: 0, scope: !8512)
!8519 = !DILocation(line: 441, column: 45, scope: !8512)
!8520 = !DILocation(line: 442, column: 44, scope: !8512)
!8521 = !DILocation(line: 448, column: 2, scope: !8512)
!8522 = !DILocation(line: 450, column: 2, scope: !8512)
!8523 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1191, file: !1191, line: 453, type: !1078, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8524)
!8524 = !{!8525, !8526, !8527, !8528}
!8525 = !DILocalVariable(name: "dev", arg: 1, scope: !8523, file: !1191, line: 453, type: !1048)
!8526 = !DILocalVariable(name: "pins", arg: 2, scope: !8523, file: !1191, line: 454, type: !1075)
!8527 = !DILocalVariable(name: "cfg", scope: !8523, file: !1191, line: 456, type: !8486)
!8528 = !DILocalVariable(name: "gpio", scope: !8523, file: !1191, line: 457, type: !1121)
!8529 = !DILocation(line: 0, scope: !8523)
!8530 = !DILocation(line: 456, column: 45, scope: !8523)
!8531 = !DILocation(line: 457, column: 44, scope: !8523)
!8532 = !DILocation(line: 467, column: 2, scope: !8523)
!8533 = !DILocation(line: 470, column: 2, scope: !8523)
!8534 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1191, file: !1191, line: 473, type: !1078, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8535)
!8535 = !{!8536, !8537, !8538, !8539}
!8536 = !DILocalVariable(name: "dev", arg: 1, scope: !8534, file: !1191, line: 473, type: !1048)
!8537 = !DILocalVariable(name: "pins", arg: 2, scope: !8534, file: !1191, line: 474, type: !1075)
!8538 = !DILocalVariable(name: "cfg", scope: !8534, file: !1191, line: 476, type: !8486)
!8539 = !DILocalVariable(name: "gpio", scope: !8534, file: !1191, line: 477, type: !1121)
!8540 = !DILocation(line: 0, scope: !8534)
!8541 = !DILocation(line: 476, column: 45, scope: !8534)
!8542 = !DILocation(line: 477, column: 44, scope: !8534)
!8543 = !DILocation(line: 484, column: 2, scope: !8534)
!8544 = !DILocation(line: 487, column: 2, scope: !8534)
!8545 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1191, file: !1191, line: 594, type: !1084, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8546)
!8546 = !{!8547, !8548, !8549, !8550, !8551, !8552, !8554, !8555, !8556}
!8547 = !DILocalVariable(name: "dev", arg: 1, scope: !8545, file: !1191, line: 594, type: !1048)
!8548 = !DILocalVariable(name: "pin", arg: 2, scope: !8545, file: !1191, line: 595, type: !1063)
!8549 = !DILocalVariable(name: "mode", arg: 3, scope: !8545, file: !1191, line: 596, type: !1022)
!8550 = !DILocalVariable(name: "trig", arg: 4, scope: !8545, file: !1191, line: 597, type: !1028)
!8551 = !DILocalVariable(name: "cfg", scope: !8545, file: !1191, line: 599, type: !8486)
!8552 = !DILocalVariable(name: "data", scope: !8545, file: !1191, line: 600, type: !8553)
!8553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 32)
!8554 = !DILocalVariable(name: "edge", scope: !8545, file: !1191, line: 601, type: !109)
!8555 = !DILocalVariable(name: "err", scope: !8545, file: !1191, line: 602, type: !109)
!8556 = !DILabel(scope: !8545, name: "exit", file: !1191, line: 643)
!8557 = !DILocation(line: 0, scope: !8545)
!8558 = !DILocation(line: 599, column: 45, scope: !8545)
!8559 = !DILocation(line: 604, column: 6, scope: !8545)
!8560 = !DILocation(line: 605, column: 34, scope: !8561)
!8561 = distinct !DILexicalBlock(scope: !8562, file: !1191, line: 605, column: 7)
!8562 = distinct !DILexicalBlock(scope: !8563, file: !1191, line: 604, column: 38)
!8563 = distinct !DILexicalBlock(scope: !8545, file: !1191, line: 604, column: 6)
!8564 = !DILocation(line: 605, column: 7, scope: !8561)
!8565 = !DILocation(line: 605, column: 47, scope: !8561)
!8566 = !DILocation(line: 605, column: 39, scope: !8561)
!8567 = !DILocation(line: 605, column: 7, scope: !8562)
!8568 = !DILocation(line: 606, column: 4, scope: !8569)
!8569 = distinct !DILexicalBlock(scope: !8561, file: !1191, line: 605, column: 53)
!8570 = !DILocation(line: 607, column: 4, scope: !8569)
!8571 = !DILocation(line: 608, column: 4, scope: !8569)
!8572 = !DILocation(line: 609, column: 3, scope: !8569)
!8573 = !DILocation(line: 600, column: 38, scope: !8545)
!8574 = !DILocation(line: 620, column: 30, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8545, file: !1191, line: 620, column: 6)
!8576 = !DILocation(line: 620, column: 6, scope: !8575)
!8577 = !DILocation(line: 620, column: 57, scope: !8575)
!8578 = !DILocation(line: 620, column: 6, scope: !8545)
!8579 = !DILocation(line: 625, column: 29, scope: !8545)
!8580 = !DILocation(line: 625, column: 2, scope: !8545)
!8581 = !DILocation(line: 627, column: 2, scope: !8545)
!8582 = !DILocation(line: 630, column: 3, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8545, file: !1191, line: 627, column: 16)
!8584 = !DILocation(line: 633, column: 3, scope: !8583)
!8585 = !DILocation(line: 636, column: 3, scope: !8583)
!8586 = !DILocation(line: 639, column: 2, scope: !8545)
!8587 = !DILocation(line: 641, column: 2, scope: !8545)
!8588 = !DILocation(line: 643, column: 1, scope: !8545)
!8589 = !DILocation(line: 644, column: 2, scope: !8545)
!8590 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1191, file: !1191, line: 647, type: !1088, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8591)
!8591 = !{!8592, !8593, !8594, !8595}
!8592 = !DILocalVariable(name: "dev", arg: 1, scope: !8590, file: !1191, line: 647, type: !1048)
!8593 = !DILocalVariable(name: "callback", arg: 2, scope: !8590, file: !1191, line: 648, type: !1090)
!8594 = !DILocalVariable(name: "set", arg: 3, scope: !8590, file: !1191, line: 649, type: !334)
!8595 = !DILocalVariable(name: "data", scope: !8590, file: !1191, line: 651, type: !8553)
!8596 = !DILocation(line: 0, scope: !8590)
!8597 = !DILocation(line: 651, column: 38, scope: !8590)
!8598 = !DILocation(line: 653, column: 37, scope: !8590)
!8599 = !DILocation(line: 653, column: 9, scope: !8590)
!8600 = !DILocation(line: 653, column: 2, scope: !8590)
!8601 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !8602, file: !8602, line: 38, type: !8603, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8606)
!8602 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8603 = !DISubroutineType(types: !8604)
!8604 = !{!109, !8605, !1090, !334}
!8605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 32)
!8606 = !{!8607, !8608, !8609}
!8607 = !DILocalVariable(name: "callbacks", arg: 1, scope: !8601, file: !8602, line: 38, type: !8605)
!8608 = !DILocalVariable(name: "callback", arg: 2, scope: !8601, file: !8602, line: 39, type: !1090)
!8609 = !DILocalVariable(name: "set", arg: 3, scope: !8601, file: !8602, line: 40, type: !334)
!8610 = !DILocation(line: 0, scope: !8601)
!8611 = !DILocation(line: 42, column: 2, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8613, file: !8602, line: 42, column: 2)
!8613 = distinct !DILexicalBlock(scope: !8601, file: !8602, line: 42, column: 2)
!8614 = !DILocation(line: 42, column: 2, scope: !8613)
!8615 = !DILocation(line: 42, column: 2, scope: !8616)
!8616 = distinct !DILexicalBlock(scope: !8612, file: !8602, line: 42, column: 2)
!8617 = !DILocation(line: 43, column: 2, scope: !8618)
!8618 = distinct !DILexicalBlock(scope: !8619, file: !8602, line: 43, column: 2)
!8619 = distinct !DILexicalBlock(scope: !8601, file: !8602, line: 43, column: 2)
!8620 = !DILocation(line: 43, column: 2, scope: !8619)
!8621 = !DILocation(line: 43, column: 2, scope: !8622)
!8622 = distinct !DILexicalBlock(scope: !8618, file: !8602, line: 43, column: 2)
!8623 = !DILocation(line: 45, column: 7, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8601, file: !8602, line: 45, column: 6)
!8625 = !DILocation(line: 45, column: 6, scope: !8601)
!8626 = !DILocation(line: 46, column: 56, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8628, file: !8602, line: 46, column: 7)
!8628 = distinct !DILexicalBlock(scope: !8624, file: !8602, line: 45, column: 38)
!8629 = !DILocation(line: 46, column: 8, scope: !8627)
!8630 = !DILocation(line: 46, column: 7, scope: !8628)
!8631 = !DILocation(line: 51, column: 13, scope: !8624)
!8632 = !DILocation(line: 56, column: 43, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8634, file: !8602, line: 55, column: 11)
!8634 = distinct !DILexicalBlock(scope: !8601, file: !8602, line: 55, column: 6)
!8635 = !DILocation(line: 56, column: 3, scope: !8633)
!8636 = !DILocation(line: 57, column: 2, scope: !8633)
!8637 = !DILocation(line: 60, column: 1, scope: !8601)
!8638 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1095, file: !1095, line: 261, type: !8639, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8641)
!8639 = !DISubroutineType(types: !8640)
!8640 = !{!334, !8605}
!8641 = !{!8642}
!8642 = !DILocalVariable(name: "list", arg: 1, scope: !8638, file: !1095, line: 261, type: !8605)
!8643 = !DILocation(line: 0, scope: !8638)
!8644 = !DILocation(line: 261, column: 1, scope: !8638)
!8645 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1095, file: !1095, line: 417, type: !8646, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8648)
!8646 = !DISubroutineType(types: !8647)
!8647 = !{!334, !8605, !1265}
!8648 = !{!8649, !8650, !8651, !8652}
!8649 = !DILocalVariable(name: "list", arg: 1, scope: !8645, file: !1095, line: 417, type: !8605)
!8650 = !DILocalVariable(name: "node", arg: 2, scope: !8645, file: !1095, line: 417, type: !1265)
!8651 = !DILocalVariable(name: "prev", scope: !8645, file: !1095, line: 417, type: !1265)
!8652 = !DILocalVariable(name: "test", scope: !8645, file: !1095, line: 417, type: !1265)
!8653 = !DILocation(line: 0, scope: !8645)
!8654 = !DILocation(line: 417, column: 1, scope: !8655)
!8655 = distinct !DILexicalBlock(scope: !8645, file: !1095, line: 417, column: 1)
!8656 = !DILocation(line: 417, column: 1, scope: !8657)
!8657 = distinct !DILexicalBlock(scope: !8655, file: !1095, line: 417, column: 1)
!8658 = !DILocation(line: 417, column: 1, scope: !8659)
!8659 = distinct !DILexicalBlock(scope: !8660, file: !1095, line: 417, column: 1)
!8660 = distinct !DILexicalBlock(scope: !8657, file: !1095, line: 417, column: 1)
!8661 = !DILocation(line: 417, column: 1, scope: !8660)
!8662 = distinct !{!8662, !8654, !8654}
!8663 = !DILocation(line: 417, column: 1, scope: !8664)
!8664 = distinct !DILexicalBlock(scope: !8659, file: !1095, line: 417, column: 1)
!8665 = !DILocation(line: 417, column: 1, scope: !8645)
!8666 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1095, file: !1095, line: 298, type: !8667, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8669)
!8667 = !DISubroutineType(types: !8668)
!8668 = !{null, !8605, !1265}
!8669 = !{!8670, !8671}
!8670 = !DILocalVariable(name: "list", arg: 1, scope: !8666, file: !1095, line: 298, type: !8605)
!8671 = !DILocalVariable(name: "node", arg: 2, scope: !8666, file: !1095, line: 298, type: !1265)
!8672 = !DILocation(line: 0, scope: !8666)
!8673 = !DILocation(line: 298, column: 1, scope: !8666)
!8674 = !DILocation(line: 298, column: 1, scope: !8675)
!8675 = distinct !DILexicalBlock(scope: !8666, file: !1095, line: 298, column: 1)
!8676 = !DILocation(line: 298, column: 1, scope: !8677)
!8677 = distinct !DILexicalBlock(scope: !8675, file: !1095, line: 298, column: 1)
!8678 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1095, file: !1095, line: 231, type: !8679, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8681)
!8679 = !DISubroutineType(types: !8680)
!8680 = !{!1265, !8605}
!8681 = !{!8682}
!8682 = !DILocalVariable(name: "list", arg: 1, scope: !8678, file: !1095, line: 231, type: !8605)
!8683 = !DILocation(line: 0, scope: !8678)
!8684 = !DILocation(line: 233, column: 15, scope: !8678)
!8685 = !DILocation(line: 233, column: 2, scope: !8678)
!8686 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1095, file: !1095, line: 209, type: !8687, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8689)
!8687 = !DISubroutineType(types: !8688)
!8688 = !{null, !1265, !1265}
!8689 = !{!8690, !8691}
!8690 = !DILocalVariable(name: "parent", arg: 1, scope: !8686, file: !1095, line: 209, type: !1265)
!8691 = !DILocalVariable(name: "child", arg: 2, scope: !8686, file: !1095, line: 209, type: !1265)
!8692 = !DILocation(line: 0, scope: !8686)
!8693 = !DILocation(line: 211, column: 10, scope: !8686)
!8694 = !DILocation(line: 211, column: 15, scope: !8686)
!8695 = !DILocation(line: 212, column: 1, scope: !8686)
!8696 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1095, file: !1095, line: 214, type: !8667, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8697)
!8697 = !{!8698, !8699}
!8698 = !DILocalVariable(name: "list", arg: 1, scope: !8696, file: !1095, line: 214, type: !8605)
!8699 = !DILocalVariable(name: "node", arg: 2, scope: !8696, file: !1095, line: 214, type: !1265)
!8700 = !DILocation(line: 0, scope: !8696)
!8701 = !DILocation(line: 216, column: 8, scope: !8696)
!8702 = !DILocation(line: 216, column: 13, scope: !8696)
!8703 = !DILocation(line: 217, column: 1, scope: !8696)
!8704 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1095, file: !1095, line: 243, type: !8679, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8705)
!8705 = !{!8706}
!8706 = !DILocalVariable(name: "list", arg: 1, scope: !8704, file: !1095, line: 243, type: !8605)
!8707 = !DILocation(line: 0, scope: !8704)
!8708 = !DILocation(line: 245, column: 15, scope: !8704)
!8709 = !DILocation(line: 245, column: 2, scope: !8704)
!8710 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1095, file: !1095, line: 219, type: !8667, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8711)
!8711 = !{!8712, !8713}
!8712 = !DILocalVariable(name: "list", arg: 1, scope: !8710, file: !1095, line: 219, type: !8605)
!8713 = !DILocalVariable(name: "node", arg: 2, scope: !8710, file: !1095, line: 219, type: !1265)
!8714 = !DILocation(line: 0, scope: !8710)
!8715 = !DILocation(line: 221, column: 8, scope: !8710)
!8716 = !DILocation(line: 221, column: 13, scope: !8710)
!8717 = !DILocation(line: 222, column: 1, scope: !8710)
!8718 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1095, file: !1095, line: 401, type: !8719, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8721)
!8719 = !DISubroutineType(types: !8720)
!8720 = !{null, !8605, !1265, !1265}
!8721 = !{!8722, !8723, !8724}
!8722 = !DILocalVariable(name: "list", arg: 1, scope: !8718, file: !1095, line: 401, type: !8605)
!8723 = !DILocalVariable(name: "prev_node", arg: 2, scope: !8718, file: !1095, line: 401, type: !1265)
!8724 = !DILocalVariable(name: "node", arg: 3, scope: !8718, file: !1095, line: 401, type: !1265)
!8725 = !DILocation(line: 0, scope: !8718)
!8726 = !DILocation(line: 401, column: 1, scope: !8727)
!8727 = distinct !DILexicalBlock(scope: !8718, file: !1095, line: 401, column: 1)
!8728 = !DILocation(line: 0, scope: !8727)
!8729 = !DILocation(line: 401, column: 1, scope: !8718)
!8730 = !DILocation(line: 401, column: 1, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8727, file: !1095, line: 401, column: 1)
!8732 = !DILocation(line: 401, column: 1, scope: !8733)
!8733 = distinct !DILexicalBlock(scope: !8731, file: !1095, line: 401, column: 1)
!8734 = !DILocation(line: 401, column: 1, scope: !8735)
!8735 = distinct !DILexicalBlock(scope: !8733, file: !1095, line: 401, column: 1)
!8736 = !DILocation(line: 401, column: 1, scope: !8737)
!8737 = distinct !DILexicalBlock(scope: !8727, file: !1095, line: 401, column: 1)
!8738 = !DILocation(line: 401, column: 1, scope: !8739)
!8739 = distinct !DILexicalBlock(scope: !8737, file: !1095, line: 401, column: 1)
!8740 = !DILocation(line: 401, column: 1, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8739, file: !1095, line: 401, column: 1)
!8742 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1095, file: !1095, line: 285, type: !8743, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8745)
!8743 = !DISubroutineType(types: !8744)
!8744 = !{!1265, !1265}
!8745 = !{!8746}
!8746 = !DILocalVariable(name: "node", arg: 1, scope: !8742, file: !1095, line: 285, type: !1265)
!8747 = !DILocation(line: 0, scope: !8742)
!8748 = !DILocation(line: 285, column: 1, scope: !8742)
!8749 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1095, file: !1095, line: 274, type: !8743, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8750)
!8750 = !{!8751}
!8751 = !DILocalVariable(name: "node", arg: 1, scope: !8749, file: !1095, line: 274, type: !1265)
!8752 = !DILocation(line: 0, scope: !8749)
!8753 = !DILocation(line: 274, column: 1, scope: !8749)
!8754 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1095, file: !1095, line: 204, type: !8743, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8755)
!8755 = !{!8756}
!8756 = !DILocalVariable(name: "node", arg: 1, scope: !8754, file: !1095, line: 204, type: !1265)
!8757 = !DILocation(line: 0, scope: !8754)
!8758 = !DILocation(line: 206, column: 15, scope: !8754)
!8759 = !DILocation(line: 206, column: 2, scope: !8754)
!8760 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1191, file: !1191, line: 342, type: !288, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8761)
!8761 = !{!8762, !8763, !8764}
!8762 = !DILocalVariable(name: "pin", arg: 1, scope: !8760, file: !1191, line: 342, type: !109)
!8763 = !DILocalVariable(name: "line", scope: !8760, file: !1191, line: 344, type: !110)
!8764 = !DILocalVariable(name: "port", scope: !8760, file: !1191, line: 345, type: !109)
!8765 = !DILocation(line: 0, scope: !8760)
!8766 = !DILocation(line: 344, column: 18, scope: !8760)
!8767 = !{i32 983040, i32 0}
!8768 = !DILocation(line: 356, column: 9, scope: !8760)
!8769 = !DILocation(line: 370, column: 2, scope: !8760)
!8770 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1191, file: !1191, line: 37, type: !739, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8771)
!8771 = !{!8772, !8773, !8774}
!8772 = !DILocalVariable(name: "line", arg: 1, scope: !8770, file: !1191, line: 37, type: !109)
!8773 = !DILocalVariable(name: "arg", arg: 2, scope: !8770, file: !1191, line: 37, type: !108)
!8774 = !DILocalVariable(name: "data", scope: !8770, file: !1191, line: 39, type: !8553)
!8775 = !DILocation(line: 0, scope: !8770)
!8776 = !DILocation(line: 41, column: 29, scope: !8770)
!8777 = !DILocation(line: 41, column: 39, scope: !8770)
!8778 = !DILocation(line: 41, column: 44, scope: !8770)
!8779 = !DILocation(line: 41, column: 2, scope: !8770)
!8780 = !DILocation(line: 42, column: 1, scope: !8770)
!8781 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1191, file: !1191, line: 376, type: !8782, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8784)
!8782 = !DISubroutineType(types: !8783)
!8783 = !{!109, !109, !109}
!8784 = !{!8785, !8786, !8787, !8789, !8790}
!8785 = !DILocalVariable(name: "port", arg: 1, scope: !8781, file: !1191, line: 376, type: !109)
!8786 = !DILocalVariable(name: "pin", arg: 2, scope: !8781, file: !1191, line: 376, type: !109)
!8787 = !DILocalVariable(name: "clk", scope: !8781, file: !1191, line: 386, type: !8788)
!8788 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1048)
!8789 = !DILocalVariable(name: "pclken", scope: !8781, file: !1191, line: 387, type: !1308)
!8790 = !DILocalVariable(name: "ret", scope: !8781, file: !1191, line: 396, type: !109)
!8791 = !DILocation(line: 0, scope: !8781)
!8792 = !DILocation(line: 387, column: 2, scope: !8781)
!8793 = !DILocation(line: 387, column: 22, scope: !8781)
!8794 = !DILocation(line: 399, column: 8, scope: !8781)
!8795 = !DILocation(line: 400, column: 10, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8781, file: !1191, line: 400, column: 6)
!8797 = !DILocation(line: 400, column: 6, scope: !8781)
!8798 = !DILocation(line: 405, column: 2, scope: !8781)
!8799 = !DILocation(line: 407, column: 2, scope: !8781)
!8800 = !DILocation(line: 408, column: 1, scope: !8781)
!8801 = distinct !DISubprogram(name: "clock_control_on", scope: !826, file: !826, line: 123, type: !1156, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8802)
!8802 = !{!8803, !8804, !8805}
!8803 = !DILocalVariable(name: "dev", arg: 1, scope: !8801, file: !826, line: 123, type: !1048)
!8804 = !DILocalVariable(name: "sys", arg: 2, scope: !8801, file: !826, line: 124, type: !919)
!8805 = !DILocalVariable(name: "api", scope: !8801, file: !826, line: 126, type: !1149)
!8806 = !DILocation(line: 0, scope: !8801)
!8807 = !DILocation(line: 127, column: 49, scope: !8801)
!8808 = !DILocation(line: 129, column: 14, scope: !8801)
!8809 = !DILocation(line: 129, column: 9, scope: !8801)
!8810 = !DILocation(line: 129, column: 2, scope: !8801)
!8811 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1191, file: !1191, line: 311, type: !7918, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8812)
!8812 = !{!8813, !8814, !8815}
!8813 = !DILocalVariable(name: "port", arg: 1, scope: !8811, file: !1191, line: 311, type: !109)
!8814 = !DILocalVariable(name: "pin", arg: 2, scope: !8811, file: !1191, line: 311, type: !109)
!8815 = !DILocalVariable(name: "line", scope: !8811, file: !1191, line: 313, type: !110)
!8816 = !DILocation(line: 0, scope: !8811)
!8817 = !DILocation(line: 313, column: 18, scope: !8811)
!8818 = !DILocation(line: 337, column: 2, scope: !8811)
!8819 = !DILocation(line: 340, column: 1, scope: !8811)
!8820 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1191, file: !1191, line: 295, type: !8821, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8823)
!8821 = !DISubroutineType(types: !8822)
!8822 = !{!110, !109}
!8823 = !{!8824}
!8824 = !DILocalVariable(name: "pin", arg: 1, scope: !8820, file: !1191, line: 295, type: !109)
!8825 = !DILocation(line: 0, scope: !8820)
!8826 = !DILocation(line: 307, column: 46, scope: !8820)
!8827 = !DILocation(line: 307, column: 27, scope: !8820)
!8828 = !DILocation(line: 307, column: 32, scope: !8820)
!8829 = !DILocation(line: 307, column: 14, scope: !8820)
!8830 = !DILocation(line: 307, column: 39, scope: !8820)
!8831 = !DILocation(line: 307, column: 2, scope: !8820)
!8832 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6026, file: !6026, line: 671, type: !8833, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8835)
!8833 = !DISubroutineType(types: !8834)
!8834 = !{null, !110, !110}
!8835 = !{!8836, !8837}
!8836 = !DILocalVariable(name: "Port", arg: 1, scope: !8832, file: !6026, line: 671, type: !110)
!8837 = !DILocalVariable(name: "Line", arg: 2, scope: !8832, file: !6026, line: 671, type: !110)
!8838 = !DILocation(line: 0, scope: !8832)
!8839 = !DILocation(line: 673, column: 3, scope: !8832)
!8840 = !DILocalVariable(name: "value", arg: 1, scope: !8841, file: !6179, line: 373, type: !110)
!8841 = distinct !DISubprogram(name: "__RBIT", scope: !6179, file: !6179, line: 373, type: !7241, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8842)
!8842 = !{!8840, !8843}
!8843 = !DILocalVariable(name: "result", scope: !8841, file: !6179, line: 375, type: !110)
!8844 = !DILocation(line: 0, scope: !8841, inlinedAt: !8845)
!8845 = distinct !DILocation(line: 673, column: 3, scope: !8832)
!8846 = !DILocation(line: 380, column: 4, scope: !8841, inlinedAt: !8845)
!8847 = !{i64 3502353}
!8848 = !DILocalVariable(name: "value", arg: 1, scope: !8849, file: !6179, line: 403, type: !110)
!8849 = distinct !DISubprogram(name: "__CLZ", scope: !6179, file: !6179, line: 403, type: !8850, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8852)
!8850 = !DISubroutineType(types: !8851)
!8851 = !{!167, !110}
!8852 = !{!8848}
!8853 = !DILocation(line: 0, scope: !8849, inlinedAt: !8854)
!8854 = distinct !DILocation(line: 673, column: 3, scope: !8832)
!8855 = !DILocation(line: 414, column: 7, scope: !8849, inlinedAt: !8854)
!8856 = !DILocation(line: 674, column: 1, scope: !8832)
!8857 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !8602, file: !8602, line: 69, type: !8858, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8860)
!8858 = !DISubroutineType(types: !8859)
!8859 = !{null, !8605, !1048, !110}
!8860 = !{!8861, !8862, !8863, !8864, !8865}
!8861 = !DILocalVariable(name: "list", arg: 1, scope: !8857, file: !8602, line: 69, type: !8605)
!8862 = !DILocalVariable(name: "port", arg: 2, scope: !8857, file: !8602, line: 70, type: !1048)
!8863 = !DILocalVariable(name: "pins", arg: 3, scope: !8857, file: !8602, line: 71, type: !110)
!8864 = !DILocalVariable(name: "cb", scope: !8857, file: !8602, line: 73, type: !1090)
!8865 = !DILocalVariable(name: "tmp", scope: !8857, file: !8602, line: 73, type: !1090)
!8866 = !DILocation(line: 0, scope: !8857)
!8867 = !DILocation(line: 75, column: 2, scope: !8868)
!8868 = distinct !DILexicalBlock(scope: !8857, file: !8602, line: 75, column: 2)
!8869 = !DILocation(line: 0, scope: !8868)
!8870 = !DILocation(line: 76, column: 11, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8872, file: !8602, line: 76, column: 7)
!8872 = distinct !DILexicalBlock(scope: !8873, file: !8602, line: 75, column: 57)
!8873 = distinct !DILexicalBlock(scope: !8868, file: !8602, line: 75, column: 2)
!8874 = !DILocation(line: 76, column: 20, scope: !8871)
!8875 = !DILocation(line: 76, column: 7, scope: !8872)
!8876 = !DILocation(line: 77, column: 4, scope: !8877)
!8877 = distinct !DILexicalBlock(scope: !8878, file: !8602, line: 77, column: 4)
!8878 = distinct !DILexicalBlock(scope: !8879, file: !8602, line: 77, column: 4)
!8879 = distinct !DILexicalBlock(scope: !8871, file: !8602, line: 76, column: 28)
!8880 = !DILocation(line: 77, column: 4, scope: !8878)
!8881 = !DILocation(line: 77, column: 4, scope: !8882)
!8882 = distinct !DILexicalBlock(scope: !8877, file: !8602, line: 77, column: 4)
!8883 = !DILocation(line: 78, column: 4, scope: !8879)
!8884 = !DILocation(line: 79, column: 3, scope: !8879)
!8885 = !DILocation(line: 75, column: 2, scope: !8873)
!8886 = !DILocation(line: 81, column: 1, scope: !8857)
!8887 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6026, file: !6026, line: 710, type: !7241, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8888)
!8888 = !{!8889}
!8889 = !DILocalVariable(name: "Line", arg: 1, scope: !8887, file: !6026, line: 710, type: !110)
!8890 = !DILocation(line: 0, scope: !8887)
!8891 = !DILocation(line: 712, column: 21, scope: !8887)
!8892 = !DILocation(line: 0, scope: !8841, inlinedAt: !8893)
!8893 = distinct !DILocation(line: 712, column: 76, scope: !8887)
!8894 = !DILocation(line: 380, column: 4, scope: !8841, inlinedAt: !8893)
!8895 = !DILocation(line: 0, scope: !8849, inlinedAt: !8896)
!8896 = distinct !DILocation(line: 712, column: 76, scope: !8887)
!8897 = !DILocation(line: 414, column: 7, scope: !8849, inlinedAt: !8896)
!8898 = !DILocation(line: 712, column: 73, scope: !8887)
!8899 = !DILocation(line: 712, column: 3, scope: !8887)
!8900 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !8901, file: !8901, line: 910, type: !8902, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8904)
!8901 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8902 = !DISubroutineType(types: !8903)
!8903 = !{null, !1121, !110}
!8904 = !{!8905, !8906}
!8905 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8900, file: !8901, line: 910, type: !1121)
!8906 = !DILocalVariable(name: "PinMask", arg: 2, scope: !8900, file: !8901, line: 910, type: !110)
!8907 = !DILocation(line: 0, scope: !8900)
!8908 = !DILocation(line: 912, column: 3, scope: !8900)
!8909 = !DILocation(line: 913, column: 1, scope: !8900)
!8910 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !8901, file: !8901, line: 823, type: !8911, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8913)
!8911 = !DISubroutineType(types: !8912)
!8912 = !{!110, !1121}
!8913 = !{!8914}
!8914 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8910, file: !8901, line: 823, type: !1121)
!8915 = !DILocation(line: 0, scope: !8910)
!8916 = !DILocation(line: 825, column: 21, scope: !8910)
!8917 = !DILocation(line: 825, column: 3, scope: !8910)
!8918 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !8901, file: !8901, line: 812, type: !8902, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8919)
!8919 = !{!8920, !8921}
!8920 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8918, file: !8901, line: 812, type: !1121)
!8921 = !DILocalVariable(name: "PortValue", arg: 2, scope: !8918, file: !8901, line: 812, type: !110)
!8922 = !DILocation(line: 0, scope: !8918)
!8923 = !DILocation(line: 814, column: 3, scope: !8918)
!8924 = !DILocation(line: 815, column: 1, scope: !8918)
!8925 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !8901, file: !8901, line: 771, type: !8911, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8926)
!8926 = !{!8927}
!8927 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8925, file: !8901, line: 771, type: !1121)
!8928 = !DILocation(line: 0, scope: !8925)
!8929 = !DILocation(line: 773, column: 21, scope: !8925)
!8930 = !DILocation(line: 773, column: 3, scope: !8925)
!8931 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1191, file: !1191, line: 47, type: !8932, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8934)
!8932 = !DISubroutineType(types: !8933)
!8933 = !{!109, !1064, !2553}
!8934 = !{!8935, !8936}
!8935 = !DILocalVariable(name: "flags", arg: 1, scope: !8931, file: !1191, line: 47, type: !1064)
!8936 = !DILocalVariable(name: "pincfg", arg: 2, scope: !8931, file: !1191, line: 47, type: !2553)
!8937 = !DILocation(line: 0, scope: !8931)
!8938 = !DILocation(line: 50, column: 13, scope: !8939)
!8939 = distinct !DILexicalBlock(scope: !8931, file: !1191, line: 50, column: 6)
!8940 = !DILocation(line: 50, column: 28, scope: !8939)
!8941 = !DILocation(line: 50, column: 6, scope: !8931)
!8942 = !DILocation(line: 53, column: 11, scope: !8943)
!8943 = distinct !DILexicalBlock(scope: !8939, file: !1191, line: 50, column: 34)
!8944 = !DILocation(line: 55, column: 14, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8943, file: !1191, line: 55, column: 7)
!8946 = !DILocation(line: 55, column: 35, scope: !8945)
!8947 = !DILocation(line: 55, column: 7, scope: !8943)
!8948 = !DILocation(line: 56, column: 14, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !8950, file: !1191, line: 56, column: 8)
!8950 = distinct !DILexicalBlock(scope: !8945, file: !1191, line: 55, column: 41)
!8951 = !DILocation(line: 56, column: 8, scope: !8950)
!8952 = !DILocation(line: 0, scope: !8945)
!8953 = !DILocation(line: 66, column: 14, scope: !8954)
!8954 = distinct !DILexicalBlock(scope: !8943, file: !1191, line: 66, column: 7)
!8955 = !DILocation(line: 66, column: 30, scope: !8954)
!8956 = !DILocation(line: 66, column: 7, scope: !8943)
!8957 = !DILocation(line: 67, column: 12, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8954, file: !1191, line: 66, column: 36)
!8959 = !DILocation(line: 68, column: 3, scope: !8958)
!8960 = !DILocation(line: 68, column: 21, scope: !8961)
!8961 = distinct !DILexicalBlock(scope: !8954, file: !1191, line: 68, column: 14)
!8962 = !DILocation(line: 68, column: 39, scope: !8961)
!8963 = !DILocation(line: 68, column: 14, scope: !8954)
!8964 = !DILocation(line: 69, column: 12, scope: !8965)
!8965 = distinct !DILexicalBlock(scope: !8961, file: !1191, line: 68, column: 45)
!8966 = !DILocation(line: 70, column: 3, scope: !8965)
!8967 = !DILocation(line: 72, column: 21, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !8939, file: !1191, line: 72, column: 14)
!8969 = !DILocation(line: 72, column: 35, scope: !8968)
!8970 = !DILocation(line: 72, column: 14, scope: !8939)
!8971 = !DILocation(line: 77, column: 14, scope: !8972)
!8972 = distinct !DILexicalBlock(scope: !8973, file: !1191, line: 77, column: 7)
!8973 = distinct !DILexicalBlock(scope: !8968, file: !1191, line: 72, column: 41)
!8974 = !DILocation(line: 77, column: 30, scope: !8972)
!8975 = !DILocation(line: 77, column: 7, scope: !8973)
!8976 = !DILocation(line: 0, scope: !8939)
!8977 = !DILocation(line: 90, column: 1, scope: !8931)
!8978 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1191, file: !1191, line: 157, type: !8979, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8981)
!8979 = !DISubroutineType(types: !8980)
!8980 = !{null, !1048, !109, !109, !109}
!8981 = !{!8982, !8983, !8984, !8985, !8986, !8987, !8988, !8989, !8990, !8991, !8992}
!8982 = !DILocalVariable(name: "dev", arg: 1, scope: !8978, file: !1191, line: 157, type: !1048)
!8983 = !DILocalVariable(name: "pin", arg: 2, scope: !8978, file: !1191, line: 157, type: !109)
!8984 = !DILocalVariable(name: "conf", arg: 3, scope: !8978, file: !1191, line: 158, type: !109)
!8985 = !DILocalVariable(name: "func", arg: 4, scope: !8978, file: !1191, line: 158, type: !109)
!8986 = !DILocalVariable(name: "cfg", scope: !8978, file: !1191, line: 160, type: !8486)
!8987 = !DILocalVariable(name: "gpio", scope: !8978, file: !1191, line: 161, type: !1121)
!8988 = !DILocalVariable(name: "pin_ll", scope: !8978, file: !1191, line: 163, type: !109)
!8989 = !DILocalVariable(name: "mode", scope: !8978, file: !1191, line: 227, type: !32)
!8990 = !DILocalVariable(name: "otype", scope: !8978, file: !1191, line: 227, type: !32)
!8991 = !DILocalVariable(name: "ospeed", scope: !8978, file: !1191, line: 227, type: !32)
!8992 = !DILocalVariable(name: "pupd", scope: !8978, file: !1191, line: 227, type: !32)
!8993 = !DILocation(line: 0, scope: !8978)
!8994 = !DILocation(line: 160, column: 45, scope: !8978)
!8995 = !DILocation(line: 161, column: 44, scope: !8978)
!8996 = !DILocation(line: 163, column: 15, scope: !8978)
!8997 = !DILocation(line: 229, column: 14, scope: !8978)
!8998 = !DILocation(line: 246, column: 47, scope: !8978)
!8999 = !DILocation(line: 246, column: 2, scope: !8978)
!9000 = !DILocation(line: 248, column: 43, scope: !8978)
!9001 = !DILocation(line: 248, column: 2, scope: !8978)
!9002 = !DILocation(line: 250, column: 40, scope: !8978)
!9003 = !DILocation(line: 250, column: 2, scope: !8978)
!9004 = !DILocation(line: 252, column: 11, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !8978, file: !1191, line: 252, column: 6)
!9006 = !DILocation(line: 252, column: 6, scope: !8978)
!9007 = !DILocation(line: 253, column: 11, scope: !9008)
!9008 = distinct !DILexicalBlock(scope: !9009, file: !1191, line: 253, column: 7)
!9009 = distinct !DILexicalBlock(scope: !9005, file: !1191, line: 252, column: 36)
!9010 = !DILocation(line: 253, column: 7, scope: !9009)
!9011 = !DILocation(line: 254, column: 4, scope: !9012)
!9012 = distinct !DILexicalBlock(scope: !9008, file: !1191, line: 253, column: 16)
!9013 = !DILocation(line: 255, column: 3, scope: !9012)
!9014 = !DILocation(line: 256, column: 4, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !9008, file: !1191, line: 255, column: 10)
!9016 = !DILocation(line: 260, column: 40, scope: !8978)
!9017 = !DILocation(line: 260, column: 2, scope: !8978)
!9018 = !DILocation(line: 265, column: 1, scope: !8978)
!9019 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1191, file: !1191, line: 137, type: !8821, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !9020)
!9020 = !{!9021, !9022}
!9021 = !DILocalVariable(name: "pin", arg: 1, scope: !9019, file: !1191, line: 137, type: !109)
!9022 = !DILocalVariable(name: "pinval", scope: !9019, file: !1191, line: 139, type: !110)
!9023 = !DILocation(line: 0, scope: !9019)
!9024 = !DILocation(line: 149, column: 13, scope: !9019)
!9025 = !DILocation(line: 151, column: 2, scope: !9019)
!9026 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !8901, file: !8901, line: 342, type: !9027, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !9029)
!9027 = !DISubroutineType(types: !9028)
!9028 = !{null, !1121, !110, !110}
!9029 = !{!9030, !9031, !9032}
!9030 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9026, file: !8901, line: 342, type: !1121)
!9031 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9026, file: !8901, line: 342, type: !110)
!9032 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9026, file: !8901, line: 342, type: !110)
!9033 = !DILocation(line: 0, scope: !9026)
!9034 = !DILocation(line: 344, column: 3, scope: !9026)
!9035 = !DILocation(line: 345, column: 1, scope: !9026)
!9036 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !8901, file: !8901, line: 413, type: !9027, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !9037)
!9037 = !{!9038, !9039, !9040}
!9038 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9036, file: !8901, line: 413, type: !1121)
!9039 = !DILocalVariable(name: "Pin", arg: 2, scope: !9036, file: !8901, line: 413, type: !110)
!9040 = !DILocalVariable(name: "Speed", arg: 3, scope: !9036, file: !8901, line: 413, type: !110)
!9041 = !DILocation(line: 0, scope: !9036)
!9042 = !DILocation(line: 415, column: 3, scope: !9036)
!9043 = !DILocation(line: 0, scope: !8841, inlinedAt: !9044)
!9044 = distinct !DILocation(line: 415, column: 3, scope: !9036)
!9045 = !DILocation(line: 380, column: 4, scope: !8841, inlinedAt: !9044)
!9046 = !DILocation(line: 0, scope: !8849, inlinedAt: !9047)
!9047 = distinct !DILocation(line: 415, column: 3, scope: !9036)
!9048 = !DILocation(line: 414, column: 7, scope: !8849, inlinedAt: !9047)
!9049 = !DILocation(line: 0, scope: !8841, inlinedAt: !9050)
!9050 = distinct !DILocation(line: 415, column: 3, scope: !9036)
!9051 = !DILocation(line: 0, scope: !8849, inlinedAt: !9052)
!9052 = distinct !DILocation(line: 415, column: 3, scope: !9036)
!9053 = !DILocation(line: 417, column: 1, scope: !9036)
!9054 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !8901, file: !8901, line: 484, type: !9027, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !9055)
!9055 = !{!9056, !9057, !9058}
!9056 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9054, file: !8901, line: 484, type: !1121)
!9057 = !DILocalVariable(name: "Pin", arg: 2, scope: !9054, file: !8901, line: 484, type: !110)
!9058 = !DILocalVariable(name: "Pull", arg: 3, scope: !9054, file: !8901, line: 484, type: !110)
!9059 = !DILocation(line: 0, scope: !9054)
!9060 = !DILocation(line: 486, column: 3, scope: !9054)
!9061 = !DILocation(line: 0, scope: !8841, inlinedAt: !9062)
!9062 = distinct !DILocation(line: 486, column: 3, scope: !9054)
!9063 = !DILocation(line: 380, column: 4, scope: !8841, inlinedAt: !9062)
!9064 = !DILocation(line: 0, scope: !8849, inlinedAt: !9065)
!9065 = distinct !DILocation(line: 486, column: 3, scope: !9054)
!9066 = !DILocation(line: 414, column: 7, scope: !8849, inlinedAt: !9065)
!9067 = !DILocation(line: 0, scope: !8841, inlinedAt: !9068)
!9068 = distinct !DILocation(line: 486, column: 3, scope: !9054)
!9069 = !DILocation(line: 0, scope: !8849, inlinedAt: !9070)
!9070 = distinct !DILocation(line: 486, column: 3, scope: !9054)
!9071 = !DILocation(line: 487, column: 1, scope: !9054)
!9072 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !8901, file: !8901, line: 556, type: !9027, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !9073)
!9073 = !{!9074, !9075, !9076}
!9074 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9072, file: !8901, line: 556, type: !1121)
!9075 = !DILocalVariable(name: "Pin", arg: 2, scope: !9072, file: !8901, line: 556, type: !110)
!9076 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9072, file: !8901, line: 556, type: !110)
!9077 = !DILocation(line: 0, scope: !9072)
!9078 = !DILocation(line: 558, column: 3, scope: !9072)
!9079 = !DILocation(line: 0, scope: !8841, inlinedAt: !9080)
!9080 = distinct !DILocation(line: 558, column: 3, scope: !9072)
!9081 = !DILocation(line: 380, column: 4, scope: !8841, inlinedAt: !9080)
!9082 = !DILocation(line: 0, scope: !8849, inlinedAt: !9083)
!9083 = distinct !DILocation(line: 558, column: 3, scope: !9072)
!9084 = !DILocation(line: 414, column: 7, scope: !8849, inlinedAt: !9083)
!9085 = !DILocation(line: 0, scope: !8841, inlinedAt: !9086)
!9086 = distinct !DILocation(line: 558, column: 3, scope: !9072)
!9087 = !DILocation(line: 0, scope: !8849, inlinedAt: !9088)
!9088 = distinct !DILocation(line: 558, column: 3, scope: !9072)
!9089 = !DILocation(line: 560, column: 1, scope: !9072)
!9090 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !8901, file: !8901, line: 633, type: !9027, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !9091)
!9091 = !{!9092, !9093, !9094}
!9092 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9090, file: !8901, line: 633, type: !1121)
!9093 = !DILocalVariable(name: "Pin", arg: 2, scope: !9090, file: !8901, line: 633, type: !110)
!9094 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9090, file: !8901, line: 633, type: !110)
!9095 = !DILocation(line: 0, scope: !9090)
!9096 = !DILocation(line: 635, column: 3, scope: !9090)
!9097 = !DILocation(line: 0, scope: !8841, inlinedAt: !9098)
!9098 = distinct !DILocation(line: 635, column: 3, scope: !9090)
!9099 = !DILocation(line: 380, column: 4, scope: !8841, inlinedAt: !9098)
!9100 = !DILocation(line: 0, scope: !8849, inlinedAt: !9101)
!9101 = distinct !DILocation(line: 635, column: 3, scope: !9090)
!9102 = !DILocation(line: 414, column: 7, scope: !8849, inlinedAt: !9101)
!9103 = !DILocation(line: 0, scope: !8841, inlinedAt: !9104)
!9104 = distinct !DILocation(line: 635, column: 3, scope: !9090)
!9105 = !DILocation(line: 0, scope: !8849, inlinedAt: !9106)
!9106 = distinct !DILocation(line: 635, column: 3, scope: !9090)
!9107 = !DILocation(line: 637, column: 1, scope: !9090)
!9108 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !8901, file: !8901, line: 273, type: !9027, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !9109)
!9109 = !{!9110, !9111, !9112}
!9110 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9108, file: !8901, line: 273, type: !1121)
!9111 = !DILocalVariable(name: "Pin", arg: 2, scope: !9108, file: !8901, line: 273, type: !110)
!9112 = !DILocalVariable(name: "Mode", arg: 3, scope: !9108, file: !8901, line: 273, type: !110)
!9113 = !DILocation(line: 0, scope: !9108)
!9114 = !DILocation(line: 275, column: 3, scope: !9108)
!9115 = !DILocation(line: 0, scope: !8841, inlinedAt: !9116)
!9116 = distinct !DILocation(line: 275, column: 3, scope: !9108)
!9117 = !DILocation(line: 380, column: 4, scope: !8841, inlinedAt: !9116)
!9118 = !DILocation(line: 0, scope: !8849, inlinedAt: !9119)
!9119 = distinct !DILocation(line: 275, column: 3, scope: !9108)
!9120 = !DILocation(line: 414, column: 7, scope: !8849, inlinedAt: !9119)
!9121 = !DILocation(line: 0, scope: !8841, inlinedAt: !9122)
!9122 = distinct !DILocation(line: 275, column: 3, scope: !9108)
!9123 = !DILocation(line: 0, scope: !8849, inlinedAt: !9124)
!9124 = distinct !DILocation(line: 275, column: 3, scope: !9108)
!9125 = !DILocation(line: 276, column: 1, scope: !9108)
!9126 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1191, file: !1191, line: 698, type: !1204, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !9127)
!9127 = !{!9128, !9129, !9130}
!9128 = !DILocalVariable(name: "dev", arg: 1, scope: !9126, file: !1191, line: 698, type: !1048)
!9129 = !DILocalVariable(name: "data", scope: !9126, file: !1191, line: 700, type: !8553)
!9130 = !DILocalVariable(name: "ret", scope: !9126, file: !1191, line: 701, type: !109)
!9131 = !DILocation(line: 0, scope: !9126)
!9132 = !DILocation(line: 700, column: 38, scope: !9126)
!9133 = !DILocation(line: 703, column: 8, scope: !9126)
!9134 = !DILocation(line: 703, column: 12, scope: !9126)
!9135 = !DILocation(line: 705, column: 7, scope: !9136)
!9136 = distinct !DILexicalBlock(scope: !9126, file: !1191, line: 705, column: 6)
!9137 = !DILocation(line: 705, column: 6, scope: !9126)
!9138 = !DILocation(line: 722, column: 8, scope: !9126)
!9139 = !DILocation(line: 723, column: 10, scope: !9140)
!9140 = distinct !DILexicalBlock(scope: !9126, file: !1191, line: 723, column: 6)
!9141 = !DILocation(line: 723, column: 6, scope: !9126)
!9142 = !DILocation(line: 731, column: 1, scope: !9126)
!9143 = distinct !DISubprogram(name: "device_is_ready", scope: !8332, file: !8332, line: 47, type: !9144, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !9146)
!9144 = !DISubroutineType(types: !9145)
!9145 = !{!334, !1048}
!9146 = !{!9147}
!9147 = !DILocalVariable(name: "dev", arg: 1, scope: !9143, file: !8332, line: 47, type: !1048)
!9148 = !DILocation(line: 0, scope: !9143)
!9149 = !DILocation(line: 55, column: 2, scope: !9150)
!9150 = distinct !DILexicalBlock(scope: !9143, file: !8332, line: 55, column: 2)
!9151 = !{i64 2154952817}
!9152 = !DILocation(line: 56, column: 9, scope: !9143)
!9153 = !DILocation(line: 56, column: 2, scope: !9143)
!9154 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1191, file: !1191, line: 270, type: !9155, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !9157)
!9155 = !DISubroutineType(types: !9156)
!9156 = !{!109, !1048, !334}
!9157 = !{!9158, !9159, !9160, !9161, !9162}
!9158 = !DILocalVariable(name: "dev", arg: 1, scope: !9154, file: !1191, line: 270, type: !1048)
!9159 = !DILocalVariable(name: "on", arg: 2, scope: !9154, file: !1191, line: 270, type: !334)
!9160 = !DILocalVariable(name: "cfg", scope: !9154, file: !1191, line: 272, type: !8486)
!9161 = !DILocalVariable(name: "ret", scope: !9154, file: !1191, line: 273, type: !109)
!9162 = !DILocalVariable(name: "clk", scope: !9154, file: !1191, line: 278, type: !8788)
!9163 = !DILocation(line: 0, scope: !9154)
!9164 = !DILocation(line: 272, column: 45, scope: !9154)
!9165 = !DILocation(line: 282, column: 38, scope: !9166)
!9166 = distinct !DILexicalBlock(scope: !9167, file: !1191, line: 280, column: 10)
!9167 = distinct !DILexicalBlock(scope: !9154, file: !1191, line: 280, column: 6)
!9168 = !DILocation(line: 282, column: 6, scope: !9166)
!9169 = !DILocation(line: 281, column: 9, scope: !9166)
!9170 = !DILocation(line: 293, column: 1, scope: !9154)
!9171 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !321, file: !321, line: 730, type: !9144, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !9172)
!9172 = !{!9173}
!9173 = !DILocalVariable(name: "dev", arg: 1, scope: !9171, file: !321, line: 730, type: !1048)
!9174 = !DILocation(line: 0, scope: !9171)
!9175 = !DILocation(line: 732, column: 9, scope: !9171)
!9176 = !DILocation(line: 732, column: 2, scope: !9171)
!9177 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1191, file: !1191, line: 496, type: !9178, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !9180)
!9178 = !DISubroutineType(types: !9179)
!9179 = !{!109, !1048, !109, !109, !109}
!9180 = !{!9181, !9182, !9183, !9184, !9185, !9186}
!9181 = !DILocalVariable(name: "dev", arg: 1, scope: !9177, file: !1191, line: 496, type: !1048)
!9182 = !DILocalVariable(name: "pin", arg: 2, scope: !9177, file: !1191, line: 496, type: !109)
!9183 = !DILocalVariable(name: "conf", arg: 3, scope: !9177, file: !1191, line: 496, type: !109)
!9184 = !DILocalVariable(name: "func", arg: 4, scope: !9177, file: !1191, line: 496, type: !109)
!9185 = !DILocalVariable(name: "ret", scope: !9177, file: !1191, line: 498, type: !109)
!9186 = !DILocalVariable(name: "gpio_out", scope: !9187, file: !1191, line: 508, type: !110)
!9187 = distinct !DILexicalBlock(scope: !9188, file: !1191, line: 507, column: 27)
!9188 = distinct !DILexicalBlock(scope: !9177, file: !1191, line: 507, column: 6)
!9189 = !DILocation(line: 0, scope: !9177)
!9190 = !DILocation(line: 505, column: 2, scope: !9177)
!9191 = !DILocation(line: 507, column: 11, scope: !9188)
!9192 = !DILocation(line: 507, column: 6, scope: !9177)
!9193 = !DILocation(line: 508, column: 28, scope: !9187)
!9194 = !DILocation(line: 0, scope: !9187)
!9195 = !DILocation(line: 510, column: 16, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !9187, file: !1191, line: 510, column: 7)
!9197 = !DILocation(line: 0, scope: !9196)
!9198 = !DILocation(line: 510, column: 7, scope: !9187)
!9199 = !DILocation(line: 511, column: 4, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9196, file: !1191, line: 510, column: 32)
!9201 = !DILocation(line: 512, column: 3, scope: !9200)
!9202 = !DILocation(line: 513, column: 4, scope: !9203)
!9203 = distinct !DILexicalBlock(scope: !9204, file: !1191, line: 512, column: 39)
!9204 = distinct !DILexicalBlock(scope: !9196, file: !1191, line: 512, column: 14)
!9205 = !DILocation(line: 514, column: 3, scope: !9203)
!9206 = !DILocation(line: 518, column: 1, scope: !9177)
!9207 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1465, file: !1465, line: 526, type: !1368, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9208)
!9208 = !{!9209, !9210, !9211}
!9209 = !DILocalVariable(name: "dev", arg: 1, scope: !9207, file: !1465, line: 526, type: !1370)
!9210 = !DILocalVariable(name: "c", arg: 2, scope: !9207, file: !1465, line: 526, type: !980)
!9211 = !DILocalVariable(name: "config", scope: !9207, file: !1465, line: 528, type: !9212)
!9212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 32)
!9213 = !DILocation(line: 0, scope: !9207)
!9214 = !DILocation(line: 528, column: 48, scope: !9207)
!9215 = !DILocation(line: 531, column: 40, scope: !9216)
!9216 = distinct !DILexicalBlock(scope: !9207, file: !1465, line: 531, column: 6)
!9217 = !DILocation(line: 531, column: 6, scope: !9216)
!9218 = !DILocation(line: 531, column: 6, scope: !9207)
!9219 = !DILocation(line: 532, column: 34, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9216, file: !1465, line: 531, column: 48)
!9221 = !DILocation(line: 532, column: 3, scope: !9220)
!9222 = !DILocation(line: 533, column: 2, scope: !9220)
!9223 = !DILocation(line: 539, column: 42, scope: !9224)
!9224 = distinct !DILexicalBlock(scope: !9207, file: !1465, line: 539, column: 6)
!9225 = !DILocation(line: 539, column: 7, scope: !9224)
!9226 = !DILocation(line: 539, column: 6, scope: !9207)
!9227 = !DILocation(line: 543, column: 52, scope: !9207)
!9228 = !DILocation(line: 543, column: 22, scope: !9207)
!9229 = !DILocation(line: 543, column: 5, scope: !9207)
!9230 = !DILocation(line: 545, column: 2, scope: !9207)
!9231 = !DILocation(line: 546, column: 1, scope: !9207)
!9232 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1465, file: !1465, line: 548, type: !1387, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9233)
!9233 = !{!9234, !9235, !9236, !9237}
!9234 = !DILocalVariable(name: "dev", arg: 1, scope: !9232, file: !1465, line: 548, type: !1370)
!9235 = !DILocalVariable(name: "c", arg: 2, scope: !9232, file: !1465, line: 549, type: !168)
!9236 = !DILocalVariable(name: "config", scope: !9232, file: !1465, line: 551, type: !9212)
!9237 = !DILocalVariable(name: "key", scope: !9232, file: !1465, line: 555, type: !32)
!9238 = !DILocation(line: 0, scope: !9232)
!9239 = !DILocation(line: 551, column: 48, scope: !9232)
!9240 = !DILocation(line: 562, column: 2, scope: !9232)
!9241 = !DILocation(line: 563, column: 41, scope: !9242)
!9242 = distinct !DILexicalBlock(scope: !9243, file: !1465, line: 563, column: 7)
!9243 = distinct !DILexicalBlock(scope: !9232, file: !1465, line: 562, column: 12)
!9244 = !DILocation(line: 563, column: 7, scope: !9242)
!9245 = !DILocation(line: 563, column: 7, scope: !9243)
!9246 = !DILocation(line: 55, column: 2, scope: !9247, inlinedAt: !9251)
!9247 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6005, file: !6005, line: 42, type: !6006, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9248)
!9248 = !{!9249, !9250}
!9249 = !DILocalVariable(name: "key", scope: !9247, file: !6005, line: 44, type: !32)
!9250 = !DILocalVariable(name: "tmp", scope: !9247, file: !6005, line: 53, type: !32)
!9251 = distinct !DILocation(line: 564, column: 10, scope: !9252)
!9252 = distinct !DILexicalBlock(scope: !9242, file: !1465, line: 563, column: 49)
!9253 = !{i64 2290766}
!9254 = !DILocation(line: 0, scope: !9247, inlinedAt: !9251)
!9255 = !DILocation(line: 565, column: 42, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !9252, file: !1465, line: 565, column: 8)
!9257 = !DILocation(line: 565, column: 8, scope: !9256)
!9258 = !DILocation(line: 565, column: 8, scope: !9252)
!9259 = !DILocalVariable(name: "key", arg: 1, scope: !9260, file: !6005, line: 84, type: !32)
!9260 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6005, file: !6005, line: 84, type: !6016, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9261)
!9261 = !{!9259}
!9262 = !DILocation(line: 0, scope: !9260, inlinedAt: !9263)
!9263 = distinct !DILocation(line: 568, column: 4, scope: !9252)
!9264 = !DILocation(line: 95, column: 2, scope: !9260, inlinedAt: !9263)
!9265 = !{i64 2291583}
!9266 = !DILocation(line: 569, column: 3, scope: !9252)
!9267 = distinct !{!9267, !9240, !9268}
!9268 = !DILocation(line: 570, column: 2, scope: !9232)
!9269 = !DILocation(line: 592, column: 33, scope: !9232)
!9270 = !DILocation(line: 592, column: 2, scope: !9232)
!9271 = !DILocation(line: 0, scope: !9260, inlinedAt: !9272)
!9272 = distinct !DILocation(line: 593, column: 2, scope: !9232)
!9273 = !DILocation(line: 95, column: 2, scope: !9260, inlinedAt: !9272)
!9274 = !DILocation(line: 594, column: 1, scope: !9232)
!9275 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1465, file: !1465, line: 596, type: !1391, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9276)
!9276 = !{!9277, !9278, !9279}
!9277 = !DILocalVariable(name: "dev", arg: 1, scope: !9275, file: !1465, line: 596, type: !1370)
!9278 = !DILocalVariable(name: "config", scope: !9275, file: !1465, line: 598, type: !9212)
!9279 = !DILocalVariable(name: "err", scope: !9275, file: !1465, line: 599, type: !110)
!9280 = !DILocation(line: 0, scope: !9275)
!9281 = !DILocation(line: 598, column: 48, scope: !9275)
!9282 = !DILocation(line: 606, column: 40, scope: !9283)
!9283 = distinct !DILexicalBlock(scope: !9275, file: !1465, line: 606, column: 6)
!9284 = !DILocation(line: 606, column: 6, scope: !9283)
!9285 = !DILocation(line: 606, column: 6, scope: !9275)
!9286 = !DILocation(line: 610, column: 39, scope: !9287)
!9287 = distinct !DILexicalBlock(scope: !9275, file: !1465, line: 610, column: 6)
!9288 = !DILocation(line: 610, column: 6, scope: !9287)
!9289 = !DILocation(line: 610, column: 6, scope: !9275)
!9290 = !DILocation(line: 614, column: 39, scope: !9291)
!9291 = distinct !DILexicalBlock(scope: !9275, file: !1465, line: 614, column: 6)
!9292 = !DILocation(line: 614, column: 6, scope: !9291)
!9293 = !DILocation(line: 614, column: 6, scope: !9275)
!9294 = !DILocation(line: 619, column: 40, scope: !9295)
!9295 = distinct !DILexicalBlock(scope: !9275, file: !1465, line: 619, column: 6)
!9296 = !DILocation(line: 619, column: 6, scope: !9295)
!9297 = !DILocation(line: 619, column: 6, scope: !9275)
!9298 = !DILocation(line: 623, column: 10, scope: !9299)
!9299 = distinct !DILexicalBlock(scope: !9275, file: !1465, line: 623, column: 6)
!9300 = !DILocation(line: 623, column: 6, scope: !9275)
!9301 = !DILocation(line: 624, column: 34, scope: !9302)
!9302 = distinct !DILexicalBlock(scope: !9299, file: !1465, line: 623, column: 24)
!9303 = !DILocation(line: 624, column: 3, scope: !9302)
!9304 = !DILocation(line: 625, column: 2, scope: !9302)
!9305 = !DILocation(line: 632, column: 10, scope: !9306)
!9306 = distinct !DILexicalBlock(scope: !9275, file: !1465, line: 632, column: 6)
!9307 = !DILocation(line: 632, column: 6, scope: !9275)
!9308 = !DILocation(line: 633, column: 34, scope: !9309)
!9309 = distinct !DILexicalBlock(scope: !9306, file: !1465, line: 632, column: 32)
!9310 = !DILocation(line: 633, column: 3, scope: !9309)
!9311 = !DILocation(line: 634, column: 2, scope: !9309)
!9312 = !DILocation(line: 636, column: 10, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !9275, file: !1465, line: 636, column: 6)
!9314 = !DILocation(line: 636, column: 6, scope: !9275)
!9315 = !DILocation(line: 637, column: 33, scope: !9316)
!9316 = distinct !DILexicalBlock(scope: !9313, file: !1465, line: 636, column: 31)
!9317 = !DILocation(line: 637, column: 3, scope: !9316)
!9318 = !DILocation(line: 638, column: 2, scope: !9316)
!9319 = !DILocation(line: 640, column: 10, scope: !9320)
!9320 = distinct !DILexicalBlock(scope: !9275, file: !1465, line: 640, column: 6)
!9321 = !DILocation(line: 640, column: 6, scope: !9275)
!9322 = !DILocation(line: 641, column: 33, scope: !9323)
!9323 = distinct !DILexicalBlock(scope: !9320, file: !1465, line: 640, column: 32)
!9324 = !DILocation(line: 641, column: 3, scope: !9323)
!9325 = !DILocation(line: 642, column: 2, scope: !9323)
!9326 = !DILocation(line: 646, column: 32, scope: !9275)
!9327 = !DILocation(line: 646, column: 2, scope: !9275)
!9328 = !DILocation(line: 648, column: 2, scope: !9275)
!9329 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1465, file: !1465, line: 419, type: !1395, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9330)
!9330 = !{!9331, !9332, !9333, !9334, !9336, !9337, !9338, !9339}
!9331 = !DILocalVariable(name: "dev", arg: 1, scope: !9329, file: !1465, line: 419, type: !1370)
!9332 = !DILocalVariable(name: "cfg", arg: 2, scope: !9329, file: !1465, line: 420, type: !1397)
!9333 = !DILocalVariable(name: "config", scope: !9329, file: !1465, line: 422, type: !9212)
!9334 = !DILocalVariable(name: "data", scope: !9329, file: !1465, line: 423, type: !9335)
!9335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 32)
!9336 = !DILocalVariable(name: "parity", scope: !9329, file: !1465, line: 424, type: !6462)
!9337 = !DILocalVariable(name: "stopbits", scope: !9329, file: !1465, line: 425, type: !6462)
!9338 = !DILocalVariable(name: "databits", scope: !9329, file: !1465, line: 426, type: !6462)
!9339 = !DILocalVariable(name: "flowctrl", scope: !9329, file: !1465, line: 428, type: !6462)
!9340 = !DILocation(line: 0, scope: !9329)
!9341 = !DILocation(line: 422, column: 48, scope: !9329)
!9342 = !DILocation(line: 423, column: 38, scope: !9329)
!9343 = !DILocation(line: 424, column: 56, scope: !9329)
!9344 = !DILocation(line: 424, column: 51, scope: !9329)
!9345 = !DILocation(line: 424, column: 26, scope: !9329)
!9346 = !DILocation(line: 425, column: 60, scope: !9329)
!9347 = !DILocation(line: 425, column: 55, scope: !9329)
!9348 = !DILocation(line: 425, column: 28, scope: !9329)
!9349 = !DILocation(line: 426, column: 60, scope: !9329)
!9350 = !DILocation(line: 426, column: 55, scope: !9329)
!9351 = !DILocation(line: 426, column: 28, scope: !9329)
!9352 = !DILocation(line: 428, column: 58, scope: !9329)
!9353 = !DILocation(line: 428, column: 53, scope: !9329)
!9354 = !DILocation(line: 428, column: 28, scope: !9329)
!9355 = !DILocation(line: 431, column: 44, scope: !9356)
!9356 = distinct !DILexicalBlock(scope: !9329, file: !1465, line: 431, column: 6)
!9357 = !DILocation(line: 438, column: 22, scope: !9358)
!9358 = distinct !DILexicalBlock(scope: !9329, file: !1465, line: 437, column: 6)
!9359 = !DILocation(line: 437, column: 6, scope: !9329)
!9360 = !DILocation(line: 448, column: 6, scope: !9329)
!9361 = !DILocation(line: 465, column: 47, scope: !9362)
!9362 = distinct !DILexicalBlock(scope: !9329, file: !1465, line: 465, column: 6)
!9363 = !DILocation(line: 475, column: 21, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !9329, file: !1465, line: 475, column: 6)
!9365 = !DILocation(line: 475, column: 6, scope: !9329)
!9366 = !DILocation(line: 476, column: 8, scope: !9367)
!9367 = distinct !DILexicalBlock(scope: !9368, file: !1465, line: 476, column: 7)
!9368 = distinct !DILexicalBlock(scope: !9364, file: !1465, line: 475, column: 49)
!9369 = !DILocation(line: 477, column: 34, scope: !9367)
!9370 = !DILocation(line: 476, column: 7, scope: !9368)
!9371 = !DILocation(line: 482, column: 27, scope: !9329)
!9372 = !DILocation(line: 482, column: 2, scope: !9329)
!9373 = !DILocation(line: 484, column: 16, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9329, file: !1465, line: 484, column: 6)
!9375 = !DILocation(line: 484, column: 13, scope: !9374)
!9376 = !DILocation(line: 484, column: 6, scope: !9329)
!9377 = !DILocation(line: 485, column: 3, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9374, file: !1465, line: 484, column: 44)
!9379 = !DILocation(line: 486, column: 2, scope: !9378)
!9380 = !DILocation(line: 488, column: 18, scope: !9381)
!9381 = distinct !DILexicalBlock(scope: !9329, file: !1465, line: 488, column: 6)
!9382 = !DILocation(line: 488, column: 15, scope: !9381)
!9383 = !DILocation(line: 488, column: 6, scope: !9329)
!9384 = !DILocation(line: 489, column: 3, scope: !9385)
!9385 = distinct !DILexicalBlock(scope: !9381, file: !1465, line: 488, column: 48)
!9386 = !DILocation(line: 490, column: 2, scope: !9385)
!9387 = !DILocation(line: 492, column: 18, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9329, file: !1465, line: 492, column: 6)
!9389 = !DILocation(line: 492, column: 15, scope: !9388)
!9390 = !DILocation(line: 492, column: 6, scope: !9329)
!9391 = !DILocation(line: 493, column: 3, scope: !9392)
!9392 = distinct !DILexicalBlock(scope: !9388, file: !1465, line: 492, column: 48)
!9393 = !DILocation(line: 494, column: 2, scope: !9392)
!9394 = !DILocation(line: 496, column: 18, scope: !9395)
!9395 = distinct !DILexicalBlock(scope: !9329, file: !1465, line: 496, column: 6)
!9396 = !DILocation(line: 496, column: 15, scope: !9395)
!9397 = !DILocation(line: 496, column: 6, scope: !9329)
!9398 = !DILocation(line: 497, column: 3, scope: !9399)
!9399 = distinct !DILexicalBlock(scope: !9395, file: !1465, line: 496, column: 46)
!9400 = !DILocation(line: 498, column: 2, scope: !9399)
!9401 = !DILocation(line: 500, column: 11, scope: !9402)
!9402 = distinct !DILexicalBlock(scope: !9329, file: !1465, line: 500, column: 6)
!9403 = !DILocation(line: 500, column: 29, scope: !9402)
!9404 = !DILocation(line: 500, column: 20, scope: !9402)
!9405 = !DILocation(line: 500, column: 6, scope: !9329)
!9406 = !DILocation(line: 501, column: 3, scope: !9407)
!9407 = distinct !DILexicalBlock(scope: !9402, file: !1465, line: 500, column: 40)
!9408 = !DILocation(line: 502, column: 26, scope: !9407)
!9409 = !DILocation(line: 502, column: 19, scope: !9407)
!9410 = !DILocation(line: 503, column: 2, scope: !9407)
!9411 = !DILocation(line: 505, column: 26, scope: !9329)
!9412 = !DILocation(line: 505, column: 2, scope: !9329)
!9413 = !DILocation(line: 506, column: 2, scope: !9329)
!9414 = !DILocation(line: 507, column: 1, scope: !9329)
!9415 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1465, file: !1465, line: 509, type: !1408, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9416)
!9416 = !{!9417, !9418, !9419}
!9417 = !DILocalVariable(name: "dev", arg: 1, scope: !9415, file: !1465, line: 509, type: !1370)
!9418 = !DILocalVariable(name: "cfg", arg: 2, scope: !9415, file: !1465, line: 510, type: !1410)
!9419 = !DILocalVariable(name: "data", scope: !9415, file: !1465, line: 512, type: !9335)
!9420 = !DILocation(line: 0, scope: !9415)
!9421 = !DILocation(line: 512, column: 38, scope: !9415)
!9422 = !DILocation(line: 514, column: 24, scope: !9415)
!9423 = !DILocation(line: 514, column: 7, scope: !9415)
!9424 = !DILocation(line: 514, column: 16, scope: !9415)
!9425 = !DILocation(line: 515, column: 41, scope: !9415)
!9426 = !{i32 0, i32 1537}
!9427 = !DILocation(line: 515, column: 16, scope: !9415)
!9428 = !DILocation(line: 515, column: 7, scope: !9415)
!9429 = !DILocation(line: 515, column: 14, scope: !9415)
!9430 = !DILocation(line: 517, column: 3, scope: !9415)
!9431 = !{i32 0, i32 12289}
!9432 = !DILocation(line: 516, column: 19, scope: !9415)
!9433 = !DILocation(line: 516, column: 7, scope: !9415)
!9434 = !DILocation(line: 516, column: 17, scope: !9415)
!9435 = !DILocation(line: 519, column: 3, scope: !9415)
!9436 = !DILocation(line: 519, column: 33, scope: !9415)
!9437 = !DILocation(line: 518, column: 19, scope: !9415)
!9438 = !DILocation(line: 518, column: 7, scope: !9415)
!9439 = !DILocation(line: 518, column: 17, scope: !9415)
!9440 = !DILocation(line: 521, column: 3, scope: !9415)
!9441 = !{i32 0, i32 769}
!9442 = !DILocation(line: 520, column: 19, scope: !9415)
!9443 = !DILocation(line: 520, column: 7, scope: !9415)
!9444 = !DILocation(line: 520, column: 17, scope: !9415)
!9445 = !DILocation(line: 522, column: 2, scope: !9415)
!9446 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1465, file: !1465, line: 205, type: !9447, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9449)
!9447 = !DISubroutineType(types: !9448)
!9448 = !{!110, !1370}
!9449 = !{!9450, !9451}
!9450 = !DILocalVariable(name: "dev", arg: 1, scope: !9446, file: !1465, line: 205, type: !1370)
!9451 = !DILocalVariable(name: "config", scope: !9446, file: !1465, line: 207, type: !9212)
!9452 = !DILocation(line: 0, scope: !9446)
!9453 = !DILocation(line: 207, column: 48, scope: !9446)
!9454 = !DILocation(line: 209, column: 36, scope: !9446)
!9455 = !DILocation(line: 209, column: 9, scope: !9446)
!9456 = !DILocation(line: 209, column: 2, scope: !9446)
!9457 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1465, file: !1465, line: 270, type: !9458, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9460)
!9458 = !DISubroutineType(types: !9459)
!9459 = !{!1336, !110}
!9460 = !{!9461}
!9461 = !DILocalVariable(name: "parity", arg: 1, scope: !9457, file: !1465, line: 270, type: !110)
!9462 = !DILocation(line: 0, scope: !9457)
!9463 = !DILocation(line: 272, column: 2, scope: !9457)
!9464 = !DILocation(line: 281, column: 1, scope: !9457)
!9465 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1465, file: !1465, line: 220, type: !9447, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9466)
!9466 = !{!9467, !9468}
!9467 = !DILocalVariable(name: "dev", arg: 1, scope: !9465, file: !1465, line: 220, type: !1370)
!9468 = !DILocalVariable(name: "config", scope: !9465, file: !1465, line: 222, type: !9212)
!9469 = !DILocation(line: 0, scope: !9465)
!9470 = !DILocation(line: 222, column: 48, scope: !9465)
!9471 = !DILocation(line: 224, column: 44, scope: !9465)
!9472 = !DILocation(line: 224, column: 9, scope: !9465)
!9473 = !DILocation(line: 224, column: 2, scope: !9465)
!9474 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1465, file: !1465, line: 304, type: !9475, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9477)
!9475 = !DISubroutineType(types: !9476)
!9476 = !{!1350, !110}
!9477 = !{!9478}
!9478 = !DILocalVariable(name: "sb", arg: 1, scope: !9474, file: !1465, line: 304, type: !110)
!9479 = !DILocation(line: 0, scope: !9474)
!9480 = !DILocation(line: 306, column: 2, scope: !9474)
!9481 = !DILocation(line: 0, scope: !9482)
!9482 = distinct !DILexicalBlock(scope: !9474, file: !1465, line: 306, column: 14)
!9483 = !DILocation(line: 323, column: 1, scope: !9474)
!9484 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1465, file: !1465, line: 235, type: !9447, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9485)
!9485 = !{!9486, !9487}
!9486 = !DILocalVariable(name: "dev", arg: 1, scope: !9484, file: !1465, line: 235, type: !1370)
!9487 = !DILocalVariable(name: "config", scope: !9484, file: !1465, line: 237, type: !9212)
!9488 = !DILocation(line: 0, scope: !9484)
!9489 = !DILocation(line: 237, column: 48, scope: !9484)
!9490 = !DILocation(line: 239, column: 39, scope: !9484)
!9491 = !DILocation(line: 239, column: 9, scope: !9484)
!9492 = !DILocation(line: 239, column: 2, scope: !9484)
!9493 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1465, file: !1465, line: 355, type: !9494, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9496)
!9494 = !DISubroutineType(types: !9495)
!9495 = !{!1343, !110, !110}
!9496 = !{!9497, !9498}
!9497 = !DILocalVariable(name: "db", arg: 1, scope: !9493, file: !1465, line: 355, type: !110)
!9498 = !DILocalVariable(name: "p", arg: 2, scope: !9493, file: !1465, line: 356, type: !110)
!9499 = !DILocation(line: 0, scope: !9493)
!9500 = !DILocation(line: 358, column: 2, scope: !9493)
!9501 = !DILocation(line: 384, column: 1, scope: !9493)
!9502 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1465, file: !1465, line: 250, type: !9447, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9503)
!9503 = !{!9504, !9505}
!9504 = !DILocalVariable(name: "dev", arg: 1, scope: !9502, file: !1465, line: 250, type: !1370)
!9505 = !DILocalVariable(name: "config", scope: !9502, file: !1465, line: 252, type: !9212)
!9506 = !DILocation(line: 0, scope: !9502)
!9507 = !DILocation(line: 252, column: 48, scope: !9502)
!9508 = !DILocation(line: 254, column: 40, scope: !9502)
!9509 = !DILocation(line: 254, column: 9, scope: !9502)
!9510 = !DILocation(line: 254, column: 2, scope: !9502)
!9511 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1465, file: !1465, line: 409, type: !9512, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9514)
!9512 = !DISubroutineType(types: !9513)
!9513 = !{!1356, !110}
!9514 = !{!9515}
!9515 = !DILocalVariable(name: "fc", arg: 1, scope: !9511, file: !1465, line: 409, type: !110)
!9516 = !DILocation(line: 0, scope: !9511)
!9517 = !DILocation(line: 411, column: 9, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9511, file: !1465, line: 411, column: 6)
!9519 = !DILocation(line: 416, column: 1, scope: !9511)
!9520 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !9521, file: !9521, line: 967, type: !9522, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9524)
!9521 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9522 = !DISubroutineType(types: !9523)
!9523 = !{!110, !1411}
!9524 = !{!9525}
!9525 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9520, file: !9521, line: 967, type: !1411)
!9526 = !DILocation(line: 0, scope: !9520)
!9527 = !DILocation(line: 969, column: 21, scope: !9520)
!9528 = !DILocation(line: 969, column: 3, scope: !9520)
!9529 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !9521, file: !9521, line: 601, type: !9522, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9530)
!9530 = !{!9531}
!9531 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9529, file: !9521, line: 601, type: !1411)
!9532 = !DILocation(line: 0, scope: !9529)
!9533 = !DILocation(line: 603, column: 21, scope: !9529)
!9534 = !DILocation(line: 603, column: 3, scope: !9529)
!9535 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !9521, file: !9521, line: 820, type: !9522, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9536)
!9536 = !{!9537}
!9537 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9535, file: !9521, line: 820, type: !1411)
!9538 = !DILocation(line: 0, scope: !9535)
!9539 = !DILocation(line: 822, column: 21, scope: !9535)
!9540 = !DILocation(line: 822, column: 3, scope: !9535)
!9541 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !9521, file: !9521, line: 547, type: !9522, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9542)
!9542 = !{!9543}
!9543 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9541, file: !9521, line: 547, type: !1411)
!9544 = !DILocation(line: 0, scope: !9541)
!9545 = !DILocation(line: 549, column: 21, scope: !9541)
!9546 = !DILocation(line: 549, column: 3, scope: !9541)
!9547 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1465, file: !1465, line: 257, type: !9548, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9550)
!9548 = !DISubroutineType(types: !9549)
!9549 = !{!110, !1336}
!9550 = !{!9551}
!9551 = !DILocalVariable(name: "parity", arg: 1, scope: !9547, file: !1465, line: 257, type: !1336)
!9552 = !DILocation(line: 0, scope: !9547)
!9553 = !DILocation(line: 259, column: 2, scope: !9547)
!9554 = !DILocation(line: 268, column: 1, scope: !9547)
!9555 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1465, file: !1465, line: 283, type: !9556, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9558)
!9556 = !DISubroutineType(types: !9557)
!9557 = !{!110, !1350}
!9558 = !{!9559}
!9559 = !DILocalVariable(name: "sb", arg: 1, scope: !9555, file: !1465, line: 283, type: !1350)
!9560 = !DILocation(line: 0, scope: !9555)
!9561 = !DILocation(line: 285, column: 2, scope: !9555)
!9562 = !DILocation(line: 0, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9555, file: !1465, line: 285, column: 14)
!9564 = !DILocation(line: 302, column: 1, scope: !9555)
!9565 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1465, file: !1465, line: 325, type: !9566, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9568)
!9566 = !DISubroutineType(types: !9567)
!9567 = !{!110, !1343, !1336}
!9568 = !{!9569, !9570}
!9569 = !DILocalVariable(name: "db", arg: 1, scope: !9565, file: !1465, line: 325, type: !1343)
!9570 = !DILocalVariable(name: "p", arg: 2, scope: !9565, file: !1465, line: 326, type: !1336)
!9571 = !DILocation(line: 0, scope: !9565)
!9572 = !DILocation(line: 328, column: 2, scope: !9565)
!9573 = !DILocation(line: 353, column: 1, scope: !9565)
!9574 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1465, file: !1465, line: 393, type: !9575, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9577)
!9575 = !DISubroutineType(types: !9576)
!9576 = !{!110, !1356}
!9577 = !{!9578}
!9578 = !DILocalVariable(name: "fc", arg: 1, scope: !9574, file: !1465, line: 393, type: !1356)
!9579 = !DILocation(line: 0, scope: !9574)
!9580 = !DILocation(line: 395, column: 9, scope: !9581)
!9581 = distinct !DILexicalBlock(scope: !9574, file: !1465, line: 395, column: 6)
!9582 = !DILocation(line: 400, column: 1, scope: !9574)
!9583 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !9521, file: !9521, line: 424, type: !9584, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9586)
!9584 = !DISubroutineType(types: !9585)
!9585 = !{null, !1411}
!9586 = !{!9587}
!9587 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9583, file: !9521, line: 424, type: !1411)
!9588 = !DILocation(line: 0, scope: !9583)
!9589 = !DILocation(line: 426, column: 3, scope: !9583)
!9590 = !DILocation(line: 427, column: 1, scope: !9583)
!9591 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1465, file: !1465, line: 197, type: !9592, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9594)
!9592 = !DISubroutineType(types: !9593)
!9593 = !{null, !1370, !110}
!9594 = !{!9595, !9596, !9597}
!9595 = !DILocalVariable(name: "dev", arg: 1, scope: !9591, file: !1465, line: 197, type: !1370)
!9596 = !DILocalVariable(name: "parity", arg: 2, scope: !9591, file: !1465, line: 198, type: !110)
!9597 = !DILocalVariable(name: "config", scope: !9591, file: !1465, line: 200, type: !9212)
!9598 = !DILocation(line: 0, scope: !9591)
!9599 = !DILocation(line: 200, column: 48, scope: !9591)
!9600 = !DILocation(line: 202, column: 29, scope: !9591)
!9601 = !DILocation(line: 202, column: 2, scope: !9591)
!9602 = !DILocation(line: 203, column: 1, scope: !9591)
!9603 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1465, file: !1465, line: 212, type: !9592, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9604)
!9604 = !{!9605, !9606, !9607}
!9605 = !DILocalVariable(name: "dev", arg: 1, scope: !9603, file: !1465, line: 212, type: !1370)
!9606 = !DILocalVariable(name: "stopbits", arg: 2, scope: !9603, file: !1465, line: 213, type: !110)
!9607 = !DILocalVariable(name: "config", scope: !9603, file: !1465, line: 215, type: !9212)
!9608 = !DILocation(line: 0, scope: !9603)
!9609 = !DILocation(line: 215, column: 48, scope: !9603)
!9610 = !DILocation(line: 217, column: 37, scope: !9603)
!9611 = !DILocation(line: 217, column: 2, scope: !9603)
!9612 = !DILocation(line: 218, column: 1, scope: !9603)
!9613 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1465, file: !1465, line: 227, type: !9592, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9614)
!9614 = !{!9615, !9616, !9617}
!9615 = !DILocalVariable(name: "dev", arg: 1, scope: !9613, file: !1465, line: 227, type: !1370)
!9616 = !DILocalVariable(name: "databits", arg: 2, scope: !9613, file: !1465, line: 228, type: !110)
!9617 = !DILocalVariable(name: "config", scope: !9613, file: !1465, line: 230, type: !9212)
!9618 = !DILocation(line: 0, scope: !9613)
!9619 = !DILocation(line: 230, column: 48, scope: !9613)
!9620 = !DILocation(line: 232, column: 32, scope: !9613)
!9621 = !DILocation(line: 232, column: 2, scope: !9613)
!9622 = !DILocation(line: 233, column: 1, scope: !9613)
!9623 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1465, file: !1465, line: 242, type: !9592, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9624)
!9624 = !{!9625, !9626, !9627}
!9625 = !DILocalVariable(name: "dev", arg: 1, scope: !9623, file: !1465, line: 242, type: !1370)
!9626 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !9623, file: !1465, line: 243, type: !110)
!9627 = !DILocalVariable(name: "config", scope: !9623, file: !1465, line: 245, type: !9212)
!9628 = !DILocation(line: 0, scope: !9623)
!9629 = !DILocation(line: 245, column: 48, scope: !9623)
!9630 = !DILocation(line: 247, column: 33, scope: !9623)
!9631 = !DILocation(line: 247, column: 2, scope: !9623)
!9632 = !DILocation(line: 248, column: 1, scope: !9623)
!9633 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1465, file: !1465, line: 107, type: !9592, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9634)
!9634 = !{!9635, !9636, !9637, !9638, !9639}
!9635 = !DILocalVariable(name: "dev", arg: 1, scope: !9633, file: !1465, line: 107, type: !1370)
!9636 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !9633, file: !1465, line: 107, type: !110)
!9637 = !DILocalVariable(name: "config", scope: !9633, file: !1465, line: 109, type: !9212)
!9638 = !DILocalVariable(name: "data", scope: !9633, file: !1465, line: 110, type: !9335)
!9639 = !DILocalVariable(name: "clock_rate", scope: !9633, file: !1465, line: 112, type: !110)
!9640 = !DILocation(line: 0, scope: !9633)
!9641 = !DILocation(line: 109, column: 48, scope: !9633)
!9642 = !DILocation(line: 110, column: 38, scope: !9633)
!9643 = !DILocation(line: 112, column: 2, scope: !9633)
!9644 = !DILocation(line: 123, column: 36, scope: !9645)
!9645 = distinct !DILexicalBlock(scope: !9646, file: !1465, line: 123, column: 7)
!9646 = distinct !DILexicalBlock(scope: !9647, file: !1465, line: 122, column: 9)
!9647 = distinct !DILexicalBlock(scope: !9633, file: !1465, line: 115, column: 6)
!9648 = !DILocation(line: 124, column: 42, scope: !9645)
!9649 = !DILocation(line: 123, column: 7, scope: !9645)
!9650 = !DILocation(line: 125, column: 22, scope: !9645)
!9651 = !DILocation(line: 123, column: 7, scope: !9646)
!9652 = !DILocation(line: 176, column: 36, scope: !9633)
!9653 = !DILocation(line: 176, column: 3, scope: !9633)
!9654 = !DILocation(line: 179, column: 32, scope: !9633)
!9655 = !DILocation(line: 180, column: 10, scope: !9633)
!9656 = !DILocation(line: 179, column: 3, scope: !9633)
!9657 = !DILocation(line: 189, column: 3, scope: !9658)
!9658 = distinct !DILexicalBlock(scope: !9659, file: !1465, line: 189, column: 3)
!9659 = distinct !DILexicalBlock(scope: !9633, file: !1465, line: 189, column: 3)
!9660 = !DILocation(line: 189, column: 3, scope: !9659)
!9661 = !DILocation(line: 189, column: 3, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9658, file: !1465, line: 189, column: 3)
!9663 = !DILocation(line: 195, column: 1, scope: !9633)
!9664 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !9521, file: !9521, line: 410, type: !9584, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9665)
!9665 = !{!9666}
!9666 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9664, file: !9521, line: 410, type: !1411)
!9667 = !DILocation(line: 0, scope: !9664)
!9668 = !DILocation(line: 412, column: 3, scope: !9664)
!9669 = !DILocation(line: 413, column: 1, scope: !9664)
!9670 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !826, file: !826, line: 216, type: !1444, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9671)
!9671 = !{!9672, !9673, !9674, !9675}
!9672 = !DILocalVariable(name: "dev", arg: 1, scope: !9670, file: !826, line: 216, type: !1370)
!9673 = !DILocalVariable(name: "sys", arg: 2, scope: !9670, file: !826, line: 217, type: !919)
!9674 = !DILocalVariable(name: "rate", arg: 3, scope: !9670, file: !826, line: 218, type: !875)
!9675 = !DILocalVariable(name: "api", scope: !9670, file: !826, line: 220, type: !1422)
!9676 = !DILocation(line: 0, scope: !9670)
!9677 = !DILocation(line: 221, column: 49, scope: !9670)
!9678 = !DILocation(line: 223, column: 11, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !9670, file: !826, line: 223, column: 6)
!9680 = !DILocation(line: 223, column: 20, scope: !9679)
!9681 = !DILocation(line: 223, column: 6, scope: !9670)
!9682 = !DILocation(line: 227, column: 9, scope: !9670)
!9683 = !DILocation(line: 227, column: 2, scope: !9670)
!9684 = !DILocation(line: 228, column: 1, scope: !9670)
!9685 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !9521, file: !9521, line: 615, type: !9686, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9688)
!9686 = !DISubroutineType(types: !9687)
!9687 = !{null, !1411, !110}
!9688 = !{!9689, !9690}
!9689 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9685, file: !9521, line: 615, type: !1411)
!9690 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !9685, file: !9521, line: 615, type: !110)
!9691 = !DILocation(line: 0, scope: !9685)
!9692 = !DILocation(line: 617, column: 3, scope: !9685)
!9693 = !DILocation(line: 618, column: 1, scope: !9685)
!9694 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !9521, file: !9521, line: 1020, type: !9695, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9697)
!9695 = !DISubroutineType(types: !9696)
!9696 = !{null, !1411, !110, !110, !110}
!9697 = !{!9698, !9699, !9700, !9701}
!9698 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9694, file: !9521, line: 1020, type: !1411)
!9699 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !9694, file: !9521, line: 1020, type: !110)
!9700 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !9694, file: !9521, line: 1020, type: !110)
!9701 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !9694, file: !9521, line: 1021, type: !110)
!9702 = !DILocation(line: 0, scope: !9694)
!9703 = !DILocation(line: 1029, column: 30, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9705, file: !9521, line: 1028, column: 3)
!9705 = distinct !DILexicalBlock(scope: !9694, file: !9521, line: 1023, column: 7)
!9706 = !DILocation(line: 1029, column: 19, scope: !9704)
!9707 = !DILocation(line: 1029, column: 13, scope: !9704)
!9708 = !DILocation(line: 1029, column: 17, scope: !9704)
!9709 = !DILocation(line: 1031, column: 1, scope: !9694)
!9710 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !9521, file: !9521, line: 949, type: !9686, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9711)
!9711 = !{!9712, !9713}
!9712 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9710, file: !9521, line: 949, type: !1411)
!9713 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !9710, file: !9521, line: 949, type: !110)
!9714 = !DILocation(line: 0, scope: !9710)
!9715 = !DILocation(line: 951, column: 3, scope: !9710)
!9716 = !DILocation(line: 952, column: 1, scope: !9710)
!9717 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !9521, file: !9521, line: 588, type: !9686, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9718)
!9718 = !{!9719, !9720}
!9719 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9717, file: !9521, line: 588, type: !1411)
!9720 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !9717, file: !9521, line: 588, type: !110)
!9721 = !DILocation(line: 0, scope: !9717)
!9722 = !DILocation(line: 590, column: 3, scope: !9717)
!9723 = !DILocation(line: 591, column: 1, scope: !9717)
!9724 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !9521, file: !9521, line: 805, type: !9686, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9725)
!9725 = !{!9726, !9727}
!9726 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9724, file: !9521, line: 805, type: !1411)
!9727 = !DILocalVariable(name: "StopBits", arg: 2, scope: !9724, file: !9521, line: 805, type: !110)
!9728 = !DILocation(line: 0, scope: !9724)
!9729 = !DILocation(line: 807, column: 3, scope: !9724)
!9730 = !DILocation(line: 808, column: 1, scope: !9724)
!9731 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !9521, file: !9521, line: 532, type: !9686, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9732)
!9732 = !{!9733, !9734}
!9733 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9731, file: !9521, line: 532, type: !1411)
!9734 = !DILocalVariable(name: "Parity", arg: 2, scope: !9731, file: !9521, line: 532, type: !110)
!9735 = !DILocation(line: 0, scope: !9731)
!9736 = !DILocation(line: 534, column: 3, scope: !9731)
!9737 = !DILocation(line: 535, column: 1, scope: !9731)
!9738 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !9521, file: !9521, line: 1770, type: !9522, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9739)
!9739 = !{!9740}
!9740 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9738, file: !9521, line: 1770, type: !1411)
!9741 = !DILocation(line: 0, scope: !9738)
!9742 = !DILocation(line: 1772, column: 11, scope: !9738)
!9743 = !DILocation(line: 1772, column: 46, scope: !9738)
!9744 = !DILocation(line: 1772, column: 3, scope: !9738)
!9745 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !9521, file: !9521, line: 1737, type: !9522, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9746)
!9746 = !{!9747}
!9747 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9745, file: !9521, line: 1737, type: !1411)
!9748 = !DILocation(line: 0, scope: !9745)
!9749 = !DILocation(line: 1739, column: 11, scope: !9745)
!9750 = !DILocation(line: 1739, column: 3, scope: !9745)
!9751 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !9521, file: !9521, line: 1748, type: !9522, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9752)
!9752 = !{!9753}
!9753 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9751, file: !9521, line: 1748, type: !1411)
!9754 = !DILocation(line: 0, scope: !9751)
!9755 = !DILocation(line: 1750, column: 11, scope: !9751)
!9756 = !DILocation(line: 1750, column: 45, scope: !9751)
!9757 = !DILocation(line: 1750, column: 3, scope: !9751)
!9758 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !9521, file: !9521, line: 1827, type: !9522, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9759)
!9759 = !{!9760}
!9760 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9758, file: !9521, line: 1827, type: !1411)
!9761 = !DILocation(line: 0, scope: !9758)
!9762 = !DILocation(line: 1829, column: 11, scope: !9758)
!9763 = !DILocation(line: 1829, column: 46, scope: !9758)
!9764 = !DILocation(line: 1829, column: 3, scope: !9758)
!9765 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !9521, file: !9521, line: 1992, type: !9584, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9766)
!9766 = !{!9767}
!9767 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9765, file: !9521, line: 1992, type: !1411)
!9768 = !DILocation(line: 0, scope: !9765)
!9769 = !DILocation(line: 1994, column: 3, scope: !9765)
!9770 = !DILocation(line: 1995, column: 1, scope: !9765)
!9771 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !9521, file: !9521, line: 1934, type: !9584, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9772)
!9772 = !{!9773, !9774}
!9773 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9771, file: !9521, line: 1934, type: !1411)
!9774 = !DILocalVariable(name: "tmpreg", scope: !9771, file: !9521, line: 1936, type: !301)
!9775 = !DILocation(line: 0, scope: !9771)
!9776 = !DILocation(line: 1936, column: 3, scope: !9771)
!9777 = !DILocation(line: 1936, column: 17, scope: !9771)
!9778 = !DILocation(line: 1937, column: 20, scope: !9771)
!9779 = !DILocation(line: 1937, column: 10, scope: !9771)
!9780 = !DILocation(line: 1938, column: 10, scope: !9771)
!9781 = !DILocation(line: 1939, column: 20, scope: !9771)
!9782 = !DILocation(line: 1939, column: 10, scope: !9771)
!9783 = !DILocation(line: 1940, column: 10, scope: !9771)
!9784 = !DILocation(line: 1941, column: 1, scope: !9771)
!9785 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !9521, file: !9521, line: 1877, type: !9584, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9786)
!9786 = !{!9787, !9788}
!9787 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9785, file: !9521, line: 1877, type: !1411)
!9788 = !DILocalVariable(name: "tmpreg", scope: !9785, file: !9521, line: 1879, type: !301)
!9789 = !DILocation(line: 0, scope: !9785)
!9790 = !DILocation(line: 1879, column: 3, scope: !9785)
!9791 = !DILocation(line: 1879, column: 17, scope: !9785)
!9792 = !DILocation(line: 1880, column: 20, scope: !9785)
!9793 = !DILocation(line: 1880, column: 10, scope: !9785)
!9794 = !DILocation(line: 1881, column: 10, scope: !9785)
!9795 = !DILocation(line: 1882, column: 20, scope: !9785)
!9796 = !DILocation(line: 1882, column: 10, scope: !9785)
!9797 = !DILocation(line: 1883, column: 10, scope: !9785)
!9798 = !DILocation(line: 1884, column: 1, scope: !9785)
!9799 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !9521, file: !9521, line: 1896, type: !9584, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9800)
!9800 = !{!9801, !9802}
!9801 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9799, file: !9521, line: 1896, type: !1411)
!9802 = !DILocalVariable(name: "tmpreg", scope: !9799, file: !9521, line: 1898, type: !301)
!9803 = !DILocation(line: 0, scope: !9799)
!9804 = !DILocation(line: 1898, column: 3, scope: !9799)
!9805 = !DILocation(line: 1898, column: 17, scope: !9799)
!9806 = !DILocation(line: 1899, column: 20, scope: !9799)
!9807 = !DILocation(line: 1899, column: 10, scope: !9799)
!9808 = !DILocation(line: 1900, column: 10, scope: !9799)
!9809 = !DILocation(line: 1901, column: 20, scope: !9799)
!9810 = !DILocation(line: 1901, column: 10, scope: !9799)
!9811 = !DILocation(line: 1902, column: 10, scope: !9799)
!9812 = !DILocation(line: 1903, column: 1, scope: !9799)
!9813 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !9521, file: !9521, line: 1915, type: !9584, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9814)
!9814 = !{!9815, !9816}
!9815 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9813, file: !9521, line: 1915, type: !1411)
!9816 = !DILocalVariable(name: "tmpreg", scope: !9813, file: !9521, line: 1917, type: !301)
!9817 = !DILocation(line: 0, scope: !9813)
!9818 = !DILocation(line: 1917, column: 3, scope: !9813)
!9819 = !DILocation(line: 1917, column: 17, scope: !9813)
!9820 = !DILocation(line: 1918, column: 20, scope: !9813)
!9821 = !DILocation(line: 1918, column: 10, scope: !9813)
!9822 = !DILocation(line: 1919, column: 10, scope: !9813)
!9823 = !DILocation(line: 1920, column: 20, scope: !9813)
!9824 = !DILocation(line: 1920, column: 10, scope: !9813)
!9825 = !DILocation(line: 1921, column: 10, scope: !9813)
!9826 = !DILocation(line: 1922, column: 1, scope: !9813)
!9827 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !9521, file: !9521, line: 1814, type: !9522, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9828)
!9828 = !{!9829}
!9829 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9827, file: !9521, line: 1814, type: !1411)
!9830 = !DILocation(line: 0, scope: !9827)
!9831 = !DILocation(line: 1816, column: 11, scope: !9827)
!9832 = !DILocation(line: 1816, column: 46, scope: !9827)
!9833 = !DILocation(line: 1816, column: 3, scope: !9827)
!9834 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !9521, file: !9521, line: 2426, type: !9835, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9837)
!9835 = !DISubroutineType(types: !9836)
!9836 = !{null, !1411, !167}
!9837 = !{!9838, !9839}
!9838 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9834, file: !9521, line: 2426, type: !1411)
!9839 = !DILocalVariable(name: "Value", arg: 2, scope: !9834, file: !9521, line: 2426, type: !167)
!9840 = !DILocation(line: 0, scope: !9834)
!9841 = !DILocation(line: 2428, column: 16, scope: !9834)
!9842 = !DILocation(line: 2428, column: 11, scope: !9834)
!9843 = !DILocation(line: 2428, column: 14, scope: !9834)
!9844 = !DILocation(line: 2429, column: 1, scope: !9834)
!9845 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !9521, file: !9521, line: 1792, type: !9522, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9846)
!9846 = !{!9847}
!9847 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9845, file: !9521, line: 1792, type: !1411)
!9848 = !DILocation(line: 0, scope: !9845)
!9849 = !DILocation(line: 1794, column: 11, scope: !9845)
!9850 = !DILocation(line: 1794, column: 47, scope: !9845)
!9851 = !DILocation(line: 1794, column: 3, scope: !9845)
!9852 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !9521, file: !9521, line: 2403, type: !9853, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9855)
!9853 = !DISubroutineType(types: !9854)
!9854 = !{!167, !1411}
!9855 = !{!9856}
!9856 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9852, file: !9521, line: 2403, type: !1411)
!9857 = !DILocation(line: 0, scope: !9852)
!9858 = !DILocation(line: 2405, column: 20, scope: !9852)
!9859 = !DILocation(line: 2405, column: 10, scope: !9852)
!9860 = !DILocation(line: 2405, column: 3, scope: !9852)
!9861 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1465, file: !1465, line: 1583, type: !1391, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9862)
!9862 = !{!9863, !9864, !9865, !9866, !9867, !9868}
!9863 = !DILocalVariable(name: "dev", arg: 1, scope: !9861, file: !1465, line: 1583, type: !1370)
!9864 = !DILocalVariable(name: "config", scope: !9861, file: !1465, line: 1585, type: !9212)
!9865 = !DILocalVariable(name: "data", scope: !9861, file: !1465, line: 1586, type: !9335)
!9866 = !DILocalVariable(name: "ll_parity", scope: !9861, file: !1465, line: 1587, type: !110)
!9867 = !DILocalVariable(name: "ll_datawidth", scope: !9861, file: !1465, line: 1588, type: !110)
!9868 = !DILocalVariable(name: "err", scope: !9861, file: !1465, line: 1589, type: !109)
!9869 = !DILocation(line: 0, scope: !9861)
!9870 = !DILocation(line: 1585, column: 48, scope: !9861)
!9871 = !DILocation(line: 1586, column: 38, scope: !9861)
!9872 = !DILocation(line: 1591, column: 2, scope: !9861)
!9873 = !DILocation(line: 1593, column: 29, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9861, file: !1465, line: 1593, column: 6)
!9875 = !DILocation(line: 1593, column: 7, scope: !9874)
!9876 = !DILocation(line: 1593, column: 6, scope: !9861)
!9877 = !DILocation(line: 1599, column: 31, scope: !9861)
!9878 = !DILocation(line: 1599, column: 71, scope: !9861)
!9879 = !DILocation(line: 1599, column: 8, scope: !9861)
!9880 = !DILocation(line: 1600, column: 10, scope: !9881)
!9881 = distinct !DILexicalBlock(scope: !9861, file: !1465, line: 1600, column: 6)
!9882 = !DILocation(line: 1600, column: 6, scope: !9861)
!9883 = !DILocation(line: 1616, column: 36, scope: !9861)
!9884 = !DILocation(line: 1616, column: 8, scope: !9861)
!9885 = !DILocation(line: 1617, column: 10, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9861, file: !1465, line: 1617, column: 6)
!9887 = !DILocation(line: 1617, column: 6, scope: !9861)
!9888 = !DILocation(line: 1621, column: 27, scope: !9861)
!9889 = !DILocation(line: 1621, column: 2, scope: !9861)
!9890 = !DILocation(line: 1624, column: 40, scope: !9861)
!9891 = !DILocation(line: 1624, column: 2, scope: !9861)
!9892 = !DILocation(line: 1630, column: 14, scope: !9893)
!9893 = distinct !DILexicalBlock(scope: !9861, file: !1465, line: 1630, column: 6)
!9894 = !DILocation(line: 1630, column: 6, scope: !9861)
!9895 = !DILocation(line: 1638, column: 2, scope: !9896)
!9896 = distinct !DILexicalBlock(scope: !9897, file: !1465, line: 1634, column: 34)
!9897 = distinct !DILexicalBlock(scope: !9893, file: !1465, line: 1634, column: 13)
!9898 = !DILocation(line: 0, scope: !9893)
!9899 = !DILocation(line: 1649, column: 35, scope: !9861)
!9900 = !DILocation(line: 1649, column: 2, scope: !9861)
!9901 = !DILocation(line: 1654, column: 14, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9861, file: !1465, line: 1654, column: 6)
!9903 = !DILocation(line: 1654, column: 6, scope: !9861)
!9904 = !DILocation(line: 1655, column: 3, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9902, file: !1465, line: 1654, column: 31)
!9906 = !DILocation(line: 1656, column: 2, scope: !9905)
!9907 = !DILocation(line: 1659, column: 37, scope: !9861)
!9908 = !DILocation(line: 1659, column: 2, scope: !9861)
!9909 = !DILocation(line: 1662, column: 14, scope: !9910)
!9910 = distinct !DILexicalBlock(scope: !9861, file: !1465, line: 1662, column: 6)
!9911 = !DILocation(line: 1662, column: 6, scope: !9861)
!9912 = !DILocation(line: 1663, column: 37, scope: !9913)
!9913 = distinct !DILexicalBlock(scope: !9910, file: !1465, line: 1662, column: 27)
!9914 = !DILocation(line: 1663, column: 3, scope: !9913)
!9915 = !DILocation(line: 1664, column: 2, scope: !9913)
!9916 = !DILocation(line: 1684, column: 26, scope: !9861)
!9917 = !DILocation(line: 1684, column: 2, scope: !9861)
!9918 = !DILocation(line: 1722, column: 2, scope: !9861)
!9919 = !DILocation(line: 1724, column: 1, scope: !9861)
!9920 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1465, file: !1465, line: 651, type: !9921, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9923)
!9921 = !DISubroutineType(types: !9922)
!9922 = !{null, !1370}
!9923 = !{!9924, !9925, !9926}
!9924 = !DILocalVariable(name: "dev", arg: 1, scope: !9920, file: !1465, line: 651, type: !1370)
!9925 = !DILocalVariable(name: "data", scope: !9920, file: !1465, line: 653, type: !9335)
!9926 = !DILocalVariable(name: "clk", scope: !9920, file: !1465, line: 654, type: !9927)
!9927 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1370)
!9928 = !DILocation(line: 0, scope: !9920)
!9929 = !DILocation(line: 653, column: 38, scope: !9920)
!9930 = !DILocation(line: 656, column: 8, scope: !9920)
!9931 = !DILocation(line: 656, column: 14, scope: !9920)
!9932 = !DILocation(line: 657, column: 1, scope: !9920)
!9933 = distinct !DISubprogram(name: "device_is_ready", scope: !8332, file: !8332, line: 47, type: !9934, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9936)
!9934 = !DISubroutineType(types: !9935)
!9935 = !{!334, !1370}
!9936 = !{!9937}
!9937 = !DILocalVariable(name: "dev", arg: 1, scope: !9933, file: !8332, line: 47, type: !1370)
!9938 = !DILocation(line: 0, scope: !9933)
!9939 = !DILocation(line: 55, column: 2, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !9933, file: !8332, line: 55, column: 2)
!9941 = !{i64 2155043980}
!9942 = !DILocation(line: 56, column: 9, scope: !9933)
!9943 = !DILocation(line: 56, column: 2, scope: !9933)
!9944 = distinct !DISubprogram(name: "clock_control_on", scope: !826, file: !826, line: 123, type: !1429, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9945)
!9945 = !{!9946, !9947, !9948}
!9946 = !DILocalVariable(name: "dev", arg: 1, scope: !9944, file: !826, line: 123, type: !1370)
!9947 = !DILocalVariable(name: "sys", arg: 2, scope: !9944, file: !826, line: 124, type: !919)
!9948 = !DILocalVariable(name: "api", scope: !9944, file: !826, line: 126, type: !1422)
!9949 = !DILocation(line: 0, scope: !9944)
!9950 = !DILocation(line: 127, column: 49, scope: !9944)
!9951 = !DILocation(line: 129, column: 14, scope: !9944)
!9952 = !DILocation(line: 129, column: 9, scope: !9944)
!9953 = !DILocation(line: 129, column: 2, scope: !9944)
!9954 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1492, file: !1492, line: 342, type: !9955, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9957)
!9955 = !DISubroutineType(types: !9956)
!9956 = !{!109, !1540, !167}
!9957 = !{!9958, !9959, !9960, !9961}
!9958 = !DILocalVariable(name: "config", arg: 1, scope: !9954, file: !1492, line: 342, type: !1540)
!9959 = !DILocalVariable(name: "id", arg: 2, scope: !9954, file: !1492, line: 343, type: !167)
!9960 = !DILocalVariable(name: "ret", scope: !9954, file: !1492, line: 345, type: !109)
!9961 = !DILocalVariable(name: "state", scope: !9954, file: !1492, line: 346, type: !1495)
!9962 = !DILocation(line: 0, scope: !9954)
!9963 = !DILocation(line: 346, column: 2, scope: !9954)
!9964 = !DILocation(line: 348, column: 8, scope: !9954)
!9965 = !DILocation(line: 349, column: 10, scope: !9966)
!9966 = distinct !DILexicalBlock(scope: !9954, file: !1492, line: 349, column: 6)
!9967 = !DILocation(line: 349, column: 6, scope: !9954)
!9968 = !DILocation(line: 353, column: 44, scope: !9954)
!9969 = !DILocation(line: 353, column: 9, scope: !9954)
!9970 = !DILocation(line: 353, column: 2, scope: !9954)
!9971 = !DILocation(line: 354, column: 1, scope: !9954)
!9972 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !9521, file: !9521, line: 497, type: !9686, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9973)
!9973 = !{!9974, !9975, !9976}
!9974 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9972, file: !9521, line: 497, type: !1411)
!9975 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !9972, file: !9521, line: 497, type: !110)
!9976 = !DILocalVariable(name: "val", scope: !9977, file: !9521, line: 499, type: !110)
!9977 = distinct !DILexicalBlock(scope: !9972, file: !9521, line: 499, column: 3)
!9978 = !DILocation(line: 0, scope: !9972)
!9979 = !DILocation(line: 499, column: 3, scope: !9977)
!9980 = !DILocalVariable(name: "addr", arg: 1, scope: !9981, file: !6179, line: 476, type: !1461)
!9981 = distinct !DISubprogram(name: "__LDREXW", scope: !6179, file: !6179, line: 476, type: !9982, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9984)
!9982 = !DISubroutineType(types: !9983)
!9983 = !{!110, !1461}
!9984 = !{!9980, !9985}
!9985 = !DILocalVariable(name: "result", scope: !9981, file: !6179, line: 478, type: !110)
!9986 = !DILocation(line: 0, scope: !9981, inlinedAt: !9987)
!9987 = distinct !DILocation(line: 499, column: 3, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9977, file: !9521, line: 499, column: 3)
!9989 = !DILocation(line: 480, column: 4, scope: !9981, inlinedAt: !9987)
!9990 = !{i64 3529960}
!9991 = !DILocation(line: 499, column: 3, scope: !9988)
!9992 = !DILocation(line: 0, scope: !9977)
!9993 = !DILocalVariable(name: "value", arg: 1, scope: !9994, file: !6179, line: 527, type: !110)
!9994 = distinct !DISubprogram(name: "__STREXW", scope: !6179, file: !6179, line: 527, type: !9995, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9997)
!9995 = !DISubroutineType(types: !9996)
!9996 = !{!110, !110, !1461}
!9997 = !{!9993, !9998, !9999}
!9998 = !DILocalVariable(name: "addr", arg: 2, scope: !9994, file: !6179, line: 527, type: !1461)
!9999 = !DILocalVariable(name: "result", scope: !9994, file: !6179, line: 529, type: !110)
!10000 = !DILocation(line: 0, scope: !9994, inlinedAt: !10001)
!10001 = distinct !DILocation(line: 499, column: 3, scope: !9977)
!10002 = !DILocation(line: 531, column: 4, scope: !9994, inlinedAt: !10001)
!10003 = !{i64 3531396}
!10004 = distinct !{!10004, !9979, !9979}
!10005 = !DILocation(line: 500, column: 1, scope: !9972)
!10006 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !9521, file: !9521, line: 850, type: !9695, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !10007)
!10007 = !{!10008, !10009, !10010, !10011}
!10008 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10006, file: !9521, line: 850, type: !1411)
!10009 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10006, file: !9521, line: 850, type: !110)
!10010 = !DILocalVariable(name: "Parity", arg: 3, scope: !10006, file: !9521, line: 850, type: !110)
!10011 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10006, file: !9521, line: 851, type: !110)
!10012 = !DILocation(line: 0, scope: !10006)
!10013 = !DILocation(line: 853, column: 3, scope: !10006)
!10014 = !DILocation(line: 854, column: 3, scope: !10006)
!10015 = !DILocation(line: 855, column: 1, scope: !10006)
!10016 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !9521, file: !9521, line: 1337, type: !9584, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !10017)
!10017 = !{!10018}
!10018 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10016, file: !9521, line: 1337, type: !1411)
!10019 = !DILocation(line: 0, scope: !10016)
!10020 = !DILocation(line: 1339, column: 3, scope: !10016)
!10021 = !DILocation(line: 1340, column: 1, scope: !10016)
!10022 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1492, file: !1492, line: 316, type: !10023, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !10025)
!10023 = !DISubroutineType(types: !10024)
!10024 = !{!109, !1540, !1495}
!10025 = !{!10026, !10027, !10028}
!10026 = !DILocalVariable(name: "config", arg: 1, scope: !10022, file: !1492, line: 317, type: !1540)
!10027 = !DILocalVariable(name: "state", arg: 2, scope: !10022, file: !1492, line: 318, type: !1495)
!10028 = !DILocalVariable(name: "reg", scope: !10022, file: !1492, line: 320, type: !22)
!10029 = !DILocation(line: 0, scope: !10022)
!10030 = !DILocation(line: 329, column: 39, scope: !10022)
!10031 = !DILocation(line: 329, column: 52, scope: !10022)
!10032 = !DILocation(line: 329, column: 9, scope: !10022)
!10033 = !DILocation(line: 329, column: 2, scope: !10022)
!10034 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !321, file: !321, line: 730, type: !9934, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !10035)
!10035 = !{!10036}
!10036 = !DILocalVariable(name: "dev", arg: 1, scope: !10034, file: !321, line: 730, type: !1370)
!10037 = !DILocation(line: 0, scope: !10034)
!10038 = !DILocation(line: 732, column: 9, scope: !10034)
!10039 = !DILocation(line: 732, column: 2, scope: !10034)
!10040 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1619, file: !1619, line: 270, type: !1625, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1543, retainedNodes: !10041)
!10041 = !{!10042}
!10042 = !DILocalVariable(name: "dev", arg: 1, scope: !10040, file: !1619, line: 270, type: !1627)
!10043 = !DILocation(line: 0, scope: !10040)
!10044 = !DILocation(line: 274, column: 2, scope: !10040)
!10045 = !DILocation(line: 275, column: 12, scope: !10040)
!10046 = !DILocation(line: 276, column: 15, scope: !10040)
!10047 = !DILocation(line: 277, column: 16, scope: !10040)
!10048 = !DILocation(line: 278, column: 15, scope: !10040)
!10049 = !DILocation(line: 279, column: 16, scope: !10040)
!10050 = !DILocation(line: 282, column: 2, scope: !10040)
!10051 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !536, file: !536, line: 1814, type: !6219, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1543, retainedNodes: !10052)
!10052 = !{!10053, !10054}
!10053 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10051, file: !536, line: 1814, type: !782)
!10054 = !DILocalVariable(name: "priority", arg: 2, scope: !10051, file: !536, line: 1814, type: !110)
!10055 = !DILocation(line: 0, scope: !10051)
!10056 = !DILocation(line: 1822, column: 46, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !10058, file: !536, line: 1821, column: 3)
!10058 = distinct !DILexicalBlock(scope: !10051, file: !536, line: 1816, column: 7)
!10059 = !DILocation(line: 1824, column: 1, scope: !10051)
!10060 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1619, file: !1619, line: 118, type: !6116, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1543, retainedNodes: !10061)
!10061 = !{!10062, !10063}
!10062 = !DILocalVariable(name: "arg", arg: 1, scope: !10060, file: !1619, line: 118, type: !108)
!10063 = !DILocalVariable(name: "dticks", scope: !10060, file: !1619, line: 121, type: !110)
!10064 = !DILocation(line: 0, scope: !10060)
!10065 = !DILocation(line: 124, column: 2, scope: !10060)
!10066 = !DILocation(line: 129, column: 17, scope: !10060)
!10067 = !DILocation(line: 129, column: 14, scope: !10060)
!10068 = !DILocation(line: 130, column: 15, scope: !10060)
!10069 = !DILocation(line: 145, column: 27, scope: !10070)
!10070 = distinct !DILexicalBlock(scope: !10071, file: !1619, line: 132, column: 16)
!10071 = distinct !DILexicalBlock(scope: !10060, file: !1619, line: 132, column: 6)
!10072 = !DILocation(line: 145, column: 25, scope: !10070)
!10073 = !DILocation(line: 145, column: 45, scope: !10070)
!10074 = !DILocation(line: 146, column: 30, scope: !10070)
!10075 = !DILocation(line: 146, column: 20, scope: !10070)
!10076 = !DILocation(line: 147, column: 3, scope: !10070)
!10077 = !DILocation(line: 151, column: 2, scope: !10060)
!10078 = !DILocation(line: 152, column: 1, scope: !10060)
!10079 = distinct !DISubprogram(name: "elapsed", scope: !1619, file: !1619, line: 85, type: !3385, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1543, retainedNodes: !10080)
!10080 = !{!10081, !10082, !10083}
!10081 = !DILocalVariable(name: "val1", scope: !10079, file: !1619, line: 87, type: !110)
!10082 = !DILocalVariable(name: "ctrl", scope: !10079, file: !1619, line: 88, type: !110)
!10083 = !DILocalVariable(name: "val2", scope: !10079, file: !1619, line: 89, type: !110)
!10084 = !DILocation(line: 87, column: 27, scope: !10079)
!10085 = !DILocation(line: 0, scope: !10079)
!10086 = !DILocation(line: 88, column: 27, scope: !10079)
!10087 = !DILocation(line: 89, column: 27, scope: !10079)
!10088 = !DILocation(line: 105, column: 12, scope: !10089)
!10089 = distinct !DILexicalBlock(scope: !10079, file: !1619, line: 105, column: 6)
!10090 = !DILocation(line: 106, column: 6, scope: !10089)
!10091 = !DILocation(line: 107, column: 16, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10089, file: !1619, line: 106, column: 24)
!10093 = !DILocation(line: 111, column: 18, scope: !10092)
!10094 = !DILocation(line: 112, column: 2, scope: !10092)
!10095 = !DILocation(line: 114, column: 20, scope: !10079)
!10096 = !DILocation(line: 114, column: 30, scope: !10079)
!10097 = !DILocation(line: 114, column: 28, scope: !10079)
!10098 = !DILocation(line: 114, column: 2, scope: !10079)
!10099 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1619, file: !1619, line: 154, type: !10100, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1543, retainedNodes: !10102)
!10100 = !DISubroutineType(types: !10101)
!10101 = !{null, !756, !334}
!10102 = !{!10103, !10104, !10105, !10106, !10107, !10108, !10109, !10114, !10115}
!10103 = !DILocalVariable(name: "ticks", arg: 1, scope: !10099, file: !1619, line: 154, type: !756)
!10104 = !DILocalVariable(name: "idle", arg: 2, scope: !10099, file: !1619, line: 154, type: !334)
!10105 = !DILocalVariable(name: "delay", scope: !10099, file: !1619, line: 169, type: !110)
!10106 = !DILocalVariable(name: "val1", scope: !10099, file: !1619, line: 170, type: !110)
!10107 = !DILocalVariable(name: "val2", scope: !10099, file: !1619, line: 170, type: !110)
!10108 = !DILocalVariable(name: "last_load_", scope: !10099, file: !1619, line: 171, type: !110)
!10109 = !DILocalVariable(name: "key", scope: !10099, file: !1619, line: 176, type: !10110)
!10110 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !254, line: 106, baseType: !10111)
!10111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !254, line: 32, size: 32, elements: !10112)
!10112 = !{!10113}
!10113 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10111, file: !254, line: 33, baseType: !109, size: 32)
!10114 = !DILocalVariable(name: "pending", scope: !10099, file: !1619, line: 178, type: !110)
!10115 = !DILocalVariable(name: "unannounced", scope: !10099, file: !1619, line: 185, type: !110)
!10116 = !DILocation(line: 0, scope: !10099)
!10117 = !DILocation(line: 162, column: 49, scope: !10118)
!10118 = distinct !DILexicalBlock(scope: !10099, file: !1619, line: 162, column: 6)
!10119 = !DILocation(line: 163, column: 17, scope: !10120)
!10120 = distinct !DILexicalBlock(scope: !10118, file: !1619, line: 162, column: 78)
!10121 = !DILocation(line: 164, column: 13, scope: !10120)
!10122 = !DILocation(line: 165, column: 3, scope: !10120)
!10123 = !DILocation(line: 171, column: 24, scope: !10099)
!10124 = !DILocation(line: 173, column: 10, scope: !10099)
!10125 = !DILocation(line: 174, column: 10, scope: !10099)
!10126 = !DILocalVariable(name: "l", arg: 1, scope: !10127, file: !254, line: 136, type: !10130)
!10127 = distinct !DISubprogram(name: "k_spin_lock", scope: !254, file: !254, line: 136, type: !10128, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1543, retainedNodes: !10131)
!10128 = !DISubroutineType(types: !10129)
!10129 = !{!10110, !10130}
!10130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 32)
!10131 = !{!10126, !10132}
!10132 = !DILocalVariable(name: "k", scope: !10127, file: !254, line: 139, type: !10110)
!10133 = !DILocation(line: 0, scope: !10127, inlinedAt: !10134)
!10134 = distinct !DILocation(line: 176, column: 25, scope: !10099)
!10135 = !DILocation(line: 55, column: 2, scope: !10136, inlinedAt: !10140)
!10136 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6005, file: !6005, line: 42, type: !6006, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1543, retainedNodes: !10137)
!10137 = !{!10138, !10139}
!10138 = !DILocalVariable(name: "key", scope: !10136, file: !6005, line: 44, type: !32)
!10139 = !DILocalVariable(name: "tmp", scope: !10136, file: !6005, line: 53, type: !32)
!10140 = distinct !DILocation(line: 145, column: 10, scope: !10127, inlinedAt: !10134)
!10141 = !{i64 2224047}
!10142 = !DILocation(line: 0, scope: !10136, inlinedAt: !10140)
!10143 = !DILocation(line: 148, column: 2, scope: !10144, inlinedAt: !10134)
!10144 = distinct !DILexicalBlock(scope: !10145, file: !254, line: 148, column: 2)
!10145 = distinct !DILexicalBlock(scope: !10127, file: !254, line: 148, column: 2)
!10146 = !DILocation(line: 148, column: 2, scope: !10145, inlinedAt: !10134)
!10147 = !DILocation(line: 148, column: 2, scope: !10148, inlinedAt: !10134)
!10148 = distinct !DILexicalBlock(scope: !10144, file: !254, line: 148, column: 2)
!10149 = !DILocation(line: 160, column: 2, scope: !10127, inlinedAt: !10134)
!10150 = !DILocation(line: 178, column: 21, scope: !10099)
!10151 = !DILocation(line: 180, column: 18, scope: !10099)
!10152 = !DILocation(line: 182, column: 14, scope: !10099)
!10153 = !DILocation(line: 183, column: 15, scope: !10099)
!10154 = !DILocation(line: 185, column: 39, scope: !10099)
!10155 = !DILocation(line: 185, column: 37, scope: !10099)
!10156 = !DILocation(line: 187, column: 27, scope: !10157)
!10157 = distinct !DILexicalBlock(scope: !10099, file: !1619, line: 187, column: 6)
!10158 = !DILocation(line: 187, column: 6, scope: !10099)
!10159 = !DILocation(line: 202, column: 27, scope: !10160)
!10160 = distinct !DILexicalBlock(scope: !10157, file: !1619, line: 195, column: 9)
!10161 = !DILocation(line: 202, column: 48, scope: !10160)
!10162 = !DILocation(line: 203, column: 9, scope: !10160)
!10163 = !DILocation(line: 204, column: 11, scope: !10160)
!10164 = !DILocation(line: 205, column: 13, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10160, file: !1619, line: 205, column: 7)
!10166 = !DILocation(line: 205, column: 7, scope: !10160)
!10167 = !DILocation(line: 0, scope: !10157)
!10168 = !DILocation(line: 212, column: 18, scope: !10099)
!10169 = !DILocation(line: 214, column: 28, scope: !10099)
!10170 = !DILocation(line: 214, column: 16, scope: !10099)
!10171 = !DILocation(line: 215, column: 15, scope: !10099)
!10172 = !DILocation(line: 227, column: 11, scope: !10173)
!10173 = distinct !DILexicalBlock(scope: !10099, file: !1619, line: 227, column: 6)
!10174 = !DILocation(line: 227, column: 6, scope: !10099)
!10175 = !DILocation(line: 228, column: 15, scope: !10176)
!10176 = distinct !DILexicalBlock(scope: !10173, file: !1619, line: 227, column: 19)
!10177 = !DILocation(line: 228, column: 38, scope: !10176)
!10178 = !DILocation(line: 228, column: 24, scope: !10176)
!10179 = !DILocation(line: 229, column: 2, scope: !10176)
!10180 = !DILocation(line: 230, column: 24, scope: !10181)
!10181 = distinct !DILexicalBlock(scope: !10173, file: !1619, line: 229, column: 9)
!10182 = !DILocation(line: 230, column: 15, scope: !10181)
!10183 = !DILocation(line: 0, scope: !10173)
!10184 = !DILocalVariable(name: "key", arg: 2, scope: !10185, file: !254, line: 190, type: !10110)
!10185 = distinct !DISubprogram(name: "k_spin_unlock", scope: !254, file: !254, line: 189, type: !10186, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1543, retainedNodes: !10188)
!10186 = !DISubroutineType(types: !10187)
!10187 = !{null, !10130, !10110}
!10188 = !{!10189, !10184}
!10189 = !DILocalVariable(name: "l", arg: 1, scope: !10185, file: !254, line: 189, type: !10130)
!10190 = !DILocation(line: 0, scope: !10185, inlinedAt: !10191)
!10191 = distinct !DILocation(line: 232, column: 2, scope: !10099)
!10192 = !DILocation(line: 194, column: 2, scope: !10193, inlinedAt: !10191)
!10193 = distinct !DILexicalBlock(scope: !10194, file: !254, line: 194, column: 2)
!10194 = distinct !DILexicalBlock(scope: !10185, file: !254, line: 194, column: 2)
!10195 = !DILocation(line: 194, column: 2, scope: !10194, inlinedAt: !10191)
!10196 = !DILocation(line: 194, column: 2, scope: !10197, inlinedAt: !10191)
!10197 = distinct !DILexicalBlock(scope: !10193, file: !254, line: 194, column: 2)
!10198 = !DILocalVariable(name: "key", arg: 1, scope: !10199, file: !6005, line: 84, type: !32)
!10199 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6005, file: !6005, line: 84, type: !6016, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1543, retainedNodes: !10200)
!10200 = !{!10198}
!10201 = !DILocation(line: 0, scope: !10199, inlinedAt: !10202)
!10202 = distinct !DILocation(line: 215, column: 2, scope: !10185, inlinedAt: !10191)
!10203 = !DILocation(line: 95, column: 2, scope: !10199, inlinedAt: !10202)
!10204 = !{i64 2224864}
!10205 = !DILocation(line: 234, column: 1, scope: !10099)
!10206 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1619, file: !1619, line: 236, type: !3385, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1543, retainedNodes: !10207)
!10207 = !{!10208, !10209}
!10208 = !DILocalVariable(name: "key", scope: !10206, file: !1619, line: 242, type: !10110)
!10209 = !DILocalVariable(name: "cyc", scope: !10206, file: !1619, line: 243, type: !110)
!10210 = !DILocation(line: 0, scope: !10127, inlinedAt: !10211)
!10211 = distinct !DILocation(line: 242, column: 25, scope: !10206)
!10212 = !DILocation(line: 55, column: 2, scope: !10136, inlinedAt: !10213)
!10213 = distinct !DILocation(line: 145, column: 10, scope: !10127, inlinedAt: !10211)
!10214 = !DILocation(line: 0, scope: !10136, inlinedAt: !10213)
!10215 = !DILocation(line: 148, column: 2, scope: !10144, inlinedAt: !10211)
!10216 = !DILocation(line: 148, column: 2, scope: !10145, inlinedAt: !10211)
!10217 = !DILocation(line: 148, column: 2, scope: !10148, inlinedAt: !10211)
!10218 = !DILocation(line: 160, column: 2, scope: !10127, inlinedAt: !10211)
!10219 = !DILocation(line: 0, scope: !10206)
!10220 = !DILocation(line: 243, column: 17, scope: !10206)
!10221 = !DILocation(line: 243, column: 29, scope: !10206)
!10222 = !DILocation(line: 243, column: 43, scope: !10206)
!10223 = !DILocation(line: 0, scope: !10185, inlinedAt: !10224)
!10224 = distinct !DILocation(line: 245, column: 2, scope: !10206)
!10225 = !DILocation(line: 194, column: 2, scope: !10193, inlinedAt: !10224)
!10226 = !DILocation(line: 194, column: 2, scope: !10194, inlinedAt: !10224)
!10227 = !DILocation(line: 194, column: 2, scope: !10197, inlinedAt: !10224)
!10228 = !DILocation(line: 243, column: 27, scope: !10206)
!10229 = !DILocation(line: 243, column: 41, scope: !10206)
!10230 = !DILocation(line: 0, scope: !10199, inlinedAt: !10231)
!10231 = distinct !DILocation(line: 215, column: 2, scope: !10185, inlinedAt: !10224)
!10232 = !DILocation(line: 95, column: 2, scope: !10199, inlinedAt: !10231)
!10233 = !DILocation(line: 246, column: 13, scope: !10206)
!10234 = !DILocation(line: 246, column: 2, scope: !10206)
!10235 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1619, file: !1619, line: 249, type: !3385, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1543, retainedNodes: !10236)
!10236 = !{!10237, !10238}
!10237 = !DILocalVariable(name: "key", scope: !10235, file: !1619, line: 251, type: !10110)
!10238 = !DILocalVariable(name: "ret", scope: !10235, file: !1619, line: 252, type: !110)
!10239 = !DILocation(line: 0, scope: !10127, inlinedAt: !10240)
!10240 = distinct !DILocation(line: 251, column: 25, scope: !10235)
!10241 = !DILocation(line: 55, column: 2, scope: !10136, inlinedAt: !10242)
!10242 = distinct !DILocation(line: 145, column: 10, scope: !10127, inlinedAt: !10240)
!10243 = !DILocation(line: 0, scope: !10136, inlinedAt: !10242)
!10244 = !DILocation(line: 148, column: 2, scope: !10144, inlinedAt: !10240)
!10245 = !DILocation(line: 148, column: 2, scope: !10145, inlinedAt: !10240)
!10246 = !DILocation(line: 148, column: 2, scope: !10148, inlinedAt: !10240)
!10247 = !DILocation(line: 160, column: 2, scope: !10127, inlinedAt: !10240)
!10248 = !DILocation(line: 0, scope: !10235)
!10249 = !DILocation(line: 252, column: 17, scope: !10235)
!10250 = !DILocation(line: 252, column: 29, scope: !10235)
!10251 = !DILocation(line: 0, scope: !10185, inlinedAt: !10252)
!10252 = distinct !DILocation(line: 254, column: 2, scope: !10235)
!10253 = !DILocation(line: 194, column: 2, scope: !10193, inlinedAt: !10252)
!10254 = !DILocation(line: 194, column: 2, scope: !10194, inlinedAt: !10252)
!10255 = !DILocation(line: 194, column: 2, scope: !10197, inlinedAt: !10252)
!10256 = !DILocation(line: 252, column: 27, scope: !10235)
!10257 = !DILocation(line: 0, scope: !10199, inlinedAt: !10258)
!10258 = distinct !DILocation(line: 215, column: 2, scope: !10185, inlinedAt: !10252)
!10259 = !DILocation(line: 95, column: 2, scope: !10199, inlinedAt: !10258)
!10260 = !DILocation(line: 255, column: 2, scope: !10235)
!10261 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1619, file: !1619, line: 258, type: !3103, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1543, retainedNodes: !2018)
!10262 = !DILocation(line: 260, column: 6, scope: !10263)
!10263 = distinct !DILexicalBlock(scope: !10261, file: !1619, line: 260, column: 6)
!10264 = !DILocation(line: 260, column: 16, scope: !10263)
!10265 = !DILocation(line: 260, column: 6, scope: !10261)
!10266 = !DILocation(line: 261, column: 17, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10263, file: !1619, line: 260, column: 34)
!10268 = !DILocation(line: 262, column: 2, scope: !10267)
!10269 = !DILocation(line: 263, column: 1, scope: !10261)
!10270 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1619, file: !1619, line: 265, type: !3103, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1543, retainedNodes: !2018)
!10271 = !DILocation(line: 267, column: 16, scope: !10270)
!10272 = !DILocation(line: 268, column: 1, scope: !10270)
!10273 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10274, file: !10274, line: 9, type: !10275, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !10298)
!10274 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10275 = !DISubroutineType(types: !10276)
!10276 = !{!109, !10277, !167, !10297}
!10277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10278, size: 32)
!10278 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10279)
!10279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1492, line: 60, size: 64, elements: !10280)
!10280 = !{!10281, !10296}
!10281 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10279, file: !1492, line: 69, baseType: !10282, size: 32)
!10282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10283, size: 32)
!10283 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10284)
!10284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1492, line: 50, size: 64, elements: !10285)
!10285 = !{!10286, !10294, !10295}
!10286 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10284, file: !1492, line: 52, baseType: !10287, size: 32)
!10287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10288, size: 32)
!10288 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10289)
!10289 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1503, line: 37, baseType: !10290)
!10290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1503, line: 32, size: 64, elements: !10291)
!10291 = !{!10292, !10293}
!10292 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10290, file: !1503, line: 34, baseType: !110, size: 32)
!10293 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10290, file: !1503, line: 36, baseType: !110, size: 32, offset: 32)
!10294 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10284, file: !1492, line: 54, baseType: !167, size: 8, offset: 32)
!10295 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10284, file: !1492, line: 56, baseType: !167, size: 8, offset: 40)
!10296 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10279, file: !1492, line: 71, baseType: !167, size: 8, offset: 32)
!10297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10282, size: 32)
!10298 = !{!10299, !10300, !10301}
!10299 = !DILocalVariable(name: "config", arg: 1, scope: !10273, file: !10274, line: 9, type: !10277)
!10300 = !DILocalVariable(name: "id", arg: 2, scope: !10273, file: !10274, line: 9, type: !167)
!10301 = !DILocalVariable(name: "state", arg: 3, scope: !10273, file: !10274, line: 10, type: !10297)
!10302 = !DILocation(line: 0, scope: !10273)
!10303 = !DILocation(line: 12, column: 20, scope: !10273)
!10304 = !DILocation(line: 13, column: 27, scope: !10273)
!10305 = !DILocation(line: 13, column: 42, scope: !10273)
!10306 = !DILocation(line: 13, column: 19, scope: !10273)
!10307 = !DILocation(line: 13, column: 16, scope: !10273)
!10308 = !DILocation(line: 13, column: 2, scope: !10273)
!10309 = distinct !{!10309, !10308, !10310}
!10310 = !DILocation(line: 19, column: 2, scope: !10273)
!10311 = !DILocation(line: 14, column: 23, scope: !10312)
!10312 = distinct !DILexicalBlock(scope: !10313, file: !10274, line: 14, column: 7)
!10313 = distinct !DILexicalBlock(scope: !10273, file: !10274, line: 13, column: 54)
!10314 = !DILocation(line: 14, column: 10, scope: !10312)
!10315 = !DILocation(line: 18, column: 11, scope: !10313)
!10316 = !DILocation(line: 14, column: 7, scope: !10313)
!10317 = !DILocation(line: 22, column: 1, scope: !10273)
!10318 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1738, file: !1738, line: 193, type: !10319, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1656, retainedNodes: !10328)
!10319 = !DISubroutineType(types: !10320)
!10320 = !{!109, !10321, !167, !22}
!10321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10322, size: 32)
!10322 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10323)
!10323 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1503, line: 37, baseType: !10324)
!10324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1503, line: 32, size: 64, elements: !10325)
!10325 = !{!10326, !10327}
!10326 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10324, file: !1503, line: 34, baseType: !110, size: 32)
!10327 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10324, file: !1503, line: 36, baseType: !110, size: 32, offset: 32)
!10328 = !{!10329, !10330, !10331, !10332, !10333, !10334, !10335, !10336, !10338}
!10329 = !DILocalVariable(name: "pins", arg: 1, scope: !10318, file: !1738, line: 193, type: !10321)
!10330 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10318, file: !1738, line: 193, type: !167)
!10331 = !DILocalVariable(name: "reg", arg: 3, scope: !10318, file: !1738, line: 194, type: !22)
!10332 = !DILocalVariable(name: "pin", scope: !10318, file: !1738, line: 196, type: !110)
!10333 = !DILocalVariable(name: "mux", scope: !10318, file: !1738, line: 196, type: !110)
!10334 = !DILocalVariable(name: "pin_cgf", scope: !10318, file: !1738, line: 197, type: !110)
!10335 = !DILocalVariable(name: "ret", scope: !10318, file: !1738, line: 198, type: !109)
!10336 = !DILocalVariable(name: "i", scope: !10337, file: !1738, line: 209, type: !167)
!10337 = distinct !DILexicalBlock(scope: !10318, file: !1738, line: 209, column: 2)
!10338 = !DILocalVariable(name: "gpio_out", scope: !10339, file: !1738, line: 239, type: !110)
!10339 = distinct !DILexicalBlock(scope: !10340, file: !1738, line: 238, column: 55)
!10340 = distinct !DILexicalBlock(scope: !10341, file: !1738, line: 238, column: 14)
!10341 = distinct !DILexicalBlock(scope: !10342, file: !1738, line: 236, column: 14)
!10342 = distinct !DILexicalBlock(scope: !10343, file: !1738, line: 234, column: 7)
!10343 = distinct !DILexicalBlock(scope: !10344, file: !1738, line: 209, column: 41)
!10344 = distinct !DILexicalBlock(scope: !10337, file: !1738, line: 209, column: 2)
!10345 = !DILocation(line: 0, scope: !10318)
!10346 = !DILocation(line: 0, scope: !10337)
!10347 = !DILocation(line: 209, column: 25, scope: !10344)
!10348 = !DILocation(line: 209, column: 2, scope: !10337)
!10349 = distinct !{!10349, !10348, !10350}
!10350 = !DILocation(line: 259, column: 2, scope: !10337)
!10351 = !DILocation(line: 210, column: 17, scope: !10343)
!10352 = !DILocation(line: 234, column: 7, scope: !10342)
!10353 = !DILocation(line: 234, column: 33, scope: !10342)
!10354 = !DILocation(line: 234, column: 7, scope: !10343)
!10355 = !DILocation(line: 235, column: 22, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !10342, file: !1738, line: 234, column: 49)
!10357 = !DILocation(line: 235, column: 29, scope: !10356)
!10358 = !DILocation(line: 236, column: 3, scope: !10356)
!10359 = !DILocation(line: 236, column: 14, scope: !10342)
!10360 = !DILocation(line: 239, column: 32, scope: !10339)
!10361 = !DILocation(line: 0, scope: !10339)
!10362 = !DILocation(line: 241, column: 8, scope: !10339)
!10363 = !DILocation(line: 246, column: 3, scope: !10339)
!10364 = !DILocation(line: 252, column: 9, scope: !10343)
!10365 = !DILocation(line: 255, column: 9, scope: !10343)
!10366 = !DILocation(line: 256, column: 11, scope: !10367)
!10367 = distinct !DILexicalBlock(scope: !10343, file: !1738, line: 256, column: 7)
!10368 = !DILocation(line: 209, column: 37, scope: !10344)
!10369 = !DILocation(line: 256, column: 7, scope: !10343)
!10370 = !DILocation(line: 262, column: 1, scope: !10318)
!10371 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1738, file: !1738, line: 176, type: !10372, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1656, retainedNodes: !10374)
!10372 = !DISubroutineType(types: !10373)
!10373 = !{!109, !110, !110, !110}
!10374 = !{!10375, !10376, !10377, !10378}
!10375 = !DILocalVariable(name: "pin", arg: 1, scope: !10371, file: !1738, line: 176, type: !110)
!10376 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !10371, file: !1738, line: 176, type: !110)
!10377 = !DILocalVariable(name: "pin_func", arg: 3, scope: !10371, file: !1738, line: 176, type: !110)
!10378 = !DILocalVariable(name: "port_device", scope: !10371, file: !1738, line: 178, type: !1668)
!10379 = !DILocation(line: 0, scope: !10371)
!10380 = !DILocation(line: 180, column: 22, scope: !10381)
!10381 = distinct !DILexicalBlock(scope: !10371, file: !1738, line: 180, column: 6)
!10382 = !DILocation(line: 180, column: 6, scope: !10371)
!10383 = !DILocation(line: 180, column: 6, scope: !10381)
!10384 = !DILocation(line: 184, column: 16, scope: !10371)
!10385 = !DILocation(line: 186, column: 19, scope: !10386)
!10386 = distinct !DILexicalBlock(scope: !10371, file: !1738, line: 186, column: 6)
!10387 = !DILocation(line: 186, column: 28, scope: !10386)
!10388 = !DILocation(line: 186, column: 33, scope: !10386)
!10389 = !DILocation(line: 186, column: 6, scope: !10371)
!10390 = !DILocation(line: 190, column: 43, scope: !10371)
!10391 = !DILocation(line: 190, column: 9, scope: !10371)
!10392 = !DILocation(line: 190, column: 2, scope: !10371)
!10393 = !DILocation(line: 191, column: 1, scope: !10371)
!10394 = distinct !DISubprogram(name: "device_is_ready", scope: !8332, file: !8332, line: 47, type: !10395, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1656, retainedNodes: !10397)
!10395 = !DISubroutineType(types: !10396)
!10396 = !{!334, !1668}
!10397 = !{!10398}
!10398 = !DILocalVariable(name: "dev", arg: 1, scope: !10394, file: !8332, line: 47, type: !1668)
!10399 = !DILocation(line: 0, scope: !10394)
!10400 = !DILocation(line: 55, column: 2, scope: !10401)
!10401 = distinct !DILexicalBlock(scope: !10394, file: !8332, line: 55, column: 2)
!10402 = !{i64 2149462117}
!10403 = !DILocation(line: 56, column: 9, scope: !10394)
!10404 = !DILocation(line: 56, column: 2, scope: !10394)
!10405 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !321, file: !321, line: 730, type: !10395, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1656, retainedNodes: !10406)
!10406 = !{!10407}
!10407 = !DILocalVariable(name: "dev", arg: 1, scope: !10405, file: !321, line: 730, type: !1668)
!10408 = !DILocation(line: 0, scope: !10405)
!10409 = !DILocation(line: 732, column: 9, scope: !10405)
!10410 = !DILocation(line: 732, column: 2, scope: !10405)
!10411 = distinct !DISubprogram(name: "SystemInit", scope: !1787, file: !1787, line: 167, type: !3103, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1746, retainedNodes: !2018)
!10412 = !DILocation(line: 182, column: 1, scope: !10411)
!10413 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1787, file: !1787, line: 220, type: !3103, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1746, retainedNodes: !10414)
!10414 = !{!10415, !10416, !10417, !10418, !10419}
!10415 = !DILocalVariable(name: "tmp", scope: !10413, file: !1787, line: 222, type: !110)
!10416 = !DILocalVariable(name: "pllvco", scope: !10413, file: !1787, line: 222, type: !110)
!10417 = !DILocalVariable(name: "pllp", scope: !10413, file: !1787, line: 222, type: !110)
!10418 = !DILocalVariable(name: "pllsource", scope: !10413, file: !1787, line: 222, type: !110)
!10419 = !DILocalVariable(name: "pllm", scope: !10413, file: !1787, line: 222, type: !110)
!10420 = !DILocation(line: 0, scope: !10413)
!10421 = !DILocation(line: 225, column: 14, scope: !10413)
!10422 = !DILocation(line: 225, column: 19, scope: !10413)
!10423 = !DILocation(line: 227, column: 3, scope: !10413)
!10424 = !DILocation(line: 240, column: 25, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10413, file: !1787, line: 228, column: 3)
!10426 = !DILocation(line: 241, column: 19, scope: !10425)
!10427 = !DILocation(line: 241, column: 27, scope: !10425)
!10428 = !DILocation(line: 0, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10425, file: !1787, line: 243, column: 11)
!10430 = !DILocation(line: 254, column: 22, scope: !10425)
!10431 = !DILocation(line: 254, column: 62, scope: !10425)
!10432 = !DILocation(line: 255, column: 31, scope: !10425)
!10433 = !DILocation(line: 256, column: 7, scope: !10425)
!10434 = !DILocation(line: 0, scope: !10425)
!10435 = !DILocation(line: 263, column: 30, scope: !10413)
!10436 = !DILocation(line: 263, column: 52, scope: !10413)
!10437 = !DILocation(line: 263, column: 9, scope: !10413)
!10438 = !DILocation(line: 265, column: 19, scope: !10413)
!10439 = !DILocation(line: 266, column: 1, scope: !10413)
!10440 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !10441, file: !10441, line: 200, type: !10442, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !2018)
!10441 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10442 = !DISubroutineType(types: !10443)
!10443 = !{!10444}
!10444 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2918, line: 44, baseType: !2917)
!10445 = !DILocation(line: 202, column: 3, scope: !10440)
!10446 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !10441, file: !10441, line: 219, type: !10447, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !10472)
!10447 = !DISubroutineType(types: !10448)
!10448 = !{!10444, !10449}
!10449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10450, size: 32)
!10450 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !10451, line: 70, baseType: !10452)
!10451 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10452 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10451, line: 49, size: 416, elements: !10453)
!10453 = !{!10454, !10455, !10456, !10457, !10458, !10459, !10460}
!10454 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !10452, file: !10451, line: 51, baseType: !110, size: 32)
!10455 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !10452, file: !10451, line: 54, baseType: !110, size: 32, offset: 32)
!10456 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !10452, file: !10451, line: 57, baseType: !110, size: 32, offset: 64)
!10457 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !10452, file: !10451, line: 60, baseType: !110, size: 32, offset: 96)
!10458 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !10452, file: !10451, line: 63, baseType: !110, size: 32, offset: 128)
!10459 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !10452, file: !10451, line: 66, baseType: !110, size: 32, offset: 160)
!10460 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !10452, file: !10451, line: 69, baseType: !10461, size: 224, offset: 192)
!10461 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !10462, line: 73, baseType: !10463)
!10462 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10463 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10462, line: 45, size: 224, elements: !10464)
!10464 = !{!10465, !10466, !10467, !10468, !10469, !10470, !10471}
!10465 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !10463, file: !10462, line: 47, baseType: !110, size: 32)
!10466 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !10463, file: !10462, line: 50, baseType: !110, size: 32, offset: 32)
!10467 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !10463, file: !10462, line: 53, baseType: !110, size: 32, offset: 64)
!10468 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !10463, file: !10462, line: 56, baseType: !110, size: 32, offset: 96)
!10469 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !10463, file: !10462, line: 60, baseType: !110, size: 32, offset: 128)
!10470 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !10463, file: !10462, line: 63, baseType: !110, size: 32, offset: 160)
!10471 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !10463, file: !10462, line: 68, baseType: !110, size: 32, offset: 192)
!10472 = !{!10473, !10474, !10475, !10476, !10480}
!10473 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !10446, file: !10441, line: 219, type: !10449)
!10474 = !DILocalVariable(name: "tickstart", scope: !10446, file: !10441, line: 221, type: !110)
!10475 = !DILocalVariable(name: "pll_config", scope: !10446, file: !10441, line: 221, type: !110)
!10476 = !DILocalVariable(name: "pwrclkchanged", scope: !10477, file: !10441, line: 391, type: !10479)
!10477 = distinct !DILexicalBlock(scope: !10478, file: !10441, line: 390, column: 3)
!10478 = distinct !DILexicalBlock(scope: !10446, file: !10441, line: 389, column: 6)
!10479 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !821, line: 188, baseType: !2924)
!10480 = !DILocalVariable(name: "tmpreg", scope: !10481, file: !10441, line: 400, type: !301)
!10481 = distinct !DILexicalBlock(scope: !10482, file: !10441, line: 400, column: 7)
!10482 = distinct !DILexicalBlock(scope: !10483, file: !10441, line: 399, column: 5)
!10483 = distinct !DILexicalBlock(scope: !10477, file: !10441, line: 398, column: 8)
!10484 = !DILocation(line: 0, scope: !10446)
!10485 = !DILocation(line: 224, column: 24, scope: !10486)
!10486 = distinct !DILexicalBlock(scope: !10446, file: !10441, line: 224, column: 6)
!10487 = !DILocation(line: 224, column: 6, scope: !10446)
!10488 = !DILocation(line: 232, column: 27, scope: !10489)
!10489 = distinct !DILexicalBlock(scope: !10446, file: !10441, line: 232, column: 6)
!10490 = !DILocation(line: 232, column: 43, scope: !10489)
!10491 = !DILocation(line: 232, column: 69, scope: !10489)
!10492 = !DILocation(line: 232, column: 6, scope: !10446)
!10493 = !DILocation(line: 237, column: 9, scope: !10494)
!10494 = distinct !DILexicalBlock(scope: !10495, file: !10441, line: 237, column: 8)
!10495 = distinct !DILexicalBlock(scope: !10489, file: !10441, line: 233, column: 3)
!10496 = !DILocation(line: 237, column: 39, scope: !10494)
!10497 = !DILocation(line: 237, column: 60, scope: !10494)
!10498 = !DILocation(line: 238, column: 9, scope: !10494)
!10499 = !DILocation(line: 238, column: 39, scope: !10494)
!10500 = !DILocation(line: 238, column: 60, scope: !10494)
!10501 = !DILocation(line: 238, column: 70, scope: !10494)
!10502 = !DILocation(line: 238, column: 78, scope: !10494)
!10503 = !DILocation(line: 238, column: 100, scope: !10494)
!10504 = !DILocation(line: 237, column: 8, scope: !10495)
!10505 = !DILocation(line: 240, column: 11, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !10507, file: !10441, line: 240, column: 10)
!10507 = distinct !DILexicalBlock(scope: !10494, file: !10441, line: 239, column: 5)
!10508 = !DILocation(line: 240, column: 57, scope: !10506)
!10509 = !DILocation(line: 240, column: 80, scope: !10506)
!10510 = !DILocation(line: 240, column: 89, scope: !10506)
!10511 = !DILocation(line: 240, column: 10, scope: !10507)
!10512 = !DILocation(line: 248, column: 7, scope: !10513)
!10513 = distinct !DILexicalBlock(scope: !10514, file: !10441, line: 248, column: 7)
!10514 = distinct !DILexicalBlock(scope: !10515, file: !10441, line: 248, column: 7)
!10515 = distinct !DILexicalBlock(scope: !10494, file: !10441, line: 246, column: 5)
!10516 = !DILocation(line: 248, column: 7, scope: !10514)
!10517 = !DILocation(line: 248, column: 7, scope: !10518)
!10518 = distinct !DILexicalBlock(scope: !10513, file: !10441, line: 248, column: 7)
!10519 = !DILocation(line: 248, column: 7, scope: !10520)
!10520 = distinct !DILexicalBlock(scope: !10521, file: !10441, line: 248, column: 7)
!10521 = distinct !DILexicalBlock(scope: !10513, file: !10441, line: 248, column: 7)
!10522 = !DILocation(line: 248, column: 7, scope: !10523)
!10523 = distinct !DILexicalBlock(scope: !10521, file: !10441, line: 248, column: 7)
!10524 = !DILocation(line: 0, scope: !10513)
!10525 = !DILocation(line: 251, column: 30, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10515, file: !10441, line: 251, column: 10)
!10527 = !DILocation(line: 251, column: 40, scope: !10526)
!10528 = !DILocation(line: 0, scope: !10526)
!10529 = !DILocation(line: 251, column: 10, scope: !10515)
!10530 = !DILocation(line: 257, column: 15, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10526, file: !10441, line: 252, column: 7)
!10532 = !DILocation(line: 257, column: 51, scope: !10531)
!10533 = !DILocation(line: 257, column: 9, scope: !10531)
!10534 = !DILocation(line: 259, column: 15, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !10536, file: !10441, line: 259, column: 14)
!10536 = distinct !DILexicalBlock(scope: !10531, file: !10441, line: 258, column: 9)
!10537 = !DILocation(line: 259, column: 29, scope: !10535)
!10538 = !DILocation(line: 259, column: 43, scope: !10535)
!10539 = !DILocation(line: 259, column: 14, scope: !10536)
!10540 = distinct !{!10540, !10533, !10541}
!10541 = !DILocation(line: 263, column: 9, scope: !10531)
!10542 = !DILocation(line: 271, column: 15, scope: !10543)
!10543 = distinct !DILexicalBlock(scope: !10526, file: !10441, line: 266, column: 7)
!10544 = !DILocation(line: 271, column: 9, scope: !10543)
!10545 = !DILocation(line: 273, column: 15, scope: !10546)
!10546 = distinct !DILexicalBlock(scope: !10547, file: !10441, line: 273, column: 14)
!10547 = distinct !DILexicalBlock(scope: !10543, file: !10441, line: 272, column: 9)
!10548 = !DILocation(line: 273, column: 29, scope: !10546)
!10549 = !DILocation(line: 273, column: 43, scope: !10546)
!10550 = !DILocation(line: 273, column: 14, scope: !10547)
!10551 = distinct !{!10551, !10544, !10552}
!10552 = !DILocation(line: 277, column: 9, scope: !10543)
!10553 = !DILocation(line: 282, column: 27, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !10446, file: !10441, line: 282, column: 6)
!10555 = !DILocation(line: 282, column: 43, scope: !10554)
!10556 = !DILocation(line: 282, column: 69, scope: !10554)
!10557 = !DILocation(line: 282, column: 6, scope: !10446)
!10558 = !DILocation(line: 289, column: 9, scope: !10559)
!10559 = distinct !DILexicalBlock(scope: !10560, file: !10441, line: 289, column: 8)
!10560 = distinct !DILexicalBlock(scope: !10554, file: !10441, line: 283, column: 3)
!10561 = !DILocation(line: 289, column: 39, scope: !10559)
!10562 = !DILocation(line: 289, column: 60, scope: !10559)
!10563 = !DILocation(line: 290, column: 9, scope: !10559)
!10564 = !DILocation(line: 290, column: 39, scope: !10559)
!10565 = !DILocation(line: 290, column: 60, scope: !10559)
!10566 = !DILocation(line: 290, column: 70, scope: !10559)
!10567 = !DILocation(line: 290, column: 78, scope: !10559)
!10568 = !DILocation(line: 290, column: 100, scope: !10559)
!10569 = !DILocation(line: 289, column: 8, scope: !10560)
!10570 = !DILocation(line: 293, column: 11, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10572, file: !10441, line: 293, column: 10)
!10572 = distinct !DILexicalBlock(scope: !10559, file: !10441, line: 291, column: 5)
!10573 = !DILocation(line: 293, column: 57, scope: !10571)
!10574 = !DILocation(line: 293, column: 80, scope: !10571)
!10575 = !DILocation(line: 293, column: 89, scope: !10571)
!10576 = !DILocation(line: 293, column: 10, scope: !10572)
!10577 = !DILocation(line: 307, column: 30, scope: !10578)
!10578 = distinct !DILexicalBlock(scope: !10579, file: !10441, line: 307, column: 10)
!10579 = distinct !DILexicalBlock(scope: !10559, file: !10441, line: 305, column: 5)
!10580 = !DILocation(line: 307, column: 39, scope: !10578)
!10581 = !DILocation(line: 307, column: 10, scope: !10579)
!10582 = !DILocation(line: 310, column: 9, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10578, file: !10441, line: 308, column: 7)
!10584 = !DILocation(line: 313, column: 21, scope: !10583)
!10585 = !DILocation(line: 316, column: 9, scope: !10583)
!10586 = !DILocation(line: 316, column: 15, scope: !10583)
!10587 = !DILocation(line: 316, column: 51, scope: !10583)
!10588 = !DILocation(line: 318, column: 15, scope: !10589)
!10589 = distinct !DILexicalBlock(scope: !10590, file: !10441, line: 318, column: 14)
!10590 = distinct !DILexicalBlock(scope: !10583, file: !10441, line: 317, column: 9)
!10591 = !DILocation(line: 318, column: 29, scope: !10589)
!10592 = !DILocation(line: 318, column: 43, scope: !10589)
!10593 = !DILocation(line: 318, column: 14, scope: !10590)
!10594 = distinct !{!10594, !10585, !10595}
!10595 = !DILocation(line: 322, column: 9, scope: !10583)
!10596 = !DILocation(line: 330, column: 9, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10578, file: !10441, line: 328, column: 7)
!10598 = !DILocation(line: 333, column: 21, scope: !10597)
!10599 = !DILocation(line: 336, column: 9, scope: !10597)
!10600 = !DILocation(line: 336, column: 15, scope: !10597)
!10601 = !DILocation(line: 338, column: 15, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10603, file: !10441, line: 338, column: 14)
!10603 = distinct !DILexicalBlock(scope: !10597, file: !10441, line: 337, column: 9)
!10604 = !DILocation(line: 338, column: 29, scope: !10602)
!10605 = !DILocation(line: 338, column: 43, scope: !10602)
!10606 = !DILocation(line: 338, column: 14, scope: !10603)
!10607 = distinct !{!10607, !10599, !10608}
!10608 = !DILocation(line: 342, column: 9, scope: !10597)
!10609 = !DILocation(line: 0, scope: !10559)
!10610 = !DILocation(line: 347, column: 27, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10446, file: !10441, line: 347, column: 6)
!10612 = !DILocation(line: 347, column: 43, scope: !10611)
!10613 = !DILocation(line: 347, column: 69, scope: !10611)
!10614 = !DILocation(line: 347, column: 6, scope: !10446)
!10615 = !DILocation(line: 353, column: 28, scope: !10616)
!10616 = distinct !DILexicalBlock(scope: !10617, file: !10441, line: 353, column: 8)
!10617 = distinct !DILexicalBlock(scope: !10611, file: !10441, line: 348, column: 3)
!10618 = !DILocation(line: 353, column: 37, scope: !10616)
!10619 = !DILocation(line: 353, column: 8, scope: !10617)
!10620 = !DILocation(line: 356, column: 7, scope: !10621)
!10621 = distinct !DILexicalBlock(scope: !10616, file: !10441, line: 354, column: 5)
!10622 = !DILocation(line: 359, column: 19, scope: !10621)
!10623 = !DILocation(line: 362, column: 7, scope: !10621)
!10624 = !DILocation(line: 362, column: 13, scope: !10621)
!10625 = !DILocation(line: 362, column: 49, scope: !10621)
!10626 = !DILocation(line: 364, column: 13, scope: !10627)
!10627 = distinct !DILexicalBlock(scope: !10628, file: !10441, line: 364, column: 12)
!10628 = distinct !DILexicalBlock(scope: !10621, file: !10441, line: 363, column: 7)
!10629 = !DILocation(line: 364, column: 27, scope: !10627)
!10630 = !DILocation(line: 364, column: 41, scope: !10627)
!10631 = !DILocation(line: 364, column: 12, scope: !10628)
!10632 = distinct !{!10632, !10623, !10633}
!10633 = !DILocation(line: 368, column: 7, scope: !10621)
!10634 = !DILocation(line: 373, column: 7, scope: !10635)
!10635 = distinct !DILexicalBlock(scope: !10616, file: !10441, line: 371, column: 5)
!10636 = !DILocation(line: 376, column: 19, scope: !10635)
!10637 = !DILocation(line: 379, column: 7, scope: !10635)
!10638 = !DILocation(line: 379, column: 13, scope: !10635)
!10639 = !DILocation(line: 381, column: 13, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10641, file: !10441, line: 381, column: 12)
!10641 = distinct !DILexicalBlock(scope: !10635, file: !10441, line: 380, column: 7)
!10642 = !DILocation(line: 381, column: 27, scope: !10640)
!10643 = !DILocation(line: 381, column: 41, scope: !10640)
!10644 = !DILocation(line: 381, column: 12, scope: !10641)
!10645 = distinct !{!10645, !10637, !10646}
!10646 = !DILocation(line: 385, column: 7, scope: !10635)
!10647 = !DILocation(line: 389, column: 27, scope: !10478)
!10648 = !DILocation(line: 389, column: 43, scope: !10478)
!10649 = !DILocation(line: 389, column: 69, scope: !10478)
!10650 = !DILocation(line: 389, column: 6, scope: !10446)
!10651 = !DILocation(line: 0, scope: !10477)
!10652 = !DILocation(line: 398, column: 8, scope: !10483)
!10653 = !DILocation(line: 398, column: 8, scope: !10477)
!10654 = !DILocation(line: 400, column: 7, scope: !10481)
!10655 = !DILocation(line: 400, column: 7, scope: !10482)
!10656 = !DILocation(line: 402, column: 5, scope: !10482)
!10657 = !DILocation(line: 404, column: 8, scope: !10658)
!10658 = distinct !DILexicalBlock(scope: !10477, file: !10441, line: 404, column: 8)
!10659 = !DILocation(line: 404, column: 8, scope: !10477)
!10660 = !DILocation(line: 407, column: 7, scope: !10661)
!10661 = distinct !DILexicalBlock(scope: !10658, file: !10441, line: 405, column: 5)
!10662 = !DILocation(line: 410, column: 19, scope: !10661)
!10663 = !DILocation(line: 412, column: 7, scope: !10661)
!10664 = !DILocation(line: 412, column: 13, scope: !10661)
!10665 = !DILocation(line: 414, column: 13, scope: !10666)
!10666 = distinct !DILexicalBlock(scope: !10667, file: !10441, line: 414, column: 12)
!10667 = distinct !DILexicalBlock(scope: !10661, file: !10441, line: 413, column: 7)
!10668 = !DILocation(line: 414, column: 27, scope: !10666)
!10669 = !DILocation(line: 414, column: 40, scope: !10666)
!10670 = !DILocation(line: 414, column: 12, scope: !10667)
!10671 = distinct !{!10671, !10663, !10672}
!10672 = !DILocation(line: 418, column: 7, scope: !10661)
!10673 = !DILocation(line: 422, column: 5, scope: !10674)
!10674 = distinct !DILexicalBlock(scope: !10675, file: !10441, line: 422, column: 5)
!10675 = distinct !DILexicalBlock(scope: !10477, file: !10441, line: 422, column: 5)
!10676 = !DILocation(line: 422, column: 5, scope: !10675)
!10677 = !DILocation(line: 422, column: 5, scope: !10678)
!10678 = distinct !DILexicalBlock(scope: !10674, file: !10441, line: 422, column: 5)
!10679 = !DILocation(line: 422, column: 5, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10681, file: !10441, line: 422, column: 5)
!10681 = distinct !DILexicalBlock(scope: !10674, file: !10441, line: 422, column: 5)
!10682 = !DILocation(line: 422, column: 5, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10681, file: !10441, line: 422, column: 5)
!10684 = !DILocation(line: 0, scope: !10674)
!10685 = !DILocation(line: 424, column: 28, scope: !10686)
!10686 = distinct !DILexicalBlock(scope: !10477, file: !10441, line: 424, column: 8)
!10687 = !DILocation(line: 424, column: 38, scope: !10686)
!10688 = !DILocation(line: 0, scope: !10686)
!10689 = !DILocation(line: 424, column: 8, scope: !10477)
!10690 = !DILocation(line: 430, column: 13, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10686, file: !10441, line: 425, column: 5)
!10692 = !DILocation(line: 430, column: 49, scope: !10691)
!10693 = !DILocation(line: 430, column: 7, scope: !10691)
!10694 = !DILocation(line: 432, column: 13, scope: !10695)
!10695 = distinct !DILexicalBlock(scope: !10696, file: !10441, line: 432, column: 12)
!10696 = distinct !DILexicalBlock(scope: !10691, file: !10441, line: 431, column: 7)
!10697 = !DILocation(line: 432, column: 27, scope: !10695)
!10698 = !DILocation(line: 432, column: 41, scope: !10695)
!10699 = !DILocation(line: 432, column: 12, scope: !10696)
!10700 = distinct !{!10700, !10693, !10701}
!10701 = !DILocation(line: 436, column: 7, scope: !10691)
!10702 = !DILocation(line: 444, column: 13, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10686, file: !10441, line: 439, column: 5)
!10704 = !DILocation(line: 444, column: 7, scope: !10703)
!10705 = !DILocation(line: 446, column: 13, scope: !10706)
!10706 = distinct !DILexicalBlock(scope: !10707, file: !10441, line: 446, column: 12)
!10707 = distinct !DILexicalBlock(scope: !10703, file: !10441, line: 445, column: 7)
!10708 = !DILocation(line: 446, column: 27, scope: !10706)
!10709 = !DILocation(line: 446, column: 41, scope: !10706)
!10710 = !DILocation(line: 446, column: 12, scope: !10707)
!10711 = distinct !{!10711, !10704, !10712}
!10712 = !DILocation(line: 450, column: 7, scope: !10703)
!10713 = !DILocation(line: 454, column: 8, scope: !10477)
!10714 = !DILocation(line: 456, column: 7, scope: !10715)
!10715 = distinct !DILexicalBlock(scope: !10716, file: !10441, line: 455, column: 5)
!10716 = distinct !DILexicalBlock(scope: !10477, file: !10441, line: 454, column: 8)
!10717 = !DILocation(line: 457, column: 5, scope: !10715)
!10718 = !DILocation(line: 462, column: 31, scope: !10719)
!10719 = distinct !DILexicalBlock(scope: !10446, file: !10441, line: 462, column: 7)
!10720 = !DILocation(line: 462, column: 41, scope: !10719)
!10721 = !DILocation(line: 462, column: 7, scope: !10446)
!10722 = !DILocation(line: 465, column: 8, scope: !10723)
!10723 = distinct !DILexicalBlock(scope: !10724, file: !10441, line: 465, column: 8)
!10724 = distinct !DILexicalBlock(scope: !10719, file: !10441, line: 463, column: 3)
!10725 = !DILocation(line: 465, column: 38, scope: !10723)
!10726 = !DILocation(line: 465, column: 8, scope: !10724)
!10727 = !DILocation(line: 467, column: 44, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10729, file: !10441, line: 467, column: 10)
!10729 = distinct !DILexicalBlock(scope: !10723, file: !10441, line: 466, column: 5)
!10730 = !DILocation(line: 0, scope: !10728)
!10731 = !DILocation(line: 467, column: 10, scope: !10729)
!10732 = !DILocation(line: 483, column: 15, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !10728, file: !10441, line: 468, column: 7)
!10734 = !DILocation(line: 483, column: 9, scope: !10733)
!10735 = !DILocation(line: 485, column: 15, scope: !10736)
!10736 = distinct !DILexicalBlock(scope: !10737, file: !10441, line: 485, column: 14)
!10737 = distinct !DILexicalBlock(scope: !10733, file: !10441, line: 484, column: 9)
!10738 = !DILocation(line: 485, column: 29, scope: !10736)
!10739 = !DILocation(line: 485, column: 43, scope: !10736)
!10740 = !DILocation(line: 485, column: 14, scope: !10737)
!10741 = distinct !{!10741, !10734, !10742}
!10742 = !DILocation(line: 489, column: 9, scope: !10733)
!10743 = !DILocation(line: 492, column: 9, scope: !10733)
!10744 = !DILocation(line: 498, column: 9, scope: !10733)
!10745 = !DILocation(line: 501, column: 21, scope: !10733)
!10746 = !DILocation(line: 504, column: 9, scope: !10733)
!10747 = !DILocation(line: 504, column: 15, scope: !10733)
!10748 = !DILocation(line: 504, column: 51, scope: !10733)
!10749 = !DILocation(line: 506, column: 15, scope: !10750)
!10750 = distinct !DILexicalBlock(scope: !10751, file: !10441, line: 506, column: 14)
!10751 = distinct !DILexicalBlock(scope: !10733, file: !10441, line: 505, column: 9)
!10752 = !DILocation(line: 506, column: 29, scope: !10750)
!10753 = !DILocation(line: 506, column: 43, scope: !10750)
!10754 = !DILocation(line: 506, column: 14, scope: !10751)
!10755 = distinct !{!10755, !10746, !10756}
!10756 = !DILocation(line: 510, column: 9, scope: !10733)
!10757 = !DILocation(line: 521, column: 15, scope: !10758)
!10758 = distinct !DILexicalBlock(scope: !10728, file: !10441, line: 513, column: 7)
!10759 = !DILocation(line: 521, column: 9, scope: !10758)
!10760 = !DILocation(line: 523, column: 15, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10762, file: !10441, line: 523, column: 14)
!10762 = distinct !DILexicalBlock(scope: !10758, file: !10441, line: 522, column: 9)
!10763 = !DILocation(line: 523, column: 29, scope: !10761)
!10764 = !DILocation(line: 523, column: 43, scope: !10761)
!10765 = !DILocation(line: 523, column: 14, scope: !10762)
!10766 = distinct !{!10766, !10759, !10767}
!10767 = !DILocation(line: 527, column: 9, scope: !10758)
!10768 = !DILocation(line: 533, column: 44, scope: !10769)
!10769 = distinct !DILexicalBlock(scope: !10770, file: !10441, line: 533, column: 10)
!10770 = distinct !DILexicalBlock(scope: !10723, file: !10441, line: 531, column: 5)
!10771 = !DILocation(line: 533, column: 10, scope: !10770)
!10772 = !DILocation(line: 540, column: 27, scope: !10773)
!10773 = distinct !DILexicalBlock(scope: !10769, file: !10441, line: 538, column: 7)
!10774 = !DILocation(line: 543, column: 14, scope: !10775)
!10775 = distinct !DILexicalBlock(scope: !10773, file: !10441, line: 542, column: 13)
!10776 = !DILocation(line: 543, column: 81, scope: !10775)
!10777 = !DILocation(line: 543, column: 55, scope: !10775)
!10778 = !DILocation(line: 543, column: 92, scope: !10775)
!10779 = !DILocation(line: 544, column: 14, scope: !10775)
!10780 = !DILocation(line: 544, column: 80, scope: !10775)
!10781 = !DILocation(line: 544, column: 53, scope: !10775)
!10782 = !DILocation(line: 544, column: 111, scope: !10775)
!10783 = !DILocation(line: 545, column: 14, scope: !10775)
!10784 = !DILocation(line: 545, column: 80, scope: !10775)
!10785 = !DILocation(line: 545, column: 86, scope: !10775)
!10786 = !DILocation(line: 545, column: 53, scope: !10775)
!10787 = !DILocation(line: 545, column: 111, scope: !10775)
!10788 = !DILocation(line: 546, column: 14, scope: !10775)
!10789 = !DILocation(line: 546, column: 82, scope: !10775)
!10790 = !DILocation(line: 546, column: 101, scope: !10775)
!10791 = !DILocation(line: 546, column: 53, scope: !10775)
!10792 = !DILocation(line: 546, column: 126, scope: !10775)
!10793 = !DILocation(line: 547, column: 14, scope: !10775)
!10794 = !DILocation(line: 547, column: 80, scope: !10775)
!10795 = !DILocation(line: 547, column: 85, scope: !10775)
!10796 = !DILocation(line: 547, column: 53, scope: !10775)
!10797 = !DILocation(line: 547, column: 111, scope: !10775)
!10798 = !DILocation(line: 548, column: 14, scope: !10775)
!10799 = !DILocation(line: 548, column: 80, scope: !10775)
!10800 = !DILocation(line: 548, column: 85, scope: !10775)
!10801 = !DILocation(line: 548, column: 53, scope: !10775)
!10802 = !DILocation(line: 542, column: 13, scope: !10773)
!10803 = !DILocation(line: 563, column: 3, scope: !10446)
!10804 = !DILocation(line: 564, column: 1, scope: !10446)
!10805 = !DISubprogram(name: "HAL_GetTick", scope: !10806, file: !10806, line: 234, type: !3385, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2018)
!10806 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10807 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !10441, file: !10441, line: 591, type: !10808, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !10819)
!10808 = !DISubroutineType(types: !10809)
!10809 = !{!10444, !10810, !110}
!10810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10811, size: 32)
!10811 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !10451, line: 92, baseType: !10812)
!10812 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10451, line: 75, size: 160, elements: !10813)
!10813 = !{!10814, !10815, !10816, !10817, !10818}
!10814 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !10812, file: !10451, line: 77, baseType: !110, size: 32)
!10815 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !10812, file: !10451, line: 80, baseType: !110, size: 32, offset: 32)
!10816 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !10812, file: !10451, line: 83, baseType: !110, size: 32, offset: 64)
!10817 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !10812, file: !10451, line: 86, baseType: !110, size: 32, offset: 96)
!10818 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !10812, file: !10451, line: 89, baseType: !110, size: 32, offset: 128)
!10819 = !{!10820, !10821, !10822}
!10820 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !10807, file: !10441, line: 591, type: !10810)
!10821 = !DILocalVariable(name: "FLatency", arg: 2, scope: !10807, file: !10441, line: 591, type: !110)
!10822 = !DILocalVariable(name: "tickstart", scope: !10807, file: !10441, line: 593, type: !110)
!10823 = !DILocation(line: 0, scope: !10807)
!10824 = !DILocation(line: 596, column: 24, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10807, file: !10441, line: 596, column: 6)
!10826 = !DILocation(line: 596, column: 6, scope: !10807)
!10827 = !DILocation(line: 610, column: 17, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10807, file: !10441, line: 610, column: 6)
!10829 = !DILocation(line: 610, column: 15, scope: !10828)
!10830 = !DILocation(line: 610, column: 6, scope: !10807)
!10831 = !DILocation(line: 613, column: 5, scope: !10832)
!10832 = distinct !DILexicalBlock(scope: !10828, file: !10441, line: 611, column: 3)
!10833 = !DILocation(line: 617, column: 8, scope: !10834)
!10834 = distinct !DILexicalBlock(scope: !10832, file: !10441, line: 617, column: 8)
!10835 = !DILocation(line: 617, column: 34, scope: !10834)
!10836 = !DILocation(line: 617, column: 8, scope: !10832)
!10837 = !DILocation(line: 624, column: 27, scope: !10838)
!10838 = distinct !DILexicalBlock(scope: !10807, file: !10441, line: 624, column: 6)
!10839 = !DILocation(line: 624, column: 38, scope: !10838)
!10840 = !DILocation(line: 624, column: 60, scope: !10838)
!10841 = !DILocation(line: 624, column: 6, scope: !10807)
!10842 = !DILocation(line: 628, column: 40, scope: !10843)
!10843 = distinct !DILexicalBlock(scope: !10844, file: !10441, line: 628, column: 8)
!10844 = distinct !DILexicalBlock(scope: !10838, file: !10441, line: 625, column: 3)
!10845 = !DILocation(line: 628, column: 63, scope: !10843)
!10846 = !DILocation(line: 628, column: 8, scope: !10844)
!10847 = !DILocation(line: 630, column: 7, scope: !10848)
!10848 = distinct !DILexicalBlock(scope: !10843, file: !10441, line: 629, column: 5)
!10849 = !DILocation(line: 633, column: 29, scope: !10850)
!10850 = distinct !DILexicalBlock(scope: !10844, file: !10441, line: 633, column: 8)
!10851 = !DILocation(line: 631, column: 5, scope: !10848)
!10852 = !DILocation(line: 633, column: 40, scope: !10850)
!10853 = !DILocation(line: 633, column: 63, scope: !10850)
!10854 = !DILocation(line: 633, column: 8, scope: !10844)
!10855 = !DILocation(line: 635, column: 7, scope: !10856)
!10856 = distinct !DILexicalBlock(scope: !10850, file: !10441, line: 634, column: 5)
!10857 = !DILocation(line: 636, column: 5, scope: !10856)
!10858 = !DILocation(line: 639, column: 5, scope: !10844)
!10859 = !DILocation(line: 643, column: 27, scope: !10860)
!10860 = distinct !DILexicalBlock(scope: !10807, file: !10441, line: 643, column: 6)
!10861 = !DILocation(line: 640, column: 3, scope: !10844)
!10862 = !DILocation(line: 643, column: 38, scope: !10860)
!10863 = !DILocation(line: 643, column: 62, scope: !10860)
!10864 = !DILocation(line: 643, column: 6, scope: !10807)
!10865 = !DILocation(line: 648, column: 27, scope: !10866)
!10866 = distinct !DILexicalBlock(scope: !10867, file: !10441, line: 648, column: 8)
!10867 = distinct !DILexicalBlock(scope: !10860, file: !10441, line: 644, column: 3)
!10868 = !DILocation(line: 648, column: 8, scope: !10867)
!10869 = !DILocation(line: 651, column: 10, scope: !10870)
!10870 = distinct !DILexicalBlock(scope: !10871, file: !10441, line: 651, column: 10)
!10871 = distinct !DILexicalBlock(scope: !10866, file: !10441, line: 649, column: 5)
!10872 = !DILocation(line: 651, column: 46, scope: !10870)
!10873 = !DILocation(line: 651, column: 10, scope: !10871)
!10874 = !DILocation(line: 661, column: 10, scope: !10875)
!10875 = distinct !DILexicalBlock(scope: !10876, file: !10441, line: 661, column: 10)
!10876 = distinct !DILexicalBlock(scope: !10877, file: !10441, line: 659, column: 5)
!10877 = distinct !DILexicalBlock(scope: !10866, file: !10441, line: 657, column: 13)
!10878 = !DILocation(line: 661, column: 46, scope: !10875)
!10879 = !DILocation(line: 661, column: 10, scope: !10876)
!10880 = !DILocation(line: 670, column: 10, scope: !10881)
!10881 = distinct !DILexicalBlock(scope: !10882, file: !10441, line: 670, column: 10)
!10882 = distinct !DILexicalBlock(scope: !10877, file: !10441, line: 668, column: 5)
!10883 = !DILocation(line: 670, column: 46, scope: !10881)
!10884 = !DILocation(line: 670, column: 10, scope: !10882)
!10885 = !DILocation(line: 676, column: 5, scope: !10867)
!10886 = !DILocation(line: 679, column: 17, scope: !10867)
!10887 = !DILocation(line: 681, column: 5, scope: !10867)
!10888 = !DILocation(line: 681, column: 12, scope: !10867)
!10889 = !DILocation(line: 681, column: 65, scope: !10867)
!10890 = !DILocation(line: 681, column: 78, scope: !10867)
!10891 = !DILocation(line: 681, column: 42, scope: !10867)
!10892 = !DILocation(line: 683, column: 12, scope: !10893)
!10893 = distinct !DILexicalBlock(scope: !10894, file: !10441, line: 683, column: 11)
!10894 = distinct !DILexicalBlock(scope: !10867, file: !10441, line: 682, column: 5)
!10895 = !DILocation(line: 683, column: 26, scope: !10893)
!10896 = !DILocation(line: 683, column: 39, scope: !10893)
!10897 = !DILocation(line: 683, column: 11, scope: !10894)
!10898 = distinct !{!10898, !10887, !10899}
!10899 = !DILocation(line: 687, column: 5, scope: !10867)
!10900 = !DILocation(line: 691, column: 17, scope: !10901)
!10901 = distinct !DILexicalBlock(scope: !10807, file: !10441, line: 691, column: 6)
!10902 = !DILocation(line: 691, column: 15, scope: !10901)
!10903 = !DILocation(line: 691, column: 6, scope: !10807)
!10904 = !DILocation(line: 694, column: 5, scope: !10905)
!10905 = distinct !DILexicalBlock(scope: !10901, file: !10441, line: 692, column: 3)
!10906 = !DILocation(line: 698, column: 8, scope: !10907)
!10907 = distinct !DILexicalBlock(scope: !10905, file: !10441, line: 698, column: 8)
!10908 = !DILocation(line: 698, column: 34, scope: !10907)
!10909 = !DILocation(line: 698, column: 8, scope: !10905)
!10910 = !DILocation(line: 705, column: 27, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10807, file: !10441, line: 705, column: 6)
!10912 = !DILocation(line: 705, column: 38, scope: !10911)
!10913 = !DILocation(line: 705, column: 61, scope: !10911)
!10914 = !DILocation(line: 705, column: 6, scope: !10807)
!10915 = !DILocation(line: 708, column: 5, scope: !10916)
!10916 = distinct !DILexicalBlock(scope: !10911, file: !10441, line: 706, column: 3)
!10917 = !DILocation(line: 712, column: 27, scope: !10918)
!10918 = distinct !DILexicalBlock(scope: !10807, file: !10441, line: 712, column: 6)
!10919 = !DILocation(line: 709, column: 3, scope: !10916)
!10920 = !DILocation(line: 712, column: 38, scope: !10918)
!10921 = !DILocation(line: 712, column: 61, scope: !10918)
!10922 = !DILocation(line: 712, column: 6, scope: !10807)
!10923 = !DILocation(line: 715, column: 5, scope: !10924)
!10924 = distinct !DILexicalBlock(scope: !10918, file: !10441, line: 713, column: 3)
!10925 = !DILocation(line: 716, column: 3, scope: !10924)
!10926 = !DILocation(line: 719, column: 21, scope: !10807)
!10927 = !DILocation(line: 719, column: 70, scope: !10807)
!10928 = !DILocation(line: 719, column: 91, scope: !10807)
!10929 = !DILocation(line: 719, column: 50, scope: !10807)
!10930 = !DILocation(line: 719, column: 47, scope: !10807)
!10931 = !DILocation(line: 719, column: 19, scope: !10807)
!10932 = !DILocation(line: 722, column: 17, scope: !10807)
!10933 = !DILocation(line: 722, column: 3, scope: !10807)
!10934 = !DILocation(line: 724, column: 3, scope: !10807)
!10935 = !DILocation(line: 725, column: 1, scope: !10807)
!10936 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !10441, file: !10441, line: 885, type: !3385, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !10937)
!10937 = !{!10938, !10939, !10940, !10941}
!10938 = !DILocalVariable(name: "pllm", scope: !10936, file: !10441, line: 887, type: !110)
!10939 = !DILocalVariable(name: "pllvco", scope: !10936, file: !10441, line: 887, type: !110)
!10940 = !DILocalVariable(name: "pllp", scope: !10936, file: !10441, line: 887, type: !110)
!10941 = !DILocalVariable(name: "sysclockfreq", scope: !10936, file: !10441, line: 888, type: !110)
!10942 = !DILocation(line: 0, scope: !10936)
!10943 = !DILocation(line: 891, column: 16, scope: !10936)
!10944 = !DILocation(line: 891, column: 21, scope: !10936)
!10945 = !DILocation(line: 891, column: 3, scope: !10936)
!10946 = !DILocation(line: 907, column: 19, scope: !10947)
!10947 = distinct !DILexicalBlock(scope: !10948, file: !10441, line: 904, column: 5)
!10948 = distinct !DILexicalBlock(scope: !10936, file: !10441, line: 892, column: 3)
!10949 = !DILocation(line: 907, column: 27, scope: !10947)
!10950 = !DILocation(line: 908, column: 10, scope: !10951)
!10951 = distinct !DILexicalBlock(scope: !10947, file: !10441, line: 908, column: 10)
!10952 = !DILocation(line: 0, scope: !10951)
!10953 = !DILocation(line: 918, column: 23, scope: !10947)
!10954 = !DILocation(line: 918, column: 82, scope: !10947)
!10955 = !DILocation(line: 920, column: 28, scope: !10947)
!10956 = !DILocation(line: 921, column: 7, scope: !10947)
!10957 = !DILocation(line: 0, scope: !10948)
!10958 = !DILocation(line: 929, column: 3, scope: !10936)
!10959 = !DISubprogram(name: "HAL_InitTick", scope: !10806, file: !10806, line: 223, type: !10960, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2018)
!10960 = !DISubroutineType(types: !10961)
!10961 = !{!10444, !110}
!10962 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !10441, file: !10441, line: 775, type: !10963, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !10965)
!10963 = !DISubroutineType(types: !10964)
!10964 = !{null, !110, !110, !110}
!10965 = !{!10966, !10967, !10968, !10969, !10979}
!10966 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !10962, file: !10441, line: 775, type: !110)
!10967 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !10962, file: !10441, line: 775, type: !110)
!10968 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !10962, file: !10441, line: 775, type: !110)
!10969 = !DILocalVariable(name: "GPIO_InitStruct", scope: !10962, file: !10441, line: 777, type: !10970)
!10970 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !10971, line: 62, baseType: !10972)
!10971 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10972 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10971, line: 46, size: 160, elements: !10973)
!10973 = !{!10974, !10975, !10976, !10977, !10978}
!10974 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !10972, file: !10971, line: 48, baseType: !110, size: 32)
!10975 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !10972, file: !10971, line: 51, baseType: !110, size: 32, offset: 32)
!10976 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !10972, file: !10971, line: 54, baseType: !110, size: 32, offset: 64)
!10977 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !10972, file: !10971, line: 57, baseType: !110, size: 32, offset: 96)
!10978 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !10972, file: !10971, line: 60, baseType: !110, size: 32, offset: 128)
!10979 = !DILocalVariable(name: "tmpreg", scope: !10980, file: !10441, line: 787, type: !301)
!10980 = distinct !DILexicalBlock(scope: !10981, file: !10441, line: 787, column: 5)
!10981 = distinct !DILexicalBlock(scope: !10982, file: !10441, line: 783, column: 3)
!10982 = distinct !DILexicalBlock(scope: !10962, file: !10441, line: 782, column: 6)
!10983 = !DILocation(line: 0, scope: !10962)
!10984 = !DILocation(line: 777, column: 3, scope: !10962)
!10985 = !DILocation(line: 777, column: 20, scope: !10962)
!10986 = !DILocation(line: 782, column: 15, scope: !10982)
!10987 = !DILocation(line: 782, column: 6, scope: !10962)
!10988 = !DILocation(line: 787, column: 5, scope: !10980)
!10989 = !DILocation(line: 787, column: 5, scope: !10981)
!10990 = !DILocation(line: 790, column: 21, scope: !10981)
!10991 = !DILocation(line: 790, column: 25, scope: !10981)
!10992 = !DILocation(line: 791, column: 21, scope: !10981)
!10993 = !DILocation(line: 791, column: 26, scope: !10981)
!10994 = !DILocation(line: 792, column: 21, scope: !10981)
!10995 = !DILocation(line: 792, column: 27, scope: !10981)
!10996 = !DILocation(line: 793, column: 21, scope: !10981)
!10997 = !DILocation(line: 793, column: 26, scope: !10981)
!10998 = !DILocation(line: 794, column: 21, scope: !10981)
!10999 = !DILocation(line: 794, column: 31, scope: !10981)
!11000 = !DILocation(line: 795, column: 5, scope: !10981)
!11001 = !DILocation(line: 798, column: 5, scope: !10981)
!11002 = !DILocation(line: 804, column: 3, scope: !10981)
!11003 = !DILocation(line: 830, column: 1, scope: !10962)
!11004 = !DISubprogram(name: "HAL_GPIO_Init", scope: !10971, file: !10971, line: 224, type: !11005, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2018)
!11005 = !DISubroutineType(types: !11006)
!11006 = !{null, !2986, !11007}
!11007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10970, size: 32)
!11008 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !10441, file: !10441, line: 841, type: !3103, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !2018)
!11009 = !DILocation(line: 843, column: 38, scope: !11008)
!11010 = !DILocation(line: 844, column: 1, scope: !11008)
!11011 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !10441, file: !10441, line: 850, type: !3103, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !2018)
!11012 = !DILocation(line: 852, column: 38, scope: !11011)
!11013 = !DILocation(line: 853, column: 1, scope: !11011)
!11014 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !10441, file: !10441, line: 941, type: !3385, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !2018)
!11015 = !DILocation(line: 943, column: 10, scope: !11014)
!11016 = !DILocation(line: 943, column: 3, scope: !11014)
!11017 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !10441, file: !10441, line: 952, type: !3385, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !2018)
!11018 = !DILocation(line: 955, column: 11, scope: !11017)
!11019 = !DILocation(line: 955, column: 56, scope: !11017)
!11020 = !DILocation(line: 955, column: 78, scope: !11017)
!11021 = !DILocation(line: 955, column: 36, scope: !11017)
!11022 = !DILocation(line: 955, column: 33, scope: !11017)
!11023 = !DILocation(line: 955, column: 3, scope: !11017)
!11024 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !10441, file: !10441, line: 964, type: !3385, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !2018)
!11025 = !DILocation(line: 967, column: 11, scope: !11024)
!11026 = !DILocation(line: 967, column: 55, scope: !11024)
!11027 = !DILocation(line: 967, column: 77, scope: !11024)
!11028 = !DILocation(line: 967, column: 35, scope: !11024)
!11029 = !DILocation(line: 967, column: 32, scope: !11024)
!11030 = !DILocation(line: 967, column: 3, scope: !11024)
!11031 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !10441, file: !10441, line: 977, type: !11032, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !11034)
!11032 = !DISubroutineType(types: !11033)
!11033 = !{null, !10449}
!11034 = !{!11035}
!11035 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11031, file: !10441, line: 977, type: !10449)
!11036 = !DILocation(line: 0, scope: !11031)
!11037 = !DILocation(line: 980, column: 22, scope: !11031)
!11038 = !DILocation(line: 980, column: 37, scope: !11031)
!11039 = !DILocation(line: 983, column: 12, scope: !11040)
!11040 = distinct !DILexicalBlock(scope: !11031, file: !10441, line: 983, column: 6)
!11041 = !DILocation(line: 983, column: 15, scope: !11040)
!11042 = !DILocation(line: 983, column: 31, scope: !11040)
!11043 = !DILocation(line: 983, column: 6, scope: !11031)
!11044 = !DILocation(line: 985, column: 24, scope: !11045)
!11045 = distinct !DILexicalBlock(scope: !11040, file: !10441, line: 984, column: 3)
!11046 = !DILocation(line: 985, column: 33, scope: !11045)
!11047 = !DILocation(line: 986, column: 3, scope: !11045)
!11048 = !DILocation(line: 987, column: 17, scope: !11049)
!11049 = distinct !DILexicalBlock(scope: !11040, file: !10441, line: 987, column: 11)
!11050 = !DILocation(line: 987, column: 20, scope: !11049)
!11051 = !DILocation(line: 987, column: 35, scope: !11049)
!11052 = !DILocation(line: 0, scope: !11049)
!11053 = !DILocation(line: 987, column: 11, scope: !11040)
!11054 = !DILocation(line: 989, column: 33, scope: !11055)
!11055 = distinct !DILexicalBlock(scope: !11049, file: !10441, line: 988, column: 3)
!11056 = !DILocation(line: 990, column: 3, scope: !11055)
!11057 = !DILocation(line: 993, column: 33, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !11049, file: !10441, line: 992, column: 3)
!11059 = !DILocation(line: 997, column: 12, scope: !11060)
!11060 = distinct !DILexicalBlock(scope: !11031, file: !10441, line: 997, column: 6)
!11061 = !DILocation(line: 997, column: 15, scope: !11060)
!11062 = !DILocation(line: 1003, column: 24, scope: !11063)
!11063 = distinct !DILexicalBlock(scope: !11060, file: !10441, line: 1002, column: 3)
!11064 = !DILocation(line: 1003, column: 33, scope: !11063)
!11065 = !DILocation(line: 1006, column: 61, scope: !11031)
!11066 = !DILocation(line: 1006, column: 81, scope: !11031)
!11067 = !DILocation(line: 1006, column: 22, scope: !11031)
!11068 = !DILocation(line: 1006, column: 42, scope: !11031)
!11069 = !DILocation(line: 1009, column: 12, scope: !11070)
!11070 = distinct !DILexicalBlock(scope: !11031, file: !10441, line: 1009, column: 6)
!11071 = !DILocation(line: 1009, column: 17, scope: !11070)
!11072 = !DILocation(line: 1009, column: 35, scope: !11070)
!11073 = !DILocation(line: 1009, column: 6, scope: !11031)
!11074 = !DILocation(line: 1011, column: 24, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11070, file: !10441, line: 1010, column: 3)
!11076 = !DILocation(line: 1011, column: 33, scope: !11075)
!11077 = !DILocation(line: 1012, column: 3, scope: !11075)
!11078 = !DILocation(line: 1013, column: 17, scope: !11079)
!11079 = distinct !DILexicalBlock(scope: !11070, file: !10441, line: 1013, column: 11)
!11080 = !DILocation(line: 1013, column: 22, scope: !11079)
!11081 = !DILocation(line: 1013, column: 39, scope: !11079)
!11082 = !DILocation(line: 0, scope: !11079)
!11083 = !DILocation(line: 1013, column: 11, scope: !11070)
!11084 = !DILocation(line: 1015, column: 33, scope: !11085)
!11085 = distinct !DILexicalBlock(scope: !11079, file: !10441, line: 1014, column: 3)
!11086 = !DILocation(line: 1016, column: 3, scope: !11085)
!11087 = !DILocation(line: 1019, column: 33, scope: !11088)
!11088 = distinct !DILexicalBlock(scope: !11079, file: !10441, line: 1018, column: 3)
!11089 = !DILocation(line: 1023, column: 12, scope: !11090)
!11090 = distinct !DILexicalBlock(scope: !11031, file: !10441, line: 1023, column: 6)
!11091 = !DILocation(line: 1023, column: 16, scope: !11090)
!11092 = !DILocation(line: 1029, column: 24, scope: !11093)
!11093 = distinct !DILexicalBlock(scope: !11090, file: !10441, line: 1028, column: 3)
!11094 = !DILocation(line: 1029, column: 33, scope: !11093)
!11095 = !DILocation(line: 1033, column: 12, scope: !11096)
!11096 = distinct !DILexicalBlock(scope: !11031, file: !10441, line: 1033, column: 6)
!11097 = !DILocation(line: 1033, column: 15, scope: !11096)
!11098 = !DILocation(line: 1033, column: 30, scope: !11096)
!11099 = !DILocation(line: 1033, column: 6, scope: !11031)
!11100 = !DILocation(line: 1039, column: 28, scope: !11101)
!11101 = distinct !DILexicalBlock(scope: !11096, file: !10441, line: 1038, column: 3)
!11102 = !DILocation(line: 1039, column: 37, scope: !11101)
!11103 = !DILocation(line: 1041, column: 54, scope: !11031)
!11104 = !DILocation(line: 1041, column: 62, scope: !11031)
!11105 = !DILocation(line: 1041, column: 26, scope: !11031)
!11106 = !DILocation(line: 1041, column: 36, scope: !11031)
!11107 = !DILocation(line: 1042, column: 49, scope: !11031)
!11108 = !DILocation(line: 1042, column: 57, scope: !11031)
!11109 = !DILocation(line: 1042, column: 26, scope: !11031)
!11110 = !DILocation(line: 1042, column: 31, scope: !11031)
!11111 = !DILocation(line: 1043, column: 50, scope: !11031)
!11112 = !DILocation(line: 1043, column: 78, scope: !11031)
!11113 = !DILocation(line: 1043, column: 26, scope: !11031)
!11114 = !DILocation(line: 1043, column: 31, scope: !11031)
!11115 = !DILocation(line: 1044, column: 52, scope: !11031)
!11116 = !DILocation(line: 1044, column: 102, scope: !11031)
!11117 = !DILocation(line: 1044, column: 109, scope: !11031)
!11118 = !DILocation(line: 1044, column: 26, scope: !11031)
!11119 = !DILocation(line: 1044, column: 31, scope: !11031)
!11120 = !DILocation(line: 1045, column: 50, scope: !11031)
!11121 = !DILocation(line: 1045, column: 78, scope: !11031)
!11122 = !DILocation(line: 1045, column: 26, scope: !11031)
!11123 = !DILocation(line: 1045, column: 31, scope: !11031)
!11124 = !DILocation(line: 1046, column: 1, scope: !11031)
!11125 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !10441, file: !10441, line: 1056, type: !11126, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !11128)
!11126 = !DISubroutineType(types: !11127)
!11127 = !{null, !10810, !875}
!11128 = !{!11129, !11130}
!11129 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11125, file: !10441, line: 1056, type: !10810)
!11130 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11125, file: !10441, line: 1056, type: !875)
!11131 = !DILocation(line: 0, scope: !11125)
!11132 = !DILocation(line: 1059, column: 22, scope: !11125)
!11133 = !DILocation(line: 1059, column: 32, scope: !11125)
!11134 = !DILocation(line: 1062, column: 53, scope: !11125)
!11135 = !DILocation(line: 1062, column: 58, scope: !11125)
!11136 = !DILocation(line: 1062, column: 22, scope: !11125)
!11137 = !DILocation(line: 1062, column: 35, scope: !11125)
!11138 = !DILocation(line: 1065, column: 54, scope: !11125)
!11139 = !DILocation(line: 1065, column: 59, scope: !11125)
!11140 = !DILocation(line: 1065, column: 22, scope: !11125)
!11141 = !DILocation(line: 1065, column: 36, scope: !11125)
!11142 = !DILocation(line: 1068, column: 55, scope: !11125)
!11143 = !DILocation(line: 1068, column: 60, scope: !11125)
!11144 = !DILocation(line: 1068, column: 22, scope: !11125)
!11145 = !DILocation(line: 1068, column: 37, scope: !11125)
!11146 = !DILocation(line: 1071, column: 56, scope: !11125)
!11147 = !DILocation(line: 1071, column: 79, scope: !11125)
!11148 = !DILocation(line: 1071, column: 22, scope: !11125)
!11149 = !DILocation(line: 1071, column: 37, scope: !11125)
!11150 = !DILocation(line: 1074, column: 34, scope: !11125)
!11151 = !DILocation(line: 1074, column: 38, scope: !11125)
!11152 = !DILocation(line: 1074, column: 14, scope: !11125)
!11153 = !DILocation(line: 1075, column: 1, scope: !11125)
!11154 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !10441, file: !10441, line: 1082, type: !3103, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !2018)
!11155 = !DILocation(line: 1085, column: 6, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11154, file: !10441, line: 1085, column: 6)
!11157 = !DILocation(line: 1085, column: 6, scope: !11154)
!11158 = !DILocation(line: 1088, column: 5, scope: !11159)
!11159 = distinct !DILexicalBlock(scope: !11156, file: !10441, line: 1086, column: 3)
!11160 = !DILocation(line: 1091, column: 5, scope: !11159)
!11161 = !DILocation(line: 1092, column: 3, scope: !11159)
!11162 = !DILocation(line: 1093, column: 1, scope: !11154)
!11163 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !10441, file: !10441, line: 1099, type: !3103, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !2018)
!11164 = !DILocation(line: 1104, column: 1, scope: !11163)
!11165 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11166, file: !11166, line: 257, type: !6274, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !11167)
!11166 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11167 = !{!11168}
!11168 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11165, file: !11166, line: 257, type: !110)
!11169 = !DILocation(line: 0, scope: !11165)
!11170 = !DILocation(line: 260, column: 3, scope: !11165)
!11171 = !DILocation(line: 261, column: 1, scope: !11165)
!11172 = distinct !DISubprogram(name: "LL_InitTick", scope: !11173, file: !11173, line: 260, type: !8833, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !11174)
!11173 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11174 = !{!11175, !11176}
!11175 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11172, file: !11173, line: 260, type: !110)
!11176 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11172, file: !11173, line: 260, type: !110)
!11177 = !DILocation(line: 0, scope: !11172)
!11178 = !DILocation(line: 263, column: 46, scope: !11172)
!11179 = !DILocation(line: 263, column: 55, scope: !11172)
!11180 = !DILocation(line: 263, column: 18, scope: !11172)
!11181 = !DILocation(line: 264, column: 18, scope: !11172)
!11182 = !DILocation(line: 265, column: 18, scope: !11172)
!11183 = !DILocation(line: 267, column: 1, scope: !11172)
!11184 = distinct !DISubprogram(name: "LL_mDelay", scope: !11166, file: !11166, line: 273, type: !6274, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !11185)
!11185 = !{!11186, !11187}
!11186 = !DILocalVariable(name: "Delay", arg: 1, scope: !11184, file: !11166, line: 273, type: !110)
!11187 = !DILocalVariable(name: "tmp", scope: !11184, file: !11166, line: 275, type: !301)
!11188 = !DILocation(line: 0, scope: !11184)
!11189 = !DILocation(line: 275, column: 3, scope: !11184)
!11190 = !DILocation(line: 275, column: 18, scope: !11184)
!11191 = !DILocation(line: 275, column: 33, scope: !11184)
!11192 = !DILocation(line: 277, column: 10, scope: !11184)
!11193 = !DILocation(line: 280, column: 12, scope: !11194)
!11194 = distinct !DILexicalBlock(scope: !11184, file: !11166, line: 280, column: 6)
!11195 = !DILocation(line: 285, column: 3, scope: !11184)
!11196 = !DILocation(line: 287, column: 18, scope: !11197)
!11197 = distinct !DILexicalBlock(scope: !11198, file: !11166, line: 287, column: 8)
!11198 = distinct !DILexicalBlock(scope: !11184, file: !11166, line: 286, column: 3)
!11199 = !DILocation(line: 292, column: 1, scope: !11184)
!11200 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11166, file: !11166, line: 323, type: !6274, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !11201)
!11201 = !{!11202}
!11202 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11200, file: !11166, line: 323, type: !110)
!11203 = !DILocation(line: 0, scope: !11200)
!11204 = !DILocation(line: 326, column: 19, scope: !11200)
!11205 = !DILocation(line: 327, column: 1, scope: !11200)
!11206 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11166, file: !11166, line: 338, type: !11207, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !11210)
!11207 = !DISubroutineType(types: !11208)
!11208 = !{!11209, !110}
!11209 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !821, line: 201, baseType: !820)
!11210 = !{!11211, !11212, !11213, !11214, !11215}
!11211 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !11206, file: !11166, line: 338, type: !110)
!11212 = !DILocalVariable(name: "timeout", scope: !11206, file: !11166, line: 340, type: !110)
!11213 = !DILocalVariable(name: "getlatency", scope: !11206, file: !11166, line: 341, type: !110)
!11214 = !DILocalVariable(name: "latency", scope: !11206, file: !11166, line: 342, type: !110)
!11215 = !DILocalVariable(name: "status", scope: !11206, file: !11166, line: 343, type: !11209)
!11216 = !DILocation(line: 0, scope: !11206)
!11217 = !DILocation(line: 347, column: 21, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !11206, file: !11166, line: 347, column: 6)
!11219 = !DILocation(line: 347, column: 6, scope: !11206)
!11220 = !DILocation(line: 353, column: 8, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11222, file: !11166, line: 353, column: 8)
!11222 = distinct !DILexicalBlock(scope: !11218, file: !11166, line: 352, column: 3)
!11223 = !DILocation(line: 353, column: 40, scope: !11221)
!11224 = !DILocation(line: 353, column: 8, scope: !11222)
!11225 = !DILocation(line: 374, column: 55, scope: !11226)
!11226 = distinct !DILexicalBlock(scope: !11227, file: !11166, line: 374, column: 10)
!11227 = distinct !DILexicalBlock(scope: !11221, file: !11166, line: 354, column: 5)
!11228 = !DILocation(line: 368, column: 26, scope: !11229)
!11229 = distinct !DILexicalBlock(scope: !11227, file: !11166, line: 368, column: 10)
!11230 = !DILocation(line: 368, column: 55, scope: !11229)
!11231 = !DILocation(line: 380, column: 57, scope: !11232)
!11232 = distinct !DILexicalBlock(scope: !11233, file: !11166, line: 380, column: 12)
!11233 = distinct !DILexicalBlock(scope: !11226, file: !11166, line: 379, column: 7)
!11234 = !DILocation(line: 387, column: 8, scope: !11235)
!11235 = distinct !DILexicalBlock(scope: !11222, file: !11166, line: 387, column: 8)
!11236 = !DILocation(line: 387, column: 40, scope: !11235)
!11237 = !DILocation(line: 387, column: 8, scope: !11222)
!11238 = !DILocation(line: 407, column: 26, scope: !11239)
!11239 = distinct !DILexicalBlock(scope: !11240, file: !11166, line: 407, column: 10)
!11240 = distinct !DILexicalBlock(scope: !11235, file: !11166, line: 388, column: 5)
!11241 = !DILocation(line: 407, column: 55, scope: !11239)
!11242 = !DILocation(line: 413, column: 28, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11244, file: !11166, line: 413, column: 12)
!11244 = distinct !DILexicalBlock(scope: !11239, file: !11166, line: 412, column: 7)
!11245 = !DILocation(line: 413, column: 57, scope: !11243)
!11246 = !DILocation(line: 0, scope: !11222)
!11247 = !DILocation(line: 420, column: 8, scope: !11248)
!11248 = distinct !DILexicalBlock(scope: !11222, file: !11166, line: 420, column: 8)
!11249 = !DILocation(line: 420, column: 40, scope: !11248)
!11250 = !DILocation(line: 420, column: 8, scope: !11222)
!11251 = !DILocation(line: 429, column: 26, scope: !11252)
!11252 = distinct !DILexicalBlock(scope: !11253, file: !11166, line: 429, column: 10)
!11253 = distinct !DILexicalBlock(scope: !11248, file: !11166, line: 421, column: 5)
!11254 = !DILocation(line: 429, column: 55, scope: !11252)
!11255 = !DILocation(line: 435, column: 28, scope: !11256)
!11256 = distinct !DILexicalBlock(scope: !11257, file: !11166, line: 435, column: 12)
!11257 = distinct !DILexicalBlock(scope: !11252, file: !11166, line: 434, column: 7)
!11258 = !DILocation(line: 435, column: 57, scope: !11256)
!11259 = !DILocation(line: 444, column: 5, scope: !11222)
!11260 = !DILocation(line: 448, column: 5, scope: !11222)
!11261 = !DILocation(line: 451, column: 18, scope: !11262)
!11262 = distinct !DILexicalBlock(scope: !11222, file: !11166, line: 449, column: 5)
!11263 = !DILocation(line: 452, column: 12, scope: !11262)
!11264 = !DILocation(line: 453, column: 26, scope: !11222)
!11265 = !DILocation(line: 453, column: 38, scope: !11222)
!11266 = !DILocation(line: 453, column: 5, scope: !11262)
!11267 = distinct !{!11267, !11260, !11268}
!11268 = !DILocation(line: 453, column: 54, scope: !11222)
!11269 = !DILocation(line: 0, scope: !11218)
!11270 = !DILocation(line: 464, column: 3, scope: !11206)
!11271 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !11272, file: !11272, line: 519, type: !3385, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !2018)
!11272 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11273 = !DILocation(line: 521, column: 21, scope: !11271)
!11274 = !DILocation(line: 521, column: 3, scope: !11271)
!11275 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6026, file: !6026, line: 1543, type: !6274, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !11276)
!11276 = !{!11277}
!11277 = !DILocalVariable(name: "Latency", arg: 1, scope: !11275, file: !6026, line: 1543, type: !110)
!11278 = !DILocation(line: 0, scope: !11275)
!11279 = !DILocation(line: 1545, column: 3, scope: !11275)
!11280 = !DILocation(line: 1546, column: 1, scope: !11275)
!11281 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6026, file: !6026, line: 1569, type: !3385, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !2018)
!11282 = !DILocation(line: 1571, column: 21, scope: !11281)
!11283 = !DILocation(line: 1571, column: 3, scope: !11281)
!11284 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11166, file: !11166, line: 483, type: !11285, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !11301)
!11285 = !DISubroutineType(types: !11286)
!11286 = !{!11209, !11287, !11294}
!11287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11288, size: 32)
!11288 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11173, line: 114, baseType: !11289)
!11289 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11173, line: 94, size: 96, elements: !11290)
!11290 = !{!11291, !11292, !11293}
!11291 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11289, file: !11173, line: 96, baseType: !110, size: 32)
!11292 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11289, file: !11173, line: 102, baseType: !110, size: 32, offset: 32)
!11293 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11289, file: !11173, line: 109, baseType: !110, size: 32, offset: 64)
!11294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11295, size: 32)
!11295 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11173, line: 139, baseType: !11296)
!11296 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11173, line: 119, size: 96, elements: !11297)
!11297 = !{!11298, !11299, !11300}
!11298 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11296, file: !11173, line: 121, baseType: !110, size: 32)
!11299 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11296, file: !11173, line: 127, baseType: !110, size: 32, offset: 32)
!11300 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11296, file: !11173, line: 133, baseType: !110, size: 32, offset: 64)
!11301 = !{!11302, !11303, !11304, !11305}
!11302 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !11284, file: !11166, line: 483, type: !11287)
!11303 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11284, file: !11166, line: 484, type: !11294)
!11304 = !DILocalVariable(name: "status", scope: !11284, file: !11166, line: 486, type: !11209)
!11305 = !DILocalVariable(name: "pllfreq", scope: !11284, file: !11166, line: 487, type: !110)
!11306 = !DILocation(line: 0, scope: !11284)
!11307 = !DILocation(line: 490, column: 6, scope: !11308)
!11308 = distinct !DILexicalBlock(scope: !11284, file: !11166, line: 490, column: 6)
!11309 = !DILocation(line: 490, column: 25, scope: !11308)
!11310 = !DILocation(line: 490, column: 6, scope: !11284)
!11311 = !DILocation(line: 493, column: 15, scope: !11312)
!11312 = distinct !DILexicalBlock(scope: !11308, file: !11166, line: 491, column: 3)
!11313 = !DILocation(line: 496, column: 8, scope: !11314)
!11314 = distinct !DILexicalBlock(scope: !11312, file: !11166, line: 496, column: 8)
!11315 = !DILocation(line: 496, column: 29, scope: !11314)
!11316 = !DILocation(line: 496, column: 8, scope: !11312)
!11317 = !DILocation(line: 498, column: 7, scope: !11318)
!11318 = distinct !DILexicalBlock(scope: !11314, file: !11166, line: 497, column: 5)
!11319 = !DILocation(line: 499, column: 7, scope: !11318)
!11320 = !DILocation(line: 499, column: 14, scope: !11318)
!11321 = !DILocation(line: 499, column: 35, scope: !11318)
!11322 = distinct !{!11322, !11319, !11323}
!11323 = !DILocation(line: 502, column: 7, scope: !11318)
!11324 = !DILocation(line: 506, column: 76, scope: !11312)
!11325 = !DILocation(line: 506, column: 103, scope: !11312)
!11326 = !DILocation(line: 507, column: 54, scope: !11312)
!11327 = !DILocation(line: 506, column: 5, scope: !11312)
!11328 = !DILocation(line: 510, column: 14, scope: !11312)
!11329 = !DILocation(line: 511, column: 3, scope: !11312)
!11330 = !DILocation(line: 0, scope: !11308)
!11331 = !DILocation(line: 518, column: 3, scope: !11284)
!11332 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11166, file: !11166, line: 642, type: !11333, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !11335)
!11333 = !DISubroutineType(types: !11334)
!11334 = !{!11209}
!11335 = !{!11336}
!11336 = !DILocalVariable(name: "status", scope: !11332, file: !11166, line: 644, type: !11209)
!11337 = !DILocation(line: 0, scope: !11332)
!11338 = !DILocation(line: 647, column: 6, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !11332, file: !11166, line: 647, column: 6)
!11340 = !DILocation(line: 647, column: 27, scope: !11339)
!11341 = !DILocation(line: 663, column: 6, scope: !11342)
!11342 = distinct !DILexicalBlock(scope: !11332, file: !11166, line: 663, column: 6)
!11343 = !DILocation(line: 663, column: 30, scope: !11342)
!11344 = !DILocation(line: 663, column: 6, scope: !11332)
!11345 = !DILocation(line: 669, column: 3, scope: !11332)
!11346 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11166, file: !11166, line: 611, type: !11347, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !11349)
!11347 = !DISubroutineType(types: !11348)
!11348 = !{!110, !110, !11287}
!11349 = !{!11350, !11351, !11352}
!11350 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !11346, file: !11166, line: 611, type: !110)
!11351 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !11346, file: !11166, line: 611, type: !11287)
!11352 = !DILocalVariable(name: "pllfreq", scope: !11346, file: !11166, line: 613, type: !110)
!11353 = !DILocation(line: 0, scope: !11346)
!11354 = !DILocation(line: 622, column: 56, scope: !11346)
!11355 = !DILocation(line: 622, column: 61, scope: !11346)
!11356 = !DILocation(line: 622, column: 32, scope: !11346)
!11357 = !DILocation(line: 626, column: 45, scope: !11346)
!11358 = !DILocation(line: 626, column: 50, scope: !11346)
!11359 = !DILocation(line: 626, column: 21, scope: !11346)
!11360 = !DILocation(line: 630, column: 47, scope: !11346)
!11361 = !DILocation(line: 630, column: 82, scope: !11346)
!11362 = !DILocation(line: 630, column: 21, scope: !11346)
!11363 = !DILocation(line: 633, column: 3, scope: !11346)
!11364 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8160, file: !8160, line: 3007, type: !3385, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !2018)
!11365 = !DILocation(line: 3009, column: 11, scope: !11364)
!11366 = !DILocation(line: 3009, column: 44, scope: !11364)
!11367 = !DILocation(line: 3009, column: 3, scope: !11364)
!11368 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8160, file: !8160, line: 2987, type: !3103, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !2018)
!11369 = !DILocation(line: 2989, column: 3, scope: !11368)
!11370 = !DILocation(line: 2990, column: 1, scope: !11368)
!11371 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8160, file: !8160, line: 4304, type: !8294, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !11372)
!11372 = !{!11373, !11374, !11375, !11376}
!11373 = !DILocalVariable(name: "Source", arg: 1, scope: !11371, file: !8160, line: 4304, type: !110)
!11374 = !DILocalVariable(name: "PLLM", arg: 2, scope: !11371, file: !8160, line: 4304, type: !110)
!11375 = !DILocalVariable(name: "PLLN", arg: 3, scope: !11371, file: !8160, line: 4304, type: !110)
!11376 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !11371, file: !8160, line: 4304, type: !110)
!11377 = !DILocation(line: 0, scope: !11371)
!11378 = !DILocation(line: 4306, column: 3, scope: !11371)
!11379 = !DILocation(line: 4308, column: 3, scope: !11371)
!11380 = !DILocation(line: 4312, column: 1, scope: !11371)
!11381 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11166, file: !11166, line: 681, type: !11382, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !11384)
!11382 = !DISubroutineType(types: !11383)
!11383 = !{!11209, !110, !11294}
!11384 = !{!11385, !11386, !11387, !11388}
!11385 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !11381, file: !11166, line: 681, type: !110)
!11386 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11381, file: !11166, line: 681, type: !11294)
!11387 = !DILocalVariable(name: "status", scope: !11381, file: !11166, line: 683, type: !11209)
!11388 = !DILocalVariable(name: "hclk_frequency", scope: !11381, file: !11166, line: 684, type: !110)
!11389 = !DILocation(line: 0, scope: !11381)
!11390 = !DILocation(line: 691, column: 20, scope: !11381)
!11391 = !DILocation(line: 694, column: 6, scope: !11392)
!11392 = distinct !DILexicalBlock(scope: !11381, file: !11166, line: 694, column: 6)
!11393 = !DILocation(line: 694, column: 22, scope: !11392)
!11394 = !DILocation(line: 694, column: 6, scope: !11381)
!11395 = !DILocation(line: 697, column: 14, scope: !11396)
!11396 = distinct !DILexicalBlock(scope: !11392, file: !11166, line: 695, column: 3)
!11397 = !DILocation(line: 701, column: 13, scope: !11398)
!11398 = distinct !DILexicalBlock(scope: !11381, file: !11166, line: 701, column: 6)
!11399 = !DILocation(line: 701, column: 6, scope: !11381)
!11400 = !DILocation(line: 704, column: 5, scope: !11401)
!11401 = distinct !DILexicalBlock(scope: !11398, file: !11166, line: 702, column: 3)
!11402 = !DILocation(line: 705, column: 5, scope: !11401)
!11403 = !DILocation(line: 705, column: 12, scope: !11401)
!11404 = !DILocation(line: 705, column: 33, scope: !11401)
!11405 = distinct !{!11405, !11402, !11406}
!11406 = !DILocation(line: 708, column: 5, scope: !11401)
!11407 = !DILocation(line: 711, column: 49, scope: !11401)
!11408 = !DILocation(line: 711, column: 5, scope: !11401)
!11409 = !DILocation(line: 712, column: 5, scope: !11401)
!11410 = !DILocation(line: 713, column: 5, scope: !11401)
!11411 = !DILocation(line: 713, column: 12, scope: !11401)
!11412 = !DILocation(line: 713, column: 37, scope: !11401)
!11413 = distinct !{!11413, !11410, !11414}
!11414 = !DILocation(line: 716, column: 5, scope: !11401)
!11415 = !DILocation(line: 719, column: 50, scope: !11401)
!11416 = !DILocation(line: 719, column: 5, scope: !11401)
!11417 = !DILocation(line: 720, column: 50, scope: !11401)
!11418 = !DILocation(line: 720, column: 5, scope: !11401)
!11419 = !DILocation(line: 721, column: 3, scope: !11401)
!11420 = !DILocation(line: 724, column: 6, scope: !11421)
!11421 = distinct !DILexicalBlock(scope: !11381, file: !11166, line: 724, column: 6)
!11422 = !DILocation(line: 724, column: 22, scope: !11421)
!11423 = !DILocation(line: 724, column: 6, scope: !11381)
!11424 = !DILocation(line: 727, column: 14, scope: !11425)
!11425 = distinct !DILexicalBlock(scope: !11421, file: !11166, line: 725, column: 3)
!11426 = !DILocation(line: 728, column: 3, scope: !11425)
!11427 = !DILocation(line: 731, column: 13, scope: !11428)
!11428 = distinct !DILexicalBlock(scope: !11381, file: !11166, line: 731, column: 6)
!11429 = !DILocation(line: 731, column: 6, scope: !11381)
!11430 = !DILocation(line: 733, column: 5, scope: !11431)
!11431 = distinct !DILexicalBlock(scope: !11428, file: !11166, line: 732, column: 3)
!11432 = !DILocation(line: 734, column: 3, scope: !11431)
!11433 = !DILocation(line: 736, column: 3, scope: !11381)
!11434 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8160, file: !8160, line: 4184, type: !3103, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !2018)
!11435 = !DILocation(line: 4186, column: 3, scope: !11434)
!11436 = !DILocation(line: 4187, column: 1, scope: !11434)
!11437 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8160, file: !8160, line: 4205, type: !3385, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !2018)
!11438 = !DILocation(line: 4207, column: 11, scope: !11437)
!11439 = !DILocation(line: 4207, column: 44, scope: !11437)
!11440 = !DILocation(line: 4207, column: 3, scope: !11437)
!11441 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8160, file: !8160, line: 3224, type: !6274, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !11442)
!11442 = !{!11443}
!11443 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11441, file: !8160, line: 3224, type: !110)
!11444 = !DILocation(line: 0, scope: !11441)
!11445 = !DILocation(line: 3226, column: 3, scope: !11441)
!11446 = !DILocation(line: 3227, column: 1, scope: !11441)
!11447 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8160, file: !8160, line: 3188, type: !6274, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !11448)
!11448 = !{!11449}
!11449 = !DILocalVariable(name: "Source", arg: 1, scope: !11447, file: !8160, line: 3188, type: !110)
!11450 = !DILocation(line: 0, scope: !11447)
!11451 = !DILocation(line: 3190, column: 3, scope: !11447)
!11452 = !DILocation(line: 3191, column: 1, scope: !11447)
!11453 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8160, file: !8160, line: 3204, type: !3385, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !2018)
!11454 = !DILocation(line: 3206, column: 21, scope: !11453)
!11455 = !DILocation(line: 3206, column: 3, scope: !11453)
!11456 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8160, file: !8160, line: 3240, type: !6274, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !11457)
!11457 = !{!11458}
!11458 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11456, file: !8160, line: 3240, type: !110)
!11459 = !DILocation(line: 0, scope: !11456)
!11460 = !DILocation(line: 3242, column: 3, scope: !11456)
!11461 = !DILocation(line: 3243, column: 1, scope: !11456)
!11462 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8160, file: !8160, line: 3256, type: !6274, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !11463)
!11463 = !{!11464}
!11464 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11462, file: !8160, line: 3256, type: !110)
!11465 = !DILocation(line: 0, scope: !11462)
!11466 = !DILocation(line: 3258, column: 3, scope: !11462)
!11467 = !DILocation(line: 3259, column: 1, scope: !11462)
!11468 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8160, file: !8160, line: 5153, type: !3385, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !2018)
!11469 = !DILocation(line: 5155, column: 11, scope: !11468)
!11470 = !DILocation(line: 5155, column: 47, scope: !11468)
!11471 = !DILocation(line: 5155, column: 3, scope: !11468)
!11472 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11166, file: !11166, line: 540, type: !11473, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !11475)
!11473 = !DISubroutineType(types: !11474)
!11474 = !{!11209, !110, !110, !11287, !11294}
!11475 = !{!11476, !11477, !11478, !11479, !11480, !11481}
!11476 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !11472, file: !11166, line: 540, type: !110)
!11477 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !11472, file: !11166, line: 540, type: !110)
!11478 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !11472, file: !11166, line: 541, type: !11287)
!11479 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !11472, file: !11166, line: 541, type: !11294)
!11480 = !DILocalVariable(name: "status", scope: !11472, file: !11166, line: 543, type: !11209)
!11481 = !DILocalVariable(name: "pllfreq", scope: !11472, file: !11166, line: 544, type: !110)
!11482 = !DILocation(line: 0, scope: !11472)
!11483 = !DILocation(line: 551, column: 6, scope: !11484)
!11484 = distinct !DILexicalBlock(scope: !11472, file: !11166, line: 551, column: 6)
!11485 = !DILocation(line: 551, column: 25, scope: !11484)
!11486 = !DILocation(line: 551, column: 6, scope: !11472)
!11487 = !DILocation(line: 554, column: 15, scope: !11488)
!11488 = distinct !DILexicalBlock(scope: !11484, file: !11166, line: 552, column: 3)
!11489 = !DILocation(line: 557, column: 8, scope: !11490)
!11490 = distinct !DILexicalBlock(scope: !11488, file: !11166, line: 557, column: 8)
!11491 = !DILocation(line: 557, column: 29, scope: !11490)
!11492 = !DILocation(line: 557, column: 8, scope: !11488)
!11493 = !DILocation(line: 560, column: 20, scope: !11494)
!11494 = distinct !DILexicalBlock(scope: !11495, file: !11166, line: 560, column: 10)
!11495 = distinct !DILexicalBlock(scope: !11490, file: !11166, line: 558, column: 5)
!11496 = !DILocation(line: 560, column: 10, scope: !11495)
!11497 = !DILocation(line: 562, column: 9, scope: !11498)
!11498 = distinct !DILexicalBlock(scope: !11494, file: !11166, line: 561, column: 7)
!11499 = !DILocation(line: 563, column: 7, scope: !11498)
!11500 = !DILocation(line: 566, column: 9, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !11494, file: !11166, line: 565, column: 7)
!11502 = !DILocation(line: 570, column: 7, scope: !11495)
!11503 = !DILocation(line: 571, column: 7, scope: !11495)
!11504 = !DILocation(line: 571, column: 14, scope: !11495)
!11505 = !DILocation(line: 571, column: 35, scope: !11495)
!11506 = distinct !{!11506, !11503, !11507}
!11507 = !DILocation(line: 574, column: 7, scope: !11495)
!11508 = !DILocation(line: 578, column: 76, scope: !11488)
!11509 = !DILocation(line: 578, column: 103, scope: !11488)
!11510 = !DILocation(line: 579, column: 54, scope: !11488)
!11511 = !DILocation(line: 578, column: 5, scope: !11488)
!11512 = !DILocation(line: 582, column: 14, scope: !11488)
!11513 = !DILocation(line: 583, column: 3, scope: !11488)
!11514 = !DILocation(line: 0, scope: !11484)
!11515 = !DILocation(line: 590, column: 3, scope: !11472)
!11516 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8160, file: !8160, line: 2969, type: !3385, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !2018)
!11517 = !DILocation(line: 2971, column: 11, scope: !11516)
!11518 = !DILocation(line: 2971, column: 44, scope: !11516)
!11519 = !DILocation(line: 2971, column: 3, scope: !11516)
!11520 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8160, file: !8160, line: 2929, type: !3103, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !2018)
!11521 = !DILocation(line: 2931, column: 3, scope: !11520)
!11522 = !DILocation(line: 2932, column: 1, scope: !11520)
!11523 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8160, file: !8160, line: 2939, type: !3103, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !2018)
!11524 = !DILocation(line: 2941, column: 3, scope: !11523)
!11525 = !DILocation(line: 2942, column: 1, scope: !11523)
!11526 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8160, file: !8160, line: 2949, type: !3103, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !2018)
!11527 = !DILocation(line: 2951, column: 3, scope: !11526)
!11528 = !DILocation(line: 2952, column: 1, scope: !11526)
!11529 = distinct !DISubprogram(name: "z_device_state_init", scope: !11530, file: !11530, line: 23, type: !3103, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !11531)
!11530 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11531 = !{!11532}
!11532 = !DILocalVariable(name: "dev", scope: !11529, file: !11530, line: 25, type: !11533)
!11533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11534, size: 32)
!11534 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11535)
!11535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !321, line: 378, size: 192, elements: !11536)
!11536 = !{!11537, !11538, !11539, !11540, !11546, !11547}
!11537 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11535, file: !321, line: 380, baseType: !324, size: 32)
!11538 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !11535, file: !321, line: 382, baseType: !13, size: 32, offset: 32)
!11539 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !11535, file: !321, line: 384, baseType: !13, size: 32, offset: 64)
!11540 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11535, file: !321, line: 386, baseType: !11541, size: 32, offset: 96)
!11541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11542, size: 32)
!11542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !321, line: 351, size: 16, elements: !11543)
!11543 = !{!11544, !11545}
!11544 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !11542, file: !321, line: 359, baseType: !167, size: 8)
!11545 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !11542, file: !321, line: 364, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!11546 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11535, file: !321, line: 388, baseType: !108, size: 32, offset: 128)
!11547 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !11535, file: !321, line: 396, baseType: !337, size: 32, offset: 160)
!11548 = !DILocation(line: 0, scope: !11529)
!11549 = !DILocation(line: 31, column: 1, scope: !11529)
!11550 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !11530, file: !11530, line: 33, type: !11551, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !11553)
!11551 = !DISubroutineType(types: !11552)
!11552 = !{!11533, !324}
!11553 = !{!11554, !11555}
!11554 = !DILocalVariable(name: "name", arg: 1, scope: !11550, file: !11530, line: 33, type: !324)
!11555 = !DILocalVariable(name: "dev", scope: !11550, file: !11530, line: 35, type: !11533)
!11556 = !DILocation(line: 0, scope: !11550)
!11557 = !DILocation(line: 40, column: 12, scope: !11558)
!11558 = distinct !DILexicalBlock(scope: !11550, file: !11530, line: 40, column: 6)
!11559 = !DILocation(line: 40, column: 21, scope: !11558)
!11560 = !DILocation(line: 40, column: 25, scope: !11558)
!11561 = !DILocation(line: 40, column: 33, scope: !11558)
!11562 = !DILocation(line: 40, column: 6, scope: !11550)
!11563 = !DILocation(line: 55, column: 2, scope: !11564)
!11564 = distinct !DILexicalBlock(scope: !11550, file: !11530, line: 55, column: 2)
!11565 = !DILocation(line: 50, column: 7, scope: !11566)
!11566 = distinct !DILexicalBlock(scope: !11567, file: !11530, line: 50, column: 7)
!11567 = distinct !DILexicalBlock(scope: !11568, file: !11530, line: 49, column: 57)
!11568 = distinct !DILexicalBlock(scope: !11569, file: !11530, line: 49, column: 2)
!11569 = distinct !DILexicalBlock(scope: !11550, file: !11530, line: 49, column: 2)
!11570 = !DILocation(line: 50, column: 30, scope: !11566)
!11571 = !DILocation(line: 50, column: 39, scope: !11566)
!11572 = !DILocation(line: 50, column: 44, scope: !11566)
!11573 = !DILocation(line: 50, column: 7, scope: !11567)
!11574 = !DILocation(line: 49, column: 53, scope: !11568)
!11575 = !DILocation(line: 49, column: 33, scope: !11568)
!11576 = !DILocation(line: 49, column: 2, scope: !11569)
!11577 = distinct !{!11577, !11576, !11578}
!11578 = !DILocation(line: 53, column: 2, scope: !11569)
!11579 = !DILocation(line: 56, column: 7, scope: !11580)
!11580 = distinct !DILexicalBlock(scope: !11581, file: !11530, line: 56, column: 7)
!11581 = distinct !DILexicalBlock(scope: !11582, file: !11530, line: 55, column: 57)
!11582 = distinct !DILexicalBlock(scope: !11564, file: !11530, line: 55, column: 2)
!11583 = !DILocation(line: 56, column: 30, scope: !11580)
!11584 = !DILocation(line: 56, column: 52, scope: !11580)
!11585 = !DILocation(line: 56, column: 34, scope: !11580)
!11586 = !DILocation(line: 56, column: 58, scope: !11580)
!11587 = !DILocation(line: 56, column: 7, scope: !11581)
!11588 = !DILocation(line: 55, column: 53, scope: !11582)
!11589 = !DILocation(line: 55, column: 33, scope: !11582)
!11590 = distinct !{!11590, !11563, !11591}
!11591 = !DILocation(line: 59, column: 2, scope: !11564)
!11592 = !DILocation(line: 62, column: 1, scope: !11550)
!11593 = distinct !DISubprogram(name: "z_device_is_ready", scope: !11530, file: !11530, line: 93, type: !11594, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !11596)
!11594 = !DISubroutineType(types: !11595)
!11595 = !{!334, !11533}
!11596 = !{!11597}
!11597 = !DILocalVariable(name: "dev", arg: 1, scope: !11593, file: !11530, line: 93, type: !11533)
!11598 = !DILocation(line: 0, scope: !11593)
!11599 = !DILocation(line: 99, column: 10, scope: !11600)
!11600 = distinct !DILexicalBlock(scope: !11593, file: !11530, line: 99, column: 6)
!11601 = !DILocation(line: 99, column: 6, scope: !11593)
!11602 = !DILocation(line: 103, column: 14, scope: !11593)
!11603 = !DILocation(line: 103, column: 21, scope: !11593)
!11604 = !DILocation(line: 103, column: 33, scope: !11593)
!11605 = !DILocation(line: 103, column: 49, scope: !11593)
!11606 = !DILocation(line: 103, column: 58, scope: !11593)
!11607 = !DILocation(line: 104, column: 1, scope: !11593)
!11608 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !11530, file: !11530, line: 87, type: !11609, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !11612)
!11609 = !DISubroutineType(types: !11610)
!11610 = !{!235, !11611}
!11611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11533, size: 32)
!11612 = !{!11613}
!11613 = !DILocalVariable(name: "devices", arg: 1, scope: !11608, file: !11530, line: 87, type: !11611)
!11614 = !DILocation(line: 0, scope: !11608)
!11615 = !DILocation(line: 89, column: 11, scope: !11608)
!11616 = !DILocation(line: 90, column: 2, scope: !11608)
!11617 = distinct !DISubprogram(name: "device_required_foreach", scope: !11530, file: !11530, line: 125, type: !11618, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !11624)
!11618 = !DISubroutineType(types: !11619)
!11619 = !{!109, !11533, !11620, !108}
!11620 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !321, line: 471, baseType: !11621)
!11621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11622, size: 32)
!11622 = !DISubroutineType(types: !11623)
!11623 = !{!109, !11533, !108}
!11624 = !{!11625, !11626, !11627, !11628, !11629}
!11625 = !DILocalVariable(name: "dev", arg: 1, scope: !11617, file: !11530, line: 125, type: !11533)
!11626 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11617, file: !11530, line: 126, type: !11620)
!11627 = !DILocalVariable(name: "context", arg: 3, scope: !11617, file: !11530, line: 127, type: !108)
!11628 = !DILocalVariable(name: "handle_count", scope: !11617, file: !11530, line: 129, type: !235)
!11629 = !DILocalVariable(name: "handles", scope: !11617, file: !11530, line: 130, type: !337)
!11630 = !DILocation(line: 0, scope: !11617)
!11631 = !DILocation(line: 129, column: 2, scope: !11617)
!11632 = !DILocation(line: 129, column: 9, scope: !11617)
!11633 = !DILocation(line: 130, column: 35, scope: !11617)
!11634 = !DILocation(line: 132, column: 33, scope: !11617)
!11635 = !DILocation(line: 132, column: 9, scope: !11617)
!11636 = !DILocation(line: 133, column: 1, scope: !11617)
!11637 = !DILocation(line: 132, column: 2, scope: !11617)
!11638 = distinct !DISubprogram(name: "device_required_handles_get", scope: !321, file: !321, line: 493, type: !11639, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !11641)
!11639 = !DISubroutineType(types: !11640)
!11640 = !{!337, !11533, !2559}
!11641 = !{!11642, !11643, !11644, !11645}
!11642 = !DILocalVariable(name: "dev", arg: 1, scope: !11638, file: !321, line: 493, type: !11533)
!11643 = !DILocalVariable(name: "count", arg: 2, scope: !11638, file: !321, line: 493, type: !2559)
!11644 = !DILocalVariable(name: "rv", scope: !11638, file: !321, line: 495, type: !337)
!11645 = !DILocalVariable(name: "i", scope: !11646, file: !321, line: 498, type: !235)
!11646 = distinct !DILexicalBlock(scope: !11647, file: !321, line: 497, column: 18)
!11647 = distinct !DILexicalBlock(scope: !11638, file: !321, line: 497, column: 6)
!11648 = !DILocation(line: 0, scope: !11638)
!11649 = !DILocation(line: 495, column: 35, scope: !11638)
!11650 = !DILocation(line: 497, column: 9, scope: !11647)
!11651 = !DILocation(line: 497, column: 6, scope: !11638)
!11652 = !DILocation(line: 0, scope: !11646)
!11653 = !DILocation(line: 500, column: 11, scope: !11646)
!11654 = !DILocation(line: 500, column: 40, scope: !11646)
!11655 = !DILocation(line: 502, column: 4, scope: !11656)
!11656 = distinct !DILexicalBlock(scope: !11646, file: !321, line: 501, column: 40)
!11657 = distinct !{!11657, !11658, !11659}
!11658 = !DILocation(line: 500, column: 3, scope: !11646)
!11659 = !DILocation(line: 503, column: 3, scope: !11646)
!11660 = !DILocation(line: 504, column: 10, scope: !11646)
!11661 = !DILocation(line: 505, column: 2, scope: !11646)
!11662 = !DILocation(line: 507, column: 2, scope: !11638)
!11663 = distinct !DISubprogram(name: "device_visitor", scope: !11530, file: !11530, line: 106, type: !11664, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !11666)
!11664 = !DISubroutineType(types: !11665)
!11665 = !{!109, !337, !235, !11620, !108}
!11666 = !{!11667, !11668, !11669, !11670, !11671, !11673, !11676, !11677}
!11667 = !DILocalVariable(name: "handles", arg: 1, scope: !11663, file: !11530, line: 106, type: !337)
!11668 = !DILocalVariable(name: "handle_count", arg: 2, scope: !11663, file: !11530, line: 107, type: !235)
!11669 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !11663, file: !11530, line: 108, type: !11620)
!11670 = !DILocalVariable(name: "context", arg: 4, scope: !11663, file: !11530, line: 109, type: !108)
!11671 = !DILocalVariable(name: "i", scope: !11672, file: !11530, line: 112, type: !235)
!11672 = distinct !DILexicalBlock(scope: !11663, file: !11530, line: 112, column: 2)
!11673 = !DILocalVariable(name: "dh", scope: !11674, file: !11530, line: 113, type: !339)
!11674 = distinct !DILexicalBlock(scope: !11675, file: !11530, line: 112, column: 44)
!11675 = distinct !DILexicalBlock(scope: !11672, file: !11530, line: 112, column: 2)
!11676 = !DILocalVariable(name: "rdev", scope: !11674, file: !11530, line: 114, type: !11533)
!11677 = !DILocalVariable(name: "rc", scope: !11674, file: !11530, line: 115, type: !109)
!11678 = !DILocation(line: 0, scope: !11663)
!11679 = !DILocation(line: 0, scope: !11672)
!11680 = !DILocation(line: 112, column: 23, scope: !11675)
!11681 = !DILocation(line: 112, column: 2, scope: !11672)
!11682 = distinct !{!11682, !11681, !11683}
!11683 = !DILocation(line: 120, column: 2, scope: !11672)
!11684 = !DILocation(line: 113, column: 24, scope: !11674)
!11685 = !DILocation(line: 0, scope: !11674)
!11686 = !DILocation(line: 114, column: 31, scope: !11674)
!11687 = !DILocation(line: 115, column: 12, scope: !11674)
!11688 = !DILocation(line: 117, column: 10, scope: !11689)
!11689 = distinct !DILexicalBlock(scope: !11674, file: !11530, line: 117, column: 7)
!11690 = !DILocation(line: 112, column: 39, scope: !11675)
!11691 = !DILocation(line: 123, column: 1, scope: !11663)
!11692 = distinct !DISubprogram(name: "device_from_handle", scope: !321, file: !321, line: 439, type: !11693, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !11695)
!11693 = !DISubroutineType(types: !11694)
!11694 = !{!11533, !339}
!11695 = !{!11696, !11697, !11698}
!11696 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !11692, file: !321, line: 439, type: !339)
!11697 = !DILocalVariable(name: "dev", scope: !11692, file: !321, line: 443, type: !11533)
!11698 = !DILocalVariable(name: "numdev", scope: !11692, file: !321, line: 444, type: !235)
!11699 = !DILocation(line: 0, scope: !11692)
!11700 = !DILocation(line: 446, column: 7, scope: !11701)
!11701 = distinct !DILexicalBlock(scope: !11692, file: !321, line: 446, column: 6)
!11702 = !DILocation(line: 446, column: 18, scope: !11701)
!11703 = !DILocation(line: 446, column: 23, scope: !11701)
!11704 = !DILocation(line: 450, column: 2, scope: !11692)
!11705 = distinct !DISubprogram(name: "device_supported_foreach", scope: !11530, file: !11530, line: 135, type: !11618, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !11706)
!11706 = !{!11707, !11708, !11709, !11710, !11711}
!11707 = !DILocalVariable(name: "dev", arg: 1, scope: !11705, file: !11530, line: 135, type: !11533)
!11708 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11705, file: !11530, line: 136, type: !11620)
!11709 = !DILocalVariable(name: "context", arg: 3, scope: !11705, file: !11530, line: 137, type: !108)
!11710 = !DILocalVariable(name: "handle_count", scope: !11705, file: !11530, line: 139, type: !235)
!11711 = !DILocalVariable(name: "handles", scope: !11705, file: !11530, line: 140, type: !337)
!11712 = !DILocation(line: 0, scope: !11705)
!11713 = !DILocation(line: 139, column: 2, scope: !11705)
!11714 = !DILocation(line: 139, column: 9, scope: !11705)
!11715 = !DILocation(line: 140, column: 35, scope: !11705)
!11716 = !DILocation(line: 142, column: 33, scope: !11705)
!11717 = !DILocation(line: 142, column: 9, scope: !11705)
!11718 = !DILocation(line: 143, column: 1, scope: !11705)
!11719 = !DILocation(line: 142, column: 2, scope: !11705)
!11720 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !321, file: !321, line: 573, type: !11639, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !11721)
!11721 = !{!11722, !11723, !11724, !11725, !11726}
!11722 = !DILocalVariable(name: "dev", arg: 1, scope: !11720, file: !321, line: 573, type: !11533)
!11723 = !DILocalVariable(name: "count", arg: 2, scope: !11720, file: !321, line: 573, type: !2559)
!11724 = !DILocalVariable(name: "rv", scope: !11720, file: !321, line: 575, type: !337)
!11725 = !DILocalVariable(name: "region", scope: !11720, file: !321, line: 576, type: !235)
!11726 = !DILocalVariable(name: "i", scope: !11720, file: !321, line: 577, type: !235)
!11727 = !DILocation(line: 0, scope: !11720)
!11728 = !DILocation(line: 575, column: 35, scope: !11720)
!11729 = !DILocation(line: 579, column: 9, scope: !11730)
!11730 = distinct !DILexicalBlock(scope: !11720, file: !321, line: 579, column: 6)
!11731 = !DILocation(line: 579, column: 6, scope: !11720)
!11732 = !DILocation(line: 582, column: 8, scope: !11733)
!11733 = distinct !DILexicalBlock(scope: !11734, file: !321, line: 582, column: 8)
!11734 = distinct !DILexicalBlock(scope: !11735, file: !321, line: 581, column: 23)
!11735 = distinct !DILexicalBlock(scope: !11730, file: !321, line: 579, column: 18)
!11736 = !DILocation(line: 582, column: 12, scope: !11733)
!11737 = !DILocation(line: 585, column: 6, scope: !11734)
!11738 = !DILocation(line: 0, scope: !11735)
!11739 = !DILocation(line: 581, column: 17, scope: !11735)
!11740 = !DILocation(line: 581, column: 3, scope: !11735)
!11741 = !DILocation(line: 588, column: 10, scope: !11735)
!11742 = !DILocation(line: 588, column: 16, scope: !11735)
!11743 = !DILocation(line: 589, column: 4, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11735, file: !321, line: 588, column: 39)
!11745 = !DILocation(line: 588, column: 3, scope: !11735)
!11746 = distinct !{!11746, !11745, !11747}
!11747 = !DILocation(line: 590, column: 3, scope: !11735)
!11748 = !DILocation(line: 591, column: 10, scope: !11735)
!11749 = !DILocation(line: 592, column: 2, scope: !11735)
!11750 = !DILocation(line: 575, column: 25, scope: !11720)
!11751 = !DILocation(line: 594, column: 2, scope: !11720)
!11752 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1800, file: !1800, line: 49, type: !11753, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1797, retainedNodes: !2018)
!11753 = !DISubroutineType(types: !11754)
!11754 = !{!2553}
!11755 = !DILocation(line: 51, column: 10, scope: !11752)
!11756 = !DILocation(line: 51, column: 20, scope: !11752)
!11757 = !DILocation(line: 51, column: 2, scope: !11752)
!11758 = distinct !DISubprogram(name: "coredump", scope: !3070, file: !3070, line: 209, type: !11759, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3066, retainedNodes: !11916)
!11759 = !DISubroutineType(types: !11760)
!11760 = !{null, !32, !11761, !11805}
!11761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11762, size: 32)
!11762 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11763)
!11763 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2686, line: 141, baseType: !11764)
!11764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2686, line: 97, size: 256, elements: !11765)
!11765 = !{!11766}
!11766 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !11764, file: !2686, line: 107, baseType: !11767, size: 256)
!11767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2686, line: 98, size: 256, elements: !11768)
!11768 = !{!11769, !11774, !11779, !11784, !11789, !11794, !11799, !11804}
!11769 = !DIDerivedType(tag: DW_TAG_member, scope: !11767, file: !2686, line: 99, baseType: !11770, size: 32)
!11770 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11767, file: !2686, line: 99, size: 32, elements: !11771)
!11771 = !{!11772, !11773}
!11772 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !11770, file: !2686, line: 99, baseType: !110, size: 32)
!11773 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !11770, file: !2686, line: 99, baseType: !110, size: 32)
!11774 = !DIDerivedType(tag: DW_TAG_member, scope: !11767, file: !2686, line: 100, baseType: !11775, size: 32, offset: 32)
!11775 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11767, file: !2686, line: 100, size: 32, elements: !11776)
!11776 = !{!11777, !11778}
!11777 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !11775, file: !2686, line: 100, baseType: !110, size: 32)
!11778 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !11775, file: !2686, line: 100, baseType: !110, size: 32)
!11779 = !DIDerivedType(tag: DW_TAG_member, scope: !11767, file: !2686, line: 101, baseType: !11780, size: 32, offset: 64)
!11780 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11767, file: !2686, line: 101, size: 32, elements: !11781)
!11781 = !{!11782, !11783}
!11782 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !11780, file: !2686, line: 101, baseType: !110, size: 32)
!11783 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !11780, file: !2686, line: 101, baseType: !110, size: 32)
!11784 = !DIDerivedType(tag: DW_TAG_member, scope: !11767, file: !2686, line: 102, baseType: !11785, size: 32, offset: 96)
!11785 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11767, file: !2686, line: 102, size: 32, elements: !11786)
!11786 = !{!11787, !11788}
!11787 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !11785, file: !2686, line: 102, baseType: !110, size: 32)
!11788 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !11785, file: !2686, line: 102, baseType: !110, size: 32)
!11789 = !DIDerivedType(tag: DW_TAG_member, scope: !11767, file: !2686, line: 103, baseType: !11790, size: 32, offset: 128)
!11790 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11767, file: !2686, line: 103, size: 32, elements: !11791)
!11791 = !{!11792, !11793}
!11792 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !11790, file: !2686, line: 103, baseType: !110, size: 32)
!11793 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !11790, file: !2686, line: 103, baseType: !110, size: 32)
!11794 = !DIDerivedType(tag: DW_TAG_member, scope: !11767, file: !2686, line: 104, baseType: !11795, size: 32, offset: 160)
!11795 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11767, file: !2686, line: 104, size: 32, elements: !11796)
!11796 = !{!11797, !11798}
!11797 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !11795, file: !2686, line: 104, baseType: !110, size: 32)
!11798 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !11795, file: !2686, line: 104, baseType: !110, size: 32)
!11799 = !DIDerivedType(tag: DW_TAG_member, scope: !11767, file: !2686, line: 105, baseType: !11800, size: 32, offset: 192)
!11800 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11767, file: !2686, line: 105, size: 32, elements: !11801)
!11801 = !{!11802, !11803}
!11802 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !11800, file: !2686, line: 105, baseType: !110, size: 32)
!11803 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !11800, file: !2686, line: 105, baseType: !110, size: 32)
!11804 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !11767, file: !2686, line: 106, baseType: !110, size: 32, offset: 224)
!11805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11806, size: 32)
!11806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !11807)
!11807 = !{!11808, !11866, !11878, !11879, !11880, !11887, !11888, !11889, !11890, !11896, !11911}
!11808 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !11806, file: !145, line: 247, baseType: !11809, size: 384)
!11809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !11810)
!11810 = !{!11811, !11835, !11842, !11843, !11844, !11853, !11854, !11855}
!11811 = !DIDerivedType(tag: DW_TAG_member, scope: !11809, file: !145, line: 60, baseType: !11812, size: 64)
!11812 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11809, file: !145, line: 60, size: 64, elements: !11813)
!11813 = !{!11814, !11829}
!11814 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !11812, file: !145, line: 61, baseType: !11815, size: 64)
!11815 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !11816)
!11816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !11817)
!11817 = !{!11818, !11824}
!11818 = !DIDerivedType(tag: DW_TAG_member, scope: !11816, file: !128, line: 38, baseType: !11819, size: 32)
!11819 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11816, file: !128, line: 38, size: 32, elements: !11820)
!11820 = !{!11821, !11823}
!11821 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11819, file: !128, line: 39, baseType: !11822, size: 32)
!11822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11816, size: 32)
!11823 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11819, file: !128, line: 40, baseType: !11822, size: 32)
!11824 = !DIDerivedType(tag: DW_TAG_member, scope: !11816, file: !128, line: 42, baseType: !11825, size: 32, offset: 32)
!11825 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11816, file: !128, line: 42, size: 32, elements: !11826)
!11826 = !{!11827, !11828}
!11827 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11825, file: !128, line: 43, baseType: !11822, size: 32)
!11828 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11825, file: !128, line: 44, baseType: !11822, size: 32)
!11829 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !11812, file: !145, line: 62, baseType: !11830, size: 64)
!11830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !11831)
!11831 = !{!11832}
!11832 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !11830, file: !157, line: 50, baseType: !11833, size: 64)
!11833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11834, size: 64, elements: !162)
!11834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11830, size: 32)
!11835 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !11809, file: !145, line: 68, baseType: !11836, size: 32, offset: 64)
!11836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11837, size: 32)
!11837 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !11838)
!11838 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !11839)
!11839 = !{!11840}
!11840 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !11838, file: !123, line: 232, baseType: !11841, size: 64)
!11841 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !11816)
!11842 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !11809, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!11843 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !11809, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!11844 = !DIDerivedType(tag: DW_TAG_member, scope: !11809, file: !145, line: 90, baseType: !11845, size: 16, offset: 112)
!11845 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11809, file: !145, line: 90, size: 16, elements: !11846)
!11846 = !{!11847, !11852}
!11847 = !DIDerivedType(tag: DW_TAG_member, scope: !11845, file: !145, line: 91, baseType: !11848, size: 16)
!11848 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11845, file: !145, line: 91, size: 16, elements: !11849)
!11849 = !{!11850, !11851}
!11850 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !11848, file: !145, line: 96, baseType: !177, size: 8)
!11851 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !11848, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!11852 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !11845, file: !145, line: 100, baseType: !181, size: 16)
!11853 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !11809, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!11854 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !11809, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!11855 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !11809, file: !145, line: 131, baseType: !11856, size: 192, offset: 192)
!11856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !11857)
!11857 = !{!11858, !11859, !11865}
!11858 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !11856, file: !123, line: 245, baseType: !11815, size: 64)
!11859 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !11856, file: !123, line: 246, baseType: !11860, size: 32, offset: 64)
!11860 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !11861)
!11861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11862, size: 32)
!11862 = !DISubroutineType(types: !11863)
!11863 = !{null, !11864}
!11864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11856, size: 32)
!11865 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !11856, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!11866 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !11806, file: !145, line: 250, baseType: !11867, size: 288, offset: 384)
!11867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !11868)
!11868 = !{!11869, !11870, !11871, !11872, !11873, !11874, !11875, !11876, !11877}
!11869 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !11867, file: !198, line: 26, baseType: !110, size: 32)
!11870 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !11867, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!11871 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !11867, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!11872 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !11867, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!11873 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !11867, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!11874 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !11867, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!11875 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !11867, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!11876 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !11867, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!11877 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !11867, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!11878 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !11806, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!11879 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !11806, file: !145, line: 256, baseType: !11837, size: 64, offset: 704)
!11880 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !11806, file: !145, line: 271, baseType: !11881, size: 128, offset: 768)
!11881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !11882)
!11882 = !{!11883, !11884, !11885, !11886}
!11883 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !11881, file: !145, line: 35, baseType: !215, size: 32)
!11884 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !11881, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!11885 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !11881, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!11886 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !11881, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!11887 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !11806, file: !145, line: 274, baseType: !11805, size: 32, offset: 896)
!11888 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11806, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!11889 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !11806, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!11890 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !11806, file: !145, line: 300, baseType: !11891, size: 96, offset: 1216)
!11891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !11892)
!11892 = !{!11893, !11894, !11895}
!11893 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !11891, file: !145, line: 153, baseType: !22, size: 32)
!11894 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !11891, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!11895 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !11891, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!11896 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !11806, file: !145, line: 325, baseType: !11897, size: 32, offset: 1312)
!11897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11898, size: 32)
!11898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !11899)
!11899 = !{!11900, !11906, !11907}
!11900 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11898, file: !119, line: 5074, baseType: !11901, size: 96)
!11901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !11902)
!11902 = !{!11903, !11904, !11905}
!11903 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11901, file: !244, line: 57, baseType: !247, size: 32)
!11904 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !11901, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!11905 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !11901, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!11906 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !11898, file: !119, line: 5075, baseType: !11837, size: 64, offset: 96)
!11907 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11898, file: !119, line: 5076, baseType: !11908, size: 32, offset: 160)
!11908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !11909)
!11909 = !{!11910}
!11910 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !11908, file: !254, line: 52, baseType: !22, size: 32)
!11911 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !11806, file: !145, line: 343, baseType: !11912, size: 64, offset: 1344)
!11912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !11913)
!11913 = !{!11914, !11915}
!11914 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !11912, file: !198, line: 63, baseType: !110, size: 32)
!11915 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !11912, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!11916 = !{!11917, !11918, !11919}
!11917 = !DILocalVariable(name: "reason", arg: 1, scope: !11758, file: !3070, line: 209, type: !32)
!11918 = !DILocalVariable(name: "esf", arg: 2, scope: !11758, file: !3070, line: 209, type: !11761)
!11919 = !DILocalVariable(name: "thread", arg: 3, scope: !11758, file: !3070, line: 210, type: !11805)
!11920 = !DILocation(line: 0, scope: !11758)
!11921 = !DILocation(line: 212, column: 1, scope: !11758)
!11922 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3070, file: !3070, line: 214, type: !11923, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3066, retainedNodes: !11925)
!11923 = !DISubroutineType(types: !11924)
!11924 = !{null, !22, !22}
!11925 = !{!11926, !11927}
!11926 = !DILocalVariable(name: "start_addr", arg: 1, scope: !11922, file: !3070, line: 214, type: !22)
!11927 = !DILocalVariable(name: "end_addr", arg: 2, scope: !11922, file: !3070, line: 214, type: !22)
!11928 = !DILocation(line: 0, scope: !11922)
!11929 = !DILocation(line: 216, column: 1, scope: !11922)
!11930 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3070, file: !3070, line: 218, type: !11931, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3066, retainedNodes: !11933)
!11931 = !DISubroutineType(types: !11932)
!11932 = !{null, !1841, !235}
!11933 = !{!11934, !11935}
!11934 = !DILocalVariable(name: "buf", arg: 1, scope: !11930, file: !3070, line: 218, type: !1841)
!11935 = !DILocalVariable(name: "buflen", arg: 2, scope: !11930, file: !3070, line: 218, type: !235)
!11936 = !DILocation(line: 0, scope: !11930)
!11937 = !DILocation(line: 220, column: 1, scope: !11930)
!11938 = distinct !DISubprogram(name: "coredump_query", scope: !3070, file: !3070, line: 222, type: !11939, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3066, retainedNodes: !11941)
!11939 = !DISubroutineType(types: !11940)
!11940 = !{!109, !3069, !108}
!11941 = !{!11942, !11943}
!11942 = !DILocalVariable(name: "query_id", arg: 1, scope: !11938, file: !3070, line: 222, type: !3069)
!11943 = !DILocalVariable(name: "arg", arg: 2, scope: !11938, file: !3070, line: 222, type: !108)
!11944 = !DILocation(line: 0, scope: !11938)
!11945 = !DILocation(line: 224, column: 2, scope: !11938)
!11946 = distinct !DISubprogram(name: "coredump_cmd", scope: !3070, file: !3070, line: 227, type: !11947, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3066, retainedNodes: !11949)
!11947 = !DISubroutineType(types: !11948)
!11948 = !{!109, !3076, !108}
!11949 = !{!11950, !11951}
!11950 = !DILocalVariable(name: "query_id", arg: 1, scope: !11946, file: !3070, line: 227, type: !3076)
!11951 = !DILocalVariable(name: "arg", arg: 2, scope: !11946, file: !3070, line: 227, type: !108)
!11952 = !DILocation(line: 0, scope: !11946)
!11953 = !DILocation(line: 229, column: 2, scope: !11946)
!11954 = distinct !DISubprogram(name: "arch_system_halt", scope: !11955, file: !11955, line: 23, type: !6016, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3066, retainedNodes: !11956)
!11955 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11956 = !{!11957}
!11957 = !DILocalVariable(name: "reason", arg: 1, scope: !11954, file: !11955, line: 23, type: !32)
!11958 = !DILocation(line: 0, scope: !11954)
!11959 = !DILocation(line: 55, column: 2, scope: !11960, inlinedAt: !11964)
!11960 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6005, file: !6005, line: 42, type: !6006, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3066, retainedNodes: !11961)
!11961 = !{!11962, !11963}
!11962 = !DILocalVariable(name: "key", scope: !11960, file: !6005, line: 44, type: !32)
!11963 = !DILocalVariable(name: "tmp", scope: !11960, file: !6005, line: 53, type: !32)
!11964 = distinct !DILocation(line: 31, column: 8, scope: !11954)
!11965 = !{i64 2243326}
!11966 = !DILocation(line: 0, scope: !11960, inlinedAt: !11964)
!11967 = !DILocation(line: 32, column: 2, scope: !11954)
!11968 = !DILocation(line: 32, column: 2, scope: !11969)
!11969 = distinct !DILexicalBlock(scope: !11970, file: !11955, line: 32, column: 2)
!11970 = distinct !DILexicalBlock(scope: !11954, file: !11955, line: 32, column: 2)
!11971 = distinct !{!11971, !11972, !11973}
!11972 = !DILocation(line: 32, column: 2, scope: !11970)
!11973 = !DILocation(line: 34, column: 2, scope: !11970)
!11974 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !11955, file: !11955, line: 39, type: !11975, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3066, retainedNodes: !11977)
!11975 = !DISubroutineType(types: !11976)
!11976 = !{null, !32, !11761}
!11977 = !{!11978, !11979}
!11978 = !DILocalVariable(name: "reason", arg: 1, scope: !11974, file: !11955, line: 39, type: !32)
!11979 = !DILocalVariable(name: "esf", arg: 2, scope: !11974, file: !11955, line: 40, type: !11761)
!11980 = !DILocation(line: 0, scope: !11974)
!11981 = !DILocation(line: 46, column: 2, scope: !11974)
!11982 = distinct !DISubprogram(name: "k_fatal_halt", scope: !11955, file: !11955, line: 81, type: !6016, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3066, retainedNodes: !11983)
!11983 = !{!11984}
!11984 = !DILocalVariable(name: "reason", arg: 1, scope: !11982, file: !11955, line: 81, type: !32)
!11985 = !DILocation(line: 0, scope: !11982)
!11986 = !DILocation(line: 83, column: 2, scope: !11982)
!11987 = distinct !DISubprogram(name: "z_fatal_error", scope: !11955, file: !11955, line: 96, type: !11975, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3066, retainedNodes: !11988)
!11988 = !{!11989, !11990, !11991, !11992}
!11989 = !DILocalVariable(name: "reason", arg: 1, scope: !11987, file: !11955, line: 96, type: !32)
!11990 = !DILocalVariable(name: "esf", arg: 2, scope: !11987, file: !11955, line: 96, type: !11761)
!11991 = !DILocalVariable(name: "key", scope: !11987, file: !11955, line: 102, type: !32)
!11992 = !DILocalVariable(name: "thread", scope: !11987, file: !11955, line: 103, type: !11805)
!11993 = !DILocation(line: 0, scope: !11987)
!11994 = !DILocation(line: 55, column: 2, scope: !11960, inlinedAt: !11995)
!11995 = distinct !DILocation(line: 102, column: 21, scope: !11987)
!11996 = !DILocation(line: 0, scope: !11960, inlinedAt: !11995)
!11997 = !DILocation(line: 131, column: 2, scope: !11987)
!11998 = !DILocation(line: 147, column: 3, scope: !11999)
!11999 = distinct !DILexicalBlock(scope: !12000, file: !11955, line: 147, column: 3)
!12000 = distinct !DILexicalBlock(scope: !12001, file: !11955, line: 147, column: 3)
!12001 = distinct !DILexicalBlock(scope: !12002, file: !11955, line: 146, column: 32)
!12002 = distinct !DILexicalBlock(scope: !11987, file: !11955, line: 146, column: 6)
!12003 = !DILocation(line: 147, column: 3, scope: !12000)
!12004 = !DILocation(line: 147, column: 3, scope: !12005)
!12005 = distinct !DILexicalBlock(scope: !11999, file: !11955, line: 147, column: 3)
!12006 = !DILocation(line: 104, column: 4, scope: !11987)
!12007 = !DILocalVariable(name: "key", arg: 1, scope: !12008, file: !6005, line: 84, type: !32)
!12008 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6005, file: !6005, line: 84, type: !6016, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3066, retainedNodes: !12009)
!12009 = !{!12007}
!12010 = !DILocation(line: 0, scope: !12008, inlinedAt: !12011)
!12011 = distinct !DILocation(line: 186, column: 2, scope: !11987)
!12012 = !DILocation(line: 95, column: 2, scope: !12008, inlinedAt: !12011)
!12013 = !{i64 2244143}
!12014 = !DILocation(line: 189, column: 3, scope: !12015)
!12015 = distinct !DILexicalBlock(scope: !12016, file: !11955, line: 188, column: 41)
!12016 = distinct !DILexicalBlock(scope: !11987, file: !11955, line: 188, column: 6)
!12017 = !DILocation(line: 191, column: 1, scope: !11987)
!12018 = distinct !DISubprogram(name: "k_current_get", scope: !119, file: !119, line: 530, type: !12019, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3066, retainedNodes: !2018)
!12019 = !DISubroutineType(types: !12020)
!12020 = !{!12021}
!12021 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !145, line: 347, baseType: !11805)
!12022 = !DILocation(line: 535, column: 9, scope: !12018)
!12023 = !DILocation(line: 535, column: 2, scope: !12018)
!12024 = distinct !DISubprogram(name: "k_thread_abort", scope: !3288, file: !3288, line: 188, type: !12025, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3066, retainedNodes: !12027)
!12025 = !DISubroutineType(types: !12026)
!12026 = !{null, !12021}
!12027 = !{!12028}
!12028 = !DILocalVariable(name: "thread", arg: 1, scope: !12024, file: !3288, line: 188, type: !12021)
!12029 = !DILocation(line: 0, scope: !12024)
!12030 = !DILocation(line: 197, column: 2, scope: !12031)
!12031 = distinct !DILexicalBlock(scope: !12024, file: !3288, line: 197, column: 2)
!12032 = !{i64 2154748698}
!12033 = !DILocation(line: 198, column: 2, scope: !12024)
!12034 = !DILocation(line: 199, column: 1, scope: !12024)
!12035 = distinct !DISubprogram(name: "z_current_get", scope: !3288, file: !3288, line: 173, type: !12019, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3066, retainedNodes: !2018)
!12036 = !DILocation(line: 180, column: 2, scope: !12037)
!12037 = distinct !DILexicalBlock(scope: !12035, file: !3288, line: 180, column: 2)
!12038 = !{i64 2154748630}
!12039 = !DILocation(line: 181, column: 9, scope: !12035)
!12040 = !DILocation(line: 181, column: 2, scope: !12035)
!12041 = distinct !DISubprogram(name: "z_early_memset", scope: !1808, file: !1808, line: 108, type: !12042, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1804, retainedNodes: !12044)
!12042 = !DISubroutineType(types: !12043)
!12043 = !{null, !108, !109, !235}
!12044 = !{!12045, !12046, !12047}
!12045 = !DILocalVariable(name: "dst", arg: 1, scope: !12041, file: !1808, line: 108, type: !108)
!12046 = !DILocalVariable(name: "c", arg: 2, scope: !12041, file: !1808, line: 108, type: !109)
!12047 = !DILocalVariable(name: "n", arg: 3, scope: !12041, file: !1808, line: 108, type: !235)
!12048 = !DILocation(line: 0, scope: !12041)
!12049 = !DILocation(line: 110, column: 9, scope: !12041)
!12050 = !DILocation(line: 111, column: 1, scope: !12041)
!12051 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1808, file: !1808, line: 121, type: !12052, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1804, retainedNodes: !12054)
!12052 = !DISubroutineType(types: !12053)
!12053 = !{null, !108, !13, !235}
!12054 = !{!12055, !12056, !12057}
!12055 = !DILocalVariable(name: "dst", arg: 1, scope: !12051, file: !1808, line: 121, type: !108)
!12056 = !DILocalVariable(name: "src", arg: 2, scope: !12051, file: !1808, line: 121, type: !13)
!12057 = !DILocalVariable(name: "n", arg: 3, scope: !12051, file: !1808, line: 121, type: !235)
!12058 = !DILocation(line: 0, scope: !12051)
!12059 = !DILocation(line: 123, column: 9, scope: !12051)
!12060 = !DILocation(line: 124, column: 1, scope: !12051)
!12061 = distinct !DISubprogram(name: "z_bss_zero", scope: !1808, file: !1808, line: 132, type: !3103, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1804, retainedNodes: !2018)
!12062 = !DILocation(line: 143, column: 2, scope: !12061)
!12063 = !DILocation(line: 168, column: 1, scope: !12061)
!12064 = distinct !DISubprogram(name: "z_init_cpu", scope: !1808, file: !1808, line: 372, type: !3431, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1804, retainedNodes: !12065)
!12065 = !{!12066}
!12066 = !DILocalVariable(name: "id", arg: 1, scope: !12064, file: !1808, line: 372, type: !109)
!12067 = !DILocation(line: 0, scope: !12064)
!12068 = !DILocation(line: 374, column: 2, scope: !12064)
!12069 = !DILocation(line: 375, column: 34, scope: !12064)
!12070 = !DILocation(line: 375, column: 19, scope: !12064)
!12071 = !DILocation(line: 375, column: 31, scope: !12064)
!12072 = !DILocation(line: 376, column: 24, scope: !12064)
!12073 = !DILocation(line: 376, column: 19, scope: !12064)
!12074 = !DILocation(line: 376, column: 22, scope: !12064)
!12075 = !DILocation(line: 378, column: 26, scope: !12064)
!12076 = !DILocation(line: 378, column: 4, scope: !12064)
!12077 = !DILocation(line: 378, column: 50, scope: !12064)
!12078 = !DILocation(line: 377, column: 19, scope: !12064)
!12079 = !DILocation(line: 377, column: 29, scope: !12064)
!12080 = !DILocation(line: 384, column: 1, scope: !12064)
!12081 = distinct !DISubprogram(name: "init_idle_thread", scope: !1808, file: !1808, line: 343, type: !3431, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1804, retainedNodes: !12082)
!12082 = !{!12083, !12084, !12085, !12088}
!12083 = !DILocalVariable(name: "i", arg: 1, scope: !12081, file: !1808, line: 343, type: !109)
!12084 = !DILocalVariable(name: "thread", scope: !12081, file: !1808, line: 345, type: !1901)
!12085 = !DILocalVariable(name: "stack", scope: !12081, file: !1808, line: 346, type: !12086)
!12086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12087, size: 32)
!12087 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !216, line: 44, baseType: !2042)
!12088 = !DILocalVariable(name: "tname", scope: !12081, file: !1808, line: 354, type: !1147)
!12089 = !DILocation(line: 0, scope: !12081)
!12090 = !DILocation(line: 345, column: 29, scope: !12081)
!12091 = !DILocation(line: 346, column: 28, scope: !12081)
!12092 = !DILocation(line: 362, column: 37, scope: !12081)
!12093 = !DILocation(line: 362, column: 36, scope: !12081)
!12094 = !DILocation(line: 361, column: 2, scope: !12081)
!12095 = !DILocation(line: 365, column: 2, scope: !12081)
!12096 = !DILocation(line: 370, column: 1, scope: !12081)
!12097 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !273, file: !273, line: 331, type: !12098, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1804, retainedNodes: !12100)
!12098 = !DISubroutineType(types: !12099)
!12099 = !{!1147, !12086}
!12100 = !{!12101}
!12101 = !DILocalVariable(name: "sym", arg: 1, scope: !12097, file: !273, line: 331, type: !12086)
!12102 = !DILocation(line: 0, scope: !12097)
!12103 = !DILocation(line: 333, column: 21, scope: !12097)
!12104 = !DILocation(line: 333, column: 2, scope: !12097)
!12105 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12106, file: !12106, line: 155, type: !12107, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1804, retainedNodes: !12109)
!12106 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12107 = !DISubroutineType(types: !12108)
!12108 = !{null, !1901}
!12109 = !{!12110}
!12110 = !DILocalVariable(name: "thread", arg: 1, scope: !12105, file: !12106, line: 155, type: !1901)
!12111 = !DILocation(line: 0, scope: !12105)
!12112 = !DILocation(line: 157, column: 15, scope: !12105)
!12113 = !DILocation(line: 157, column: 28, scope: !12105)
!12114 = !DILocation(line: 158, column: 1, scope: !12105)
!12115 = distinct !DISubprogram(name: "z_cstart", scope: !1808, file: !1808, line: 501, type: !3103, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1804, retainedNodes: !12116)
!12116 = !{!12117}
!12117 = !DILocalVariable(name: "dummy_thread", scope: !12115, file: !1808, line: 518, type: !1902)
!12118 = !DILocation(line: 507, column: 2, scope: !12115)
!12119 = !DILocation(line: 43, column: 14, scope: !12120, inlinedAt: !12124)
!12120 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12121, file: !12121, line: 40, type: !3103, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1804, retainedNodes: !12122)
!12121 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12122 = !{!12123}
!12123 = !DILocalVariable(name: "msp", scope: !12120, file: !12121, line: 42, type: !110)
!12124 = distinct !DILocation(line: 44, column: 2, scope: !12125, inlinedAt: !12127)
!12125 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12126, file: !12126, line: 42, type: !3103, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1804, retainedNodes: !2018)
!12126 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12127 = distinct !DILocation(line: 510, column: 2, scope: !12115)
!12128 = !DILocation(line: 43, column: 3, scope: !12120, inlinedAt: !12124)
!12129 = !DILocation(line: 43, column: 60, scope: !12120, inlinedAt: !12124)
!12130 = !DILocation(line: 0, scope: !12120, inlinedAt: !12124)
!12131 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12132, file: !6179, line: 1153, type: !110)
!12132 = distinct !DISubprogram(name: "__set_MSP", scope: !6179, file: !6179, line: 1153, type: !6274, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1804, retainedNodes: !12133)
!12133 = !{!12131}
!12134 = !DILocation(line: 0, scope: !12132, inlinedAt: !12135)
!12135 = distinct !DILocation(line: 46, column: 2, scope: !12120, inlinedAt: !12124)
!12136 = !DILocation(line: 1155, column: 3, scope: !12132, inlinedAt: !12135)
!12137 = !{i64 3517786}
!12138 = !DILocation(line: 62, column: 11, scope: !12120, inlinedAt: !12124)
!12139 = !DILocation(line: 102, column: 2, scope: !12140, inlinedAt: !12141)
!12140 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7020, file: !7020, line: 97, type: !3103, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1804, retainedNodes: !2018)
!12141 = distinct !DILocation(line: 45, column: 2, scope: !12125, inlinedAt: !12127)
!12142 = !DILocation(line: 108, column: 2, scope: !12140, inlinedAt: !12141)
!12143 = !DILocation(line: 112, column: 2, scope: !12140, inlinedAt: !12141)
!12144 = !DILocation(line: 113, column: 2, scope: !12140, inlinedAt: !12141)
!12145 = !DILocation(line: 114, column: 2, scope: !12140, inlinedAt: !12141)
!12146 = !DILocation(line: 116, column: 2, scope: !12140, inlinedAt: !12141)
!12147 = !DILocation(line: 123, column: 13, scope: !12140, inlinedAt: !12141)
!12148 = !DILocation(line: 46, column: 2, scope: !12125, inlinedAt: !12127)
!12149 = !DILocation(line: 47, column: 2, scope: !12125, inlinedAt: !12127)
!12150 = !DILocation(line: 174, column: 12, scope: !12151, inlinedAt: !12152)
!12151 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7020, file: !7020, line: 169, type: !3103, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1804, retainedNodes: !2018)
!12152 = distinct !DILocation(line: 48, column: 2, scope: !12125, inlinedAt: !12127)
!12153 = !DILocation(line: 179, column: 12, scope: !12151, inlinedAt: !12152)
!12154 = !DILocation(line: 50, column: 2, scope: !12125, inlinedAt: !12127)
!12155 = !DILocation(line: 57, column: 2, scope: !12125, inlinedAt: !12127)
!12156 = !DILocation(line: 518, column: 2, scope: !12115)
!12157 = !DILocation(line: 518, column: 18, scope: !12115)
!12158 = !DILocation(line: 520, column: 2, scope: !12115)
!12159 = !DILocation(line: 523, column: 2, scope: !12115)
!12160 = !DILocation(line: 526, column: 2, scope: !12115)
!12161 = !DILocation(line: 527, column: 2, scope: !12115)
!12162 = !DILocation(line: 543, column: 24, scope: !12115)
!12163 = !DILocation(line: 543, column: 2, scope: !12115)
!12164 = !DILocation(line: 0, scope: !2061)
!12165 = !DILocation(line: 246, column: 15, scope: !2079)
!12166 = !DILocation(line: 246, column: 36, scope: !2078)
!12167 = !DILocation(line: 246, column: 2, scope: !2079)
!12168 = !DILocation(line: 247, column: 37, scope: !2077)
!12169 = !DILocation(line: 0, scope: !2077)
!12170 = !DILocation(line: 248, column: 19, scope: !2077)
!12171 = !DILocation(line: 248, column: 12, scope: !2077)
!12172 = !DILocation(line: 250, column: 11, scope: !12173)
!12173 = distinct !DILexicalBlock(scope: !2077, file: !1808, line: 250, column: 7)
!12174 = !DILocation(line: 250, column: 7, scope: !2077)
!12175 = !DILocation(line: 254, column: 11, scope: !12176)
!12176 = distinct !DILexicalBlock(scope: !12177, file: !1808, line: 254, column: 8)
!12177 = distinct !DILexicalBlock(scope: !12173, file: !1808, line: 250, column: 20)
!12178 = !DILocation(line: 254, column: 8, scope: !12177)
!12179 = !DILocation(line: 255, column: 9, scope: !12180)
!12180 = distinct !DILexicalBlock(scope: !12176, file: !1808, line: 254, column: 17)
!12181 = !DILocation(line: 258, column: 9, scope: !12180)
!12182 = !DILocation(line: 261, column: 28, scope: !12180)
!12183 = !DILocation(line: 261, column: 10, scope: !12180)
!12184 = !DILocation(line: 261, column: 17, scope: !12180)
!12185 = !DILocation(line: 261, column: 26, scope: !12180)
!12186 = !DILocation(line: 262, column: 4, scope: !12180)
!12187 = !DILocation(line: 263, column: 9, scope: !12177)
!12188 = !DILocation(line: 263, column: 16, scope: !12177)
!12189 = !DILocation(line: 263, column: 28, scope: !12177)
!12190 = !DILocation(line: 264, column: 3, scope: !12177)
!12191 = !DILocation(line: 246, column: 60, scope: !2078)
!12192 = distinct !{!12192, !12167, !12193}
!12193 = !DILocation(line: 265, column: 2, scope: !2079)
!12194 = !DILocation(line: 266, column: 1, scope: !2061)
!12195 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !536, file: !536, line: 1814, type: !6219, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1804, retainedNodes: !12196)
!12196 = !{!12197, !12198}
!12197 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12195, file: !536, line: 1814, type: !782)
!12198 = !DILocalVariable(name: "priority", arg: 2, scope: !12195, file: !536, line: 1814, type: !110)
!12199 = !DILocation(line: 0, scope: !12195)
!12200 = !DILocation(line: 1822, column: 48, scope: !12201)
!12201 = distinct !DILexicalBlock(scope: !12202, file: !536, line: 1821, column: 3)
!12202 = distinct !DILexicalBlock(scope: !12195, file: !536, line: 1816, column: 7)
!12203 = !DILocation(line: 1822, column: 32, scope: !12201)
!12204 = !DILocation(line: 1822, column: 40, scope: !12201)
!12205 = !DILocation(line: 1822, column: 5, scope: !12201)
!12206 = !DILocation(line: 1822, column: 46, scope: !12201)
!12207 = !DILocation(line: 1824, column: 1, scope: !12195)
!12208 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12126, file: !12126, line: 32, type: !3103, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2018)
!12209 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12210, file: !12210, line: 215, type: !12107, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1804, retainedNodes: !12211)
!12210 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12211 = !{!12212}
!12212 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12209, file: !12210, line: 215, type: !1901)
!12213 = !DILocation(line: 0, scope: !12209)
!12214 = !DILocation(line: 217, column: 21, scope: !12209)
!12215 = !DILocation(line: 217, column: 34, scope: !12209)
!12216 = !DILocation(line: 221, column: 21, scope: !12209)
!12217 = !DILocation(line: 221, column: 34, scope: !12209)
!12218 = !DILocation(line: 223, column: 27, scope: !12209)
!12219 = !DILocation(line: 223, column: 33, scope: !12209)
!12220 = !DILocation(line: 224, column: 27, scope: !12209)
!12221 = !DILocation(line: 224, column: 32, scope: !12209)
!12222 = !DILocation(line: 232, column: 16, scope: !12209)
!12223 = !DILocation(line: 232, column: 30, scope: !12209)
!12224 = !DILocation(line: 239, column: 24, scope: !12209)
!12225 = !DILocation(line: 240, column: 1, scope: !12209)
!12226 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1808, file: !1808, line: 399, type: !12227, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1804, retainedNodes: !12229)
!12227 = !DISubroutineType(types: !12228)
!12228 = !{!1147}
!12229 = !{!12230}
!12230 = !DILocalVariable(name: "stack_ptr", scope: !12226, file: !1808, line: 401, type: !1147)
!12231 = !DILocation(line: 404, column: 2, scope: !12226)
!12232 = !DILocation(line: 416, column: 24, scope: !12226)
!12233 = !DILocation(line: 418, column: 14, scope: !12226)
!12234 = !DILocation(line: 0, scope: !12226)
!12235 = !DILocation(line: 423, column: 2, scope: !12226)
!12236 = !DILocation(line: 424, column: 2, scope: !12226)
!12237 = !DILocation(line: 426, column: 2, scope: !12226)
!12238 = !DILocation(line: 428, column: 2, scope: !12226)
!12239 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1808, file: !1808, line: 432, type: !12240, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1804, retainedNodes: !12242)
!12240 = !DISubroutineType(types: !12241)
!12241 = !{null, !1147}
!12242 = !{!12243}
!12243 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12239, file: !1808, line: 432, type: !1147)
!12244 = !DILocation(line: 0, scope: !12239)
!12245 = !DILocation(line: 435, column: 2, scope: !12239)
!12246 = !DILocation(line: 445, column: 2, scope: !12239)
!12247 = distinct !DISubprogram(name: "bg_thread_main", scope: !1808, file: !1808, line: 277, type: !218, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1804, retainedNodes: !12248)
!12248 = !{!12249, !12250, !12251}
!12249 = !DILocalVariable(name: "unused1", arg: 1, scope: !12247, file: !1808, line: 277, type: !108)
!12250 = !DILocalVariable(name: "unused2", arg: 2, scope: !12247, file: !1808, line: 277, type: !108)
!12251 = !DILocalVariable(name: "unused3", arg: 3, scope: !12247, file: !1808, line: 277, type: !108)
!12252 = !DILocation(line: 0, scope: !12247)
!12253 = !DILocation(line: 291, column: 20, scope: !12247)
!12254 = !DILocation(line: 293, column: 2, scope: !12247)
!12255 = !DILocation(line: 297, column: 2, scope: !12247)
!12256 = !DILocation(line: 305, column: 2, scope: !12247)
!12257 = !DILocation(line: 307, column: 2, scope: !12247)
!12258 = !DILocation(line: 330, column: 8, scope: !12247)
!12259 = !DILocation(line: 333, column: 34, scope: !12247)
!12260 = !DILocation(line: 339, column: 1, scope: !12247)
!12261 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2108, file: !2108, line: 45, type: !12262, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12270)
!12262 = !DISubroutineType(types: !12263)
!12263 = !{null, !12264, !108}
!12264 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !119, line: 103, baseType: !12265)
!12265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12266, size: 32)
!12266 = !DISubroutineType(types: !12267)
!12267 = !{null, !12268, !108}
!12268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12269, size: 32)
!12269 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2113)
!12270 = !{!12271, !12272, !12273, !12274}
!12271 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12261, file: !2108, line: 45, type: !12264)
!12272 = !DILocalVariable(name: "user_data", arg: 2, scope: !12261, file: !2108, line: 45, type: !108)
!12273 = !DILocalVariable(name: "thread", scope: !12261, file: !2108, line: 48, type: !2112)
!12274 = !DILocalVariable(name: "key", scope: !12261, file: !2108, line: 49, type: !12275)
!12275 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !254, line: 106, baseType: !12276)
!12276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !254, line: 32, size: 32, elements: !12277)
!12277 = !{!12278}
!12278 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12276, file: !254, line: 33, baseType: !109, size: 32)
!12279 = !DILocation(line: 0, scope: !12261)
!12280 = !DILocation(line: 51, column: 2, scope: !12281)
!12281 = distinct !DILexicalBlock(scope: !12282, file: !2108, line: 51, column: 2)
!12282 = distinct !DILexicalBlock(scope: !12261, file: !2108, line: 51, column: 2)
!12283 = !DILocation(line: 51, column: 2, scope: !12282)
!12284 = !DILocation(line: 51, column: 2, scope: !12285)
!12285 = distinct !DILexicalBlock(scope: !12281, file: !2108, line: 51, column: 2)
!12286 = !DILocalVariable(name: "l", arg: 1, scope: !12287, file: !254, line: 136, type: !12290)
!12287 = distinct !DISubprogram(name: "k_spin_lock", scope: !254, file: !254, line: 136, type: !12288, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12291)
!12288 = !DISubroutineType(types: !12289)
!12289 = !{!12275, !12290}
!12290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2201, size: 32)
!12291 = !{!12286, !12292}
!12292 = !DILocalVariable(name: "k", scope: !12287, file: !254, line: 139, type: !12275)
!12293 = !DILocation(line: 0, scope: !12287, inlinedAt: !12294)
!12294 = distinct !DILocation(line: 59, column: 8, scope: !12261)
!12295 = !DILocation(line: 55, column: 2, scope: !12296, inlinedAt: !12300)
!12296 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6005, file: !6005, line: 42, type: !6006, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12297)
!12297 = !{!12298, !12299}
!12298 = !DILocalVariable(name: "key", scope: !12296, file: !6005, line: 44, type: !32)
!12299 = !DILocalVariable(name: "tmp", scope: !12296, file: !6005, line: 53, type: !32)
!12300 = distinct !DILocation(line: 145, column: 10, scope: !12287, inlinedAt: !12294)
!12301 = !{i64 2268482}
!12302 = !DILocation(line: 0, scope: !12296, inlinedAt: !12300)
!12303 = !DILocation(line: 148, column: 2, scope: !12304, inlinedAt: !12294)
!12304 = distinct !DILexicalBlock(scope: !12305, file: !254, line: 148, column: 2)
!12305 = distinct !DILexicalBlock(scope: !12287, file: !254, line: 148, column: 2)
!12306 = !DILocation(line: 148, column: 2, scope: !12305, inlinedAt: !12294)
!12307 = !DILocation(line: 148, column: 2, scope: !12308, inlinedAt: !12294)
!12308 = distinct !DILexicalBlock(scope: !12304, file: !254, line: 148, column: 2)
!12309 = !DILocation(line: 160, column: 2, scope: !12287, inlinedAt: !12294)
!12310 = !DILocation(line: 0, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12261, file: !2108, line: 63, column: 2)
!12312 = !DILocation(line: 63, column: 2, scope: !12311)
!12313 = !DILocation(line: 64, column: 3, scope: !12314)
!12314 = distinct !DILexicalBlock(scope: !12315, file: !2108, line: 63, column: 71)
!12315 = distinct !DILexicalBlock(scope: !12311, file: !2108, line: 63, column: 2)
!12316 = !DILocation(line: 63, column: 58, scope: !12315)
!12317 = distinct !{!12317, !12312, !12318}
!12318 = !DILocation(line: 65, column: 2, scope: !12311)
!12319 = !DILocalVariable(name: "key", arg: 2, scope: !12320, file: !254, line: 190, type: !12275)
!12320 = distinct !DISubprogram(name: "k_spin_unlock", scope: !254, file: !254, line: 189, type: !12321, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12323)
!12321 = !DISubroutineType(types: !12322)
!12322 = !{null, !12290, !12275}
!12323 = !{!12324, !12319}
!12324 = !DILocalVariable(name: "l", arg: 1, scope: !12320, file: !254, line: 189, type: !12290)
!12325 = !DILocation(line: 0, scope: !12320, inlinedAt: !12326)
!12326 = distinct !DILocation(line: 69, column: 2, scope: !12261)
!12327 = !DILocation(line: 194, column: 2, scope: !12328, inlinedAt: !12326)
!12328 = distinct !DILexicalBlock(scope: !12329, file: !254, line: 194, column: 2)
!12329 = distinct !DILexicalBlock(scope: !12320, file: !254, line: 194, column: 2)
!12330 = !DILocation(line: 194, column: 2, scope: !12329, inlinedAt: !12326)
!12331 = !DILocation(line: 194, column: 2, scope: !12332, inlinedAt: !12326)
!12332 = distinct !DILexicalBlock(scope: !12328, file: !254, line: 194, column: 2)
!12333 = !DILocalVariable(name: "key", arg: 1, scope: !12334, file: !6005, line: 84, type: !32)
!12334 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6005, file: !6005, line: 84, type: !6016, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12335)
!12335 = !{!12333}
!12336 = !DILocation(line: 0, scope: !12334, inlinedAt: !12337)
!12337 = distinct !DILocation(line: 215, column: 2, scope: !12320, inlinedAt: !12326)
!12338 = !DILocation(line: 95, column: 2, scope: !12334, inlinedAt: !12337)
!12339 = !{i64 2269299}
!12340 = !DILocation(line: 71, column: 1, scope: !12261)
!12341 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2108, file: !2108, line: 853, type: !12342, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12344)
!12342 = !DISubroutineType(types: !12343)
!12343 = !{!334, !12290}
!12344 = !{!12345, !12346}
!12345 = !DILocalVariable(name: "l", arg: 1, scope: !12341, file: !2108, line: 853, type: !12290)
!12346 = !DILocalVariable(name: "thread_cpu", scope: !12341, file: !2108, line: 855, type: !22)
!12347 = !DILocation(line: 0, scope: !12341)
!12348 = !DILocation(line: 855, column: 28, scope: !12341)
!12349 = !DILocation(line: 857, column: 17, scope: !12350)
!12350 = distinct !DILexicalBlock(scope: !12341, file: !2108, line: 857, column: 6)
!12351 = !DILocation(line: 857, column: 6, scope: !12341)
!12352 = !DILocation(line: 858, column: 19, scope: !12353)
!12353 = distinct !DILexicalBlock(scope: !12354, file: !2108, line: 858, column: 7)
!12354 = distinct !DILexicalBlock(scope: !12350, file: !2108, line: 857, column: 24)
!12355 = !DILocation(line: 858, column: 42, scope: !12353)
!12356 = !DILocation(line: 858, column: 28, scope: !12353)
!12357 = !DILocation(line: 858, column: 25, scope: !12353)
!12358 = !DILocation(line: 858, column: 7, scope: !12354)
!12359 = !DILocation(line: 862, column: 2, scope: !12341)
!12360 = !DILocation(line: 863, column: 1, scope: !12341)
!12361 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2108, file: !2108, line: 874, type: !12362, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12364)
!12362 = !DISubroutineType(types: !12363)
!12363 = !{null, !12290}
!12364 = !{!12365}
!12365 = !DILocalVariable(name: "l", arg: 1, scope: !12361, file: !2108, line: 874, type: !12290)
!12366 = !DILocation(line: 0, scope: !12361)
!12367 = !DILocation(line: 876, column: 32, scope: !12361)
!12368 = !DILocation(line: 876, column: 18, scope: !12361)
!12369 = !DILocation(line: 876, column: 48, scope: !12361)
!12370 = !DILocation(line: 876, column: 37, scope: !12361)
!12371 = !DILocation(line: 876, column: 35, scope: !12361)
!12372 = !DILocation(line: 876, column: 5, scope: !12361)
!12373 = !DILocation(line: 876, column: 16, scope: !12361)
!12374 = !DILocation(line: 877, column: 1, scope: !12361)
!12375 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2108, file: !2108, line: 865, type: !12342, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12376)
!12376 = !{!12377}
!12377 = !DILocalVariable(name: "l", arg: 1, scope: !12375, file: !2108, line: 865, type: !12290)
!12378 = !DILocation(line: 0, scope: !12375)
!12379 = !DILocation(line: 867, column: 9, scope: !12380)
!12380 = distinct !DILexicalBlock(scope: !12375, file: !2108, line: 867, column: 6)
!12381 = !DILocation(line: 867, column: 38, scope: !12380)
!12382 = !DILocation(line: 867, column: 24, scope: !12380)
!12383 = !DILocation(line: 867, column: 54, scope: !12380)
!12384 = !DILocation(line: 867, column: 43, scope: !12380)
!12385 = !DILocation(line: 867, column: 41, scope: !12380)
!12386 = !DILocation(line: 867, column: 20, scope: !12380)
!12387 = !DILocation(line: 867, column: 6, scope: !12375)
!12388 = !DILocation(line: 870, column: 16, scope: !12375)
!12389 = !DILocation(line: 871, column: 2, scope: !12375)
!12390 = !DILocation(line: 872, column: 1, scope: !12375)
!12391 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2108, file: !2108, line: 73, type: !12262, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12392)
!12392 = !{!12393, !12394, !12395, !12396}
!12393 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12391, file: !2108, line: 73, type: !12264)
!12394 = !DILocalVariable(name: "user_data", arg: 2, scope: !12391, file: !2108, line: 73, type: !108)
!12395 = !DILocalVariable(name: "thread", scope: !12391, file: !2108, line: 76, type: !2112)
!12396 = !DILocalVariable(name: "key", scope: !12391, file: !2108, line: 77, type: !12275)
!12397 = !DILocation(line: 0, scope: !12391)
!12398 = !DILocation(line: 79, column: 2, scope: !12399)
!12399 = distinct !DILexicalBlock(scope: !12400, file: !2108, line: 79, column: 2)
!12400 = distinct !DILexicalBlock(scope: !12391, file: !2108, line: 79, column: 2)
!12401 = !DILocation(line: 79, column: 2, scope: !12400)
!12402 = !DILocation(line: 79, column: 2, scope: !12403)
!12403 = distinct !DILexicalBlock(scope: !12399, file: !2108, line: 79, column: 2)
!12404 = !DILocation(line: 0, scope: !12287, inlinedAt: !12405)
!12405 = distinct !DILocation(line: 81, column: 8, scope: !12391)
!12406 = !DILocation(line: 55, column: 2, scope: !12296, inlinedAt: !12407)
!12407 = distinct !DILocation(line: 145, column: 10, scope: !12287, inlinedAt: !12405)
!12408 = !DILocation(line: 0, scope: !12296, inlinedAt: !12407)
!12409 = !DILocation(line: 148, column: 2, scope: !12304, inlinedAt: !12405)
!12410 = !DILocation(line: 148, column: 2, scope: !12305, inlinedAt: !12405)
!12411 = !DILocation(line: 148, column: 2, scope: !12308, inlinedAt: !12405)
!12412 = !DILocation(line: 160, column: 2, scope: !12287, inlinedAt: !12405)
!12413 = !DILocation(line: 0, scope: !12414)
!12414 = distinct !DILexicalBlock(scope: !12391, file: !2108, line: 85, column: 2)
!12415 = !DILocation(line: 85, column: 2, scope: !12414)
!12416 = !DILocation(line: 0, scope: !12320, inlinedAt: !12417)
!12417 = distinct !DILocation(line: 86, column: 3, scope: !12418)
!12418 = distinct !DILexicalBlock(scope: !12419, file: !2108, line: 85, column: 71)
!12419 = distinct !DILexicalBlock(scope: !12414, file: !2108, line: 85, column: 2)
!12420 = !DILocation(line: 194, column: 2, scope: !12328, inlinedAt: !12417)
!12421 = !DILocation(line: 194, column: 2, scope: !12329, inlinedAt: !12417)
!12422 = !DILocation(line: 194, column: 2, scope: !12332, inlinedAt: !12417)
!12423 = !DILocation(line: 0, scope: !12334, inlinedAt: !12424)
!12424 = distinct !DILocation(line: 215, column: 2, scope: !12320, inlinedAt: !12417)
!12425 = !DILocation(line: 95, column: 2, scope: !12334, inlinedAt: !12424)
!12426 = !DILocation(line: 87, column: 3, scope: !12418)
!12427 = !DILocation(line: 0, scope: !12287, inlinedAt: !12428)
!12428 = distinct !DILocation(line: 88, column: 9, scope: !12418)
!12429 = !DILocation(line: 55, column: 2, scope: !12296, inlinedAt: !12430)
!12430 = distinct !DILocation(line: 145, column: 10, scope: !12287, inlinedAt: !12428)
!12431 = !DILocation(line: 0, scope: !12296, inlinedAt: !12430)
!12432 = !DILocation(line: 148, column: 2, scope: !12304, inlinedAt: !12428)
!12433 = !DILocation(line: 148, column: 2, scope: !12305, inlinedAt: !12428)
!12434 = !DILocation(line: 148, column: 2, scope: !12308, inlinedAt: !12428)
!12435 = !DILocation(line: 160, column: 2, scope: !12287, inlinedAt: !12428)
!12436 = !DILocation(line: 85, column: 58, scope: !12419)
!12437 = distinct !{!12437, !12415, !12438}
!12438 = !DILocation(line: 89, column: 2, scope: !12414)
!12439 = !DILocation(line: 0, scope: !12320, inlinedAt: !12440)
!12440 = distinct !DILocation(line: 93, column: 2, scope: !12391)
!12441 = !DILocation(line: 194, column: 2, scope: !12328, inlinedAt: !12440)
!12442 = !DILocation(line: 194, column: 2, scope: !12329, inlinedAt: !12440)
!12443 = !DILocation(line: 194, column: 2, scope: !12332, inlinedAt: !12440)
!12444 = !DILocation(line: 0, scope: !12334, inlinedAt: !12445)
!12445 = distinct !DILocation(line: 215, column: 2, scope: !12320, inlinedAt: !12440)
!12446 = !DILocation(line: 95, column: 2, scope: !12334, inlinedAt: !12445)
!12447 = !DILocation(line: 95, column: 1, scope: !12391)
!12448 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2108, file: !2108, line: 97, type: !7021, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !2018)
!12449 = !DILocation(line: 1031, column: 3, scope: !12450, inlinedAt: !12453)
!12450 = distinct !DISubprogram(name: "__get_IPSR", scope: !6179, file: !6179, line: 1027, type: !3385, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12451)
!12451 = !{!12452}
!12452 = !DILocalVariable(name: "result", scope: !12450, file: !6179, line: 1029, type: !110)
!12453 = distinct !DILocation(line: 48, column: 10, scope: !12454, inlinedAt: !12455)
!12454 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7020, file: !7020, line: 46, type: !7021, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !2018)
!12455 = distinct !DILocation(line: 99, column: 9, scope: !12448)
!12456 = !{i64 3523353}
!12457 = !DILocation(line: 0, scope: !12450, inlinedAt: !12453)
!12458 = !DILocation(line: 48, column: 9, scope: !12454, inlinedAt: !12455)
!12459 = !DILocation(line: 99, column: 2, scope: !12448)
!12460 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2108, file: !2108, line: 106, type: !3103, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !2018)
!12461 = !DILocation(line: 108, column: 2, scope: !12460)
!12462 = !DILocation(line: 108, column: 17, scope: !12460)
!12463 = !DILocation(line: 108, column: 30, scope: !12460)
!12464 = !DILocation(line: 109, column: 1, scope: !12460)
!12465 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2108, file: !2108, line: 116, type: !3103, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !2018)
!12466 = !DILocation(line: 118, column: 2, scope: !12465)
!12467 = !DILocation(line: 118, column: 17, scope: !12465)
!12468 = !DILocation(line: 118, column: 30, scope: !12465)
!12469 = !DILocation(line: 119, column: 1, scope: !12465)
!12470 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2108, file: !2108, line: 126, type: !7021, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !2018)
!12471 = !DILocation(line: 128, column: 10, scope: !12470)
!12472 = !DILocation(line: 128, column: 25, scope: !12470)
!12473 = !DILocation(line: 128, column: 38, scope: !12470)
!12474 = !DILocation(line: 128, column: 53, scope: !12470)
!12475 = !DILocation(line: 128, column: 2, scope: !12470)
!12476 = distinct !DISubprogram(name: "z_thread_monitor_exit", scope: !2108, file: !2108, line: 164, type: !12477, scopeLine: 165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12479)
!12477 = !DISubroutineType(types: !12478)
!12478 = !{null, !2112}
!12479 = !{!12480, !12481, !12482}
!12480 = !DILocalVariable(name: "thread", arg: 1, scope: !12476, file: !2108, line: 164, type: !2112)
!12481 = !DILocalVariable(name: "key", scope: !12476, file: !2108, line: 166, type: !12275)
!12482 = !DILocalVariable(name: "prev_thread", scope: !12483, file: !2108, line: 171, type: !2112)
!12483 = distinct !DILexicalBlock(scope: !12484, file: !2108, line: 170, column: 9)
!12484 = distinct !DILexicalBlock(scope: !12476, file: !2108, line: 168, column: 6)
!12485 = !DILocation(line: 0, scope: !12476)
!12486 = !DILocation(line: 0, scope: !12287, inlinedAt: !12487)
!12487 = distinct !DILocation(line: 166, column: 25, scope: !12476)
!12488 = !DILocation(line: 55, column: 2, scope: !12296, inlinedAt: !12489)
!12489 = distinct !DILocation(line: 145, column: 10, scope: !12287, inlinedAt: !12487)
!12490 = !DILocation(line: 0, scope: !12296, inlinedAt: !12489)
!12491 = !DILocation(line: 148, column: 2, scope: !12304, inlinedAt: !12487)
!12492 = !DILocation(line: 148, column: 2, scope: !12305, inlinedAt: !12487)
!12493 = !DILocation(line: 148, column: 2, scope: !12308, inlinedAt: !12487)
!12494 = !DILocation(line: 160, column: 2, scope: !12287, inlinedAt: !12487)
!12495 = !DILocation(line: 168, column: 24, scope: !12484)
!12496 = !DILocation(line: 168, column: 13, scope: !12484)
!12497 = !DILocation(line: 168, column: 6, scope: !12476)
!12498 = !DILocation(line: 169, column: 38, scope: !12499)
!12499 = distinct !DILexicalBlock(scope: !12484, file: !2108, line: 168, column: 33)
!12500 = !DILocation(line: 169, column: 19, scope: !12499)
!12501 = !DILocation(line: 170, column: 2, scope: !12499)
!12502 = !DILocation(line: 0, scope: !12483)
!12503 = !DILocation(line: 174, column: 23, scope: !12483)
!12504 = !DILocation(line: 174, column: 32, scope: !12483)
!12505 = !DILocation(line: 175, column: 28, scope: !12483)
!12506 = !DILocation(line: 175, column: 12, scope: !12483)
!12507 = !DILocation(line: 174, column: 3, scope: !12483)
!12508 = distinct !{!12508, !12507, !12509}
!12509 = !DILocation(line: 177, column: 3, scope: !12483)
!12510 = !DILocation(line: 179, column: 39, scope: !12511)
!12511 = distinct !DILexicalBlock(scope: !12512, file: !2108, line: 178, column: 28)
!12512 = distinct !DILexicalBlock(scope: !12483, file: !2108, line: 178, column: 7)
!12513 = !DILocation(line: 179, column: 29, scope: !12511)
!12514 = !DILocation(line: 180, column: 3, scope: !12511)
!12515 = !DILocation(line: 0, scope: !12320, inlinedAt: !12516)
!12516 = distinct !DILocation(line: 183, column: 2, scope: !12476)
!12517 = !DILocation(line: 194, column: 2, scope: !12328, inlinedAt: !12516)
!12518 = !DILocation(line: 194, column: 2, scope: !12329, inlinedAt: !12516)
!12519 = !DILocation(line: 194, column: 2, scope: !12332, inlinedAt: !12516)
!12520 = !DILocation(line: 0, scope: !12334, inlinedAt: !12521)
!12521 = distinct !DILocation(line: 215, column: 2, scope: !12320, inlinedAt: !12516)
!12522 = !DILocation(line: 95, column: 2, scope: !12334, inlinedAt: !12521)
!12523 = !DILocation(line: 184, column: 1, scope: !12476)
!12524 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2108, file: !2108, line: 187, type: !12525, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12527)
!12525 = !DISubroutineType(types: !12526)
!12526 = !{!109, !2112, !324}
!12527 = !{!12528, !12529}
!12528 = !DILocalVariable(name: "thread", arg: 1, scope: !12524, file: !2108, line: 187, type: !2112)
!12529 = !DILocalVariable(name: "value", arg: 2, scope: !12524, file: !2108, line: 187, type: !324)
!12530 = !DILocation(line: 0, scope: !12524)
!12531 = !DILocation(line: 190, column: 13, scope: !12532)
!12532 = distinct !DILexicalBlock(scope: !12524, file: !2108, line: 190, column: 6)
!12533 = !DILocation(line: 190, column: 6, scope: !12524)
!12534 = !DILocation(line: 194, column: 10, scope: !12524)
!12535 = !DILocation(line: 194, column: 2, scope: !12524)
!12536 = !DILocation(line: 195, column: 2, scope: !12524)
!12537 = !DILocation(line: 195, column: 47, scope: !12524)
!12538 = !DILocation(line: 199, column: 2, scope: !12524)
!12539 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2108, file: !2108, line: 238, type: !12540, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12542)
!12540 = !DISubroutineType(types: !12541)
!12541 = !{!324, !2112}
!12542 = !{!12543}
!12543 = !DILocalVariable(name: "thread", arg: 1, scope: !12539, file: !2108, line: 238, type: !2112)
!12544 = !DILocation(line: 0, scope: !12539)
!12545 = !DILocation(line: 241, column: 23, scope: !12539)
!12546 = !DILocation(line: 241, column: 2, scope: !12539)
!12547 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2108, file: !2108, line: 248, type: !12548, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12550)
!12548 = !DISubroutineType(types: !12549)
!12549 = !{!109, !2111, !1147, !235}
!12550 = !{!12551, !12552, !12553}
!12551 = !DILocalVariable(name: "thread", arg: 1, scope: !12547, file: !2108, line: 248, type: !2111)
!12552 = !DILocalVariable(name: "buf", arg: 2, scope: !12547, file: !2108, line: 248, type: !1147)
!12553 = !DILocalVariable(name: "size", arg: 3, scope: !12547, file: !2108, line: 248, type: !235)
!12554 = !DILocation(line: 0, scope: !12547)
!12555 = !DILocation(line: 251, column: 15, scope: !12547)
!12556 = !DILocation(line: 251, column: 2, scope: !12547)
!12557 = !DILocation(line: 252, column: 2, scope: !12547)
!12558 = !DILocation(line: 0, scope: !2107)
!12559 = !DILocation(line: 281, column: 11, scope: !12560)
!12560 = distinct !DILexicalBlock(scope: !2107, file: !2108, line: 281, column: 6)
!12561 = !DILocation(line: 281, column: 20, scope: !12560)
!12562 = !DILocation(line: 275, column: 45, scope: !2107)
!12563 = !DILocation(line: 285, column: 10, scope: !2107)
!12564 = !DILocation(line: 0, scope: !2217)
!12565 = !DILocation(line: 293, column: 39, scope: !12566)
!12566 = distinct !DILexicalBlock(scope: !2217, file: !2108, line: 293, column: 2)
!12567 = !DILocation(line: 293, column: 2, scope: !2217)
!12568 = !DILocation(line: 273, column: 14, scope: !2107)
!12569 = !DILocation(line: 309, column: 2, scope: !2107)
!12570 = !DILocation(line: 309, column: 11, scope: !2107)
!12571 = !DILocation(line: 311, column: 2, scope: !2107)
!12572 = !DILocation(line: 293, column: 26, scope: !12566)
!12573 = !DILocation(line: 294, column: 9, scope: !12574)
!12574 = distinct !DILexicalBlock(scope: !12566, file: !2108, line: 293, column: 54)
!12575 = !DILocation(line: 295, column: 21, scope: !12576)
!12576 = distinct !DILexicalBlock(scope: !12574, file: !2108, line: 295, column: 7)
!12577 = !DILocation(line: 295, column: 28, scope: !12576)
!12578 = !DILocation(line: 295, column: 7, scope: !12574)
!12579 = !DILocation(line: 299, column: 25, scope: !12574)
!12580 = !DILocation(line: 299, column: 41, scope: !12574)
!12581 = !DILocation(line: 300, column: 7, scope: !12574)
!12582 = !DILocation(line: 300, column: 26, scope: !12574)
!12583 = !DILocation(line: 299, column: 10, scope: !12574)
!12584 = !DILocation(line: 299, column: 7, scope: !12574)
!12585 = !DILocation(line: 302, column: 16, scope: !12574)
!12586 = !DILocation(line: 304, column: 20, scope: !12587)
!12587 = distinct !DILexicalBlock(scope: !12574, file: !2108, line: 304, column: 7)
!12588 = !DILocation(line: 304, column: 7, scope: !12574)
!12589 = !DILocation(line: 305, column: 26, scope: !12590)
!12590 = distinct !DILexicalBlock(scope: !12587, file: !2108, line: 304, column: 26)
!12591 = !DILocation(line: 305, column: 42, scope: !12590)
!12592 = !DILocation(line: 305, column: 11, scope: !12590)
!12593 = !DILocation(line: 305, column: 8, scope: !12590)
!12594 = !DILocation(line: 306, column: 3, scope: !12590)
!12595 = !DILocation(line: 293, column: 50, scope: !12566)
!12596 = !DILocation(line: 312, column: 1, scope: !2107)
!12597 = distinct !DISubprogram(name: "copy_bytes", scope: !2108, file: !2108, line: 261, type: !12598, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12600)
!12598 = !DISubroutineType(types: !12599)
!12599 = !{!235, !1147, !235, !324, !235}
!12600 = !{!12601, !12602, !12603, !12604, !12605}
!12601 = !DILocalVariable(name: "dest", arg: 1, scope: !12597, file: !2108, line: 261, type: !1147)
!12602 = !DILocalVariable(name: "dest_size", arg: 2, scope: !12597, file: !2108, line: 261, type: !235)
!12603 = !DILocalVariable(name: "src", arg: 3, scope: !12597, file: !2108, line: 261, type: !324)
!12604 = !DILocalVariable(name: "src_size", arg: 4, scope: !12597, file: !2108, line: 261, type: !235)
!12605 = !DILocalVariable(name: "bytes_to_copy", scope: !12597, file: !2108, line: 263, type: !235)
!12606 = !DILocation(line: 0, scope: !12597)
!12607 = !DILocation(line: 265, column: 18, scope: !12597)
!12608 = !DILocation(line: 266, column: 2, scope: !12597)
!12609 = !DILocation(line: 268, column: 2, scope: !12597)
!12610 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2108, file: !2108, line: 383, type: !12477, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12611)
!12611 = !{!12612}
!12612 = !DILocalVariable(name: "thread", arg: 1, scope: !12610, file: !2108, line: 383, type: !2112)
!12613 = !DILocation(line: 0, scope: !12610)
!12614 = !DILocation(line: 387, column: 2, scope: !12610)
!12615 = !DILocation(line: 388, column: 1, scope: !12610)
!12616 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2108, file: !2108, line: 528, type: !12617, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12624)
!12617 = !DISubroutineType(types: !12618)
!12618 = !{!1147, !2112, !12619, !235, !215, !108, !108, !108, !109, !110, !324}
!12619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12620, size: 32)
!12620 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !216, line: 44, baseType: !12621)
!12621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !273, line: 47, size: 8, elements: !12622)
!12622 = !{!12623}
!12623 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12621, file: !273, line: 48, baseType: !226, size: 8)
!12624 = !{!12625, !12626, !12627, !12628, !12629, !12630, !12631, !12632, !12633, !12634, !12635, !12636}
!12625 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12616, file: !2108, line: 528, type: !2112)
!12626 = !DILocalVariable(name: "stack", arg: 2, scope: !12616, file: !2108, line: 529, type: !12619)
!12627 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12616, file: !2108, line: 529, type: !235)
!12628 = !DILocalVariable(name: "entry", arg: 4, scope: !12616, file: !2108, line: 530, type: !215)
!12629 = !DILocalVariable(name: "p1", arg: 5, scope: !12616, file: !2108, line: 531, type: !108)
!12630 = !DILocalVariable(name: "p2", arg: 6, scope: !12616, file: !2108, line: 531, type: !108)
!12631 = !DILocalVariable(name: "p3", arg: 7, scope: !12616, file: !2108, line: 531, type: !108)
!12632 = !DILocalVariable(name: "prio", arg: 8, scope: !12616, file: !2108, line: 532, type: !109)
!12633 = !DILocalVariable(name: "options", arg: 9, scope: !12616, file: !2108, line: 532, type: !110)
!12634 = !DILocalVariable(name: "name", arg: 10, scope: !12616, file: !2108, line: 532, type: !324)
!12635 = !DILocalVariable(name: "stack_ptr", scope: !12616, file: !2108, line: 534, type: !1147)
!12636 = !DILocalVariable(name: "key", scope: !12616, file: !2108, line: 587, type: !12275)
!12637 = !DILocation(line: 0, scope: !12616)
!12638 = !DILocation(line: 536, column: 2, scope: !12639)
!12639 = distinct !DILexicalBlock(scope: !12640, file: !2108, line: 536, column: 2)
!12640 = distinct !DILexicalBlock(scope: !12641, file: !2108, line: 536, column: 2)
!12641 = distinct !DILexicalBlock(scope: !12616, file: !2108, line: 536, column: 2)
!12642 = !DILocation(line: 536, column: 2, scope: !12643)
!12643 = distinct !DILexicalBlock(scope: !12639, file: !2108, line: 536, column: 2)
!12644 = !DILocation(line: 550, column: 28, scope: !12616)
!12645 = !DILocation(line: 550, column: 2, scope: !12616)
!12646 = !DILocation(line: 553, column: 34, scope: !12616)
!12647 = !DILocation(line: 553, column: 2, scope: !12616)
!12648 = !DILocation(line: 554, column: 14, scope: !12616)
!12649 = !DILocation(line: 564, column: 2, scope: !12616)
!12650 = !DILocation(line: 567, column: 14, scope: !12616)
!12651 = !DILocation(line: 567, column: 24, scope: !12616)
!12652 = !DILocation(line: 582, column: 20, scope: !12616)
!12653 = !DILocation(line: 582, column: 27, scope: !12616)
!12654 = !DILocation(line: 583, column: 20, scope: !12616)
!12655 = !DILocation(line: 583, column: 31, scope: !12616)
!12656 = !DILocation(line: 584, column: 20, scope: !12616)
!12657 = !DILocation(line: 584, column: 31, scope: !12616)
!12658 = !DILocation(line: 585, column: 20, scope: !12616)
!12659 = !DILocation(line: 585, column: 31, scope: !12616)
!12660 = !DILocation(line: 0, scope: !12287, inlinedAt: !12661)
!12661 = distinct !DILocation(line: 587, column: 25, scope: !12616)
!12662 = !DILocation(line: 55, column: 2, scope: !12296, inlinedAt: !12663)
!12663 = distinct !DILocation(line: 145, column: 10, scope: !12287, inlinedAt: !12661)
!12664 = !DILocation(line: 0, scope: !12296, inlinedAt: !12663)
!12665 = !DILocation(line: 148, column: 2, scope: !12304, inlinedAt: !12661)
!12666 = !DILocation(line: 148, column: 2, scope: !12305, inlinedAt: !12661)
!12667 = !DILocation(line: 148, column: 2, scope: !12308, inlinedAt: !12661)
!12668 = !DILocation(line: 160, column: 2, scope: !12287, inlinedAt: !12661)
!12669 = !DILocation(line: 589, column: 36, scope: !12616)
!12670 = !DILocation(line: 589, column: 14, scope: !12616)
!12671 = !DILocation(line: 589, column: 26, scope: !12616)
!12672 = !DILocation(line: 590, column: 18, scope: !12616)
!12673 = !DILocation(line: 0, scope: !12320, inlinedAt: !12674)
!12674 = distinct !DILocation(line: 591, column: 2, scope: !12616)
!12675 = !DILocation(line: 194, column: 2, scope: !12328, inlinedAt: !12674)
!12676 = !DILocation(line: 194, column: 2, scope: !12329, inlinedAt: !12674)
!12677 = !DILocation(line: 194, column: 2, scope: !12332, inlinedAt: !12674)
!12678 = !DILocation(line: 0, scope: !12334, inlinedAt: !12679)
!12679 = distinct !DILocation(line: 215, column: 2, scope: !12320, inlinedAt: !12674)
!12680 = !DILocation(line: 95, column: 2, scope: !12334, inlinedAt: !12679)
!12681 = !DILocation(line: 594, column: 11, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !12616, file: !2108, line: 594, column: 6)
!12683 = !DILocation(line: 0, scope: !12682)
!12684 = !DILocation(line: 594, column: 6, scope: !12616)
!12685 = !DILocation(line: 595, column: 3, scope: !12686)
!12686 = distinct !DILexicalBlock(scope: !12682, file: !2108, line: 594, column: 20)
!12687 = !DILocation(line: 598, column: 3, scope: !12686)
!12688 = !DILocation(line: 598, column: 52, scope: !12686)
!12689 = !DILocation(line: 599, column: 2, scope: !12686)
!12690 = !DILocation(line: 600, column: 23, scope: !12691)
!12691 = distinct !DILexicalBlock(scope: !12682, file: !2108, line: 599, column: 9)
!12692 = !DILocation(line: 612, column: 7, scope: !12693)
!12693 = distinct !DILexicalBlock(scope: !12616, file: !2108, line: 612, column: 6)
!12694 = !DILocation(line: 612, column: 6, scope: !12616)
!12695 = !DILocation(line: 627, column: 40, scope: !12616)
!12696 = !DILocation(line: 637, column: 2, scope: !12616)
!12697 = !DILocation(line: 613, column: 15, scope: !12698)
!12698 = distinct !DILexicalBlock(scope: !12693, file: !2108, line: 612, column: 17)
!12699 = !DILocation(line: 613, column: 29, scope: !12698)
!12700 = !DILocation(line: 638, column: 1, scope: !12616)
!12701 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !12106, file: !12106, line: 78, type: !12702, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12704)
!12702 = !DISubroutineType(types: !12703)
!12703 = !{!334, !108}
!12704 = !{!12705}
!12705 = !DILocalVariable(name: "entry_point", arg: 1, scope: !12701, file: !12106, line: 78, type: !108)
!12706 = !DILocation(line: 0, scope: !12701)
!12707 = !DILocation(line: 80, column: 21, scope: !12701)
!12708 = !DILocation(line: 80, column: 2, scope: !12701)
!12709 = distinct !DISubprogram(name: "z_waitq_init", scope: !12710, file: !12710, line: 47, type: !12711, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12713)
!12710 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12711 = !DISubroutineType(types: !12712)
!12712 = !{null, !2129}
!12713 = !{!12714}
!12714 = !DILocalVariable(name: "w", arg: 1, scope: !12709, file: !12710, line: 47, type: !2129)
!12715 = !DILocation(line: 0, scope: !12709)
!12716 = !DILocation(line: 49, column: 21, scope: !12709)
!12717 = !DILocation(line: 49, column: 2, scope: !12709)
!12718 = !DILocation(line: 50, column: 1, scope: !12709)
!12719 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2108, file: !2108, line: 791, type: !12720, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12723)
!12720 = !DISubroutineType(types: !12721)
!12721 = !{null, !12722, !109, !110, !32}
!12722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 32)
!12723 = !{!12724, !12725, !12726, !12727}
!12724 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12719, file: !2108, line: 791, type: !12722)
!12725 = !DILocalVariable(name: "priority", arg: 2, scope: !12719, file: !2108, line: 791, type: !109)
!12726 = !DILocalVariable(name: "initial_state", arg: 3, scope: !12719, file: !2108, line: 792, type: !110)
!12727 = !DILocalVariable(name: "options", arg: 4, scope: !12719, file: !2108, line: 792, type: !32)
!12728 = !DILocation(line: 0, scope: !12719)
!12729 = !DILocation(line: 795, column: 15, scope: !12719)
!12730 = !DILocation(line: 795, column: 25, scope: !12719)
!12731 = !DILocation(line: 796, column: 30, scope: !12719)
!12732 = !DILocation(line: 796, column: 15, scope: !12719)
!12733 = !DILocation(line: 796, column: 28, scope: !12719)
!12734 = !DILocation(line: 797, column: 30, scope: !12719)
!12735 = !DILocation(line: 797, column: 15, scope: !12719)
!12736 = !DILocation(line: 797, column: 28, scope: !12719)
!12737 = !DILocation(line: 799, column: 22, scope: !12719)
!12738 = !DILocation(line: 799, column: 15, scope: !12719)
!12739 = !DILocation(line: 799, column: 20, scope: !12719)
!12740 = !DILocation(line: 801, column: 15, scope: !12719)
!12741 = !DILocation(line: 801, column: 28, scope: !12719)
!12742 = !DILocation(line: 814, column: 2, scope: !12719)
!12743 = !DILocation(line: 815, column: 1, scope: !12719)
!12744 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2108, file: !2108, line: 449, type: !12745, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12747)
!12745 = !DISubroutineType(types: !12746)
!12746 = !{!1147, !2112, !12619, !235}
!12747 = !{!12748, !12749, !12750, !12751, !12752, !12753, !12754, !12755}
!12748 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12744, file: !2108, line: 449, type: !2112)
!12749 = !DILocalVariable(name: "stack", arg: 2, scope: !12744, file: !2108, line: 450, type: !12619)
!12750 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12744, file: !2108, line: 450, type: !235)
!12751 = !DILocalVariable(name: "stack_obj_size", scope: !12744, file: !2108, line: 452, type: !235)
!12752 = !DILocalVariable(name: "stack_buf_size", scope: !12744, file: !2108, line: 452, type: !235)
!12753 = !DILocalVariable(name: "stack_ptr", scope: !12744, file: !2108, line: 453, type: !1147)
!12754 = !DILocalVariable(name: "stack_buf_start", scope: !12744, file: !2108, line: 453, type: !1147)
!12755 = !DILocalVariable(name: "delta", scope: !12744, file: !2108, line: 454, type: !235)
!12756 = !DILocation(line: 0, scope: !12744)
!12757 = !DILocation(line: 465, column: 20, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12744, file: !2108, line: 463, column: 2)
!12759 = !DILocation(line: 466, column: 21, scope: !12758)
!12760 = !DILocation(line: 473, column: 28, scope: !12744)
!12761 = !DILocation(line: 514, column: 33, scope: !12744)
!12762 = !DILocation(line: 514, column: 25, scope: !12744)
!12763 = !DILocation(line: 514, column: 31, scope: !12744)
!12764 = !DILocation(line: 515, column: 25, scope: !12744)
!12765 = !DILocation(line: 515, column: 30, scope: !12744)
!12766 = !DILocation(line: 516, column: 25, scope: !12744)
!12767 = !DILocation(line: 516, column: 31, scope: !12744)
!12768 = !DILocation(line: 520, column: 2, scope: !12744)
!12769 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !273, file: !273, line: 331, type: !12770, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12772)
!12770 = !DISubroutineType(types: !12771)
!12771 = !{!1147, !12619}
!12772 = !{!12773}
!12773 = !DILocalVariable(name: "sym", arg: 1, scope: !12769, file: !273, line: 331, type: !12619)
!12774 = !DILocation(line: 0, scope: !12769)
!12775 = !DILocation(line: 333, column: 21, scope: !12769)
!12776 = !DILocation(line: 333, column: 2, scope: !12769)
!12777 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !12778, file: !12778, line: 40, type: !12779, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12781)
!12778 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12779 = !DISubroutineType(types: !12780)
!12780 = !{null, !12722}
!12781 = !{!12782}
!12782 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12777, file: !12778, line: 40, type: !12722)
!12783 = !DILocation(line: 0, scope: !12777)
!12784 = !DILocation(line: 42, column: 31, scope: !12777)
!12785 = !DILocation(line: 42, column: 2, scope: !12777)
!12786 = !DILocation(line: 43, column: 1, scope: !12777)
!12787 = distinct !DISubprogram(name: "z_init_timeout", scope: !12778, file: !12778, line: 25, type: !2155, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12788)
!12788 = !{!12789}
!12789 = !DILocalVariable(name: "to", arg: 1, scope: !12787, file: !12778, line: 25, type: !2157)
!12790 = !DILocation(line: 0, scope: !12787)
!12791 = !DILocation(line: 27, column: 22, scope: !12787)
!12792 = !DILocation(line: 27, column: 2, scope: !12787)
!12793 = !DILocation(line: 28, column: 1, scope: !12787)
!12794 = distinct !DISubprogram(name: "sys_dnode_init", scope: !128, file: !128, line: 211, type: !12795, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12797)
!12795 = !DISubroutineType(types: !12796)
!12796 = !{null, !2089}
!12797 = !{!12798}
!12798 = !DILocalVariable(name: "node", arg: 1, scope: !12794, file: !128, line: 211, type: !2089)
!12799 = !DILocation(line: 0, scope: !12794)
!12800 = !DILocation(line: 213, column: 8, scope: !12794)
!12801 = !DILocation(line: 213, column: 13, scope: !12794)
!12802 = !DILocation(line: 214, column: 8, scope: !12794)
!12803 = !DILocation(line: 214, column: 13, scope: !12794)
!12804 = !DILocation(line: 215, column: 1, scope: !12794)
!12805 = distinct !DISubprogram(name: "sys_dlist_init", scope: !128, file: !128, line: 197, type: !12806, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12809)
!12806 = !DISubroutineType(types: !12807)
!12807 = !{null, !12808}
!12808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2134, size: 32)
!12809 = !{!12810}
!12810 = !DILocalVariable(name: "list", arg: 1, scope: !12805, file: !128, line: 197, type: !12808)
!12811 = !DILocation(line: 0, scope: !12805)
!12812 = !DILocation(line: 199, column: 8, scope: !12805)
!12813 = !DILocation(line: 199, column: 13, scope: !12805)
!12814 = !DILocation(line: 200, column: 8, scope: !12805)
!12815 = !DILocation(line: 200, column: 13, scope: !12805)
!12816 = !DILocation(line: 201, column: 1, scope: !12805)
!12817 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2108, file: !2108, line: 641, type: !12818, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12824)
!12818 = !DISubroutineType(types: !12819)
!12819 = !{!2111, !2112, !12619, !235, !215, !108, !108, !108, !109, !110, !12820}
!12820 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !12821)
!12821 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !12822)
!12822 = !{!12823}
!12823 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12821, file: !105, line: 66, baseType: !104, size: 64)
!12824 = !{!12825, !12826, !12827, !12828, !12829, !12830, !12831, !12832, !12833, !12834}
!12825 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12817, file: !2108, line: 641, type: !2112)
!12826 = !DILocalVariable(name: "stack", arg: 2, scope: !12817, file: !2108, line: 642, type: !12619)
!12827 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12817, file: !2108, line: 643, type: !235)
!12828 = !DILocalVariable(name: "entry", arg: 4, scope: !12817, file: !2108, line: 643, type: !215)
!12829 = !DILocalVariable(name: "p1", arg: 5, scope: !12817, file: !2108, line: 644, type: !108)
!12830 = !DILocalVariable(name: "p2", arg: 6, scope: !12817, file: !2108, line: 644, type: !108)
!12831 = !DILocalVariable(name: "p3", arg: 7, scope: !12817, file: !2108, line: 644, type: !108)
!12832 = !DILocalVariable(name: "prio", arg: 8, scope: !12817, file: !2108, line: 645, type: !109)
!12833 = !DILocalVariable(name: "options", arg: 9, scope: !12817, file: !2108, line: 645, type: !110)
!12834 = !DILocalVariable(name: "delay", arg: 10, scope: !12817, file: !2108, line: 645, type: !12820)
!12835 = !DILocation(line: 0, scope: !12817)
!12836 = !DILocation(line: 1031, column: 3, scope: !12450, inlinedAt: !12837)
!12837 = distinct !DILocation(line: 48, column: 10, scope: !12454, inlinedAt: !12838)
!12838 = distinct !DILocation(line: 647, column: 2, scope: !12839)
!12839 = distinct !DILexicalBlock(scope: !12840, file: !2108, line: 647, column: 2)
!12840 = distinct !DILexicalBlock(scope: !12817, file: !2108, line: 647, column: 2)
!12841 = !DILocation(line: 0, scope: !12450, inlinedAt: !12837)
!12842 = !DILocation(line: 48, column: 9, scope: !12454, inlinedAt: !12838)
!12843 = !DILocation(line: 647, column: 2, scope: !12840)
!12844 = !DILocation(line: 647, column: 2, scope: !12845)
!12845 = distinct !DILexicalBlock(scope: !12839, file: !2108, line: 647, column: 2)
!12846 = !DILocation(line: 649, column: 2, scope: !12817)
!12847 = !DILocation(line: 652, column: 7, scope: !12848)
!12848 = distinct !DILexicalBlock(scope: !12817, file: !2108, line: 652, column: 6)
!12849 = !DILocation(line: 652, column: 6, scope: !12817)
!12850 = !DILocation(line: 653, column: 3, scope: !12851)
!12851 = distinct !DILexicalBlock(scope: !12848, file: !2108, line: 652, column: 39)
!12852 = !DILocation(line: 654, column: 2, scope: !12851)
!12853 = !DILocation(line: 656, column: 2, scope: !12817)
!12854 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2108, file: !2108, line: 401, type: !12855, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12857)
!12855 = !DISubroutineType(types: !12856)
!12856 = !{null, !2112, !12820}
!12857 = !{!12858, !12859}
!12858 = !DILocalVariable(name: "thread", arg: 1, scope: !12854, file: !2108, line: 401, type: !2112)
!12859 = !DILocalVariable(name: "delay", arg: 2, scope: !12854, file: !2108, line: 401, type: !12820)
!12860 = !DILocation(line: 0, scope: !12854)
!12861 = !DILocation(line: 404, column: 6, scope: !12862)
!12862 = distinct !DILexicalBlock(scope: !12854, file: !2108, line: 404, column: 6)
!12863 = !DILocation(line: 404, column: 6, scope: !12854)
!12864 = !DILocation(line: 405, column: 3, scope: !12865)
!12865 = distinct !DILexicalBlock(scope: !12862, file: !2108, line: 404, column: 38)
!12866 = !DILocation(line: 406, column: 2, scope: !12865)
!12867 = !DILocation(line: 407, column: 3, scope: !12868)
!12868 = distinct !DILexicalBlock(scope: !12862, file: !2108, line: 406, column: 9)
!12869 = !DILocation(line: 413, column: 1, scope: !12854)
!12870 = distinct !DISubprogram(name: "k_thread_start", scope: !3288, file: !3288, line: 205, type: !12871, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12873)
!12871 = !DISubroutineType(types: !12872)
!12872 = !{null, !2111}
!12873 = !{!12874}
!12874 = !DILocalVariable(name: "thread", arg: 1, scope: !12870, file: !3288, line: 205, type: !2111)
!12875 = !DILocation(line: 0, scope: !12870)
!12876 = !DILocation(line: 214, column: 2, scope: !12877)
!12877 = distinct !DILexicalBlock(scope: !12870, file: !3288, line: 214, column: 2)
!12878 = !{i64 2154773922}
!12879 = !DILocation(line: 215, column: 2, scope: !12870)
!12880 = !DILocation(line: 216, column: 1, scope: !12870)
!12881 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12778, file: !12778, line: 47, type: !12855, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12882)
!12882 = !{!12883, !12884}
!12883 = !DILocalVariable(name: "thread", arg: 1, scope: !12881, file: !12778, line: 47, type: !2112)
!12884 = !DILocalVariable(name: "ticks", arg: 2, scope: !12881, file: !12778, line: 47, type: !12820)
!12885 = !DILocation(line: 0, scope: !12881)
!12886 = !DILocation(line: 49, column: 30, scope: !12881)
!12887 = !DILocation(line: 49, column: 2, scope: !12881)
!12888 = !DILocation(line: 50, column: 1, scope: !12881)
!12889 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2108, file: !2108, line: 748, type: !3103, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12890)
!12890 = !{!12891, !12909}
!12891 = !DILocalVariable(name: "thread_data", scope: !12892, file: !2108, line: 750, type: !12893)
!12892 = distinct !DILexicalBlock(scope: !12889, file: !2108, line: 750, column: 2)
!12893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12894, size: 32)
!12894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !119, line: 620, size: 384, elements: !12895)
!12895 = !{!12896, !12897, !12898, !12899, !12900, !12901, !12902, !12903, !12904, !12905, !12906, !12908}
!12896 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !12894, file: !119, line: 621, baseType: !2112, size: 32)
!12897 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !12894, file: !119, line: 622, baseType: !12619, size: 32, offset: 32)
!12898 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !12894, file: !119, line: 623, baseType: !32, size: 32, offset: 64)
!12899 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !12894, file: !119, line: 624, baseType: !215, size: 32, offset: 96)
!12900 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !12894, file: !119, line: 625, baseType: !108, size: 32, offset: 128)
!12901 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !12894, file: !119, line: 626, baseType: !108, size: 32, offset: 160)
!12902 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !12894, file: !119, line: 627, baseType: !108, size: 32, offset: 192)
!12903 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !12894, file: !119, line: 628, baseType: !109, size: 32, offset: 224)
!12904 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !12894, file: !119, line: 629, baseType: !110, size: 32, offset: 256)
!12905 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !12894, file: !119, line: 630, baseType: !756, size: 32, offset: 288)
!12906 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !12894, file: !119, line: 631, baseType: !12907, size: 32, offset: 320)
!12907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 32)
!12908 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !12894, file: !119, line: 632, baseType: !324, size: 32, offset: 352)
!12909 = !DILocalVariable(name: "thread_data", scope: !12910, file: !2108, line: 781, type: !12893)
!12910 = distinct !DILexicalBlock(scope: !12889, file: !2108, line: 781, column: 2)
!12911 = !DILocation(line: 0, scope: !12892)
!12912 = !DILocation(line: 750, column: 2, scope: !12913)
!12913 = distinct !DILexicalBlock(scope: !12914, file: !2108, line: 750, column: 2)
!12914 = distinct !DILexicalBlock(scope: !12915, file: !2108, line: 750, column: 2)
!12915 = distinct !DILexicalBlock(scope: !12892, file: !2108, line: 750, column: 2)
!12916 = !DILocation(line: 750, column: 2, scope: !12917)
!12917 = distinct !DILexicalBlock(scope: !12918, file: !2108, line: 750, column: 2)
!12918 = distinct !DILexicalBlock(scope: !12913, file: !2108, line: 750, column: 2)
!12919 = !DILocation(line: 750, column: 2, scope: !12914)
!12920 = !DILocation(line: 750, column: 2, scope: !12892)
!12921 = !DILocation(line: 780, column: 2, scope: !12889)
!12922 = !DILocation(line: 0, scope: !12910)
!12923 = !DILocation(line: 781, column: 2, scope: !12924)
!12924 = distinct !DILexicalBlock(scope: !12925, file: !2108, line: 781, column: 2)
!12925 = distinct !DILexicalBlock(scope: !12926, file: !2108, line: 781, column: 2)
!12926 = distinct !DILexicalBlock(scope: !12910, file: !2108, line: 781, column: 2)
!12927 = !DILocation(line: 752, column: 17, scope: !12928)
!12928 = distinct !DILexicalBlock(scope: !12915, file: !2108, line: 750, column: 38)
!12929 = !DILocation(line: 753, column: 17, scope: !12928)
!12930 = !DILocation(line: 754, column: 17, scope: !12928)
!12931 = !DILocation(line: 755, column: 17, scope: !12928)
!12932 = !DILocation(line: 756, column: 17, scope: !12928)
!12933 = !DILocation(line: 757, column: 17, scope: !12928)
!12934 = !DILocation(line: 758, column: 17, scope: !12928)
!12935 = !DILocation(line: 759, column: 17, scope: !12928)
!12936 = !DILocation(line: 760, column: 17, scope: !12928)
!12937 = !DILocation(line: 761, column: 17, scope: !12928)
!12938 = !DILocation(line: 751, column: 3, scope: !12928)
!12939 = !DILocation(line: 763, column: 16, scope: !12928)
!12940 = !DILocation(line: 763, column: 29, scope: !12928)
!12941 = !DILocation(line: 763, column: 39, scope: !12928)
!12942 = !DILocation(line: 750, column: 2, scope: !12915)
!12943 = !DILocation(line: 750, column: 2, scope: !12918)
!12944 = distinct !{!12944, !12920, !12945}
!12945 = !DILocation(line: 764, column: 2, scope: !12892)
!12946 = !DILocation(line: 781, column: 2, scope: !12947)
!12947 = distinct !DILexicalBlock(scope: !12948, file: !2108, line: 781, column: 2)
!12948 = distinct !DILexicalBlock(scope: !12924, file: !2108, line: 781, column: 2)
!12949 = !DILocation(line: 781, column: 2, scope: !12925)
!12950 = !DILocation(line: 781, column: 2, scope: !12910)
!12951 = !DILocation(line: 787, column: 2, scope: !12889)
!12952 = !DILocation(line: 788, column: 1, scope: !12889)
!12953 = !DILocation(line: 782, column: 20, scope: !12954)
!12954 = distinct !DILexicalBlock(scope: !12955, file: !2108, line: 782, column: 7)
!12955 = distinct !DILexicalBlock(scope: !12926, file: !2108, line: 781, column: 38)
!12956 = !DILocation(line: 782, column: 31, scope: !12954)
!12957 = !DILocation(line: 782, column: 7, scope: !12955)
!12958 = !DILocation(line: 783, column: 37, scope: !12959)
!12959 = distinct !DILexicalBlock(scope: !12954, file: !2108, line: 782, column: 51)
!12960 = !DILocation(line: 784, column: 10, scope: !12959)
!12961 = !DILocation(line: 783, column: 4, scope: !12959)
!12962 = !DILocation(line: 785, column: 3, scope: !12959)
!12963 = !DILocation(line: 781, column: 2, scope: !12926)
!12964 = !DILocation(line: 781, column: 2, scope: !12948)
!12965 = distinct !{!12965, !12950, !12966}
!12966 = !DILocation(line: 786, column: 2, scope: !12910)
!12967 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3341, file: !3341, line: 403, type: !3342, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12968)
!12968 = !{!12969}
!12969 = !DILocalVariable(name: "t", arg: 1, scope: !12967, file: !3341, line: 403, type: !111)
!12970 = !DILocation(line: 0, scope: !12967)
!12971 = !DILocalVariable(name: "t", arg: 1, scope: !12972, file: !3341, line: 102, type: !111)
!12972 = distinct !DISubprogram(name: "z_tmcvt", scope: !3341, file: !3341, line: 102, type: !3349, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12973)
!12973 = !{!12971, !12974, !12975, !12976, !12977, !12978, !12979, !12980, !12981, !12982, !12983}
!12974 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12972, file: !3341, line: 102, type: !110)
!12975 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12972, file: !3341, line: 103, type: !110)
!12976 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12972, file: !3341, line: 103, type: !334)
!12977 = !DILocalVariable(name: "result32", arg: 5, scope: !12972, file: !3341, line: 104, type: !334)
!12978 = !DILocalVariable(name: "round_up", arg: 6, scope: !12972, file: !3341, line: 104, type: !334)
!12979 = !DILocalVariable(name: "round_off", arg: 7, scope: !12972, file: !3341, line: 105, type: !334)
!12980 = !DILocalVariable(name: "mul_ratio", scope: !12972, file: !3341, line: 107, type: !334)
!12981 = !DILocalVariable(name: "div_ratio", scope: !12972, file: !3341, line: 109, type: !334)
!12982 = !DILocalVariable(name: "off", scope: !12972, file: !3341, line: 116, type: !111)
!12983 = !DILocalVariable(name: "rdivisor", scope: !12984, file: !3341, line: 119, type: !110)
!12984 = distinct !DILexicalBlock(scope: !12985, file: !3341, line: 118, column: 18)
!12985 = distinct !DILexicalBlock(scope: !12972, file: !3341, line: 118, column: 6)
!12986 = !DILocation(line: 0, scope: !12972, inlinedAt: !12987)
!12987 = distinct !DILocation(line: 406, column: 9, scope: !12967)
!12988 = !DILocation(line: 145, column: 13, scope: !12989, inlinedAt: !12987)
!12989 = distinct !DILexicalBlock(scope: !12990, file: !3341, line: 144, column: 10)
!12990 = distinct !DILexicalBlock(scope: !12991, file: !3341, line: 142, column: 7)
!12991 = distinct !DILexicalBlock(scope: !12992, file: !3341, line: 141, column: 24)
!12992 = distinct !DILexicalBlock(scope: !12993, file: !3341, line: 141, column: 13)
!12993 = distinct !DILexicalBlock(scope: !12972, file: !3341, line: 134, column: 6)
!12994 = !DILocation(line: 406, column: 2, scope: !12967)
!12995 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2108, file: !2108, line: 817, type: !4456, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !12996)
!12996 = !{!12997, !12998, !12999, !13000}
!12997 = !DILocalVariable(name: "entry", arg: 1, scope: !12995, file: !2108, line: 817, type: !215)
!12998 = !DILocalVariable(name: "p1", arg: 2, scope: !12995, file: !2108, line: 818, type: !108)
!12999 = !DILocalVariable(name: "p2", arg: 3, scope: !12995, file: !2108, line: 818, type: !108)
!13000 = !DILocalVariable(name: "p3", arg: 4, scope: !12995, file: !2108, line: 818, type: !108)
!13001 = !DILocation(line: 0, scope: !12995)
!13002 = !DILocation(line: 822, column: 2, scope: !12995)
!13003 = !DILocation(line: 822, column: 17, scope: !12995)
!13004 = !DILocation(line: 822, column: 30, scope: !12995)
!13005 = !DILocation(line: 823, column: 2, scope: !12995)
!13006 = !DILocation(line: 825, column: 2, scope: !12995)
!13007 = !DILocation(line: 825, column: 18, scope: !12995)
!13008 = !DILocation(line: 825, column: 25, scope: !12995)
!13009 = !DILocation(line: 826, column: 18, scope: !12995)
!13010 = !DILocation(line: 826, column: 29, scope: !12995)
!13011 = !DILocation(line: 827, column: 18, scope: !12995)
!13012 = !DILocation(line: 827, column: 29, scope: !12995)
!13013 = !DILocation(line: 828, column: 18, scope: !12995)
!13014 = !DILocation(line: 828, column: 29, scope: !12995)
!13015 = !DILocation(line: 845, column: 2, scope: !12995)
!13016 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2108, file: !2108, line: 888, type: !13017, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !13019)
!13017 = !DISubroutineType(types: !13018)
!13018 = !{!109, !2112}
!13019 = !{!13020}
!13020 = !DILocalVariable(name: "thread", arg: 1, scope: !13016, file: !2108, line: 888, type: !2112)
!13021 = !DILocation(line: 0, scope: !13016)
!13022 = !DILocation(line: 893, column: 2, scope: !13016)
!13023 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2108, file: !2108, line: 897, type: !13024, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !13026)
!13024 = !DISubroutineType(types: !13025)
!13025 = !{!109, !2112, !32}
!13026 = !{!13027, !13028}
!13027 = !DILocalVariable(name: "thread", arg: 1, scope: !13023, file: !2108, line: 897, type: !2112)
!13028 = !DILocalVariable(name: "options", arg: 2, scope: !13023, file: !2108, line: 897, type: !32)
!13029 = !DILocation(line: 0, scope: !13023)
!13030 = !DILocation(line: 902, column: 2, scope: !13023)
!13031 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2108, file: !2108, line: 1072, type: !13032, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !13037)
!13032 = !DISubroutineType(types: !13033)
!13033 = !{!109, !2111, !13034}
!13034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13035, size: 32)
!13035 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !145, line: 234, baseType: !13036)
!13036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !145, line: 192, elements: !2018)
!13037 = !{!13038, !13039}
!13038 = !DILocalVariable(name: "thread", arg: 1, scope: !13031, file: !2108, line: 1072, type: !2111)
!13039 = !DILocalVariable(name: "stats", arg: 2, scope: !13031, file: !2108, line: 1073, type: !13034)
!13040 = !DILocation(line: 0, scope: !13031)
!13041 = !DILocation(line: 1075, column: 14, scope: !13042)
!13042 = distinct !DILexicalBlock(scope: !13031, file: !2108, line: 1075, column: 6)
!13043 = !DILocation(line: 1075, column: 23, scope: !13042)
!13044 = !DILocation(line: 1086, column: 1, scope: !13031)
!13045 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2108, file: !2108, line: 1088, type: !13046, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !13048)
!13046 = !DISubroutineType(types: !13047)
!13047 = !{!109, !13034}
!13048 = !{!13049}
!13049 = !DILocalVariable(name: "stats", arg: 1, scope: !13045, file: !2108, line: 1088, type: !13034)
!13050 = !DILocation(line: 0, scope: !13045)
!13051 = !DILocation(line: 1094, column: 12, scope: !13052)
!13052 = distinct !DILexicalBlock(scope: !13045, file: !2108, line: 1094, column: 6)
!13053 = !DILocation(line: 1120, column: 1, scope: !13045)
!13054 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13055, file: !13055, line: 20, type: !3103, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3084, retainedNodes: !2018)
!13055 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13056 = !DILocation(line: 30, column: 2, scope: !13054)
!13057 = !DILocation(line: 31, column: 1, scope: !13054)
!13058 = distinct !DISubprogram(name: "idle", scope: !13055, file: !13055, line: 33, type: !218, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3084, retainedNodes: !13059)
!13059 = !{!13060, !13061, !13062}
!13060 = !DILocalVariable(name: "unused1", arg: 1, scope: !13058, file: !13055, line: 33, type: !108)
!13061 = !DILocalVariable(name: "unused2", arg: 2, scope: !13058, file: !13055, line: 33, type: !108)
!13062 = !DILocalVariable(name: "unused3", arg: 3, scope: !13058, file: !13055, line: 33, type: !108)
!13063 = !DILocation(line: 0, scope: !13058)
!13064 = !DILocation(line: 39, column: 2, scope: !13065)
!13065 = distinct !DILexicalBlock(scope: !13066, file: !13055, line: 39, column: 2)
!13066 = distinct !DILexicalBlock(scope: !13058, file: !13055, line: 39, column: 2)
!13067 = !DILocation(line: 39, column: 2, scope: !13066)
!13068 = !DILocation(line: 39, column: 2, scope: !13069)
!13069 = distinct !DILexicalBlock(scope: !13065, file: !13055, line: 39, column: 2)
!13070 = !DILocation(line: 55, column: 2, scope: !13071, inlinedAt: !13075)
!13071 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6005, file: !6005, line: 42, type: !6006, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3084, retainedNodes: !13072)
!13072 = !{!13073, !13074}
!13073 = !DILocalVariable(name: "key", scope: !13071, file: !6005, line: 44, type: !32)
!13074 = !DILocalVariable(name: "tmp", scope: !13071, file: !6005, line: 53, type: !32)
!13075 = distinct !DILocation(line: 62, column: 10, scope: !13076)
!13076 = distinct !DILexicalBlock(scope: !13058, file: !13055, line: 41, column: 15)
!13077 = !{i64 2241668}
!13078 = !DILocation(line: 0, scope: !13071, inlinedAt: !13075)
!13079 = !DILocation(line: 86, column: 3, scope: !13076)
!13080 = !DILocation(line: 41, column: 2, scope: !13058)
!13081 = distinct !{!13081, !13080, !13082}
!13082 = !DILocation(line: 105, column: 2, scope: !13058)
!13083 = distinct !DISubprogram(name: "k_cpu_idle", scope: !119, file: !119, line: 5627, type: !3103, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3084, retainedNodes: !2018)
!13084 = !DILocation(line: 5629, column: 2, scope: !13083)
!13085 = !DILocation(line: 5630, column: 1, scope: !13083)
!13086 = !DISubprogram(name: "arch_cpu_idle", scope: !216, file: !216, line: 167, type: !3103, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2018)
!13087 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2340, file: !2340, line: 49, type: !13088, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13097)
!13088 = !DISubroutineType(types: !13089)
!13089 = !{!109, !13090}
!13090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13091, size: 32)
!13091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !119, line: 2720, size: 160, elements: !13092)
!13092 = !{!13093, !13094, !13095, !13096}
!13093 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13091, file: !119, line: 2722, baseType: !2260, size: 64)
!13094 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !13091, file: !119, line: 2724, baseType: !2242, size: 32, offset: 64)
!13095 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !13091, file: !119, line: 2727, baseType: !110, size: 32, offset: 96)
!13096 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !13091, file: !119, line: 2730, baseType: !109, size: 32, offset: 128)
!13097 = !{!13098}
!13098 = !DILocalVariable(name: "mutex", arg: 1, scope: !13087, file: !2340, line: 49, type: !13090)
!13099 = !DILocation(line: 0, scope: !13087)
!13100 = !DILocation(line: 51, column: 9, scope: !13087)
!13101 = !DILocation(line: 51, column: 15, scope: !13087)
!13102 = !DILocation(line: 52, column: 9, scope: !13087)
!13103 = !DILocation(line: 52, column: 20, scope: !13087)
!13104 = !DILocation(line: 54, column: 23, scope: !13087)
!13105 = !DILocation(line: 54, column: 2, scope: !13087)
!13106 = !DILocation(line: 60, column: 2, scope: !13087)
!13107 = distinct !DISubprogram(name: "z_waitq_init", scope: !12710, file: !12710, line: 47, type: !13108, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13110)
!13108 = !DISubroutineType(types: !13109)
!13109 = !{null, !2259}
!13110 = !{!13111}
!13111 = !DILocalVariable(name: "w", arg: 1, scope: !13107, file: !12710, line: 47, type: !2259)
!13112 = !DILocation(line: 0, scope: !13107)
!13113 = !DILocation(line: 49, column: 21, scope: !13107)
!13114 = !DILocation(line: 49, column: 2, scope: !13107)
!13115 = !DILocation(line: 50, column: 1, scope: !13107)
!13116 = distinct !DISubprogram(name: "sys_dlist_init", scope: !128, file: !128, line: 197, type: !13117, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13120)
!13117 = !DISubroutineType(types: !13118)
!13118 = !{null, !13119}
!13119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 32)
!13120 = !{!13121}
!13121 = !DILocalVariable(name: "list", arg: 1, scope: !13116, file: !128, line: 197, type: !13119)
!13122 = !DILocation(line: 0, scope: !13116)
!13123 = !DILocation(line: 199, column: 8, scope: !13116)
!13124 = !DILocation(line: 199, column: 13, scope: !13116)
!13125 = !DILocation(line: 200, column: 8, scope: !13116)
!13126 = !DILocation(line: 200, column: 13, scope: !13116)
!13127 = !DILocation(line: 201, column: 1, scope: !13116)
!13128 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2340, file: !2340, line: 95, type: !13129, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13135)
!13129 = !DISubroutineType(types: !13130)
!13130 = !{!109, !13090, !13131}
!13131 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !13132)
!13132 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !13133)
!13133 = !{!13134}
!13134 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13132, file: !105, line: 66, baseType: !104, size: 64)
!13135 = !{!13136, !13137, !13138, !13139, !13144, !13145, !13146}
!13136 = !DILocalVariable(name: "mutex", arg: 1, scope: !13128, file: !2340, line: 95, type: !13090)
!13137 = !DILocalVariable(name: "timeout", arg: 2, scope: !13128, file: !2340, line: 95, type: !13131)
!13138 = !DILocalVariable(name: "new_prio", scope: !13128, file: !2340, line: 97, type: !109)
!13139 = !DILocalVariable(name: "key", scope: !13128, file: !2340, line: 98, type: !13140)
!13140 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !254, line: 106, baseType: !13141)
!13141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !254, line: 32, size: 32, elements: !13142)
!13142 = !{!13143}
!13143 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13141, file: !254, line: 33, baseType: !109, size: 32)
!13144 = !DILocalVariable(name: "resched", scope: !13128, file: !2340, line: 99, type: !334)
!13145 = !DILocalVariable(name: "got_mutex", scope: !13128, file: !2340, line: 146, type: !109)
!13146 = !DILocalVariable(name: "waiter", scope: !13147, file: !2340, line: 169, type: !2242)
!13147 = distinct !DILexicalBlock(scope: !13148, file: !2340, line: 168, column: 36)
!13148 = distinct !DILexicalBlock(scope: !13128, file: !2340, line: 168, column: 6)
!13149 = !DILocation(line: 0, scope: !13128)
!13150 = !DILocation(line: 1031, column: 3, scope: !13151, inlinedAt: !13154)
!13151 = distinct !DISubprogram(name: "__get_IPSR", scope: !6179, file: !6179, line: 1027, type: !3385, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13152)
!13152 = !{!13153}
!13153 = !DILocalVariable(name: "result", scope: !13151, file: !6179, line: 1029, type: !110)
!13154 = distinct !DILocation(line: 48, column: 10, scope: !13155, inlinedAt: !13156)
!13155 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7020, file: !7020, line: 46, type: !7021, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !2018)
!13156 = distinct !DILocation(line: 101, column: 2, scope: !13157)
!13157 = distinct !DILexicalBlock(scope: !13158, file: !2340, line: 101, column: 2)
!13158 = distinct !DILexicalBlock(scope: !13128, file: !2340, line: 101, column: 2)
!13159 = !{i64 3500947}
!13160 = !DILocation(line: 0, scope: !13151, inlinedAt: !13154)
!13161 = !DILocation(line: 48, column: 9, scope: !13155, inlinedAt: !13156)
!13162 = !DILocation(line: 101, column: 2, scope: !13158)
!13163 = !DILocation(line: 101, column: 2, scope: !13164)
!13164 = distinct !DILexicalBlock(scope: !13157, file: !2340, line: 101, column: 2)
!13165 = !DILocalVariable(name: "l", arg: 1, scope: !13166, file: !254, line: 136, type: !13169)
!13166 = distinct !DISubprogram(name: "k_spin_lock", scope: !254, file: !254, line: 136, type: !13167, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13170)
!13167 = !DISubroutineType(types: !13168)
!13168 = !{!13140, !13169}
!13169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2331, size: 32)
!13170 = !{!13165, !13171}
!13171 = !DILocalVariable(name: "k", scope: !13166, file: !254, line: 139, type: !13140)
!13172 = !DILocation(line: 0, scope: !13166, inlinedAt: !13173)
!13173 = distinct !DILocation(line: 105, column: 8, scope: !13128)
!13174 = !DILocation(line: 55, column: 2, scope: !13175, inlinedAt: !13179)
!13175 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6005, file: !6005, line: 42, type: !6006, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13176)
!13176 = !{!13177, !13178}
!13177 = !DILocalVariable(name: "key", scope: !13175, file: !6005, line: 44, type: !32)
!13178 = !DILocalVariable(name: "tmp", scope: !13175, file: !6005, line: 53, type: !32)
!13179 = distinct !DILocation(line: 145, column: 10, scope: !13166, inlinedAt: !13173)
!13180 = !{i64 2246076}
!13181 = !DILocation(line: 0, scope: !13175, inlinedAt: !13179)
!13182 = !DILocation(line: 148, column: 2, scope: !13183, inlinedAt: !13173)
!13183 = distinct !DILexicalBlock(scope: !13184, file: !254, line: 148, column: 2)
!13184 = distinct !DILexicalBlock(scope: !13166, file: !254, line: 148, column: 2)
!13185 = !DILocation(line: 148, column: 2, scope: !13184, inlinedAt: !13173)
!13186 = !DILocation(line: 148, column: 2, scope: !13187, inlinedAt: !13173)
!13187 = distinct !DILexicalBlock(scope: !13183, file: !254, line: 148, column: 2)
!13188 = !DILocation(line: 160, column: 2, scope: !13166, inlinedAt: !13173)
!13189 = !DILocation(line: 107, column: 6, scope: !13190)
!13190 = distinct !DILexicalBlock(scope: !13128, file: !2340, line: 107, column: 6)
!13191 = !DILocation(line: 107, column: 6, scope: !13128)
!13192 = !{!"branch_weights", i32 2000, i32 1}
!13193 = !DILocation(line: 110, column: 6, scope: !13194)
!13194 = distinct !DILexicalBlock(scope: !13190, file: !2340, line: 107, column: 71)
!13195 = !DILocation(line: 110, column: 21, scope: !13194)
!13196 = !DILocation(line: 109, column: 28, scope: !13194)
!13197 = !DILocation(line: 111, column: 13, scope: !13194)
!13198 = !DILocation(line: 114, column: 18, scope: !13194)
!13199 = !DILocation(line: 109, column: 10, scope: !13194)
!13200 = !DILocation(line: 109, column: 26, scope: !13194)
!13201 = !DILocation(line: 113, column: 20, scope: !13194)
!13202 = !DILocation(line: 114, column: 10, scope: !13194)
!13203 = !DILocation(line: 114, column: 16, scope: !13194)
!13204 = !DILocalVariable(name: "key", arg: 2, scope: !13205, file: !254, line: 190, type: !13140)
!13205 = distinct !DISubprogram(name: "k_spin_unlock", scope: !254, file: !254, line: 189, type: !13206, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13208)
!13206 = !DISubroutineType(types: !13207)
!13207 = !{null, !13169, !13140}
!13208 = !{!13209, !13204}
!13209 = !DILocalVariable(name: "l", arg: 1, scope: !13205, file: !254, line: 189, type: !13169)
!13210 = !DILocation(line: 0, scope: !13205, inlinedAt: !13211)
!13211 = distinct !DILocation(line: 120, column: 3, scope: !13194)
!13212 = !DILocation(line: 194, column: 2, scope: !13213, inlinedAt: !13211)
!13213 = distinct !DILexicalBlock(scope: !13214, file: !254, line: 194, column: 2)
!13214 = distinct !DILexicalBlock(scope: !13205, file: !254, line: 194, column: 2)
!13215 = !DILocation(line: 194, column: 2, scope: !13214, inlinedAt: !13211)
!13216 = !DILocation(line: 194, column: 2, scope: !13217, inlinedAt: !13211)
!13217 = distinct !DILexicalBlock(scope: !13213, file: !254, line: 194, column: 2)
!13218 = !DILocalVariable(name: "key", arg: 1, scope: !13219, file: !6005, line: 84, type: !32)
!13219 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6005, file: !6005, line: 84, type: !6016, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13220)
!13220 = !{!13218}
!13221 = !DILocation(line: 0, scope: !13219, inlinedAt: !13222)
!13222 = distinct !DILocation(line: 215, column: 2, scope: !13205, inlinedAt: !13211)
!13223 = !DILocation(line: 95, column: 2, scope: !13219, inlinedAt: !13222)
!13224 = !{i64 2246893}
!13225 = !DILocation(line: 124, column: 3, scope: !13194)
!13226 = !DILocation(line: 127, column: 6, scope: !13227)
!13227 = distinct !DILexicalBlock(scope: !13128, file: !2340, line: 127, column: 6)
!13228 = !DILocation(line: 127, column: 6, scope: !13128)
!13229 = !{!"branch_weights", i32 1, i32 2000}
!13230 = !DILocation(line: 0, scope: !13205, inlinedAt: !13231)
!13231 = distinct !DILocation(line: 128, column: 3, scope: !13232)
!13232 = distinct !DILexicalBlock(scope: !13227, file: !2340, line: 127, column: 50)
!13233 = !DILocation(line: 194, column: 2, scope: !13213, inlinedAt: !13231)
!13234 = !DILocation(line: 194, column: 2, scope: !13214, inlinedAt: !13231)
!13235 = !DILocation(line: 194, column: 2, scope: !13217, inlinedAt: !13231)
!13236 = !DILocation(line: 0, scope: !13219, inlinedAt: !13237)
!13237 = distinct !DILocation(line: 215, column: 2, scope: !13205, inlinedAt: !13231)
!13238 = !DILocation(line: 95, column: 2, scope: !13219, inlinedAt: !13237)
!13239 = !DILocation(line: 132, column: 3, scope: !13232)
!13240 = !DILocation(line: 137, column: 53, scope: !13128)
!13241 = !DILocation(line: 137, column: 38, scope: !13128)
!13242 = !DILocation(line: 138, column: 29, scope: !13128)
!13243 = !DILocation(line: 138, column: 10, scope: !13128)
!13244 = !DILocation(line: 137, column: 13, scope: !13128)
!13245 = !DILocation(line: 142, column: 6, scope: !13246)
!13246 = distinct !DILexicalBlock(scope: !13128, file: !2340, line: 142, column: 6)
!13247 = !DILocation(line: 142, column: 6, scope: !13128)
!13248 = !DILocation(line: 143, column: 13, scope: !13249)
!13249 = distinct !DILexicalBlock(scope: !13246, file: !2340, line: 142, column: 59)
!13250 = !DILocation(line: 144, column: 2, scope: !13249)
!13251 = !DILocation(line: 146, column: 50, scope: !13128)
!13252 = !DILocation(line: 146, column: 18, scope: !13128)
!13253 = !DILocation(line: 153, column: 16, scope: !13254)
!13254 = distinct !DILexicalBlock(scope: !13128, file: !2340, line: 153, column: 6)
!13255 = !DILocation(line: 153, column: 6, scope: !13128)
!13256 = !DILocation(line: 0, scope: !13166, inlinedAt: !13257)
!13257 = distinct !DILocation(line: 162, column: 8, scope: !13128)
!13258 = !DILocation(line: 55, column: 2, scope: !13175, inlinedAt: !13259)
!13259 = distinct !DILocation(line: 145, column: 10, scope: !13166, inlinedAt: !13257)
!13260 = !DILocation(line: 0, scope: !13175, inlinedAt: !13259)
!13261 = !DILocation(line: 148, column: 2, scope: !13183, inlinedAt: !13257)
!13262 = !DILocation(line: 148, column: 2, scope: !13184, inlinedAt: !13257)
!13263 = !DILocation(line: 148, column: 2, scope: !13187, inlinedAt: !13257)
!13264 = !DILocation(line: 160, column: 2, scope: !13166, inlinedAt: !13257)
!13265 = !DILocation(line: 168, column: 6, scope: !13148)
!13266 = !DILocation(line: 168, column: 6, scope: !13128)
!13267 = !DILocation(line: 169, column: 29, scope: !13147)
!13268 = !DILocation(line: 0, scope: !13147)
!13269 = !DILocation(line: 171, column: 22, scope: !13147)
!13270 = !DILocation(line: 171, column: 14, scope: !13147)
!13271 = !DILocation(line: 172, column: 42, scope: !13147)
!13272 = !DILocation(line: 172, column: 29, scope: !13147)
!13273 = !DILocation(line: 172, column: 55, scope: !13147)
!13274 = !DILocation(line: 172, column: 4, scope: !13147)
!13275 = !DILocation(line: 173, column: 11, scope: !13147)
!13276 = !DILocation(line: 177, column: 13, scope: !13147)
!13277 = !DILocation(line: 177, column: 48, scope: !13147)
!13278 = !DILocation(line: 180, column: 6, scope: !13128)
!13279 = !DILocation(line: 181, column: 3, scope: !13280)
!13280 = distinct !DILexicalBlock(scope: !13281, file: !2340, line: 180, column: 15)
!13281 = distinct !DILexicalBlock(scope: !13128, file: !2340, line: 180, column: 6)
!13282 = !DILocation(line: 182, column: 2, scope: !13280)
!13283 = !DILocation(line: 0, scope: !13205, inlinedAt: !13284)
!13284 = distinct !DILocation(line: 183, column: 3, scope: !13285)
!13285 = distinct !DILexicalBlock(scope: !13281, file: !2340, line: 182, column: 9)
!13286 = !DILocation(line: 194, column: 2, scope: !13213, inlinedAt: !13284)
!13287 = !DILocation(line: 194, column: 2, scope: !13214, inlinedAt: !13284)
!13288 = !DILocation(line: 194, column: 2, scope: !13217, inlinedAt: !13284)
!13289 = !DILocation(line: 0, scope: !13219, inlinedAt: !13290)
!13290 = distinct !DILocation(line: 215, column: 2, scope: !13205, inlinedAt: !13284)
!13291 = !DILocation(line: 95, column: 2, scope: !13219, inlinedAt: !13290)
!13292 = !DILocation(line: 189, column: 1, scope: !13128)
!13293 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2340, file: !2340, line: 72, type: !13294, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13296)
!13294 = !DISubroutineType(types: !13295)
!13295 = !{!756, !756, !756}
!13296 = !{!13297, !13298, !13299}
!13297 = !DILocalVariable(name: "target", arg: 1, scope: !13293, file: !2340, line: 72, type: !756)
!13298 = !DILocalVariable(name: "limit", arg: 2, scope: !13293, file: !2340, line: 72, type: !756)
!13299 = !DILocalVariable(name: "new_prio", scope: !13293, file: !2340, line: 74, type: !109)
!13300 = !DILocation(line: 0, scope: !13293)
!13301 = !DILocation(line: 74, column: 17, scope: !13293)
!13302 = !DILocation(line: 76, column: 13, scope: !13293)
!13303 = !DILocation(line: 78, column: 2, scope: !13293)
!13304 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12106, file: !12106, line: 211, type: !13305, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13307)
!13305 = !DISubroutineType(types: !13306)
!13306 = !{!334, !109, !109}
!13307 = !{!13308, !13309}
!13308 = !DILocalVariable(name: "prio", arg: 1, scope: !13304, file: !12106, line: 211, type: !109)
!13309 = !DILocalVariable(name: "test_prio", arg: 2, scope: !13304, file: !12106, line: 211, type: !109)
!13310 = !DILocation(line: 0, scope: !13304)
!13311 = !DILocation(line: 213, column: 9, scope: !13304)
!13312 = !DILocation(line: 213, column: 2, scope: !13304)
!13313 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2340, file: !2340, line: 81, type: !13314, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13316)
!13314 = !DISubroutineType(types: !13315)
!13315 = !{!334, !13090, !756}
!13316 = !{!13317, !13318}
!13317 = !DILocalVariable(name: "mutex", arg: 1, scope: !13313, file: !2340, line: 81, type: !13090)
!13318 = !DILocalVariable(name: "new_prio", arg: 2, scope: !13313, file: !2340, line: 81, type: !756)
!13319 = !DILocation(line: 0, scope: !13313)
!13320 = !DILocation(line: 83, column: 13, scope: !13321)
!13321 = distinct !DILexicalBlock(scope: !13313, file: !2340, line: 83, column: 6)
!13322 = !DILocation(line: 83, column: 25, scope: !13321)
!13323 = !DILocation(line: 83, column: 6, scope: !13321)
!13324 = !DILocation(line: 83, column: 30, scope: !13321)
!13325 = !DILocation(line: 83, column: 6, scope: !13313)
!13326 = !DILocation(line: 90, column: 10, scope: !13327)
!13327 = distinct !DILexicalBlock(scope: !13321, file: !2340, line: 83, column: 43)
!13328 = !DILocation(line: 90, column: 3, scope: !13327)
!13329 = !DILocation(line: 93, column: 1, scope: !13313)
!13330 = distinct !DISubprogram(name: "z_waitq_head", scope: !12710, file: !12710, line: 52, type: !13331, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13333)
!13331 = !DISubroutineType(types: !13332)
!13332 = !{!2242, !2259}
!13333 = !{!13334}
!13334 = !DILocalVariable(name: "w", arg: 1, scope: !13330, file: !12710, line: 52, type: !2259)
!13335 = !DILocation(line: 0, scope: !13330)
!13336 = !DILocation(line: 54, column: 52, scope: !13330)
!13337 = !DILocation(line: 54, column: 28, scope: !13330)
!13338 = !DILocation(line: 54, column: 9, scope: !13330)
!13339 = !DILocation(line: 54, column: 2, scope: !13330)
!13340 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !128, file: !128, line: 294, type: !13341, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13343)
!13341 = !DISubroutineType(types: !13342)
!13342 = !{!2227, !13119}
!13343 = !{!13344}
!13344 = !DILocalVariable(name: "list", arg: 1, scope: !13340, file: !128, line: 294, type: !13119)
!13345 = !DILocation(line: 0, scope: !13340)
!13346 = !DILocation(line: 296, column: 9, scope: !13340)
!13347 = !DILocation(line: 296, column: 49, scope: !13340)
!13348 = !DILocation(line: 296, column: 2, scope: !13340)
!13349 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !128, file: !128, line: 266, type: !13350, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13352)
!13350 = !DISubroutineType(types: !13351)
!13351 = !{!334, !13119}
!13352 = !{!13353}
!13353 = !DILocalVariable(name: "list", arg: 1, scope: !13349, file: !128, line: 266, type: !13119)
!13354 = !DILocation(line: 0, scope: !13349)
!13355 = !DILocation(line: 268, column: 15, scope: !13349)
!13356 = !DILocation(line: 268, column: 20, scope: !13349)
!13357 = !DILocation(line: 268, column: 2, scope: !13349)
!13358 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12106, file: !12106, line: 206, type: !13305, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13359)
!13359 = !{!13360, !13361}
!13360 = !DILocalVariable(name: "prio1", arg: 1, scope: !13358, file: !12106, line: 206, type: !109)
!13361 = !DILocalVariable(name: "prio2", arg: 2, scope: !13358, file: !12106, line: 206, type: !109)
!13362 = !DILocation(line: 0, scope: !13358)
!13363 = !DILocation(line: 208, column: 15, scope: !13358)
!13364 = !DILocation(line: 208, column: 2, scope: !13358)
!13365 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !12106, file: !12106, line: 186, type: !288, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13366)
!13366 = !{!13367}
!13367 = !DILocalVariable(name: "prio", arg: 1, scope: !13365, file: !12106, line: 186, type: !109)
!13368 = !DILocation(line: 0, scope: !13365)
!13369 = !DILocation(line: 188, column: 9, scope: !13365)
!13370 = !DILocation(line: 188, column: 2, scope: !13365)
!13371 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !12106, file: !12106, line: 181, type: !13372, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13374)
!13372 = !DISubroutineType(types: !13373)
!13373 = !{!334, !109}
!13374 = !{!13375}
!13375 = !DILocalVariable(name: "prio", arg: 1, scope: !13371, file: !12106, line: 181, type: !109)
!13376 = !DILocation(line: 0, scope: !13371)
!13377 = !DILocation(line: 183, column: 14, scope: !13371)
!13378 = !DILocation(line: 183, column: 2, scope: !13371)
!13379 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2340, file: !2340, line: 201, type: !13088, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13380)
!13380 = !{!13381, !13382, !13383, !13384}
!13381 = !DILocalVariable(name: "mutex", arg: 1, scope: !13379, file: !2340, line: 201, type: !13090)
!13382 = !DILocalVariable(name: "new_owner", scope: !13379, file: !2340, line: 203, type: !2242)
!13383 = !DILocalVariable(name: "key", scope: !13379, file: !2340, line: 242, type: !13140)
!13384 = !DILabel(scope: !13379, name: "k_mutex_unlock_return", file: !2340, line: 270)
!13385 = !DILocation(line: 0, scope: !13379)
!13386 = !DILocation(line: 1031, column: 3, scope: !13151, inlinedAt: !13387)
!13387 = distinct !DILocation(line: 48, column: 10, scope: !13155, inlinedAt: !13388)
!13388 = distinct !DILocation(line: 205, column: 2, scope: !13389)
!13389 = distinct !DILexicalBlock(scope: !13390, file: !2340, line: 205, column: 2)
!13390 = distinct !DILexicalBlock(scope: !13379, file: !2340, line: 205, column: 2)
!13391 = !DILocation(line: 0, scope: !13151, inlinedAt: !13387)
!13392 = !DILocation(line: 48, column: 9, scope: !13155, inlinedAt: !13388)
!13393 = !DILocation(line: 205, column: 2, scope: !13390)
!13394 = !DILocation(line: 205, column: 2, scope: !13395)
!13395 = distinct !DILexicalBlock(scope: !13389, file: !2340, line: 205, column: 2)
!13396 = !DILocation(line: 209, column: 2, scope: !13397)
!13397 = distinct !DILexicalBlock(scope: !13379, file: !2340, line: 209, column: 2)
!13398 = !DILocation(line: 209, column: 2, scope: !13379)
!13399 = !DILocation(line: 217, column: 2, scope: !13400)
!13400 = distinct !DILexicalBlock(scope: !13379, file: !2340, line: 217, column: 2)
!13401 = !DILocation(line: 217, column: 2, scope: !13379)
!13402 = !DILocation(line: 229, column: 2, scope: !13403)
!13403 = distinct !DILexicalBlock(scope: !13404, file: !2340, line: 229, column: 2)
!13404 = distinct !DILexicalBlock(scope: !13379, file: !2340, line: 229, column: 2)
!13405 = !DILocation(line: 229, column: 2, scope: !13404)
!13406 = !DILocation(line: 229, column: 2, scope: !13407)
!13407 = distinct !DILexicalBlock(scope: !13403, file: !2340, line: 229, column: 2)
!13408 = !DILocation(line: 238, column: 20, scope: !13409)
!13409 = distinct !DILexicalBlock(scope: !13410, file: !2340, line: 237, column: 30)
!13410 = distinct !DILexicalBlock(scope: !13379, file: !2340, line: 237, column: 6)
!13411 = !DILocation(line: 239, column: 3, scope: !13409)
!13412 = !DILocation(line: 0, scope: !13166, inlinedAt: !13413)
!13413 = distinct !DILocation(line: 242, column: 25, scope: !13379)
!13414 = !DILocation(line: 55, column: 2, scope: !13175, inlinedAt: !13415)
!13415 = distinct !DILocation(line: 145, column: 10, scope: !13166, inlinedAt: !13413)
!13416 = !DILocation(line: 0, scope: !13175, inlinedAt: !13415)
!13417 = !DILocation(line: 148, column: 2, scope: !13183, inlinedAt: !13413)
!13418 = !DILocation(line: 148, column: 2, scope: !13184, inlinedAt: !13413)
!13419 = !DILocation(line: 148, column: 2, scope: !13187, inlinedAt: !13413)
!13420 = !DILocation(line: 160, column: 2, scope: !13166, inlinedAt: !13413)
!13421 = !DILocation(line: 244, column: 34, scope: !13379)
!13422 = !DILocation(line: 244, column: 2, scope: !13379)
!13423 = !DILocation(line: 247, column: 44, scope: !13379)
!13424 = !DILocation(line: 247, column: 14, scope: !13379)
!13425 = !DILocation(line: 249, column: 15, scope: !13379)
!13426 = !DILocation(line: 254, column: 16, scope: !13427)
!13427 = distinct !DILexicalBlock(scope: !13379, file: !2340, line: 254, column: 6)
!13428 = !DILocation(line: 254, column: 6, scope: !13379)
!13429 = !DILocation(line: 260, column: 44, scope: !13430)
!13430 = distinct !DILexicalBlock(scope: !13427, file: !2340, line: 254, column: 25)
!13431 = !DILocation(line: 260, column: 28, scope: !13430)
!13432 = !DILocation(line: 260, column: 26, scope: !13430)
!13433 = !DILocalVariable(name: "thread", arg: 1, scope: !13434, file: !12126, line: 65, type: !2242)
!13434 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12126, file: !12126, line: 65, type: !13435, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13437)
!13435 = !DISubroutineType(types: !13436)
!13436 = !{null, !2242, !32}
!13437 = !{!13433, !13438}
!13438 = !DILocalVariable(name: "value", arg: 2, scope: !13434, file: !12126, line: 65, type: !32)
!13439 = !DILocation(line: 0, scope: !13434, inlinedAt: !13440)
!13440 = distinct !DILocation(line: 261, column: 3, scope: !13430)
!13441 = !DILocation(line: 67, column: 15, scope: !13434, inlinedAt: !13440)
!13442 = !DILocation(line: 67, column: 33, scope: !13434, inlinedAt: !13440)
!13443 = !DILocation(line: 262, column: 3, scope: !13430)
!13444 = !DILocation(line: 263, column: 3, scope: !13430)
!13445 = !DILocation(line: 264, column: 2, scope: !13430)
!13446 = !DILocation(line: 265, column: 21, scope: !13447)
!13447 = distinct !DILexicalBlock(scope: !13427, file: !2340, line: 264, column: 9)
!13448 = !DILocation(line: 0, scope: !13205, inlinedAt: !13449)
!13449 = distinct !DILocation(line: 266, column: 3, scope: !13447)
!13450 = !DILocation(line: 194, column: 2, scope: !13213, inlinedAt: !13449)
!13451 = !DILocation(line: 194, column: 2, scope: !13214, inlinedAt: !13449)
!13452 = !DILocation(line: 194, column: 2, scope: !13217, inlinedAt: !13449)
!13453 = !DILocation(line: 0, scope: !13219, inlinedAt: !13454)
!13454 = distinct !DILocation(line: 215, column: 2, scope: !13205, inlinedAt: !13449)
!13455 = !DILocation(line: 95, column: 2, scope: !13219, inlinedAt: !13454)
!13456 = !DILocation(line: 274, column: 1, scope: !13379)
!13457 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2461, file: !2461, line: 93, type: !13458, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13460)
!13458 = !DISubroutineType(types: !13459)
!13459 = !{!756, !2346, !2346}
!13460 = !{!13461, !13462, !13463, !13464}
!13461 = !DILocalVariable(name: "thread_1", arg: 1, scope: !13457, file: !2461, line: 93, type: !2346)
!13462 = !DILocalVariable(name: "thread_2", arg: 2, scope: !13457, file: !2461, line: 94, type: !2346)
!13463 = !DILocalVariable(name: "b1", scope: !13457, file: !2461, line: 97, type: !756)
!13464 = !DILocalVariable(name: "b2", scope: !13457, file: !2461, line: 98, type: !756)
!13465 = !DILocation(line: 0, scope: !13457)
!13466 = !DILocation(line: 97, column: 30, scope: !13457)
!13467 = !DILocation(line: 98, column: 30, scope: !13457)
!13468 = !DILocation(line: 100, column: 9, scope: !13469)
!13469 = distinct !DILexicalBlock(scope: !13457, file: !2461, line: 100, column: 6)
!13470 = !DILocation(line: 100, column: 6, scope: !13457)
!13471 = !DILocation(line: 125, column: 1, scope: !13457)
!13472 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2461, file: !2461, line: 428, type: !13473, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13475)
!13473 = !DISubroutineType(types: !13474)
!13474 = !{null, !2346}
!13475 = !{!13476}
!13476 = !DILocalVariable(name: "curr", arg: 1, scope: !13472, file: !2461, line: 428, type: !2346)
!13477 = !DILocation(line: 0, scope: !13472)
!13478 = !DILocation(line: 434, column: 6, scope: !13479)
!13479 = distinct !DILexicalBlock(scope: !13472, file: !2461, line: 434, column: 6)
!13480 = !DILocation(line: 434, column: 23, scope: !13479)
!13481 = !DILocation(line: 434, column: 6, scope: !13472)
!13482 = !DILocation(line: 435, column: 50, scope: !13483)
!13483 = distinct !DILexicalBlock(scope: !13479, file: !2461, line: 434, column: 29)
!13484 = !DILocation(line: 435, column: 48, scope: !13483)
!13485 = !DILocation(line: 435, column: 29, scope: !13483)
!13486 = !DILocation(line: 436, column: 24, scope: !13483)
!13487 = !DILocation(line: 436, column: 3, scope: !13483)
!13488 = !DILocation(line: 437, column: 2, scope: !13483)
!13489 = !DILocation(line: 438, column: 1, scope: !13472)
!13490 = distinct !DISubprogram(name: "slice_time", scope: !2461, file: !2461, line: 407, type: !13491, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13493)
!13491 = !DISubroutineType(types: !13492)
!13492 = !{!109, !2346}
!13493 = !{!13494, !13495}
!13494 = !DILocalVariable(name: "curr", arg: 1, scope: !13490, file: !2461, line: 407, type: !2346)
!13495 = !DILocalVariable(name: "ret", scope: !13490, file: !2461, line: 409, type: !109)
!13496 = !DILocation(line: 0, scope: !13490)
!13497 = !DILocation(line: 409, column: 12, scope: !13490)
!13498 = !DILocation(line: 416, column: 2, scope: !13490)
!13499 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2461, file: !2461, line: 440, type: !13500, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13502)
!13500 = !DISubroutineType(types: !13501)
!13501 = !{null, !756, !109}
!13502 = !{!13503, !13504, !13505, !13511}
!13503 = !DILocalVariable(name: "slice", arg: 1, scope: !13499, file: !2461, line: 440, type: !756)
!13504 = !DILocalVariable(name: "prio", arg: 2, scope: !13499, file: !2461, line: 440, type: !109)
!13505 = !DILocalVariable(name: "__i", scope: !13506, file: !2461, line: 442, type: !13507)
!13506 = distinct !DILexicalBlock(scope: !13499, file: !2461, line: 442, column: 2)
!13507 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !254, line: 106, baseType: !13508)
!13508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !254, line: 32, size: 32, elements: !13509)
!13509 = !{!13510}
!13510 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13508, file: !254, line: 33, baseType: !109, size: 32)
!13511 = !DILocalVariable(name: "__key", scope: !13506, file: !2461, line: 442, type: !13507)
!13512 = !DILocation(line: 0, scope: !13499)
!13513 = !DILocation(line: 0, scope: !13506)
!13514 = !DILocalVariable(name: "l", arg: 1, scope: !13515, file: !254, line: 136, type: !13518)
!13515 = distinct !DISubprogram(name: "k_spin_lock", scope: !254, file: !254, line: 136, type: !13516, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13519)
!13516 = !DISubroutineType(types: !13517)
!13517 = !{!13507, !13518}
!13518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2449, size: 32)
!13519 = !{!13514, !13520}
!13520 = !DILocalVariable(name: "k", scope: !13515, file: !254, line: 139, type: !13507)
!13521 = !DILocation(line: 0, scope: !13515, inlinedAt: !13522)
!13522 = distinct !DILocation(line: 442, column: 2, scope: !13506)
!13523 = !DILocation(line: 55, column: 2, scope: !13524, inlinedAt: !13528)
!13524 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6005, file: !6005, line: 42, type: !6006, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13525)
!13525 = !{!13526, !13527}
!13526 = !DILocalVariable(name: "key", scope: !13524, file: !6005, line: 44, type: !32)
!13527 = !DILocalVariable(name: "tmp", scope: !13524, file: !6005, line: 53, type: !32)
!13528 = distinct !DILocation(line: 145, column: 10, scope: !13515, inlinedAt: !13522)
!13529 = !{i64 2285639}
!13530 = !DILocation(line: 0, scope: !13524, inlinedAt: !13528)
!13531 = !DILocation(line: 148, column: 2, scope: !13532, inlinedAt: !13522)
!13532 = distinct !DILexicalBlock(scope: !13533, file: !254, line: 148, column: 2)
!13533 = distinct !DILexicalBlock(scope: !13515, file: !254, line: 148, column: 2)
!13534 = !DILocation(line: 148, column: 2, scope: !13533, inlinedAt: !13522)
!13535 = !DILocation(line: 148, column: 2, scope: !13536, inlinedAt: !13522)
!13536 = distinct !DILexicalBlock(scope: !13532, file: !254, line: 148, column: 2)
!13537 = !DILocation(line: 160, column: 2, scope: !13515, inlinedAt: !13522)
!13538 = !DILocation(line: 443, column: 29, scope: !13539)
!13539 = distinct !DILexicalBlock(scope: !13540, file: !2461, line: 442, column: 26)
!13540 = distinct !DILexicalBlock(scope: !13506, file: !2461, line: 442, column: 2)
!13541 = !DILocation(line: 444, column: 17, scope: !13539)
!13542 = !DILocation(line: 445, column: 51, scope: !13543)
!13543 = distinct !DILexicalBlock(scope: !13539, file: !2461, line: 445, column: 7)
!13544 = !DILocation(line: 445, column: 7, scope: !13539)
!13545 = !DILocation(line: 0, scope: !13539)
!13546 = !DILocation(line: 451, column: 18, scope: !13539)
!13547 = !DILocation(line: 452, column: 3, scope: !13539)
!13548 = !DILocalVariable(name: "key", arg: 2, scope: !13549, file: !254, line: 190, type: !13507)
!13549 = distinct !DISubprogram(name: "k_spin_unlock", scope: !254, file: !254, line: 189, type: !13550, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13552)
!13550 = !DISubroutineType(types: !13551)
!13551 = !{null, !13518, !13507}
!13552 = !{!13553, !13548}
!13553 = !DILocalVariable(name: "l", arg: 1, scope: !13549, file: !254, line: 189, type: !13518)
!13554 = !DILocation(line: 0, scope: !13549, inlinedAt: !13555)
!13555 = distinct !DILocation(line: 442, column: 2, scope: !13540)
!13556 = !DILocation(line: 194, column: 2, scope: !13557, inlinedAt: !13555)
!13557 = distinct !DILexicalBlock(scope: !13558, file: !254, line: 194, column: 2)
!13558 = distinct !DILexicalBlock(scope: !13549, file: !254, line: 194, column: 2)
!13559 = !DILocation(line: 194, column: 2, scope: !13558, inlinedAt: !13555)
!13560 = !DILocation(line: 194, column: 2, scope: !13561, inlinedAt: !13555)
!13561 = distinct !DILexicalBlock(scope: !13557, file: !254, line: 194, column: 2)
!13562 = !DILocalVariable(name: "key", arg: 1, scope: !13563, file: !6005, line: 84, type: !32)
!13563 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6005, file: !6005, line: 84, type: !6016, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13564)
!13564 = !{!13562}
!13565 = !DILocation(line: 0, scope: !13563, inlinedAt: !13566)
!13566 = distinct !DILocation(line: 215, column: 2, scope: !13549, inlinedAt: !13555)
!13567 = !DILocation(line: 95, column: 2, scope: !13563, inlinedAt: !13566)
!13568 = !{i64 2286456}
!13569 = !DILocation(line: 454, column: 1, scope: !13499)
!13570 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3341, file: !3341, line: 389, type: !7241, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13571)
!13571 = !{!13572}
!13572 = !DILocalVariable(name: "t", arg: 1, scope: !13570, file: !3341, line: 389, type: !110)
!13573 = !DILocation(line: 0, scope: !13570)
!13574 = !DILocalVariable(name: "t", arg: 1, scope: !13575, file: !3341, line: 102, type: !111)
!13575 = distinct !DISubprogram(name: "z_tmcvt", scope: !3341, file: !3341, line: 102, type: !3349, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13576)
!13576 = !{!13574, !13577, !13578, !13579, !13580, !13581, !13582, !13583, !13584, !13585, !13586}
!13577 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13575, file: !3341, line: 102, type: !110)
!13578 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13575, file: !3341, line: 103, type: !110)
!13579 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13575, file: !3341, line: 103, type: !334)
!13580 = !DILocalVariable(name: "result32", arg: 5, scope: !13575, file: !3341, line: 104, type: !334)
!13581 = !DILocalVariable(name: "round_up", arg: 6, scope: !13575, file: !3341, line: 104, type: !334)
!13582 = !DILocalVariable(name: "round_off", arg: 7, scope: !13575, file: !3341, line: 105, type: !334)
!13583 = !DILocalVariable(name: "mul_ratio", scope: !13575, file: !3341, line: 107, type: !334)
!13584 = !DILocalVariable(name: "div_ratio", scope: !13575, file: !3341, line: 109, type: !334)
!13585 = !DILocalVariable(name: "off", scope: !13575, file: !3341, line: 116, type: !111)
!13586 = !DILocalVariable(name: "rdivisor", scope: !13587, file: !3341, line: 119, type: !110)
!13587 = distinct !DILexicalBlock(scope: !13588, file: !3341, line: 118, column: 18)
!13588 = distinct !DILexicalBlock(scope: !13575, file: !3341, line: 118, column: 6)
!13589 = !DILocation(line: 0, scope: !13575, inlinedAt: !13590)
!13590 = distinct !DILocation(line: 392, column: 9, scope: !13570)
!13591 = !DILocation(line: 143, column: 25, scope: !13592, inlinedAt: !13590)
!13592 = distinct !DILexicalBlock(scope: !13593, file: !3341, line: 142, column: 17)
!13593 = distinct !DILexicalBlock(scope: !13594, file: !3341, line: 142, column: 7)
!13594 = distinct !DILexicalBlock(scope: !13595, file: !3341, line: 141, column: 24)
!13595 = distinct !DILexicalBlock(scope: !13596, file: !3341, line: 141, column: 13)
!13596 = distinct !DILexicalBlock(scope: !13575, file: !3341, line: 134, column: 6)
!13597 = !DILocation(line: 392, column: 2, scope: !13570)
!13598 = distinct !DISubprogram(name: "z_time_slice", scope: !2461, file: !2461, line: 502, type: !3431, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13599)
!13599 = !{!13600, !13601}
!13600 = !DILocalVariable(name: "ticks", arg: 1, scope: !13598, file: !2461, line: 502, type: !109)
!13601 = !DILocalVariable(name: "key", scope: !13598, file: !2461, line: 511, type: !13507)
!13602 = !DILocation(line: 0, scope: !13598)
!13603 = !DILocation(line: 0, scope: !13515, inlinedAt: !13604)
!13604 = distinct !DILocation(line: 511, column: 25, scope: !13598)
!13605 = !DILocation(line: 55, column: 2, scope: !13524, inlinedAt: !13606)
!13606 = distinct !DILocation(line: 145, column: 10, scope: !13515, inlinedAt: !13604)
!13607 = !DILocation(line: 0, scope: !13524, inlinedAt: !13606)
!13608 = !DILocation(line: 148, column: 2, scope: !13532, inlinedAt: !13604)
!13609 = !DILocation(line: 148, column: 2, scope: !13533, inlinedAt: !13604)
!13610 = !DILocation(line: 148, column: 2, scope: !13536, inlinedAt: !13604)
!13611 = !DILocation(line: 160, column: 2, scope: !13515, inlinedAt: !13604)
!13612 = !DILocation(line: 514, column: 6, scope: !13613)
!13613 = distinct !DILexicalBlock(scope: !13598, file: !2461, line: 514, column: 6)
!13614 = !DILocation(line: 514, column: 25, scope: !13613)
!13615 = !DILocation(line: 514, column: 22, scope: !13613)
!13616 = !DILocation(line: 514, column: 6, scope: !13598)
!13617 = !DILocation(line: 515, column: 3, scope: !13618)
!13618 = distinct !DILexicalBlock(scope: !13613, file: !2461, line: 514, column: 35)
!13619 = !DILocation(line: 0, scope: !13549, inlinedAt: !13620)
!13620 = distinct !DILocation(line: 516, column: 3, scope: !13618)
!13621 = !DILocation(line: 194, column: 2, scope: !13557, inlinedAt: !13620)
!13622 = !DILocation(line: 194, column: 2, scope: !13558, inlinedAt: !13620)
!13623 = !DILocation(line: 194, column: 2, scope: !13561, inlinedAt: !13620)
!13624 = !DILocation(line: 0, scope: !13563, inlinedAt: !13625)
!13625 = distinct !DILocation(line: 215, column: 2, scope: !13549, inlinedAt: !13620)
!13626 = !DILocation(line: 95, column: 2, scope: !13563, inlinedAt: !13625)
!13627 = !DILocation(line: 517, column: 3, scope: !13618)
!13628 = !DILocation(line: 519, column: 18, scope: !13598)
!13629 = !DILocation(line: 522, column: 6, scope: !13630)
!13630 = distinct !DILexicalBlock(scope: !13598, file: !2461, line: 522, column: 6)
!13631 = !DILocation(line: 522, column: 27, scope: !13630)
!13632 = !DILocation(line: 522, column: 30, scope: !13630)
!13633 = !DILocation(line: 522, column: 6, scope: !13598)
!13634 = !DILocation(line: 523, column: 30, scope: !13635)
!13635 = distinct !DILexicalBlock(scope: !13636, file: !2461, line: 523, column: 7)
!13636 = distinct !DILexicalBlock(scope: !13630, file: !2461, line: 522, column: 51)
!13637 = !DILocation(line: 523, column: 13, scope: !13635)
!13638 = !DILocation(line: 523, column: 7, scope: !13636)
!13639 = !DILocation(line: 530, column: 10, scope: !13640)
!13640 = distinct !DILexicalBlock(scope: !13635, file: !2461, line: 523, column: 43)
!13641 = !DILocation(line: 531, column: 3, scope: !13640)
!13642 = !DILocation(line: 532, column: 30, scope: !13643)
!13643 = distinct !DILexicalBlock(scope: !13635, file: !2461, line: 531, column: 10)
!13644 = !DILocation(line: 535, column: 29, scope: !13645)
!13645 = distinct !DILexicalBlock(scope: !13630, file: !2461, line: 534, column: 9)
!13646 = !DILocation(line: 0, scope: !13549, inlinedAt: !13647)
!13647 = distinct !DILocation(line: 537, column: 2, scope: !13598)
!13648 = !DILocation(line: 194, column: 2, scope: !13557, inlinedAt: !13647)
!13649 = !DILocation(line: 194, column: 2, scope: !13558, inlinedAt: !13647)
!13650 = !DILocation(line: 194, column: 2, scope: !13561, inlinedAt: !13647)
!13651 = !DILocation(line: 0, scope: !13563, inlinedAt: !13652)
!13652 = distinct !DILocation(line: 215, column: 2, scope: !13549, inlinedAt: !13647)
!13653 = !DILocation(line: 95, column: 2, scope: !13563, inlinedAt: !13652)
!13654 = !DILocation(line: 538, column: 1, scope: !13598)
!13655 = distinct !DISubprogram(name: "sliceable", scope: !2461, file: !2461, line: 468, type: !13656, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13658)
!13656 = !DISubroutineType(types: !13657)
!13657 = !{!334, !2346}
!13658 = !{!13659, !13660}
!13659 = !DILocalVariable(name: "thread", arg: 1, scope: !13655, file: !2461, line: 468, type: !2346)
!13660 = !DILocalVariable(name: "ret", scope: !13655, file: !2461, line: 470, type: !334)
!13661 = !DILocation(line: 0, scope: !13655)
!13662 = !DILocation(line: 470, column: 13, scope: !13655)
!13663 = !DILocation(line: 471, column: 3, scope: !13655)
!13664 = !DILocation(line: 471, column: 7, scope: !13655)
!13665 = !DILocation(line: 472, column: 3, scope: !13655)
!13666 = !DILocation(line: 472, column: 37, scope: !13655)
!13667 = !DILocation(line: 472, column: 24, scope: !13655)
!13668 = !DILocation(line: 472, column: 43, scope: !13655)
!13669 = !DILocation(line: 472, column: 7, scope: !13655)
!13670 = !DILocation(line: 473, column: 3, scope: !13655)
!13671 = !DILocation(line: 473, column: 7, scope: !13655)
!13672 = !DILocation(line: 473, column: 6, scope: !13655)
!13673 = !DILocation(line: 479, column: 2, scope: !13655)
!13674 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2461, file: !2461, line: 482, type: !13675, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13677)
!13675 = !DISubroutineType(types: !13676)
!13676 = !{!13507, !13507}
!13677 = !{!13678, !13679}
!13678 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !13674, file: !2461, line: 482, type: !13507)
!13679 = !DILocalVariable(name: "curr", scope: !13674, file: !2461, line: 484, type: !2346)
!13680 = !DILocation(line: 0, scope: !13674)
!13681 = !DILocation(line: 484, column: 26, scope: !13674)
!13682 = !DILocation(line: 493, column: 7, scope: !13683)
!13683 = distinct !DILexicalBlock(scope: !13674, file: !2461, line: 493, column: 6)
!13684 = !DILocation(line: 493, column: 6, scope: !13674)
!13685 = !DILocation(line: 494, column: 3, scope: !13686)
!13686 = distinct !DILexicalBlock(scope: !13683, file: !2461, line: 493, column: 49)
!13687 = !DILocation(line: 495, column: 2, scope: !13686)
!13688 = !DILocation(line: 496, column: 2, scope: !13674)
!13689 = !DILocation(line: 499, column: 1, scope: !13674)
!13690 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12106, file: !12106, line: 106, type: !13656, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13691)
!13691 = !{!13692, !13693}
!13692 = !DILocalVariable(name: "thread", arg: 1, scope: !13690, file: !12106, line: 106, type: !2346)
!13693 = !DILocalVariable(name: "state", scope: !13690, file: !12106, line: 108, type: !167)
!13694 = !DILocation(line: 0, scope: !13690)
!13695 = !DILocation(line: 108, column: 31, scope: !13690)
!13696 = !DILocation(line: 110, column: 16, scope: !13690)
!13697 = !DILocation(line: 111, column: 41, scope: !13690)
!13698 = !DILocation(line: 110, column: 2, scope: !13690)
!13699 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2461, file: !2461, line: 393, type: !13473, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13700)
!13700 = !{!13701}
!13701 = !DILocalVariable(name: "thread", arg: 1, scope: !13699, file: !2461, line: 393, type: !2346)
!13702 = !DILocation(line: 0, scope: !13699)
!13703 = !DILocation(line: 395, column: 6, scope: !13704)
!13704 = distinct !DILexicalBlock(scope: !13699, file: !2461, line: 395, column: 6)
!13705 = !DILocation(line: 395, column: 6, scope: !13699)
!13706 = !DILocalVariable(name: "thread", arg: 1, scope: !13707, file: !2461, line: 264, type: !2346)
!13707 = distinct !DISubprogram(name: "dequeue_thread", scope: !2461, file: !2461, line: 264, type: !13473, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13708)
!13708 = !{!13706}
!13709 = !DILocation(line: 0, scope: !13707, inlinedAt: !13710)
!13710 = distinct !DILocation(line: 396, column: 3, scope: !13711)
!13711 = distinct !DILexicalBlock(scope: !13704, file: !2461, line: 395, column: 34)
!13712 = !DILocation(line: 266, column: 15, scope: !13707, inlinedAt: !13710)
!13713 = !DILocation(line: 266, column: 28, scope: !13707, inlinedAt: !13710)
!13714 = !DILocalVariable(name: "thread", arg: 1, scope: !13715, file: !2461, line: 232, type: !2346)
!13715 = distinct !DISubprogram(name: "runq_remove", scope: !2461, file: !2461, line: 232, type: !13473, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13716)
!13716 = !{!13714}
!13717 = !DILocation(line: 0, scope: !13715, inlinedAt: !13718)
!13718 = distinct !DILocation(line: 268, column: 3, scope: !13719, inlinedAt: !13710)
!13719 = distinct !DILexicalBlock(scope: !13720, file: !2461, line: 267, column: 35)
!13720 = distinct !DILexicalBlock(scope: !13707, file: !2461, line: 267, column: 6)
!13721 = !DILocation(line: 234, column: 2, scope: !13715, inlinedAt: !13718)
!13722 = !DILocation(line: 397, column: 2, scope: !13711)
!13723 = !DILocalVariable(name: "thread", arg: 1, scope: !13724, file: !2461, line: 250, type: !2346)
!13724 = distinct !DISubprogram(name: "queue_thread", scope: !2461, file: !2461, line: 250, type: !13473, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13725)
!13725 = !{!13723}
!13726 = !DILocation(line: 0, scope: !13724, inlinedAt: !13727)
!13727 = distinct !DILocation(line: 398, column: 2, scope: !13699)
!13728 = !DILocation(line: 252, column: 15, scope: !13724, inlinedAt: !13727)
!13729 = !DILocation(line: 252, column: 28, scope: !13724, inlinedAt: !13727)
!13730 = !DILocalVariable(name: "thread", arg: 1, scope: !13731, file: !2461, line: 227, type: !2346)
!13731 = distinct !DISubprogram(name: "runq_add", scope: !2461, file: !2461, line: 227, type: !13473, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13732)
!13732 = !{!13730}
!13733 = !DILocation(line: 0, scope: !13731, inlinedAt: !13734)
!13734 = distinct !DILocation(line: 254, column: 3, scope: !13735, inlinedAt: !13727)
!13735 = distinct !DILexicalBlock(scope: !13736, file: !2461, line: 253, column: 35)
!13736 = distinct !DILexicalBlock(scope: !13724, file: !2461, line: 253, column: 6)
!13737 = !DILocation(line: 229, column: 2, scope: !13731, inlinedAt: !13734)
!13738 = !DILocation(line: 399, column: 25, scope: !13699)
!13739 = !DILocation(line: 399, column: 22, scope: !13699)
!13740 = !DILocation(line: 399, column: 2, scope: !13699)
!13741 = !DILocation(line: 400, column: 1, scope: !13699)
!13742 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12106, file: !12106, line: 136, type: !13656, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13743)
!13743 = !{!13744}
!13744 = !DILocalVariable(name: "thread", arg: 1, scope: !13742, file: !12106, line: 136, type: !2346)
!13745 = !DILocation(line: 0, scope: !13742)
!13746 = !DILocation(line: 138, column: 9, scope: !13742)
!13747 = !DILocation(line: 138, column: 2, scope: !13742)
!13748 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2461, file: !2461, line: 1198, type: !13749, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13765)
!13749 = !DISubroutineType(types: !13750)
!13750 = !{null, !13751, !2346}
!13751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13752, size: 32)
!13752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !2025, line: 37, size: 128, elements: !13753)
!13753 = !{!13754, !13764}
!13754 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !13752, file: !2025, line: 38, baseType: !13755, size: 96)
!13755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !157, line: 83, size: 96, elements: !13756)
!13756 = !{!13757, !13758, !13763}
!13757 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !13755, file: !157, line: 84, baseType: !2375, size: 32)
!13758 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !13755, file: !157, line: 85, baseType: !13759, size: 32, offset: 32)
!13759 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !157, line: 81, baseType: !13760)
!13760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13761, size: 32)
!13761 = !DISubroutineType(types: !13762)
!13762 = !{!334, !2375, !2375}
!13763 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !13755, file: !157, line: 86, baseType: !109, size: 32, offset: 64)
!13764 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !13752, file: !2025, line: 39, baseType: !109, size: 32, offset: 96)
!13765 = !{!13766, !13767}
!13766 = !DILocalVariable(name: "pq", arg: 1, scope: !13748, file: !2461, line: 1198, type: !13751)
!13767 = !DILocalVariable(name: "thread", arg: 2, scope: !13748, file: !2461, line: 1198, type: !2346)
!13768 = !DILocation(line: 0, scope: !13748)
!13769 = !DILocation(line: 1200, column: 2, scope: !13770)
!13770 = distinct !DILexicalBlock(scope: !13771, file: !2461, line: 1200, column: 2)
!13771 = distinct !DILexicalBlock(scope: !13748, file: !2461, line: 1200, column: 2)
!13772 = !DILocation(line: 1200, column: 2, scope: !13771)
!13773 = !DILocation(line: 1200, column: 2, scope: !13774)
!13774 = distinct !DILexicalBlock(scope: !13770, file: !2461, line: 1200, column: 2)
!13775 = !DILocation(line: 1202, column: 17, scope: !13748)
!13776 = !DILocation(line: 1202, column: 37, scope: !13748)
!13777 = !DILocation(line: 1202, column: 2, scope: !13748)
!13778 = !DILocation(line: 1204, column: 16, scope: !13779)
!13779 = distinct !DILexicalBlock(scope: !13748, file: !2461, line: 1204, column: 6)
!13780 = !DILocation(line: 1204, column: 7, scope: !13779)
!13781 = !DILocation(line: 1204, column: 6, scope: !13748)
!13782 = !DILocation(line: 1205, column: 7, scope: !13783)
!13783 = distinct !DILexicalBlock(scope: !13779, file: !2461, line: 1204, column: 22)
!13784 = !DILocation(line: 1205, column: 22, scope: !13783)
!13785 = !DILocation(line: 1206, column: 2, scope: !13783)
!13786 = !DILocation(line: 1207, column: 1, scope: !13748)
!13787 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2461, file: !2461, line: 1175, type: !13749, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13788)
!13788 = !{!13789, !13790, !13791, !13792, !13801}
!13789 = !DILocalVariable(name: "pq", arg: 1, scope: !13787, file: !2461, line: 1175, type: !13751)
!13790 = !DILocalVariable(name: "thread", arg: 2, scope: !13787, file: !2461, line: 1175, type: !2346)
!13791 = !DILocalVariable(name: "t", scope: !13787, file: !2461, line: 1177, type: !2346)
!13792 = !DILocalVariable(name: "__f", scope: !13793, file: !2461, line: 1190, type: !13796)
!13793 = distinct !DILexicalBlock(scope: !13794, file: !2461, line: 1190, column: 3)
!13794 = distinct !DILexicalBlock(scope: !13795, file: !2461, line: 1189, column: 27)
!13795 = distinct !DILexicalBlock(scope: !13787, file: !2461, line: 1189, column: 6)
!13796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !157, line: 155, size: 96, elements: !13797)
!13797 = !{!13798, !13799, !13800}
!13798 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !13796, file: !157, line: 156, baseType: !2457, size: 32)
!13799 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !13796, file: !157, line: 157, baseType: !1841, size: 32, offset: 32)
!13800 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !13796, file: !157, line: 158, baseType: !756, size: 32, offset: 64)
!13801 = !DILocalVariable(name: "n", scope: !13802, file: !2461, line: 1190, type: !2375)
!13802 = distinct !DILexicalBlock(scope: !13803, file: !2461, line: 1190, column: 3)
!13803 = distinct !DILexicalBlock(scope: !13793, file: !2461, line: 1190, column: 3)
!13804 = !DILocation(line: 0, scope: !13787)
!13805 = !DILocation(line: 1179, column: 2, scope: !13806)
!13806 = distinct !DILexicalBlock(scope: !13807, file: !2461, line: 1179, column: 2)
!13807 = distinct !DILexicalBlock(scope: !13787, file: !2461, line: 1179, column: 2)
!13808 = !DILocation(line: 1179, column: 2, scope: !13807)
!13809 = !DILocation(line: 1179, column: 2, scope: !13810)
!13810 = distinct !DILexicalBlock(scope: !13806, file: !2461, line: 1179, column: 2)
!13811 = !DILocation(line: 1181, column: 31, scope: !13787)
!13812 = !DILocation(line: 1181, column: 45, scope: !13787)
!13813 = !DILocation(line: 1181, column: 15, scope: !13787)
!13814 = !DILocation(line: 1181, column: 25, scope: !13787)
!13815 = !DILocation(line: 1189, column: 11, scope: !13795)
!13816 = !DILocation(line: 1189, column: 7, scope: !13795)
!13817 = !DILocation(line: 1189, column: 6, scope: !13787)
!13818 = !DILocation(line: 1190, column: 3, scope: !13793)
!13819 = !DILocation(line: 1190, column: 3, scope: !13802)
!13820 = !DILocation(line: 0, scope: !13802)
!13821 = !DILocation(line: 1190, column: 3, scope: !13803)
!13822 = !DILocation(line: 1193, column: 2, scope: !13794)
!13823 = !DILocation(line: 1191, column: 42, scope: !13824)
!13824 = distinct !DILexicalBlock(scope: !13803, file: !2461, line: 1190, column: 54)
!13825 = !DILocation(line: 1191, column: 12, scope: !13824)
!13826 = !DILocation(line: 1191, column: 22, scope: !13824)
!13827 = distinct !{!13827, !13818, !13828}
!13828 = !DILocation(line: 1192, column: 3, scope: !13793)
!13829 = !DILocation(line: 1195, column: 17, scope: !13787)
!13830 = !DILocation(line: 1195, column: 37, scope: !13787)
!13831 = !DILocation(line: 1195, column: 2, scope: !13787)
!13832 = !DILocation(line: 1196, column: 1, scope: !13787)
!13833 = distinct !DISubprogram(name: "update_cache", scope: !2461, file: !2461, line: 559, type: !3431, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13834)
!13834 = !{!13835, !13836}
!13835 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !13833, file: !2461, line: 559, type: !109)
!13836 = !DILocalVariable(name: "thread", scope: !13833, file: !2461, line: 562, type: !2346)
!13837 = !DILocation(line: 0, scope: !13833)
!13838 = !DILocation(line: 239, column: 9, scope: !13839, inlinedAt: !13842)
!13839 = distinct !DISubprogram(name: "runq_best", scope: !2461, file: !2461, line: 237, type: !13840, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !2018)
!13840 = !DISubroutineType(types: !13841)
!13841 = !{!2346}
!13842 = distinct !DILocation(line: 314, column: 28, scope: !13843, inlinedAt: !13846)
!13843 = distinct !DISubprogram(name: "next_up", scope: !2461, file: !2461, line: 312, type: !13840, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13844)
!13844 = !{!13845}
!13845 = !DILocalVariable(name: "thread", scope: !13843, file: !2461, line: 314, type: !2346)
!13846 = distinct !DILocation(line: 562, column: 28, scope: !13833)
!13847 = !DILocation(line: 0, scope: !13843, inlinedAt: !13846)
!13848 = !DILocation(line: 340, column: 17, scope: !13843, inlinedAt: !13846)
!13849 = !DILocation(line: 340, column: 9, scope: !13843, inlinedAt: !13846)
!13850 = !DILocalVariable(name: "thread", arg: 1, scope: !13851, file: !2461, line: 127, type: !2346)
!13851 = distinct !DISubprogram(name: "should_preempt", scope: !2461, file: !2461, line: 127, type: !13852, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13854)
!13852 = !DISubroutineType(types: !13853)
!13853 = !{!334, !2346, !109}
!13854 = !{!13850, !13855}
!13855 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !13851, file: !2461, line: 128, type: !109)
!13856 = !DILocation(line: 0, scope: !13851, inlinedAt: !13857)
!13857 = distinct !DILocation(line: 564, column: 6, scope: !13858)
!13858 = distinct !DILexicalBlock(scope: !13833, file: !2461, line: 564, column: 6)
!13859 = !DILocation(line: 133, column: 17, scope: !13860, inlinedAt: !13857)
!13860 = distinct !DILexicalBlock(scope: !13851, file: !2461, line: 133, column: 6)
!13861 = !DILocation(line: 0, scope: !13858)
!13862 = !DILocation(line: 133, column: 6, scope: !13851, inlinedAt: !13857)
!13863 = !DILocation(line: 137, column: 2, scope: !13864, inlinedAt: !13857)
!13864 = distinct !DILexicalBlock(scope: !13865, file: !2461, line: 137, column: 2)
!13865 = distinct !DILexicalBlock(scope: !13851, file: !2461, line: 137, column: 2)
!13866 = !DILocation(line: 137, column: 2, scope: !13865, inlinedAt: !13857)
!13867 = !DILocation(line: 137, column: 2, scope: !13868, inlinedAt: !13857)
!13868 = distinct !DILexicalBlock(scope: !13864, file: !2461, line: 137, column: 2)
!13869 = !DILocation(line: 140, column: 6, scope: !13870, inlinedAt: !13857)
!13870 = distinct !DILexicalBlock(scope: !13851, file: !2461, line: 140, column: 6)
!13871 = !DILocation(line: 140, column: 6, scope: !13851, inlinedAt: !13857)
!13872 = !DILocation(line: 150, column: 9, scope: !13873, inlinedAt: !13857)
!13873 = distinct !DILexicalBlock(scope: !13851, file: !2461, line: 149, column: 6)
!13874 = !DILocation(line: 149, column: 6, scope: !13851, inlinedAt: !13857)
!13875 = !DILocation(line: 157, column: 6, scope: !13876, inlinedAt: !13857)
!13876 = distinct !DILexicalBlock(scope: !13851, file: !2461, line: 157, column: 6)
!13877 = !DILocation(line: 564, column: 6, scope: !13833)
!13878 = !DILocation(line: 566, column: 14, scope: !13879)
!13879 = distinct !DILexicalBlock(scope: !13880, file: !2461, line: 566, column: 7)
!13880 = distinct !DILexicalBlock(scope: !13858, file: !2461, line: 564, column: 42)
!13881 = !DILocation(line: 566, column: 7, scope: !13880)
!13882 = !DILocation(line: 567, column: 4, scope: !13883)
!13883 = distinct !DILexicalBlock(scope: !13879, file: !2461, line: 566, column: 27)
!13884 = !DILocation(line: 568, column: 3, scope: !13883)
!13885 = !DILocation(line: 585, column: 1, scope: !13833)
!13886 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2461, file: !2461, line: 1209, type: !13887, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13889)
!13887 = !DISubroutineType(types: !13888)
!13888 = !{!2346, !13751}
!13889 = !{!13890, !13891, !13892}
!13890 = !DILocalVariable(name: "pq", arg: 1, scope: !13886, file: !2461, line: 1209, type: !13751)
!13891 = !DILocalVariable(name: "thread", scope: !13886, file: !2461, line: 1211, type: !2346)
!13892 = !DILocalVariable(name: "n", scope: !13886, file: !2461, line: 1212, type: !2375)
!13893 = !DILocation(line: 0, scope: !13886)
!13894 = !DILocation(line: 1212, column: 37, scope: !13886)
!13895 = !DILocation(line: 1212, column: 21, scope: !13886)
!13896 = !DILocation(line: 1217, column: 2, scope: !13886)
!13897 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12106, file: !12106, line: 115, type: !13656, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13898)
!13898 = !{!13899}
!13899 = !DILocalVariable(name: "thread", arg: 1, scope: !13897, file: !12106, line: 115, type: !2346)
!13900 = !DILocation(line: 0, scope: !13897)
!13901 = !DILocation(line: 117, column: 46, scope: !13897)
!13902 = !DILocation(line: 117, column: 10, scope: !13897)
!13903 = !DILocation(line: 117, column: 9, scope: !13897)
!13904 = !DILocation(line: 117, column: 2, scope: !13897)
!13905 = distinct !DISubprogram(name: "is_preempt", scope: !2461, file: !2461, line: 62, type: !13491, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13906)
!13906 = !{!13907}
!13907 = !DILocalVariable(name: "thread", arg: 1, scope: !13905, file: !2461, line: 62, type: !2346)
!13908 = !DILocation(line: 0, scope: !13905)
!13909 = !DILocation(line: 65, column: 22, scope: !13905)
!13910 = !DILocation(line: 65, column: 30, scope: !13905)
!13911 = !DILocation(line: 65, column: 2, scope: !13905)
!13912 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12778, file: !12778, line: 35, type: !13913, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13917)
!13913 = !DISubroutineType(types: !13914)
!13914 = !{!334, !13915}
!13915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13916, size: 32)
!13916 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2397)
!13917 = !{!13918}
!13918 = !DILocalVariable(name: "to", arg: 1, scope: !13912, file: !12778, line: 35, type: !13915)
!13919 = !DILocation(line: 0, scope: !13912)
!13920 = !DILocation(line: 37, column: 35, scope: !13912)
!13921 = !DILocation(line: 37, column: 10, scope: !13912)
!13922 = !DILocation(line: 37, column: 9, scope: !13912)
!13923 = !DILocation(line: 37, column: 2, scope: !13912)
!13924 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !128, file: !128, line: 225, type: !13925, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13929)
!13925 = !DISubroutineType(types: !13926)
!13926 = !{!334, !13927}
!13927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13928, size: 32)
!13928 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2356)
!13929 = !{!13930}
!13930 = !DILocalVariable(name: "node", arg: 1, scope: !13924, file: !128, line: 225, type: !13927)
!13931 = !DILocation(line: 0, scope: !13924)
!13932 = !DILocation(line: 227, column: 15, scope: !13924)
!13933 = !DILocation(line: 227, column: 20, scope: !13924)
!13934 = !DILocation(line: 227, column: 2, scope: !13924)
!13935 = distinct !DISubprogram(name: "rb_get_min", scope: !157, file: !157, line: 115, type: !13936, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13939)
!13936 = !DISubroutineType(types: !13937)
!13937 = !{!2375, !13938}
!13938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13755, size: 32)
!13939 = !{!13940}
!13940 = !DILocalVariable(name: "tree", arg: 1, scope: !13935, file: !157, line: 115, type: !13938)
!13941 = !DILocation(line: 0, scope: !13935)
!13942 = !DILocation(line: 117, column: 9, scope: !13935)
!13943 = !DILocation(line: 117, column: 2, scope: !13935)
!13944 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12106, file: !12106, line: 83, type: !13656, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13945)
!13945 = !{!13946}
!13946 = !DILocalVariable(name: "thread", arg: 1, scope: !13944, file: !12106, line: 83, type: !2346)
!13947 = !DILocation(line: 0, scope: !13944)
!13948 = !DILocation(line: 89, column: 16, scope: !13944)
!13949 = !DILocation(line: 89, column: 2, scope: !13944)
!13950 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12106, file: !12106, line: 131, type: !13951, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13953)
!13951 = !DISubroutineType(types: !13952)
!13952 = !{!334, !2346, !110}
!13953 = !{!13954, !13955}
!13954 = !DILocalVariable(name: "thread", arg: 1, scope: !13950, file: !12106, line: 131, type: !2346)
!13955 = !DILocalVariable(name: "state", arg: 2, scope: !13950, file: !12106, line: 131, type: !110)
!13956 = !DILocation(line: 0, scope: !13950)
!13957 = !DILocation(line: 133, column: 23, scope: !13950)
!13958 = !DILocation(line: 133, column: 10, scope: !13950)
!13959 = !DILocation(line: 133, column: 36, scope: !13950)
!13960 = !DILocation(line: 133, column: 45, scope: !13950)
!13961 = !DILocation(line: 133, column: 2, scope: !13950)
!13962 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12106, file: !12106, line: 211, type: !13305, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13963)
!13963 = !{!13964, !13965}
!13964 = !DILocalVariable(name: "prio", arg: 1, scope: !13962, file: !12106, line: 211, type: !109)
!13965 = !DILocalVariable(name: "test_prio", arg: 2, scope: !13962, file: !12106, line: 211, type: !109)
!13966 = !DILocation(line: 0, scope: !13962)
!13967 = !DILocation(line: 213, column: 9, scope: !13962)
!13968 = !DILocation(line: 213, column: 2, scope: !13962)
!13969 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12106, file: !12106, line: 206, type: !13305, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13970)
!13970 = !{!13971, !13972}
!13971 = !DILocalVariable(name: "prio1", arg: 1, scope: !13969, file: !12106, line: 206, type: !109)
!13972 = !DILocalVariable(name: "prio2", arg: 2, scope: !13969, file: !12106, line: 206, type: !109)
!13973 = !DILocation(line: 0, scope: !13969)
!13974 = !DILocation(line: 208, column: 15, scope: !13969)
!13975 = !DILocation(line: 208, column: 2, scope: !13969)
!13976 = distinct !DISubprogram(name: "z_ready_thread", scope: !2461, file: !2461, line: 635, type: !13473, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !13977)
!13977 = !{!13978, !13979, !13981}
!13978 = !DILocalVariable(name: "thread", arg: 1, scope: !13976, file: !2461, line: 635, type: !2346)
!13979 = !DILocalVariable(name: "__i", scope: !13980, file: !2461, line: 637, type: !13507)
!13980 = distinct !DILexicalBlock(scope: !13976, file: !2461, line: 637, column: 2)
!13981 = !DILocalVariable(name: "__key", scope: !13980, file: !2461, line: 637, type: !13507)
!13982 = !DILocation(line: 0, scope: !13976)
!13983 = !DILocation(line: 0, scope: !13980)
!13984 = !DILocation(line: 0, scope: !13515, inlinedAt: !13985)
!13985 = distinct !DILocation(line: 637, column: 2, scope: !13980)
!13986 = !DILocation(line: 55, column: 2, scope: !13524, inlinedAt: !13987)
!13987 = distinct !DILocation(line: 145, column: 10, scope: !13515, inlinedAt: !13985)
!13988 = !DILocation(line: 0, scope: !13524, inlinedAt: !13987)
!13989 = !DILocation(line: 148, column: 2, scope: !13532, inlinedAt: !13985)
!13990 = !DILocation(line: 148, column: 2, scope: !13533, inlinedAt: !13985)
!13991 = !DILocation(line: 148, column: 2, scope: !13536, inlinedAt: !13985)
!13992 = !DILocation(line: 160, column: 2, scope: !13515, inlinedAt: !13985)
!13993 = !DILocation(line: 639, column: 4, scope: !13994)
!13994 = distinct !DILexicalBlock(scope: !13995, file: !2461, line: 638, column: 41)
!13995 = distinct !DILexicalBlock(scope: !13996, file: !2461, line: 638, column: 7)
!13996 = distinct !DILexicalBlock(scope: !13997, file: !2461, line: 637, column: 26)
!13997 = distinct !DILexicalBlock(scope: !13980, file: !2461, line: 637, column: 2)
!13998 = !DILocation(line: 0, scope: !13549, inlinedAt: !13999)
!13999 = distinct !DILocation(line: 637, column: 2, scope: !13997)
!14000 = !DILocation(line: 194, column: 2, scope: !13557, inlinedAt: !13999)
!14001 = !DILocation(line: 194, column: 2, scope: !13558, inlinedAt: !13999)
!14002 = !DILocation(line: 194, column: 2, scope: !13561, inlinedAt: !13999)
!14003 = !DILocation(line: 0, scope: !13563, inlinedAt: !14004)
!14004 = distinct !DILocation(line: 215, column: 2, scope: !13549, inlinedAt: !13999)
!14005 = !DILocation(line: 95, column: 2, scope: !13563, inlinedAt: !14004)
!14006 = !DILocation(line: 642, column: 1, scope: !13976)
!14007 = distinct !DISubprogram(name: "ready_thread", scope: !2461, file: !2461, line: 617, type: !13473, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14008)
!14008 = !{!14009}
!14009 = !DILocalVariable(name: "thread", arg: 1, scope: !14007, file: !2461, line: 617, type: !2346)
!14010 = !DILocation(line: 0, scope: !14007)
!14011 = !DILocation(line: 626, column: 7, scope: !14012)
!14012 = distinct !DILexicalBlock(scope: !14007, file: !2461, line: 626, column: 6)
!14013 = !DILocation(line: 626, column: 34, scope: !14012)
!14014 = !DILocation(line: 626, column: 37, scope: !14012)
!14015 = !DILocation(line: 626, column: 6, scope: !14007)
!14016 = !DILocation(line: 0, scope: !13724, inlinedAt: !14017)
!14017 = distinct !DILocation(line: 629, column: 3, scope: !14018)
!14018 = distinct !DILexicalBlock(scope: !14012, file: !2461, line: 626, column: 64)
!14019 = !DILocation(line: 252, column: 15, scope: !13724, inlinedAt: !14017)
!14020 = !DILocation(line: 252, column: 28, scope: !13724, inlinedAt: !14017)
!14021 = !DILocation(line: 0, scope: !13731, inlinedAt: !14022)
!14022 = distinct !DILocation(line: 254, column: 3, scope: !13735, inlinedAt: !14017)
!14023 = !DILocation(line: 229, column: 2, scope: !13731, inlinedAt: !14022)
!14024 = !DILocation(line: 630, column: 3, scope: !14018)
!14025 = !DILocation(line: 632, column: 2, scope: !14018)
!14026 = !DILocation(line: 633, column: 1, scope: !14007)
!14027 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12106, file: !12106, line: 120, type: !13656, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14028)
!14028 = !{!14029}
!14029 = !DILocalVariable(name: "thread", arg: 1, scope: !14027, file: !12106, line: 120, type: !2346)
!14030 = !DILocation(line: 0, scope: !14027)
!14031 = !DILocation(line: 122, column: 12, scope: !14027)
!14032 = !DILocation(line: 122, column: 62, scope: !14027)
!14033 = !DILocation(line: 123, column: 4, scope: !14027)
!14034 = !DILocation(line: 122, column: 2, scope: !14027)
!14035 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2461, file: !2461, line: 644, type: !13473, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14036)
!14036 = !{!14037, !14038, !14040}
!14037 = !DILocalVariable(name: "thread", arg: 1, scope: !14035, file: !2461, line: 644, type: !2346)
!14038 = !DILocalVariable(name: "__i", scope: !14039, file: !2461, line: 646, type: !13507)
!14039 = distinct !DILexicalBlock(scope: !14035, file: !2461, line: 646, column: 2)
!14040 = !DILocalVariable(name: "__key", scope: !14039, file: !2461, line: 646, type: !13507)
!14041 = !DILocation(line: 0, scope: !14035)
!14042 = !DILocation(line: 0, scope: !14039)
!14043 = !DILocation(line: 0, scope: !13515, inlinedAt: !14044)
!14044 = distinct !DILocation(line: 646, column: 2, scope: !14039)
!14045 = !DILocation(line: 55, column: 2, scope: !13524, inlinedAt: !14046)
!14046 = distinct !DILocation(line: 145, column: 10, scope: !13515, inlinedAt: !14044)
!14047 = !DILocation(line: 0, scope: !13524, inlinedAt: !14046)
!14048 = !DILocation(line: 148, column: 2, scope: !13532, inlinedAt: !14044)
!14049 = !DILocation(line: 148, column: 2, scope: !13533, inlinedAt: !14044)
!14050 = !DILocation(line: 148, column: 2, scope: !13536, inlinedAt: !14044)
!14051 = !DILocation(line: 160, column: 2, scope: !13515, inlinedAt: !14044)
!14052 = !DILocation(line: 647, column: 3, scope: !14053)
!14053 = distinct !DILexicalBlock(scope: !14054, file: !2461, line: 646, column: 26)
!14054 = distinct !DILexicalBlock(scope: !14039, file: !2461, line: 646, column: 2)
!14055 = !DILocation(line: 0, scope: !13549, inlinedAt: !14056)
!14056 = distinct !DILocation(line: 646, column: 2, scope: !14054)
!14057 = !DILocation(line: 194, column: 2, scope: !13557, inlinedAt: !14056)
!14058 = !DILocation(line: 194, column: 2, scope: !13558, inlinedAt: !14056)
!14059 = !DILocation(line: 194, column: 2, scope: !13561, inlinedAt: !14056)
!14060 = !DILocation(line: 0, scope: !13563, inlinedAt: !14061)
!14061 = distinct !DILocation(line: 215, column: 2, scope: !13549, inlinedAt: !14056)
!14062 = !DILocation(line: 95, column: 2, scope: !13563, inlinedAt: !14061)
!14063 = !DILocation(line: 649, column: 1, scope: !14035)
!14064 = distinct !DISubprogram(name: "z_sched_start", scope: !2461, file: !2461, line: 651, type: !13473, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14065)
!14065 = !{!14066, !14067}
!14066 = !DILocalVariable(name: "thread", arg: 1, scope: !14064, file: !2461, line: 651, type: !2346)
!14067 = !DILocalVariable(name: "key", scope: !14064, file: !2461, line: 653, type: !13507)
!14068 = !DILocation(line: 0, scope: !14064)
!14069 = !DILocation(line: 0, scope: !13515, inlinedAt: !14070)
!14070 = distinct !DILocation(line: 653, column: 25, scope: !14064)
!14071 = !DILocation(line: 55, column: 2, scope: !13524, inlinedAt: !14072)
!14072 = distinct !DILocation(line: 145, column: 10, scope: !13515, inlinedAt: !14070)
!14073 = !DILocation(line: 0, scope: !13524, inlinedAt: !14072)
!14074 = !DILocation(line: 148, column: 2, scope: !13532, inlinedAt: !14070)
!14075 = !DILocation(line: 148, column: 2, scope: !13533, inlinedAt: !14070)
!14076 = !DILocation(line: 148, column: 2, scope: !13536, inlinedAt: !14070)
!14077 = !DILocation(line: 160, column: 2, scope: !13515, inlinedAt: !14070)
!14078 = !DILocation(line: 655, column: 6, scope: !14079)
!14079 = distinct !DILexicalBlock(scope: !14064, file: !2461, line: 655, column: 6)
!14080 = !DILocation(line: 655, column: 6, scope: !14064)
!14081 = !DILocation(line: 0, scope: !13549, inlinedAt: !14082)
!14082 = distinct !DILocation(line: 656, column: 3, scope: !14083)
!14083 = distinct !DILexicalBlock(scope: !14079, file: !2461, line: 655, column: 36)
!14084 = !DILocation(line: 194, column: 2, scope: !13557, inlinedAt: !14082)
!14085 = !DILocation(line: 194, column: 2, scope: !13558, inlinedAt: !14082)
!14086 = !DILocation(line: 194, column: 2, scope: !13561, inlinedAt: !14082)
!14087 = !DILocation(line: 0, scope: !13563, inlinedAt: !14088)
!14088 = distinct !DILocation(line: 215, column: 2, scope: !13549, inlinedAt: !14082)
!14089 = !DILocation(line: 95, column: 2, scope: !13563, inlinedAt: !14088)
!14090 = !DILocation(line: 657, column: 3, scope: !14083)
!14091 = !DILocation(line: 660, column: 2, scope: !14064)
!14092 = !DILocation(line: 661, column: 2, scope: !14064)
!14093 = !DILocation(line: 662, column: 2, scope: !14064)
!14094 = !DILocation(line: 663, column: 1, scope: !14064)
!14095 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12106, file: !12106, line: 126, type: !13656, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14096)
!14096 = !{!14097}
!14097 = !DILocalVariable(name: "thread", arg: 1, scope: !14095, file: !12106, line: 126, type: !2346)
!14098 = !DILocation(line: 0, scope: !14095)
!14099 = !DILocation(line: 128, column: 23, scope: !14095)
!14100 = !DILocation(line: 128, column: 36, scope: !14095)
!14101 = !DILocation(line: 128, column: 56, scope: !14095)
!14102 = !DILocation(line: 128, column: 2, scope: !14095)
!14103 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12106, file: !12106, line: 155, type: !13473, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14104)
!14104 = !{!14105}
!14105 = !DILocalVariable(name: "thread", arg: 1, scope: !14103, file: !12106, line: 155, type: !2346)
!14106 = !DILocation(line: 0, scope: !14103)
!14107 = !DILocation(line: 157, column: 15, scope: !14103)
!14108 = !DILocation(line: 157, column: 28, scope: !14103)
!14109 = !DILocation(line: 158, column: 1, scope: !14103)
!14110 = distinct !DISubprogram(name: "z_reschedule", scope: !2461, file: !2461, line: 967, type: !13550, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14111)
!14111 = !{!14112, !14113}
!14112 = !DILocalVariable(name: "lock", arg: 1, scope: !14110, file: !2461, line: 967, type: !13518)
!14113 = !DILocalVariable(name: "key", arg: 2, scope: !14110, file: !2461, line: 967, type: !13507)
!14114 = !DILocation(line: 0, scope: !14110)
!14115 = !DILocation(line: 969, column: 6, scope: !14116)
!14116 = distinct !DILexicalBlock(scope: !14110, file: !2461, line: 969, column: 6)
!14117 = !DILocation(line: 969, column: 23, scope: !14116)
!14118 = !DILocation(line: 969, column: 26, scope: !14116)
!14119 = !DILocation(line: 969, column: 6, scope: !14110)
!14120 = !DILocalVariable(name: "key", arg: 2, scope: !14121, file: !12210, line: 193, type: !13507)
!14121 = distinct !DISubprogram(name: "z_swap", scope: !12210, file: !12210, line: 193, type: !14122, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14124)
!14122 = !DISubroutineType(types: !14123)
!14123 = !{!109, !13518, !13507}
!14124 = !{!14125, !14120}
!14125 = !DILocalVariable(name: "lock", arg: 1, scope: !14121, file: !12210, line: 193, type: !13518)
!14126 = !DILocation(line: 0, scope: !14121, inlinedAt: !14127)
!14127 = distinct !DILocation(line: 970, column: 3, scope: !14128)
!14128 = distinct !DILexicalBlock(scope: !14116, file: !2461, line: 969, column: 39)
!14129 = !DILocalVariable(name: "l", arg: 1, scope: !14130, file: !254, line: 221, type: !13518)
!14130 = distinct !DISubprogram(name: "k_spin_release", scope: !254, file: !254, line: 221, type: !14131, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14133)
!14131 = !DISubroutineType(types: !14132)
!14132 = !{null, !13518}
!14133 = !{!14129}
!14134 = !DILocation(line: 0, scope: !14130, inlinedAt: !14135)
!14135 = distinct !DILocation(line: 195, column: 2, scope: !14121, inlinedAt: !14127)
!14136 = !DILocation(line: 225, column: 2, scope: !14137, inlinedAt: !14135)
!14137 = distinct !DILexicalBlock(scope: !14138, file: !254, line: 225, column: 2)
!14138 = distinct !DILexicalBlock(scope: !14130, file: !254, line: 225, column: 2)
!14139 = !DILocation(line: 225, column: 2, scope: !14138, inlinedAt: !14135)
!14140 = !DILocation(line: 225, column: 2, scope: !14141, inlinedAt: !14135)
!14141 = distinct !DILexicalBlock(scope: !14137, file: !254, line: 225, column: 2)
!14142 = !DILocation(line: 196, column: 9, scope: !14121, inlinedAt: !14127)
!14143 = !DILocation(line: 971, column: 2, scope: !14128)
!14144 = !DILocation(line: 0, scope: !13549, inlinedAt: !14145)
!14145 = distinct !DILocation(line: 972, column: 3, scope: !14146)
!14146 = distinct !DILexicalBlock(scope: !14116, file: !2461, line: 971, column: 9)
!14147 = !DILocation(line: 194, column: 2, scope: !13557, inlinedAt: !14145)
!14148 = !DILocation(line: 194, column: 2, scope: !13558, inlinedAt: !14145)
!14149 = !DILocation(line: 194, column: 2, scope: !13561, inlinedAt: !14145)
!14150 = !DILocation(line: 0, scope: !13563, inlinedAt: !14151)
!14151 = distinct !DILocation(line: 215, column: 2, scope: !13549, inlinedAt: !14145)
!14152 = !DILocation(line: 95, column: 2, scope: !13563, inlinedAt: !14151)
!14153 = !DILocation(line: 975, column: 1, scope: !14110)
!14154 = distinct !DISubprogram(name: "resched", scope: !2461, file: !2461, line: 940, type: !14155, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14157)
!14155 = !DISubroutineType(types: !14156)
!14156 = !{!334, !110}
!14157 = !{!14158}
!14158 = !DILocalVariable(name: "key", arg: 1, scope: !14154, file: !2461, line: 940, type: !110)
!14159 = !DILocation(line: 0, scope: !14154)
!14160 = !DILocalVariable(name: "key", arg: 1, scope: !14161, file: !6005, line: 112, type: !32)
!14161 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6005, file: !6005, line: 112, type: !14162, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14164)
!14162 = !DISubroutineType(types: !14163)
!14163 = !{!334, !32}
!14164 = !{!14160}
!14165 = !DILocation(line: 0, scope: !14161, inlinedAt: !14166)
!14166 = distinct !DILocation(line: 946, column: 9, scope: !14154)
!14167 = !DILocation(line: 115, column: 13, scope: !14161, inlinedAt: !14166)
!14168 = !DILocation(line: 946, column: 32, scope: !14154)
!14169 = !DILocation(line: 1031, column: 3, scope: !14170, inlinedAt: !14173)
!14170 = distinct !DISubprogram(name: "__get_IPSR", scope: !6179, file: !6179, line: 1027, type: !3385, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14171)
!14171 = !{!14172}
!14172 = !DILocalVariable(name: "result", scope: !14170, file: !6179, line: 1029, type: !110)
!14173 = distinct !DILocation(line: 48, column: 10, scope: !14174, inlinedAt: !14175)
!14174 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7020, file: !7020, line: 46, type: !7021, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !2018)
!14175 = distinct !DILocation(line: 946, column: 36, scope: !14154)
!14176 = !{i64 3540510}
!14177 = !DILocation(line: 0, scope: !14170, inlinedAt: !14173)
!14178 = !DILocation(line: 48, column: 9, scope: !14174, inlinedAt: !14175)
!14179 = !DILocation(line: 946, column: 2, scope: !14154)
!14180 = distinct !DISubprogram(name: "need_swap", scope: !2461, file: !2461, line: 953, type: !7021, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14181)
!14181 = !{!14182}
!14182 = !DILocalVariable(name: "new_thread", scope: !14180, file: !2461, line: 959, type: !2346)
!14183 = !DILocation(line: 962, column: 31, scope: !14180)
!14184 = !DILocation(line: 0, scope: !14180)
!14185 = !DILocation(line: 963, column: 23, scope: !14180)
!14186 = !DILocation(line: 963, column: 20, scope: !14180)
!14187 = !DILocation(line: 963, column: 2, scope: !14180)
!14188 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12210, file: !12210, line: 181, type: !6189, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14189)
!14189 = !{!14190, !14191}
!14190 = !DILocalVariable(name: "key", arg: 1, scope: !14188, file: !12210, line: 181, type: !32)
!14191 = !DILocalVariable(name: "ret", scope: !14188, file: !12210, line: 183, type: !109)
!14192 = !DILocation(line: 0, scope: !14188)
!14193 = !DILocation(line: 185, column: 8, scope: !14188)
!14194 = !DILocation(line: 186, column: 2, scope: !14188)
!14195 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2461, file: !2461, line: 665, type: !13473, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14196)
!14196 = !{!14197, !14198, !14200}
!14197 = !DILocalVariable(name: "thread", arg: 1, scope: !14195, file: !2461, line: 665, type: !2346)
!14198 = !DILocalVariable(name: "__i", scope: !14199, file: !2461, line: 671, type: !13507)
!14199 = distinct !DILexicalBlock(scope: !14195, file: !2461, line: 671, column: 2)
!14200 = !DILocalVariable(name: "__key", scope: !14199, file: !2461, line: 671, type: !13507)
!14201 = !DILocation(line: 0, scope: !14195)
!14202 = !DILocation(line: 669, column: 8, scope: !14195)
!14203 = !DILocation(line: 0, scope: !14199)
!14204 = !DILocation(line: 0, scope: !13515, inlinedAt: !14205)
!14205 = distinct !DILocation(line: 671, column: 2, scope: !14199)
!14206 = !DILocation(line: 55, column: 2, scope: !13524, inlinedAt: !14207)
!14207 = distinct !DILocation(line: 145, column: 10, scope: !13515, inlinedAt: !14205)
!14208 = !DILocation(line: 0, scope: !13524, inlinedAt: !14207)
!14209 = !DILocation(line: 148, column: 2, scope: !13532, inlinedAt: !14205)
!14210 = !DILocation(line: 148, column: 2, scope: !13533, inlinedAt: !14205)
!14211 = !DILocation(line: 148, column: 2, scope: !13536, inlinedAt: !14205)
!14212 = !DILocation(line: 160, column: 2, scope: !13515, inlinedAt: !14205)
!14213 = !DILocation(line: 672, column: 7, scope: !14214)
!14214 = distinct !DILexicalBlock(scope: !14215, file: !2461, line: 672, column: 7)
!14215 = distinct !DILexicalBlock(scope: !14216, file: !2461, line: 671, column: 26)
!14216 = distinct !DILexicalBlock(scope: !14199, file: !2461, line: 671, column: 2)
!14217 = !DILocation(line: 672, column: 7, scope: !14215)
!14218 = !DILocation(line: 0, scope: !13707, inlinedAt: !14219)
!14219 = distinct !DILocation(line: 673, column: 4, scope: !14220)
!14220 = distinct !DILexicalBlock(scope: !14214, file: !2461, line: 672, column: 35)
!14221 = !DILocation(line: 266, column: 15, scope: !13707, inlinedAt: !14219)
!14222 = !DILocation(line: 266, column: 28, scope: !13707, inlinedAt: !14219)
!14223 = !DILocation(line: 0, scope: !13715, inlinedAt: !14224)
!14224 = distinct !DILocation(line: 268, column: 3, scope: !13719, inlinedAt: !14219)
!14225 = !DILocation(line: 234, column: 2, scope: !13715, inlinedAt: !14224)
!14226 = !DILocation(line: 674, column: 3, scope: !14220)
!14227 = !DILocation(line: 675, column: 3, scope: !14215)
!14228 = !DILocation(line: 676, column: 26, scope: !14215)
!14229 = !DILocation(line: 676, column: 23, scope: !14215)
!14230 = !DILocation(line: 676, column: 3, scope: !14215)
!14231 = !DILocation(line: 0, scope: !13549, inlinedAt: !14232)
!14232 = distinct !DILocation(line: 671, column: 2, scope: !14216)
!14233 = !DILocation(line: 194, column: 2, scope: !13557, inlinedAt: !14232)
!14234 = !DILocation(line: 194, column: 2, scope: !13558, inlinedAt: !14232)
!14235 = !DILocation(line: 194, column: 2, scope: !13561, inlinedAt: !14232)
!14236 = !DILocation(line: 0, scope: !13563, inlinedAt: !14237)
!14237 = distinct !DILocation(line: 215, column: 2, scope: !13549, inlinedAt: !14232)
!14238 = !DILocation(line: 95, column: 2, scope: !13563, inlinedAt: !14237)
!14239 = !DILocation(line: 679, column: 16, scope: !14240)
!14240 = distinct !DILexicalBlock(scope: !14195, file: !2461, line: 679, column: 6)
!14241 = !DILocation(line: 679, column: 13, scope: !14240)
!14242 = !DILocation(line: 679, column: 6, scope: !14195)
!14243 = !DILocation(line: 680, column: 3, scope: !14244)
!14244 = distinct !DILexicalBlock(scope: !14240, file: !2461, line: 679, column: 26)
!14245 = !DILocation(line: 681, column: 2, scope: !14244)
!14246 = !DILocation(line: 684, column: 1, scope: !14195)
!14247 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !12778, file: !12778, line: 52, type: !13491, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14248)
!14248 = !{!14249}
!14249 = !DILocalVariable(name: "thread", arg: 1, scope: !14247, file: !12778, line: 52, type: !2346)
!14250 = !DILocation(line: 0, scope: !14247)
!14251 = !DILocation(line: 54, column: 39, scope: !14247)
!14252 = !DILocation(line: 54, column: 9, scope: !14247)
!14253 = !DILocation(line: 54, column: 2, scope: !14247)
!14254 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12106, file: !12106, line: 141, type: !13473, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14255)
!14255 = !{!14256}
!14256 = !DILocalVariable(name: "thread", arg: 1, scope: !14254, file: !12106, line: 141, type: !2346)
!14257 = !DILocation(line: 0, scope: !14254)
!14258 = !DILocation(line: 143, column: 15, scope: !14254)
!14259 = !DILocation(line: 143, column: 28, scope: !14254)
!14260 = !DILocation(line: 146, column: 1, scope: !14254)
!14261 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12106, file: !12106, line: 73, type: !3103, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !2018)
!14262 = !DILocation(line: 55, column: 2, scope: !13524, inlinedAt: !14263)
!14263 = distinct !DILocation(line: 75, column: 30, scope: !14261)
!14264 = !DILocation(line: 0, scope: !13524, inlinedAt: !14263)
!14265 = !DILocation(line: 75, column: 9, scope: !14261)
!14266 = !DILocation(line: 76, column: 1, scope: !14261)
!14267 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2461, file: !2461, line: 977, type: !6274, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14268)
!14268 = !{!14269}
!14269 = !DILocalVariable(name: "key", arg: 1, scope: !14267, file: !2461, line: 977, type: !110)
!14270 = !DILocation(line: 0, scope: !14267)
!14271 = !DILocation(line: 979, column: 6, scope: !14272)
!14272 = distinct !DILexicalBlock(scope: !14267, file: !2461, line: 979, column: 6)
!14273 = !DILocation(line: 979, column: 6, scope: !14267)
!14274 = !DILocation(line: 980, column: 3, scope: !14275)
!14275 = distinct !DILexicalBlock(scope: !14272, file: !2461, line: 979, column: 20)
!14276 = !DILocation(line: 981, column: 2, scope: !14275)
!14277 = !DILocation(line: 0, scope: !13563, inlinedAt: !14278)
!14278 = distinct !DILocation(line: 982, column: 3, scope: !14279)
!14279 = distinct !DILexicalBlock(scope: !14272, file: !2461, line: 981, column: 9)
!14280 = !DILocation(line: 95, column: 2, scope: !13563, inlinedAt: !14278)
!14281 = !DILocation(line: 985, column: 1, scope: !14267)
!14282 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2461, file: !2461, line: 695, type: !13473, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14283)
!14283 = !{!14284, !14285}
!14284 = !DILocalVariable(name: "thread", arg: 1, scope: !14282, file: !2461, line: 695, type: !2346)
!14285 = !DILocalVariable(name: "key", scope: !14282, file: !2461, line: 699, type: !13507)
!14286 = !DILocation(line: 0, scope: !14282)
!14287 = !DILocation(line: 0, scope: !13515, inlinedAt: !14288)
!14288 = distinct !DILocation(line: 699, column: 25, scope: !14282)
!14289 = !DILocation(line: 55, column: 2, scope: !13524, inlinedAt: !14290)
!14290 = distinct !DILocation(line: 145, column: 10, scope: !13515, inlinedAt: !14288)
!14291 = !DILocation(line: 0, scope: !13524, inlinedAt: !14290)
!14292 = !DILocation(line: 148, column: 2, scope: !13532, inlinedAt: !14288)
!14293 = !DILocation(line: 148, column: 2, scope: !13533, inlinedAt: !14288)
!14294 = !DILocation(line: 148, column: 2, scope: !13536, inlinedAt: !14288)
!14295 = !DILocation(line: 160, column: 2, scope: !13515, inlinedAt: !14288)
!14296 = !DILocation(line: 702, column: 7, scope: !14297)
!14297 = distinct !DILexicalBlock(scope: !14282, file: !2461, line: 702, column: 6)
!14298 = !DILocation(line: 702, column: 6, scope: !14282)
!14299 = !DILocation(line: 0, scope: !13549, inlinedAt: !14300)
!14300 = distinct !DILocation(line: 703, column: 3, scope: !14301)
!14301 = distinct !DILexicalBlock(scope: !14297, file: !2461, line: 702, column: 38)
!14302 = !DILocation(line: 194, column: 2, scope: !13557, inlinedAt: !14300)
!14303 = !DILocation(line: 194, column: 2, scope: !13558, inlinedAt: !14300)
!14304 = !DILocation(line: 194, column: 2, scope: !13561, inlinedAt: !14300)
!14305 = !DILocation(line: 0, scope: !13563, inlinedAt: !14306)
!14306 = distinct !DILocation(line: 215, column: 2, scope: !13549, inlinedAt: !14300)
!14307 = !DILocation(line: 95, column: 2, scope: !13563, inlinedAt: !14306)
!14308 = !DILocation(line: 704, column: 3, scope: !14301)
!14309 = !DILocation(line: 707, column: 2, scope: !14282)
!14310 = !DILocation(line: 708, column: 2, scope: !14282)
!14311 = !DILocation(line: 710, column: 2, scope: !14282)
!14312 = !DILocation(line: 713, column: 1, scope: !14282)
!14313 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12106, file: !12106, line: 96, type: !13656, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14314)
!14314 = !{!14315}
!14315 = !DILocalVariable(name: "thread", arg: 1, scope: !14313, file: !12106, line: 96, type: !2346)
!14316 = !DILocation(line: 0, scope: !14313)
!14317 = !DILocation(line: 98, column: 23, scope: !14313)
!14318 = !DILocation(line: 98, column: 36, scope: !14313)
!14319 = !DILocation(line: 98, column: 57, scope: !14313)
!14320 = !DILocation(line: 98, column: 2, scope: !14313)
!14321 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12106, file: !12106, line: 148, type: !13473, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14322)
!14322 = !{!14323}
!14323 = !DILocalVariable(name: "thread", arg: 1, scope: !14321, file: !12106, line: 148, type: !2346)
!14324 = !DILocation(line: 0, scope: !14321)
!14325 = !DILocation(line: 150, column: 15, scope: !14321)
!14326 = !DILocation(line: 150, column: 28, scope: !14321)
!14327 = !DILocation(line: 153, column: 1, scope: !14321)
!14328 = distinct !DISubprogram(name: "z_pend_thread", scope: !2461, file: !2461, line: 770, type: !14329, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14335)
!14329 = !DISubroutineType(types: !14330)
!14330 = !{null, !2346, !2377, !14331}
!14331 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !14332)
!14332 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !14333)
!14333 = !{!14334}
!14334 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14332, file: !105, line: 66, baseType: !104, size: 64)
!14335 = !{!14336, !14337, !14338, !14339, !14341}
!14336 = !DILocalVariable(name: "thread", arg: 1, scope: !14328, file: !2461, line: 770, type: !2346)
!14337 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14328, file: !2461, line: 770, type: !2377)
!14338 = !DILocalVariable(name: "timeout", arg: 3, scope: !14328, file: !2461, line: 771, type: !14331)
!14339 = !DILocalVariable(name: "__i", scope: !14340, file: !2461, line: 774, type: !13507)
!14340 = distinct !DILexicalBlock(scope: !14328, file: !2461, line: 774, column: 2)
!14341 = !DILocalVariable(name: "__key", scope: !14340, file: !2461, line: 774, type: !13507)
!14342 = !DILocation(line: 0, scope: !14328)
!14343 = !DILocation(line: 773, column: 2, scope: !14344)
!14344 = distinct !DILexicalBlock(scope: !14345, file: !2461, line: 773, column: 2)
!14345 = distinct !DILexicalBlock(scope: !14328, file: !2461, line: 773, column: 2)
!14346 = !DILocation(line: 773, column: 2, scope: !14345)
!14347 = !DILocation(line: 773, column: 2, scope: !14348)
!14348 = distinct !DILexicalBlock(scope: !14344, file: !2461, line: 773, column: 2)
!14349 = !DILocation(line: 0, scope: !14340)
!14350 = !DILocation(line: 0, scope: !13515, inlinedAt: !14351)
!14351 = distinct !DILocation(line: 774, column: 2, scope: !14340)
!14352 = !DILocation(line: 55, column: 2, scope: !13524, inlinedAt: !14353)
!14353 = distinct !DILocation(line: 145, column: 10, scope: !13515, inlinedAt: !14351)
!14354 = !DILocation(line: 0, scope: !13524, inlinedAt: !14353)
!14355 = !DILocation(line: 148, column: 2, scope: !13532, inlinedAt: !14351)
!14356 = !DILocation(line: 148, column: 2, scope: !13533, inlinedAt: !14351)
!14357 = !DILocation(line: 148, column: 2, scope: !13536, inlinedAt: !14351)
!14358 = !DILocation(line: 160, column: 2, scope: !13515, inlinedAt: !14351)
!14359 = !DILocation(line: 775, column: 3, scope: !14360)
!14360 = distinct !DILexicalBlock(scope: !14361, file: !2461, line: 774, column: 26)
!14361 = distinct !DILexicalBlock(scope: !14340, file: !2461, line: 774, column: 2)
!14362 = !DILocation(line: 0, scope: !13549, inlinedAt: !14363)
!14363 = distinct !DILocation(line: 774, column: 2, scope: !14361)
!14364 = !DILocation(line: 194, column: 2, scope: !13557, inlinedAt: !14363)
!14365 = !DILocation(line: 194, column: 2, scope: !13558, inlinedAt: !14363)
!14366 = !DILocation(line: 194, column: 2, scope: !13561, inlinedAt: !14363)
!14367 = !DILocation(line: 0, scope: !13563, inlinedAt: !14368)
!14368 = distinct !DILocation(line: 215, column: 2, scope: !13549, inlinedAt: !14363)
!14369 = !DILocation(line: 95, column: 2, scope: !13563, inlinedAt: !14368)
!14370 = !DILocation(line: 777, column: 1, scope: !14328)
!14371 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2461, file: !2461, line: 79, type: !13656, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14372)
!14372 = !{!14373}
!14373 = !DILocalVariable(name: "thread", arg: 1, scope: !14371, file: !2461, line: 79, type: !2346)
!14374 = !DILocation(line: 0, scope: !14371)
!14375 = !DILocation(line: 81, column: 23, scope: !14371)
!14376 = !DILocation(line: 81, column: 36, scope: !14371)
!14377 = !DILocation(line: 81, column: 53, scope: !14371)
!14378 = !DILocation(line: 81, column: 2, scope: !14371)
!14379 = distinct !DISubprogram(name: "pend_locked", scope: !2461, file: !2461, line: 760, type: !14329, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14380)
!14380 = !{!14381, !14382, !14383}
!14381 = !DILocalVariable(name: "thread", arg: 1, scope: !14379, file: !2461, line: 760, type: !2346)
!14382 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14379, file: !2461, line: 760, type: !2377)
!14383 = !DILocalVariable(name: "timeout", arg: 3, scope: !14379, file: !2461, line: 761, type: !14331)
!14384 = !DILocation(line: 0, scope: !14379)
!14385 = !DILocation(line: 766, column: 2, scope: !14379)
!14386 = !DILocation(line: 767, column: 2, scope: !14379)
!14387 = !DILocation(line: 768, column: 1, scope: !14379)
!14388 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2461, file: !2461, line: 740, type: !14389, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14391)
!14389 = !DISubroutineType(types: !14390)
!14390 = !{null, !2346, !2377}
!14391 = !{!14392, !14393}
!14392 = !DILocalVariable(name: "thread", arg: 1, scope: !14388, file: !2461, line: 740, type: !2346)
!14393 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14388, file: !2461, line: 740, type: !2377)
!14394 = !DILocation(line: 0, scope: !14388)
!14395 = !DILocation(line: 742, column: 2, scope: !14388)
!14396 = !DILocation(line: 743, column: 2, scope: !14388)
!14397 = !DILocation(line: 747, column: 13, scope: !14398)
!14398 = distinct !DILexicalBlock(scope: !14388, file: !2461, line: 747, column: 6)
!14399 = !DILocation(line: 747, column: 6, scope: !14388)
!14400 = !DILocation(line: 748, column: 16, scope: !14401)
!14401 = distinct !DILexicalBlock(scope: !14398, file: !2461, line: 747, column: 22)
!14402 = !DILocation(line: 748, column: 26, scope: !14401)
!14403 = !DILocation(line: 749, column: 28, scope: !14401)
!14404 = !DILocalVariable(name: "pq", arg: 1, scope: !14405, file: !2461, line: 181, type: !14408)
!14405 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2461, file: !2461, line: 181, type: !14406, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14409)
!14406 = !DISubroutineType(types: !14407)
!14407 = !{null, !14408, !2346}
!14408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2382, size: 32)
!14409 = !{!14404, !14410, !14411}
!14410 = !DILocalVariable(name: "thread", arg: 2, scope: !14405, file: !2461, line: 182, type: !2346)
!14411 = !DILocalVariable(name: "t", scope: !14405, file: !2461, line: 184, type: !2346)
!14412 = !DILocation(line: 0, scope: !14405, inlinedAt: !14413)
!14413 = distinct !DILocation(line: 749, column: 3, scope: !14401)
!14414 = !DILocation(line: 186, column: 2, scope: !14415, inlinedAt: !14413)
!14415 = distinct !DILexicalBlock(scope: !14416, file: !2461, line: 186, column: 2)
!14416 = distinct !DILexicalBlock(scope: !14405, file: !2461, line: 186, column: 2)
!14417 = !DILocation(line: 186, column: 2, scope: !14416, inlinedAt: !14413)
!14418 = !DILocation(line: 186, column: 2, scope: !14419, inlinedAt: !14413)
!14419 = distinct !DILexicalBlock(scope: !14415, file: !2461, line: 186, column: 2)
!14420 = !DILocation(line: 188, column: 2, scope: !14421, inlinedAt: !14413)
!14421 = distinct !DILexicalBlock(scope: !14405, file: !2461, line: 188, column: 2)
!14422 = !DILocation(line: 188, column: 2, scope: !14423, inlinedAt: !14413)
!14423 = distinct !DILexicalBlock(scope: !14421, file: !2461, line: 188, column: 2)
!14424 = !DILocation(line: 0, scope: !14421, inlinedAt: !14413)
!14425 = !DILocation(line: 189, column: 7, scope: !14426, inlinedAt: !14413)
!14426 = distinct !DILexicalBlock(scope: !14427, file: !2461, line: 189, column: 7)
!14427 = distinct !DILexicalBlock(scope: !14423, file: !2461, line: 188, column: 56)
!14428 = !DILocation(line: 189, column: 35, scope: !14426, inlinedAt: !14413)
!14429 = !DILocation(line: 189, column: 7, scope: !14427, inlinedAt: !14413)
!14430 = !DILocation(line: 191, column: 21, scope: !14431, inlinedAt: !14413)
!14431 = distinct !DILexicalBlock(scope: !14426, file: !2461, line: 189, column: 40)
!14432 = !DILocation(line: 190, column: 4, scope: !14431, inlinedAt: !14413)
!14433 = !DILocation(line: 192, column: 4, scope: !14431, inlinedAt: !14413)
!14434 = distinct !{!14434, !14420, !14435}
!14435 = !DILocation(line: 194, column: 2, scope: !14421, inlinedAt: !14413)
!14436 = !DILocation(line: 196, column: 37, scope: !14405, inlinedAt: !14413)
!14437 = !DILocation(line: 196, column: 2, scope: !14405, inlinedAt: !14413)
!14438 = !DILocation(line: 197, column: 1, scope: !14405, inlinedAt: !14413)
!14439 = !DILocation(line: 751, column: 1, scope: !14388)
!14440 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2461, file: !2461, line: 753, type: !14441, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14443)
!14441 = !DISubroutineType(types: !14442)
!14442 = !{null, !2346, !14331}
!14443 = !{!14444, !14445}
!14444 = !DILocalVariable(name: "thread", arg: 1, scope: !14440, file: !2461, line: 753, type: !2346)
!14445 = !DILocalVariable(name: "timeout", arg: 2, scope: !14440, file: !2461, line: 753, type: !14331)
!14446 = !DILocation(line: 0, scope: !14440)
!14447 = !DILocation(line: 755, column: 7, scope: !14448)
!14448 = distinct !DILexicalBlock(scope: !14440, file: !2461, line: 755, column: 6)
!14449 = !DILocation(line: 755, column: 6, scope: !14440)
!14450 = !DILocation(line: 756, column: 3, scope: !14451)
!14451 = distinct !DILexicalBlock(scope: !14448, file: !2461, line: 755, column: 41)
!14452 = !DILocation(line: 757, column: 2, scope: !14451)
!14453 = !DILocation(line: 758, column: 1, scope: !14440)
!14454 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12778, file: !12778, line: 47, type: !14441, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14455)
!14455 = !{!14456, !14457}
!14456 = !DILocalVariable(name: "thread", arg: 1, scope: !14454, file: !12778, line: 47, type: !2346)
!14457 = !DILocalVariable(name: "ticks", arg: 2, scope: !14454, file: !12778, line: 47, type: !14331)
!14458 = !DILocation(line: 0, scope: !14454)
!14459 = !DILocation(line: 49, column: 30, scope: !14454)
!14460 = !DILocation(line: 49, column: 2, scope: !14454)
!14461 = !DILocation(line: 50, column: 1, scope: !14454)
!14462 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2461, file: !2461, line: 795, type: !2403, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14463)
!14463 = !{!14464, !14465, !14466, !14468, !14469}
!14464 = !DILocalVariable(name: "timeout", arg: 1, scope: !14462, file: !2461, line: 795, type: !2405)
!14465 = !DILocalVariable(name: "thread", scope: !14462, file: !2461, line: 797, type: !2346)
!14466 = !DILocalVariable(name: "__i", scope: !14467, file: !2461, line: 800, type: !13507)
!14467 = distinct !DILexicalBlock(scope: !14462, file: !2461, line: 800, column: 2)
!14468 = !DILocalVariable(name: "__key", scope: !14467, file: !2461, line: 800, type: !13507)
!14469 = !DILocalVariable(name: "killed", scope: !14470, file: !2461, line: 801, type: !334)
!14470 = distinct !DILexicalBlock(scope: !14471, file: !2461, line: 800, column: 26)
!14471 = distinct !DILexicalBlock(scope: !14467, file: !2461, line: 800, column: 2)
!14472 = !DILocation(line: 0, scope: !14462)
!14473 = !DILocation(line: 797, column: 28, scope: !14462)
!14474 = !DILocation(line: 0, scope: !14467)
!14475 = !DILocation(line: 0, scope: !13515, inlinedAt: !14476)
!14476 = distinct !DILocation(line: 800, column: 2, scope: !14467)
!14477 = !DILocation(line: 55, column: 2, scope: !13524, inlinedAt: !14478)
!14478 = distinct !DILocation(line: 145, column: 10, scope: !13515, inlinedAt: !14476)
!14479 = !DILocation(line: 0, scope: !13524, inlinedAt: !14478)
!14480 = !DILocation(line: 148, column: 2, scope: !13532, inlinedAt: !14476)
!14481 = !DILocation(line: 148, column: 2, scope: !13533, inlinedAt: !14476)
!14482 = !DILocation(line: 148, column: 2, scope: !13536, inlinedAt: !14476)
!14483 = !DILocation(line: 160, column: 2, scope: !13515, inlinedAt: !14476)
!14484 = !DILocation(line: 801, column: 27, scope: !14470)
!14485 = !DILocation(line: 801, column: 32, scope: !14470)
!14486 = !DILocation(line: 801, column: 61, scope: !14470)
!14487 = !DILocation(line: 0, scope: !14470)
!14488 = !DILocation(line: 804, column: 7, scope: !14470)
!14489 = !DILocation(line: 805, column: 21, scope: !14490)
!14490 = distinct !DILexicalBlock(scope: !14491, file: !2461, line: 805, column: 8)
!14491 = distinct !DILexicalBlock(scope: !14492, file: !2461, line: 804, column: 16)
!14492 = distinct !DILexicalBlock(scope: !14470, file: !2461, line: 804, column: 7)
!14493 = !DILocation(line: 805, column: 31, scope: !14490)
!14494 = !DILocation(line: 805, column: 8, scope: !14491)
!14495 = !DILocation(line: 806, column: 5, scope: !14496)
!14496 = distinct !DILexicalBlock(scope: !14490, file: !2461, line: 805, column: 40)
!14497 = !DILocation(line: 807, column: 4, scope: !14496)
!14498 = !DILocation(line: 808, column: 4, scope: !14491)
!14499 = !DILocation(line: 809, column: 4, scope: !14491)
!14500 = !DILocation(line: 810, column: 4, scope: !14491)
!14501 = !DILocation(line: 811, column: 3, scope: !14491)
!14502 = !DILocation(line: 0, scope: !13549, inlinedAt: !14503)
!14503 = distinct !DILocation(line: 800, column: 2, scope: !14471)
!14504 = !DILocation(line: 194, column: 2, scope: !13557, inlinedAt: !14503)
!14505 = !DILocation(line: 194, column: 2, scope: !13558, inlinedAt: !14503)
!14506 = !DILocation(line: 194, column: 2, scope: !13561, inlinedAt: !14503)
!14507 = !DILocation(line: 0, scope: !13563, inlinedAt: !14508)
!14508 = distinct !DILocation(line: 215, column: 2, scope: !13549, inlinedAt: !14503)
!14509 = !DILocation(line: 95, column: 2, scope: !13563, inlinedAt: !14508)
!14510 = !DILocation(line: 813, column: 1, scope: !14462)
!14511 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2461, file: !2461, line: 779, type: !13473, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14512)
!14512 = !{!14513}
!14513 = !DILocalVariable(name: "thread", arg: 1, scope: !14511, file: !2461, line: 779, type: !2346)
!14514 = !DILocation(line: 0, scope: !14511)
!14515 = !DILocation(line: 781, column: 21, scope: !14511)
!14516 = !DILocation(line: 781, column: 2, scope: !14511)
!14517 = !DILocation(line: 782, column: 2, scope: !14511)
!14518 = !DILocation(line: 783, column: 15, scope: !14511)
!14519 = !DILocation(line: 783, column: 25, scope: !14511)
!14520 = !DILocation(line: 784, column: 1, scope: !14511)
!14521 = distinct !DISubprogram(name: "pended_on_thread", scope: !2461, file: !2461, line: 724, type: !14522, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14524)
!14522 = !DISubroutineType(types: !14523)
!14523 = !{!2377, !2346}
!14524 = !{!14525}
!14525 = !DILocalVariable(name: "thread", arg: 1, scope: !14521, file: !2461, line: 724, type: !2346)
!14526 = !DILocation(line: 0, scope: !14521)
!14527 = !DILocation(line: 726, column: 2, scope: !14528)
!14528 = distinct !DILexicalBlock(scope: !14529, file: !2461, line: 726, column: 2)
!14529 = distinct !DILexicalBlock(scope: !14521, file: !2461, line: 726, column: 2)
!14530 = !DILocation(line: 726, column: 2, scope: !14529)
!14531 = !DILocation(line: 726, column: 2, scope: !14532)
!14532 = distinct !DILexicalBlock(scope: !14528, file: !2461, line: 726, column: 2)
!14533 = !DILocation(line: 728, column: 2, scope: !14521)
!14534 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2461, file: !2461, line: 1137, type: !14406, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14535)
!14535 = !{!14536, !14537}
!14536 = !DILocalVariable(name: "pq", arg: 1, scope: !14534, file: !2461, line: 1137, type: !14408)
!14537 = !DILocalVariable(name: "thread", arg: 2, scope: !14534, file: !2461, line: 1137, type: !2346)
!14538 = !DILocation(line: 0, scope: !14534)
!14539 = !DILocation(line: 1139, column: 2, scope: !14540)
!14540 = distinct !DILexicalBlock(scope: !14541, file: !2461, line: 1139, column: 2)
!14541 = distinct !DILexicalBlock(scope: !14534, file: !2461, line: 1139, column: 2)
!14542 = !DILocation(line: 1139, column: 2, scope: !14541)
!14543 = !DILocation(line: 1139, column: 2, scope: !14544)
!14544 = distinct !DILexicalBlock(scope: !14540, file: !2461, line: 1139, column: 2)
!14545 = !DILocation(line: 1141, column: 33, scope: !14534)
!14546 = !DILocation(line: 1141, column: 2, scope: !14534)
!14547 = !DILocation(line: 1142, column: 1, scope: !14534)
!14548 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12106, file: !12106, line: 165, type: !13473, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14549)
!14549 = !{!14550}
!14550 = !DILocalVariable(name: "thread", arg: 1, scope: !14548, file: !12106, line: 165, type: !2346)
!14551 = !DILocation(line: 0, scope: !14548)
!14552 = !DILocation(line: 167, column: 15, scope: !14548)
!14553 = !DILocation(line: 167, column: 28, scope: !14548)
!14554 = !DILocation(line: 168, column: 1, scope: !14548)
!14555 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !128, file: !128, line: 496, type: !14556, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14559)
!14556 = !DISubroutineType(types: !14557)
!14557 = !{null, !14558}
!14558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2356, size: 32)
!14559 = !{!14560, !14561, !14563}
!14560 = !DILocalVariable(name: "node", arg: 1, scope: !14555, file: !128, line: 496, type: !14558)
!14561 = !DILocalVariable(name: "prev", scope: !14555, file: !128, line: 498, type: !14562)
!14562 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14558)
!14563 = !DILocalVariable(name: "next", scope: !14555, file: !128, line: 499, type: !14562)
!14564 = !DILocation(line: 0, scope: !14555)
!14565 = !DILocation(line: 498, column: 34, scope: !14555)
!14566 = !DILocation(line: 499, column: 34, scope: !14555)
!14567 = !DILocation(line: 501, column: 8, scope: !14555)
!14568 = !DILocation(line: 501, column: 13, scope: !14555)
!14569 = !DILocation(line: 502, column: 8, scope: !14555)
!14570 = !DILocation(line: 502, column: 13, scope: !14555)
!14571 = !DILocation(line: 503, column: 2, scope: !14555)
!14572 = !DILocation(line: 504, column: 1, scope: !14555)
!14573 = distinct !DISubprogram(name: "sys_dnode_init", scope: !128, file: !128, line: 211, type: !14556, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14574)
!14574 = !{!14575}
!14575 = !DILocalVariable(name: "node", arg: 1, scope: !14573, file: !128, line: 211, type: !14558)
!14576 = !DILocation(line: 0, scope: !14573)
!14577 = !DILocation(line: 213, column: 8, scope: !14573)
!14578 = !DILocation(line: 213, column: 13, scope: !14573)
!14579 = !DILocation(line: 214, column: 8, scope: !14573)
!14580 = !DILocation(line: 214, column: 13, scope: !14573)
!14581 = !DILocation(line: 215, column: 1, scope: !14573)
!14582 = distinct !DISubprogram(name: "unready_thread", scope: !2461, file: !2461, line: 731, type: !13473, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14583)
!14583 = !{!14584}
!14584 = !DILocalVariable(name: "thread", arg: 1, scope: !14582, file: !2461, line: 731, type: !2346)
!14585 = !DILocation(line: 0, scope: !14582)
!14586 = !DILocation(line: 733, column: 6, scope: !14587)
!14587 = distinct !DILexicalBlock(scope: !14582, file: !2461, line: 733, column: 6)
!14588 = !DILocation(line: 733, column: 6, scope: !14582)
!14589 = !DILocation(line: 0, scope: !13707, inlinedAt: !14590)
!14590 = distinct !DILocation(line: 734, column: 3, scope: !14591)
!14591 = distinct !DILexicalBlock(scope: !14587, file: !2461, line: 733, column: 34)
!14592 = !DILocation(line: 266, column: 15, scope: !13707, inlinedAt: !14590)
!14593 = !DILocation(line: 266, column: 28, scope: !13707, inlinedAt: !14590)
!14594 = !DILocation(line: 0, scope: !13715, inlinedAt: !14595)
!14595 = distinct !DILocation(line: 268, column: 3, scope: !13719, inlinedAt: !14590)
!14596 = !DILocation(line: 234, column: 2, scope: !13715, inlinedAt: !14595)
!14597 = !DILocation(line: 735, column: 2, scope: !14591)
!14598 = !DILocation(line: 736, column: 25, scope: !14582)
!14599 = !DILocation(line: 736, column: 22, scope: !14582)
!14600 = !DILocation(line: 736, column: 2, scope: !14582)
!14601 = !DILocation(line: 737, column: 1, scope: !14582)
!14602 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12106, file: !12106, line: 160, type: !13473, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14603)
!14603 = !{!14604}
!14604 = !DILocalVariable(name: "thread", arg: 1, scope: !14602, file: !12106, line: 160, type: !2346)
!14605 = !DILocation(line: 0, scope: !14602)
!14606 = !DILocation(line: 162, column: 15, scope: !14602)
!14607 = !DILocation(line: 162, column: 28, scope: !14602)
!14608 = !DILocation(line: 163, column: 1, scope: !14602)
!14609 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !128, file: !128, line: 294, type: !14610, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14612)
!14610 = !DISubroutineType(types: !14611)
!14611 = !{!14558, !14408}
!14612 = !{!14613}
!14613 = !DILocalVariable(name: "list", arg: 1, scope: !14609, file: !128, line: 294, type: !14408)
!14614 = !DILocation(line: 0, scope: !14609)
!14615 = !DILocation(line: 296, column: 9, scope: !14609)
!14616 = !DILocation(line: 296, column: 49, scope: !14609)
!14617 = !DILocation(line: 296, column: 2, scope: !14609)
!14618 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !128, file: !128, line: 443, type: !14619, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14621)
!14619 = !DISubroutineType(types: !14620)
!14620 = !{null, !14558, !14558}
!14621 = !{!14622, !14623, !14624}
!14622 = !DILocalVariable(name: "successor", arg: 1, scope: !14618, file: !128, line: 443, type: !14558)
!14623 = !DILocalVariable(name: "node", arg: 2, scope: !14618, file: !128, line: 443, type: !14558)
!14624 = !DILocalVariable(name: "prev", scope: !14618, file: !128, line: 445, type: !14562)
!14625 = !DILocation(line: 0, scope: !14618)
!14626 = !DILocation(line: 445, column: 39, scope: !14618)
!14627 = !DILocation(line: 447, column: 8, scope: !14618)
!14628 = !DILocation(line: 447, column: 13, scope: !14618)
!14629 = !DILocation(line: 448, column: 8, scope: !14618)
!14630 = !DILocation(line: 448, column: 13, scope: !14618)
!14631 = !DILocation(line: 449, column: 8, scope: !14618)
!14632 = !DILocation(line: 449, column: 13, scope: !14618)
!14633 = !DILocation(line: 450, column: 18, scope: !14618)
!14634 = !DILocation(line: 451, column: 1, scope: !14618)
!14635 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !128, file: !128, line: 341, type: !14636, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14638)
!14636 = !DISubroutineType(types: !14637)
!14637 = !{!14558, !14408, !14558}
!14638 = !{!14639, !14640}
!14639 = !DILocalVariable(name: "list", arg: 1, scope: !14635, file: !128, line: 341, type: !14408)
!14640 = !DILocalVariable(name: "node", arg: 2, scope: !14635, file: !128, line: 342, type: !14558)
!14641 = !DILocation(line: 0, scope: !14635)
!14642 = !DILocation(line: 344, column: 15, scope: !14635)
!14643 = !DILocation(line: 344, column: 9, scope: !14635)
!14644 = !DILocation(line: 344, column: 26, scope: !14635)
!14645 = !DILocation(line: 344, column: 2, scope: !14635)
!14646 = distinct !DISubprogram(name: "sys_dlist_append", scope: !128, file: !128, line: 404, type: !14647, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14649)
!14647 = !DISubroutineType(types: !14648)
!14648 = !{null, !14408, !14558}
!14649 = !{!14650, !14651, !14652}
!14650 = !DILocalVariable(name: "list", arg: 1, scope: !14646, file: !128, line: 404, type: !14408)
!14651 = !DILocalVariable(name: "node", arg: 2, scope: !14646, file: !128, line: 404, type: !14558)
!14652 = !DILocalVariable(name: "tail", scope: !14646, file: !128, line: 406, type: !14562)
!14653 = !DILocation(line: 0, scope: !14646)
!14654 = !DILocation(line: 406, column: 34, scope: !14646)
!14655 = !DILocation(line: 408, column: 8, scope: !14646)
!14656 = !DILocation(line: 408, column: 13, scope: !14646)
!14657 = !DILocation(line: 409, column: 8, scope: !14646)
!14658 = !DILocation(line: 409, column: 13, scope: !14646)
!14659 = !DILocation(line: 411, column: 8, scope: !14646)
!14660 = !DILocation(line: 411, column: 13, scope: !14646)
!14661 = !DILocation(line: 412, column: 13, scope: !14646)
!14662 = !DILocation(line: 413, column: 1, scope: !14646)
!14663 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !128, file: !128, line: 325, type: !14636, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14664)
!14664 = !{!14665, !14666}
!14665 = !DILocalVariable(name: "list", arg: 1, scope: !14663, file: !128, line: 325, type: !14408)
!14666 = !DILocalVariable(name: "node", arg: 2, scope: !14663, file: !128, line: 326, type: !14558)
!14667 = !DILocation(line: 0, scope: !14663)
!14668 = !DILocation(line: 328, column: 24, scope: !14663)
!14669 = !DILocation(line: 328, column: 15, scope: !14663)
!14670 = !DILocation(line: 328, column: 9, scope: !14663)
!14671 = !DILocation(line: 328, column: 45, scope: !14663)
!14672 = !DILocation(line: 328, column: 2, scope: !14663)
!14673 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !128, file: !128, line: 266, type: !14674, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14676)
!14674 = !DISubroutineType(types: !14675)
!14675 = !{!334, !14408}
!14676 = !{!14677}
!14677 = !DILocalVariable(name: "list", arg: 1, scope: !14673, file: !128, line: 266, type: !14408)
!14678 = !DILocation(line: 0, scope: !14673)
!14679 = !DILocation(line: 268, column: 15, scope: !14673)
!14680 = !DILocation(line: 268, column: 20, scope: !14673)
!14681 = !DILocation(line: 268, column: 2, scope: !14673)
!14682 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2461, file: !2461, line: 786, type: !13473, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14683)
!14683 = !{!14684, !14685, !14687}
!14684 = !DILocalVariable(name: "thread", arg: 1, scope: !14682, file: !2461, line: 786, type: !2346)
!14685 = !DILocalVariable(name: "__i", scope: !14686, file: !2461, line: 788, type: !13507)
!14686 = distinct !DILexicalBlock(scope: !14682, file: !2461, line: 788, column: 2)
!14687 = !DILocalVariable(name: "__key", scope: !14686, file: !2461, line: 788, type: !13507)
!14688 = !DILocation(line: 0, scope: !14682)
!14689 = !DILocation(line: 0, scope: !14686)
!14690 = !DILocation(line: 0, scope: !13515, inlinedAt: !14691)
!14691 = distinct !DILocation(line: 788, column: 2, scope: !14686)
!14692 = !DILocation(line: 55, column: 2, scope: !13524, inlinedAt: !14693)
!14693 = distinct !DILocation(line: 145, column: 10, scope: !13515, inlinedAt: !14691)
!14694 = !DILocation(line: 0, scope: !13524, inlinedAt: !14693)
!14695 = !DILocation(line: 148, column: 2, scope: !13532, inlinedAt: !14691)
!14696 = !DILocation(line: 148, column: 2, scope: !13533, inlinedAt: !14691)
!14697 = !DILocation(line: 148, column: 2, scope: !13536, inlinedAt: !14691)
!14698 = !DILocation(line: 160, column: 2, scope: !13515, inlinedAt: !14691)
!14699 = !DILocation(line: 789, column: 3, scope: !14700)
!14700 = distinct !DILexicalBlock(scope: !14701, file: !2461, line: 788, column: 26)
!14701 = distinct !DILexicalBlock(scope: !14686, file: !2461, line: 788, column: 2)
!14702 = !DILocation(line: 0, scope: !13549, inlinedAt: !14703)
!14703 = distinct !DILocation(line: 788, column: 2, scope: !14701)
!14704 = !DILocation(line: 194, column: 2, scope: !13557, inlinedAt: !14703)
!14705 = !DILocation(line: 194, column: 2, scope: !13558, inlinedAt: !14703)
!14706 = !DILocation(line: 194, column: 2, scope: !13561, inlinedAt: !14703)
!14707 = !DILocation(line: 0, scope: !13563, inlinedAt: !14708)
!14708 = distinct !DILocation(line: 215, column: 2, scope: !13549, inlinedAt: !14703)
!14709 = !DILocation(line: 95, column: 2, scope: !13563, inlinedAt: !14708)
!14710 = !DILocation(line: 791, column: 1, scope: !14682)
!14711 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2461, file: !2461, line: 816, type: !14712, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14714)
!14712 = !DISubroutineType(types: !14713)
!14713 = !{!109, !110, !2377, !14331}
!14714 = !{!14715, !14716, !14717, !14718, !14719, !14721}
!14715 = !DILocalVariable(name: "key", arg: 1, scope: !14711, file: !2461, line: 816, type: !110)
!14716 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14711, file: !2461, line: 816, type: !2377)
!14717 = !DILocalVariable(name: "timeout", arg: 3, scope: !14711, file: !2461, line: 816, type: !14331)
!14718 = !DILocalVariable(name: "ret", scope: !14711, file: !2461, line: 828, type: !109)
!14719 = !DILocalVariable(name: "__i", scope: !14720, file: !2461, line: 829, type: !13507)
!14720 = distinct !DILexicalBlock(scope: !14711, file: !2461, line: 829, column: 2)
!14721 = !DILocalVariable(name: "__key", scope: !14720, file: !2461, line: 829, type: !13507)
!14722 = !DILocation(line: 0, scope: !14711)
!14723 = !DILocation(line: 823, column: 14, scope: !14711)
!14724 = !DILocation(line: 823, column: 2, scope: !14711)
!14725 = !DILocation(line: 826, column: 20, scope: !14711)
!14726 = !DILocation(line: 826, column: 18, scope: !14711)
!14727 = !DILocation(line: 828, column: 12, scope: !14711)
!14728 = !DILocation(line: 0, scope: !14720)
!14729 = !DILocation(line: 0, scope: !13515, inlinedAt: !14730)
!14730 = distinct !DILocation(line: 829, column: 2, scope: !14720)
!14731 = !DILocation(line: 55, column: 2, scope: !13524, inlinedAt: !14732)
!14732 = distinct !DILocation(line: 145, column: 10, scope: !13515, inlinedAt: !14730)
!14733 = !DILocation(line: 0, scope: !13524, inlinedAt: !14732)
!14734 = !DILocation(line: 148, column: 2, scope: !13532, inlinedAt: !14730)
!14735 = !DILocation(line: 148, column: 2, scope: !13533, inlinedAt: !14730)
!14736 = !DILocation(line: 148, column: 2, scope: !13536, inlinedAt: !14730)
!14737 = !DILocation(line: 160, column: 2, scope: !13515, inlinedAt: !14730)
!14738 = !DILocation(line: 830, column: 7, scope: !14739)
!14739 = distinct !DILexicalBlock(scope: !14740, file: !2461, line: 830, column: 7)
!14740 = distinct !DILexicalBlock(scope: !14741, file: !2461, line: 829, column: 26)
!14741 = distinct !DILexicalBlock(scope: !14720, file: !2461, line: 829, column: 2)
!14742 = !DILocation(line: 830, column: 26, scope: !14739)
!14743 = !DILocation(line: 830, column: 23, scope: !14739)
!14744 = !DILocation(line: 830, column: 7, scope: !14740)
!14745 = !DILocation(line: 831, column: 20, scope: !14746)
!14746 = distinct !DILexicalBlock(scope: !14739, file: !2461, line: 830, column: 36)
!14747 = !DILocation(line: 832, column: 3, scope: !14746)
!14748 = !DILocation(line: 0, scope: !13549, inlinedAt: !14749)
!14749 = distinct !DILocation(line: 829, column: 2, scope: !14741)
!14750 = !DILocation(line: 194, column: 2, scope: !13557, inlinedAt: !14749)
!14751 = !DILocation(line: 194, column: 2, scope: !13558, inlinedAt: !14749)
!14752 = !DILocation(line: 194, column: 2, scope: !13561, inlinedAt: !14749)
!14753 = !DILocation(line: 0, scope: !13563, inlinedAt: !14754)
!14754 = distinct !DILocation(line: 215, column: 2, scope: !13549, inlinedAt: !14749)
!14755 = !DILocation(line: 95, column: 2, scope: !13563, inlinedAt: !14754)
!14756 = !DILocation(line: 834, column: 2, scope: !14711)
!14757 = distinct !DISubprogram(name: "z_pend_curr", scope: !2461, file: !2461, line: 840, type: !14758, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14760)
!14758 = !DISubroutineType(types: !14759)
!14759 = !{!109, !13518, !13507, !2377, !14331}
!14760 = !{!14761, !14762, !14763, !14764}
!14761 = !DILocalVariable(name: "lock", arg: 1, scope: !14757, file: !2461, line: 840, type: !13518)
!14762 = !DILocalVariable(name: "key", arg: 2, scope: !14757, file: !2461, line: 840, type: !13507)
!14763 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14757, file: !2461, line: 841, type: !2377)
!14764 = !DILocalVariable(name: "timeout", arg: 4, scope: !14757, file: !2461, line: 841, type: !14331)
!14765 = !DILocation(line: 0, scope: !14757)
!14766 = !DILocation(line: 844, column: 20, scope: !14757)
!14767 = !DILocation(line: 844, column: 18, scope: !14757)
!14768 = !DILocation(line: 846, column: 2, scope: !14769)
!14769 = distinct !DILexicalBlock(scope: !14770, file: !2461, line: 846, column: 2)
!14770 = distinct !DILexicalBlock(scope: !14757, file: !2461, line: 846, column: 2)
!14771 = !DILocation(line: 846, column: 2, scope: !14770)
!14772 = !DILocation(line: 846, column: 2, scope: !14773)
!14773 = distinct !DILexicalBlock(scope: !14769, file: !2461, line: 846, column: 2)
!14774 = !DILocation(line: 0, scope: !13515, inlinedAt: !14775)
!14775 = distinct !DILocation(line: 856, column: 9, scope: !14757)
!14776 = !DILocation(line: 55, column: 2, scope: !13524, inlinedAt: !14777)
!14777 = distinct !DILocation(line: 145, column: 10, scope: !13515, inlinedAt: !14775)
!14778 = !DILocation(line: 0, scope: !13524, inlinedAt: !14777)
!14779 = !DILocation(line: 148, column: 2, scope: !13532, inlinedAt: !14775)
!14780 = !DILocation(line: 148, column: 2, scope: !13533, inlinedAt: !14775)
!14781 = !DILocation(line: 148, column: 2, scope: !13536, inlinedAt: !14775)
!14782 = !DILocation(line: 160, column: 2, scope: !13515, inlinedAt: !14775)
!14783 = !DILocation(line: 857, column: 14, scope: !14757)
!14784 = !DILocation(line: 857, column: 2, scope: !14757)
!14785 = !DILocation(line: 0, scope: !14130, inlinedAt: !14786)
!14786 = distinct !DILocation(line: 858, column: 2, scope: !14757)
!14787 = !DILocation(line: 225, column: 2, scope: !14137, inlinedAt: !14786)
!14788 = !DILocation(line: 225, column: 2, scope: !14138, inlinedAt: !14786)
!14789 = !DILocation(line: 225, column: 2, scope: !14141, inlinedAt: !14786)
!14790 = !DILocation(line: 0, scope: !14121, inlinedAt: !14791)
!14791 = distinct !DILocation(line: 859, column: 9, scope: !14757)
!14792 = !DILocation(line: 0, scope: !14130, inlinedAt: !14793)
!14793 = distinct !DILocation(line: 195, column: 2, scope: !14121, inlinedAt: !14791)
!14794 = !DILocation(line: 225, column: 2, scope: !14137, inlinedAt: !14793)
!14795 = !DILocation(line: 225, column: 2, scope: !14138, inlinedAt: !14793)
!14796 = !DILocation(line: 225, column: 2, scope: !14141, inlinedAt: !14793)
!14797 = !DILocation(line: 196, column: 9, scope: !14121, inlinedAt: !14791)
!14798 = !DILocation(line: 859, column: 2, scope: !14757)
!14799 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2461, file: !2461, line: 862, type: !14800, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14802)
!14800 = !DISubroutineType(types: !14801)
!14801 = !{!2346, !2377}
!14802 = !{!14803, !14804, !14805, !14807}
!14803 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14799, file: !2461, line: 862, type: !2377)
!14804 = !DILocalVariable(name: "thread", scope: !14799, file: !2461, line: 864, type: !2346)
!14805 = !DILocalVariable(name: "__i", scope: !14806, file: !2461, line: 866, type: !13507)
!14806 = distinct !DILexicalBlock(scope: !14799, file: !2461, line: 866, column: 2)
!14807 = !DILocalVariable(name: "__key", scope: !14806, file: !2461, line: 866, type: !13507)
!14808 = !DILocation(line: 0, scope: !14799)
!14809 = !DILocation(line: 0, scope: !14806)
!14810 = !DILocation(line: 0, scope: !13515, inlinedAt: !14811)
!14811 = distinct !DILocation(line: 866, column: 2, scope: !14806)
!14812 = !DILocation(line: 55, column: 2, scope: !13524, inlinedAt: !14813)
!14813 = distinct !DILocation(line: 145, column: 10, scope: !13515, inlinedAt: !14811)
!14814 = !DILocation(line: 0, scope: !13524, inlinedAt: !14813)
!14815 = !DILocation(line: 148, column: 2, scope: !13532, inlinedAt: !14811)
!14816 = !DILocation(line: 148, column: 2, scope: !13533, inlinedAt: !14811)
!14817 = !DILocation(line: 148, column: 2, scope: !13536, inlinedAt: !14811)
!14818 = !DILocation(line: 160, column: 2, scope: !13515, inlinedAt: !14811)
!14819 = !DILocation(line: 867, column: 12, scope: !14820)
!14820 = distinct !DILexicalBlock(scope: !14821, file: !2461, line: 866, column: 26)
!14821 = distinct !DILexicalBlock(scope: !14806, file: !2461, line: 866, column: 2)
!14822 = !DILocation(line: 869, column: 14, scope: !14823)
!14823 = distinct !DILexicalBlock(scope: !14820, file: !2461, line: 869, column: 7)
!14824 = !DILocation(line: 869, column: 7, scope: !14820)
!14825 = !DILocation(line: 870, column: 4, scope: !14826)
!14826 = distinct !DILexicalBlock(scope: !14823, file: !2461, line: 869, column: 23)
!14827 = !DILocation(line: 871, column: 3, scope: !14826)
!14828 = !DILocation(line: 0, scope: !13549, inlinedAt: !14829)
!14829 = distinct !DILocation(line: 866, column: 2, scope: !14821)
!14830 = !DILocation(line: 194, column: 2, scope: !13557, inlinedAt: !14829)
!14831 = !DILocation(line: 194, column: 2, scope: !13558, inlinedAt: !14829)
!14832 = !DILocation(line: 194, column: 2, scope: !13561, inlinedAt: !14829)
!14833 = !DILocation(line: 0, scope: !13563, inlinedAt: !14834)
!14834 = distinct !DILocation(line: 215, column: 2, scope: !13549, inlinedAt: !14829)
!14835 = !DILocation(line: 95, column: 2, scope: !13563, inlinedAt: !14834)
!14836 = !DILocation(line: 874, column: 2, scope: !14799)
!14837 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2461, file: !2461, line: 1144, type: !14838, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14840)
!14838 = !DISubroutineType(types: !14839)
!14839 = !{!2346, !14408}
!14840 = !{!14841, !14842, !14843}
!14841 = !DILocalVariable(name: "pq", arg: 1, scope: !14837, file: !2461, line: 1144, type: !14408)
!14842 = !DILocalVariable(name: "thread", scope: !14837, file: !2461, line: 1146, type: !2346)
!14843 = !DILocalVariable(name: "n", scope: !14837, file: !2461, line: 1147, type: !14558)
!14844 = !DILocation(line: 0, scope: !14837)
!14845 = !DILocation(line: 1147, column: 19, scope: !14837)
!14846 = !DILocation(line: 1152, column: 2, scope: !14837)
!14847 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2461, file: !2461, line: 877, type: !14800, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14848)
!14848 = !{!14849, !14850, !14851, !14853}
!14849 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14847, file: !2461, line: 877, type: !2377)
!14850 = !DILocalVariable(name: "thread", scope: !14847, file: !2461, line: 879, type: !2346)
!14851 = !DILocalVariable(name: "__i", scope: !14852, file: !2461, line: 881, type: !13507)
!14852 = distinct !DILexicalBlock(scope: !14847, file: !2461, line: 881, column: 2)
!14853 = !DILocalVariable(name: "__key", scope: !14852, file: !2461, line: 881, type: !13507)
!14854 = !DILocation(line: 0, scope: !14847)
!14855 = !DILocation(line: 0, scope: !14852)
!14856 = !DILocation(line: 0, scope: !13515, inlinedAt: !14857)
!14857 = distinct !DILocation(line: 881, column: 2, scope: !14852)
!14858 = !DILocation(line: 55, column: 2, scope: !13524, inlinedAt: !14859)
!14859 = distinct !DILocation(line: 145, column: 10, scope: !13515, inlinedAt: !14857)
!14860 = !DILocation(line: 0, scope: !13524, inlinedAt: !14859)
!14861 = !DILocation(line: 148, column: 2, scope: !13532, inlinedAt: !14857)
!14862 = !DILocation(line: 148, column: 2, scope: !13533, inlinedAt: !14857)
!14863 = !DILocation(line: 148, column: 2, scope: !13536, inlinedAt: !14857)
!14864 = !DILocation(line: 160, column: 2, scope: !13515, inlinedAt: !14857)
!14865 = !DILocation(line: 882, column: 12, scope: !14866)
!14866 = distinct !DILexicalBlock(scope: !14867, file: !2461, line: 881, column: 26)
!14867 = distinct !DILexicalBlock(scope: !14852, file: !2461, line: 881, column: 2)
!14868 = !DILocation(line: 884, column: 14, scope: !14869)
!14869 = distinct !DILexicalBlock(scope: !14866, file: !2461, line: 884, column: 7)
!14870 = !DILocation(line: 884, column: 7, scope: !14866)
!14871 = !DILocation(line: 885, column: 4, scope: !14872)
!14872 = distinct !DILexicalBlock(scope: !14869, file: !2461, line: 884, column: 23)
!14873 = !DILocation(line: 886, column: 10, scope: !14872)
!14874 = !DILocation(line: 887, column: 3, scope: !14872)
!14875 = !DILocation(line: 0, scope: !13549, inlinedAt: !14876)
!14876 = distinct !DILocation(line: 881, column: 2, scope: !14867)
!14877 = !DILocation(line: 194, column: 2, scope: !13557, inlinedAt: !14876)
!14878 = !DILocation(line: 194, column: 2, scope: !13558, inlinedAt: !14876)
!14879 = !DILocation(line: 194, column: 2, scope: !13561, inlinedAt: !14876)
!14880 = !DILocation(line: 0, scope: !13563, inlinedAt: !14881)
!14881 = distinct !DILocation(line: 215, column: 2, scope: !13549, inlinedAt: !14876)
!14882 = !DILocation(line: 95, column: 2, scope: !13563, inlinedAt: !14881)
!14883 = !DILocation(line: 890, column: 2, scope: !14847)
!14884 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2461, file: !2461, line: 893, type: !13473, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14885)
!14885 = !{!14886}
!14886 = !DILocalVariable(name: "thread", arg: 1, scope: !14884, file: !2461, line: 893, type: !2346)
!14887 = !DILocation(line: 0, scope: !14884)
!14888 = !DILocation(line: 0, scope: !14682, inlinedAt: !14889)
!14889 = distinct !DILocation(line: 895, column: 2, scope: !14884)
!14890 = !DILocation(line: 0, scope: !14686, inlinedAt: !14889)
!14891 = !DILocation(line: 0, scope: !13515, inlinedAt: !14892)
!14892 = distinct !DILocation(line: 788, column: 2, scope: !14686, inlinedAt: !14889)
!14893 = !DILocation(line: 55, column: 2, scope: !13524, inlinedAt: !14894)
!14894 = distinct !DILocation(line: 145, column: 10, scope: !13515, inlinedAt: !14892)
!14895 = !DILocation(line: 0, scope: !13524, inlinedAt: !14894)
!14896 = !DILocation(line: 148, column: 2, scope: !13532, inlinedAt: !14892)
!14897 = !DILocation(line: 148, column: 2, scope: !13533, inlinedAt: !14892)
!14898 = !DILocation(line: 148, column: 2, scope: !13536, inlinedAt: !14892)
!14899 = !DILocation(line: 160, column: 2, scope: !13515, inlinedAt: !14892)
!14900 = !DILocation(line: 789, column: 3, scope: !14700, inlinedAt: !14889)
!14901 = !DILocation(line: 0, scope: !13549, inlinedAt: !14902)
!14902 = distinct !DILocation(line: 788, column: 2, scope: !14701, inlinedAt: !14889)
!14903 = !DILocation(line: 194, column: 2, scope: !13557, inlinedAt: !14902)
!14904 = !DILocation(line: 194, column: 2, scope: !13558, inlinedAt: !14902)
!14905 = !DILocation(line: 194, column: 2, scope: !13561, inlinedAt: !14902)
!14906 = !DILocation(line: 0, scope: !13563, inlinedAt: !14907)
!14907 = distinct !DILocation(line: 215, column: 2, scope: !13549, inlinedAt: !14902)
!14908 = !DILocation(line: 95, column: 2, scope: !13563, inlinedAt: !14907)
!14909 = !DILocation(line: 896, column: 8, scope: !14884)
!14910 = !DILocation(line: 897, column: 1, scope: !14884)
!14911 = distinct !DISubprogram(name: "z_set_prio", scope: !2461, file: !2461, line: 902, type: !13852, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14912)
!14912 = !{!14913, !14914, !14915, !14916, !14918}
!14913 = !DILocalVariable(name: "thread", arg: 1, scope: !14911, file: !2461, line: 902, type: !2346)
!14914 = !DILocalVariable(name: "prio", arg: 2, scope: !14911, file: !2461, line: 902, type: !109)
!14915 = !DILocalVariable(name: "need_sched", scope: !14911, file: !2461, line: 904, type: !334)
!14916 = !DILocalVariable(name: "__i", scope: !14917, file: !2461, line: 906, type: !13507)
!14917 = distinct !DILexicalBlock(scope: !14911, file: !2461, line: 906, column: 2)
!14918 = !DILocalVariable(name: "__key", scope: !14917, file: !2461, line: 906, type: !13507)
!14919 = !DILocation(line: 0, scope: !14911)
!14920 = !DILocation(line: 0, scope: !14917)
!14921 = !DILocation(line: 0, scope: !13515, inlinedAt: !14922)
!14922 = distinct !DILocation(line: 906, column: 2, scope: !14917)
!14923 = !DILocation(line: 55, column: 2, scope: !13524, inlinedAt: !14924)
!14924 = distinct !DILocation(line: 145, column: 10, scope: !13515, inlinedAt: !14922)
!14925 = !DILocation(line: 0, scope: !13524, inlinedAt: !14924)
!14926 = !DILocation(line: 148, column: 2, scope: !13532, inlinedAt: !14922)
!14927 = !DILocation(line: 148, column: 2, scope: !13533, inlinedAt: !14922)
!14928 = !DILocation(line: 148, column: 2, scope: !13536, inlinedAt: !14922)
!14929 = !DILocation(line: 160, column: 2, scope: !13515, inlinedAt: !14922)
!14930 = !DILocation(line: 907, column: 16, scope: !14931)
!14931 = distinct !DILexicalBlock(scope: !14932, file: !2461, line: 906, column: 26)
!14932 = distinct !DILexicalBlock(scope: !14917, file: !2461, line: 906, column: 2)
!14933 = !DILocation(line: 909, column: 7, scope: !14931)
!14934 = !DILocation(line: 0, scope: !13707, inlinedAt: !14935)
!14935 = distinct !DILocation(line: 912, column: 5, scope: !14936)
!14936 = distinct !DILexicalBlock(scope: !14937, file: !2461, line: 911, column: 63)
!14937 = distinct !DILexicalBlock(scope: !14938, file: !2461, line: 911, column: 8)
!14938 = distinct !DILexicalBlock(scope: !14939, file: !2461, line: 909, column: 19)
!14939 = distinct !DILexicalBlock(scope: !14931, file: !2461, line: 909, column: 7)
!14940 = !DILocation(line: 266, column: 28, scope: !13707, inlinedAt: !14935)
!14941 = !DILocation(line: 0, scope: !13715, inlinedAt: !14942)
!14942 = distinct !DILocation(line: 268, column: 3, scope: !13719, inlinedAt: !14935)
!14943 = !DILocation(line: 234, column: 2, scope: !13715, inlinedAt: !14942)
!14944 = !DILocation(line: 913, column: 23, scope: !14936)
!14945 = !DILocation(line: 0, scope: !13724, inlinedAt: !14946)
!14946 = distinct !DILocation(line: 914, column: 5, scope: !14936)
!14947 = !DILocation(line: 252, column: 28, scope: !13724, inlinedAt: !14946)
!14948 = !DILocation(line: 0, scope: !13731, inlinedAt: !14949)
!14949 = distinct !DILocation(line: 254, column: 3, scope: !13735, inlinedAt: !14946)
!14950 = !DILocation(line: 229, column: 2, scope: !13731, inlinedAt: !14949)
!14951 = !DILocation(line: 918, column: 4, scope: !14938)
!14952 = !DILocation(line: 919, column: 3, scope: !14938)
!14953 = !DILocation(line: 920, column: 22, scope: !14954)
!14954 = distinct !DILexicalBlock(scope: !14939, file: !2461, line: 919, column: 10)
!14955 = !DILocation(line: 0, scope: !13549, inlinedAt: !14956)
!14956 = distinct !DILocation(line: 906, column: 2, scope: !14932)
!14957 = !DILocation(line: 194, column: 2, scope: !13557, inlinedAt: !14956)
!14958 = !DILocation(line: 194, column: 2, scope: !13558, inlinedAt: !14956)
!14959 = !DILocation(line: 194, column: 2, scope: !13561, inlinedAt: !14956)
!14960 = !DILocation(line: 0, scope: !13563, inlinedAt: !14961)
!14961 = distinct !DILocation(line: 215, column: 2, scope: !13549, inlinedAt: !14956)
!14962 = !DILocation(line: 95, column: 2, scope: !13563, inlinedAt: !14961)
!14963 = !DILocation(line: 926, column: 2, scope: !14911)
!14964 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2461, file: !2461, line: 929, type: !14965, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14967)
!14965 = !DISubroutineType(types: !14966)
!14966 = !{null, !2346, !109}
!14967 = !{!14968, !14969, !14970}
!14968 = !DILocalVariable(name: "thread", arg: 1, scope: !14964, file: !2461, line: 929, type: !2346)
!14969 = !DILocalVariable(name: "prio", arg: 2, scope: !14964, file: !2461, line: 929, type: !109)
!14970 = !DILocalVariable(name: "need_sched", scope: !14964, file: !2461, line: 931, type: !334)
!14971 = !DILocation(line: 0, scope: !14964)
!14972 = !DILocation(line: 931, column: 20, scope: !14964)
!14973 = !DILocation(line: 935, column: 17, scope: !14974)
!14974 = distinct !DILexicalBlock(scope: !14964, file: !2461, line: 935, column: 6)
!14975 = !DILocation(line: 935, column: 20, scope: !14974)
!14976 = !DILocation(line: 935, column: 35, scope: !14974)
!14977 = !DILocation(line: 935, column: 48, scope: !14974)
!14978 = !DILocation(line: 935, column: 6, scope: !14964)
!14979 = !DILocation(line: 936, column: 3, scope: !14980)
!14980 = distinct !DILexicalBlock(scope: !14974, file: !2461, line: 935, column: 55)
!14981 = !DILocation(line: 937, column: 2, scope: !14980)
!14982 = !DILocation(line: 938, column: 1, scope: !14964)
!14983 = distinct !DISubprogram(name: "k_sched_lock", scope: !2461, file: !2461, line: 987, type: !3103, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14984)
!14984 = !{!14985, !14987}
!14985 = !DILocalVariable(name: "__i", scope: !14986, file: !2461, line: 989, type: !13507)
!14986 = distinct !DILexicalBlock(scope: !14983, file: !2461, line: 989, column: 2)
!14987 = !DILocalVariable(name: "__key", scope: !14986, file: !2461, line: 989, type: !13507)
!14988 = !DILocation(line: 0, scope: !14986)
!14989 = !DILocation(line: 0, scope: !13515, inlinedAt: !14990)
!14990 = distinct !DILocation(line: 989, column: 2, scope: !14986)
!14991 = !DILocation(line: 55, column: 2, scope: !13524, inlinedAt: !14992)
!14992 = distinct !DILocation(line: 145, column: 10, scope: !13515, inlinedAt: !14990)
!14993 = !DILocation(line: 0, scope: !13524, inlinedAt: !14992)
!14994 = !DILocation(line: 148, column: 2, scope: !13532, inlinedAt: !14990)
!14995 = !DILocation(line: 148, column: 2, scope: !13533, inlinedAt: !14990)
!14996 = !DILocation(line: 148, column: 2, scope: !13536, inlinedAt: !14990)
!14997 = !DILocation(line: 160, column: 2, scope: !13515, inlinedAt: !14990)
!14998 = !DILocation(line: 992, column: 3, scope: !14999)
!14999 = distinct !DILexicalBlock(scope: !15000, file: !2461, line: 989, column: 26)
!15000 = distinct !DILexicalBlock(scope: !14986, file: !2461, line: 989, column: 2)
!15001 = !DILocation(line: 0, scope: !13549, inlinedAt: !15002)
!15002 = distinct !DILocation(line: 989, column: 2, scope: !15000)
!15003 = !DILocation(line: 194, column: 2, scope: !13557, inlinedAt: !15002)
!15004 = !DILocation(line: 194, column: 2, scope: !13558, inlinedAt: !15002)
!15005 = !DILocation(line: 194, column: 2, scope: !13561, inlinedAt: !15002)
!15006 = !DILocation(line: 0, scope: !13563, inlinedAt: !15007)
!15007 = distinct !DILocation(line: 215, column: 2, scope: !13549, inlinedAt: !15002)
!15008 = !DILocation(line: 95, column: 2, scope: !13563, inlinedAt: !15007)
!15009 = !DILocation(line: 994, column: 1, scope: !14983)
!15010 = distinct !DISubprogram(name: "z_sched_lock", scope: !12106, file: !12106, line: 251, type: !3103, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !2018)
!15011 = !DILocation(line: 1031, column: 3, scope: !14170, inlinedAt: !15012)
!15012 = distinct !DILocation(line: 48, column: 10, scope: !14174, inlinedAt: !15013)
!15013 = distinct !DILocation(line: 253, column: 2, scope: !15014)
!15014 = distinct !DILexicalBlock(scope: !15015, file: !12106, line: 253, column: 2)
!15015 = distinct !DILexicalBlock(scope: !15010, file: !12106, line: 253, column: 2)
!15016 = !DILocation(line: 0, scope: !14170, inlinedAt: !15012)
!15017 = !DILocation(line: 48, column: 9, scope: !14174, inlinedAt: !15013)
!15018 = !DILocation(line: 253, column: 2, scope: !15015)
!15019 = !DILocation(line: 253, column: 2, scope: !15020)
!15020 = distinct !DILexicalBlock(scope: !15014, file: !12106, line: 253, column: 2)
!15021 = !DILocation(line: 254, column: 2, scope: !15022)
!15022 = distinct !DILexicalBlock(scope: !15023, file: !12106, line: 254, column: 2)
!15023 = distinct !DILexicalBlock(scope: !15010, file: !12106, line: 254, column: 2)
!15024 = !DILocation(line: 254, column: 2, scope: !15023)
!15025 = !DILocation(line: 254, column: 2, scope: !15026)
!15026 = distinct !DILexicalBlock(scope: !15022, file: !12106, line: 254, column: 2)
!15027 = !DILocation(line: 256, column: 2, scope: !15010)
!15028 = !DILocation(line: 258, column: 2, scope: !15029)
!15029 = distinct !DILexicalBlock(scope: !15010, file: !12106, line: 258, column: 2)
!15030 = !{i64 2154875329}
!15031 = !DILocation(line: 259, column: 1, scope: !15010)
!15032 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2461, file: !2461, line: 996, type: !3103, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15033)
!15033 = !{!15034, !15036}
!15034 = !DILocalVariable(name: "__i", scope: !15035, file: !2461, line: 998, type: !13507)
!15035 = distinct !DILexicalBlock(scope: !15032, file: !2461, line: 998, column: 2)
!15036 = !DILocalVariable(name: "__key", scope: !15035, file: !2461, line: 998, type: !13507)
!15037 = !DILocation(line: 0, scope: !15035)
!15038 = !DILocation(line: 0, scope: !13515, inlinedAt: !15039)
!15039 = distinct !DILocation(line: 998, column: 2, scope: !15035)
!15040 = !DILocation(line: 55, column: 2, scope: !13524, inlinedAt: !15041)
!15041 = distinct !DILocation(line: 145, column: 10, scope: !13515, inlinedAt: !15039)
!15042 = !DILocation(line: 0, scope: !13524, inlinedAt: !15041)
!15043 = !DILocation(line: 148, column: 2, scope: !13532, inlinedAt: !15039)
!15044 = !DILocation(line: 148, column: 2, scope: !13533, inlinedAt: !15039)
!15045 = !DILocation(line: 148, column: 2, scope: !13536, inlinedAt: !15039)
!15046 = !DILocation(line: 160, column: 2, scope: !13515, inlinedAt: !15039)
!15047 = !DILocation(line: 999, column: 3, scope: !15048)
!15048 = distinct !DILexicalBlock(scope: !15049, file: !2461, line: 999, column: 3)
!15049 = distinct !DILexicalBlock(scope: !15050, file: !2461, line: 999, column: 3)
!15050 = distinct !DILexicalBlock(scope: !15051, file: !2461, line: 998, column: 26)
!15051 = distinct !DILexicalBlock(scope: !15035, file: !2461, line: 998, column: 2)
!15052 = !DILocation(line: 999, column: 3, scope: !15049)
!15053 = !DILocation(line: 999, column: 3, scope: !15054)
!15054 = distinct !DILexicalBlock(scope: !15048, file: !2461, line: 999, column: 3)
!15055 = !DILocation(line: 1031, column: 3, scope: !14170, inlinedAt: !15056)
!15056 = distinct !DILocation(line: 48, column: 10, scope: !14174, inlinedAt: !15057)
!15057 = distinct !DILocation(line: 1000, column: 3, scope: !15058)
!15058 = distinct !DILexicalBlock(scope: !15059, file: !2461, line: 1000, column: 3)
!15059 = distinct !DILexicalBlock(scope: !15050, file: !2461, line: 1000, column: 3)
!15060 = !DILocation(line: 0, scope: !14170, inlinedAt: !15056)
!15061 = !DILocation(line: 48, column: 9, scope: !14174, inlinedAt: !15057)
!15062 = !DILocation(line: 1000, column: 3, scope: !15059)
!15063 = !DILocation(line: 1000, column: 3, scope: !15064)
!15064 = distinct !DILexicalBlock(scope: !15058, file: !2461, line: 1000, column: 3)
!15065 = !DILocation(line: 1002, column: 5, scope: !15050)
!15066 = !DILocation(line: 1002, column: 20, scope: !15050)
!15067 = !DILocation(line: 1002, column: 3, scope: !15050)
!15068 = !DILocation(line: 1003, column: 3, scope: !15050)
!15069 = !DILocation(line: 0, scope: !13549, inlinedAt: !15070)
!15070 = distinct !DILocation(line: 998, column: 2, scope: !15051)
!15071 = !DILocation(line: 194, column: 2, scope: !13557, inlinedAt: !15070)
!15072 = !DILocation(line: 194, column: 2, scope: !13558, inlinedAt: !15070)
!15073 = !DILocation(line: 194, column: 2, scope: !13561, inlinedAt: !15070)
!15074 = !DILocation(line: 0, scope: !13563, inlinedAt: !15075)
!15075 = distinct !DILocation(line: 215, column: 2, scope: !13549, inlinedAt: !15070)
!15076 = !DILocation(line: 95, column: 2, scope: !13563, inlinedAt: !15075)
!15077 = !DILocation(line: 1011, column: 2, scope: !15032)
!15078 = !DILocation(line: 1012, column: 1, scope: !15032)
!15079 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2461, file: !2461, line: 1014, type: !13840, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !2018)
!15080 = !DILocation(line: 1028, column: 25, scope: !15079)
!15081 = !DILocation(line: 1028, column: 2, scope: !15079)
!15082 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2461, file: !2461, line: 1155, type: !13761, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15083)
!15083 = !{!15084, !15085, !15086, !15087, !15088}
!15084 = !DILocalVariable(name: "a", arg: 1, scope: !15082, file: !2461, line: 1155, type: !2375)
!15085 = !DILocalVariable(name: "b", arg: 2, scope: !15082, file: !2461, line: 1155, type: !2375)
!15086 = !DILocalVariable(name: "thread_a", scope: !15082, file: !2461, line: 1157, type: !2346)
!15087 = !DILocalVariable(name: "thread_b", scope: !15082, file: !2461, line: 1157, type: !2346)
!15088 = !DILocalVariable(name: "cmp", scope: !15082, file: !2461, line: 1158, type: !756)
!15089 = !DILocation(line: 0, scope: !15082)
!15090 = !DILocation(line: 1160, column: 13, scope: !15082)
!15091 = !DILocation(line: 1161, column: 13, scope: !15082)
!15092 = !DILocation(line: 1163, column: 8, scope: !15082)
!15093 = !DILocation(line: 1165, column: 10, scope: !15094)
!15094 = distinct !DILexicalBlock(scope: !15082, file: !2461, line: 1165, column: 6)
!15095 = !DILocation(line: 1165, column: 6, scope: !15082)
!15096 = !DILocation(line: 1167, column: 17, scope: !15097)
!15097 = distinct !DILexicalBlock(scope: !15094, file: !2461, line: 1167, column: 13)
!15098 = !DILocation(line: 1167, column: 13, scope: !15094)
!15099 = !DILocation(line: 1170, column: 25, scope: !15100)
!15100 = distinct !DILexicalBlock(scope: !15097, file: !2461, line: 1169, column: 9)
!15101 = !DILocation(line: 1170, column: 52, scope: !15100)
!15102 = !DILocation(line: 1170, column: 35, scope: !15100)
!15103 = !DILocation(line: 1170, column: 3, scope: !15100)
!15104 = !DILocation(line: 0, scope: !15094)
!15105 = !DILocation(line: 1173, column: 1, scope: !15082)
!15106 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2461, file: !2461, line: 1246, type: !15107, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15115)
!15107 = !DISubroutineType(types: !15108)
!15108 = !{!2346, !15109}
!15109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15110, size: 32)
!15110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !2025, line: 53, size: 2080, elements: !15111)
!15111 = !{!15112, !15114}
!15112 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15110, file: !2025, line: 54, baseType: !15113, size: 2048)
!15113 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2382, size: 2048, elements: !227)
!15114 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15110, file: !2025, line: 55, baseType: !32, size: 32, offset: 2048)
!15115 = !{!15116, !15117, !15118, !15119}
!15116 = !DILocalVariable(name: "pq", arg: 1, scope: !15106, file: !2461, line: 1246, type: !15109)
!15117 = !DILocalVariable(name: "thread", scope: !15106, file: !2461, line: 1252, type: !2346)
!15118 = !DILocalVariable(name: "l", scope: !15106, file: !2461, line: 1253, type: !14408)
!15119 = !DILocalVariable(name: "n", scope: !15106, file: !2461, line: 1254, type: !14558)
!15120 = !DILocation(line: 0, scope: !15106)
!15121 = !DILocation(line: 1248, column: 11, scope: !15122)
!15122 = distinct !DILexicalBlock(scope: !15106, file: !2461, line: 1248, column: 6)
!15123 = !DILocation(line: 1248, column: 7, scope: !15122)
!15124 = !DILocation(line: 1248, column: 6, scope: !15106)
!15125 = !DILocation(line: 1253, column: 31, scope: !15106)
!15126 = !DILocation(line: 1253, column: 20, scope: !15106)
!15127 = !DILocation(line: 1254, column: 19, scope: !15106)
!15128 = !DILocation(line: 1260, column: 1, scope: !15106)
!15129 = distinct !DISubprogram(name: "z_unpend_all", scope: !2461, file: !2461, line: 1262, type: !15130, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15132)
!15130 = !DISubroutineType(types: !15131)
!15131 = !{!109, !2377}
!15132 = !{!15133, !15134, !15135}
!15133 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15129, file: !2461, line: 1262, type: !2377)
!15134 = !DILocalVariable(name: "need_sched", scope: !15129, file: !2461, line: 1264, type: !109)
!15135 = !DILocalVariable(name: "thread", scope: !15129, file: !2461, line: 1265, type: !2346)
!15136 = !DILocation(line: 0, scope: !15129)
!15137 = !DILocation(line: 1267, column: 19, scope: !15129)
!15138 = !DILocation(line: 1267, column: 41, scope: !15129)
!15139 = !DILocation(line: 1267, column: 2, scope: !15129)
!15140 = !DILocation(line: 1268, column: 3, scope: !15141)
!15141 = distinct !DILexicalBlock(scope: !15129, file: !2461, line: 1267, column: 50)
!15142 = !DILocation(line: 1269, column: 3, scope: !15141)
!15143 = distinct !{!15143, !15139, !15144}
!15144 = !DILocation(line: 1271, column: 2, scope: !15129)
!15145 = !DILocation(line: 1273, column: 2, scope: !15129)
!15146 = distinct !DISubprogram(name: "z_waitq_head", scope: !12710, file: !12710, line: 52, type: !14800, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15147)
!15147 = !{!15148}
!15148 = !DILocalVariable(name: "w", arg: 1, scope: !15146, file: !12710, line: 52, type: !2377)
!15149 = !DILocation(line: 0, scope: !15146)
!15150 = !DILocation(line: 54, column: 52, scope: !15146)
!15151 = !DILocation(line: 54, column: 28, scope: !15146)
!15152 = !DILocation(line: 54, column: 9, scope: !15146)
!15153 = !DILocation(line: 54, column: 2, scope: !15146)
!15154 = distinct !DISubprogram(name: "init_ready_q", scope: !2461, file: !2461, line: 1276, type: !15155, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15162)
!15155 = !DISubroutineType(types: !15156)
!15156 = !{null, !15157}
!15157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15158, size: 32)
!15158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !123, line: 83, size: 160, elements: !15159)
!15159 = !{!15160, !15161}
!15160 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15158, file: !123, line: 86, baseType: !2346, size: 32)
!15161 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15158, file: !123, line: 92, baseType: !13752, size: 128, offset: 32)
!15162 = !{!15163}
!15163 = !DILocalVariable(name: "rq", arg: 1, scope: !15154, file: !2461, line: 1276, type: !15157)
!15164 = !DILocation(line: 0, scope: !15154)
!15165 = !DILocation(line: 1279, column: 13, scope: !15154)
!15166 = !DILocation(line: 1291, column: 1, scope: !15154)
!15167 = distinct !DISubprogram(name: "z_sched_init", scope: !2461, file: !2461, line: 1293, type: !3103, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !2018)
!15168 = !DILocation(line: 1302, column: 2, scope: !15167)
!15169 = !DILocation(line: 1306, column: 2, scope: !15167)
!15170 = !DILocation(line: 1309, column: 1, scope: !15167)
!15171 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2461, file: !2461, line: 1311, type: !15172, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15175)
!15172 = !DISubroutineType(types: !15173)
!15173 = !{!109, !15174}
!15174 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !145, line: 347, baseType: !2346)
!15175 = !{!15176}
!15176 = !DILocalVariable(name: "thread", arg: 1, scope: !15171, file: !2461, line: 1311, type: !15174)
!15177 = !DILocation(line: 0, scope: !15171)
!15178 = !DILocation(line: 1313, column: 22, scope: !15171)
!15179 = !DILocation(line: 1313, column: 9, scope: !15171)
!15180 = !DILocation(line: 1313, column: 2, scope: !15171)
!15181 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2461, file: !2461, line: 1325, type: !15182, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15184)
!15182 = !DISubroutineType(types: !15183)
!15183 = !{null, !15174, !109}
!15184 = !{!15185, !15186, !15187}
!15185 = !DILocalVariable(name: "thread", arg: 1, scope: !15181, file: !2461, line: 1325, type: !15174)
!15186 = !DILocalVariable(name: "prio", arg: 2, scope: !15181, file: !2461, line: 1325, type: !109)
!15187 = !DILocalVariable(name: "th", scope: !15181, file: !2461, line: 1334, type: !2346)
!15188 = !DILocation(line: 0, scope: !15181)
!15189 = !DILocation(line: 1331, column: 2, scope: !15190)
!15190 = distinct !DILexicalBlock(scope: !15191, file: !2461, line: 1331, column: 2)
!15191 = distinct !DILexicalBlock(scope: !15192, file: !2461, line: 1331, column: 2)
!15192 = distinct !DILexicalBlock(scope: !15181, file: !2461, line: 1331, column: 2)
!15193 = !DILocation(line: 1331, column: 2, scope: !15194)
!15194 = distinct !DILexicalBlock(scope: !15190, file: !2461, line: 1331, column: 2)
!15195 = !DILocation(line: 1031, column: 3, scope: !14170, inlinedAt: !15196)
!15196 = distinct !DILocation(line: 48, column: 10, scope: !14174, inlinedAt: !15197)
!15197 = distinct !DILocation(line: 1332, column: 2, scope: !15198)
!15198 = distinct !DILexicalBlock(scope: !15199, file: !2461, line: 1332, column: 2)
!15199 = distinct !DILexicalBlock(scope: !15181, file: !2461, line: 1332, column: 2)
!15200 = !DILocation(line: 0, scope: !14170, inlinedAt: !15196)
!15201 = !DILocation(line: 48, column: 9, scope: !14174, inlinedAt: !15197)
!15202 = !DILocation(line: 1332, column: 2, scope: !15199)
!15203 = !DILocation(line: 1332, column: 2, scope: !15204)
!15204 = distinct !DILexicalBlock(scope: !15198, file: !2461, line: 1332, column: 2)
!15205 = !DILocation(line: 1336, column: 2, scope: !15181)
!15206 = !DILocation(line: 1337, column: 1, scope: !15181)
!15207 = distinct !DISubprogram(name: "k_can_yield", scope: !2461, file: !2461, line: 1384, type: !7021, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !2018)
!15208 = !DILocation(line: 1386, column: 11, scope: !15207)
!15209 = !DILocation(line: 1386, column: 29, scope: !15207)
!15210 = !DILocation(line: 1386, column: 32, scope: !15207)
!15211 = !DILocation(line: 1386, column: 46, scope: !15207)
!15212 = !DILocation(line: 1387, column: 28, scope: !15207)
!15213 = !DILocation(line: 1387, column: 4, scope: !15207)
!15214 = !DILocation(line: 1386, column: 2, scope: !15207)
!15215 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !119, file: !119, line: 989, type: !7021, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !2018)
!15216 = !DILocation(line: 993, column: 10, scope: !15215)
!15217 = !DILocation(line: 993, column: 2, scope: !15215)
!15218 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2461, file: !2461, line: 1390, type: !3103, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15219)
!15219 = !{!15220}
!15220 = !DILocalVariable(name: "key", scope: !15218, file: !2461, line: 1396, type: !13507)
!15221 = !DILocation(line: 1031, column: 3, scope: !14170, inlinedAt: !15222)
!15222 = distinct !DILocation(line: 48, column: 10, scope: !14174, inlinedAt: !15223)
!15223 = distinct !DILocation(line: 1392, column: 2, scope: !15224)
!15224 = distinct !DILexicalBlock(scope: !15225, file: !2461, line: 1392, column: 2)
!15225 = distinct !DILexicalBlock(scope: !15218, file: !2461, line: 1392, column: 2)
!15226 = !DILocation(line: 0, scope: !14170, inlinedAt: !15222)
!15227 = !DILocation(line: 48, column: 9, scope: !14174, inlinedAt: !15223)
!15228 = !DILocation(line: 1392, column: 2, scope: !15225)
!15229 = !DILocation(line: 1392, column: 2, scope: !15230)
!15230 = distinct !DILexicalBlock(scope: !15224, file: !2461, line: 1392, column: 2)
!15231 = !DILocation(line: 0, scope: !13515, inlinedAt: !15232)
!15232 = distinct !DILocation(line: 1396, column: 25, scope: !15218)
!15233 = !DILocation(line: 55, column: 2, scope: !13524, inlinedAt: !15234)
!15234 = distinct !DILocation(line: 145, column: 10, scope: !13515, inlinedAt: !15232)
!15235 = !DILocation(line: 0, scope: !13524, inlinedAt: !15234)
!15236 = !DILocation(line: 148, column: 2, scope: !13532, inlinedAt: !15232)
!15237 = !DILocation(line: 148, column: 2, scope: !13533, inlinedAt: !15232)
!15238 = !DILocation(line: 148, column: 2, scope: !13536, inlinedAt: !15232)
!15239 = !DILocation(line: 160, column: 2, scope: !13515, inlinedAt: !15232)
!15240 = !DILocation(line: 0, scope: !15218)
!15241 = !DILocation(line: 1400, column: 18, scope: !15242)
!15242 = distinct !DILexicalBlock(scope: !15243, file: !2461, line: 1399, column: 36)
!15243 = distinct !DILexicalBlock(scope: !15218, file: !2461, line: 1398, column: 6)
!15244 = !DILocation(line: 0, scope: !13707, inlinedAt: !15245)
!15245 = distinct !DILocation(line: 1400, column: 3, scope: !15242)
!15246 = !DILocation(line: 266, column: 15, scope: !13707, inlinedAt: !15245)
!15247 = !DILocation(line: 266, column: 28, scope: !13707, inlinedAt: !15245)
!15248 = !DILocation(line: 0, scope: !13715, inlinedAt: !15249)
!15249 = distinct !DILocation(line: 268, column: 3, scope: !13719, inlinedAt: !15245)
!15250 = !DILocation(line: 234, column: 2, scope: !13715, inlinedAt: !15249)
!15251 = !DILocation(line: 1402, column: 15, scope: !15218)
!15252 = !DILocation(line: 0, scope: !13724, inlinedAt: !15253)
!15253 = distinct !DILocation(line: 1402, column: 2, scope: !15218)
!15254 = !DILocation(line: 252, column: 15, scope: !13724, inlinedAt: !15253)
!15255 = !DILocation(line: 252, column: 28, scope: !13724, inlinedAt: !15253)
!15256 = !DILocation(line: 0, scope: !13731, inlinedAt: !15257)
!15257 = distinct !DILocation(line: 254, column: 3, scope: !13735, inlinedAt: !15253)
!15258 = !DILocation(line: 229, column: 2, scope: !13731, inlinedAt: !15257)
!15259 = !DILocation(line: 1403, column: 2, scope: !15218)
!15260 = !DILocation(line: 0, scope: !14121, inlinedAt: !15261)
!15261 = distinct !DILocation(line: 1404, column: 2, scope: !15218)
!15262 = !DILocation(line: 0, scope: !14130, inlinedAt: !15263)
!15263 = distinct !DILocation(line: 195, column: 2, scope: !14121, inlinedAt: !15261)
!15264 = !DILocation(line: 225, column: 2, scope: !14137, inlinedAt: !15263)
!15265 = !DILocation(line: 225, column: 2, scope: !14138, inlinedAt: !15263)
!15266 = !DILocation(line: 225, column: 2, scope: !14141, inlinedAt: !15263)
!15267 = !DILocation(line: 196, column: 9, scope: !14121, inlinedAt: !15261)
!15268 = !DILocation(line: 1405, column: 1, scope: !15218)
!15269 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2461, file: !2461, line: 1459, type: !15270, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15272)
!15270 = !DISubroutineType(types: !15271)
!15271 = !{!756, !14331}
!15272 = !{!15273, !15274, !15275}
!15273 = !DILocalVariable(name: "timeout", arg: 1, scope: !15269, file: !2461, line: 1459, type: !14331)
!15274 = !DILocalVariable(name: "ticks", scope: !15269, file: !2461, line: 1461, type: !104)
!15275 = !DILocalVariable(name: "ret", scope: !15269, file: !2461, line: 1480, type: !756)
!15276 = !DILocation(line: 0, scope: !15269)
!15277 = !DILocation(line: 1031, column: 3, scope: !14170, inlinedAt: !15278)
!15278 = distinct !DILocation(line: 48, column: 10, scope: !14174, inlinedAt: !15279)
!15279 = distinct !DILocation(line: 1463, column: 2, scope: !15280)
!15280 = distinct !DILexicalBlock(scope: !15281, file: !2461, line: 1463, column: 2)
!15281 = distinct !DILexicalBlock(scope: !15269, file: !2461, line: 1463, column: 2)
!15282 = !DILocation(line: 0, scope: !14170, inlinedAt: !15278)
!15283 = !DILocation(line: 48, column: 9, scope: !14174, inlinedAt: !15279)
!15284 = !DILocation(line: 1463, column: 2, scope: !15281)
!15285 = !DILocation(line: 1463, column: 2, scope: !15286)
!15286 = distinct !DILexicalBlock(scope: !15280, file: !2461, line: 1463, column: 2)
!15287 = !DILocation(line: 1468, column: 6, scope: !15288)
!15288 = distinct !DILexicalBlock(scope: !15269, file: !2461, line: 1468, column: 6)
!15289 = !DILocation(line: 1468, column: 6, scope: !15269)
!15290 = !DILocation(line: 1469, column: 20, scope: !15291)
!15291 = distinct !DILexicalBlock(scope: !15288, file: !2461, line: 1468, column: 40)
!15292 = !DILocation(line: 1469, column: 3, scope: !15291)
!15293 = !DILocation(line: 1473, column: 3, scope: !15291)
!15294 = !DILocation(line: 1478, column: 10, scope: !15269)
!15295 = !DILocation(line: 1480, column: 16, scope: !15269)
!15296 = !DILocation(line: 1485, column: 1, scope: !15269)
!15297 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3288, file: !3288, line: 310, type: !15298, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15300)
!15298 = !DISubroutineType(types: !15299)
!15299 = !{null, !15174}
!15300 = !{!15301}
!15301 = !DILocalVariable(name: "thread", arg: 1, scope: !15297, file: !3288, line: 310, type: !15174)
!15302 = !DILocation(line: 0, scope: !15297)
!15303 = !DILocation(line: 319, column: 2, scope: !15304)
!15304 = distinct !DILexicalBlock(scope: !15297, file: !3288, line: 319, column: 2)
!15305 = !{i64 2154791487}
!15306 = !DILocation(line: 320, column: 2, scope: !15297)
!15307 = !DILocation(line: 321, column: 1, scope: !15297)
!15308 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2461, file: !2461, line: 1415, type: !15309, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15311)
!15309 = !DISubroutineType(types: !15310)
!15310 = !{!756, !104}
!15311 = !{!15312, !15313, !15314, !15315}
!15312 = !DILocalVariable(name: "ticks", arg: 1, scope: !15308, file: !2461, line: 1415, type: !104)
!15313 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15308, file: !2461, line: 1418, type: !110)
!15314 = !DILocalVariable(name: "timeout", scope: !15308, file: !2461, line: 1430, type: !14331)
!15315 = !DILocalVariable(name: "key", scope: !15308, file: !2461, line: 1437, type: !13507)
!15316 = !DILocation(line: 0, scope: !15308)
!15317 = !DILocation(line: 1031, column: 3, scope: !14170, inlinedAt: !15318)
!15318 = distinct !DILocation(line: 48, column: 10, scope: !14174, inlinedAt: !15319)
!15319 = distinct !DILocation(line: 1420, column: 2, scope: !15320)
!15320 = distinct !DILexicalBlock(scope: !15321, file: !2461, line: 1420, column: 2)
!15321 = distinct !DILexicalBlock(scope: !15308, file: !2461, line: 1420, column: 2)
!15322 = !DILocation(line: 0, scope: !14170, inlinedAt: !15318)
!15323 = !DILocation(line: 48, column: 9, scope: !14174, inlinedAt: !15319)
!15324 = !DILocation(line: 1420, column: 2, scope: !15321)
!15325 = !DILocation(line: 1420, column: 2, scope: !15326)
!15326 = distinct !DILexicalBlock(scope: !15320, file: !2461, line: 1420, column: 2)
!15327 = !DILocation(line: 1425, column: 12, scope: !15328)
!15328 = distinct !DILexicalBlock(scope: !15308, file: !2461, line: 1425, column: 6)
!15329 = !DILocation(line: 1425, column: 6, scope: !15308)
!15330 = !DILocation(line: 1426, column: 3, scope: !15331)
!15331 = distinct !DILexicalBlock(scope: !15328, file: !2461, line: 1425, column: 18)
!15332 = !DILocation(line: 1427, column: 3, scope: !15331)
!15333 = !DILocation(line: 1431, column: 24, scope: !15334)
!15334 = distinct !DILexicalBlock(scope: !15308, file: !2461, line: 1431, column: 6)
!15335 = !DILocation(line: 1431, column: 6, scope: !15308)
!15336 = !DILocation(line: 1432, column: 35, scope: !15337)
!15337 = distinct !DILexicalBlock(scope: !15334, file: !2461, line: 1431, column: 30)
!15338 = !DILocation(line: 1432, column: 27, scope: !15337)
!15339 = !DILocation(line: 1433, column: 2, scope: !15337)
!15340 = !DILocation(line: 1434, column: 27, scope: !15341)
!15341 = distinct !DILexicalBlock(scope: !15334, file: !2461, line: 1433, column: 9)
!15342 = !DILocation(line: 0, scope: !15334)
!15343 = !DILocation(line: 0, scope: !13515, inlinedAt: !15344)
!15344 = distinct !DILocation(line: 1437, column: 25, scope: !15308)
!15345 = !DILocation(line: 55, column: 2, scope: !13524, inlinedAt: !15346)
!15346 = distinct !DILocation(line: 145, column: 10, scope: !13515, inlinedAt: !15344)
!15347 = !DILocation(line: 0, scope: !13524, inlinedAt: !15346)
!15348 = !DILocation(line: 148, column: 2, scope: !13532, inlinedAt: !15344)
!15349 = !DILocation(line: 148, column: 2, scope: !13533, inlinedAt: !15344)
!15350 = !DILocation(line: 148, column: 2, scope: !13536, inlinedAt: !15344)
!15351 = !DILocation(line: 160, column: 2, scope: !13515, inlinedAt: !15344)
!15352 = !DILocation(line: 1440, column: 20, scope: !15308)
!15353 = !DILocation(line: 1440, column: 18, scope: !15308)
!15354 = !DILocation(line: 1442, column: 2, scope: !15308)
!15355 = !DILocation(line: 1443, column: 23, scope: !15308)
!15356 = !DILocation(line: 1443, column: 2, scope: !15308)
!15357 = !DILocation(line: 1444, column: 29, scope: !15308)
!15358 = !DILocation(line: 1444, column: 2, scope: !15308)
!15359 = !DILocation(line: 0, scope: !14121, inlinedAt: !15360)
!15360 = distinct !DILocation(line: 1446, column: 8, scope: !15308)
!15361 = !DILocation(line: 0, scope: !14130, inlinedAt: !15362)
!15362 = distinct !DILocation(line: 195, column: 2, scope: !14121, inlinedAt: !15360)
!15363 = !DILocation(line: 225, column: 2, scope: !14137, inlinedAt: !15362)
!15364 = !DILocation(line: 225, column: 2, scope: !14138, inlinedAt: !15362)
!15365 = !DILocation(line: 225, column: 2, scope: !14141, inlinedAt: !15362)
!15366 = !DILocation(line: 196, column: 9, scope: !14121, inlinedAt: !15360)
!15367 = !DILocation(line: 1448, column: 2, scope: !15368)
!15368 = distinct !DILexicalBlock(scope: !15369, file: !2461, line: 1448, column: 2)
!15369 = distinct !DILexicalBlock(scope: !15308, file: !2461, line: 1448, column: 2)
!15370 = !DILocation(line: 1448, column: 2, scope: !15369)
!15371 = !DILocation(line: 1448, column: 2, scope: !15372)
!15372 = distinct !DILexicalBlock(scope: !15368, file: !2461, line: 1448, column: 2)
!15373 = !DILocation(line: 1450, column: 10, scope: !15308)
!15374 = !DILocation(line: 1450, column: 45, scope: !15308)
!15375 = !DILocation(line: 1450, column: 43, scope: !15308)
!15376 = !DILocation(line: 1451, column: 6, scope: !15308)
!15377 = !DILocation(line: 1457, column: 1, scope: !15308)
!15378 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3341, file: !3341, line: 1103, type: !3342, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15379)
!15379 = !{!15380}
!15380 = !DILocalVariable(name: "t", arg: 1, scope: !15378, file: !3341, line: 1103, type: !111)
!15381 = !DILocation(line: 0, scope: !15378)
!15382 = !DILocation(line: 0, scope: !13575, inlinedAt: !15383)
!15383 = distinct !DILocation(line: 1106, column: 9, scope: !15378)
!15384 = !DILocation(line: 139, column: 13, scope: !15385, inlinedAt: !15383)
!15385 = distinct !DILexicalBlock(scope: !15386, file: !3341, line: 138, column: 10)
!15386 = distinct !DILexicalBlock(scope: !15387, file: !3341, line: 136, column: 7)
!15387 = distinct !DILexicalBlock(scope: !13596, file: !3341, line: 134, column: 17)
!15388 = !DILocation(line: 1106, column: 2, scope: !15378)
!15389 = distinct !DISubprogram(name: "k_yield", scope: !3288, file: !3288, line: 140, type: !3103, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !2018)
!15390 = !DILocation(line: 148, column: 2, scope: !15391)
!15391 = distinct !DILexicalBlock(scope: !15389, file: !3288, line: 148, column: 2)
!15392 = !{i64 2154790807}
!15393 = !DILocation(line: 149, column: 2, scope: !15389)
!15394 = !DILocation(line: 150, column: 1, scope: !15389)
!15395 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2461, file: !2461, line: 1495, type: !15396, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15398)
!15396 = !DISubroutineType(types: !15397)
!15397 = !{!756, !109}
!15398 = !{!15399, !15400}
!15399 = !DILocalVariable(name: "us", arg: 1, scope: !15395, file: !2461, line: 1495, type: !109)
!15400 = !DILocalVariable(name: "ticks", scope: !15395, file: !2461, line: 1497, type: !756)
!15401 = !DILocation(line: 0, scope: !15395)
!15402 = !DILocation(line: 1501, column: 31, scope: !15395)
!15403 = !DILocation(line: 1501, column: 10, scope: !15395)
!15404 = !DILocation(line: 1502, column: 23, scope: !15395)
!15405 = !DILocation(line: 1502, column: 10, scope: !15395)
!15406 = !DILocation(line: 1506, column: 31, scope: !15395)
!15407 = !DILocation(line: 1506, column: 9, scope: !15395)
!15408 = !DILocation(line: 1506, column: 2, scope: !15395)
!15409 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3341, file: !3341, line: 571, type: !3342, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15410)
!15410 = !{!15411}
!15411 = !DILocalVariable(name: "t", arg: 1, scope: !15409, file: !3341, line: 571, type: !111)
!15412 = !DILocation(line: 0, scope: !15409)
!15413 = !DILocation(line: 0, scope: !13575, inlinedAt: !15414)
!15414 = distinct !DILocation(line: 574, column: 9, scope: !15409)
!15415 = !DILocation(line: 135, column: 5, scope: !15387, inlinedAt: !15414)
!15416 = !DILocation(line: 139, column: 13, scope: !15385, inlinedAt: !15414)
!15417 = !DILocation(line: 574, column: 2, scope: !15409)
!15418 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3341, file: !3341, line: 1187, type: !3342, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15419)
!15419 = !{!15420}
!15420 = !DILocalVariable(name: "t", arg: 1, scope: !15418, file: !3341, line: 1187, type: !111)
!15421 = !DILocation(line: 0, scope: !15418)
!15422 = !DILocation(line: 0, scope: !13575, inlinedAt: !15423)
!15423 = distinct !DILocation(line: 1190, column: 9, scope: !15418)
!15424 = !DILocation(line: 145, column: 13, scope: !15425, inlinedAt: !15423)
!15425 = distinct !DILexicalBlock(scope: !13593, file: !3341, line: 144, column: 10)
!15426 = !DILocation(line: 1190, column: 2, scope: !15418)
!15427 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2461, file: !2461, line: 1517, type: !15298, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15428)
!15428 = !{!15429}
!15429 = !DILocalVariable(name: "thread", arg: 1, scope: !15427, file: !2461, line: 1517, type: !15174)
!15430 = !DILocation(line: 0, scope: !15427)
!15431 = !DILocation(line: 1521, column: 6, scope: !15432)
!15432 = distinct !DILexicalBlock(scope: !15427, file: !2461, line: 1521, column: 6)
!15433 = !DILocation(line: 1521, column: 6, scope: !15427)
!15434 = !DILocation(line: 1525, column: 6, scope: !15435)
!15435 = distinct !DILexicalBlock(scope: !15427, file: !2461, line: 1525, column: 6)
!15436 = !DILocation(line: 1525, column: 37, scope: !15435)
!15437 = !DILocation(line: 1525, column: 6, scope: !15427)
!15438 = !DILocation(line: 1527, column: 20, scope: !15439)
!15439 = distinct !DILexicalBlock(scope: !15440, file: !2461, line: 1527, column: 7)
!15440 = distinct !DILexicalBlock(scope: !15435, file: !2461, line: 1525, column: 42)
!15441 = !DILocation(line: 1527, column: 33, scope: !15439)
!15442 = !DILocation(line: 1527, column: 7, scope: !15440)
!15443 = !DILocation(line: 1532, column: 2, scope: !15427)
!15444 = !DILocation(line: 1533, column: 2, scope: !15427)
!15445 = !DILocation(line: 1031, column: 3, scope: !14170, inlinedAt: !15446)
!15446 = distinct !DILocation(line: 48, column: 10, scope: !14174, inlinedAt: !15447)
!15447 = distinct !DILocation(line: 1537, column: 7, scope: !15448)
!15448 = distinct !DILexicalBlock(scope: !15427, file: !2461, line: 1537, column: 6)
!15449 = !DILocation(line: 0, scope: !14170, inlinedAt: !15446)
!15450 = !DILocation(line: 48, column: 9, scope: !14174, inlinedAt: !15447)
!15451 = !DILocation(line: 1537, column: 6, scope: !15427)
!15452 = !DILocation(line: 1538, column: 3, scope: !15453)
!15453 = distinct !DILexicalBlock(scope: !15448, file: !2461, line: 1537, column: 25)
!15454 = !DILocation(line: 1539, column: 2, scope: !15453)
!15455 = !DILocation(line: 1540, column: 1, scope: !15427)
!15456 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12106, file: !12106, line: 101, type: !13656, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15457)
!15457 = !{!15458}
!15458 = !DILocalVariable(name: "thread", arg: 1, scope: !15456, file: !12106, line: 101, type: !2346)
!15459 = !DILocation(line: 0, scope: !15456)
!15460 = !DILocation(line: 103, column: 23, scope: !15456)
!15461 = !DILocation(line: 103, column: 36, scope: !15456)
!15462 = !DILocation(line: 103, column: 55, scope: !15456)
!15463 = !DILocation(line: 103, column: 2, scope: !15456)
!15464 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2461, file: !2461, line: 1567, type: !15465, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15467)
!15465 = !DISubroutineType(types: !15466)
!15466 = !{!15174}
!15467 = !{!15468}
!15468 = !DILocalVariable(name: "ret", scope: !15464, file: !2461, line: 1577, type: !15174)
!15469 = !DILocation(line: 1577, column: 30, scope: !15464)
!15470 = !DILocation(line: 0, scope: !15464)
!15471 = !DILocation(line: 1582, column: 2, scope: !15464)
!15472 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2461, file: !2461, line: 1593, type: !7310, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !2018)
!15473 = !DILocation(line: 1031, column: 3, scope: !14170, inlinedAt: !15474)
!15474 = distinct !DILocation(line: 48, column: 10, scope: !14174, inlinedAt: !15475)
!15475 = distinct !DILocation(line: 1595, column: 10, scope: !15472)
!15476 = !DILocation(line: 0, scope: !14170, inlinedAt: !15474)
!15477 = !DILocation(line: 48, column: 9, scope: !14174, inlinedAt: !15475)
!15478 = !DILocation(line: 1595, column: 27, scope: !15472)
!15479 = !DILocation(line: 1595, column: 41, scope: !15472)
!15480 = !DILocation(line: 1595, column: 30, scope: !15472)
!15481 = !DILocation(line: 1595, column: 2, scope: !15472)
!15482 = distinct !DISubprogram(name: "z_thread_abort", scope: !2461, file: !2461, line: 1725, type: !13473, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15483)
!15483 = !{!15484, !15485}
!15484 = !DILocalVariable(name: "thread", arg: 1, scope: !15482, file: !2461, line: 1725, type: !2346)
!15485 = !DILocalVariable(name: "key", scope: !15482, file: !2461, line: 1727, type: !13507)
!15486 = !DILocation(line: 0, scope: !15482)
!15487 = !DILocation(line: 0, scope: !13515, inlinedAt: !15488)
!15488 = distinct !DILocation(line: 1727, column: 25, scope: !15482)
!15489 = !DILocation(line: 55, column: 2, scope: !13524, inlinedAt: !15490)
!15490 = distinct !DILocation(line: 145, column: 10, scope: !13515, inlinedAt: !15488)
!15491 = !DILocation(line: 0, scope: !13524, inlinedAt: !15490)
!15492 = !DILocation(line: 148, column: 2, scope: !13532, inlinedAt: !15488)
!15493 = !DILocation(line: 148, column: 2, scope: !13533, inlinedAt: !15488)
!15494 = !DILocation(line: 148, column: 2, scope: !13536, inlinedAt: !15488)
!15495 = !DILocation(line: 160, column: 2, scope: !13515, inlinedAt: !15488)
!15496 = !DILocation(line: 1729, column: 20, scope: !15497)
!15497 = distinct !DILexicalBlock(scope: !15482, file: !2461, line: 1729, column: 6)
!15498 = !DILocation(line: 1729, column: 33, scope: !15497)
!15499 = !DILocation(line: 1729, column: 48, scope: !15497)
!15500 = !DILocation(line: 1729, column: 6, scope: !15482)
!15501 = !DILocation(line: 0, scope: !13549, inlinedAt: !15502)
!15502 = distinct !DILocation(line: 1730, column: 3, scope: !15503)
!15503 = distinct !DILexicalBlock(scope: !15497, file: !2461, line: 1729, column: 54)
!15504 = !DILocation(line: 194, column: 2, scope: !13557, inlinedAt: !15502)
!15505 = !DILocation(line: 194, column: 2, scope: !13558, inlinedAt: !15502)
!15506 = !DILocation(line: 194, column: 2, scope: !13561, inlinedAt: !15502)
!15507 = !DILocation(line: 0, scope: !13563, inlinedAt: !15508)
!15508 = distinct !DILocation(line: 215, column: 2, scope: !13549, inlinedAt: !15502)
!15509 = !DILocation(line: 95, column: 2, scope: !13563, inlinedAt: !15508)
!15510 = !DILocation(line: 1731, column: 3, scope: !15511)
!15511 = distinct !DILexicalBlock(scope: !15512, file: !2461, line: 1731, column: 3)
!15512 = distinct !DILexicalBlock(scope: !15513, file: !2461, line: 1731, column: 3)
!15513 = distinct !DILexicalBlock(scope: !15503, file: !2461, line: 1731, column: 3)
!15514 = !DILocation(line: 1736, column: 20, scope: !15515)
!15515 = distinct !DILexicalBlock(scope: !15482, file: !2461, line: 1736, column: 6)
!15516 = !DILocation(line: 1736, column: 33, scope: !15515)
!15517 = !DILocation(line: 1736, column: 49, scope: !15515)
!15518 = !DILocation(line: 1736, column: 6, scope: !15482)
!15519 = !DILocation(line: 0, scope: !13549, inlinedAt: !15520)
!15520 = distinct !DILocation(line: 1737, column: 3, scope: !15521)
!15521 = distinct !DILexicalBlock(scope: !15515, file: !2461, line: 1736, column: 56)
!15522 = !DILocation(line: 194, column: 2, scope: !13557, inlinedAt: !15520)
!15523 = !DILocation(line: 194, column: 2, scope: !13558, inlinedAt: !15520)
!15524 = !DILocation(line: 194, column: 2, scope: !13561, inlinedAt: !15520)
!15525 = !DILocation(line: 0, scope: !13563, inlinedAt: !15526)
!15526 = distinct !DILocation(line: 215, column: 2, scope: !13549, inlinedAt: !15520)
!15527 = !DILocation(line: 95, column: 2, scope: !13563, inlinedAt: !15526)
!15528 = !DILocation(line: 1738, column: 3, scope: !15521)
!15529 = !DILocation(line: 1775, column: 2, scope: !15482)
!15530 = !DILocation(line: 1776, column: 16, scope: !15531)
!15531 = distinct !DILexicalBlock(scope: !15482, file: !2461, line: 1776, column: 6)
!15532 = !DILocation(line: 1776, column: 13, scope: !15531)
!15533 = !DILocation(line: 1776, column: 25, scope: !15531)
!15534 = !DILocation(line: 1031, column: 3, scope: !14170, inlinedAt: !15535)
!15535 = distinct !DILocation(line: 48, column: 10, scope: !14174, inlinedAt: !15536)
!15536 = distinct !DILocation(line: 1776, column: 29, scope: !15531)
!15537 = !DILocation(line: 0, scope: !14170, inlinedAt: !15535)
!15538 = !DILocation(line: 48, column: 9, scope: !14174, inlinedAt: !15536)
!15539 = !DILocation(line: 1776, column: 6, scope: !15482)
!15540 = !DILocation(line: 0, scope: !14121, inlinedAt: !15541)
!15541 = distinct !DILocation(line: 1777, column: 3, scope: !15542)
!15542 = distinct !DILexicalBlock(scope: !15531, file: !2461, line: 1776, column: 47)
!15543 = !DILocation(line: 0, scope: !14130, inlinedAt: !15544)
!15544 = distinct !DILocation(line: 195, column: 2, scope: !14121, inlinedAt: !15541)
!15545 = !DILocation(line: 225, column: 2, scope: !14137, inlinedAt: !15544)
!15546 = !DILocation(line: 225, column: 2, scope: !14138, inlinedAt: !15544)
!15547 = !DILocation(line: 225, column: 2, scope: !14141, inlinedAt: !15544)
!15548 = !DILocation(line: 196, column: 9, scope: !14121, inlinedAt: !15541)
!15549 = !DILocation(line: 1778, column: 3, scope: !15550)
!15550 = distinct !DILexicalBlock(scope: !15551, file: !2461, line: 1778, column: 3)
!15551 = distinct !DILexicalBlock(scope: !15552, file: !2461, line: 1778, column: 3)
!15552 = distinct !DILexicalBlock(scope: !15542, file: !2461, line: 1778, column: 3)
!15553 = !DILocation(line: 0, scope: !13549, inlinedAt: !15554)
!15554 = distinct !DILocation(line: 1780, column: 2, scope: !15482)
!15555 = !DILocation(line: 194, column: 2, scope: !13557, inlinedAt: !15554)
!15556 = !DILocation(line: 194, column: 2, scope: !13558, inlinedAt: !15554)
!15557 = !DILocation(line: 194, column: 2, scope: !13561, inlinedAt: !15554)
!15558 = !DILocation(line: 0, scope: !13563, inlinedAt: !15559)
!15559 = distinct !DILocation(line: 215, column: 2, scope: !13549, inlinedAt: !15554)
!15560 = !DILocation(line: 95, column: 2, scope: !13563, inlinedAt: !15559)
!15561 = !DILocation(line: 1781, column: 1, scope: !15482)
!15562 = distinct !DISubprogram(name: "end_thread", scope: !2461, file: !2461, line: 1690, type: !13473, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15563)
!15563 = !{!15564}
!15564 = !DILocalVariable(name: "thread", arg: 1, scope: !15562, file: !2461, line: 1690, type: !2346)
!15565 = !DILocation(line: 0, scope: !15562)
!15566 = !DILocation(line: 1695, column: 20, scope: !15567)
!15567 = distinct !DILexicalBlock(scope: !15562, file: !2461, line: 1695, column: 6)
!15568 = !DILocation(line: 1695, column: 33, scope: !15567)
!15569 = !DILocation(line: 1695, column: 49, scope: !15567)
!15570 = !DILocation(line: 1695, column: 6, scope: !15562)
!15571 = !DILocation(line: 1697, column: 29, scope: !15572)
!15572 = distinct !DILexicalBlock(scope: !15567, file: !2461, line: 1695, column: 56)
!15573 = !DILocation(line: 1698, column: 7, scope: !15574)
!15574 = distinct !DILexicalBlock(scope: !15572, file: !2461, line: 1698, column: 7)
!15575 = !DILocation(line: 1698, column: 7, scope: !15572)
!15576 = !DILocation(line: 0, scope: !13707, inlinedAt: !15577)
!15577 = distinct !DILocation(line: 1699, column: 4, scope: !15578)
!15578 = distinct !DILexicalBlock(scope: !15574, file: !2461, line: 1698, column: 35)
!15579 = !DILocation(line: 266, column: 28, scope: !13707, inlinedAt: !15577)
!15580 = !DILocation(line: 0, scope: !13715, inlinedAt: !15581)
!15581 = distinct !DILocation(line: 268, column: 3, scope: !13719, inlinedAt: !15577)
!15582 = !DILocation(line: 234, column: 2, scope: !13715, inlinedAt: !15581)
!15583 = !DILocation(line: 1700, column: 3, scope: !15578)
!15584 = !DILocation(line: 1701, column: 20, scope: !15585)
!15585 = distinct !DILexicalBlock(scope: !15572, file: !2461, line: 1701, column: 7)
!15586 = !DILocation(line: 1701, column: 30, scope: !15585)
!15587 = !DILocation(line: 1701, column: 7, scope: !15572)
!15588 = !DILocation(line: 1702, column: 4, scope: !15589)
!15589 = distinct !DILexicalBlock(scope: !15585, file: !2461, line: 1701, column: 39)
!15590 = !DILocation(line: 1703, column: 3, scope: !15589)
!15591 = !DILocation(line: 1704, column: 9, scope: !15572)
!15592 = !DILocation(line: 1705, column: 23, scope: !15572)
!15593 = !DILocation(line: 1705, column: 3, scope: !15572)
!15594 = !DILocation(line: 1706, column: 3, scope: !15572)
!15595 = !DILocation(line: 1710, column: 3, scope: !15572)
!15596 = !DILocation(line: 1722, column: 2, scope: !15572)
!15597 = !DILocation(line: 1723, column: 1, scope: !15562)
!15598 = distinct !DISubprogram(name: "unpend_all", scope: !2461, file: !2461, line: 1674, type: !15599, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15601)
!15599 = !DISubroutineType(types: !15600)
!15600 = !{null, !2377}
!15601 = !{!15602, !15603}
!15602 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15598, file: !2461, line: 1674, type: !2377)
!15603 = !DILocalVariable(name: "thread", scope: !15598, file: !2461, line: 1676, type: !2346)
!15604 = !DILocation(line: 0, scope: !15598)
!15605 = !DILocation(line: 1678, column: 19, scope: !15598)
!15606 = !DILocation(line: 1678, column: 41, scope: !15598)
!15607 = !DILocation(line: 1678, column: 2, scope: !15598)
!15608 = !DILocation(line: 1679, column: 3, scope: !15609)
!15609 = distinct !DILexicalBlock(scope: !15598, file: !2461, line: 1678, column: 50)
!15610 = !DILocation(line: 1680, column: 9, scope: !15609)
!15611 = !DILocalVariable(name: "thread", arg: 1, scope: !15612, file: !12126, line: 65, type: !2346)
!15612 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12126, file: !12126, line: 65, type: !15613, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15615)
!15613 = !DISubroutineType(types: !15614)
!15614 = !{null, !2346, !32}
!15615 = !{!15611, !15616}
!15616 = !DILocalVariable(name: "value", arg: 2, scope: !15612, file: !12126, line: 65, type: !32)
!15617 = !DILocation(line: 0, scope: !15612, inlinedAt: !15618)
!15618 = distinct !DILocation(line: 1681, column: 3, scope: !15609)
!15619 = !DILocation(line: 67, column: 15, scope: !15612, inlinedAt: !15618)
!15620 = !DILocation(line: 67, column: 33, scope: !15612, inlinedAt: !15618)
!15621 = !DILocation(line: 1682, column: 3, scope: !15609)
!15622 = distinct !{!15622, !15607, !15623}
!15623 = !DILocation(line: 1683, column: 2, scope: !15598)
!15624 = !DILocation(line: 1684, column: 1, scope: !15598)
!15625 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2461, file: !2461, line: 1794, type: !15626, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15628)
!15626 = !DISubroutineType(types: !15627)
!15627 = !{!109, !2346, !14331}
!15628 = !{!15629, !15630, !15631, !15632}
!15629 = !DILocalVariable(name: "thread", arg: 1, scope: !15625, file: !2461, line: 1794, type: !2346)
!15630 = !DILocalVariable(name: "timeout", arg: 2, scope: !15625, file: !2461, line: 1794, type: !14331)
!15631 = !DILocalVariable(name: "key", scope: !15625, file: !2461, line: 1796, type: !13507)
!15632 = !DILocalVariable(name: "ret", scope: !15625, file: !2461, line: 1797, type: !109)
!15633 = !DILocation(line: 0, scope: !15625)
!15634 = !DILocation(line: 0, scope: !13515, inlinedAt: !15635)
!15635 = distinct !DILocation(line: 1796, column: 25, scope: !15625)
!15636 = !DILocation(line: 55, column: 2, scope: !13524, inlinedAt: !15637)
!15637 = distinct !DILocation(line: 145, column: 10, scope: !13515, inlinedAt: !15635)
!15638 = !DILocation(line: 0, scope: !13524, inlinedAt: !15637)
!15639 = !DILocation(line: 148, column: 2, scope: !13532, inlinedAt: !15635)
!15640 = !DILocation(line: 148, column: 2, scope: !13533, inlinedAt: !15635)
!15641 = !DILocation(line: 148, column: 2, scope: !13536, inlinedAt: !15635)
!15642 = !DILocation(line: 160, column: 2, scope: !13515, inlinedAt: !15635)
!15643 = !DILocation(line: 1801, column: 20, scope: !15644)
!15644 = distinct !DILexicalBlock(scope: !15625, file: !2461, line: 1801, column: 6)
!15645 = !DILocation(line: 1801, column: 33, scope: !15644)
!15646 = !DILocation(line: 1801, column: 49, scope: !15644)
!15647 = !DILocation(line: 1801, column: 6, scope: !15625)
!15648 = !DILocation(line: 1803, column: 13, scope: !15649)
!15649 = distinct !DILexicalBlock(scope: !15644, file: !2461, line: 1803, column: 13)
!15650 = !DILocation(line: 1803, column: 13, scope: !15644)
!15651 = !DILocation(line: 1805, column: 24, scope: !15652)
!15652 = distinct !DILexicalBlock(scope: !15649, file: !2461, line: 1805, column: 13)
!15653 = !DILocation(line: 1805, column: 21, scope: !15652)
!15654 = !DILocation(line: 1805, column: 34, scope: !15652)
!15655 = !DILocation(line: 1806, column: 20, scope: !15652)
!15656 = !DILocation(line: 1806, column: 44, scope: !15652)
!15657 = !DILocation(line: 1806, column: 30, scope: !15652)
!15658 = !DILocation(line: 1805, column: 13, scope: !15649)
!15659 = !DILocation(line: 1031, column: 3, scope: !14170, inlinedAt: !15660)
!15660 = distinct !DILocation(line: 48, column: 10, scope: !14174, inlinedAt: !15661)
!15661 = distinct !DILocation(line: 1809, column: 3, scope: !15662)
!15662 = distinct !DILexicalBlock(scope: !15663, file: !2461, line: 1809, column: 3)
!15663 = distinct !DILexicalBlock(scope: !15664, file: !2461, line: 1809, column: 3)
!15664 = distinct !DILexicalBlock(scope: !15652, file: !2461, line: 1808, column: 9)
!15665 = !DILocation(line: 0, scope: !14170, inlinedAt: !15660)
!15666 = !DILocation(line: 48, column: 9, scope: !14174, inlinedAt: !15661)
!15667 = !DILocation(line: 1809, column: 3, scope: !15663)
!15668 = !DILocation(line: 1809, column: 3, scope: !15669)
!15669 = distinct !DILexicalBlock(scope: !15662, file: !2461, line: 1809, column: 3)
!15670 = !DILocation(line: 1810, column: 23, scope: !15664)
!15671 = !DILocation(line: 1810, column: 42, scope: !15664)
!15672 = !DILocation(line: 1810, column: 3, scope: !15664)
!15673 = !DILocation(line: 1811, column: 22, scope: !15664)
!15674 = !DILocation(line: 1811, column: 3, scope: !15664)
!15675 = !DILocation(line: 0, scope: !14121, inlinedAt: !15676)
!15676 = distinct !DILocation(line: 1814, column: 9, scope: !15664)
!15677 = !DILocation(line: 0, scope: !14130, inlinedAt: !15678)
!15678 = distinct !DILocation(line: 195, column: 2, scope: !14121, inlinedAt: !15676)
!15679 = !DILocation(line: 225, column: 2, scope: !14137, inlinedAt: !15678)
!15680 = !DILocation(line: 225, column: 2, scope: !14138, inlinedAt: !15678)
!15681 = !DILocation(line: 225, column: 2, scope: !14141, inlinedAt: !15678)
!15682 = !DILocation(line: 196, column: 9, scope: !14121, inlinedAt: !15676)
!15683 = !DILocation(line: 1817, column: 3, scope: !15664)
!15684 = !DILocation(line: 0, scope: !15644)
!15685 = !DILocation(line: 0, scope: !13549, inlinedAt: !15686)
!15686 = distinct !DILocation(line: 1822, column: 2, scope: !15625)
!15687 = !DILocation(line: 194, column: 2, scope: !13557, inlinedAt: !15686)
!15688 = !DILocation(line: 194, column: 2, scope: !13558, inlinedAt: !15686)
!15689 = !DILocation(line: 194, column: 2, scope: !13561, inlinedAt: !15686)
!15690 = !DILocation(line: 0, scope: !13563, inlinedAt: !15691)
!15691 = distinct !DILocation(line: 215, column: 2, scope: !13549, inlinedAt: !15686)
!15692 = !DILocation(line: 95, column: 2, scope: !13563, inlinedAt: !15691)
!15693 = !DILocation(line: 1823, column: 2, scope: !15625)
!15694 = !DILocation(line: 1824, column: 1, scope: !15625)
!15695 = distinct !DISubprogram(name: "z_sched_wake", scope: !2461, file: !2461, line: 1882, type: !15696, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15698)
!15696 = !DISubroutineType(types: !15697)
!15697 = !{!334, !2377, !109, !108}
!15698 = !{!15699, !15700, !15701, !15702, !15703, !15704, !15706}
!15699 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15695, file: !2461, line: 1882, type: !2377)
!15700 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !15695, file: !2461, line: 1882, type: !109)
!15701 = !DILocalVariable(name: "swap_data", arg: 3, scope: !15695, file: !2461, line: 1882, type: !108)
!15702 = !DILocalVariable(name: "thread", scope: !15695, file: !2461, line: 1884, type: !2346)
!15703 = !DILocalVariable(name: "ret", scope: !15695, file: !2461, line: 1885, type: !334)
!15704 = !DILocalVariable(name: "__i", scope: !15705, file: !2461, line: 1887, type: !13507)
!15705 = distinct !DILexicalBlock(scope: !15695, file: !2461, line: 1887, column: 2)
!15706 = !DILocalVariable(name: "__key", scope: !15705, file: !2461, line: 1887, type: !13507)
!15707 = !DILocation(line: 0, scope: !15695)
!15708 = !DILocation(line: 0, scope: !15705)
!15709 = !DILocation(line: 0, scope: !13515, inlinedAt: !15710)
!15710 = distinct !DILocation(line: 1887, column: 2, scope: !15705)
!15711 = !DILocation(line: 55, column: 2, scope: !13524, inlinedAt: !15712)
!15712 = distinct !DILocation(line: 145, column: 10, scope: !13515, inlinedAt: !15710)
!15713 = !DILocation(line: 0, scope: !13524, inlinedAt: !15712)
!15714 = !DILocation(line: 148, column: 2, scope: !13532, inlinedAt: !15710)
!15715 = !DILocation(line: 148, column: 2, scope: !13533, inlinedAt: !15710)
!15716 = !DILocation(line: 148, column: 2, scope: !13536, inlinedAt: !15710)
!15717 = !DILocation(line: 160, column: 2, scope: !13515, inlinedAt: !15710)
!15718 = !DILocation(line: 1888, column: 12, scope: !15719)
!15719 = distinct !DILexicalBlock(scope: !15720, file: !2461, line: 1887, column: 26)
!15720 = distinct !DILexicalBlock(scope: !15705, file: !2461, line: 1887, column: 2)
!15721 = !DILocation(line: 1890, column: 14, scope: !15722)
!15722 = distinct !DILexicalBlock(scope: !15719, file: !2461, line: 1890, column: 7)
!15723 = !DILocation(line: 1890, column: 7, scope: !15719)
!15724 = !DILocalVariable(name: "thread", arg: 1, scope: !15725, file: !15726, line: 134, type: !2346)
!15725 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !15726, file: !15726, line: 134, type: !15727, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15729)
!15726 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15727 = !DISubroutineType(types: !15728)
!15728 = !{null, !2346, !32, !108}
!15729 = !{!15724, !15730, !15731}
!15730 = !DILocalVariable(name: "value", arg: 2, scope: !15725, file: !15726, line: 135, type: !32)
!15731 = !DILocalVariable(name: "data", arg: 3, scope: !15725, file: !15726, line: 136, type: !108)
!15732 = !DILocation(line: 0, scope: !15725, inlinedAt: !15733)
!15733 = distinct !DILocation(line: 1891, column: 4, scope: !15734)
!15734 = distinct !DILexicalBlock(scope: !15722, file: !2461, line: 1890, column: 23)
!15735 = !DILocation(line: 0, scope: !15612, inlinedAt: !15736)
!15736 = distinct !DILocation(line: 138, column: 2, scope: !15725, inlinedAt: !15733)
!15737 = !DILocation(line: 67, column: 15, scope: !15612, inlinedAt: !15736)
!15738 = !DILocation(line: 67, column: 33, scope: !15612, inlinedAt: !15736)
!15739 = !DILocation(line: 139, column: 15, scope: !15725, inlinedAt: !15733)
!15740 = !DILocation(line: 139, column: 25, scope: !15725, inlinedAt: !15733)
!15741 = !DILocation(line: 1894, column: 4, scope: !15734)
!15742 = !DILocation(line: 1895, column: 10, scope: !15734)
!15743 = !DILocation(line: 1896, column: 4, scope: !15734)
!15744 = !DILocation(line: 1898, column: 3, scope: !15734)
!15745 = !DILocation(line: 0, scope: !13549, inlinedAt: !15746)
!15746 = distinct !DILocation(line: 1887, column: 2, scope: !15720)
!15747 = !DILocation(line: 194, column: 2, scope: !13557, inlinedAt: !15746)
!15748 = !DILocation(line: 194, column: 2, scope: !13558, inlinedAt: !15746)
!15749 = !DILocation(line: 194, column: 2, scope: !13561, inlinedAt: !15746)
!15750 = !DILocation(line: 0, scope: !13563, inlinedAt: !15751)
!15751 = distinct !DILocation(line: 215, column: 2, scope: !13549, inlinedAt: !15746)
!15752 = !DILocation(line: 95, column: 2, scope: !13563, inlinedAt: !15751)
!15753 = !DILocation(line: 1901, column: 2, scope: !15695)
!15754 = distinct !DISubprogram(name: "z_sched_wait", scope: !2461, file: !2461, line: 1904, type: !15755, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15758)
!15755 = !DISubroutineType(types: !15756)
!15756 = !{!109, !13518, !13507, !2377, !14331, !15757}
!15757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!15758 = !{!15759, !15760, !15761, !15762, !15763, !15764}
!15759 = !DILocalVariable(name: "lock", arg: 1, scope: !15754, file: !2461, line: 1904, type: !13518)
!15760 = !DILocalVariable(name: "key", arg: 2, scope: !15754, file: !2461, line: 1904, type: !13507)
!15761 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15754, file: !2461, line: 1905, type: !2377)
!15762 = !DILocalVariable(name: "timeout", arg: 4, scope: !15754, file: !2461, line: 1905, type: !14331)
!15763 = !DILocalVariable(name: "data", arg: 5, scope: !15754, file: !2461, line: 1905, type: !15757)
!15764 = !DILocalVariable(name: "ret", scope: !15754, file: !2461, line: 1907, type: !109)
!15765 = !DILocation(line: 0, scope: !15754)
!15766 = !DILocation(line: 1907, column: 12, scope: !15754)
!15767 = !DILocation(line: 1909, column: 11, scope: !15768)
!15768 = distinct !DILexicalBlock(scope: !15754, file: !2461, line: 1909, column: 6)
!15769 = !DILocation(line: 1909, column: 6, scope: !15754)
!15770 = !DILocation(line: 1910, column: 11, scope: !15771)
!15771 = distinct !DILexicalBlock(scope: !15768, file: !2461, line: 1909, column: 20)
!15772 = !DILocation(line: 1910, column: 26, scope: !15771)
!15773 = !DILocation(line: 1910, column: 9, scope: !15771)
!15774 = !DILocation(line: 1911, column: 2, scope: !15771)
!15775 = !DILocation(line: 1912, column: 2, scope: !15754)
!15776 = distinct !DISubprogram(name: "z_data_copy", scope: !15777, file: !15777, line: 22, type: !3103, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3086, retainedNodes: !2018)
!15777 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15778 = !DILocation(line: 24, column: 2, scope: !15776)
!15779 = !DILocation(line: 27, column: 2, scope: !15776)
!15780 = !DILocation(line: 71, column: 1, scope: !15776)
!15781 = distinct !DISubprogram(name: "z_add_timeout", scope: !2498, file: !2498, line: 88, type: !15782, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !15788)
!15782 = !DISubroutineType(types: !15783)
!15783 = !{null, !2471, !2490, !15784}
!15784 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !15785)
!15785 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !15786)
!15786 = !{!15787}
!15787 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15785, file: !105, line: 66, baseType: !104, size: 64)
!15788 = !{!15789, !15790, !15791, !15792, !15798, !15799, !15802, !15805}
!15789 = !DILocalVariable(name: "to", arg: 1, scope: !15781, file: !2498, line: 88, type: !2471)
!15790 = !DILocalVariable(name: "fn", arg: 2, scope: !15781, file: !2498, line: 88, type: !2490)
!15791 = !DILocalVariable(name: "timeout", arg: 3, scope: !15781, file: !2498, line: 89, type: !15784)
!15792 = !DILocalVariable(name: "__i", scope: !15793, file: !2498, line: 102, type: !15794)
!15793 = distinct !DILexicalBlock(scope: !15781, file: !2498, line: 102, column: 2)
!15794 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !254, line: 106, baseType: !15795)
!15795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !254, line: 32, size: 32, elements: !15796)
!15796 = !{!15797}
!15797 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15795, file: !254, line: 33, baseType: !109, size: 32)
!15798 = !DILocalVariable(name: "__key", scope: !15793, file: !2498, line: 102, type: !15794)
!15799 = !DILocalVariable(name: "t", scope: !15800, file: !2498, line: 103, type: !2471)
!15800 = distinct !DILexicalBlock(scope: !15801, file: !2498, line: 102, column: 24)
!15801 = distinct !DILexicalBlock(scope: !15793, file: !2498, line: 102, column: 2)
!15802 = !DILocalVariable(name: "ticks", scope: !15803, file: !2498, line: 107, type: !104)
!15803 = distinct !DILexicalBlock(scope: !15804, file: !2498, line: 106, column: 39)
!15804 = distinct !DILexicalBlock(scope: !15800, file: !2498, line: 105, column: 7)
!15805 = !DILocalVariable(name: "next_time", scope: !15806, file: !2498, line: 137, type: !756)
!15806 = distinct !DILexicalBlock(scope: !15807, file: !2498, line: 127, column: 22)
!15807 = distinct !DILexicalBlock(scope: !15800, file: !2498, line: 127, column: 7)
!15808 = !DILocation(line: 0, scope: !15781)
!15809 = !DILocation(line: 91, column: 6, scope: !15810)
!15810 = distinct !DILexicalBlock(scope: !15781, file: !2498, line: 91, column: 6)
!15811 = !DILocation(line: 91, column: 6, scope: !15781)
!15812 = !DILocation(line: 99, column: 2, scope: !15813)
!15813 = distinct !DILexicalBlock(scope: !15814, file: !2498, line: 99, column: 2)
!15814 = distinct !DILexicalBlock(scope: !15781, file: !2498, line: 99, column: 2)
!15815 = !DILocation(line: 99, column: 2, scope: !15814)
!15816 = !DILocation(line: 99, column: 2, scope: !15817)
!15817 = distinct !DILexicalBlock(scope: !15813, file: !2498, line: 99, column: 2)
!15818 = !DILocation(line: 100, column: 6, scope: !15781)
!15819 = !DILocation(line: 100, column: 9, scope: !15781)
!15820 = !DILocation(line: 0, scope: !15793)
!15821 = !DILocalVariable(name: "l", arg: 1, scope: !15822, file: !254, line: 136, type: !15825)
!15822 = distinct !DISubprogram(name: "k_spin_lock", scope: !254, file: !254, line: 136, type: !15823, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !15826)
!15823 = !DISubroutineType(types: !15824)
!15824 = !{!15794, !15825}
!15825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2504, size: 32)
!15826 = !{!15821, !15827}
!15827 = !DILocalVariable(name: "k", scope: !15822, file: !254, line: 139, type: !15794)
!15828 = !DILocation(line: 0, scope: !15822, inlinedAt: !15829)
!15829 = distinct !DILocation(line: 102, column: 2, scope: !15793)
!15830 = !DILocation(line: 55, column: 2, scope: !15831, inlinedAt: !15835)
!15831 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6005, file: !6005, line: 42, type: !6006, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !15832)
!15832 = !{!15833, !15834}
!15833 = !DILocalVariable(name: "key", scope: !15831, file: !6005, line: 44, type: !32)
!15834 = !DILocalVariable(name: "tmp", scope: !15831, file: !6005, line: 53, type: !32)
!15835 = distinct !DILocation(line: 145, column: 10, scope: !15822, inlinedAt: !15829)
!15836 = !{i64 2247181}
!15837 = !DILocation(line: 0, scope: !15831, inlinedAt: !15835)
!15838 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !15829)
!15839 = distinct !DILexicalBlock(scope: !15840, file: !254, line: 148, column: 2)
!15840 = distinct !DILexicalBlock(scope: !15822, file: !254, line: 148, column: 2)
!15841 = !DILocation(line: 148, column: 2, scope: !15840, inlinedAt: !15829)
!15842 = !DILocation(line: 148, column: 2, scope: !15843, inlinedAt: !15829)
!15843 = distinct !DILexicalBlock(scope: !15839, file: !254, line: 148, column: 2)
!15844 = !DILocation(line: 160, column: 2, scope: !15822, inlinedAt: !15829)
!15845 = !DILocation(line: 106, column: 33, scope: !15804)
!15846 = !DILocation(line: 105, column: 7, scope: !15800)
!15847 = !DILocation(line: 107, column: 50, scope: !15803)
!15848 = !DILocation(line: 107, column: 48, scope: !15803)
!15849 = !DILocation(line: 0, scope: !15803)
!15850 = !DILocation(line: 109, column: 17, scope: !15803)
!15851 = !DILocation(line: 110, column: 3, scope: !15803)
!15852 = !DILocation(line: 111, column: 31, scope: !15853)
!15853 = distinct !DILexicalBlock(scope: !15804, file: !2498, line: 110, column: 10)
!15854 = !DILocation(line: 111, column: 37, scope: !15853)
!15855 = !DILocation(line: 111, column: 35, scope: !15853)
!15856 = !DILocation(line: 0, scope: !15804)
!15857 = !DILocation(line: 109, column: 8, scope: !15803)
!15858 = !DILocation(line: 109, column: 15, scope: !15803)
!15859 = !DILocation(line: 114, column: 12, scope: !15860)
!15860 = distinct !DILexicalBlock(scope: !15800, file: !2498, line: 114, column: 3)
!15861 = !DILocation(line: 0, scope: !15800)
!15862 = !DILocation(line: 114, column: 3, scope: !15860)
!15863 = !DILocation(line: 115, column: 24, scope: !15864)
!15864 = distinct !DILexicalBlock(scope: !15865, file: !2498, line: 115, column: 8)
!15865 = distinct !DILexicalBlock(scope: !15866, file: !2498, line: 114, column: 45)
!15866 = distinct !DILexicalBlock(scope: !15860, file: !2498, line: 114, column: 3)
!15867 = !DILocation(line: 115, column: 11, scope: !15864)
!15868 = !DILocation(line: 115, column: 18, scope: !15864)
!15869 = !DILocation(line: 115, column: 8, scope: !15865)
!15870 = !DILocation(line: 116, column: 15, scope: !15871)
!15871 = distinct !DILexicalBlock(scope: !15864, file: !2498, line: 115, column: 32)
!15872 = !DILocation(line: 117, column: 26, scope: !15871)
!15873 = !DILocation(line: 117, column: 5, scope: !15871)
!15874 = !DILocation(line: 123, column: 7, scope: !15800)
!15875 = !DILocation(line: 120, column: 15, scope: !15865)
!15876 = !DILocation(line: 114, column: 36, scope: !15866)
!15877 = distinct !{!15877, !15862, !15878}
!15878 = !DILocation(line: 121, column: 3, scope: !15860)
!15879 = !DILocation(line: 124, column: 4, scope: !15880)
!15880 = distinct !DILexicalBlock(scope: !15881, file: !2498, line: 123, column: 18)
!15881 = distinct !DILexicalBlock(scope: !15800, file: !2498, line: 123, column: 7)
!15882 = !DILocation(line: 125, column: 3, scope: !15880)
!15883 = !DILocation(line: 127, column: 13, scope: !15807)
!15884 = !DILocation(line: 127, column: 10, scope: !15807)
!15885 = !DILocation(line: 127, column: 7, scope: !15800)
!15886 = !DILocation(line: 137, column: 24, scope: !15806)
!15887 = !DILocation(line: 0, scope: !15806)
!15888 = !DILocation(line: 139, column: 18, scope: !15889)
!15889 = distinct !DILexicalBlock(scope: !15806, file: !2498, line: 139, column: 8)
!15890 = !DILocation(line: 139, column: 23, scope: !15889)
!15891 = !DILocation(line: 141, column: 5, scope: !15892)
!15892 = distinct !DILexicalBlock(scope: !15889, file: !2498, line: 140, column: 48)
!15893 = !DILocation(line: 142, column: 4, scope: !15892)
!15894 = !DILocalVariable(name: "key", arg: 2, scope: !15895, file: !254, line: 190, type: !15794)
!15895 = distinct !DISubprogram(name: "k_spin_unlock", scope: !254, file: !254, line: 189, type: !15896, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !15898)
!15896 = !DISubroutineType(types: !15897)
!15897 = !{null, !15825, !15794}
!15898 = !{!15899, !15894}
!15899 = !DILocalVariable(name: "l", arg: 1, scope: !15895, file: !254, line: 189, type: !15825)
!15900 = !DILocation(line: 0, scope: !15895, inlinedAt: !15901)
!15901 = distinct !DILocation(line: 102, column: 2, scope: !15801)
!15902 = !DILocation(line: 194, column: 2, scope: !15903, inlinedAt: !15901)
!15903 = distinct !DILexicalBlock(scope: !15904, file: !254, line: 194, column: 2)
!15904 = distinct !DILexicalBlock(scope: !15895, file: !254, line: 194, column: 2)
!15905 = !DILocation(line: 194, column: 2, scope: !15904, inlinedAt: !15901)
!15906 = !DILocation(line: 194, column: 2, scope: !15907, inlinedAt: !15901)
!15907 = distinct !DILexicalBlock(scope: !15903, file: !254, line: 194, column: 2)
!15908 = !DILocalVariable(name: "key", arg: 1, scope: !15909, file: !6005, line: 84, type: !32)
!15909 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6005, file: !6005, line: 84, type: !6016, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !15910)
!15910 = !{!15908}
!15911 = !DILocation(line: 0, scope: !15909, inlinedAt: !15912)
!15912 = distinct !DILocation(line: 215, column: 2, scope: !15895, inlinedAt: !15901)
!15913 = !DILocation(line: 95, column: 2, scope: !15909, inlinedAt: !15912)
!15914 = !{i64 2247998}
!15915 = !DILocation(line: 148, column: 1, scope: !15781)
!15916 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !128, file: !128, line: 225, type: !15917, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !15921)
!15917 = !DISubroutineType(types: !15918)
!15918 = !{!334, !15919}
!15919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15920, size: 32)
!15920 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2475)
!15921 = !{!15922}
!15922 = !DILocalVariable(name: "node", arg: 1, scope: !15916, file: !128, line: 225, type: !15919)
!15923 = !DILocation(line: 0, scope: !15916)
!15924 = !DILocation(line: 227, column: 15, scope: !15916)
!15925 = !DILocation(line: 227, column: 20, scope: !15916)
!15926 = !DILocation(line: 227, column: 2, scope: !15916)
!15927 = distinct !DISubprogram(name: "elapsed", scope: !2498, file: !2498, line: 62, type: !15928, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !2018)
!15928 = !DISubroutineType(types: !15929)
!15929 = !{!756}
!15930 = !DILocation(line: 64, column: 9, scope: !15927)
!15931 = !DILocation(line: 64, column: 28, scope: !15927)
!15932 = !DILocation(line: 64, column: 35, scope: !15927)
!15933 = !DILocation(line: 64, column: 2, scope: !15927)
!15934 = distinct !DISubprogram(name: "first", scope: !2498, file: !2498, line: 39, type: !15935, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !15937)
!15935 = !DISubroutineType(types: !15936)
!15936 = !{!2471}
!15937 = !{!15938}
!15938 = !DILocalVariable(name: "t", scope: !15934, file: !2498, line: 41, type: !15939)
!15939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2475, size: 32)
!15940 = !DILocation(line: 41, column: 19, scope: !15934)
!15941 = !DILocation(line: 0, scope: !15934)
!15942 = !DILocation(line: 43, column: 9, scope: !15934)
!15943 = !DILocation(line: 43, column: 2, scope: !15934)
!15944 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !128, file: !128, line: 443, type: !15945, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !15947)
!15945 = !DISubroutineType(types: !15946)
!15946 = !{null, !15939, !15939}
!15947 = !{!15948, !15949, !15950}
!15948 = !DILocalVariable(name: "successor", arg: 1, scope: !15944, file: !128, line: 443, type: !15939)
!15949 = !DILocalVariable(name: "node", arg: 2, scope: !15944, file: !128, line: 443, type: !15939)
!15950 = !DILocalVariable(name: "prev", scope: !15944, file: !128, line: 445, type: !15951)
!15951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15939)
!15952 = !DILocation(line: 0, scope: !15944)
!15953 = !DILocation(line: 445, column: 39, scope: !15944)
!15954 = !DILocation(line: 447, column: 8, scope: !15944)
!15955 = !DILocation(line: 447, column: 13, scope: !15944)
!15956 = !DILocation(line: 448, column: 8, scope: !15944)
!15957 = !DILocation(line: 448, column: 13, scope: !15944)
!15958 = !DILocation(line: 449, column: 8, scope: !15944)
!15959 = !DILocation(line: 449, column: 13, scope: !15944)
!15960 = !DILocation(line: 450, column: 18, scope: !15944)
!15961 = !DILocation(line: 451, column: 1, scope: !15944)
!15962 = distinct !DISubprogram(name: "next", scope: !2498, file: !2498, line: 46, type: !15963, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !15965)
!15963 = !DISubroutineType(types: !15964)
!15964 = !{!2471, !2471}
!15965 = !{!15966, !15967}
!15966 = !DILocalVariable(name: "t", arg: 1, scope: !15962, file: !2498, line: 46, type: !2471)
!15967 = !DILocalVariable(name: "n", scope: !15962, file: !2498, line: 48, type: !15939)
!15968 = !DILocation(line: 0, scope: !15962)
!15969 = !DILocation(line: 48, column: 58, scope: !15962)
!15970 = !DILocation(line: 48, column: 19, scope: !15962)
!15971 = !DILocation(line: 50, column: 9, scope: !15962)
!15972 = !DILocation(line: 50, column: 2, scope: !15962)
!15973 = distinct !DISubprogram(name: "sys_dlist_append", scope: !128, file: !128, line: 404, type: !15974, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !15977)
!15974 = !DISubroutineType(types: !15975)
!15975 = !{null, !15976, !15939}
!15976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2503, size: 32)
!15977 = !{!15978, !15979, !15980}
!15978 = !DILocalVariable(name: "list", arg: 1, scope: !15973, file: !128, line: 404, type: !15976)
!15979 = !DILocalVariable(name: "node", arg: 2, scope: !15973, file: !128, line: 404, type: !15939)
!15980 = !DILocalVariable(name: "tail", scope: !15973, file: !128, line: 406, type: !15951)
!15981 = !DILocation(line: 0, scope: !15973)
!15982 = !DILocation(line: 406, column: 34, scope: !15973)
!15983 = !DILocation(line: 408, column: 8, scope: !15973)
!15984 = !DILocation(line: 408, column: 13, scope: !15973)
!15985 = !DILocation(line: 409, column: 8, scope: !15973)
!15986 = !DILocation(line: 409, column: 13, scope: !15973)
!15987 = !DILocation(line: 411, column: 8, scope: !15973)
!15988 = !DILocation(line: 411, column: 13, scope: !15973)
!15989 = !DILocation(line: 412, column: 13, scope: !15973)
!15990 = !DILocation(line: 413, column: 1, scope: !15973)
!15991 = distinct !DISubprogram(name: "next_timeout", scope: !2498, file: !2498, line: 67, type: !15928, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !15992)
!15992 = !{!15993, !15994, !15995}
!15993 = !DILocalVariable(name: "to", scope: !15991, file: !2498, line: 69, type: !2471)
!15994 = !DILocalVariable(name: "ticks_elapsed", scope: !15991, file: !2498, line: 70, type: !756)
!15995 = !DILocalVariable(name: "ret", scope: !15991, file: !2498, line: 71, type: !756)
!15996 = !DILocation(line: 69, column: 24, scope: !15991)
!15997 = !DILocation(line: 0, scope: !15991)
!15998 = !DILocation(line: 70, column: 26, scope: !15991)
!15999 = !DILocation(line: 73, column: 10, scope: !16000)
!16000 = distinct !DILexicalBlock(scope: !15991, file: !2498, line: 73, column: 6)
!16001 = !DILocation(line: 73, column: 19, scope: !16000)
!16002 = !DILocation(line: 74, column: 21, scope: !16000)
!16003 = !DILocation(line: 74, column: 30, scope: !16000)
!16004 = !DILocation(line: 74, column: 28, scope: !16000)
!16005 = !DILocation(line: 74, column: 45, scope: !16000)
!16006 = !DILocation(line: 73, column: 6, scope: !15991)
!16007 = !DILocation(line: 77, column: 9, scope: !16008)
!16008 = distinct !DILexicalBlock(scope: !16000, file: !2498, line: 76, column: 9)
!16009 = !DILocation(line: 0, scope: !16000)
!16010 = !DILocation(line: 81, column: 20, scope: !16011)
!16011 = distinct !DILexicalBlock(scope: !15991, file: !2498, line: 81, column: 6)
!16012 = !DILocation(line: 81, column: 6, scope: !16011)
!16013 = !DILocation(line: 81, column: 32, scope: !16011)
!16014 = !DILocation(line: 85, column: 2, scope: !15991)
!16015 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !128, file: !128, line: 341, type: !16016, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16018)
!16016 = !DISubroutineType(types: !16017)
!16017 = !{!15939, !15976, !15939}
!16018 = !{!16019, !16020}
!16019 = !DILocalVariable(name: "list", arg: 1, scope: !16015, file: !128, line: 341, type: !15976)
!16020 = !DILocalVariable(name: "node", arg: 2, scope: !16015, file: !128, line: 342, type: !15939)
!16021 = !DILocation(line: 0, scope: !16015)
!16022 = !DILocation(line: 344, column: 15, scope: !16015)
!16023 = !DILocation(line: 344, column: 9, scope: !16015)
!16024 = !DILocation(line: 344, column: 26, scope: !16015)
!16025 = !DILocation(line: 344, column: 2, scope: !16015)
!16026 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !128, file: !128, line: 325, type: !16016, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16027)
!16027 = !{!16028, !16029}
!16028 = !DILocalVariable(name: "list", arg: 1, scope: !16026, file: !128, line: 325, type: !15976)
!16029 = !DILocalVariable(name: "node", arg: 2, scope: !16026, file: !128, line: 326, type: !15939)
!16030 = !DILocation(line: 0, scope: !16026)
!16031 = !DILocation(line: 328, column: 24, scope: !16026)
!16032 = !DILocation(line: 328, column: 15, scope: !16026)
!16033 = !DILocation(line: 328, column: 9, scope: !16026)
!16034 = !DILocation(line: 328, column: 45, scope: !16026)
!16035 = !DILocation(line: 328, column: 2, scope: !16026)
!16036 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !128, file: !128, line: 294, type: !16037, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16039)
!16037 = !DISubroutineType(types: !16038)
!16038 = !{!15939, !15976}
!16039 = !{!16040}
!16040 = !DILocalVariable(name: "list", arg: 1, scope: !16036, file: !128, line: 294, type: !15976)
!16041 = !DILocation(line: 0, scope: !16036)
!16042 = !DILocation(line: 296, column: 9, scope: !16036)
!16043 = !DILocation(line: 296, column: 2, scope: !16036)
!16044 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !128, file: !128, line: 266, type: !16045, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16047)
!16045 = !DISubroutineType(types: !16046)
!16046 = !{!334, !15976}
!16047 = !{!16048}
!16048 = !DILocalVariable(name: "list", arg: 1, scope: !16044, file: !128, line: 266, type: !15976)
!16049 = !DILocation(line: 0, scope: !16044)
!16050 = !DILocation(line: 268, column: 15, scope: !16044)
!16051 = !DILocation(line: 268, column: 20, scope: !16044)
!16052 = !DILocation(line: 268, column: 2, scope: !16044)
!16053 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2498, file: !2498, line: 150, type: !16054, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16056)
!16054 = !DISubroutineType(types: !16055)
!16055 = !{!109, !2471}
!16056 = !{!16057, !16058, !16059, !16061}
!16057 = !DILocalVariable(name: "to", arg: 1, scope: !16053, file: !2498, line: 150, type: !2471)
!16058 = !DILocalVariable(name: "ret", scope: !16053, file: !2498, line: 152, type: !109)
!16059 = !DILocalVariable(name: "__i", scope: !16060, file: !2498, line: 154, type: !15794)
!16060 = distinct !DILexicalBlock(scope: !16053, file: !2498, line: 154, column: 2)
!16061 = !DILocalVariable(name: "__key", scope: !16060, file: !2498, line: 154, type: !15794)
!16062 = !DILocation(line: 0, scope: !16053)
!16063 = !DILocation(line: 0, scope: !16060)
!16064 = !DILocation(line: 0, scope: !15822, inlinedAt: !16065)
!16065 = distinct !DILocation(line: 154, column: 2, scope: !16060)
!16066 = !DILocation(line: 55, column: 2, scope: !15831, inlinedAt: !16067)
!16067 = distinct !DILocation(line: 145, column: 10, scope: !15822, inlinedAt: !16065)
!16068 = !DILocation(line: 0, scope: !15831, inlinedAt: !16067)
!16069 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !16065)
!16070 = !DILocation(line: 148, column: 2, scope: !15840, inlinedAt: !16065)
!16071 = !DILocation(line: 148, column: 2, scope: !15843, inlinedAt: !16065)
!16072 = !DILocation(line: 160, column: 2, scope: !15822, inlinedAt: !16065)
!16073 = !DILocation(line: 155, column: 7, scope: !16074)
!16074 = distinct !DILexicalBlock(scope: !16075, file: !2498, line: 155, column: 7)
!16075 = distinct !DILexicalBlock(scope: !16076, file: !2498, line: 154, column: 24)
!16076 = distinct !DILexicalBlock(scope: !16060, file: !2498, line: 154, column: 2)
!16077 = !DILocation(line: 155, column: 7, scope: !16075)
!16078 = !DILocation(line: 156, column: 4, scope: !16079)
!16079 = distinct !DILexicalBlock(scope: !16074, file: !2498, line: 155, column: 39)
!16080 = !DILocation(line: 158, column: 3, scope: !16079)
!16081 = !DILocation(line: 0, scope: !15895, inlinedAt: !16082)
!16082 = distinct !DILocation(line: 154, column: 2, scope: !16076)
!16083 = !DILocation(line: 194, column: 2, scope: !15903, inlinedAt: !16082)
!16084 = !DILocation(line: 194, column: 2, scope: !15904, inlinedAt: !16082)
!16085 = !DILocation(line: 194, column: 2, scope: !15907, inlinedAt: !16082)
!16086 = !DILocation(line: 0, scope: !15909, inlinedAt: !16087)
!16087 = distinct !DILocation(line: 215, column: 2, scope: !15895, inlinedAt: !16082)
!16088 = !DILocation(line: 95, column: 2, scope: !15909, inlinedAt: !16087)
!16089 = !DILocation(line: 161, column: 2, scope: !16053)
!16090 = distinct !DISubprogram(name: "remove_timeout", scope: !2498, file: !2498, line: 53, type: !2492, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16091)
!16091 = !{!16092}
!16092 = !DILocalVariable(name: "t", arg: 1, scope: !16090, file: !2498, line: 53, type: !2471)
!16093 = !DILocation(line: 0, scope: !16090)
!16094 = !DILocation(line: 55, column: 6, scope: !16095)
!16095 = distinct !DILexicalBlock(scope: !16090, file: !2498, line: 55, column: 6)
!16096 = !DILocation(line: 55, column: 14, scope: !16095)
!16097 = !DILocation(line: 55, column: 6, scope: !16090)
!16098 = !DILocation(line: 56, column: 25, scope: !16099)
!16099 = distinct !DILexicalBlock(scope: !16095, file: !2498, line: 55, column: 23)
!16100 = !DILocation(line: 56, column: 12, scope: !16099)
!16101 = !DILocation(line: 56, column: 19, scope: !16099)
!16102 = !DILocation(line: 57, column: 2, scope: !16099)
!16103 = !DILocation(line: 59, column: 23, scope: !16090)
!16104 = !DILocation(line: 59, column: 2, scope: !16090)
!16105 = !DILocation(line: 60, column: 1, scope: !16090)
!16106 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !128, file: !128, line: 496, type: !16107, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16109)
!16107 = !DISubroutineType(types: !16108)
!16108 = !{null, !15939}
!16109 = !{!16110, !16111, !16112}
!16110 = !DILocalVariable(name: "node", arg: 1, scope: !16106, file: !128, line: 496, type: !15939)
!16111 = !DILocalVariable(name: "prev", scope: !16106, file: !128, line: 498, type: !15951)
!16112 = !DILocalVariable(name: "next", scope: !16106, file: !128, line: 499, type: !15951)
!16113 = !DILocation(line: 0, scope: !16106)
!16114 = !DILocation(line: 498, column: 34, scope: !16106)
!16115 = !DILocation(line: 499, column: 34, scope: !16106)
!16116 = !DILocation(line: 501, column: 8, scope: !16106)
!16117 = !DILocation(line: 501, column: 13, scope: !16106)
!16118 = !DILocation(line: 502, column: 8, scope: !16106)
!16119 = !DILocation(line: 502, column: 13, scope: !16106)
!16120 = !DILocation(line: 503, column: 2, scope: !16106)
!16121 = !DILocation(line: 504, column: 1, scope: !16106)
!16122 = distinct !DISubprogram(name: "sys_dnode_init", scope: !128, file: !128, line: 211, type: !16107, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16123)
!16123 = !{!16124}
!16124 = !DILocalVariable(name: "node", arg: 1, scope: !16122, file: !128, line: 211, type: !15939)
!16125 = !DILocation(line: 0, scope: !16122)
!16126 = !DILocation(line: 213, column: 8, scope: !16122)
!16127 = !DILocation(line: 213, column: 13, scope: !16122)
!16128 = !DILocation(line: 214, column: 8, scope: !16122)
!16129 = !DILocation(line: 214, column: 13, scope: !16122)
!16130 = !DILocation(line: 215, column: 1, scope: !16122)
!16131 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2498, file: !2498, line: 183, type: !16132, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16136)
!16132 = !DISubroutineType(types: !16133)
!16133 = !{!104, !16134}
!16134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16135, size: 32)
!16135 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2472)
!16136 = !{!16137, !16138, !16139, !16141}
!16137 = !DILocalVariable(name: "timeout", arg: 1, scope: !16131, file: !2498, line: 183, type: !16134)
!16138 = !DILocalVariable(name: "ticks", scope: !16131, file: !2498, line: 185, type: !104)
!16139 = !DILocalVariable(name: "__i", scope: !16140, file: !2498, line: 187, type: !15794)
!16140 = distinct !DILexicalBlock(scope: !16131, file: !2498, line: 187, column: 2)
!16141 = !DILocalVariable(name: "__key", scope: !16140, file: !2498, line: 187, type: !15794)
!16142 = !DILocation(line: 0, scope: !16131)
!16143 = !DILocation(line: 0, scope: !16140)
!16144 = !DILocation(line: 0, scope: !15822, inlinedAt: !16145)
!16145 = distinct !DILocation(line: 187, column: 2, scope: !16140)
!16146 = !DILocation(line: 55, column: 2, scope: !15831, inlinedAt: !16147)
!16147 = distinct !DILocation(line: 145, column: 10, scope: !15822, inlinedAt: !16145)
!16148 = !DILocation(line: 0, scope: !15831, inlinedAt: !16147)
!16149 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !16145)
!16150 = !DILocation(line: 148, column: 2, scope: !15840, inlinedAt: !16145)
!16151 = !DILocation(line: 148, column: 2, scope: !15843, inlinedAt: !16145)
!16152 = !DILocation(line: 160, column: 2, scope: !15822, inlinedAt: !16145)
!16153 = !DILocation(line: 188, column: 11, scope: !16154)
!16154 = distinct !DILexicalBlock(scope: !16155, file: !2498, line: 187, column: 24)
!16155 = distinct !DILexicalBlock(scope: !16140, file: !2498, line: 187, column: 2)
!16156 = !DILocation(line: 0, scope: !15895, inlinedAt: !16157)
!16157 = distinct !DILocation(line: 187, column: 2, scope: !16155)
!16158 = !DILocation(line: 194, column: 2, scope: !15903, inlinedAt: !16157)
!16159 = !DILocation(line: 194, column: 2, scope: !15904, inlinedAt: !16157)
!16160 = !DILocation(line: 194, column: 2, scope: !15907, inlinedAt: !16157)
!16161 = !DILocation(line: 0, scope: !15909, inlinedAt: !16162)
!16162 = distinct !DILocation(line: 215, column: 2, scope: !15895, inlinedAt: !16157)
!16163 = !DILocation(line: 95, column: 2, scope: !15909, inlinedAt: !16162)
!16164 = !DILocation(line: 191, column: 2, scope: !16131)
!16165 = distinct !DISubprogram(name: "timeout_rem", scope: !2498, file: !2498, line: 165, type: !16132, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16166)
!16166 = !{!16167, !16168, !16169}
!16167 = !DILocalVariable(name: "timeout", arg: 1, scope: !16165, file: !2498, line: 165, type: !16134)
!16168 = !DILocalVariable(name: "ticks", scope: !16165, file: !2498, line: 167, type: !104)
!16169 = !DILocalVariable(name: "t", scope: !16170, file: !2498, line: 173, type: !2471)
!16170 = distinct !DILexicalBlock(scope: !16165, file: !2498, line: 173, column: 2)
!16171 = !DILocation(line: 0, scope: !16165)
!16172 = !DILocation(line: 169, column: 6, scope: !16173)
!16173 = distinct !DILexicalBlock(scope: !16165, file: !2498, line: 169, column: 6)
!16174 = !DILocation(line: 169, column: 6, scope: !16165)
!16175 = !DILocation(line: 173, column: 28, scope: !16170)
!16176 = !DILocation(line: 0, scope: !16170)
!16177 = !DILocation(line: 173, column: 39, scope: !16178)
!16178 = distinct !DILexicalBlock(scope: !16170, file: !2498, line: 173, column: 2)
!16179 = !DILocation(line: 173, column: 2, scope: !16170)
!16180 = !DILocation(line: 174, column: 15, scope: !16181)
!16181 = distinct !DILexicalBlock(scope: !16178, file: !2498, line: 173, column: 61)
!16182 = !DILocation(line: 174, column: 9, scope: !16181)
!16183 = !DILocation(line: 175, column: 15, scope: !16184)
!16184 = distinct !DILexicalBlock(scope: !16181, file: !2498, line: 175, column: 7)
!16185 = !DILocation(line: 175, column: 7, scope: !16181)
!16186 = !DILocation(line: 173, column: 52, scope: !16178)
!16187 = distinct !{!16187, !16179, !16188}
!16188 = !DILocation(line: 178, column: 2, scope: !16170)
!16189 = !DILocation(line: 180, column: 17, scope: !16165)
!16190 = !DILocation(line: 180, column: 15, scope: !16165)
!16191 = !DILocation(line: 180, column: 2, scope: !16165)
!16192 = !DILocation(line: 181, column: 1, scope: !16165)
!16193 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12778, file: !12778, line: 35, type: !16194, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16196)
!16194 = !DISubroutineType(types: !16195)
!16195 = !{!334, !16134}
!16196 = !{!16197}
!16197 = !DILocalVariable(name: "to", arg: 1, scope: !16193, file: !12778, line: 35, type: !16134)
!16198 = !DILocation(line: 0, scope: !16193)
!16199 = !DILocation(line: 37, column: 35, scope: !16193)
!16200 = !DILocation(line: 37, column: 10, scope: !16193)
!16201 = !DILocation(line: 37, column: 9, scope: !16193)
!16202 = !DILocation(line: 37, column: 2, scope: !16193)
!16203 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2498, file: !2498, line: 194, type: !16132, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16204)
!16204 = !{!16205, !16206, !16207, !16209}
!16205 = !DILocalVariable(name: "timeout", arg: 1, scope: !16203, file: !2498, line: 194, type: !16134)
!16206 = !DILocalVariable(name: "ticks", scope: !16203, file: !2498, line: 196, type: !104)
!16207 = !DILocalVariable(name: "__i", scope: !16208, file: !2498, line: 198, type: !15794)
!16208 = distinct !DILexicalBlock(scope: !16203, file: !2498, line: 198, column: 2)
!16209 = !DILocalVariable(name: "__key", scope: !16208, file: !2498, line: 198, type: !15794)
!16210 = !DILocation(line: 0, scope: !16203)
!16211 = !DILocation(line: 0, scope: !16208)
!16212 = !DILocation(line: 0, scope: !15822, inlinedAt: !16213)
!16213 = distinct !DILocation(line: 198, column: 2, scope: !16208)
!16214 = !DILocation(line: 55, column: 2, scope: !15831, inlinedAt: !16215)
!16215 = distinct !DILocation(line: 145, column: 10, scope: !15822, inlinedAt: !16213)
!16216 = !DILocation(line: 0, scope: !15831, inlinedAt: !16215)
!16217 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !16213)
!16218 = !DILocation(line: 148, column: 2, scope: !15840, inlinedAt: !16213)
!16219 = !DILocation(line: 148, column: 2, scope: !15843, inlinedAt: !16213)
!16220 = !DILocation(line: 160, column: 2, scope: !15822, inlinedAt: !16213)
!16221 = !DILocation(line: 199, column: 11, scope: !16222)
!16222 = distinct !DILexicalBlock(scope: !16223, file: !2498, line: 198, column: 24)
!16223 = distinct !DILexicalBlock(scope: !16208, file: !2498, line: 198, column: 2)
!16224 = !DILocation(line: 199, column: 23, scope: !16222)
!16225 = !DILocation(line: 0, scope: !15895, inlinedAt: !16226)
!16226 = distinct !DILocation(line: 198, column: 2, scope: !16223)
!16227 = !DILocation(line: 194, column: 2, scope: !15903, inlinedAt: !16226)
!16228 = !DILocation(line: 194, column: 2, scope: !15904, inlinedAt: !16226)
!16229 = !DILocation(line: 194, column: 2, scope: !15907, inlinedAt: !16226)
!16230 = !DILocation(line: 0, scope: !15909, inlinedAt: !16231)
!16231 = distinct !DILocation(line: 215, column: 2, scope: !15895, inlinedAt: !16226)
!16232 = !DILocation(line: 95, column: 2, scope: !15909, inlinedAt: !16231)
!16233 = !DILocation(line: 199, column: 21, scope: !16222)
!16234 = !DILocation(line: 202, column: 2, scope: !16203)
!16235 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2498, file: !2498, line: 205, type: !15928, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16236)
!16236 = !{!16237, !16238, !16240}
!16237 = !DILocalVariable(name: "ret", scope: !16235, file: !2498, line: 207, type: !756)
!16238 = !DILocalVariable(name: "__i", scope: !16239, file: !2498, line: 209, type: !15794)
!16239 = distinct !DILexicalBlock(scope: !16235, file: !2498, line: 209, column: 2)
!16240 = !DILocalVariable(name: "__key", scope: !16239, file: !2498, line: 209, type: !15794)
!16241 = !DILocation(line: 0, scope: !16235)
!16242 = !DILocation(line: 0, scope: !16239)
!16243 = !DILocation(line: 0, scope: !15822, inlinedAt: !16244)
!16244 = distinct !DILocation(line: 209, column: 2, scope: !16239)
!16245 = !DILocation(line: 55, column: 2, scope: !15831, inlinedAt: !16246)
!16246 = distinct !DILocation(line: 145, column: 10, scope: !15822, inlinedAt: !16244)
!16247 = !DILocation(line: 0, scope: !15831, inlinedAt: !16246)
!16248 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !16244)
!16249 = !DILocation(line: 148, column: 2, scope: !15840, inlinedAt: !16244)
!16250 = !DILocation(line: 148, column: 2, scope: !15843, inlinedAt: !16244)
!16251 = !DILocation(line: 160, column: 2, scope: !15822, inlinedAt: !16244)
!16252 = !DILocation(line: 210, column: 9, scope: !16253)
!16253 = distinct !DILexicalBlock(scope: !16254, file: !2498, line: 209, column: 24)
!16254 = distinct !DILexicalBlock(scope: !16239, file: !2498, line: 209, column: 2)
!16255 = !DILocation(line: 0, scope: !15895, inlinedAt: !16256)
!16256 = distinct !DILocation(line: 209, column: 2, scope: !16254)
!16257 = !DILocation(line: 194, column: 2, scope: !15903, inlinedAt: !16256)
!16258 = !DILocation(line: 194, column: 2, scope: !15904, inlinedAt: !16256)
!16259 = !DILocation(line: 194, column: 2, scope: !15907, inlinedAt: !16256)
!16260 = !DILocation(line: 0, scope: !15909, inlinedAt: !16261)
!16261 = distinct !DILocation(line: 215, column: 2, scope: !15895, inlinedAt: !16256)
!16262 = !DILocation(line: 95, column: 2, scope: !15909, inlinedAt: !16261)
!16263 = !DILocation(line: 212, column: 2, scope: !16235)
!16264 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2498, file: !2498, line: 215, type: !10100, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16265)
!16265 = !{!16266, !16267, !16268, !16270, !16271, !16274, !16275}
!16266 = !DILocalVariable(name: "ticks", arg: 1, scope: !16264, file: !2498, line: 215, type: !756)
!16267 = !DILocalVariable(name: "is_idle", arg: 2, scope: !16264, file: !2498, line: 215, type: !334)
!16268 = !DILocalVariable(name: "__i", scope: !16269, file: !2498, line: 217, type: !15794)
!16269 = distinct !DILexicalBlock(scope: !16264, file: !2498, line: 217, column: 2)
!16270 = !DILocalVariable(name: "__key", scope: !16269, file: !2498, line: 217, type: !15794)
!16271 = !DILocalVariable(name: "next_to", scope: !16272, file: !2498, line: 218, type: !109)
!16272 = distinct !DILexicalBlock(scope: !16273, file: !2498, line: 217, column: 24)
!16273 = distinct !DILexicalBlock(scope: !16269, file: !2498, line: 217, column: 2)
!16274 = !DILocalVariable(name: "sooner", scope: !16272, file: !2498, line: 219, type: !334)
!16275 = !DILocalVariable(name: "imminent", scope: !16272, file: !2498, line: 221, type: !334)
!16276 = !DILocation(line: 0, scope: !16264)
!16277 = !DILocation(line: 0, scope: !16269)
!16278 = !DILocation(line: 0, scope: !15822, inlinedAt: !16279)
!16279 = distinct !DILocation(line: 217, column: 2, scope: !16269)
!16280 = !DILocation(line: 55, column: 2, scope: !15831, inlinedAt: !16281)
!16281 = distinct !DILocation(line: 145, column: 10, scope: !15822, inlinedAt: !16279)
!16282 = !DILocation(line: 0, scope: !15831, inlinedAt: !16281)
!16283 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !16279)
!16284 = !DILocation(line: 148, column: 2, scope: !15840, inlinedAt: !16279)
!16285 = !DILocation(line: 148, column: 2, scope: !15843, inlinedAt: !16279)
!16286 = !DILocation(line: 160, column: 2, scope: !15822, inlinedAt: !16279)
!16287 = !DILocation(line: 218, column: 17, scope: !16272)
!16288 = !DILocation(line: 0, scope: !16272)
!16289 = !DILocation(line: 221, column: 27, scope: !16272)
!16290 = !DILocation(line: 233, column: 17, scope: !16291)
!16291 = distinct !DILexicalBlock(scope: !16272, file: !2498, line: 233, column: 7)
!16292 = !DILocation(line: 234, column: 26, scope: !16293)
!16293 = distinct !DILexicalBlock(scope: !16291, file: !2498, line: 233, column: 56)
!16294 = !DILocation(line: 234, column: 4, scope: !16293)
!16295 = !DILocation(line: 235, column: 3, scope: !16293)
!16296 = !DILocation(line: 0, scope: !15895, inlinedAt: !16297)
!16297 = distinct !DILocation(line: 217, column: 2, scope: !16273)
!16298 = !DILocation(line: 194, column: 2, scope: !15903, inlinedAt: !16297)
!16299 = !DILocation(line: 194, column: 2, scope: !15904, inlinedAt: !16297)
!16300 = !DILocation(line: 194, column: 2, scope: !15907, inlinedAt: !16297)
!16301 = !DILocation(line: 0, scope: !15909, inlinedAt: !16302)
!16302 = distinct !DILocation(line: 215, column: 2, scope: !15895, inlinedAt: !16297)
!16303 = !DILocation(line: 95, column: 2, scope: !15909, inlinedAt: !16302)
!16304 = !DILocation(line: 237, column: 1, scope: !16264)
!16305 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2498, file: !2498, line: 239, type: !16306, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16308)
!16306 = !DISubroutineType(types: !16307)
!16307 = !{null, !756}
!16308 = !{!16309, !16310, !16311, !16313}
!16309 = !DILocalVariable(name: "ticks", arg: 1, scope: !16305, file: !2498, line: 239, type: !756)
!16310 = !DILocalVariable(name: "key", scope: !16305, file: !2498, line: 245, type: !15794)
!16311 = !DILocalVariable(name: "t", scope: !16312, file: !2498, line: 262, type: !2471)
!16312 = distinct !DILexicalBlock(scope: !16305, file: !2498, line: 261, column: 67)
!16313 = !DILocalVariable(name: "dt", scope: !16312, file: !2498, line: 263, type: !109)
!16314 = !DILocation(line: 0, scope: !16305)
!16315 = !DILocation(line: 242, column: 2, scope: !16305)
!16316 = !DILocation(line: 0, scope: !15822, inlinedAt: !16317)
!16317 = distinct !DILocation(line: 245, column: 25, scope: !16305)
!16318 = !DILocation(line: 55, column: 2, scope: !15831, inlinedAt: !16319)
!16319 = distinct !DILocation(line: 145, column: 10, scope: !15822, inlinedAt: !16317)
!16320 = !DILocation(line: 0, scope: !15831, inlinedAt: !16319)
!16321 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !16317)
!16322 = !DILocation(line: 148, column: 2, scope: !15840, inlinedAt: !16317)
!16323 = !DILocation(line: 148, column: 2, scope: !15843, inlinedAt: !16317)
!16324 = !DILocation(line: 160, column: 2, scope: !15822, inlinedAt: !16317)
!16325 = !DILocation(line: 261, column: 9, scope: !16305)
!16326 = !DILocation(line: 261, column: 17, scope: !16305)
!16327 = !DILocation(line: 261, column: 25, scope: !16305)
!16328 = !DILocation(line: 261, column: 37, scope: !16305)
!16329 = !DILocation(line: 261, column: 47, scope: !16305)
!16330 = !DILocation(line: 261, column: 44, scope: !16305)
!16331 = !DILocation(line: 261, column: 2, scope: !16305)
!16332 = !DILocation(line: 0, scope: !16312)
!16333 = !DILocation(line: 263, column: 12, scope: !16312)
!16334 = !DILocation(line: 265, column: 16, scope: !16312)
!16335 = !DILocation(line: 265, column: 13, scope: !16312)
!16336 = !DILocation(line: 266, column: 13, scope: !16312)
!16337 = !DILocation(line: 267, column: 3, scope: !16312)
!16338 = !DILocation(line: 0, scope: !15895, inlinedAt: !16339)
!16339 = distinct !DILocation(line: 269, column: 3, scope: !16312)
!16340 = !DILocation(line: 194, column: 2, scope: !15903, inlinedAt: !16339)
!16341 = !DILocation(line: 194, column: 2, scope: !15904, inlinedAt: !16339)
!16342 = !DILocation(line: 194, column: 2, scope: !15907, inlinedAt: !16339)
!16343 = !DILocation(line: 0, scope: !15909, inlinedAt: !16344)
!16344 = distinct !DILocation(line: 215, column: 2, scope: !15895, inlinedAt: !16339)
!16345 = !DILocation(line: 95, column: 2, scope: !15909, inlinedAt: !16344)
!16346 = !DILocation(line: 270, column: 6, scope: !16312)
!16347 = !DILocation(line: 270, column: 3, scope: !16312)
!16348 = !DILocation(line: 0, scope: !15822, inlinedAt: !16349)
!16349 = distinct !DILocation(line: 271, column: 9, scope: !16312)
!16350 = !DILocation(line: 55, column: 2, scope: !15831, inlinedAt: !16351)
!16351 = distinct !DILocation(line: 145, column: 10, scope: !15822, inlinedAt: !16349)
!16352 = !DILocation(line: 0, scope: !15831, inlinedAt: !16351)
!16353 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !16349)
!16354 = !DILocation(line: 148, column: 2, scope: !15840, inlinedAt: !16349)
!16355 = !DILocation(line: 148, column: 2, scope: !15843, inlinedAt: !16349)
!16356 = !DILocation(line: 160, column: 2, scope: !15822, inlinedAt: !16349)
!16357 = !DILocation(line: 272, column: 22, scope: !16312)
!16358 = distinct !{!16358, !16331, !16359}
!16359 = !DILocation(line: 273, column: 2, scope: !16305)
!16360 = !DILocation(line: 276, column: 19, scope: !16361)
!16361 = distinct !DILexicalBlock(scope: !16362, file: !2498, line: 275, column: 23)
!16362 = distinct !DILexicalBlock(scope: !16305, file: !2498, line: 275, column: 6)
!16363 = !DILocation(line: 277, column: 2, scope: !16361)
!16364 = !DILocation(line: 279, column: 15, scope: !16305)
!16365 = !DILocation(line: 279, column: 12, scope: !16305)
!16366 = !DILocation(line: 280, column: 21, scope: !16305)
!16367 = !DILocation(line: 282, column: 24, scope: !16305)
!16368 = !DILocation(line: 282, column: 2, scope: !16305)
!16369 = !DILocation(line: 0, scope: !15895, inlinedAt: !16370)
!16370 = distinct !DILocation(line: 284, column: 2, scope: !16305)
!16371 = !DILocation(line: 194, column: 2, scope: !15903, inlinedAt: !16370)
!16372 = !DILocation(line: 194, column: 2, scope: !15904, inlinedAt: !16370)
!16373 = !DILocation(line: 194, column: 2, scope: !15907, inlinedAt: !16370)
!16374 = !DILocation(line: 0, scope: !15909, inlinedAt: !16375)
!16375 = distinct !DILocation(line: 215, column: 2, scope: !15895, inlinedAt: !16370)
!16376 = !DILocation(line: 95, column: 2, scope: !15909, inlinedAt: !16375)
!16377 = !DILocation(line: 285, column: 1, scope: !16305)
!16378 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2498, file: !2498, line: 287, type: !3391, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16379)
!16379 = !{!16380, !16381, !16383}
!16380 = !DILocalVariable(name: "t", scope: !16378, file: !2498, line: 289, type: !111)
!16381 = !DILocalVariable(name: "__i", scope: !16382, file: !2498, line: 291, type: !15794)
!16382 = distinct !DILexicalBlock(scope: !16378, file: !2498, line: 291, column: 2)
!16383 = !DILocalVariable(name: "__key", scope: !16382, file: !2498, line: 291, type: !15794)
!16384 = !DILocation(line: 0, scope: !16378)
!16385 = !DILocation(line: 0, scope: !16382)
!16386 = !DILocation(line: 0, scope: !15822, inlinedAt: !16387)
!16387 = distinct !DILocation(line: 291, column: 2, scope: !16382)
!16388 = !DILocation(line: 55, column: 2, scope: !15831, inlinedAt: !16389)
!16389 = distinct !DILocation(line: 145, column: 10, scope: !15822, inlinedAt: !16387)
!16390 = !DILocation(line: 0, scope: !15831, inlinedAt: !16389)
!16391 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !16387)
!16392 = !DILocation(line: 148, column: 2, scope: !15840, inlinedAt: !16387)
!16393 = !DILocation(line: 148, column: 2, scope: !15843, inlinedAt: !16387)
!16394 = !DILocation(line: 160, column: 2, scope: !15822, inlinedAt: !16387)
!16395 = !DILocation(line: 292, column: 7, scope: !16396)
!16396 = distinct !DILexicalBlock(scope: !16397, file: !2498, line: 291, column: 24)
!16397 = distinct !DILexicalBlock(scope: !16382, file: !2498, line: 291, column: 2)
!16398 = !DILocation(line: 292, column: 19, scope: !16396)
!16399 = !DILocation(line: 0, scope: !15895, inlinedAt: !16400)
!16400 = distinct !DILocation(line: 291, column: 2, scope: !16397)
!16401 = !DILocation(line: 194, column: 2, scope: !15903, inlinedAt: !16400)
!16402 = !DILocation(line: 194, column: 2, scope: !15904, inlinedAt: !16400)
!16403 = !DILocation(line: 194, column: 2, scope: !15907, inlinedAt: !16400)
!16404 = !DILocation(line: 0, scope: !15909, inlinedAt: !16405)
!16405 = distinct !DILocation(line: 215, column: 2, scope: !15895, inlinedAt: !16400)
!16406 = !DILocation(line: 95, column: 2, scope: !15909, inlinedAt: !16405)
!16407 = !DILocation(line: 292, column: 17, scope: !16396)
!16408 = !DILocation(line: 294, column: 2, scope: !16378)
!16409 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2498, file: !2498, line: 297, type: !3385, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !2018)
!16410 = !DILocation(line: 300, column: 19, scope: !16409)
!16411 = !DILocation(line: 300, column: 9, scope: !16409)
!16412 = !DILocation(line: 300, column: 2, scope: !16409)
!16413 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2498, file: !2498, line: 306, type: !3391, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !2018)
!16414 = !DILocation(line: 308, column: 9, scope: !16413)
!16415 = !DILocation(line: 308, column: 2, scope: !16413)
!16416 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2498, file: !2498, line: 319, type: !6274, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16417)
!16417 = !{!16418, !16419, !16420, !16421}
!16418 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !16416, file: !2498, line: 319, type: !110)
!16419 = !DILocalVariable(name: "start_cycles", scope: !16416, file: !2498, line: 328, type: !110)
!16420 = !DILocalVariable(name: "cycles_to_wait", scope: !16416, file: !2498, line: 331, type: !110)
!16421 = !DILocalVariable(name: "current_cycles", scope: !16422, file: !2498, line: 338, type: !110)
!16422 = distinct !DILexicalBlock(scope: !16423, file: !2498, line: 337, column: 11)
!16423 = distinct !DILexicalBlock(scope: !16424, file: !2498, line: 337, column: 2)
!16424 = distinct !DILexicalBlock(scope: !16416, file: !2498, line: 337, column: 2)
!16425 = !DILocation(line: 0, scope: !16416)
!16426 = !DILocation(line: 322, column: 19, scope: !16427)
!16427 = distinct !DILexicalBlock(scope: !16416, file: !2498, line: 322, column: 6)
!16428 = !DILocation(line: 322, column: 6, scope: !16416)
!16429 = !DILocation(line: 328, column: 26, scope: !16416)
!16430 = !DILocation(line: 333, column: 43, scope: !16416)
!16431 = !DILocation(line: 337, column: 2, scope: !16416)
!16432 = !DILocation(line: 338, column: 29, scope: !16422)
!16433 = !DILocation(line: 0, scope: !16422)
!16434 = !DILocation(line: 341, column: 23, scope: !16435)
!16435 = distinct !DILexicalBlock(scope: !16422, file: !2498, line: 341, column: 7)
!16436 = !DILocation(line: 341, column: 39, scope: !16435)
!16437 = !DILocation(line: 349, column: 1, scope: !16416)
!16438 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !119, file: !119, line: 1675, type: !3385, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !2018)
!16439 = !DILocation(line: 1677, column: 9, scope: !16438)
!16440 = !DILocation(line: 1677, column: 2, scope: !16438)
!16441 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !16442, file: !16442, line: 24, type: !3385, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !2018)
!16442 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16443 = !DILocation(line: 26, column: 9, scope: !16441)
!16444 = !DILocation(line: 26, column: 2, scope: !16441)
!16445 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2498, file: !2498, line: 364, type: !16446, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16448)
!16446 = !DISubroutineType(types: !16447)
!16447 = !{!111, !15784}
!16448 = !{!16449, !16450}
!16449 = !DILocalVariable(name: "timeout", arg: 1, scope: !16445, file: !2498, line: 364, type: !15784)
!16450 = !DILocalVariable(name: "dt", scope: !16445, file: !2498, line: 366, type: !104)
!16451 = !DILocation(line: 0, scope: !16445)
!16452 = !DILocation(line: 368, column: 6, scope: !16445)
!16453 = !DILocation(line: 371, column: 10, scope: !16454)
!16454 = distinct !DILexicalBlock(scope: !16455, file: !2498, line: 370, column: 47)
!16455 = distinct !DILexicalBlock(scope: !16456, file: !2498, line: 370, column: 13)
!16456 = distinct !DILexicalBlock(scope: !16445, file: !2498, line: 368, column: 6)
!16457 = !DILocation(line: 371, column: 3, scope: !16454)
!16458 = !DILocation(line: 376, column: 58, scope: !16459)
!16459 = distinct !DILexicalBlock(scope: !16460, file: !2498, line: 376, column: 7)
!16460 = distinct !DILexicalBlock(scope: !16455, file: !2498, line: 372, column: 9)
!16461 = !DILocation(line: 376, column: 7, scope: !16460)
!16462 = !DILocation(line: 376, column: 43, scope: !16459)
!16463 = !DILocation(line: 377, column: 4, scope: !16464)
!16464 = distinct !DILexicalBlock(scope: !16459, file: !2498, line: 376, column: 64)
!16465 = !DILocation(line: 379, column: 10, scope: !16460)
!16466 = !DILocation(line: 379, column: 33, scope: !16460)
!16467 = !DILocation(line: 379, column: 31, scope: !16460)
!16468 = !DILocation(line: 379, column: 3, scope: !16460)
!16469 = !DILocation(line: 0, scope: !16456)
!16470 = !DILocation(line: 381, column: 1, scope: !16445)
!16471 = distinct !DISubprogram(name: "boot_banner", scope: !16472, file: !16472, line: 26, type: !3103, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3089, retainedNodes: !2018)
!16472 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16473 = !DILocation(line: 34, column: 2, scope: !16471)
!16474 = !DILocation(line: 36, column: 1, scope: !16471)
