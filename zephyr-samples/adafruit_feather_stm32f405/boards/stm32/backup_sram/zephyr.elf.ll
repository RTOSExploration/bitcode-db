; ModuleID = 'build/adafruit_feather_stm32f405/boards/stm32/backup_sram/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.stm32_backup_sram_config = type { %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.z_arm_mpu_partition = type { i32, i32, %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %union.anon.1 }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %union.anon.1, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %union.anon.1, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type {}
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %union.anon.1, %union.anon.1 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %union.anon.1*, %union.anon.1* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [82 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [82 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230000 to i8*), void (i8*)* inttoptr (i32 134228135 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230000 to i8*), void (i8*)* inttoptr (i32 134228115 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230000 to i8*), void (i8*)* inttoptr (i32 134228105 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230000 to i8*), void (i8*)* inttoptr (i32 134228205 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230000 to i8*), void (i8*)* inttoptr (i32 134228195 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230000 to i8*), void (i8*)* inttoptr (i32 134228185 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230000 to i8*), void (i8*)* inttoptr (i32 134228175 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230000 to i8*), void (i8*)* inttoptr (i32 134228165 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230000 to i8*), void (i8*)* inttoptr (i32 134228155 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230000 to i8*), void (i8*)* inttoptr (i32 134228145 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230000 to i8*), void (i8*)* inttoptr (i32 134228125 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [34 x i8] c"Current value in backup SRAM: %d\0A\00", align 1
@backup_value = dso_local local_unnamed_addr global i32 0, section ".stm32_backup_sram", align 4, !dbg !25
@.str.1 = private unnamed_addr constant [35 x i8] c"Next reported value should be: %d\0A\00", align 1
@.str.2 = private unnamed_addr constant [49 x i8] c"Keep VBAT power source and reset the board now!\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !107
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [41 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_38 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_38 to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_37 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_74 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_21 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_74 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !116
@__devicehdl_dts_ord_38 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !172
@.str.6 = private unnamed_addr constant [16 x i8] c"memory@40024000\00", align 1
@config = internal constant %struct.stm32_backup_sram_config { %struct._thread_arch { i32 48, i32 262144 } }, align 4, !dbg !211
@__devstate_dts_ord_38 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !307
@__device_dts_ord_38 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.stm32_backup_sram_config* @config to i8*), i8* null, %struct.device_state* @__devstate_dts_ord_38, i8* null, i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_38, i32 0, i32 0) }, section ".z_device_POST_KERNEL90_", align 4, !dbg !295
@__init___device_dts_ord_38 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_backup_sram_init, %struct.device* @__device_dts_ord_38 }, section ".z_init_POST_KERNEL90_", align 4, !dbg !297
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !318
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %union.anon.1 { i32 101384192 } }], align 4, !dbg !347
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !355
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !501
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !537
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i32 0, i32 0), %union.anon.1 { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.31, i32 0, i32 0), %union.anon.1 { i32 285933600 } }], align 4, !dbg !547
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !552
@.str.30 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.31 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !572
@__devicehdl_dts_ord_37 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !183
@.str.32 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_37 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !724
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !707
@__device_dts_ord_37 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.32, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_37, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_37, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !680
@__init___device_dts_ord_37 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_37 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !696
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !726
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !740
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !742
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !744
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !746
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !748
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !750
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !752
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !754
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !756
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !758
@__devicehdl_dts_ord_9 = dso_local constant [14 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 32767], section ".__device_handles_pass2", align 2, !dbg !177
@.str.36 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !763
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !848
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !837
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !887
@__devicehdl_dts_ord_74 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !207
@.str.47 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !953
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1236
@__devstate_dts_ord_74 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1202
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1188
@__init___device_dts_ord_74 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_74 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1130
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !205
@.str.1.49 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1238
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1206
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1204
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1144
@__devicehdl_dts_ord_21 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !203
@.str.2.50 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1251
@__devstate_dts_ord_21 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1210
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1208
@__init___device_dts_ord_21 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_21 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1150
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !201
@.str.3 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1253
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1214
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1212
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1156
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !199
@.str.4 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1255
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1218
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1216
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1162
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !197
@.str.5.51 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1257
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1222
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1220
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1168
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !195
@.str.6.52 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1259
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1226
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1224
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1174
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !193
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1261
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1230
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1228
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1180
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !188
@.str.8 = private unnamed_addr constant [14 x i8] c"gpio@40022000\00", align 1
@gpio_stm32_cfg_i = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073881088 to i32*), i32 8, %struct._thread_arch { i32 48, i32 256 } }, align 4, !dbg !1263
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1234
@gpio_stm32_data_i = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1232
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1186
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !209
@.str.58 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1265
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1460
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1421
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1462
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.58, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1412
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1414
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1423
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1431
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1454
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 839, i32 512 }, %struct._thread_arch { i32 871, i32 0 }], align 4, !dbg !1457
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([14 x i16], [14 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !821
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1484
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1595
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1597
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1593
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1564
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_74, %struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_21, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null], align 4, !dbg !1599
@__device_dts_ord_74 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.47, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_74, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_74, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1128
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.49, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1142
@__device_dts_ord_21 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.50, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_21, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_21, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1148
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1154
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1160
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.51, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1166
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.52, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1172
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1178
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_i to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_i to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1184
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1689
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1729
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1732
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1739
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@__ccm_bss_start = external dso_local global [0 x i8], align 1
@__ccm_bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1746
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !1956
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !1965
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !1972
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !1977
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.108 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.111, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.112, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.113, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.114, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.115, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.116, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.110, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.117, i32 0, i32 0)], align 4, !dbg !2003
@.str.111 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.112 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.113 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.114 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.115 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.116 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.110 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.117 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2115
@.str.8.109 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2128
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2236
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2239
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2241
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1970
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !1967
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@__ccm_data_start = external dso_local global [0 x i8], align 1
@__ccm_data_rom_start = external dso_local global [0 x i8], align 1
@__ccm_data_end = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2243
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2279
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1834
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2277
@.str.170 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !2858 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !2862, !srcloc !2863
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !2864, !srcloc !2865
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !2866, !srcloc !2867
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !2868, !srcloc !2869
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2870, !srcloc !2871
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !2872, !srcloc !2873
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !2874, !srcloc !2875
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !2876, !srcloc !2877
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !2878, !srcloc !2879
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !2880, !srcloc !2881
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !2882, !srcloc !2883
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !2884, !srcloc !2885
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !2886, !srcloc !2887
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !2888, !srcloc !2889
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !2890, !srcloc !2891
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !2892, !srcloc !2893
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !2894, !srcloc !2895
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #23, !dbg !2896, !srcloc !2897
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !2898, !srcloc !2899
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !2900, !srcloc !2901
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #23, !dbg !2902, !srcloc !2903
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #23, !dbg !2904, !srcloc !2905
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !2906, !srcloc !2907
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2908, !srcloc !2909
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !2910, !srcloc !2911
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !2912, !srcloc !2913
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !2914, !srcloc !2915
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !2916, !srcloc !2919
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !2920, !srcloc !2921
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !2922, !srcloc !2923
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !2924, !srcloc !2925
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !2926, !srcloc !2927
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !2928, !srcloc !2929
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !2930, !srcloc !2931
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !2932, !srcloc !2933
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !2934, !srcloc !2935
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !2936, !srcloc !2937
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !2938, !srcloc !2939
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !2940, !srcloc !2941
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !2942, !srcloc !2943
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !2944, !srcloc !2945
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !2946, !srcloc !2947
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !2948, !srcloc !2949
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !2950, !srcloc !2951
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !2952, !srcloc !2953
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !2954, !srcloc !2955
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !2956, !srcloc !2957
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !2958, !srcloc !2959
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !2960, !srcloc !2961
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !2962, !srcloc !2963
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !2964, !srcloc !2965
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #23, !dbg !2966, !srcloc !2967
  ret void, !dbg !2968
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !2971 {
  %1 = load i32, i32* @backup_value, align 4, !dbg !2972
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i32 0, i32 0), i32 noundef %1) #24, !dbg !2973
  %2 = load i32, i32* @backup_value, align 4, !dbg !2974
  %3 = add i32 %2, 1, !dbg !2974
  store i32 %3, i32* @backup_value, align 4, !dbg !2974
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i32 0, i32 0), i32 noundef %3) #24, !dbg !2975
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i32 0, i32 0)) #24, !dbg !2976
  ret void, !dbg !2977
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !2978 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2980, metadata !DIExpression()), !dbg !2981
  ret i32 0, !dbg !2982
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #3 !dbg !2983 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !2987, metadata !DIExpression()), !dbg !2988
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !2989
  ret void, !dbg !2990
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #4 !dbg !2991 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !2994
  ret i8* %1, !dbg !2995
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !2996 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3008, metadata !DIExpression()), !dbg !3019
  call void @llvm.dbg.value(metadata i8* %0, metadata !3007, metadata !DIExpression()), !dbg !3019
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #25, !dbg !3020
  ret void, !dbg !3022
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3023 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3027, metadata !DIExpression()), !dbg !3029
  call void @llvm.dbg.value(metadata i8* %1, metadata !3028, metadata !DIExpression()), !dbg !3029
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3030
  %4 = tail call i32 %3(i32 noundef %0) #24, !dbg !3030
  ret i32 %4, !dbg !3031
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3032 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3044, metadata !DIExpression()), !dbg !3045
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3041, metadata !DIExpression()), !dbg !3045
  call void @llvm.dbg.value(metadata i8* %1, metadata !3042, metadata !DIExpression()), !dbg !3045
  call void @llvm.dbg.value(metadata i8* %2, metadata !3043, metadata !DIExpression()), !dbg !3045
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #24, !dbg !3046
  ret void, !dbg !3047
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3048 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3052, metadata !DIExpression()), !dbg !3055
  call void @llvm.dbg.value(metadata i32 %1, metadata !3053, metadata !DIExpression()), !dbg !3055
  call void @llvm.dbg.value(metadata i32 0, metadata !3054, metadata !DIExpression()), !dbg !3055
  %3 = icmp eq i32 %1, 0, !dbg !3056
  br i1 %3, label %13, label %4, !dbg !3059

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3054, metadata !DIExpression()), !dbg !3055
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3060
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3062
  %8 = load i8, i8* %7, align 1, !dbg !3062
  %9 = zext i8 %8 to i32, !dbg !3062
  %10 = tail call i32 %6(i32 noundef %9) #24, !dbg !3060
  %11 = add nuw i32 %5, 1, !dbg !3063
  call void @llvm.dbg.value(metadata i32 %11, metadata !3054, metadata !DIExpression()), !dbg !3055
  %12 = icmp eq i32 %11, %1, !dbg !3056
  br i1 %12, label %13, label %4, !dbg !3059, !llvm.loop !3064

13:                                               ; preds = %4, %2
  ret void, !dbg !3066
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3067 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3071, metadata !DIExpression()), !dbg !3073
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3074
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3074
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3072, metadata !DIExpression()), !dbg !3075
  call void @llvm.va_start(i8* nonnull %3), !dbg !3076
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3077
  %5 = load i32, i32* %4, align 4, !dbg !3077
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3077
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !3077
  call void @llvm.va_end(i8* nonnull %3), !dbg !3078
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3079
  ret void, !dbg !3079
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3080 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3084, metadata !DIExpression()), !dbg !3089
  call void @llvm.dbg.value(metadata i32 %1, metadata !3085, metadata !DIExpression()), !dbg !3089
  call void @llvm.dbg.value(metadata i8* %2, metadata !3086, metadata !DIExpression()), !dbg !3089
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3090
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3090
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3087, metadata !DIExpression()), !dbg !3091
  call void @llvm.va_start(i8* nonnull %5), !dbg !3092
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3093
  %7 = load i32, i32* %6, align 4, !dbg !3093
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3093
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #25, !dbg !3093
  call void @llvm.dbg.value(metadata i32 %9, metadata !3088, metadata !DIExpression()), !dbg !3089
  call void @llvm.va_end(i8* nonnull %5), !dbg !3094
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3095
  ret i32 %9, !dbg !3096
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3097 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3104, metadata !DIExpression()), !dbg !3111
  call void @llvm.dbg.value(metadata i8* %0, metadata !3101, metadata !DIExpression()), !dbg !3111
  call void @llvm.dbg.value(metadata i32 %1, metadata !3102, metadata !DIExpression()), !dbg !3111
  call void @llvm.dbg.value(metadata i8* %2, metadata !3103, metadata !DIExpression()), !dbg !3111
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3112
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3112
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3105, metadata !DIExpression()), !dbg !3113
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3114
  store i8* %0, i8** %7, align 4, !dbg !3114
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3114
  store i32 %1, i32* %8, align 4, !dbg !3114
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3114
  store i32 0, i32* %9, align 4, !dbg !3114
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #25, !dbg !3115
  %10 = load i32, i32* %9, align 4, !dbg !3116
  %11 = load i32, i32* %8, align 4, !dbg !3118
  %12 = icmp slt i32 %10, %11, !dbg !3119
  br i1 %12, label %13, label %15, !dbg !3120

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3121
  store i8 0, i8* %14, align 1, !dbg !3123
  br label %15, !dbg !3124

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3125
  ret i32 %10, !dbg !3126
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #7 !dbg !3127 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3132, metadata !DIExpression()), !dbg !3134
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3133, metadata !DIExpression()), !dbg !3134
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3135
  %4 = load i8*, i8** %3, align 4, !dbg !3135
  %5 = icmp eq i8* %4, null, !dbg !3137
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3138
  br i1 %5, label %12, label %8, !dbg !3139

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3140
  %10 = load i32, i32* %9, align 4, !dbg !3140
  %11 = icmp slt i32 %7, %10, !dbg !3141
  br i1 %11, label %15, label %12, !dbg !3142

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3143
  %14 = add nsw i32 %7, 1, !dbg !3145
  store i32 %14, i32* %13, align 4, !dbg !3145
  br label %25, !dbg !3146

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3147
  %17 = icmp eq i32 %7, %16, !dbg !3149
  br i1 %17, label %18, label %21, !dbg !3150

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3151
  store i32 %19, i32* %6, align 4, !dbg !3151
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3153
  store i8 0, i8* %20, align 1, !dbg !3154
  br label %25, !dbg !3155

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3156
  %23 = add nsw i32 %7, 1, !dbg !3158
  store i32 %23, i32* %6, align 4, !dbg !3158
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3159
  store i8 %22, i8* %24, align 1, !dbg !3160
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3161
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #8 !dbg !3162 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3172, metadata !DIExpression()), !dbg !3176
  call void @llvm.dbg.value(metadata i8* %1, metadata !3173, metadata !DIExpression()), !dbg !3176
  call void @llvm.dbg.value(metadata i8* %2, metadata !3174, metadata !DIExpression()), !dbg !3176
  call void @llvm.dbg.value(metadata i8* %3, metadata !3175, metadata !DIExpression()), !dbg !3176
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #24, !dbg !3177
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !3178
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #25, !dbg !3179
  unreachable, !dbg !3180
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3181 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !3285
  ret %struct.k_thread* %1, !dbg !3286
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3287 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3292, metadata !DIExpression()), !dbg !3293
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3294, !srcloc !3296
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !3297
  ret void, !dbg !3298
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3299 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3300, !srcloc !3302
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !3303
  ret %struct.k_thread* %1, !dbg !3304
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !3305 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3318, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3315, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8* %1, metadata !3316, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8* %2, metadata !3317, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %4, metadata !3319, metadata !DIExpression()), !dbg !3446
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !3447
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !3447
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !3320, metadata !DIExpression()), !dbg !3448
  call void @llvm.dbg.value(metadata i32 0, metadata !3324, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i1 undef, metadata !3326, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3446
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !3449

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !3449

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !3450
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !3318, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8* %30, metadata !3317, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %29, metadata !3324, metadata !DIExpression()), !dbg !3446
  %31 = load i8, i8* %30, align 1, !dbg !3451
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !3449

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !3451
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !3452
  call void @llvm.dbg.value(metadata i8* %34, metadata !3317, metadata !DIExpression()), !dbg !3446
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #24, !dbg !3452
  call void @llvm.dbg.value(metadata i32 %35, metadata !3328, metadata !DIExpression()), !dbg !3453
  %36 = icmp slt i32 %35, 0, !dbg !3454
  %37 = add i32 %29, 1, !dbg !3452
  call void @llvm.dbg.value(metadata i32 undef, metadata !3324, metadata !DIExpression()), !dbg !3446
  br i1 %36, label %365, label %28, !llvm.loop !3456

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3458
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !3333, metadata !DIExpression()), !dbg !3459
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !3459
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !3378, metadata !DIExpression()), !dbg !3460
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !3381, metadata !DIExpression()), !dbg !3460
  call void @llvm.dbg.value(metadata i8* %30, metadata !3384, metadata !DIExpression()), !dbg !3460
  call void @llvm.dbg.value(metadata i32 -1, metadata !3385, metadata !DIExpression()), !dbg !3460
  call void @llvm.dbg.value(metadata i32 -1, metadata !3386, metadata !DIExpression()), !dbg !3460
  call void @llvm.dbg.value(metadata i8* null, metadata !3387, metadata !DIExpression()), !dbg !3460
  call void @llvm.dbg.value(metadata i8* %14, metadata !3388, metadata !DIExpression()), !dbg !3460
  call void @llvm.dbg.value(metadata i8 0, metadata !3389, metadata !DIExpression()), !dbg !3460
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #25, !dbg !3461
  call void @llvm.dbg.value(metadata i8* %39, metadata !3317, metadata !DIExpression()), !dbg !3446
  %40 = load i24, i24* %15, align 8, !dbg !3462
  %41 = and i24 %40, 256, !dbg !3462
  %42 = icmp eq i24 %41, 0, !dbg !3462
  br i1 %42, label %51, label %43, !dbg !3464

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !3465
  call void @llvm.dbg.value(metadata i8* %44, metadata !3318, metadata !DIExpression()), !dbg !3446
  %45 = bitcast i8* %27 to i32*, !dbg !3465
  %46 = load i32, i32* %45, align 4, !dbg !3465
  call void @llvm.dbg.value(metadata i32 %46, metadata !3385, metadata !DIExpression()), !dbg !3460
  %47 = icmp slt i32 %46, 0, !dbg !3467
  br i1 %47, label %48, label %56, !dbg !3469

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !3470
  store i24 %49, i24* %15, align 8, !dbg !3470
  %50 = sub nsw i32 0, %46, !dbg !3472
  call void @llvm.dbg.value(metadata i32 %50, metadata !3385, metadata !DIExpression()), !dbg !3460
  br label %56, !dbg !3473

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !3474
  %53 = icmp eq i24 %52, 0, !dbg !3474
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !3476
  br label %56, !dbg !3476

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !3477
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !3460
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3318, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %58, metadata !3385, metadata !DIExpression()), !dbg !3460
  %60 = and i24 %57, 1024, !dbg !3477
  %61 = icmp eq i24 %60, 0, !dbg !3477
  br i1 %61, label %69, label %62, !dbg !3478

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !3479
  call void @llvm.dbg.value(metadata i8* %63, metadata !3318, metadata !DIExpression()), !dbg !3446
  %64 = bitcast i8* %59 to i32*, !dbg !3479
  %65 = load i32, i32* %64, align 4, !dbg !3479
  call void @llvm.dbg.value(metadata i32 %65, metadata !3390, metadata !DIExpression()), !dbg !3480
  %66 = icmp slt i32 %65, 0, !dbg !3481
  br i1 %66, label %67, label %74, !dbg !3483

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !3484
  store i24 %68, i24* %15, align 8, !dbg !3484
  br label %74, !dbg !3486

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !3487
  %71 = icmp eq i24 %70, 0, !dbg !3487
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !3489
  br label %74, !dbg !3489

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !3490
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !3460
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !3460
  call void @llvm.dbg.value(metadata i8* %77, metadata !3318, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %76, metadata !3386, metadata !DIExpression()), !dbg !3460
  store i32 0, i32* %16, align 4, !dbg !3491
  store i32 0, i32* %17, align 8, !dbg !3492
  %78 = lshr i24 %75, 16, !dbg !3490
  call void @llvm.dbg.value(metadata i24 %78, metadata !3393, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3460
  %79 = lshr i24 %75, 11, !dbg !3493
  %80 = and i24 %79, 15, !dbg !3493
  %81 = zext i24 %80 to i32, !dbg !3493
  call void @llvm.dbg.value(metadata i32 %81, metadata !3394, metadata !DIExpression()), !dbg !3460
  %82 = trunc i24 %78 to i3, !dbg !3494
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !3494

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !3495

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3498
  call void @llvm.dbg.value(metadata i8* %85, metadata !3318, metadata !DIExpression()), !dbg !3446
  %86 = bitcast i8* %77 to i32*, !dbg !3498
  %87 = load i32, i32* %86, align 4, !dbg !3498
  %88 = sext i32 %87 to i64, !dbg !3498
  store i64 %88, i64* %20, align 8, !dbg !3500
  br label %115, !dbg !3501

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3502
  call void @llvm.dbg.value(metadata i8* %90, metadata !3318, metadata !DIExpression()), !dbg !3446
  %91 = bitcast i8* %77 to i32*, !dbg !3502
  %92 = load i32, i32* %91, align 4, !dbg !3502
  %93 = sext i32 %92 to i64, !dbg !3502
  store i64 %93, i64* %20, align 8, !dbg !3505
  br label %115, !dbg !3506

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !3507
  %96 = add i32 %95, 7, !dbg !3507
  %97 = and i32 %96, -8, !dbg !3507
  %98 = inttoptr i32 %97 to i8*, !dbg !3507
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3507
  call void @llvm.dbg.value(metadata i8* %99, metadata !3318, metadata !DIExpression()), !dbg !3446
  %100 = inttoptr i32 %97 to i64*, !dbg !3507
  %101 = load i64, i64* %100, align 8, !dbg !3507
  store i64 %101, i64* %20, align 8, !dbg !3508
  br label %115, !dbg !3509

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !3510
  %104 = add i32 %103, 7, !dbg !3510
  %105 = and i32 %104, -8, !dbg !3510
  %106 = inttoptr i32 %105 to i8*, !dbg !3510
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !3510
  call void @llvm.dbg.value(metadata i8* %107, metadata !3318, metadata !DIExpression()), !dbg !3446
  %108 = inttoptr i32 %105 to i64*, !dbg !3510
  %109 = load i64, i64* %108, align 8, !dbg !3510
  store i64 %109, i64* %20, align 8, !dbg !3511
  br label %115, !dbg !3512

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3513
  call void @llvm.dbg.value(metadata i8* %111, metadata !3318, metadata !DIExpression()), !dbg !3446
  %112 = bitcast i8* %77 to i32*, !dbg !3513
  %113 = load i32, i32* %112, align 4, !dbg !3513
  %114 = sext i32 %113 to i64, !dbg !3514
  store i64 %114, i64* %20, align 8, !dbg !3515
  br label %115, !dbg !3516

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !3517
  call void @llvm.dbg.value(metadata i8* %117, metadata !3318, metadata !DIExpression()), !dbg !3446
  %118 = trunc i24 %79 to i4, !dbg !3518
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !3518

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !3519
  %121 = ashr exact i64 %120, 56, !dbg !3519
  store i64 %121, i64* %20, align 8, !dbg !3522
  br label %177, !dbg !3523

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !3524
  %124 = ashr exact i64 %123, 48, !dbg !3524
  store i64 %124, i64* %20, align 8, !dbg !3527
  br label %177, !dbg !3528

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !3529

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3532
  call void @llvm.dbg.value(metadata i8* %127, metadata !3318, metadata !DIExpression()), !dbg !3446
  %128 = bitcast i8* %77 to i32*, !dbg !3532
  %129 = load i32, i32* %128, align 4, !dbg !3532
  %130 = zext i32 %129 to i64, !dbg !3532
  store i64 %130, i64* %20, align 8, !dbg !3534
  br label %157, !dbg !3535

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3536
  call void @llvm.dbg.value(metadata i8* %132, metadata !3318, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8* %132, metadata !3318, metadata !DIExpression()), !dbg !3446
  %133 = bitcast i8* %77 to i32*, !dbg !3536
  %134 = load i32, i32* %133, align 4, !dbg !3536
  %135 = zext i32 %134 to i64, !dbg !3536
  store i64 %135, i64* %20, align 8, !dbg !3536
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !3538
  %138 = add i32 %137, 7, !dbg !3538
  %139 = and i32 %138, -8, !dbg !3538
  %140 = inttoptr i32 %139 to i8*, !dbg !3538
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !3538
  call void @llvm.dbg.value(metadata i8* %141, metadata !3318, metadata !DIExpression()), !dbg !3446
  %142 = inttoptr i32 %139 to i64*, !dbg !3538
  %143 = load i64, i64* %142, align 8, !dbg !3538
  store i64 %143, i64* %20, align 8, !dbg !3539
  br label %157, !dbg !3540

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !3541
  %146 = add i32 %145, 7, !dbg !3541
  %147 = and i32 %146, -8, !dbg !3541
  %148 = inttoptr i32 %147 to i8*, !dbg !3541
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !3541
  call void @llvm.dbg.value(metadata i8* %149, metadata !3318, metadata !DIExpression()), !dbg !3446
  %150 = inttoptr i32 %147 to i64*, !dbg !3541
  %151 = load i64, i64* %150, align 8, !dbg !3541
  store i64 %151, i64* %20, align 8, !dbg !3542
  br label %157, !dbg !3543

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3544
  call void @llvm.dbg.value(metadata i8* %153, metadata !3318, metadata !DIExpression()), !dbg !3446
  %154 = bitcast i8* %77 to i32*, !dbg !3544
  %155 = load i32, i32* %154, align 4, !dbg !3544
  %156 = zext i32 %155 to i64, !dbg !3545
  store i64 %156, i64* %20, align 8, !dbg !3546
  br label %157, !dbg !3547

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !3548
  call void @llvm.dbg.value(metadata i8* %159, metadata !3318, metadata !DIExpression()), !dbg !3446
  %160 = trunc i24 %79 to i4, !dbg !3549
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !3549

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !3550
  store i64 %162, i64* %20, align 8, !dbg !3553
  br label %177, !dbg !3554

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !3555
  store i64 %164, i64* %20, align 8, !dbg !3558
  br label %177, !dbg !3559

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !3560
  %167 = add i32 %166, 7, !dbg !3560
  %168 = and i32 %167, -8, !dbg !3560
  %169 = inttoptr i32 %168 to i8*, !dbg !3560
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !3560
  call void @llvm.dbg.value(metadata i8* %170, metadata !3318, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8* %170, metadata !3318, metadata !DIExpression()), !dbg !3446
  %171 = inttoptr i32 %168 to double*, !dbg !3560
  %172 = load double, double* %171, align 8, !dbg !3560
  store double %172, double* %19, align 8, !dbg !3560
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3564
  call void @llvm.dbg.value(metadata i8* %174, metadata !3318, metadata !DIExpression()), !dbg !3446
  %175 = bitcast i8* %77 to i8**, !dbg !3564
  %176 = load i8*, i8** %175, align 4, !dbg !3564
  store i8* %176, i8** %18, align 8, !dbg !3567
  br label %177, !dbg !3568

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !3460
  call void @llvm.dbg.value(metadata i8* %178, metadata !3318, metadata !DIExpression()), !dbg !3446
  %179 = and i24 %75, 3, !dbg !3569
  %180 = icmp eq i24 %179, 0, !dbg !3569
  br i1 %180, label %185, label %181, !dbg !3569

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #25, !dbg !3570
  call void @llvm.dbg.value(metadata i32 %182, metadata !3395, metadata !DIExpression()), !dbg !3571
  %183 = icmp slt i32 %182, 0, !dbg !3572
  %184 = add i32 %182, %29, !dbg !3570
  call void @llvm.dbg.value(metadata i32 undef, metadata !3324, metadata !DIExpression()), !dbg !3446
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !3574
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !3575

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #24, !dbg !3576
  call void @llvm.dbg.value(metadata i32 %188, metadata !3399, metadata !DIExpression()), !dbg !3577
  %189 = icmp slt i32 %188, 0, !dbg !3578
  %190 = add i32 %29, 1, !dbg !3576
  call void @llvm.dbg.value(metadata i32 undef, metadata !3324, metadata !DIExpression()), !dbg !3446
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !3580
  call void @llvm.dbg.value(metadata i8* %192, metadata !3387, metadata !DIExpression()), !dbg !3460
  %193 = icmp sgt i32 %76, -1, !dbg !3581
  br i1 %193, label %194, label %196, !dbg !3583

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #24, !dbg !3584
  call void @llvm.dbg.value(metadata i32 %195, metadata !3402, metadata !DIExpression()), !dbg !3586
  br label %241, !dbg !3587

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #24, !dbg !3588
  call void @llvm.dbg.value(metadata i32 %197, metadata !3402, metadata !DIExpression()), !dbg !3586
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !3387, metadata !DIExpression()), !dbg !3460
  %199 = load i64, i64* %20, align 8, !dbg !3590
  %200 = trunc i64 %199 to i8, !dbg !3591
  store i8 %200, i8* %10, align 1, !dbg !3592
  call void @llvm.dbg.value(metadata i8* %23, metadata !3388, metadata !DIExpression()), !dbg !3460
  br label %245, !dbg !3593

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !3594
  %203 = icmp eq i24 %202, 0, !dbg !3594
  %204 = trunc i24 %75 to i8, !dbg !3596
  %205 = shl i8 %204, 1, !dbg !3596
  %206 = and i8 %205, 32, !dbg !3596
  %207 = select i1 %203, i8 %206, i8 43, !dbg !3596
  call void @llvm.dbg.value(metadata i8 %207, metadata !3389, metadata !DIExpression()), !dbg !3460
  %208 = load i64, i64* %20, align 8, !dbg !3597
  call void @llvm.dbg.value(metadata i64 %208, metadata !3325, metadata !DIExpression()), !dbg !3446
  %209 = icmp slt i64 %208, 0, !dbg !3598
  br i1 %209, label %210, label %212, !dbg !3600

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !3389, metadata !DIExpression()), !dbg !3460
  %211 = sub nsw i64 0, %208, !dbg !3601
  store i64 %211, i64* %20, align 8, !dbg !3603
  br label %212, !dbg !3604

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !3460
  call void @llvm.dbg.value(metadata i8 %213, metadata !3389, metadata !DIExpression()), !dbg !3460
  %214 = load i64, i64* %20, align 8, !dbg !3605
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !3606
  call void @llvm.dbg.value(metadata i8* %215, metadata !3387, metadata !DIExpression()), !dbg !3460
  br label %216, !dbg !3607

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !3608
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !3609
  call void @llvm.dbg.value(metadata i8* %218, metadata !3387, metadata !DIExpression()), !dbg !3460
  call void @llvm.dbg.value(metadata i8 %217, metadata !3389, metadata !DIExpression()), !dbg !3460
  call void @llvm.dbg.label(metadata !3445), !dbg !3610
  %219 = icmp sgt i32 %76, -1, !dbg !3611
  br i1 %219, label %222, label %220, !dbg !3612

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !3613
  br label %245, !dbg !3612

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !3615
  %224 = sub i32 %22, %223, !dbg !3615
  call void @llvm.dbg.value(metadata i32 %224, metadata !3404, metadata !DIExpression()), !dbg !3616
  %225 = load i24, i24* %15, align 8, !dbg !3617
  %226 = and i24 %225, -65, !dbg !3617
  store i24 %226, i24* %15, align 8, !dbg !3617
  %227 = icmp ugt i32 %76, %224, !dbg !3618
  br i1 %227, label %228, label %245, !dbg !3620

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !3621
  store i32 %229, i32* %16, align 4, !dbg !3623
  br label %245, !dbg !3624

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !3625
  %232 = icmp eq i8* %231, null, !dbg !3627
  br i1 %232, label %245, label %233, !dbg !3628

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !3629
  %235 = zext i32 %234 to i64, !dbg !3629
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !3631
  call void @llvm.dbg.value(metadata i8* %236, metadata !3387, metadata !DIExpression()), !dbg !3460
  %237 = load i24, i24* %15, align 8, !dbg !3632
  %238 = or i24 %237, 1048576, !dbg !3632
  store i24 %238, i24* %15, align 8, !dbg !3632
  store i8 120, i8* %21, align 1, !dbg !3633
  br label %216, !dbg !3634

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !3635
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #25, !dbg !3638
  br label %363, !dbg !3639

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !3640
  call void @llvm.dbg.value(metadata i32 %242, metadata !3402, metadata !DIExpression()), !dbg !3586
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !3641
  call void @llvm.dbg.value(metadata i32 -1, metadata !3386, metadata !DIExpression()), !dbg !3460
  call void @llvm.dbg.value(metadata i32 %29, metadata !3324, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8* %192, metadata !3387, metadata !DIExpression()), !dbg !3460
  call void @llvm.dbg.value(metadata i8* %243, metadata !3388, metadata !DIExpression()), !dbg !3460
  call void @llvm.dbg.value(metadata i8 0, metadata !3389, metadata !DIExpression()), !dbg !3460
  %244 = icmp eq i8* %192, null, !dbg !3642
  br i1 %244, label %363, label %245, !dbg !3644, !llvm.loop !3456

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !3613
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !3407, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3460
  call void @llvm.dbg.value(metadata i32 0, metadata !3408, metadata !DIExpression()), !dbg !3460
  %250 = zext i8 %249 to i32, !dbg !3645
  %251 = icmp eq i8 %249, 0, !dbg !3647
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !3407, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3460
  call void @llvm.dbg.value(metadata i32 undef, metadata !3407, metadata !DIExpression()), !dbg !3460
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !3407, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3460
  call void @llvm.dbg.value(metadata i32 undef, metadata !3407, metadata !DIExpression()), !dbg !3460
  %252 = icmp sgt i32 %58, 0, !dbg !3648
  br i1 %252, label %253, label %302, !dbg !3649

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !3613
  %255 = icmp eq i24 %254, 0, !dbg !3613
  %256 = ptrtoint i8* %248 to i32, !dbg !3650
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !3407, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3460
  %257 = ptrtoint i8* %247 to i32, !dbg !3650
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !3407, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3460
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !3407, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3460
  %258 = xor i1 %251, true, !dbg !3651
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !3407, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3460
  %259 = sext i1 %258 to i32, !dbg !3651
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !3407, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3460
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !3407, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3460
  %260 = lshr i24 %246, 19, !dbg !3652
  %261 = and i24 %260, 1, !dbg !3652
  %262 = select i1 %255, i24 %261, i24 2, !dbg !3652
  %263 = zext i24 %262 to i32, !dbg !3652
  %264 = add i32 %257, %259, !dbg !3652
  %265 = add i32 %256, %263, !dbg !3652
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !3407, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3460
  %266 = and i24 %246, 4194304, !dbg !3653
  %267 = icmp eq i24 %266, 0, !dbg !3653
  %268 = load i32, i32* %16, align 4, !dbg !3655
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !3407, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3460
  call void @llvm.dbg.value(metadata i32 undef, metadata !3407, metadata !DIExpression()), !dbg !3460
  %269 = load i32, i32* %17, align 8, !dbg !3656
  %270 = select i1 %267, i32 0, i32 %269, !dbg !3656
  call void @llvm.dbg.value(metadata i32 undef, metadata !3407, metadata !DIExpression()), !dbg !3460
  %271 = add i32 %264, %58, !dbg !3656
  %272 = add i32 %265, %268, !dbg !3656
  %273 = add i32 %272, %270, !dbg !3657
  %274 = sub i32 %271, %273, !dbg !3657
  call void @llvm.dbg.value(metadata i32 %274, metadata !3385, metadata !DIExpression()), !dbg !3460
  %275 = and i24 %246, 4, !dbg !3658
  %276 = icmp eq i24 %275, 0, !dbg !3658
  br i1 %276, label %277, label %302, !dbg !3659

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !3409, metadata !DIExpression()), !dbg !3660
  %278 = and i24 %246, 64, !dbg !3661
  %279 = icmp eq i24 %278, 0, !dbg !3661
  %280 = select i1 %279, i1 true, i1 %251, !dbg !3662
  %281 = select i1 %279, i8 %249, i8 0, !dbg !3662
  %282 = select i1 %279, i32 32, i32 48, !dbg !3662
  br i1 %280, label %287, label %283, !dbg !3662

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #24, !dbg !3663
  call void @llvm.dbg.value(metadata i32 %284, metadata !3414, metadata !DIExpression()), !dbg !3664
  %285 = icmp slt i32 %284, 0, !dbg !3665
  %286 = add i32 %29, 1, !dbg !3663
  call void @llvm.dbg.value(metadata i32 undef, metadata !3324, metadata !DIExpression()), !dbg !3446
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !3460
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !3450
  call void @llvm.dbg.value(metadata i32 %290, metadata !3324, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8 undef, metadata !3409, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i8 %288, metadata !3389, metadata !DIExpression()), !dbg !3460
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !3667
  %292 = add i32 %291, -1, !dbg !3667
  br label %293, !dbg !3667

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !3668
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !3450
  call void @llvm.dbg.value(metadata i32 %295, metadata !3324, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %294, metadata !3385, metadata !DIExpression()), !dbg !3460
  call void @llvm.dbg.value(metadata i32 %294, metadata !3385, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3460
  %296 = icmp sgt i32 %294, 0, !dbg !3669
  br i1 %296, label %297, label %302, !dbg !3667

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !3670
  call void @llvm.dbg.value(metadata i32 %298, metadata !3385, metadata !DIExpression()), !dbg !3460
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #24, !dbg !3671
  call void @llvm.dbg.value(metadata i32 %299, metadata !3420, metadata !DIExpression()), !dbg !3672
  %300 = icmp slt i32 %299, 0, !dbg !3673
  %301 = add i32 %295, 1, !dbg !3671
  call void @llvm.dbg.value(metadata i32 undef, metadata !3324, metadata !DIExpression()), !dbg !3446
  br i1 %300, label %361, label %293, !llvm.loop !3675

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !3460
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !3460
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !3450
  call void @llvm.dbg.value(metadata i32 %305, metadata !3324, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %304, metadata !3385, metadata !DIExpression()), !dbg !3460
  call void @llvm.dbg.value(metadata i8 %303, metadata !3389, metadata !DIExpression()), !dbg !3460
  %306 = icmp eq i8 %303, 0, !dbg !3677
  br i1 %306, label %312, label %307, !dbg !3678

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !3679
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #24, !dbg !3680
  call void @llvm.dbg.value(metadata i32 %309, metadata !3423, metadata !DIExpression()), !dbg !3681
  %310 = icmp slt i32 %309, 0, !dbg !3682
  %311 = add i32 %305, 1, !dbg !3680
  call void @llvm.dbg.value(metadata i32 undef, metadata !3324, metadata !DIExpression()), !dbg !3446
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !3450
  call void @llvm.dbg.value(metadata i32 %313, metadata !3324, metadata !DIExpression()), !dbg !3446
  %314 = lshr i24 %246, 20, !dbg !3684
  %315 = lshr i24 %246, 19, !dbg !3685
  %316 = or i24 %314, %315, !dbg !3686
  %317 = and i24 %316, 1, !dbg !3686
  %318 = icmp eq i24 %317, 0, !dbg !3686
  br i1 %318, label %323, label %319, !dbg !3687

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !3688
  call void @llvm.dbg.value(metadata i32 %320, metadata !3427, metadata !DIExpression()), !dbg !3689
  %321 = icmp slt i32 %320, 0, !dbg !3690
  %322 = add i32 %313, 1, !dbg !3688
  call void @llvm.dbg.value(metadata i32 undef, metadata !3324, metadata !DIExpression()), !dbg !3446
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !3450
  call void @llvm.dbg.value(metadata i32 %324, metadata !3324, metadata !DIExpression()), !dbg !3446
  %325 = and i24 %246, 1048576, !dbg !3692
  %326 = icmp eq i24 %325, 0, !dbg !3692
  br i1 %326, label %333, label %327, !dbg !3693

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !3694
  %329 = zext i8 %328 to i32, !dbg !3694
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #24, !dbg !3694
  call void @llvm.dbg.value(metadata i32 %330, metadata !3433, metadata !DIExpression()), !dbg !3695
  %331 = icmp slt i32 %330, 0, !dbg !3696
  %332 = add i32 %324, 1, !dbg !3694
  call void @llvm.dbg.value(metadata i32 undef, metadata !3324, metadata !DIExpression()), !dbg !3446
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !3450
  call void @llvm.dbg.value(metadata i32 %334, metadata !3324, metadata !DIExpression()), !dbg !3446
  %335 = load i32, i32* %16, align 4, !dbg !3698
  call void @llvm.dbg.value(metadata i32 %335, metadata !3408, metadata !DIExpression()), !dbg !3460
  br label %336, !dbg !3699

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !3700
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !3450
  call void @llvm.dbg.value(metadata i32 %338, metadata !3324, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %337, metadata !3408, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3460
  %339 = icmp sgt i32 %337, 0, !dbg !3701
  br i1 %339, label %340, label %345, !dbg !3699

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !3702
  call void @llvm.dbg.value(metadata i32 %341, metadata !3408, metadata !DIExpression()), !dbg !3460
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !3703
  call void @llvm.dbg.value(metadata i32 %342, metadata !3437, metadata !DIExpression()), !dbg !3704
  %343 = icmp slt i32 %342, 0, !dbg !3705
  %344 = add i32 %338, 1, !dbg !3703
  call void @llvm.dbg.value(metadata i32 undef, metadata !3324, metadata !DIExpression()), !dbg !3446
  br i1 %343, label %361, label %336, !llvm.loop !3707

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #25, !dbg !3709
  call void @llvm.dbg.value(metadata i32 %346, metadata !3440, metadata !DIExpression()), !dbg !3710
  %347 = icmp slt i32 %346, 0, !dbg !3711
  call void @llvm.dbg.value(metadata i32 undef, metadata !3324, metadata !DIExpression()), !dbg !3446
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !3709
  call void @llvm.dbg.value(metadata i32 %349, metadata !3324, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %304, metadata !3385, metadata !DIExpression()), !dbg !3460
  %350 = icmp sgt i32 %304, 0, !dbg !3713
  br i1 %350, label %351, label %363, !dbg !3714

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !3714
  %353 = add i32 %352, %338, !dbg !3714
  br label %354, !dbg !3714

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3324, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %355, metadata !3385, metadata !DIExpression()), !dbg !3460
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #24, !dbg !3715
  call void @llvm.dbg.value(metadata i32 %356, metadata !3442, metadata !DIExpression()), !dbg !3716
  %357 = icmp slt i32 %356, 0, !dbg !3717
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !3719
  call void @llvm.dbg.value(metadata i32 undef, metadata !3324, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %359, metadata !3385, metadata !DIExpression()), !dbg !3460
  %360 = icmp sgt i32 %355, 1, !dbg !3713
  br i1 %360, label %354, label %363, !dbg !3714, !llvm.loop !3720

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !3324, metadata !DIExpression()), !dbg !3446
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3457
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !3450
  call void @llvm.dbg.value(metadata i32 %364, metadata !3324, metadata !DIExpression()), !dbg !3446
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3457
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !3446
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !3722
  ret i32 %366, !dbg !3722
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #10

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3723 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3727, metadata !DIExpression()), !dbg !3729
  call void @llvm.dbg.value(metadata i8* %1, metadata !3728, metadata !DIExpression()), !dbg !3729
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !3730
  store i24 0, i24* %3, align 4, !dbg !3730
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !3730
  store i8 0, i8* %4, align 1, !dbg !3730
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !3730
  store i32 0, i32* %5, align 4, !dbg !3730
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !3730
  store i32 0, i32* %6, align 4, !dbg !3730
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3731
  call void @llvm.dbg.value(metadata i8* %7, metadata !3728, metadata !DIExpression()), !dbg !3729
  %8 = load i8, i8* %7, align 1, !dbg !3732
  %9 = icmp eq i8 %8, 37, !dbg !3734
  br i1 %9, label %10, label %12, !dbg !3735

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !3736
  call void @llvm.dbg.value(metadata i8* %11, metadata !3728, metadata !DIExpression()), !dbg !3729
  store i8 37, i8* %4, align 1, !dbg !3738
  br label %18, !dbg !3739

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #25, !dbg !3740
  call void @llvm.dbg.value(metadata i8* %13, metadata !3728, metadata !DIExpression()), !dbg !3729
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #25, !dbg !3741
  call void @llvm.dbg.value(metadata i8* %14, metadata !3728, metadata !DIExpression()), !dbg !3729
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #25, !dbg !3742
  call void @llvm.dbg.value(metadata i8* %15, metadata !3728, metadata !DIExpression()), !dbg !3729
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #25, !dbg !3743
  call void @llvm.dbg.value(metadata i8* %16, metadata !3728, metadata !DIExpression()), !dbg !3729
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #25, !dbg !3744
  call void @llvm.dbg.value(metadata i8* %17, metadata !3728, metadata !DIExpression()), !dbg !3729
  br label %18, !dbg !3745

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !3729
  ret i8* %19, !dbg !3746
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !3747 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3751, metadata !DIExpression()), !dbg !3758
  call void @llvm.dbg.value(metadata i8* %1, metadata !3752, metadata !DIExpression()), !dbg !3758
  call void @llvm.dbg.value(metadata i8* %2, metadata !3753, metadata !DIExpression()), !dbg !3758
  call void @llvm.dbg.value(metadata i8* %3, metadata !3754, metadata !DIExpression()), !dbg !3758
  call void @llvm.dbg.value(metadata i32 0, metadata !3755, metadata !DIExpression()), !dbg !3758
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !3759

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !3760
  call void @llvm.dbg.value(metadata i32 %9, metadata !3755, metadata !DIExpression()), !dbg !3758
  call void @llvm.dbg.value(metadata i8* %8, metadata !3753, metadata !DIExpression()), !dbg !3758
  %10 = icmp ult i8* %8, %3, !dbg !3761
  br i1 %10, label %11, label %13, !dbg !3762

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !3763
  br label %17, !dbg !3762

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !3764

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !3765
  %16 = icmp eq i8 %15, 0, !dbg !3764
  br i1 %16, label %24, label %17, !dbg !3759

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !3763
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !3766
  call void @llvm.dbg.value(metadata i8* %19, metadata !3753, metadata !DIExpression()), !dbg !3758
  %20 = zext i8 %18 to i32, !dbg !3767
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #24, !dbg !3768
  call void @llvm.dbg.value(metadata i32 %21, metadata !3756, metadata !DIExpression()), !dbg !3769
  %22 = icmp slt i32 %21, 0, !dbg !3770
  %23 = add i32 %9, 1, !dbg !3772
  call void @llvm.dbg.value(metadata i32 undef, metadata !3755, metadata !DIExpression()), !dbg !3758
  br i1 %22, label %24, label %7, !llvm.loop !3773

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !3758
  ret i32 %25, !dbg !3775
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #11 !dbg !3776 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3780, metadata !DIExpression()), !dbg !3790
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !3781, metadata !DIExpression()), !dbg !3790
  call void @llvm.dbg.value(metadata i8* %2, metadata !3782, metadata !DIExpression()), !dbg !3790
  call void @llvm.dbg.value(metadata i8* %3, metadata !3783, metadata !DIExpression()), !dbg !3790
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !3791
  %6 = load i8, i8* %5, align 1, !dbg !3791
  %7 = zext i8 %6 to i32, !dbg !3792
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #25, !dbg !3793
  %9 = icmp eq i32 %8, 0, !dbg !3793
  call void @llvm.dbg.value(metadata i1 %9, metadata !3784, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3790
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #25, !dbg !3794
  call void @llvm.dbg.value(metadata i32 %10, metadata !3785, metadata !DIExpression()), !dbg !3790
  %11 = ptrtoint i8* %3 to i32, !dbg !3795
  %12 = ptrtoint i8* %2 to i32, !dbg !3795
  %13 = sub i32 %11, %12, !dbg !3795
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !3796
  call void @llvm.dbg.value(metadata i8* %14, metadata !3787, metadata !DIExpression()), !dbg !3790
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !3797

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !3790
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !3780, metadata !DIExpression()), !dbg !3790
  call void @llvm.dbg.value(metadata i8* %18, metadata !3787, metadata !DIExpression()), !dbg !3790
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !3798
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !3799
  call void @llvm.dbg.value(metadata i32 %25, metadata !3788, metadata !DIExpression()), !dbg !3800
  %26 = icmp ult i32 %25, 10, !dbg !3801
  %27 = select i1 %26, i32 48, i32 %16, !dbg !3802
  %28 = add i32 %27, %25, !dbg !3800
  %29 = trunc i32 %28 to i8, !dbg !3802
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !3803
  call void @llvm.dbg.value(metadata i8* %30, metadata !3787, metadata !DIExpression()), !dbg !3790
  store i8 %29, i8* %30, align 1, !dbg !3804
  call void @llvm.dbg.value(metadata i64 %22, metadata !3780, metadata !DIExpression()), !dbg !3790
  %31 = icmp uge i64 %19, %15, !dbg !3805
  %32 = icmp ugt i8* %30, %2, !dbg !3806
  %33 = and i1 %31, %32, !dbg !3806
  br i1 %33, label %17, label %34, !dbg !3807, !llvm.loop !3808

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !3810
  %36 = load i24, i24* %35, align 4, !dbg !3810
  %37 = and i24 %36, 32, !dbg !3810
  %38 = icmp eq i24 %37, 0, !dbg !3810
  br i1 %38, label %44, label %39, !dbg !3812

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !3813

40:                                               ; preds = %39
  br label %41, !dbg !3815

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !3819
  store i24 %43, i24* %35, align 4, !dbg !3819
  br label %44, !dbg !3820

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !3820
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #7 !dbg !3821 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3827, metadata !DIExpression()), !dbg !3830
  call void @llvm.dbg.value(metadata i8* %1, metadata !3828, metadata !DIExpression()), !dbg !3830
  call void @llvm.dbg.value(metadata i32 %2, metadata !3829, metadata !DIExpression()), !dbg !3830
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !3831
  %5 = load i24, i24* %4, align 4, !dbg !3831
  %6 = lshr i24 %5, 11, !dbg !3831
  %7 = and i24 %6, 15, !dbg !3831
  %8 = zext i24 %7 to i32, !dbg !3831
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !3832

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !3833
  store i32 %2, i32* %10, align 4, !dbg !3835
  br label %28, !dbg !3836

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !3837
  store i8 %12, i8* %1, align 1, !dbg !3838
  br label %28, !dbg !3839

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !3840
  %15 = bitcast i8* %1 to i16*, !dbg !3841
  store i16 %14, i16* %15, align 2, !dbg !3842
  br label %28, !dbg !3843

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !3844
  store i32 %2, i32* %17, align 4, !dbg !3845
  br label %28, !dbg !3846

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !3847
  %20 = bitcast i8* %1 to i64*, !dbg !3848
  store i64 %19, i64* %20, align 8, !dbg !3849
  br label %28, !dbg !3850

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !3851
  %23 = bitcast i8* %1 to i64*, !dbg !3852
  store i64 %22, i64* %23, align 8, !dbg !3853
  br label %28, !dbg !3854

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !3855
  store i32 %2, i32* %25, align 4, !dbg !3856
  br label %28, !dbg !3857

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !3858
  store i32 %2, i32* %27, align 4, !dbg !3859
  br label %28, !dbg !3860

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !3861
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #12 !dbg !3862 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3865, metadata !DIExpression()), !dbg !3866
  %2 = add i32 %0, -65, !dbg !3867
  %3 = icmp ult i32 %2, 26, !dbg !3868
  %4 = zext i1 %3 to i32, !dbg !3868
  ret i32 %4, !dbg !3869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #12 !dbg !3870 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3874, metadata !DIExpression()), !dbg !3875
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !3876

2:                                                ; preds = %1
  br label %4, !dbg !3877

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !3879

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !3880
  ret i32 %5, !dbg !3881
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !3882 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3884, metadata !DIExpression()), !dbg !3887
  call void @llvm.dbg.value(metadata i8* %1, metadata !3885, metadata !DIExpression()), !dbg !3887
  call void @llvm.dbg.value(metadata i8 1, metadata !3886, metadata !DIExpression()), !dbg !3887
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !3888

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !3886, metadata !DIExpression()), !dbg !3887
  call void @llvm.dbg.value(metadata i8* %5, metadata !3885, metadata !DIExpression()), !dbg !3887
  %6 = load i8, i8* %5, align 1, !dbg !3889
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !3891

7:                                                ; preds = %4
  br label %11, !dbg !3892

8:                                                ; preds = %4
  br label %11, !dbg !3894

9:                                                ; preds = %4
  br label %11, !dbg !3895

10:                                               ; preds = %4
  br label %11, !dbg !3896

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !3897
  %14 = or i24 %13, %12, !dbg !3897
  store i24 %14, i24* %3, align 4, !dbg !3897
  call void @llvm.dbg.value(metadata i8 poison, metadata !3886, metadata !DIExpression()), !dbg !3887
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !3885, metadata !DIExpression()), !dbg !3887
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !3886, metadata !DIExpression()), !dbg !3887
  call void @llvm.dbg.value(metadata i8* %15, metadata !3885, metadata !DIExpression()), !dbg !3887
  %17 = load i24, i24* %3, align 4, !dbg !3898
  %18 = and i24 %17, 68, !dbg !3900
  %19 = icmp eq i24 %18, 68, !dbg !3900
  br i1 %19, label %20, label %22, !dbg !3900

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !3901
  store i24 %21, i24* %3, align 4, !dbg !3901
  br label %22, !dbg !3903

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !3904
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3905 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3907, metadata !DIExpression()), !dbg !3911
  call void @llvm.dbg.value(metadata i8* %1, metadata !3908, metadata !DIExpression()), !dbg !3911
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !3912
  %5 = load i24, i24* %4, align 4, !dbg !3913
  %6 = or i24 %5, 128, !dbg !3913
  store i24 %6, i24* %4, align 4, !dbg !3913
  call void @llvm.dbg.value(metadata i8* %1, metadata !3908, metadata !DIExpression()), !dbg !3911
  %7 = load i8, i8* %1, align 1, !dbg !3914
  %8 = icmp eq i8 %7, 42, !dbg !3916
  br i1 %8, label %9, label %12, !dbg !3917

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !3918
  store i24 %10, i24* %4, align 4, !dbg !3918
  call void @llvm.dbg.value(metadata i8* %1, metadata !3908, metadata !DIExpression()), !dbg !3911
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3920
  call void @llvm.dbg.value(metadata i8* %11, metadata !3908, metadata !DIExpression()), !dbg !3911
  store i8* %11, i8** %3, align 4, !dbg !3920
  br label %29, !dbg !3921

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !3909, metadata !DIExpression()), !dbg !3911
  call void @llvm.dbg.value(metadata i8** %3, metadata !3908, metadata !DIExpression(DW_OP_deref)), !dbg !3911
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !3922
  call void @llvm.dbg.value(metadata i32 %13, metadata !3910, metadata !DIExpression()), !dbg !3911
  %14 = load i8*, i8** %3, align 4, !dbg !3923
  call void @llvm.dbg.value(metadata i8* %14, metadata !3908, metadata !DIExpression()), !dbg !3911
  %15 = icmp eq i8* %14, %1, !dbg !3925
  br i1 %15, label %29, label %16, !dbg !3926

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !3927
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !3929
  store i32 %13, i32* %18, align 4, !dbg !3930
  %19 = lshr i32 %13, 31, !dbg !3931
  %20 = lshr i24 %17, 1, !dbg !3932
  %21 = and i24 %20, 1, !dbg !3932
  %22 = zext i24 %21 to i32, !dbg !3932
  %23 = or i32 %19, %22, !dbg !3932
  %24 = trunc i32 %23 to i24, !dbg !3932
  %25 = shl nuw nsw i24 %24, 1, !dbg !3932
  %26 = and i24 %17, -131, !dbg !3932
  %27 = or i24 %26, 128, !dbg !3932
  %28 = or i24 %25, %27, !dbg !3932
  store i24 %28, i24* %4, align 4, !dbg !3932
  br label %29, !dbg !3933

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !3911
  ret i8* %30, !dbg !3934
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3935 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3937, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i8* %1, metadata !3938, metadata !DIExpression()), !dbg !3940
  %4 = load i8, i8* %1, align 1, !dbg !3941
  %5 = icmp eq i8 %4, 46, !dbg !3942
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !3943
  %7 = load i24, i24* %6, align 4, !dbg !3944
  %8 = select i1 %5, i24 512, i24 0, !dbg !3944
  %9 = and i24 %7, -513, !dbg !3944
  %10 = or i24 %9, %8, !dbg !3944
  store i24 %10, i24* %6, align 4, !dbg !3944
  br i1 %5, label %11, label %32, !dbg !3945

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !3938, metadata !DIExpression()), !dbg !3940
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3946
  call void @llvm.dbg.value(metadata i8* %12, metadata !3938, metadata !DIExpression()), !dbg !3940
  store i8* %12, i8** %3, align 4, !dbg !3946
  %13 = load i8, i8* %12, align 1, !dbg !3947
  %14 = icmp eq i8 %13, 42, !dbg !3949
  br i1 %14, label %15, label %18, !dbg !3950

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !3951
  store i24 %16, i24* %6, align 4, !dbg !3951
  call void @llvm.dbg.value(metadata i8* %12, metadata !3938, metadata !DIExpression()), !dbg !3940
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !3953
  call void @llvm.dbg.value(metadata i8* %17, metadata !3938, metadata !DIExpression()), !dbg !3940
  store i8* %17, i8** %3, align 4, !dbg !3953
  br label %32, !dbg !3954

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !3938, metadata !DIExpression(DW_OP_deref)), !dbg !3940
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !3955
  call void @llvm.dbg.value(metadata i32 %19, metadata !3939, metadata !DIExpression()), !dbg !3940
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !3956
  store i32 %19, i32* %20, align 4, !dbg !3957
  %21 = lshr i32 %19, 31, !dbg !3958
  %22 = load i24, i24* %6, align 4, !dbg !3959
  %23 = lshr i24 %22, 1, !dbg !3959
  %24 = and i24 %23, 1, !dbg !3959
  %25 = zext i24 %24 to i32, !dbg !3959
  %26 = or i32 %21, %25, !dbg !3959
  %27 = trunc i32 %26 to i24, !dbg !3959
  %28 = shl nuw nsw i24 %27, 1, !dbg !3959
  %29 = and i24 %22, -3, !dbg !3959
  %30 = or i24 %28, %29, !dbg !3959
  store i24 %30, i24* %6, align 4, !dbg !3959
  %31 = load i8*, i8** %3, align 4, !dbg !3960
  call void @llvm.dbg.value(metadata i8* %31, metadata !3938, metadata !DIExpression()), !dbg !3940
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !3940
  ret i8* %33, !dbg !3961
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !3962 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3964, metadata !DIExpression()), !dbg !3966
  call void @llvm.dbg.value(metadata i8* %1, metadata !3965, metadata !DIExpression()), !dbg !3966
  %3 = load i8, i8* %1, align 1, !dbg !3967
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !3968

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3969
  call void @llvm.dbg.value(metadata i8* %5, metadata !3965, metadata !DIExpression()), !dbg !3966
  %6 = load i8, i8* %5, align 1, !dbg !3972
  %7 = icmp eq i8 %6, 104, !dbg !3973
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !3974
  %9 = load i24, i24* %8, align 4, !dbg !3974
  %10 = and i24 %9, -30721, !dbg !3974
  br i1 %7, label %11, label %14, !dbg !3975

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !3976
  store i24 %12, i24* %8, align 4, !dbg !3976
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !3978
  call void @llvm.dbg.value(metadata i8* %13, metadata !3965, metadata !DIExpression()), !dbg !3966
  br label %56, !dbg !3979

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !3980
  store i24 %15, i24* %8, align 4, !dbg !3980
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3982
  call void @llvm.dbg.value(metadata i8* %17, metadata !3965, metadata !DIExpression()), !dbg !3966
  %18 = load i8, i8* %17, align 1, !dbg !3984
  %19 = icmp eq i8 %18, 108, !dbg !3985
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !3986
  %21 = load i24, i24* %20, align 4, !dbg !3986
  %22 = and i24 %21, -30721, !dbg !3986
  br i1 %19, label %23, label %26, !dbg !3987

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !3988
  store i24 %24, i24* %20, align 4, !dbg !3988
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !3990
  call void @llvm.dbg.value(metadata i8* %25, metadata !3965, metadata !DIExpression()), !dbg !3966
  br label %56, !dbg !3991

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !3992
  store i24 %27, i24* %20, align 4, !dbg !3992
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !3994
  %30 = load i24, i24* %29, align 4, !dbg !3995
  %31 = and i24 %30, -30721, !dbg !3995
  %32 = or i24 %31, 10240, !dbg !3995
  store i24 %32, i24* %29, align 4, !dbg !3995
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3996
  call void @llvm.dbg.value(metadata i8* %33, metadata !3965, metadata !DIExpression()), !dbg !3966
  br label %56, !dbg !3997

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !3998
  %36 = load i24, i24* %35, align 4, !dbg !3999
  %37 = and i24 %36, -30721, !dbg !3999
  %38 = or i24 %37, 12288, !dbg !3999
  store i24 %38, i24* %35, align 4, !dbg !3999
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4000
  call void @llvm.dbg.value(metadata i8* %39, metadata !3965, metadata !DIExpression()), !dbg !3966
  br label %56, !dbg !4001

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !4002
  %42 = load i24, i24* %41, align 4, !dbg !4003
  %43 = and i24 %42, -30721, !dbg !4003
  %44 = or i24 %43, 14336, !dbg !4003
  store i24 %44, i24* %41, align 4, !dbg !4003
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4004
  call void @llvm.dbg.value(metadata i8* %45, metadata !3965, metadata !DIExpression()), !dbg !3966
  br label %56, !dbg !4005

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !4006
  %48 = load i24, i24* %47, align 4, !dbg !4007
  %49 = and i24 %48, -30723, !dbg !4007
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4008
  call void @llvm.dbg.value(metadata i8* %50, metadata !3965, metadata !DIExpression()), !dbg !3966
  %51 = or i24 %49, 16386, !dbg !4009
  store i24 %51, i24* %47, align 4, !dbg !4009
  br label %56, !dbg !4010

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !4011
  %54 = load i24, i24* %53, align 4, !dbg !4012
  %55 = and i24 %54, -30721, !dbg !4012
  store i24 %55, i24* %53, align 4, !dbg !4012
  br label %56, !dbg !4013

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !3965, metadata !DIExpression()), !dbg !3966
  ret i8* %57, !dbg !4014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !4015 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4017, metadata !DIExpression()), !dbg !4022
  call void @llvm.dbg.value(metadata i8* %1, metadata !4018, metadata !DIExpression()), !dbg !4022
  call void @llvm.dbg.value(metadata i8 0, metadata !4019, metadata !DIExpression()), !dbg !4022
  call void @llvm.dbg.value(metadata i8* %1, metadata !4018, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4022
  %3 = load i8, i8* %1, align 1, !dbg !4023
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4024
  store i8 %3, i8* %4, align 1, !dbg !4025
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !4026

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !4027

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !4028
  %9 = load i24, i24* %8, align 4, !dbg !4028
  %10 = and i24 %9, -458753, !dbg !4028
  %11 = or i24 %10, %7, !dbg !4028
  call void @llvm.dbg.label(metadata !4020), !dbg !4029
  %12 = and i24 %9, 30720, !dbg !4030
  %13 = icmp eq i24 %12, 16384, !dbg !4030
  %14 = zext i1 %13 to i24, !dbg !4032
  %15 = or i24 %11, %14, !dbg !4032
  %16 = icmp eq i8 %3, 99, !dbg !4033
  br i1 %16, label %17, label %43, !dbg !4035

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !4036
  %19 = icmp ne i24 %18, 0, !dbg !4036
  call void @llvm.dbg.value(metadata i1 %19, metadata !4019, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4022
  br label %43, !dbg !4038

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !4039
  %22 = load i24, i24* %21, align 4, !dbg !4040
  %23 = and i24 %22, -458753, !dbg !4040
  %24 = or i24 %23, 262144, !dbg !4040
  call void @llvm.dbg.value(metadata i8 1, metadata !4019, metadata !DIExpression()), !dbg !4022
  br label %43, !dbg !4041

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !4044
  %27 = load i24, i24* %26, align 4, !dbg !4045
  %28 = and i24 %27, -458753, !dbg !4045
  %29 = or i24 %28, 196608, !dbg !4045
  %30 = and i24 %27, 30720, !dbg !4046
  %31 = icmp eq i24 %30, 16384, !dbg !4046
  br label %43, !dbg !4048

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !4049
  %34 = load i24, i24* %33, align 4, !dbg !4050
  %35 = and i24 %34, -458753, !dbg !4050
  %36 = or i24 %35, 196608, !dbg !4050
  %37 = and i24 %34, 30720, !dbg !4051
  %38 = icmp ne i24 %37, 0, !dbg !4051
  br label %43, !dbg !4053

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !4054
  %41 = load i24, i24* %40, align 4, !dbg !4055
  %42 = or i24 %41, 1, !dbg !4055
  br label %43, !dbg !4056

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !4057
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !4058
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4059
  call void @llvm.dbg.value(metadata i8* %48, metadata !4018, metadata !DIExpression()), !dbg !4022
  call void @llvm.dbg.value(metadata i8 poison, metadata !4019, metadata !DIExpression()), !dbg !4022
  %49 = lshr i24 %44, 1, !dbg !4057
  %50 = and i24 %49, 1, !dbg !4057
  %51 = zext i24 %50 to i32, !dbg !4057
  %52 = or i32 %51, %47, !dbg !4057
  %53 = trunc i32 %52 to i24, !dbg !4057
  %54 = shl nuw nsw i24 %53, 1, !dbg !4057
  %55 = and i24 %44, -3, !dbg !4057
  %56 = or i24 %54, %55, !dbg !4057
  store i24 %56, i24* %46, align 4, !dbg !4057
  ret i8* %48, !dbg !4060
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #11 !dbg !4061 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !4066, metadata !DIExpression()), !dbg !4069
  %2 = load i8*, i8** %0, align 4, !dbg !4070
  call void @llvm.dbg.value(metadata i8* %2, metadata !4067, metadata !DIExpression()), !dbg !4069
  call void @llvm.dbg.value(metadata i32 0, metadata !4068, metadata !DIExpression()), !dbg !4069
  %3 = load i8, i8* %2, align 1, !dbg !4071
  %4 = zext i8 %3 to i32, !dbg !4072
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #25, !dbg !4073
  %6 = icmp eq i32 %5, 0, !dbg !4074
  br i1 %6, label %19, label %7, !dbg !4074

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !4068, metadata !DIExpression()), !dbg !4069
  call void @llvm.dbg.value(metadata i8* %10, metadata !4067, metadata !DIExpression()), !dbg !4069
  %11 = mul i32 %9, 10, !dbg !4075
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !4077
  call void @llvm.dbg.value(metadata i8* %12, metadata !4067, metadata !DIExpression()), !dbg !4069
  %13 = add i32 %11, -48, !dbg !4078
  %14 = add i32 %13, %8, !dbg !4079
  call void @llvm.dbg.value(metadata i32 %14, metadata !4068, metadata !DIExpression()), !dbg !4069
  %15 = load i8, i8* %12, align 1, !dbg !4071
  %16 = zext i8 %15 to i32, !dbg !4072
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #25, !dbg !4073
  %18 = icmp eq i32 %17, 0, !dbg !4074
  br i1 %18, label %19, label %7, !dbg !4074, !llvm.loop !4080

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !4069
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !4069
  store i8* %20, i8** %0, align 4, !dbg !4082
  ret i32 %21, !dbg !4083
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #12 !dbg !4084 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4086, metadata !DIExpression()), !dbg !4087
  %2 = add i32 %0, -48, !dbg !4088
  %3 = icmp ult i32 %2, 10, !dbg !4089
  %4 = zext i1 %3 to i32, !dbg !4089
  ret i32 %4, !dbg !4090
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !4091 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !4093, !srcloc !4094
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !4095, !srcloc !4096
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !4097, !srcloc !4098
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !4099, !srcloc !4100
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !4101, !srcloc !4102
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,82\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !4103, !srcloc !4104
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,168000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !4105, !srcloc !4106
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !4107, !srcloc !4108
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !4109, !srcloc !4110
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !4111, !srcloc !4112
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !4113, !srcloc !4114
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !4115, !srcloc !4116
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !4117, !srcloc !4118
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !4119, !srcloc !4120
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !4121, !srcloc !4122
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !4123, !srcloc !4124
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !4125, !srcloc !4126
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !4127, !srcloc !4128
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !4129, !srcloc !4130
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !4131, !srcloc !4132
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !4133, !srcloc !4134
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !4135, !srcloc !4136
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !4137, !srcloc !4138
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !4139, !srcloc !4140
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !4141, !srcloc !4142
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,%object", ""() #23, !dbg !4143, !srcloc !4144
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !4145, !srcloc !4146
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !4147, !srcloc !4148
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !4149, !srcloc !4150
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !4151, !srcloc !4152
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !4153, !srcloc !4154
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED\0A\09.equ\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,%object", ""() #23, !dbg !4155, !srcloc !4156
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !4157, !srcloc !4158
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !4159, !srcloc !4160
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,%object", ""() #23, !dbg !4161, !srcloc !4162
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !4163, !srcloc !4164
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !4165, !srcloc !4166
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !4167, !srcloc !4168
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !4169, !srcloc !4170
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !4171, !srcloc !4172
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !4173, !srcloc !4174
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #23, !dbg !4175, !srcloc !4176
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !4177, !srcloc !4178
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !4179, !srcloc !4180
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !4181, !srcloc !4182
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !4183, !srcloc !4184
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !4185, !srcloc !4186
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !4187, !srcloc !4188
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !4189, !srcloc !4190
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !4191, !srcloc !4192
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !4193, !srcloc !4194
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,%object", ""() #23, !dbg !4195, !srcloc !4196
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !4197, !srcloc !4198
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !4199, !srcloc !4200
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !4201, !srcloc !4202
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !4203, !srcloc !4204
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !4205, !srcloc !4206
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !4207, !srcloc !4208
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !4209, !srcloc !4210
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !4211, !srcloc !4212
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !4213, !srcloc !4214
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !4215, !srcloc !4216
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !4217, !srcloc !4218
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !4219, !srcloc !4220
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !4221, !srcloc !4222
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !4223, !srcloc !4224
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !4225, !srcloc !4226
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !4227, !srcloc !4228
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !4229, !srcloc !4230
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !4231, !srcloc !4232
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !4233, !srcloc !4234
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !4235, !srcloc !4236
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !4237, !srcloc !4238
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !4239, !srcloc !4240
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !4241, !srcloc !4242
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !4243, !srcloc !4244
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !4245, !srcloc !4246
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !4247, !srcloc !4248
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !4249, !srcloc !4250
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !4251, !srcloc !4252
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !4253, !srcloc !4254
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !4255, !srcloc !4256
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !4257, !srcloc !4258
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !4259, !srcloc !4260
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !4261, !srcloc !4262
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405\0A\09.equ\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,1\0A\09.type\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,%object", ""() #23, !dbg !4263, !srcloc !4264
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !4265, !srcloc !4266
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !4267, !srcloc !4268
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !4269, !srcloc !4270
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !4271, !srcloc !4272
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !4273, !srcloc !4274
  tail call void asm sideeffect ".globl\09CONFIG_STM32_CCM\0A\09.equ\09CONFIG_STM32_CCM,1\0A\09.type\09CONFIG_STM32_CCM,%object", ""() #23, !dbg !4275, !srcloc !4276
  tail call void asm sideeffect ".globl\09CONFIG_STM32_BACKUP_SRAM\0A\09.equ\09CONFIG_STM32_BACKUP_SRAM,1\0A\09.type\09CONFIG_STM32_BACKUP_SRAM,%object", ""() #23, !dbg !4277, !srcloc !4278
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F405XG\0A\09.equ\09CONFIG_SOC_STM32F405XG,1\0A\09.type\09CONFIG_SOC_STM32F405XG,%object", ""() #23, !dbg !4279, !srcloc !4280
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !4281, !srcloc !4282
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !4283, !srcloc !4284
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !4285, !srcloc !4286
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !4287, !srcloc !4288
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !4289, !srcloc !4290
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !4291, !srcloc !4292
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !4293, !srcloc !4294
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !4295, !srcloc !4296
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !4297, !srcloc !4298
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !4299, !srcloc !4300
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !4301, !srcloc !4302
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !4303, !srcloc !4304
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !4305, !srcloc !4306
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !4307, !srcloc !4308
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !4309, !srcloc !4310
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !4311, !srcloc !4312
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !4313, !srcloc !4314
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !4315, !srcloc !4316
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !4317, !srcloc !4318
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !4319, !srcloc !4320
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !4321, !srcloc !4322
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !4323, !srcloc !4324
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !4325, !srcloc !4326
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !4327, !srcloc !4328
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !4329, !srcloc !4330
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !4331, !srcloc !4332
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !4333, !srcloc !4334
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !4335, !srcloc !4336
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !4337, !srcloc !4338
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !4339, !srcloc !4340
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !4341, !srcloc !4342
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !4343, !srcloc !4344
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !4345, !srcloc !4346
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !4347, !srcloc !4348
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !4349, !srcloc !4350
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !4351, !srcloc !4352
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !4353, !srcloc !4354
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !4355, !srcloc !4356
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !4357, !srcloc !4358
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !4359, !srcloc !4360
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !4361, !srcloc !4362
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !4363, !srcloc !4364
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !4365, !srcloc !4366
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !4367, !srcloc !4368
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !4369, !srcloc !4370
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !4371, !srcloc !4372
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !4373, !srcloc !4374
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !4375, !srcloc !4376
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !4377, !srcloc !4378
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !4379, !srcloc !4380
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !4381, !srcloc !4382
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !4383, !srcloc !4384
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4385, !srcloc !4386
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !4387, !srcloc !4388
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !4389, !srcloc !4390
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !4391, !srcloc !4392
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !4393, !srcloc !4394
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !4395, !srcloc !4396
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !4397, !srcloc !4398
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !4399, !srcloc !4400
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !4401, !srcloc !4402
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !4403, !srcloc !4404
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !4405, !srcloc !4406
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !4407, !srcloc !4408
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !4409, !srcloc !4410
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !4411, !srcloc !4412
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !4413, !srcloc !4414
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !4415, !srcloc !4416
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !4417, !srcloc !4418
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !4419, !srcloc !4420
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !4421, !srcloc !4422
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !4423, !srcloc !4424
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !4425, !srcloc !4426
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !4427, !srcloc !4428
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !4429, !srcloc !4430
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !4431, !srcloc !4432
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !4433, !srcloc !4434
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !4435, !srcloc !4436
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !4437, !srcloc !4438
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !4439, !srcloc !4440
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !4441, !srcloc !4442
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !4443, !srcloc !4444
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !4445, !srcloc !4446
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !4447, !srcloc !4448
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !4449, !srcloc !4450
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !4451, !srcloc !4452
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !4453, !srcloc !4454
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !4455, !srcloc !4456
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !4457, !srcloc !4458
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !4459, !srcloc !4460
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !4461, !srcloc !4462
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !4463, !srcloc !4464
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !4465, !srcloc !4466
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !4467, !srcloc !4468
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !4469, !srcloc !4470
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !4471, !srcloc !4472
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !4473, !srcloc !4474
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !4475, !srcloc !4476
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4477, !srcloc !4478
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !4479, !srcloc !4480
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !4481, !srcloc !4482
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !4483, !srcloc !4484
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !4485, !srcloc !4486
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !4487, !srcloc !4488
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !4489, !srcloc !4490
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !4491, !srcloc !4492
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !4493, !srcloc !4494
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !4495, !srcloc !4496
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !4497, !srcloc !4498
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !4499, !srcloc !4500
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !4501, !srcloc !4502
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !4503, !srcloc !4504
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !4505, !srcloc !4506
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !4507, !srcloc !4508
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !4509, !srcloc !4510
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !4511, !srcloc !4512
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !4513, !srcloc !4514
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !4515, !srcloc !4516
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !4517, !srcloc !4518
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !4519, !srcloc !4520
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !4521, !srcloc !4522
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !4523, !srcloc !4524
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !4525, !srcloc !4526
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !4527, !srcloc !4528
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !4529, !srcloc !4530
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !4531, !srcloc !4532
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !4533, !srcloc !4534
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !4535, !srcloc !4536
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,12000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !4537, !srcloc !4538
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !4539, !srcloc !4540
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !4541, !srcloc !4542
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !4543, !srcloc !4544
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !4545, !srcloc !4546
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !4547, !srcloc !4548
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !4549, !srcloc !4550
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !4551, !srcloc !4552
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !4553, !srcloc !4554
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !4555, !srcloc !4556
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !4557, !srcloc !4558
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !4559, !srcloc !4560
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !4561, !srcloc !4562
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !4563, !srcloc !4564
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !4565, !srcloc !4566
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !4567, !srcloc !4568
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !4569, !srcloc !4570
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !4571, !srcloc !4572
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !4573, !srcloc !4574
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !4575, !srcloc !4576
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !4577, !srcloc !4578
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !4579, !srcloc !4580
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !4581, !srcloc !4582
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !4583, !srcloc !4584
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !4585, !srcloc !4586
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !4587, !srcloc !4588
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !4589, !srcloc !4590
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !4591, !srcloc !4592
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !4593, !srcloc !4594
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !4595, !srcloc !4596
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !4597, !srcloc !4598
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4599, !srcloc !4600
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !4601, !srcloc !4602
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !4603, !srcloc !4604
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !4605, !srcloc !4606
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !4607, !srcloc !4608
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !4609, !srcloc !4610
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !4611, !srcloc !4612
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !4613, !srcloc !4614
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !4615, !srcloc !4616
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !4617, !srcloc !4618
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !4619, !srcloc !4620
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !4621, !srcloc !4622
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !4623, !srcloc !4624
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !4625, !srcloc !4626
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !4627, !srcloc !4628
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !4629, !srcloc !4630
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !4631, !srcloc !4632
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !4633, !srcloc !4634
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !4635, !srcloc !4636
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !4637, !srcloc !4638
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !4639, !srcloc !4640
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !4641, !srcloc !4642
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !4643, !srcloc !4644
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !4645, !srcloc !4646
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !4647, !srcloc !4648
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !4649, !srcloc !4650
  ret void, !dbg !4651
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !4652 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4654, metadata !DIExpression()), !dbg !4656
  tail call fastcc void @LL_FLASH_EnableInstCache() #25, !dbg !4657
  tail call fastcc void @LL_FLASH_EnableDataCache() #25, !dbg !4658
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !4659, !srcloc !4668
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !4659
  call void @llvm.dbg.value(metadata i32 %3, metadata !4665, metadata !DIExpression()) #23, !dbg !4669
  call void @llvm.dbg.value(metadata i32 undef, metadata !4666, metadata !DIExpression()) #23, !dbg !4669
  call void @llvm.dbg.value(metadata i32 %3, metadata !4655, metadata !DIExpression()), !dbg !4656
  call void @llvm.dbg.value(metadata i32 %3, metadata !4670, metadata !DIExpression()) #23, !dbg !4675
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !4677, !srcloc !4678
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !4679
  ret i32 0, !dbg !4680
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #13 !dbg !4681 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4683
  %2 = or i32 %1, 512, !dbg !4683
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4683
  ret void, !dbg !4684
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #13 !dbg !4685 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4686
  %2 = or i32 %1, 1024, !dbg !4686
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4686
  ret void, !dbg !4687
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_backup_sram_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !4688 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4690, metadata !DIExpression()), !dbg !4696
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !4697
  %3 = load i8*, i8** %2, align 4, !dbg !4697
  call void @llvm.dbg.value(metadata %struct.stm32_backup_sram_config* undef, metadata !4691, metadata !DIExpression()), !dbg !4696
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !4694, metadata !DIExpression()), !dbg !4696
  %4 = tail call fastcc zeroext i1 @device_is_ready() #25, !dbg !4698
  br i1 %4, label %5, label %16, !dbg !4700

5:                                                ; preds = %1
  %6 = tail call fastcc i32 @clock_control_on(i8* noundef %3) #25, !dbg !4701
  call void @llvm.dbg.value(metadata i32 %6, metadata !4693, metadata !DIExpression()), !dbg !4696
  %7 = icmp slt i32 %6, 0, !dbg !4702
  br i1 %7, label %16, label %8, !dbg !4704

8:                                                ; preds = %5
  tail call fastcc void @LL_PWR_EnableBkUpAccess() #25, !dbg !4705
  br label %9, !dbg !4706

9:                                                ; preds = %9, %8
  %10 = tail call fastcc i32 @LL_PWR_IsEnabledBkUpAccess() #25, !dbg !4707
  %11 = icmp eq i32 %10, 0, !dbg !4708
  br i1 %11, label %9, label %12, !dbg !4706, !llvm.loop !4709

12:                                               ; preds = %9
  tail call fastcc void @LL_PWR_EnableBkUpRegulator() #25, !dbg !4711
  br label %13, !dbg !4712

13:                                               ; preds = %13, %12
  %14 = tail call fastcc i32 @LL_PWR_IsEnabledBkUpRegulator() #25, !dbg !4713
  %15 = icmp eq i32 %14, 0, !dbg !4714
  br i1 %15, label %13, label %16, !dbg !4712, !llvm.loop !4715

16:                                               ; preds = %13, %5, %1
  %17 = phi i32 [ -19, %1 ], [ %6, %5 ], [ 0, %13 ], !dbg !4696
  ret i32 %17, !dbg !4717
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !4718 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !4723, metadata !DIExpression()), !dbg !4724
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4725, !srcloc !4727
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #25, !dbg !4728
  ret i1 %1, !dbg !4729
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !4730 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !4732, metadata !DIExpression()), !dbg !4735
  call void @llvm.dbg.value(metadata i8* %0, metadata !4733, metadata !DIExpression()), !dbg !4735
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !4736
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !4734, metadata !DIExpression()), !dbg !4735
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !4737
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !4737
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #24, !dbg !4738
  ret i32 %5, !dbg !4739
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_PWR_EnableBkUpAccess() unnamed_addr #13 !dbg !4740 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !4742
  %2 = or i32 %1, 256, !dbg !4742
  store volatile i32 %2, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !4742
  ret void, !dbg !4743
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_IsEnabledBkUpAccess() unnamed_addr #14 !dbg !4744 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !4747
  %2 = lshr i32 %1, 8, !dbg !4748
  %3 = and i32 %2, 1, !dbg !4748
  ret i32 %3, !dbg !4749
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_PWR_EnableBkUpRegulator() unnamed_addr #13 !dbg !4750 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770500 to i32*), align 4, !dbg !4751
  %2 = or i32 %1, 512, !dbg !4751
  store volatile i32 %2, i32* inttoptr (i32 1073770500 to i32*), align 4, !dbg !4751
  ret void, !dbg !4752
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_IsEnabledBkUpRegulator() unnamed_addr #14 !dbg !4753 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770500 to i32*), align 4, !dbg !4754
  %2 = lshr i32 %1, 9, !dbg !4755
  %3 = and i32 %2, 1, !dbg !4755
  ret i32 %3, !dbg !4756
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !4757 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !4759, metadata !DIExpression()), !dbg !4760
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #24, !dbg !4761
  ret i1 %1, !dbg !4762
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #12 !dbg !4763 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4765, metadata !DIExpression()), !dbg !4766
  ret i32 0, !dbg !4767
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !4768 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4817, metadata !DIExpression()), !dbg !4819
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !4818, metadata !DIExpression()), !dbg !4819
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #24, !dbg !4820
  ret void, !dbg !4821
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !4822 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !4839, metadata !DIExpression()), !dbg !4842
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !4840, metadata !DIExpression()), !dbg !4842
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !4843
  %4 = load i32, i32* %3, align 4, !dbg !4843
  call void @llvm.dbg.value(metadata i32 %4, metadata !4841, metadata !DIExpression()), !dbg !4842
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #25, !dbg !4844
  ret void, !dbg !4845
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !4846 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4850, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i8* %0, metadata !4851, metadata !DIExpression()), !dbg !4853
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !4854
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !4854
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !4852, metadata !DIExpression()), !dbg !4855
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !4855
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !4856
  %5 = bitcast i8* %4 to i32*, !dbg !4856
  %6 = load i32, i32* %5, align 4, !dbg !4856
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !4857
  store i32 %6, i32* %7, align 4, !dbg !4858
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #25, !dbg !4859
  unreachable, !dbg !4860
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !4861 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4864, metadata !DIExpression()), !dbg !4865
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #25, !dbg !4866
  ret void, !dbg !4867
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !4868 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4872, metadata !DIExpression()), !dbg !4873
  %2 = icmp sgt i32 %0, -1, !dbg !4874
  br i1 %2, label %3, label %8, !dbg !4876

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4877, !srcloc !4879
  %4 = and i32 %0, 31, !dbg !4880
  %5 = shl nuw i32 1, %4, !dbg !4881
  %6 = lshr i32 %0, 5, !dbg !4882
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !4883
  store volatile i32 %5, i32* %7, align 4, !dbg !4884
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4885, !srcloc !4886
  br label %8, !dbg !4887

8:                                                ; preds = %3, %1
  ret void, !dbg !4888
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !4889 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4891, metadata !DIExpression()), !dbg !4892
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #25, !dbg !4893
  ret void, !dbg !4894
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !4895 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4897, metadata !DIExpression()), !dbg !4898
  %2 = icmp sgt i32 %0, -1, !dbg !4899
  br i1 %2, label %3, label %8, !dbg !4901

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !4902
  %5 = shl nuw i32 1, %4, !dbg !4904
  %6 = lshr i32 %0, 5, !dbg !4905
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !4906
  store volatile i32 %5, i32* %7, align 4, !dbg !4907
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !4908, !srcloc !4912
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !4913, !srcloc !4916
  br label %8, !dbg !4917

8:                                                ; preds = %3, %1
  ret void, !dbg !4918
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #14 !dbg !4919 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4923, metadata !DIExpression()), !dbg !4924
  %2 = lshr i32 %0, 5, !dbg !4925
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !4926
  %4 = load volatile i32, i32* %3, align 4, !dbg !4926
  %5 = and i32 %0, 31, !dbg !4927
  %6 = shl nuw i32 1, %5, !dbg !4927
  %7 = and i32 %4, %6, !dbg !4928
  ret i32 %7, !dbg !4929
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !4930 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4934, metadata !DIExpression()), !dbg !4937
  call void @llvm.dbg.value(metadata i32 %1, metadata !4935, metadata !DIExpression()), !dbg !4937
  call void @llvm.dbg.value(metadata i32 %2, metadata !4936, metadata !DIExpression()), !dbg !4937
  %4 = add i32 %1, 1, !dbg !4938
  call void @llvm.dbg.value(metadata i32 %4, metadata !4935, metadata !DIExpression()), !dbg !4937
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #25, !dbg !4941
  ret void, !dbg !4942
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !4943 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4947, metadata !DIExpression()), !dbg !4949
  call void @llvm.dbg.value(metadata i32 %1, metadata !4948, metadata !DIExpression()), !dbg !4949
  %3 = trunc i32 %1 to i8, !dbg !4950
  %4 = shl i8 %3, 4, !dbg !4950
  %5 = and i32 %0, 15, !dbg !4952
  %6 = add nsw i32 %5, -4, !dbg !4952
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !4952
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !4952
  %9 = icmp slt i32 %0, 0, !dbg !4952
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !4952
  store volatile i8 %4, i8* %10, align 1, !dbg !4950
  ret void, !dbg !4953
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !4954 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4956, metadata !DIExpression()), !dbg !4957
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #24, !dbg !4958
  ret void, !dbg !4959
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !4960 {
  tail call void @z_SysNmiOnReset() #24, !dbg !4962
  tail call void @z_arm_int_exit() #24, !dbg !4963
  ret void, !dbg !4964
}

; Function Attrs: optsize
declare !dbg !4965 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !4966 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #8 !dbg !4968 {
  tail call fastcc void @relocate_vector_table() #25, !dbg !4970
  tail call fastcc void @z_arm_floating_point_init() #25, !dbg !4971
  tail call void @z_bss_zero() #24, !dbg !4972
  tail call void @z_data_copy() #24, !dbg !4973
  tail call void @z_arm_interrupt_init() #24, !dbg !4974
  tail call void @z_cstart() #27, !dbg !4975
  unreachable, !dbg !4975
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !4976 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !4977
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !4978, !srcloc !4981
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !4982, !srcloc !4985
  ret void, !dbg !4986
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !4987 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !4988
  %2 = and i32 %1, -15728641, !dbg !4988
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !4988
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !4989, !srcloc !4994
  call void @llvm.dbg.value(metadata i32 %3, metadata !4992, metadata !DIExpression()) #23, !dbg !4995
  %4 = and i32 %3, -5, !dbg !4996
  call void @llvm.dbg.value(metadata i32 %4, metadata !4997, metadata !DIExpression()) #23, !dbg !5002
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !5004, !srcloc !5005
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5006, !srcloc !4985
  ret void, !dbg !5008
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !5009 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5012, metadata !DIExpression()), !dbg !5013
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5014
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !5015
  store i32 %0, i32* %3, align 4, !dbg !5016
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !5017
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !5018
  store i32 %4, i32* %5, align 4, !dbg !5019
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5020
  %7 = or i32 %6, 268435456, !dbg !5020
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5020
  call void @llvm.dbg.value(metadata i32 0, metadata !5021, metadata !DIExpression()) #23, !dbg !5024
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !5026, !srcloc !5027
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5028
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !5029
  %10 = load i32, i32* %9, align 4, !dbg !5029
  ret i32 %10, !dbg !5030
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #3 !dbg !5031 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5141, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !5142, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.value(metadata i8* %2, metadata !5143, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !5144, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.value(metadata i8* %4, metadata !5145, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.value(metadata i8* %5, metadata !5146, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.value(metadata i8* %6, metadata !5147, metadata !DIExpression()), !dbg !5149
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !5150
  call void @llvm.dbg.value(metadata i8* %8, metadata !5148, metadata !DIExpression()), !dbg !5149
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !5151
  %10 = bitcast i8* %9 to i32*, !dbg !5151
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !5152
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !5153
  %12 = bitcast i8* %8 to i32*, !dbg !5154
  store i32 %11, i32* %12, align 4, !dbg !5155
  %13 = ptrtoint i8* %4 to i32, !dbg !5156
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !5157
  %15 = bitcast i8* %14 to i32*, !dbg !5157
  store i32 %13, i32* %15, align 4, !dbg !5158
  %16 = ptrtoint i8* %5 to i32, !dbg !5159
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !5160
  %18 = bitcast i8* %17 to i32*, !dbg !5160
  store i32 %16, i32* %18, align 4, !dbg !5161
  %19 = ptrtoint i8* %6 to i32, !dbg !5162
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !5163
  %21 = bitcast i8* %20 to i32*, !dbg !5163
  store i32 %19, i32* %21, align 4, !dbg !5164
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !5165
  %23 = bitcast i8* %22 to i32*, !dbg !5165
  store i32 16777216, i32* %23, align 4, !dbg !5166
  %24 = ptrtoint i8* %8 to i32, !dbg !5167
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !5168
  store i32 %24, i32* %25, align 8, !dbg !5169
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !5170
  store i32 0, i32* %26, align 4, !dbg !5171
  ret void, !dbg !5172
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !5173 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5178, metadata !DIExpression()), !dbg !5184
  call void @llvm.dbg.value(metadata i32 %1, metadata !5179, metadata !DIExpression()), !dbg !5184
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5185
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !5180, metadata !DIExpression()), !dbg !5184
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !5186
  br i1 %4, label %19, label %5, !dbg !5188

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !5183, metadata !DIExpression()), !dbg !5184
  %6 = icmp eq i32 %0, -22, !dbg !5189
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !5189
  %8 = load i32, i32* %7, align 4, !dbg !5189
  br i1 %6, label %16, label %9, !dbg !5191

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !5189
  %11 = icmp ule i32 %10, %0, !dbg !5189
  %12 = icmp ugt i32 %8, %0, !dbg !5189
  %13 = and i1 %12, %11, !dbg !5189
  %14 = icmp ugt i32 %8, %1, !dbg !5189
  %15 = and i1 %14, %13, !dbg !5189
  br i1 %15, label %18, label %19, !dbg !5189

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !5189
  br i1 %17, label %18, label %19, !dbg !5191

18:                                               ; preds = %9, %16
  br label %19, !dbg !5192

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !5184
  ret i32 %20, !dbg !5194
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #8 !dbg !5195 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5199, metadata !DIExpression()), !dbg !5202
  call void @llvm.dbg.value(metadata i8* %1, metadata !5200, metadata !DIExpression()), !dbg !5202
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !5201, metadata !DIExpression()), !dbg !5202
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5203
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #24, !dbg !5204
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !5205, !srcloc !5206
  unreachable, !dbg !5207
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !5208 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5226, metadata !DIExpression()), !dbg !5236
  call void @llvm.dbg.value(metadata i32 %1, metadata !5227, metadata !DIExpression()), !dbg !5236
  call void @llvm.dbg.value(metadata i32 %2, metadata !5228, metadata !DIExpression()), !dbg !5236
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !5229, metadata !DIExpression()), !dbg !5236
  call void @llvm.dbg.value(metadata i32 0, metadata !5230, metadata !DIExpression()), !dbg !5236
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5237
  %9 = and i32 %8, 511, !dbg !5238
  call void @llvm.dbg.value(metadata i32 %9, metadata !5231, metadata !DIExpression()), !dbg !5236
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !5239
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !5239
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !5240
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #23, !dbg !5240
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !5235, metadata !DIExpression()), !dbg !5241
  call void @llvm.dbg.value(metadata i32 0, metadata !5242, metadata !DIExpression()) #23, !dbg !5245
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !5247, !srcloc !5248
  call void @llvm.dbg.value(metadata i8* %6, metadata !5233, metadata !DIExpression(DW_OP_deref)), !dbg !5236
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #25, !dbg !5249
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !5234, metadata !DIExpression()), !dbg !5236
  call void @llvm.dbg.value(metadata i8* %5, metadata !5232, metadata !DIExpression(DW_OP_deref)), !dbg !5236
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #25, !dbg !5250
  call void @llvm.dbg.value(metadata i32 %12, metadata !5230, metadata !DIExpression()), !dbg !5236
  %13 = load i8, i8* %5, align 1, !dbg !5251, !range !5253
  call void @llvm.dbg.value(metadata i8 %13, metadata !5232, metadata !DIExpression()), !dbg !5236
  %14 = icmp eq i8 %13, 0, !dbg !5251
  br i1 %14, label %15, label %32, !dbg !5254

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !5255
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #24, !dbg !5256
  %18 = load i8, i8* %6, align 1, !dbg !5257, !range !5253
  call void @llvm.dbg.value(metadata i8 %18, metadata !5233, metadata !DIExpression()), !dbg !5236
  %19 = icmp eq i8 %18, 0, !dbg !5257
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !5259
  %21 = load i32, i32* %20, align 4, !dbg !5259
  br i1 %19, label %27, label %22, !dbg !5260

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !5261
  %24 = icmp eq i32 %23, 0, !dbg !5264
  br i1 %24, label %25, label %31, !dbg !5265

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !5266
  br label %29, !dbg !5268

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !5269
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !5259
  br label %31, !dbg !5271

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #24, !dbg !5271
  br label %32, !dbg !5272

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #23, !dbg !5272
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !5272
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !5272
  ret void, !dbg !5272
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #3 !dbg !5273 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5278, metadata !DIExpression()), !dbg !5284
  call void @llvm.dbg.value(metadata i32 %1, metadata !5279, metadata !DIExpression()), !dbg !5284
  call void @llvm.dbg.value(metadata i32 %2, metadata !5280, metadata !DIExpression()), !dbg !5284
  call void @llvm.dbg.value(metadata i8* %3, metadata !5281, metadata !DIExpression()), !dbg !5284
  call void @llvm.dbg.value(metadata i8 0, metadata !5282, metadata !DIExpression()), !dbg !5284
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !5283, metadata !DIExpression()), !dbg !5284
  store i8 0, i8* %3, align 1, !dbg !5285
  %5 = icmp ult i32 %2, -16777216, !dbg !5286
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !5288
  br i1 %8, label %16, label %9, !dbg !5288

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !5289
  %11 = icmp eq i32 %10, 0, !dbg !5289
  br i1 %11, label %12, label %13, !dbg !5291

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !5283, metadata !DIExpression()), !dbg !5284
  store i8 1, i8* %3, align 1, !dbg !5294
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !5284
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !5283, metadata !DIExpression()), !dbg !5284
  br label %16, !dbg !5297

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !5284
  ret %struct.__esf* %17, !dbg !5298
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !5299 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5303, metadata !DIExpression()), !dbg !5307
  call void @llvm.dbg.value(metadata i32 %1, metadata !5304, metadata !DIExpression()), !dbg !5307
  call void @llvm.dbg.value(metadata i8* %2, metadata !5305, metadata !DIExpression()), !dbg !5307
  call void @llvm.dbg.value(metadata i32 0, metadata !5306, metadata !DIExpression()), !dbg !5307
  store i8 0, i8* %2, align 1, !dbg !5308
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !5309

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #25, !dbg !5310
  call void @llvm.dbg.value(metadata i32 %5, metadata !5306, metadata !DIExpression()), !dbg !5307
  br label %11, !dbg !5312

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !5313
  call void @llvm.dbg.value(metadata i32 %7, metadata !5306, metadata !DIExpression()), !dbg !5307
  br label %11, !dbg !5314

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !5315
  call void @llvm.dbg.value(metadata i32 0, metadata !5306, metadata !DIExpression()), !dbg !5307
  br label %11, !dbg !5316

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #25, !dbg !5317
  call void @llvm.dbg.value(metadata i32 0, metadata !5306, metadata !DIExpression()), !dbg !5307
  br label %11, !dbg !5318

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #25, !dbg !5319
  br label %11, !dbg !5320

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !5321
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !5322 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5326, metadata !DIExpression()), !dbg !5329
  call void @llvm.dbg.value(metadata i8* %1, metadata !5327, metadata !DIExpression()), !dbg !5329
  call void @llvm.dbg.value(metadata i32 0, metadata !5328, metadata !DIExpression()), !dbg !5329
  store i8 0, i8* %1, align 1, !dbg !5330
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5331
  %4 = and i32 %3, 2, !dbg !5333
  %5 = icmp eq i32 %4, 0, !dbg !5334
  br i1 %5, label %6, label %33, !dbg !5335

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5336
  %8 = icmp sgt i32 %7, -1, !dbg !5338
  br i1 %8, label %9, label %33, !dbg !5339

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5340
  %11 = and i32 %10, 1073741824, !dbg !5342
  %12 = icmp eq i32 %11, 0, !dbg !5343
  br i1 %12, label %33, label %13, !dbg !5344

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #25, !dbg !5345
  br i1 %14, label %15, label %18, !dbg !5348

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5349
  %17 = load i32, i32* %16, align 4, !dbg !5349
  call void @llvm.dbg.value(metadata i32 %17, metadata !5328, metadata !DIExpression()), !dbg !5329
  br label %33, !dbg !5351

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5352
  %20 = and i32 %19, 255, !dbg !5354
  %21 = icmp eq i32 %20, 0, !dbg !5355
  br i1 %21, label %24, label %22, !dbg !5356

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !5357
  call void @llvm.dbg.value(metadata i32 %23, metadata !5328, metadata !DIExpression()), !dbg !5329
  br label %33, !dbg !5359

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5360
  %26 = and i32 %25, 65280, !dbg !5362
  %27 = icmp eq i32 %26, 0, !dbg !5363
  br i1 %27, label %29, label %28, !dbg !5364

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !5365
  call void @llvm.dbg.value(metadata i32 0, metadata !5328, metadata !DIExpression()), !dbg !5329
  br label %33, !dbg !5367

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5368
  %31 = icmp ult i32 %30, 65536, !dbg !5370
  br i1 %31, label %33, label %32, !dbg !5371

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #25, !dbg !5372
  call void @llvm.dbg.value(metadata i32 0, metadata !5328, metadata !DIExpression()), !dbg !5329
  br label %33, !dbg !5374

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !5329
  call void @llvm.dbg.value(metadata i32 %34, metadata !5328, metadata !DIExpression()), !dbg !5329
  ret i32 %34, !dbg !5375
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !5376 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5378, metadata !DIExpression()), !dbg !5391
  call void @llvm.dbg.value(metadata i32 %1, metadata !5379, metadata !DIExpression()), !dbg !5391
  call void @llvm.dbg.value(metadata i8* %2, metadata !5380, metadata !DIExpression()), !dbg !5391
  call void @llvm.dbg.value(metadata i32 0, metadata !5381, metadata !DIExpression()), !dbg !5391
  call void @llvm.dbg.value(metadata i32 -22, metadata !5382, metadata !DIExpression()), !dbg !5391
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5392
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5394
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5396
  %7 = and i32 %6, 2, !dbg !5397
  %8 = icmp eq i32 %7, 0, !dbg !5398
  br i1 %8, label %19, label %9, !dbg !5399

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !5400
  call void @llvm.dbg.value(metadata i32 %10, metadata !5383, metadata !DIExpression()), !dbg !5401
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5402
  %12 = and i32 %11, 128, !dbg !5404
  %13 = icmp eq i32 %12, 0, !dbg !5405
  br i1 %13, label %19, label %14, !dbg !5406

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !5382, metadata !DIExpression()), !dbg !5391
  %15 = icmp eq i32 %1, 0, !dbg !5407
  br i1 %15, label %19, label %16, !dbg !5410

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5411
  %18 = and i32 %17, -129, !dbg !5411
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5411
  br label %19, !dbg !5413

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !5391
  call void @llvm.dbg.value(metadata i32 %20, metadata !5382, metadata !DIExpression()), !dbg !5391
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5414
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5416
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5418
  %24 = and i32 %23, 16, !dbg !5419
  %25 = icmp eq i32 %24, 0, !dbg !5419
  br i1 %25, label %26, label %30, !dbg !5420

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5421
  %28 = and i32 %27, 2, !dbg !5422
  %29 = icmp eq i32 %28, 0, !dbg !5422
  br i1 %29, label %39, label %30, !dbg !5423

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5424
  %32 = and i32 %31, 2048, !dbg !5425
  %33 = icmp eq i32 %32, 0, !dbg !5425
  br i1 %33, label %39, label %34, !dbg !5426

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !5427
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #24, !dbg !5428
  call void @llvm.dbg.value(metadata i32 %36, metadata !5386, metadata !DIExpression()), !dbg !5429
  %37 = icmp eq i32 %36, 0, !dbg !5430
  br i1 %37, label %39, label %38, !dbg !5432

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !5433, metadata !DIExpression()) #23, !dbg !5436
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #23, !dbg !5439, !srcloc !5440
  call void @llvm.dbg.value(metadata i32 2, metadata !5381, metadata !DIExpression()), !dbg !5391
  br label %39, !dbg !5441

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !5391
  call void @llvm.dbg.value(metadata i32 %40, metadata !5381, metadata !DIExpression()), !dbg !5391
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5442
  %42 = and i32 %41, 32, !dbg !5444
  %43 = icmp eq i32 %42, 0, !dbg !5445
  br i1 %43, label %47, label %44, !dbg !5446

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5447
  %46 = and i32 %45, -8193, !dbg !5447
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5447
  br label %47, !dbg !5449

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5450
  %49 = or i32 %48, 255, !dbg !5450
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5450
  store i8 0, i8* %2, align 1, !dbg !5451
  ret i32 %40, !dbg !5452
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !5453 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5457, metadata !DIExpression()), !dbg !5464
  call void @llvm.dbg.value(metadata i32 %0, metadata !5458, metadata !DIExpression()), !dbg !5464
  call void @llvm.dbg.value(metadata i8* %1, metadata !5459, metadata !DIExpression()), !dbg !5464
  call void @llvm.dbg.value(metadata i32 0, metadata !5460, metadata !DIExpression()), !dbg !5464
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5465
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5467
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5469
  %6 = and i32 %5, 512, !dbg !5470
  %7 = icmp eq i32 %6, 0, !dbg !5470
  br i1 %7, label %18, label %8, !dbg !5471

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !5472
  call void @llvm.dbg.value(metadata i32 %9, metadata !5461, metadata !DIExpression()), !dbg !5473
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5474
  %11 = and i32 %10, 32768, !dbg !5476
  %12 = icmp ne i32 %11, 0, !dbg !5477
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !5478
  br i1 %14, label %15, label %18, !dbg !5478

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5479
  %17 = and i32 %16, -32769, !dbg !5479
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5479
  br label %18, !dbg !5483

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5484
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5486
  %21 = and i32 %20, 256, !dbg !5488
  %22 = icmp eq i32 %21, 0, !dbg !5489
  br i1 %22, label %23, label %25, !dbg !5490

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5491
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5493
  %27 = or i32 %26, 65280, !dbg !5493
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5493
  store i8 0, i8* %1, align 1, !dbg !5494
  ret void, !dbg !5495
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #13 !dbg !5496 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5502, metadata !DIExpression()), !dbg !5504
  call void @llvm.dbg.value(metadata i32 0, metadata !5503, metadata !DIExpression()), !dbg !5504
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5505
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5507
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5509
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5511
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5513
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5515
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5517
  %8 = or i32 %7, -65536, !dbg !5517
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5517
  ret void, !dbg !5518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !5519 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5523, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata i8* %0, metadata !5524, metadata !DIExpression()), !dbg !5525
  store i8 0, i8* %0, align 1, !dbg !5526
  ret void, !dbg !5527
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !5528 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5532, metadata !DIExpression()), !dbg !5535
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !5536
  %3 = load i32, i32* %2, align 4, !dbg !5536
  %4 = inttoptr i32 %3 to i16*, !dbg !5537
  call void @llvm.dbg.value(metadata i16* %4, metadata !5533, metadata !DIExpression()), !dbg !5535
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5538
  %6 = or i32 %5, 256, !dbg !5538
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5538
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5539, !srcloc !5542
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5543, !srcloc !5546
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !5547
  %8 = load i16, i16* %7, align 2, !dbg !5548
  call void @llvm.dbg.value(metadata i16 %8, metadata !5534, metadata !DIExpression()), !dbg !5535
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5549
  %10 = and i32 %9, -257, !dbg !5549
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5549
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5550, !srcloc !5542
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5552, !srcloc !5546
  %11 = icmp eq i16 %8, -8446, !dbg !5554
  ret i1 %11, !dbg !5556
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #13 !dbg !5557 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5558
  %2 = or i32 %1, 16, !dbg !5558
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5558
  ret void, !dbg !5559
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #13 !dbg !5560 {
  call void @llvm.dbg.value(metadata i32 0, metadata !5563, metadata !DIExpression()), !dbg !5564
  br label %1, !dbg !5565

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !5563, metadata !DIExpression()), !dbg !5564
  tail call fastcc void @__NVIC_SetPriority.13(i32 noundef %2) #25, !dbg !5567
  %3 = add nuw nsw i32 %2, 1, !dbg !5570
  call void @llvm.dbg.value(metadata i32 %3, metadata !5563, metadata !DIExpression()), !dbg !5564
  %4 = icmp eq i32 %3, 82, !dbg !5571
  br i1 %4, label %5, label %1, !dbg !5565, !llvm.loop !5572

5:                                                ; preds = %1
  ret void, !dbg !5574
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.13(i32 noundef %0) unnamed_addr #13 !dbg !5575 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5577, metadata !DIExpression()), !dbg !5579
  call void @llvm.dbg.value(metadata i32 1, metadata !5578, metadata !DIExpression()), !dbg !5579
  %2 = and i32 %0, 15, !dbg !5580
  %3 = add nsw i32 %2, -4, !dbg !5580
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !5580
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5580
  %6 = icmp slt i32 %0, 0, !dbg !5580
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !5580
  store volatile i8 16, i8* %7, align 1, !dbg !5581
  ret void, !dbg !5583
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !5584 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5690, metadata !DIExpression()), !dbg !5691
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5692
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !5694
  br i1 %3, label %4, label %12, !dbg !5695

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !5696, !srcloc !5708
  call void @llvm.dbg.value(metadata i32 %5, metadata !5699, metadata !DIExpression()) #23, !dbg !5709
  %6 = icmp eq i32 %5, 0, !dbg !5710
  br i1 %6, label %12, label %7, !dbg !5711

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5712
  %9 = or i32 %8, 268435456, !dbg !5712
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5712
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5714
  %11 = and i32 %10, -32769, !dbg !5714
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5714
  br label %12, !dbg !5715

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !5716
  ret void, !dbg !5717
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !5718 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #24, !dbg !5719
  ret void, !dbg !5720
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !357 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !481, metadata !DIExpression()), !dbg !5721
  call void @llvm.dbg.value(metadata i8 0, metadata !482, metadata !DIExpression()), !dbg !5721
  call void @llvm.dbg.value(metadata i32 64, metadata !484, metadata !DIExpression()), !dbg !5721
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !5722
  %3 = load i32, i32* %2, align 4, !dbg !5722
  %4 = add i32 %3, -64, !dbg !5724
  call void @llvm.dbg.value(metadata i32 %4, metadata !483, metadata !DIExpression()), !dbg !5721
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !5725
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !5726
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !5727
  call void @llvm.dbg.value(metadata i8 1, metadata !482, metadata !DIExpression()), !dbg !5721
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #24, !dbg !5728
  ret void, !dbg !5729
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !5730 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !5731
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5732, !srcloc !5735
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5736, !srcloc !5739
  ret void, !dbg !5740
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !5741 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !5742, !srcloc !5745
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !5746
  ret void, !dbg !5747
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #15 !dbg !5748 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5763, metadata !DIExpression()), !dbg !5767
  call void @llvm.dbg.value(metadata i8 %1, metadata !5764, metadata !DIExpression()), !dbg !5767
  call void @llvm.dbg.value(metadata i32 %2, metadata !5765, metadata !DIExpression()), !dbg !5767
  call void @llvm.dbg.value(metadata i32 %3, metadata !5766, metadata !DIExpression()), !dbg !5767
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !5768
  ret void, !dbg !5770
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !5771 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5776, metadata !DIExpression()), !dbg !5781
  call void @llvm.dbg.value(metadata i8 %1, metadata !5777, metadata !DIExpression()), !dbg !5781
  call void @llvm.dbg.value(metadata i32 undef, metadata !5778, metadata !DIExpression()), !dbg !5781
  call void @llvm.dbg.value(metadata i32 undef, metadata !5779, metadata !DIExpression()), !dbg !5781
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !5782
  call void @llvm.dbg.value(metadata i8 %3, metadata !5780, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5781
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #25, !dbg !5783
  call void @llvm.dbg.value(metadata i32 %4, metadata !5780, metadata !DIExpression()), !dbg !5781
  %5 = trunc i32 %4 to i8, !dbg !5784
  store i8 %5, i8* @static_regions_num, align 1, !dbg !5785
  ret void, !dbg !5786
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #15 !dbg !5787 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5791, metadata !DIExpression()), !dbg !5797
  call void @llvm.dbg.value(metadata i8 %1, metadata !5792, metadata !DIExpression()), !dbg !5797
  call void @llvm.dbg.value(metadata i8 %2, metadata !5793, metadata !DIExpression()), !dbg !5797
  call void @llvm.dbg.value(metadata i1 %3, metadata !5794, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5797
  %5 = zext i8 %2 to i32, !dbg !5798
  call void @llvm.dbg.value(metadata i32 %5, metadata !5796, metadata !DIExpression()), !dbg !5797
  call void @llvm.dbg.value(metadata i32 0, metadata !5795, metadata !DIExpression()), !dbg !5797
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !5796, metadata !DIExpression()), !dbg !5797
  call void @llvm.dbg.value(metadata i32 0, metadata !5795, metadata !DIExpression()), !dbg !5797
  %7 = icmp eq i8 %1, 0, !dbg !5799
  br i1 %7, label %29, label %8, !dbg !5802

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5796, metadata !DIExpression()), !dbg !5797
  call void @llvm.dbg.value(metadata i32 %10, metadata !5795, metadata !DIExpression()), !dbg !5797
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !5803
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !5806
  %13 = load i32, i32* %12, align 4, !dbg !5806
  %14 = icmp eq i32 %13, 0, !dbg !5807
  br i1 %14, label %25, label %15, !dbg !5808

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !5809

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !5811
  %18 = icmp eq i32 %17, 0, !dbg !5811
  br i1 %18, label %29, label %19, !dbg !5812

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !5813
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !5814
  call void @llvm.dbg.value(metadata i32 %21, metadata !5796, metadata !DIExpression()), !dbg !5797
  %22 = icmp eq i32 %21, -22, !dbg !5815
  br i1 %22, label %29, label %23, !dbg !5817

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !5818
  call void @llvm.dbg.value(metadata i32 %24, metadata !5796, metadata !DIExpression()), !dbg !5797
  br label %25, !dbg !5819

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !5797
  call void @llvm.dbg.value(metadata i32 %26, metadata !5796, metadata !DIExpression()), !dbg !5797
  %27 = add nuw nsw i32 %10, 1, !dbg !5820
  call void @llvm.dbg.value(metadata i32 %27, metadata !5795, metadata !DIExpression()), !dbg !5797
  %28 = icmp eq i32 %27, %6, !dbg !5799
  br i1 %28, label %29, label %8, !dbg !5802, !llvm.loop !5821

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !5797
  ret i32 %30, !dbg !5823
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !5824 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5828, metadata !DIExpression()), !dbg !5830
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !5831
  %3 = load i32, i32* %2, align 4, !dbg !5831
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !5832, !range !5833
  %5 = icmp ult i32 %4, 2, !dbg !5832
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !5834
  br i1 %7, label %8, label %15, !dbg !5834

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !5835
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !5836
  %11 = load i32, i32* %10, align 4, !dbg !5836
  %12 = and i32 %11, %9, !dbg !5837
  %13 = icmp eq i32 %12, 0, !dbg !5838
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !5829, metadata !DIExpression()), !dbg !5830
  ret i32 %16, !dbg !5839
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #15 !dbg !5840 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !5844, metadata !DIExpression()), !dbg !5847
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !5845, metadata !DIExpression()), !dbg !5847
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !5848
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !5848
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !5846, metadata !DIExpression()), !dbg !5849
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !5850
  %6 = load i32, i32* %5, align 4, !dbg !5850
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !5851
  store i32 %6, i32* %7, align 4, !dbg !5852
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !5853
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !5854
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !5855
  %11 = load i32, i32* %10, align 4, !dbg !5855
  call fastcc void @get_region_attr_from_mpu_partition_info(%union.anon.1* noundef nonnull %8, %union.anon.1* noundef nonnull %9, i32 noundef %11) #25, !dbg !5856
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #25, !dbg !5857
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !5858
  ret i32 %12, !dbg !5859
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%union.anon.1* nocapture noundef writeonly %0, %union.anon.1* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !5860 {
  call void @llvm.dbg.value(metadata %union.anon.1* %0, metadata !5867, metadata !DIExpression()), !dbg !5871
  call void @llvm.dbg.value(metadata %union.anon.1* %1, metadata !5868, metadata !DIExpression()), !dbg !5871
  call void @llvm.dbg.value(metadata i32 undef, metadata !5869, metadata !DIExpression()), !dbg !5871
  call void @llvm.dbg.value(metadata i32 %2, metadata !5870, metadata !DIExpression()), !dbg !5871
  %4 = getelementptr inbounds %union.anon.1, %union.anon.1* %1, i32 0, i32 0, !dbg !5872
  %5 = load i32, i32* %4, align 4, !dbg !5872
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #25, !dbg !5873
  %7 = or i32 %6, %5, !dbg !5874
  %8 = getelementptr inbounds %union.anon.1, %union.anon.1* %0, i32 0, i32 0, !dbg !5875
  store i32 %7, i32* %8, align 4, !dbg !5876
  ret void, !dbg !5877
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #13 !dbg !5878 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5882, metadata !DIExpression()), !dbg !5884
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !5883, metadata !DIExpression()), !dbg !5884
  %3 = zext i8 %0 to i32, !dbg !5885
  %4 = icmp ugt i8 %0, 7, !dbg !5887
  br i1 %4, label %6, label %5, !dbg !5888

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #25, !dbg !5889
  br label %6, !dbg !5890

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !5884
  ret i32 %7, !dbg !5891
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #13 !dbg !5892 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5896, metadata !DIExpression()), !dbg !5898
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !5897, metadata !DIExpression()), !dbg !5898
  tail call fastcc void @set_region_number(i32 noundef %0) #25, !dbg !5899
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !5900
  %4 = load i32, i32* %3, align 4, !dbg !5900
  %5 = and i32 %4, -32, !dbg !5901
  %6 = or i32 %5, %0, !dbg !5902
  %7 = or i32 %6, 16, !dbg !5902
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !5903
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !5904
  %9 = load i32, i32* %8, align 4, !dbg !5904
  %10 = or i32 %9, 1, !dbg !5905
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !5906
  ret void, !dbg !5907
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #13 !dbg !5908 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5911, metadata !DIExpression()), !dbg !5912
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !5913
  ret void, !dbg !5914
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !5915 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5919, metadata !DIExpression()), !dbg !5920
  %2 = icmp ult i32 %0, 33, !dbg !5921
  br i1 %2, label %11, label %3, !dbg !5923

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !5924
  br i1 %4, label %11, label %5, !dbg !5926

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !5927
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !5928, !range !5833
  %8 = mul nsw i32 %7, -2, !dbg !5929
  %9 = add nsw i32 %8, 62, !dbg !5929
  %10 = and i32 %9, 62, !dbg !5930
  br label %11, !dbg !5931

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !5920
  ret i32 %12, !dbg !5932
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #15 !dbg !5933 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5937, metadata !DIExpression()), !dbg !5939
  call void @llvm.dbg.value(metadata i8 %1, metadata !5938, metadata !DIExpression()), !dbg !5939
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !5940
  ret void, !dbg !5942
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !5943 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5947, metadata !DIExpression()), !dbg !5954
  call void @llvm.dbg.value(metadata i8 %1, metadata !5948, metadata !DIExpression()), !dbg !5954
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !5955
  call void @llvm.dbg.value(metadata i8 %3, metadata !5949, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5954
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #25, !dbg !5956
  call void @llvm.dbg.value(metadata i32 %4, metadata !5949, metadata !DIExpression()), !dbg !5954
  %5 = icmp ne i32 %4, -22, !dbg !5957
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !5958
  call void @llvm.dbg.value(metadata i32 %4, metadata !5950, metadata !DIExpression()), !dbg !5959
  br i1 %7, label %8, label %12, !dbg !5958

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5950, metadata !DIExpression()), !dbg !5959
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #25, !dbg !5960
  %10 = add i32 %9, 1, !dbg !5963
  call void @llvm.dbg.value(metadata i32 %10, metadata !5950, metadata !DIExpression()), !dbg !5959
  %11 = icmp eq i32 %10, 8, !dbg !5964
  br i1 %11, label %12, label %8, !dbg !5965, !llvm.loop !5966

12:                                               ; preds = %8, %2
  ret void, !dbg !5968
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #13 !dbg !5969 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5972, metadata !DIExpression()), !dbg !5973
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !5974
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !5975
  ret void, !dbg !5976
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !5977 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !5982
  %2 = icmp ugt i32 %1, 8, !dbg !5984
  br i1 %2, label %14, label %3, !dbg !5985

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #25, !dbg !5986
  call void @llvm.dbg.value(metadata i32 0, metadata !5981, metadata !DIExpression()), !dbg !5987
  %4 = icmp eq i32 %1, 0, !dbg !5988
  br i1 %4, label %12, label %5, !dbg !5991

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !5991

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !5981, metadata !DIExpression()), !dbg !5987
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !5992
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #25, !dbg !5994
  %10 = add nuw i32 %8, 1, !dbg !5995
  call void @llvm.dbg.value(metadata i32 %10, metadata !5981, metadata !DIExpression()), !dbg !5987
  %11 = icmp eq i32 %10, %1, !dbg !5988
  br i1 %11, label %12, label %7, !dbg !5991, !llvm.loop !5996

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !5998
  store i8 %13, i8* @static_regions_num, align 1, !dbg !5999
  tail call void @arm_core_mpu_enable() #25, !dbg !6000
  br label %14, !dbg !6001

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !5987
  ret i32 %15, !dbg !6002
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !6003 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6010, metadata !DIExpression()), !dbg !6013
  call void @llvm.dbg.value(metadata i8* %1, metadata !6011, metadata !DIExpression()), !dbg !6013
  call void @llvm.dbg.value(metadata i8* %0, metadata !6012, metadata !DIExpression()), !dbg !6013
  %3 = load i8, i8* %1, align 1, !dbg !6014
  %4 = icmp eq i8 %3, 0, !dbg !6015
  br i1 %4, label %13, label %5, !dbg !6016

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !6010, metadata !DIExpression()), !dbg !6013
  call void @llvm.dbg.value(metadata i8* %8, metadata !6011, metadata !DIExpression()), !dbg !6013
  store i8 %6, i8* %7, align 1, !dbg !6017
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6019
  call void @llvm.dbg.value(metadata i8* %9, metadata !6010, metadata !DIExpression()), !dbg !6013
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6020
  call void @llvm.dbg.value(metadata i8* %10, metadata !6011, metadata !DIExpression()), !dbg !6013
  %11 = load i8, i8* %10, align 1, !dbg !6014
  %12 = icmp eq i8 %11, 0, !dbg !6015
  br i1 %12, label %13, label %5, !dbg !6016, !llvm.loop !6021

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !6023
  ret i8* %0, !dbg !6024
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6025 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6029, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i8* %1, metadata !6030, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i32 %2, metadata !6031, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i8* %0, metadata !6032, metadata !DIExpression()), !dbg !6033
  %4 = icmp eq i32 %2, 0, !dbg !6034
  br i1 %4, label %22, label %5, !dbg !6035

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6029, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i32 %7, metadata !6031, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i8* %8, metadata !6030, metadata !DIExpression()), !dbg !6033
  %9 = load i8, i8* %8, align 1, !dbg !6036
  %10 = icmp eq i8 %9, 0, !dbg !6037
  br i1 %10, label %16, label %11, !dbg !6038

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !6039
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6041
  call void @llvm.dbg.value(metadata i8* %12, metadata !6030, metadata !DIExpression()), !dbg !6033
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6042
  call void @llvm.dbg.value(metadata i8* %13, metadata !6029, metadata !DIExpression()), !dbg !6033
  %14 = add i32 %7, -1, !dbg !6043
  call void @llvm.dbg.value(metadata i32 %14, metadata !6031, metadata !DIExpression()), !dbg !6033
  %15 = icmp eq i32 %14, 0, !dbg !6034
  br i1 %15, label %22, label %5, !dbg !6035, !llvm.loop !6044

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !6029, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i32 %18, metadata !6031, metadata !DIExpression()), !dbg !6033
  store i8 0, i8* %17, align 1, !dbg !6046
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6048
  call void @llvm.dbg.value(metadata i8* %19, metadata !6029, metadata !DIExpression()), !dbg !6033
  %20 = add i32 %18, -1, !dbg !6049
  call void @llvm.dbg.value(metadata i32 %20, metadata !6031, metadata !DIExpression()), !dbg !6033
  %21 = icmp eq i32 %20, 0, !dbg !6050
  br i1 %21, label %22, label %16, !dbg !6051, !llvm.loop !6052

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !6054
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !6055 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6059, metadata !DIExpression()), !dbg !6062
  call void @llvm.dbg.value(metadata i32 %1, metadata !6060, metadata !DIExpression()), !dbg !6062
  call void @llvm.dbg.value(metadata i32 %1, metadata !6061, metadata !DIExpression()), !dbg !6062
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6063

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !6059, metadata !DIExpression()), !dbg !6062
  %6 = load i8, i8* %5, align 1, !dbg !6064
  %7 = icmp eq i8 %6, %3, !dbg !6065
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !6066
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6067
  call void @llvm.dbg.value(metadata i8* %10, metadata !6059, metadata !DIExpression()), !dbg !6062
  br i1 %9, label %11, label %4, !dbg !6066, !llvm.loop !6069

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !6071
  ret i8* %12, !dbg !6072
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !6073 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6075, metadata !DIExpression()), !dbg !6078
  call void @llvm.dbg.value(metadata i32 %1, metadata !6076, metadata !DIExpression()), !dbg !6078
  call void @llvm.dbg.value(metadata i8* null, metadata !6077, metadata !DIExpression()), !dbg !6078
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6079

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !6078
  call void @llvm.dbg.value(metadata i8* %6, metadata !6077, metadata !DIExpression()), !dbg !6078
  call void @llvm.dbg.value(metadata i8* %5, metadata !6075, metadata !DIExpression()), !dbg !6078
  %7 = load i8, i8* %5, align 1, !dbg !6080
  %8 = icmp eq i8 %7, %3, !dbg !6083
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !6084
  call void @llvm.dbg.value(metadata i8* %9, metadata !6077, metadata !DIExpression()), !dbg !6078
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6085
  call void @llvm.dbg.value(metadata i8* %10, metadata !6075, metadata !DIExpression()), !dbg !6078
  %11 = icmp eq i8 %7, 0, !dbg !6086
  br i1 %11, label %12, label %4, !dbg !6086, !llvm.loop !6087

12:                                               ; preds = %4
  ret i8* %9, !dbg !6089
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #18 !dbg !6090 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6094, metadata !DIExpression()), !dbg !6096
  call void @llvm.dbg.value(metadata i32 0, metadata !6095, metadata !DIExpression()), !dbg !6096
  %2 = load i8, i8* %0, align 1, !dbg !6097
  %3 = icmp eq i8 %2, 0, !dbg !6098
  br i1 %3, label %11, label %4, !dbg !6099

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6095, metadata !DIExpression()), !dbg !6096
  call void @llvm.dbg.value(metadata i8* %6, metadata !6094, metadata !DIExpression()), !dbg !6096
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6100
  call void @llvm.dbg.value(metadata i8* %7, metadata !6094, metadata !DIExpression()), !dbg !6096
  %8 = add i32 %5, 1, !dbg !6102
  call void @llvm.dbg.value(metadata i32 %8, metadata !6095, metadata !DIExpression()), !dbg !6096
  %9 = load i8, i8* %7, align 1, !dbg !6097
  %10 = icmp eq i8 %9, 0, !dbg !6098
  br i1 %10, label %11, label %4, !dbg !6099, !llvm.loop !6103

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !6096
  ret i32 %12, !dbg !6105
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !6106 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6110, metadata !DIExpression()), !dbg !6113
  call void @llvm.dbg.value(metadata i32 %1, metadata !6111, metadata !DIExpression()), !dbg !6113
  call void @llvm.dbg.value(metadata i32 0, metadata !6112, metadata !DIExpression()), !dbg !6113
  %3 = load i8, i8* %0, align 1, !dbg !6114
  %4 = icmp ne i8 %3, 0, !dbg !6115
  %5 = icmp ne i32 %1, 0, !dbg !6116
  %6 = and i1 %4, %5, !dbg !6116
  br i1 %6, label %7, label %16, !dbg !6117

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6112, metadata !DIExpression()), !dbg !6113
  call void @llvm.dbg.value(metadata i8* %9, metadata !6110, metadata !DIExpression()), !dbg !6113
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6118
  call void @llvm.dbg.value(metadata i8* %10, metadata !6110, metadata !DIExpression()), !dbg !6113
  %11 = add nuw i32 %8, 1, !dbg !6120
  call void @llvm.dbg.value(metadata i32 %11, metadata !6112, metadata !DIExpression()), !dbg !6113
  %12 = load i8, i8* %10, align 1, !dbg !6114
  %13 = icmp ne i8 %12, 0, !dbg !6115
  %14 = icmp ult i32 %11, %1, !dbg !6116
  %15 = select i1 %13, i1 %14, i1 false, !dbg !6116
  br i1 %15, label %7, label %16, !dbg !6117, !llvm.loop !6121

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !6113
  ret i32 %17, !dbg !6123
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #18 !dbg !6124 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6128, metadata !DIExpression()), !dbg !6130
  call void @llvm.dbg.value(metadata i8* %1, metadata !6129, metadata !DIExpression()), !dbg !6130
  %3 = load i8, i8* %0, align 1, !dbg !6131
  %4 = load i8, i8* %1, align 1, !dbg !6132
  %5 = icmp ne i8 %3, %4, !dbg !6133
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !6134
  br i1 %7, label %18, label %8, !dbg !6134

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6129, metadata !DIExpression()), !dbg !6130
  call void @llvm.dbg.value(metadata i8* %10, metadata !6128, metadata !DIExpression()), !dbg !6130
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6135
  call void @llvm.dbg.value(metadata i8* %11, metadata !6128, metadata !DIExpression()), !dbg !6130
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6137
  call void @llvm.dbg.value(metadata i8* %12, metadata !6129, metadata !DIExpression()), !dbg !6130
  %13 = load i8, i8* %11, align 1, !dbg !6131
  %14 = load i8, i8* %12, align 1, !dbg !6132
  %15 = icmp ne i8 %13, %14, !dbg !6133
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !6134
  br i1 %17, label %18, label %8, !dbg !6134, !llvm.loop !6138

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !6131
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !6132
  %21 = zext i8 %19 to i32, !dbg !6141
  %22 = zext i8 %20 to i32, !dbg !6142
  %23 = sub nsw i32 %21, %22, !dbg !6143
  ret i32 %23, !dbg !6144
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6145 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6149, metadata !DIExpression()), !dbg !6152
  call void @llvm.dbg.value(metadata i8* %1, metadata !6150, metadata !DIExpression()), !dbg !6152
  call void @llvm.dbg.value(metadata i32 %2, metadata !6151, metadata !DIExpression()), !dbg !6152
  %4 = icmp eq i32 %2, 0, !dbg !6153
  br i1 %4, label %23, label %5, !dbg !6153

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !6151, metadata !DIExpression()), !dbg !6152
  call void @llvm.dbg.value(metadata i8* %7, metadata !6150, metadata !DIExpression()), !dbg !6152
  call void @llvm.dbg.value(metadata i8* %8, metadata !6149, metadata !DIExpression()), !dbg !6152
  %9 = load i8, i8* %8, align 1, !dbg !6154
  %10 = load i8, i8* %7, align 1, !dbg !6155
  %11 = icmp ne i8 %9, %10, !dbg !6156
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !6157
  br i1 %13, label %19, label %14, !dbg !6157

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6158
  call void @llvm.dbg.value(metadata i8* %15, metadata !6149, metadata !DIExpression()), !dbg !6152
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6160
  call void @llvm.dbg.value(metadata i8* %16, metadata !6150, metadata !DIExpression()), !dbg !6152
  %17 = add i32 %6, -1, !dbg !6161
  call void @llvm.dbg.value(metadata i32 %17, metadata !6151, metadata !DIExpression()), !dbg !6152
  %18 = icmp eq i32 %17, 0, !dbg !6153
  br i1 %18, label %23, label %5, !dbg !6153, !llvm.loop !6162

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !6165
  %21 = zext i8 %10 to i32, !dbg !6166
  %22 = sub nsw i32 %20, %21, !dbg !6167
  br label %23, !dbg !6168

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !6168
  ret i32 %24, !dbg !6169
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #11 !dbg !6170 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6175, metadata !DIExpression()), !dbg !6180
  call void @llvm.dbg.value(metadata i8* %1, metadata !6176, metadata !DIExpression()), !dbg !6180
  call void @llvm.dbg.value(metadata i8** %2, metadata !6177, metadata !DIExpression()), !dbg !6180
  %4 = icmp eq i8* %0, null, !dbg !6181
  br i1 %4, label %5, label %7, !dbg !6181

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !6182
  br label %7, !dbg !6181

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !6181
  call void @llvm.dbg.value(metadata i8* %8, metadata !6178, metadata !DIExpression()), !dbg !6180
  %9 = load i8, i8* %8, align 1, !dbg !6183
  %10 = icmp eq i8 %9, 0, !dbg !6183
  br i1 %10, label %33, label %11, !dbg !6184

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6178, metadata !DIExpression()), !dbg !6180
  %14 = zext i8 %12 to i32, !dbg !6183
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #25, !dbg !6185
  %16 = icmp eq i8* %15, null, !dbg !6184
  br i1 %16, label %21, label %17, !dbg !6186

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6187
  call void @llvm.dbg.value(metadata i8* %18, metadata !6178, metadata !DIExpression()), !dbg !6180
  %19 = load i8, i8* %18, align 1, !dbg !6183
  %20 = icmp eq i8 %19, 0, !dbg !6183
  br i1 %20, label %33, label %11, !dbg !6184, !llvm.loop !6189

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !6179, metadata !DIExpression()), !dbg !6180
  %24 = zext i8 %22 to i32, !dbg !6191
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #25, !dbg !6192
  %26 = icmp eq i8* %25, null, !dbg !6193
  br i1 %26, label %27, label %31, !dbg !6194

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6195
  call void @llvm.dbg.value(metadata i8* %28, metadata !6179, metadata !DIExpression()), !dbg !6180
  %29 = load i8, i8* %28, align 1, !dbg !6191
  %30 = icmp eq i8 %29, 0, !dbg !6191
  br i1 %30, label %33, label %21, !dbg !6197, !llvm.loop !6198

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !6200
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6203
  br label %33, !dbg !6204

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !6180
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !6180
  store i8* %34, i8** %2, align 4, !dbg !6180
  ret i8* %35, !dbg !6205
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !6206 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6208, metadata !DIExpression()), !dbg !6210
  call void @llvm.dbg.value(metadata i8* %1, metadata !6209, metadata !DIExpression()), !dbg !6210
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !6211
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !6212
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #25, !dbg !6213
  ret i8* %0, !dbg !6214
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6215 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6217, metadata !DIExpression()), !dbg !6222
  call void @llvm.dbg.value(metadata i8* %1, metadata !6218, metadata !DIExpression()), !dbg !6222
  call void @llvm.dbg.value(metadata i32 %2, metadata !6219, metadata !DIExpression()), !dbg !6222
  call void @llvm.dbg.value(metadata i8* %0, metadata !6220, metadata !DIExpression()), !dbg !6222
  %4 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !6223
  call void @llvm.dbg.value(metadata i32 %4, metadata !6221, metadata !DIExpression()), !dbg !6222
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !6224
  call void @llvm.dbg.value(metadata i8* %5, metadata !6217, metadata !DIExpression()), !dbg !6222
  call void @llvm.dbg.value(metadata i8* %1, metadata !6218, metadata !DIExpression()), !dbg !6222
  call void @llvm.dbg.value(metadata i32 %2, metadata !6219, metadata !DIExpression()), !dbg !6222
  call void @llvm.dbg.value(metadata i32 %2, metadata !6219, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6222
  %6 = icmp eq i32 %2, 0, !dbg !6225
  br i1 %6, label %18, label %7, !dbg !6226

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !6227
  call void @llvm.dbg.value(metadata i8* %9, metadata !6217, metadata !DIExpression()), !dbg !6222
  call void @llvm.dbg.value(metadata i8* %10, metadata !6218, metadata !DIExpression()), !dbg !6222
  %12 = load i8, i8* %10, align 1, !dbg !6228
  %13 = icmp eq i8 %12, 0, !dbg !6229
  br i1 %13, label %18, label %14, !dbg !6230

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6231
  call void @llvm.dbg.value(metadata i8* %15, metadata !6218, metadata !DIExpression()), !dbg !6222
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6233
  call void @llvm.dbg.value(metadata i8* %16, metadata !6217, metadata !DIExpression()), !dbg !6222
  store i8 %12, i8* %9, align 1, !dbg !6234
  call void @llvm.dbg.value(metadata i32 %11, metadata !6219, metadata !DIExpression()), !dbg !6222
  call void @llvm.dbg.value(metadata i32 %11, metadata !6219, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6222
  %17 = icmp eq i32 %11, 0, !dbg !6225
  br i1 %17, label %18, label %7, !dbg !6226, !llvm.loop !6235

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !6222
  store i8 0, i8* %19, align 1, !dbg !6237
  ret i8* %0, !dbg !6238
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6239 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6243, metadata !DIExpression()), !dbg !6248
  call void @llvm.dbg.value(metadata i8* %1, metadata !6244, metadata !DIExpression()), !dbg !6248
  call void @llvm.dbg.value(metadata i32 %2, metadata !6245, metadata !DIExpression()), !dbg !6248
  call void @llvm.dbg.value(metadata i8* %0, metadata !6246, metadata !DIExpression()), !dbg !6248
  call void @llvm.dbg.value(metadata i8* %1, metadata !6247, metadata !DIExpression()), !dbg !6248
  %4 = icmp eq i32 %2, 0, !dbg !6249
  br i1 %4, label %31, label %5, !dbg !6251

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6247, metadata !DIExpression()), !dbg !6248
  call void @llvm.dbg.value(metadata i8* %0, metadata !6246, metadata !DIExpression()), !dbg !6248
  call void @llvm.dbg.value(metadata i32 %2, metadata !6245, metadata !DIExpression()), !dbg !6248
  %6 = add i32 %2, -1, !dbg !6252
  call void @llvm.dbg.value(metadata i32 %6, metadata !6245, metadata !DIExpression()), !dbg !6248
  %7 = icmp eq i32 %6, 0, !dbg !6253
  br i1 %7, label %23, label %8, !dbg !6254

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !6255
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !6255
  br label %11, !dbg !6255

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6247, metadata !DIExpression()), !dbg !6248
  call void @llvm.dbg.value(metadata i8* %14, metadata !6246, metadata !DIExpression()), !dbg !6248
  %15 = load i8, i8* %14, align 1, !dbg !6256
  %16 = load i8, i8* %13, align 1, !dbg !6257
  %17 = icmp eq i8 %15, %16, !dbg !6258
  br i1 %17, label %18, label %23, !dbg !6255

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6259
  call void @llvm.dbg.value(metadata i8* %19, metadata !6246, metadata !DIExpression()), !dbg !6248
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6261
  call void @llvm.dbg.value(metadata i8* %20, metadata !6247, metadata !DIExpression()), !dbg !6248
  call void @llvm.dbg.value(metadata i32 %12, metadata !6245, metadata !DIExpression()), !dbg !6248
  %21 = add i32 %12, -1, !dbg !6252
  call void @llvm.dbg.value(metadata i32 %21, metadata !6245, metadata !DIExpression()), !dbg !6248
  %22 = icmp eq i32 %21, 0, !dbg !6253
  br i1 %22, label %23, label %11, !dbg !6254, !llvm.loop !6262

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !6248
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !6248
  %26 = load i8, i8* %24, align 1, !dbg !6264
  %27 = zext i8 %26 to i32, !dbg !6264
  %28 = load i8, i8* %25, align 1, !dbg !6265
  %29 = zext i8 %28 to i32, !dbg !6265
  %30 = sub nsw i32 %27, %29, !dbg !6266
  br label %31, !dbg !6267

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !6248
  ret i32 %32, !dbg !6268
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6269 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6273, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i8* %1, metadata !6274, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i32 %2, metadata !6275, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i8* %0, metadata !6276, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i8* %1, metadata !6277, metadata !DIExpression()), !dbg !6278
  %4 = ptrtoint i8* %0 to i32, !dbg !6279
  %5 = ptrtoint i8* %1 to i32, !dbg !6279
  %6 = sub i32 %4, %5, !dbg !6279
  %7 = icmp ult i32 %6, %2, !dbg !6281
  br i1 %7, label %10, label %8, !dbg !6282

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6277, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i8* %0, metadata !6276, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i32 %2, metadata !6275, metadata !DIExpression()), !dbg !6278
  %9 = icmp eq i32 %2, 0, !dbg !6283
  br i1 %9, label %26, label %17, !dbg !6285

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6275, metadata !DIExpression()), !dbg !6278
  %12 = add i32 %11, -1, !dbg !6286
  call void @llvm.dbg.value(metadata i32 %12, metadata !6275, metadata !DIExpression()), !dbg !6278
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !6289
  %14 = load i8, i8* %13, align 1, !dbg !6289
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !6290
  store i8 %14, i8* %15, align 1, !dbg !6291
  %16 = icmp eq i32 %12, 0, !dbg !6292
  br i1 %16, label %26, label %10, !dbg !6293, !llvm.loop !6294

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !6277, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i8* %19, metadata !6276, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i32 %20, metadata !6275, metadata !DIExpression()), !dbg !6278
  %21 = load i8, i8* %18, align 1, !dbg !6296
  store i8 %21, i8* %19, align 1, !dbg !6298
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !6299
  call void @llvm.dbg.value(metadata i8* %22, metadata !6276, metadata !DIExpression()), !dbg !6278
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !6300
  call void @llvm.dbg.value(metadata i8* %23, metadata !6277, metadata !DIExpression()), !dbg !6278
  %24 = add i32 %20, -1, !dbg !6301
  call void @llvm.dbg.value(metadata i32 %24, metadata !6275, metadata !DIExpression()), !dbg !6278
  %25 = icmp eq i32 %24, 0, !dbg !6283
  br i1 %25, label %26, label %17, !dbg !6285, !llvm.loop !6302

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !6304
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6305 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6311, metadata !DIExpression()), !dbg !6316
  call void @llvm.dbg.value(metadata i8* %1, metadata !6312, metadata !DIExpression()), !dbg !6316
  call void @llvm.dbg.value(metadata i32 %2, metadata !6313, metadata !DIExpression()), !dbg !6316
  call void @llvm.dbg.value(metadata i8* %0, metadata !6314, metadata !DIExpression()), !dbg !6316
  call void @llvm.dbg.value(metadata i8* %1, metadata !6315, metadata !DIExpression()), !dbg !6316
  %4 = icmp eq i32 %2, 0, !dbg !6317
  br i1 %4, label %14, label %5, !dbg !6318

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6315, metadata !DIExpression()), !dbg !6316
  call void @llvm.dbg.value(metadata i8* %7, metadata !6314, metadata !DIExpression()), !dbg !6316
  call void @llvm.dbg.value(metadata i32 %8, metadata !6313, metadata !DIExpression()), !dbg !6316
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6319
  call void @llvm.dbg.value(metadata i8* %9, metadata !6315, metadata !DIExpression()), !dbg !6316
  %10 = load i8, i8* %6, align 1, !dbg !6321
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6322
  call void @llvm.dbg.value(metadata i8* %11, metadata !6314, metadata !DIExpression()), !dbg !6316
  store i8 %10, i8* %7, align 1, !dbg !6323
  %12 = add i32 %8, -1, !dbg !6324
  call void @llvm.dbg.value(metadata i32 %12, metadata !6313, metadata !DIExpression()), !dbg !6316
  %13 = icmp eq i32 %12, 0, !dbg !6317
  br i1 %13, label %14, label %5, !dbg !6318, !llvm.loop !6325

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !6327
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !6328 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6332, metadata !DIExpression()), !dbg !6337
  call void @llvm.dbg.value(metadata i32 %1, metadata !6333, metadata !DIExpression()), !dbg !6337
  call void @llvm.dbg.value(metadata i32 %2, metadata !6334, metadata !DIExpression()), !dbg !6337
  call void @llvm.dbg.value(metadata i8* %0, metadata !6335, metadata !DIExpression()), !dbg !6337
  %4 = trunc i32 %1 to i8, !dbg !6338
  call void @llvm.dbg.value(metadata i8 %4, metadata !6336, metadata !DIExpression()), !dbg !6337
  call void @llvm.dbg.value(metadata i32 %2, metadata !6334, metadata !DIExpression()), !dbg !6337
  call void @llvm.dbg.value(metadata i8* %0, metadata !6335, metadata !DIExpression()), !dbg !6337
  %5 = icmp eq i32 %2, 0, !dbg !6339
  br i1 %5, label %12, label %6, !dbg !6340

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !6334, metadata !DIExpression()), !dbg !6337
  call void @llvm.dbg.value(metadata i8* %8, metadata !6335, metadata !DIExpression()), !dbg !6337
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6341
  call void @llvm.dbg.value(metadata i8* %9, metadata !6335, metadata !DIExpression()), !dbg !6337
  store i8 %4, i8* %8, align 1, !dbg !6343
  %10 = add i32 %7, -1, !dbg !6344
  call void @llvm.dbg.value(metadata i32 %10, metadata !6334, metadata !DIExpression()), !dbg !6337
  %11 = icmp eq i32 %10, 0, !dbg !6339
  br i1 %11, label %12, label %6, !dbg !6340, !llvm.loop !6345

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !6347
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6348 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6352, metadata !DIExpression()), !dbg !6358
  call void @llvm.dbg.value(metadata i32 %1, metadata !6353, metadata !DIExpression()), !dbg !6358
  call void @llvm.dbg.value(metadata i32 %2, metadata !6354, metadata !DIExpression()), !dbg !6358
  %4 = icmp eq i32 %2, 0, !dbg !6359
  br i1 %4, label %17, label %5, !dbg !6360

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !6361

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !6362
  call void @llvm.dbg.value(metadata i8* %9, metadata !6355, metadata !DIExpression()), !dbg !6362
  call void @llvm.dbg.value(metadata i32 %8, metadata !6354, metadata !DIExpression()), !dbg !6358
  call void @llvm.dbg.value(metadata i8* %9, metadata !6355, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6362
  %10 = load i8, i8* %9, align 1, !dbg !6363
  %11 = icmp eq i8 %10, %6, !dbg !6366
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !6367
  call void @llvm.dbg.value(metadata i8* %12, metadata !6355, metadata !DIExpression()), !dbg !6362
  call void @llvm.dbg.value(metadata i32 %13, metadata !6354, metadata !DIExpression()), !dbg !6358
  br i1 %15, label %16, label %7, !dbg !6367, !llvm.loop !6368

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !6370

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !6358
  ret i8* %19, !dbg !6371
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #3 !dbg !6372 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !6374, metadata !DIExpression()), !dbg !6375
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !6376
  ret void, !dbg !6377
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #12 !dbg !6378 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6380, metadata !DIExpression()), !dbg !6381
  ret i32 -1, !dbg !6382
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !6383 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6387, metadata !DIExpression()), !dbg !6389
  call void @llvm.dbg.value(metadata i32* %1, metadata !6388, metadata !DIExpression()), !dbg !6389
  %3 = ptrtoint i32* %1 to i32, !dbg !6390
  %4 = and i32 %3, -2, !dbg !6390
  %5 = icmp eq i32 %4, 2, !dbg !6390
  br i1 %5, label %6, label %9, !dbg !6390

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !6391
  %8 = tail call i32 %7(i32 noundef %0) #24, !dbg !6391
  br label %9, !dbg !6392

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !6392
  ret i32 %10, !dbg !6393
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !6394 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6396, metadata !DIExpression()), !dbg !6398
  call void @llvm.dbg.value(metadata i32* %1, metadata !6397, metadata !DIExpression()), !dbg !6398
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !6399
  ret i32 %3, !dbg !6400
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !6401 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6404, metadata !DIExpression()), !dbg !6406
  call void @llvm.dbg.value(metadata i32* %1, metadata !6405, metadata !DIExpression()), !dbg !6406
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6407, !srcloc !6409
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !6410
  ret i32 %3, !dbg !6411
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !6412 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6417, metadata !DIExpression()), !dbg !6421
  call void @llvm.dbg.value(metadata i32* %1, metadata !6418, metadata !DIExpression()), !dbg !6421
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !6422
  call void @llvm.dbg.value(metadata i32 %3, metadata !6419, metadata !DIExpression()), !dbg !6421
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #25, !dbg !6423
  call void @llvm.dbg.value(metadata i32 %4, metadata !6420, metadata !DIExpression()), !dbg !6421
  %5 = icmp ne i32 %3, %4, !dbg !6424
  %6 = sext i1 %5 to i32, !dbg !6425
  ret i32 %6, !dbg !6426
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !6427 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6431, metadata !DIExpression()), !dbg !6435
  call void @llvm.dbg.value(metadata i32 %1, metadata !6432, metadata !DIExpression()), !dbg !6435
  call void @llvm.dbg.value(metadata i32 %2, metadata !6433, metadata !DIExpression()), !dbg !6435
  call void @llvm.dbg.value(metadata i32* %3, metadata !6434, metadata !DIExpression()), !dbg !6435
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !6436
  ret i32 %5, !dbg !6437
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !6438 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6440, metadata !DIExpression()), !dbg !6444
  call void @llvm.dbg.value(metadata i32 %1, metadata !6441, metadata !DIExpression()), !dbg !6444
  call void @llvm.dbg.value(metadata i32 %2, metadata !6442, metadata !DIExpression()), !dbg !6444
  call void @llvm.dbg.value(metadata i32* %3, metadata !6443, metadata !DIExpression()), !dbg !6444
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6445, !srcloc !6447
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !6448
  ret i32 %5, !dbg !6449
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !6450 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6452, metadata !DIExpression()), !dbg !6460
  call void @llvm.dbg.value(metadata i32 %1, metadata !6453, metadata !DIExpression()), !dbg !6460
  call void @llvm.dbg.value(metadata i32 %2, metadata !6454, metadata !DIExpression()), !dbg !6460
  call void @llvm.dbg.value(metadata i32* %3, metadata !6455, metadata !DIExpression()), !dbg !6460
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !6461
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !6463
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !6463
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !6463
  br i1 %11, label %33, label %12, !dbg !6463

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !6460
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !6460
  call void @llvm.dbg.value(metadata i8* %14, metadata !6458, metadata !DIExpression()), !dbg !6460
  call void @llvm.dbg.value(metadata i32 %13, metadata !6456, metadata !DIExpression()), !dbg !6460
  call void @llvm.dbg.value(metadata i32 %1, metadata !6457, metadata !DIExpression()), !dbg !6460
  br label %15, !dbg !6464

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !6466
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !6460
  call void @llvm.dbg.value(metadata i8* %17, metadata !6458, metadata !DIExpression()), !dbg !6460
  call void @llvm.dbg.value(metadata i32 %16, metadata !6457, metadata !DIExpression()), !dbg !6460
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !6467
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6470
  call void @llvm.dbg.value(metadata i8* %19, metadata !6458, metadata !DIExpression()), !dbg !6460
  %20 = load i8, i8* %17, align 1, !dbg !6471
  %21 = zext i8 %20 to i32, !dbg !6472
  %22 = tail call i32 %18(i32 noundef %21) #24, !dbg !6467
  %23 = icmp eq i32 %22, -1, !dbg !6473
  br i1 %23, label %30, label %24, !dbg !6474

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !6475
  call void @llvm.dbg.value(metadata i32 %25, metadata !6457, metadata !DIExpression()), !dbg !6460
  %26 = icmp eq i32 %25, 0, !dbg !6476
  br i1 %26, label %27, label %15, !dbg !6477, !llvm.loop !6478

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !6480
  call void @llvm.dbg.value(metadata i32 %28, metadata !6456, metadata !DIExpression()), !dbg !6460
  %29 = icmp eq i32 %28, 0, !dbg !6481
  br i1 %29, label %30, label %12, !dbg !6482, !llvm.loop !6483

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !6460
  call void @llvm.dbg.value(metadata i32 %31, metadata !6456, metadata !DIExpression()), !dbg !6460
  call void @llvm.dbg.label(metadata !6459), !dbg !6486
  %32 = sub i32 %2, %31, !dbg !6487
  br label %33, !dbg !6488

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !6460
  ret i32 %34, !dbg !6489
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !6490 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6494, metadata !DIExpression()), !dbg !6495
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !6496
  %3 = icmp eq i32 %2, -1, !dbg !6498
  br i1 %3, label %8, label %4, !dbg !6499

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !6500
  %6 = icmp eq i32 %5, -1, !dbg !6501
  %7 = sext i1 %6 to i32, !dbg !6500
  br label %8, !dbg !6502

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !6495
  ret i32 %9, !dbg !6503
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !6504 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6506, metadata !DIExpression()), !dbg !6507
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #25, !dbg !6508
  ret void, !dbg !6509
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !6510 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6514, metadata !DIExpression()), !dbg !6520
  call void @llvm.dbg.value(metadata i32 %1, metadata !6515, metadata !DIExpression()), !dbg !6520
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !6516, metadata !DIExpression()), !dbg !6520
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !6521
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !6521
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !6521
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !6517, metadata !DIExpression()), !dbg !6520
  call void @llvm.dbg.value(metadata i32 %0, metadata !6519, metadata !DIExpression()), !dbg !6520
  %7 = icmp slt i32 %0, %1, !dbg !6522
  br i1 %7, label %8, label %22, !dbg !6525

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6519, metadata !DIExpression()), !dbg !6520
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #25, !dbg !6526
  %11 = icmp eq i32 %10, 0, !dbg !6526
  br i1 %11, label %19, label %12, !dbg !6529

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #25, !dbg !6530
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !6532
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !6532
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !6534
  br i1 %15, label %19, label %16, !dbg !6535

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !6536
  %18 = load i8*, i8** %17, align 4, !dbg !6536
  tail call void %14(i32 noundef %9, i8* noundef %18) #24, !dbg !6537
  br label %19, !dbg !6538

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !6539
  call void @llvm.dbg.value(metadata i32 %20, metadata !6519, metadata !DIExpression()), !dbg !6520
  %21 = icmp eq i32 %20, %1, !dbg !6522
  br i1 %21, label %22, label %8, !dbg !6525, !llvm.loop !6540

22:                                               ; preds = %19, %3
  ret void, !dbg !6542
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #14 !dbg !6543 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6545, metadata !DIExpression()), !dbg !6546
  %2 = shl nuw i32 1, %0, !dbg !6547
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #25, !dbg !6550
  ret i32 %3, !dbg !6551
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #13 !dbg !6552 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6556, metadata !DIExpression()), !dbg !6557
  %2 = shl nuw i32 1, %0, !dbg !6558
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #25, !dbg !6561
  ret void, !dbg !6562
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6563 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6566, metadata !DIExpression()), !dbg !6567
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !6568
  ret void, !dbg !6569
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !6570 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6572, metadata !DIExpression()), !dbg !6573
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !6574
  %3 = and i32 %2, %0, !dbg !6574
  %4 = icmp eq i32 %3, %0, !dbg !6575
  %5 = zext i1 %4 to i32, !dbg !6575
  ret i32 %5, !dbg !6576
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !6577 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6579, metadata !DIExpression()), !dbg !6580
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #25, !dbg !6581
  ret void, !dbg !6582
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !6583 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6585, metadata !DIExpression()), !dbg !6586
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #25, !dbg !6587
  ret void, !dbg !6588
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !6589 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6591, metadata !DIExpression()), !dbg !6592
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #25, !dbg !6593
  ret void, !dbg !6594
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !6595 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6597, metadata !DIExpression()), !dbg !6598
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #25, !dbg !6599
  ret void, !dbg !6600
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !6601 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6603, metadata !DIExpression()), !dbg !6604
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #25, !dbg !6605
  ret void, !dbg !6606
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !6607 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6609, metadata !DIExpression()), !dbg !6610
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #25, !dbg !6611
  ret void, !dbg !6612
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !6613 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6615, metadata !DIExpression()), !dbg !6616
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #25, !dbg !6617
  ret void, !dbg !6618
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !6619 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6621, metadata !DIExpression()), !dbg !6622
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #25, !dbg !6623
  ret void, !dbg !6624
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !6625 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6627, metadata !DIExpression()), !dbg !6628
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #25, !dbg !6629
  ret void, !dbg !6630
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !6631 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6633, metadata !DIExpression()), !dbg !6634
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #25, !dbg !6635
  ret void, !dbg !6636
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6637 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6639, metadata !DIExpression()), !dbg !6640
  tail call fastcc void @__stm32_exti_connect_irqs() #25, !dbg !6641
  ret i32 0, !dbg !6642
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !728 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !732, metadata !DIExpression()), !dbg !6643
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #24, !dbg !6644
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #24, !dbg !6646
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #24, !dbg !6648
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #24, !dbg !6650
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #24, !dbg !6652
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #24, !dbg !6654
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #24, !dbg !6656
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #24, !dbg !6658
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #24, !dbg !6660
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #24, !dbg !6662
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #24, !dbg !6664
  ret void, !dbg !6666
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6667 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6669, metadata !DIExpression()), !dbg !6671
  call void @llvm.dbg.value(metadata i32 0, metadata !6670, metadata !DIExpression()), !dbg !6671
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !6672
  %3 = load i32, i32* %2, align 4, !dbg !6672
  call void @llvm.dbg.value(metadata i32 %3, metadata !6670, metadata !DIExpression()), !dbg !6671
  %4 = shl nuw i32 1, %0, !dbg !6673
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #25, !dbg !6674
  tail call void @arch_irq_enable(i32 noundef %3) #24, !dbg !6675
  ret void, !dbg !6676
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6677 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6679, metadata !DIExpression()), !dbg !6680
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6681
  %3 = or i32 %2, %0, !dbg !6681
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6681
  ret void, !dbg !6682
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #13 !dbg !6683 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6685, metadata !DIExpression()), !dbg !6686
  %2 = icmp slt i32 %0, 32, !dbg !6687
  br i1 %2, label %3, label %5, !dbg !6689

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !6690
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #25, !dbg !6692
  br label %5, !dbg !6693

5:                                                ; preds = %1, %3
  ret void, !dbg !6694
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6695 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6697, metadata !DIExpression()), !dbg !6698
  %2 = xor i32 %0, -1, !dbg !6699
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6699
  %4 = and i32 %3, %2, !dbg !6699
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6699
  ret void, !dbg !6700
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #13 !dbg !6701 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6705, metadata !DIExpression()), !dbg !6707
  call void @llvm.dbg.value(metadata i32 %1, metadata !6706, metadata !DIExpression()), !dbg !6707
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !6708

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !6709
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #25, !dbg !6711
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #25, !dbg !6712
  br label %11, !dbg !6713

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !6714
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #25, !dbg !6715
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #25, !dbg !6716
  br label %11, !dbg !6717

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !6718
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #25, !dbg !6719
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #25, !dbg !6720
  br label %11, !dbg !6721

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !6722
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #25, !dbg !6723
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #25, !dbg !6724
  br label %11, !dbg !6725

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !6726
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6727 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6729, metadata !DIExpression()), !dbg !6730
  %2 = xor i32 %0, -1, !dbg !6731
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6731
  %4 = and i32 %3, %2, !dbg !6731
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6731
  ret void, !dbg !6732
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6733 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6735, metadata !DIExpression()), !dbg !6736
  %2 = xor i32 %0, -1, !dbg !6737
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6737
  %4 = and i32 %3, %2, !dbg !6737
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6737
  ret void, !dbg !6738
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6739 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6741, metadata !DIExpression()), !dbg !6742
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6743
  %3 = or i32 %2, %0, !dbg !6743
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6743
  ret void, !dbg !6744
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6745 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6747, metadata !DIExpression()), !dbg !6748
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6749
  %3 = or i32 %2, %0, !dbg !6749
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6749
  ret void, !dbg !6750
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !6751 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6755, metadata !DIExpression()), !dbg !6761
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !6756, metadata !DIExpression()), !dbg !6761
  call void @llvm.dbg.value(metadata i8* %2, metadata !6757, metadata !DIExpression()), !dbg !6761
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !6758, metadata !DIExpression()), !dbg !6761
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !6760, metadata !DIExpression()), !dbg !6761
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !6762
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !6762
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !6764
  br i1 %6, label %7, label %9, !dbg !6765

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !6766
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !6767
  store i8* %2, i8** %8, align 4, !dbg !6768
  br label %9, !dbg !6769

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !6761
  ret i32 %10, !dbg !6770
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #3 !dbg !6771 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6773, metadata !DIExpression()), !dbg !6776
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !6774, metadata !DIExpression()), !dbg !6776
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !6775, metadata !DIExpression()), !dbg !6776
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !6777
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !6778
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !6779
  store i8* null, i8** %3, align 4, !dbg !6780
  ret void, !dbg !6781
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #13 !dbg !6782 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6784, metadata !DIExpression()), !dbg !6789
  call void @llvm.dbg.value(metadata i8* %1, metadata !6785, metadata !DIExpression()), !dbg !6789
  call void @llvm.dbg.value(metadata i8* %1, metadata !6786, metadata !DIExpression()), !dbg !6789
  %3 = bitcast i8* %1 to i32*, !dbg !6790
  %4 = load i32, i32* %3, align 4, !dbg !6790
  %5 = add i32 %4, -169, !dbg !6790
  %6 = icmp ult i32 %5, -121, !dbg !6790
  br i1 %6, label %15, label %7, !dbg !6792

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !6793
  %9 = inttoptr i32 %8 to i32*, !dbg !6794
  call void @llvm.dbg.value(metadata i32* %9, metadata !6787, metadata !DIExpression()), !dbg !6789
  %10 = load volatile i32, i32* %9, align 4, !dbg !6795
  call void @llvm.dbg.value(metadata i32 %10, metadata !6788, metadata !DIExpression()), !dbg !6789
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6796
  %12 = bitcast i8* %11 to i32*, !dbg !6796
  %13 = load i32, i32* %12, align 4, !dbg !6796
  %14 = or i32 %13, %10, !dbg !6797
  call void @llvm.dbg.value(metadata i32 %14, metadata !6788, metadata !DIExpression()), !dbg !6789
  store volatile i32 %14, i32* %9, align 4, !dbg !6798
  br label %15, !dbg !6799

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !6789
  ret i32 %16, !dbg !6800
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #13 !dbg !6801 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6803, metadata !DIExpression()), !dbg !6808
  call void @llvm.dbg.value(metadata i8* %1, metadata !6804, metadata !DIExpression()), !dbg !6808
  call void @llvm.dbg.value(metadata i8* %1, metadata !6805, metadata !DIExpression()), !dbg !6808
  %3 = bitcast i8* %1 to i32*, !dbg !6809
  %4 = load i32, i32* %3, align 4, !dbg !6809
  %5 = add i32 %4, -169, !dbg !6809
  %6 = icmp ult i32 %5, -121, !dbg !6809
  br i1 %6, label %16, label %7, !dbg !6811

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !6812
  %9 = inttoptr i32 %8 to i32*, !dbg !6813
  call void @llvm.dbg.value(metadata i32* %9, metadata !6806, metadata !DIExpression()), !dbg !6808
  %10 = load volatile i32, i32* %9, align 4, !dbg !6814
  call void @llvm.dbg.value(metadata i32 %10, metadata !6807, metadata !DIExpression()), !dbg !6808
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6815
  %12 = bitcast i8* %11 to i32*, !dbg !6815
  %13 = load i32, i32* %12, align 4, !dbg !6815
  %14 = xor i32 %13, -1, !dbg !6816
  %15 = and i32 %10, %14, !dbg !6817
  call void @llvm.dbg.value(metadata i32 %15, metadata !6807, metadata !DIExpression()), !dbg !6808
  store volatile i32 %15, i32* %9, align 4, !dbg !6818
  br label %16, !dbg !6819

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !6808
  ret i32 %17, !dbg !6820
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !6821 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6823, metadata !DIExpression()), !dbg !6831
  call void @llvm.dbg.value(metadata i8* %1, metadata !6824, metadata !DIExpression()), !dbg !6831
  call void @llvm.dbg.value(metadata i32* %2, metadata !6825, metadata !DIExpression()), !dbg !6831
  call void @llvm.dbg.value(metadata i8* %1, metadata !6826, metadata !DIExpression()), !dbg !6831
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !6832
  call void @llvm.dbg.value(metadata i32 %4, metadata !6827, metadata !DIExpression()), !dbg !6831
  call void @llvm.dbg.value(metadata i32 undef, metadata !6828, metadata !DIExpression()), !dbg !6831
  call void @llvm.dbg.value(metadata i32 undef, metadata !6829, metadata !DIExpression()), !dbg !6831
  call void @llvm.dbg.value(metadata i32 %4, metadata !6830, metadata !DIExpression()), !dbg !6831
  %5 = bitcast i8* %1 to i32*, !dbg !6833
  %6 = load i32, i32* %5, align 4, !dbg !6833
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !6834

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 4) #25, !dbg !6835
  call void @llvm.dbg.value(metadata i32 %8, metadata !6828, metadata !DIExpression()), !dbg !6831
  br label %19, !dbg !6836

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #25, !dbg !6838
  call void @llvm.dbg.value(metadata i32 %10, metadata !6829, metadata !DIExpression()), !dbg !6831
  br label %19, !dbg !6839

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #24, !dbg !6840
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #25, !dbg !6841
  br label %19, !dbg !6842

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #24, !dbg !6843
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #25, !dbg !6844
  br label %19, !dbg !6845

17:                                               ; preds = %3
  br label %19, !dbg !6846

18:                                               ; preds = %3
  br label %19, !dbg !6847

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !6848
  br label %21, !dbg !6849

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !6831
  ret i32 %22, !dbg !6849
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #13 !dbg !6850 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6852, metadata !DIExpression()), !dbg !6860
  call void @llvm.dbg.value(metadata i8* %1, metadata !6853, metadata !DIExpression()), !dbg !6860
  call void @llvm.dbg.value(metadata i8* %2, metadata !6854, metadata !DIExpression()), !dbg !6860
  call void @llvm.dbg.value(metadata i8* %1, metadata !6855, metadata !DIExpression()), !dbg !6860
  %4 = bitcast i8* %1 to i32*, !dbg !6861
  %5 = load i32, i32* %4, align 4, !dbg !6861
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #25, !dbg !6862
  call void @llvm.dbg.value(metadata i32 %6, metadata !6859, metadata !DIExpression()), !dbg !6860
  %7 = icmp slt i32 %6, 0, !dbg !6863
  br i1 %7, label %22, label %8, !dbg !6865

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6855, metadata !DIExpression()), !dbg !6860
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6866
  %10 = bitcast i8* %9 to i32*, !dbg !6866
  %11 = load i32, i32* %10, align 4, !dbg !6866
  %12 = lshr i32 %11, 16, !dbg !6866
  %13 = and i32 %12, 7, !dbg !6866
  %14 = lshr i32 %11, 8, !dbg !6867
  %15 = and i32 %14, 31, !dbg !6867
  %16 = shl i32 %13, %15, !dbg !6868
  call void @llvm.dbg.value(metadata i32 %16, metadata !6858, metadata !DIExpression()), !dbg !6860
  %17 = and i32 %11, 255, !dbg !6869
  %18 = or i32 %17, 1073887232, !dbg !6870
  %19 = inttoptr i32 %18 to i32*, !dbg !6871
  call void @llvm.dbg.value(metadata i32* %19, metadata !6856, metadata !DIExpression()), !dbg !6860
  %20 = load volatile i32, i32* %19, align 4, !dbg !6872
  call void @llvm.dbg.value(metadata i32 %20, metadata !6857, metadata !DIExpression()), !dbg !6860
  %21 = or i32 %16, %20, !dbg !6873
  call void @llvm.dbg.value(metadata i32 %21, metadata !6857, metadata !DIExpression()), !dbg !6860
  store volatile i32 %21, i32* %19, align 4, !dbg !6874
  br label %22, !dbg !6875

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !6860
  ret i32 %23, !dbg !6876
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #12 !dbg !6877 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6881, metadata !DIExpression()), !dbg !6883
  call void @llvm.dbg.value(metadata i32 0, metadata !6882, metadata !DIExpression()), !dbg !6883
  %2 = add i32 %0, -1, !dbg !6884
  %3 = icmp ult i32 %2, 6, !dbg !6884
  br i1 %3, label %4, label %7, !dbg !6884

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !6884
  %6 = load i32, i32* %5, align 4, !dbg !6884
  call void @llvm.dbg.value(metadata i32 %6, metadata !6882, metadata !DIExpression()), !dbg !6883
  br label %7, !dbg !6885

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !6883
  ret i32 %8, !dbg !6886
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !6887 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6891, metadata !DIExpression()), !dbg !6893
  call void @llvm.dbg.value(metadata i32 %1, metadata !6892, metadata !DIExpression()), !dbg !6893
  %3 = udiv i32 %0, %1, !dbg !6894
  ret i32 %3, !dbg !6895
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !6896 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6900, metadata !DIExpression()), !dbg !6904
  call void @llvm.dbg.value(metadata i32 12, metadata !6901, metadata !DIExpression()), !dbg !6904
  call void @llvm.dbg.value(metadata i32 336, metadata !6902, metadata !DIExpression()), !dbg !6904
  call void @llvm.dbg.value(metadata i32 %1, metadata !6903, metadata !DIExpression()), !dbg !6904
  %3 = mul i32 %0, 336, !dbg !6905
  %4 = mul nsw i32 %1, 12, !dbg !6906
  %5 = udiv i32 %3, %4, !dbg !6907
  ret i32 %5, !dbg !6908
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !6909 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !6911, metadata !DIExpression()), !dbg !6914
  tail call void @config_enable_default_clocks() #24, !dbg !6915
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !6916
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #25, !dbg !6916
  %4 = lshr i32 %3, 4, !dbg !6916
  %5 = and i32 %4, 15, !dbg !6916
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !6916
  %7 = load i8, i8* %6, align 1, !dbg !6916
  %8 = zext i8 %7 to i32, !dbg !6916
  %9 = lshr i32 %2, %8, !dbg !6916
  call void @llvm.dbg.value(metadata i32 %9, metadata !6912, metadata !DIExpression()), !dbg !6914
  call void @llvm.dbg.value(metadata !DIArgList(i32 168000000, i8 undef), metadata !6913, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !6914
  %10 = icmp ult i32 %9, 168000000, !dbg !6917
  br i1 %10, label %11, label %13, !dbg !6919

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #24, !dbg !6920
  br label %13, !dbg !6922

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #25, !dbg !6923
  tail call fastcc void @set_up_plls() #25, !dbg !6924
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #25, !dbg !6925
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #25, !dbg !6928
  br label %14, !dbg !6929

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !6930
  %16 = icmp eq i32 %15, 8, !dbg !6931
  br i1 %16, label %17, label %14, !dbg !6929, !llvm.loop !6932

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 167999999, !dbg !6934
  br i1 %18, label %19, label %21, !dbg !6936

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #24, !dbg !6937
  br label %21, !dbg !6939

21:                                               ; preds = %19, %17
  store i32 168000000, i32* @SystemCoreClock, align 4, !dbg !6940
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #25, !dbg !6941
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #25, !dbg !6942
  ret i32 0, !dbg !6943
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #14 !dbg !6944 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6946
  %2 = and i32 %1, 240, !dbg !6946
  ret i32 %2, !dbg !6947
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #13 !dbg !6948 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #25, !dbg !6949
  tail call fastcc void @LL_RCC_HSE_Enable() #25, !dbg !6954
  br label %1, !dbg !6955

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #25, !dbg !6956
  %3 = icmp eq i32 %2, 1, !dbg !6957
  br i1 %3, label %4, label %1, !dbg !6955, !llvm.loop !6958

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #25, !dbg !6960
  br label %5, !dbg !6963

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #25, !dbg !6964
  %7 = icmp eq i32 %6, 1, !dbg !6965
  br i1 %7, label %8, label %5, !dbg !6963, !llvm.loop !6966

8:                                                ; preds = %5
  ret void, !dbg !6968
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !6969 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !6970
  %2 = icmp eq i32 %1, 8, !dbg !6972
  br i1 %2, label %3, label %4, !dbg !6973

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #25, !dbg !6974
  tail call fastcc void @stm32_clock_switch_to_hsi() #25, !dbg !6976
  br label %4, !dbg !6977

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #25, !dbg !6978
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6979
  %6 = and i32 %5, -196609, !dbg !6979
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6979
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6980
  %8 = and i32 %7, -251658241, !dbg !6980
  %9 = or i32 %8, 117440512, !dbg !6980
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6980
  tail call void @config_pll_sysclock() #24, !dbg !6981
  tail call fastcc void @LL_RCC_PLL_Enable() #25, !dbg !6982
  br label %10, !dbg !6983

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #25, !dbg !6984
  %12 = icmp eq i32 %11, 1, !dbg !6985
  br i1 %12, label %13, label %10, !dbg !6983, !llvm.loop !6986

13:                                               ; preds = %10
  ret void, !dbg !6988
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #13 !dbg !6989 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6991, metadata !DIExpression()), !dbg !6992
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6993
  %2 = and i32 %1, -241, !dbg !6993
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6993
  ret void, !dbg !6994
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #13 !dbg !6995 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6997, metadata !DIExpression()), !dbg !6998
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6999
  %3 = and i32 %2, -4, !dbg !6999
  %4 = or i32 %3, %0, !dbg !6999
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6999
  ret void, !dbg !7000
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #14 !dbg !7001 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7002
  %2 = and i32 %1, 12, !dbg !7002
  ret i32 %2, !dbg !7003
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #13 !dbg !7004 {
  call void @llvm.dbg.value(metadata i32 5120, metadata !7006, metadata !DIExpression()), !dbg !7007
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7008
  %2 = and i32 %1, -7169, !dbg !7008
  %3 = or i32 %2, 5120, !dbg !7008
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7008
  ret void, !dbg !7009
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #13 !dbg !7010 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !7012, metadata !DIExpression()), !dbg !7013
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7014
  %2 = and i32 %1, -57345, !dbg !7014
  %3 = or i32 %2, 32768, !dbg !7014
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7014
  ret void, !dbg !7015
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #13 !dbg !7016 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !7017
  %2 = icmp eq i32 %1, 1, !dbg !7019
  br i1 %2, label %7, label %3, !dbg !7020

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #25, !dbg !7021
  br label %4, !dbg !7023

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !7024
  %6 = icmp eq i32 %5, 1, !dbg !7025
  br i1 %6, label %7, label %4, !dbg !7023, !llvm.loop !7026

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #25, !dbg !7028
  br label %8, !dbg !7029

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !7030
  %10 = icmp eq i32 %9, 0, !dbg !7031
  br i1 %10, label %11, label %8, !dbg !7029, !llvm.loop !7032

11:                                               ; preds = %8
  ret void, !dbg !7034
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #13 !dbg !7035 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7036
  %2 = and i32 %1, -16777217, !dbg !7036
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7036
  ret void, !dbg !7037
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #13 !dbg !7038 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7039
  %2 = or i32 %1, 16777216, !dbg !7039
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7039
  ret void, !dbg !7040
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #14 !dbg !7041 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7042
  %2 = lshr i32 %1, 25, !dbg !7043
  %3 = and i32 %2, 1, !dbg !7043
  ret i32 %3, !dbg !7044
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #14 !dbg !7045 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7046
  %2 = lshr i32 %1, 1, !dbg !7047
  %3 = and i32 %2, 1, !dbg !7047
  ret i32 %3, !dbg !7048
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #13 !dbg !7049 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7050
  %2 = or i32 %1, 1, !dbg !7050
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7050
  ret void, !dbg !7051
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #13 !dbg !7052 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7053
  %2 = and i32 %1, -262145, !dbg !7053
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7053
  ret void, !dbg !7054
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #13 !dbg !7055 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7056
  %2 = or i32 %1, 65536, !dbg !7056
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7056
  ret void, !dbg !7057
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #14 !dbg !7058 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7059
  %2 = lshr i32 %1, 17, !dbg !7060
  %3 = and i32 %2, 1, !dbg !7060
  ret i32 %3, !dbg !7061
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #13 !dbg !7062 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !7063
  %2 = or i32 %1, 1, !dbg !7063
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !7063
  ret void, !dbg !7064
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #14 !dbg !7065 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !7066
  %2 = lshr i32 %1, 1, !dbg !7067
  %3 = and i32 %2, 1, !dbg !7067
  ret i32 %3, !dbg !7068
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #12 !dbg !7069 {
  ret i32 12000000, !dbg !7071
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #13 !dbg !7075 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #25, !dbg !7076
  ret void, !dbg !7077
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #13 !dbg !7078 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !7082, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata i32 12, metadata !7083, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata i32 336, metadata !7084, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata i32 0, metadata !7085, metadata !DIExpression()), !dbg !7086
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7087
  %2 = and i32 %1, -4227072, !dbg !7087
  %3 = or i32 %2, 4215820, !dbg !7087
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7087
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7088
  %5 = and i32 %4, -196609, !dbg !7088
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7088
  ret void, !dbg !7089
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #15 !dbg !7090 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #25, !dbg !7091
  ret void, !dbg !7092
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #15 !dbg !7093 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !7096, metadata !DIExpression()), !dbg !7098
  %2 = bitcast i32* %1 to i8*, !dbg !7099
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !7099
  call void @llvm.dbg.declare(metadata i32* %1, metadata !7097, metadata !DIExpression()), !dbg !7100
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !7101
  %4 = or i32 %3, 268435456, !dbg !7101
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !7101
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !7102
  %6 = and i32 %5, 268435456, !dbg !7102
  store volatile i32 %6, i32* %1, align 4, !dbg !7103
  %7 = load volatile i32, i32* %1, align 4, !dbg !7104
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !7105
  ret void, !dbg !7105
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7106 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7108, metadata !DIExpression()), !dbg !7109
  %2 = tail call fastcc zeroext i1 @device_is_ready.45() #25, !dbg !7110
  br i1 %2, label %3, label %4, !dbg !7112

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #25, !dbg !7113
  br label %4, !dbg !7114

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !7109
  ret i32 %5, !dbg !7115
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.45() unnamed_addr #1 !dbg !7116 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !7120, metadata !DIExpression()), !dbg !7121
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7122, !srcloc !7124
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.46() #25, !dbg !7125
  ret i1 %1, !dbg !7126
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !7127 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !7128
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !7129
  ret void, !dbg !7130
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !7131 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7133, metadata !DIExpression()), !dbg !7134
  %2 = icmp eq i32 %0, 10, !dbg !7135
  br i1 %2, label %3, label %4, !dbg !7137

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #25, !dbg !7138
  br label %4, !dbg !7140

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !7141
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #25, !dbg !7142
  ret i32 %0, !dbg !7143
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7144 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !7147, metadata !DIExpression()), !dbg !7149
  call void @llvm.dbg.value(metadata i8 %0, metadata !7148, metadata !DIExpression()), !dbg !7149
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7150, !srcloc !7152
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #25, !dbg !7153
  ret void, !dbg !7154
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7155 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !7157, metadata !DIExpression()), !dbg !7160
  call void @llvm.dbg.value(metadata i8 %0, metadata !7158, metadata !DIExpression()), !dbg !7160
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7161
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !7159, metadata !DIExpression()), !dbg !7160
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !7162
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !7162
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #24, !dbg !7163
  ret void, !dbg !7164
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.46() unnamed_addr #1 !dbg !7165 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !7167, metadata !DIExpression()), !dbg !7168
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #24, !dbg !7169
  ret i1 %1, !dbg !7170
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #12 !dbg !7171 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !7218, metadata !DIExpression()), !dbg !7221
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !7219, metadata !DIExpression()), !dbg !7221
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !7220, metadata !DIExpression()), !dbg !7221
  ret void, !dbg !7222
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !7223 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7225, metadata !DIExpression()), !dbg !7230
  call void @llvm.dbg.value(metadata i8 %1, metadata !7226, metadata !DIExpression()), !dbg !7230
  call void @llvm.dbg.value(metadata i32 %2, metadata !7227, metadata !DIExpression()), !dbg !7230
  %5 = bitcast i32* %4 to i8*, !dbg !7231
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !7231
  call void @llvm.dbg.value(metadata i32* %4, metadata !7229, metadata !DIExpression(DW_OP_deref)), !dbg !7230
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #25, !dbg !7232
  call void @llvm.dbg.value(metadata i32 %6, metadata !7228, metadata !DIExpression()), !dbg !7230
  %7 = icmp eq i32 %6, 0, !dbg !7233
  br i1 %7, label %8, label %31, !dbg !7235

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !7228, metadata !DIExpression()), !dbg !7230
  %9 = and i32 %2, 131072, !dbg !7236
  %10 = icmp eq i32 %9, 0, !dbg !7238
  br i1 %10, label %28, label %11, !dbg !7239

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !7240
  %13 = icmp eq i32 %12, 0, !dbg !7243
  br i1 %13, label %18, label %14, !dbg !7244

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !7245
  %16 = shl nuw i32 1, %15, !dbg !7245
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #25, !dbg !7247
  br label %25, !dbg !7248

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !7249
  %20 = icmp eq i32 %19, 0, !dbg !7251
  %21 = zext i8 %1 to i32, !dbg !7230
  br i1 %20, label %25, label %22, !dbg !7252

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !7253
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #25, !dbg !7255
  br label %25, !dbg !7256

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !7257
  %27 = load i32, i32* %4, align 4, !dbg !7258
  call void @llvm.dbg.value(metadata i32 %30, metadata !7229, metadata !DIExpression()), !dbg !7230
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #25, !dbg !7259
  br label %31, !dbg !7260

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !7257
  %30 = load i32, i32* %4, align 4, !dbg !7258
  call void @llvm.dbg.value(metadata i32 %30, metadata !7229, metadata !DIExpression()), !dbg !7230
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #25, !dbg !7259
  call void @llvm.dbg.value(metadata i32 0, metadata !7228, metadata !DIExpression()), !dbg !7230
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !7261
  ret i32 %6, !dbg !7261
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #14 !dbg !7262 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7266, metadata !DIExpression()), !dbg !7271
  call void @llvm.dbg.value(metadata i32* %1, metadata !7267, metadata !DIExpression()), !dbg !7271
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7272
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7272
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7272
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7268, metadata !DIExpression()), !dbg !7271
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7273
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7273
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7273
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7270, metadata !DIExpression()), !dbg !7271
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #25, !dbg !7274
  store i32 %9, i32* %1, align 4, !dbg !7275
  ret i32 0, !dbg !7276
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #13 !dbg !7277 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7279, metadata !DIExpression()), !dbg !7285
  call void @llvm.dbg.value(metadata i32 %1, metadata !7280, metadata !DIExpression()), !dbg !7285
  call void @llvm.dbg.value(metadata i32 %2, metadata !7281, metadata !DIExpression()), !dbg !7285
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7286
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !7286
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !7286
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !7282, metadata !DIExpression()), !dbg !7285
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !7287
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !7287
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !7287
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !7283, metadata !DIExpression()), !dbg !7285
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #25, !dbg !7288
  call void @llvm.dbg.value(metadata i32 %10, metadata !7284, metadata !DIExpression()), !dbg !7285
  %11 = xor i32 %1, -1, !dbg !7289
  %12 = and i32 %10, %11, !dbg !7290
  %13 = and i32 %2, %1, !dbg !7291
  %14 = or i32 %12, %13, !dbg !7292
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #25, !dbg !7293
  ret i32 0, !dbg !7294
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7295 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7297, metadata !DIExpression()), !dbg !7301
  call void @llvm.dbg.value(metadata i32 %1, metadata !7298, metadata !DIExpression()), !dbg !7301
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7302
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7302
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7302
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7299, metadata !DIExpression()), !dbg !7301
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7303
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7303
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7303
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7300, metadata !DIExpression()), !dbg !7301
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !7304
  store volatile i32 %1, i32* %9, align 4, !dbg !7304
  ret i32 0, !dbg !7305
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7306 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7308, metadata !DIExpression()), !dbg !7312
  call void @llvm.dbg.value(metadata i32 %1, metadata !7309, metadata !DIExpression()), !dbg !7312
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7313
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7313
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7313
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7310, metadata !DIExpression()), !dbg !7312
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7314
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7314
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7314
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7311, metadata !DIExpression()), !dbg !7312
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #25, !dbg !7315
  ret i32 0, !dbg !7316
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7317 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7319, metadata !DIExpression()), !dbg !7323
  call void @llvm.dbg.value(metadata i32 %1, metadata !7320, metadata !DIExpression()), !dbg !7323
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7324
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7324
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7324
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7321, metadata !DIExpression()), !dbg !7323
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7325
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7325
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7325
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7322, metadata !DIExpression()), !dbg !7323
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !7326
  %10 = load volatile i32, i32* %9, align 4, !dbg !7326
  %11 = xor i32 %10, %1, !dbg !7326
  store volatile i32 %11, i32* %9, align 4, !dbg !7326
  ret i32 0, !dbg !7327
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !7328 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7330, metadata !DIExpression()), !dbg !7340
  call void @llvm.dbg.value(metadata i8 %1, metadata !7331, metadata !DIExpression()), !dbg !7340
  call void @llvm.dbg.value(metadata i32 %2, metadata !7332, metadata !DIExpression()), !dbg !7340
  call void @llvm.dbg.value(metadata i32 %3, metadata !7333, metadata !DIExpression()), !dbg !7340
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7341
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !7341
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !7341
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !7334, metadata !DIExpression()), !dbg !7340
  call void @llvm.dbg.value(metadata i8* undef, metadata !7335, metadata !DIExpression()), !dbg !7340
  call void @llvm.dbg.value(metadata i32 0, metadata !7337, metadata !DIExpression()), !dbg !7340
  call void @llvm.dbg.value(metadata i32 0, metadata !7338, metadata !DIExpression()), !dbg !7340
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !7342

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !7343
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #25, !dbg !7347
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !7348
  %12 = load i32, i32* %11, align 4, !dbg !7348
  %13 = icmp eq i32 %10, %12, !dbg !7349
  br i1 %13, label %14, label %29, !dbg !7350

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #24, !dbg !7351
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #24, !dbg !7353
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #24, !dbg !7354
  br label %29, !dbg !7355

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7356
  %17 = load i8*, i8** %16, align 4, !dbg !7356
  call void @llvm.dbg.value(metadata i8* %17, metadata !7335, metadata !DIExpression()), !dbg !7340
  %18 = zext i8 %1 to i32, !dbg !7357
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #24, !dbg !7359
  %20 = icmp eq i32 %19, 0, !dbg !7360
  br i1 %20, label %21, label %29, !dbg !7361

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !7362
  %23 = load i32, i32* %22, align 4, !dbg !7362
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #25, !dbg !7363
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !7364

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !7337, metadata !DIExpression()), !dbg !7340
  br label %27, !dbg !7365

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !7337, metadata !DIExpression()), !dbg !7340
  br label %27, !dbg !7367

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !7337, metadata !DIExpression()), !dbg !7340
  br label %27, !dbg !7368

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !7340
  call void @llvm.dbg.value(metadata i32 %28, metadata !7337, metadata !DIExpression()), !dbg !7340
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #24, !dbg !7369
  tail call void @stm32_exti_enable(i32 noundef %18) #24, !dbg !7370
  br label %29, !dbg !7370

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !7340
  call void @llvm.dbg.value(metadata i32 %30, metadata !7338, metadata !DIExpression()), !dbg !7340
  call void @llvm.dbg.label(metadata !7339), !dbg !7371
  ret i32 %30, !dbg !7372
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #11 !dbg !7373 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7375, metadata !DIExpression()), !dbg !7379
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7376, metadata !DIExpression()), !dbg !7379
  call void @llvm.dbg.value(metadata i1 %2, metadata !7377, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7379
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7380
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !7380
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !7380
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !7378, metadata !DIExpression()), !dbg !7379
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !7381
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #25, !dbg !7382
  ret i32 %8, !dbg !7383
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #11 !dbg !7384 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7390, metadata !DIExpression()), !dbg !7393
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7391, metadata !DIExpression()), !dbg !7393
  call void @llvm.dbg.value(metadata i1 %2, metadata !7392, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7393
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #25, !dbg !7394
  br i1 %4, label %10, label %5, !dbg !7396

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7397
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #25, !dbg !7400
  %8 = or i1 %7, %2, !dbg !7401
  %9 = select i1 %8, i32 0, i32 -22, !dbg !7401
  br i1 %2, label %11, label %13, !dbg !7401

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !7402

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7403
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #25, !dbg !7406
  br label %13, !dbg !7407

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !7393
  ret i32 %14, !dbg !7408
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !7409 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7413, metadata !DIExpression()), !dbg !7414
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7415
  %3 = icmp eq %struct._snode* %2, null, !dbg !7415
  ret i1 %3, !dbg !7415
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !7416 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7420, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7421, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7422, metadata !DIExpression()), !dbg !7424
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7425
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7423, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7422, metadata !DIExpression()), !dbg !7424
  %4 = icmp eq %struct._snode* %3, null, !dbg !7427
  br i1 %4, label %15, label %5, !dbg !7425

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7423, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7422, metadata !DIExpression()), !dbg !7424
  %6 = icmp eq %struct._snode* %3, %1, !dbg !7429
  br i1 %6, label %9, label %11, !dbg !7432

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7423, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7422, metadata !DIExpression()), !dbg !7424
  %8 = icmp eq %struct._snode* %13, %1, !dbg !7429
  br i1 %8, label %9, label %11, !dbg !7432, !llvm.loop !7433

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #25, !dbg !7434
  br label %15, !dbg !7434

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7423, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7422, metadata !DIExpression()), !dbg !7424
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #25, !dbg !7427
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7423, metadata !DIExpression()), !dbg !7424
  %14 = icmp eq %struct._snode* %13, null, !dbg !7427
  br i1 %14, label %15, label %7, !dbg !7425, !llvm.loop !7433

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !7436
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !7437 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7441, metadata !DIExpression()), !dbg !7443
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7442, metadata !DIExpression()), !dbg !7443
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7444
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #25, !dbg !7444
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #25, !dbg !7444
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !7445
  %5 = icmp eq %struct._snode* %4, null, !dbg !7445
  br i1 %5, label %6, label %8, !dbg !7444

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7447
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #25, !dbg !7447
  br label %8, !dbg !7447

8:                                                ; preds = %6, %2
  ret void, !dbg !7444
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !7449 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7453, metadata !DIExpression()), !dbg !7454
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7455
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7455
  ret %struct._snode* %3, !dbg !7456
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #3 !dbg !7457 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7461, metadata !DIExpression()), !dbg !7463
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7462, metadata !DIExpression()), !dbg !7463
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7464
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7465
  ret void, !dbg !7466
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #3 !dbg !7467 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7469, metadata !DIExpression()), !dbg !7471
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7470, metadata !DIExpression()), !dbg !7471
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7472
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7473
  ret void, !dbg !7474
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !7475 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7477, metadata !DIExpression()), !dbg !7478
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7479
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7479
  ret %struct._snode* %3, !dbg !7480
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #3 !dbg !7481 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7483, metadata !DIExpression()), !dbg !7485
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7484, metadata !DIExpression()), !dbg !7485
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7486
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7487
  ret void, !dbg !7488
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #7 !dbg !7489 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7493, metadata !DIExpression()), !dbg !7496
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7494, metadata !DIExpression()), !dbg !7496
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !7495, metadata !DIExpression()), !dbg !7496
  %4 = icmp eq %struct._snode* %1, null, !dbg !7497
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #25, !dbg !7499
  br i1 %4, label %6, label %11, !dbg !7500

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #25, !dbg !7501
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !7503
  %8 = icmp eq %struct._snode* %7, %2, !dbg !7503
  br i1 %8, label %9, label %15, !dbg !7501

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7505
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #25, !dbg !7505
  br label %15, !dbg !7505

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #25, !dbg !7507
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !7509
  %13 = icmp eq %struct._snode* %12, %2, !dbg !7509
  br i1 %13, label %14, label %15, !dbg !7507

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #25, !dbg !7511
  br label %15, !dbg !7511

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #25, !dbg !7500
  ret void, !dbg !7500
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #4 !dbg !7513 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7517, metadata !DIExpression()), !dbg !7518
  %2 = icmp eq %struct._snode* %0, null, !dbg !7519
  br i1 %2, label %5, label %3, !dbg !7519

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #25, !dbg !7519
  br label %5, !dbg !7519

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !7519
  ret %struct._snode* %6, !dbg !7519
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !7520 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7522, metadata !DIExpression()), !dbg !7523
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #25, !dbg !7524
  ret %struct._snode* %2, !dbg !7524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !7525 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7527, metadata !DIExpression()), !dbg !7528
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7529
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7529
  ret %struct._snode* %3, !dbg !7530
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !7531 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7533, metadata !DIExpression()), !dbg !7536
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #25, !dbg !7537, !range !7538
  call void @llvm.dbg.value(metadata i32 %2, metadata !7534, metadata !DIExpression()), !dbg !7536
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #25, !dbg !7539
  call void @llvm.dbg.value(metadata i32 %3, metadata !7535, metadata !DIExpression()), !dbg !7536
  ret i32 %3, !dbg !7540
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !7541 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7543, metadata !DIExpression()), !dbg !7546
  call void @llvm.dbg.value(metadata i8* %1, metadata !7544, metadata !DIExpression()), !dbg !7546
  call void @llvm.dbg.value(metadata i8* %1, metadata !7545, metadata !DIExpression()), !dbg !7546
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !7547
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !7547
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7548
  %6 = bitcast i8* %5 to %struct.device**, !dbg !7548
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !7548
  %8 = shl nuw i32 1, %0, !dbg !7549
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #25, !dbg !7550
  ret void, !dbg !7551
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7552 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !7556, metadata !DIExpression()), !dbg !7562
  call void @llvm.dbg.value(metadata i32 %1, metadata !7557, metadata !DIExpression()), !dbg !7562
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !7558, metadata !DIExpression()), !dbg !7562
  %4 = bitcast i64* %3 to i8*, !dbg !7563
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !7563
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !7560, metadata !DIExpression()), !dbg !7562
  store i64 70368744177732, i64* %3, align 8, !dbg !7564
  call void @llvm.dbg.value(metadata i64* %3, metadata !7560, metadata !DIExpression(DW_OP_deref)), !dbg !7562
  %5 = call fastcc i32 @clock_control_on.48(i8* noundef nonnull %4) #25, !dbg !7565
  call void @llvm.dbg.value(metadata i32 %5, metadata !7561, metadata !DIExpression()), !dbg !7562
  %6 = icmp eq i32 %5, 0, !dbg !7566
  br i1 %6, label %7, label %8, !dbg !7568

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #25, !dbg !7569
  br label %8, !dbg !7570

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !7571
  ret void, !dbg !7571
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.48(i8* noundef %0) unnamed_addr #1 !dbg !7572 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !7574, metadata !DIExpression()), !dbg !7577
  call void @llvm.dbg.value(metadata i8* %0, metadata !7575, metadata !DIExpression()), !dbg !7577
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !7578
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !7576, metadata !DIExpression()), !dbg !7577
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !7579
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !7579
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #24, !dbg !7580
  ret i32 %5, !dbg !7581
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7582 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7584, metadata !DIExpression()), !dbg !7587
  call void @llvm.dbg.value(metadata i32 %1, metadata !7585, metadata !DIExpression()), !dbg !7587
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #25, !dbg !7588
  call void @llvm.dbg.value(metadata i32 %3, metadata !7586, metadata !DIExpression()), !dbg !7587
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #25, !dbg !7589
  ret void, !dbg !7590
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #12 !dbg !7591 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7595, metadata !DIExpression()), !dbg !7596
  %2 = sdiv i32 %0, 4, !dbg !7597
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !7598
  %6 = add nsw i32 %5, 16, !dbg !7599
  %7 = shl i32 15, %6, !dbg !7600
  %8 = or i32 %7, %2, !dbg !7601
  ret i32 %8, !dbg !7602
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7603 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7607, metadata !DIExpression()), !dbg !7609
  call void @llvm.dbg.value(metadata i32 %1, metadata !7608, metadata !DIExpression()), !dbg !7609
  %3 = and i32 %1, 255, !dbg !7610
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !7610
  %5 = load volatile i32, i32* %4, align 4, !dbg !7610
  %6 = lshr i32 %1, 16, !dbg !7610
  %7 = xor i32 %6, -1, !dbg !7610
  %8 = and i32 %5, %7, !dbg !7610
  call void @llvm.dbg.value(metadata i32 %6, metadata !7611, metadata !DIExpression()) #23, !dbg !7615
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !7617, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %9, metadata !7614, metadata !DIExpression()) #23, !dbg !7615
  call void @llvm.dbg.value(metadata i32 %9, metadata !7619, metadata !DIExpression()) #23, !dbg !7624
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !7626, !range !5833
  %11 = shl i32 %0, %10, !dbg !7610
  %12 = or i32 %11, %8, !dbg !7610
  store volatile i32 %12, i32* %4, align 4, !dbg !7610
  ret void, !dbg !7627
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7628 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7632, metadata !DIExpression()), !dbg !7637
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !7633, metadata !DIExpression()), !dbg !7637
  call void @llvm.dbg.value(metadata i32 %2, metadata !7634, metadata !DIExpression()), !dbg !7637
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7638
  %5 = icmp eq %struct._snode* %4, null, !dbg !7638
  br i1 %5, label %21, label %6, !dbg !7638

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #25, !dbg !7640
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !7636, metadata !DIExpression()), !dbg !7637
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !7635, metadata !DIExpression()), !dbg !7637
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !7641
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !7641
  %11 = load i32, i32* %10, align 4, !dbg !7641
  %12 = and i32 %11, %2, !dbg !7645
  %13 = icmp eq i32 %12, 0, !dbg !7645
  br i1 %13, label %19, label %14, !dbg !7646

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !7635, metadata !DIExpression()), !dbg !7637
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !7647
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !7647
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !7647
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #24, !dbg !7649
  br label %19, !dbg !7650

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !7635, metadata !DIExpression()), !dbg !7637
  %20 = icmp eq %struct._snode* %8, null, !dbg !7651
  br i1 %20, label %21, label %6, !dbg !7651

21:                                               ; preds = %19, %3
  ret void, !dbg !7652
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !7653 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7655, metadata !DIExpression()), !dbg !7656
  %2 = and i32 %0, 255, !dbg !7657
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !7657
  %4 = load volatile i32, i32* %3, align 4, !dbg !7657
  %5 = lshr i32 %0, 16, !dbg !7657
  %6 = and i32 %4, %5, !dbg !7657
  call void @llvm.dbg.value(metadata i32 %5, metadata !7611, metadata !DIExpression()) #23, !dbg !7658
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !7660, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %7, metadata !7614, metadata !DIExpression()) #23, !dbg !7658
  call void @llvm.dbg.value(metadata i32 %7, metadata !7619, metadata !DIExpression()) #23, !dbg !7661
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !7663, !range !5833
  %9 = lshr i32 %6, %8, !dbg !7664
  ret i32 %9, !dbg !7665
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !7666 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7671, metadata !DIExpression()), !dbg !7673
  call void @llvm.dbg.value(metadata i32 %1, metadata !7672, metadata !DIExpression()), !dbg !7673
  %3 = shl i32 %1, 16, !dbg !7674
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !7674
  store volatile i32 %3, i32* %4, align 4, !dbg !7674
  ret void, !dbg !7675
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #14 !dbg !7676 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7680, metadata !DIExpression()), !dbg !7681
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !7682
  %3 = load volatile i32, i32* %2, align 4, !dbg !7682
  ret i32 %3, !dbg !7683
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !7684 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7686, metadata !DIExpression()), !dbg !7688
  call void @llvm.dbg.value(metadata i32 %1, metadata !7687, metadata !DIExpression()), !dbg !7688
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !7689
  store volatile i32 %1, i32* %3, align 4, !dbg !7689
  ret void, !dbg !7690
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #14 !dbg !7691 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7693, metadata !DIExpression()), !dbg !7694
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !7695
  %3 = load volatile i32, i32* %2, align 4, !dbg !7695
  ret i32 %3, !dbg !7696
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #7 !dbg !7697 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7701, metadata !DIExpression()), !dbg !7703
  call void @llvm.dbg.value(metadata i32* %1, metadata !7702, metadata !DIExpression()), !dbg !7703
  %3 = and i32 %0, 131072, !dbg !7704
  %4 = icmp eq i32 %3, 0, !dbg !7706
  br i1 %4, label %22, label %5, !dbg !7707

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !7708
  %6 = and i32 %0, 2, !dbg !7710
  %7 = icmp eq i32 %6, 0, !dbg !7712
  br i1 %7, label %11, label %8, !dbg !7713

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !7714
  %10 = icmp eq i32 %9, 0, !dbg !7714
  br i1 %10, label %33, label %11, !dbg !7717

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !7718
  store i32 %12, i32* %1, align 4, !dbg !7718
  %13 = and i32 %0, 16, !dbg !7719
  %14 = icmp eq i32 %13, 0, !dbg !7721
  br i1 %14, label %17, label %15, !dbg !7722

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !7723
  br label %31, !dbg !7725

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !7726
  %19 = icmp eq i32 %18, 0, !dbg !7728
  br i1 %19, label %33, label %20, !dbg !7729

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !7730
  br label %31, !dbg !7732

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !7733
  %24 = icmp eq i32 %23, 0, !dbg !7735
  br i1 %24, label %31, label %25, !dbg !7736

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !7737
  %27 = icmp eq i32 %26, 0, !dbg !7740
  br i1 %27, label %28, label %31, !dbg !7741

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !7742
  br label %33, !dbg !7743

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !7703
  ret i32 %34, !dbg !7743
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !7744 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7748, metadata !DIExpression()), !dbg !7759
  call void @llvm.dbg.value(metadata i32 %1, metadata !7749, metadata !DIExpression()), !dbg !7759
  call void @llvm.dbg.value(metadata i32 %2, metadata !7750, metadata !DIExpression()), !dbg !7759
  call void @llvm.dbg.value(metadata i32 %3, metadata !7751, metadata !DIExpression()), !dbg !7759
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7760
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !7760
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !7760
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !7752, metadata !DIExpression()), !dbg !7759
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !7761
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !7761
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !7761
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !7753, metadata !DIExpression()), !dbg !7759
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #25, !dbg !7762
  call void @llvm.dbg.value(metadata i32 %11, metadata !7754, metadata !DIExpression()), !dbg !7759
  %12 = and i32 %2, 48, !dbg !7763
  call void @llvm.dbg.value(metadata i32 %12, metadata !7755, metadata !DIExpression()), !dbg !7759
  call void @llvm.dbg.value(metadata i32 %2, metadata !7756, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !7759
  call void @llvm.dbg.value(metadata i32 %2, metadata !7757, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !7759
  call void @llvm.dbg.value(metadata i32 %2, metadata !7758, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !7759
  %13 = lshr i32 %2, 6, !dbg !7764
  %14 = and i32 %13, 1, !dbg !7764
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #25, !dbg !7765
  %15 = lshr i32 %2, 7, !dbg !7766
  %16 = and i32 %15, 3, !dbg !7766
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #25, !dbg !7767
  %17 = lshr i32 %2, 9, !dbg !7768
  %18 = and i32 %17, 3, !dbg !7768
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #25, !dbg !7769
  %19 = icmp eq i32 %12, 32, !dbg !7770
  br i1 %19, label %20, label %24, !dbg !7772

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !7773
  br i1 %21, label %22, label %23, !dbg !7776

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #25, !dbg !7777
  br label %24, !dbg !7779

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #25, !dbg !7780
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !7782
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #25, !dbg !7783
  ret void, !dbg !7784
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #12 !dbg !7785 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7787, metadata !DIExpression()), !dbg !7789
  %2 = shl nuw i32 1, %0, !dbg !7790
  call void @llvm.dbg.value(metadata i32 %2, metadata !7788, metadata !DIExpression()), !dbg !7789
  ret i32 %2, !dbg !7791
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !7792 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7796, metadata !DIExpression()), !dbg !7799
  call void @llvm.dbg.value(metadata i32 %1, metadata !7797, metadata !DIExpression()), !dbg !7799
  call void @llvm.dbg.value(metadata i32 %2, metadata !7798, metadata !DIExpression()), !dbg !7799
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !7800
  %5 = load volatile i32, i32* %4, align 4, !dbg !7800
  %6 = xor i32 %1, -1, !dbg !7800
  %7 = and i32 %5, %6, !dbg !7800
  %8 = mul i32 %2, %1, !dbg !7800
  %9 = or i32 %7, %8, !dbg !7800
  store volatile i32 %9, i32* %4, align 4, !dbg !7800
  ret void, !dbg !7801
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7802 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7804, metadata !DIExpression()), !dbg !7807
  call void @llvm.dbg.value(metadata i32 %1, metadata !7805, metadata !DIExpression()), !dbg !7807
  call void @llvm.dbg.value(metadata i32 %2, metadata !7806, metadata !DIExpression()), !dbg !7807
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !7808
  %5 = load volatile i32, i32* %4, align 4, !dbg !7808
  call void @llvm.dbg.value(metadata i32 %1, metadata !7611, metadata !DIExpression()) #23, !dbg !7809
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7811, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %6, metadata !7614, metadata !DIExpression()) #23, !dbg !7809
  call void @llvm.dbg.value(metadata i32 %6, metadata !7619, metadata !DIExpression()) #23, !dbg !7812
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7814, !range !5833
  %8 = shl nuw nsw i32 %7, 1, !dbg !7808
  %9 = shl i32 3, %8, !dbg !7808
  %10 = xor i32 %9, -1, !dbg !7808
  %11 = and i32 %5, %10, !dbg !7808
  call void @llvm.dbg.value(metadata i32 %1, metadata !7611, metadata !DIExpression()) #23, !dbg !7815
  call void @llvm.dbg.value(metadata i32 %6, metadata !7614, metadata !DIExpression()) #23, !dbg !7815
  call void @llvm.dbg.value(metadata i32 %6, metadata !7619, metadata !DIExpression()) #23, !dbg !7817
  %12 = shl i32 %2, %8, !dbg !7808
  %13 = or i32 %11, %12, !dbg !7808
  store volatile i32 %13, i32* %4, align 4, !dbg !7808
  ret void, !dbg !7819
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7820 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7822, metadata !DIExpression()), !dbg !7825
  call void @llvm.dbg.value(metadata i32 %1, metadata !7823, metadata !DIExpression()), !dbg !7825
  call void @llvm.dbg.value(metadata i32 %2, metadata !7824, metadata !DIExpression()), !dbg !7825
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !7826
  %5 = load volatile i32, i32* %4, align 4, !dbg !7826
  call void @llvm.dbg.value(metadata i32 %1, metadata !7611, metadata !DIExpression()) #23, !dbg !7827
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7829, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %6, metadata !7614, metadata !DIExpression()) #23, !dbg !7827
  call void @llvm.dbg.value(metadata i32 %6, metadata !7619, metadata !DIExpression()) #23, !dbg !7830
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7832, !range !5833
  %8 = shl nuw nsw i32 %7, 1, !dbg !7826
  %9 = shl i32 3, %8, !dbg !7826
  %10 = xor i32 %9, -1, !dbg !7826
  %11 = and i32 %5, %10, !dbg !7826
  call void @llvm.dbg.value(metadata i32 %1, metadata !7611, metadata !DIExpression()) #23, !dbg !7833
  call void @llvm.dbg.value(metadata i32 %6, metadata !7614, metadata !DIExpression()) #23, !dbg !7833
  call void @llvm.dbg.value(metadata i32 %6, metadata !7619, metadata !DIExpression()) #23, !dbg !7835
  %12 = shl i32 %2, %8, !dbg !7826
  %13 = or i32 %11, %12, !dbg !7826
  store volatile i32 %13, i32* %4, align 4, !dbg !7826
  ret void, !dbg !7837
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7838 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7840, metadata !DIExpression()), !dbg !7843
  call void @llvm.dbg.value(metadata i32 %1, metadata !7841, metadata !DIExpression()), !dbg !7843
  call void @llvm.dbg.value(metadata i32 %2, metadata !7842, metadata !DIExpression()), !dbg !7843
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !7844
  %5 = load volatile i32, i32* %4, align 4, !dbg !7844
  call void @llvm.dbg.value(metadata i32 %1, metadata !7611, metadata !DIExpression()) #23, !dbg !7845
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7847, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %6, metadata !7614, metadata !DIExpression()) #23, !dbg !7845
  call void @llvm.dbg.value(metadata i32 %6, metadata !7619, metadata !DIExpression()) #23, !dbg !7848
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7850, !range !5833
  %8 = shl nuw nsw i32 %7, 2, !dbg !7844
  %9 = shl i32 15, %8, !dbg !7844
  %10 = xor i32 %9, -1, !dbg !7844
  %11 = and i32 %5, %10, !dbg !7844
  call void @llvm.dbg.value(metadata i32 %1, metadata !7611, metadata !DIExpression()) #23, !dbg !7851
  call void @llvm.dbg.value(metadata i32 %6, metadata !7614, metadata !DIExpression()) #23, !dbg !7851
  call void @llvm.dbg.value(metadata i32 %6, metadata !7619, metadata !DIExpression()) #23, !dbg !7853
  %12 = shl i32 %2, %8, !dbg !7844
  %13 = or i32 %11, %12, !dbg !7844
  store volatile i32 %13, i32* %4, align 4, !dbg !7844
  ret void, !dbg !7855
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7856 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7858, metadata !DIExpression()), !dbg !7861
  call void @llvm.dbg.value(metadata i32 %1, metadata !7859, metadata !DIExpression()), !dbg !7861
  call void @llvm.dbg.value(metadata i32 %2, metadata !7860, metadata !DIExpression()), !dbg !7861
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !7862
  %5 = load volatile i32, i32* %4, align 4, !dbg !7862
  %6 = lshr i32 %1, 8, !dbg !7862
  call void @llvm.dbg.value(metadata i32 %6, metadata !7611, metadata !DIExpression()) #23, !dbg !7863
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !7865, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %7, metadata !7614, metadata !DIExpression()) #23, !dbg !7863
  call void @llvm.dbg.value(metadata i32 %7, metadata !7619, metadata !DIExpression()) #23, !dbg !7866
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !7868, !range !5833
  %9 = shl nuw nsw i32 %8, 2, !dbg !7862
  %10 = shl i32 15, %9, !dbg !7862
  %11 = xor i32 %10, -1, !dbg !7862
  %12 = and i32 %5, %11, !dbg !7862
  call void @llvm.dbg.value(metadata i32 %6, metadata !7611, metadata !DIExpression()) #23, !dbg !7869
  call void @llvm.dbg.value(metadata i32 %7, metadata !7614, metadata !DIExpression()) #23, !dbg !7869
  call void @llvm.dbg.value(metadata i32 %7, metadata !7619, metadata !DIExpression()) #23, !dbg !7871
  %13 = shl i32 %2, %9, !dbg !7862
  %14 = or i32 %12, %13, !dbg !7862
  store volatile i32 %14, i32* %4, align 4, !dbg !7862
  ret void, !dbg !7873
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7874 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7876, metadata !DIExpression()), !dbg !7879
  call void @llvm.dbg.value(metadata i32 %1, metadata !7877, metadata !DIExpression()), !dbg !7879
  call void @llvm.dbg.value(metadata i32 %2, metadata !7878, metadata !DIExpression()), !dbg !7879
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !7880
  %5 = load volatile i32, i32* %4, align 4, !dbg !7880
  call void @llvm.dbg.value(metadata i32 %1, metadata !7611, metadata !DIExpression()) #23, !dbg !7881
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7883, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %6, metadata !7614, metadata !DIExpression()) #23, !dbg !7881
  call void @llvm.dbg.value(metadata i32 %6, metadata !7619, metadata !DIExpression()) #23, !dbg !7884
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7886, !range !5833
  %8 = shl nuw nsw i32 %7, 1, !dbg !7880
  %9 = shl i32 3, %8, !dbg !7880
  %10 = xor i32 %9, -1, !dbg !7880
  %11 = and i32 %5, %10, !dbg !7880
  call void @llvm.dbg.value(metadata i32 %1, metadata !7611, metadata !DIExpression()) #23, !dbg !7887
  call void @llvm.dbg.value(metadata i32 %6, metadata !7614, metadata !DIExpression()) #23, !dbg !7887
  call void @llvm.dbg.value(metadata i32 %6, metadata !7619, metadata !DIExpression()) #23, !dbg !7889
  %12 = shl i32 %2, %8, !dbg !7880
  %13 = or i32 %11, %12, !dbg !7880
  store volatile i32 %13, i32* %4, align 4, !dbg !7880
  ret void, !dbg !7891
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !7892 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7894, metadata !DIExpression()), !dbg !7897
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7898
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !7898
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !7898
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !7895, metadata !DIExpression()), !dbg !7897
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !7899
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !7900
  %6 = tail call fastcc zeroext i1 @device_is_ready.54() #25, !dbg !7901
  br i1 %6, label %7, label %11, !dbg !7903

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #25, !dbg !7904
  call void @llvm.dbg.value(metadata i32 %8, metadata !7896, metadata !DIExpression()), !dbg !7897
  %9 = icmp slt i32 %8, 0, !dbg !7905
  %10 = select i1 %9, i32 %8, i32 0, !dbg !7907
  br label %11, !dbg !7907

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !7897
  ret i32 %12, !dbg !7908
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.54() unnamed_addr #1 !dbg !7909 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !7913, metadata !DIExpression()), !dbg !7914
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7915, !srcloc !7917
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.55() #25, !dbg !7918
  ret i1 %1, !dbg !7919
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7920 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7924, metadata !DIExpression()), !dbg !7929
  call void @llvm.dbg.value(metadata i8 1, metadata !7925, metadata !DIExpression()), !dbg !7929
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !7926, metadata !DIExpression()), !dbg !7929
  call void @llvm.dbg.value(metadata i32 0, metadata !7927, metadata !DIExpression()), !dbg !7929
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !7928, metadata !DIExpression()), !dbg !7929
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7930
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !7930
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !7930
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !7926, metadata !DIExpression()), !dbg !7929
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !7931
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !7934
  %7 = tail call fastcc i32 @clock_control_on.48(i8* noundef nonnull %6) #25, !dbg !7935
  call void @llvm.dbg.value(metadata i32 %7, metadata !7927, metadata !DIExpression()), !dbg !7929
  call void @llvm.dbg.value(metadata i32 %7, metadata !7927, metadata !DIExpression()), !dbg !7929
  ret i32 %7, !dbg !7936
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.55() unnamed_addr #1 !dbg !7937 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !7939, metadata !DIExpression()), !dbg !7940
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #24, !dbg !7941
  ret i1 %1, !dbg !7942
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7943 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7947, metadata !DIExpression()), !dbg !7955
  call void @llvm.dbg.value(metadata i32 %1, metadata !7948, metadata !DIExpression()), !dbg !7955
  call void @llvm.dbg.value(metadata i32 %2, metadata !7949, metadata !DIExpression()), !dbg !7955
  call void @llvm.dbg.value(metadata i32 %3, metadata !7950, metadata !DIExpression()), !dbg !7955
  call void @llvm.dbg.value(metadata i32 0, metadata !7951, metadata !DIExpression()), !dbg !7955
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #25, !dbg !7956
  %5 = icmp eq i32 %3, 17, !dbg !7957
  br i1 %5, label %6, label %14, !dbg !7958

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !7959
  call void @llvm.dbg.value(metadata i32 %7, metadata !7952, metadata !DIExpression()), !dbg !7960
  %8 = icmp eq i32 %7, 0, !dbg !7961
  %9 = shl nuw i32 1, %1, !dbg !7963
  br i1 %8, label %12, label %10, !dbg !7964

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #25, !dbg !7965
  br label %14, !dbg !7967

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #25, !dbg !7968
  br label %14, !dbg !7971

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !7972
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #15 !dbg !7973 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7975, metadata !DIExpression()), !dbg !7979
  call void @llvm.dbg.value(metadata i8* %1, metadata !7976, metadata !DIExpression()), !dbg !7979
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7980
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !7980
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !7980
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !7977, metadata !DIExpression()), !dbg !7979
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !7981
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7981
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #25, !dbg !7983
  %9 = icmp eq i32 %8, 0, !dbg !7983
  br i1 %9, label %12, label %10, !dbg !7984

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7985
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #25, !dbg !7987
  br label %12, !dbg !7988

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7989
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #25, !dbg !7991
  %15 = icmp eq i32 %14, 0, !dbg !7991
  br i1 %15, label %19, label %16, !dbg !7992

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7993
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #25, !dbg !7994
  store i8 %18, i8* %1, align 1, !dbg !7995
  br label %19, !dbg !7996

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !7979
  ret i32 %20, !dbg !7997
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !7998 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8000, metadata !DIExpression()), !dbg !8004
  call void @llvm.dbg.value(metadata i8 %1, metadata !8001, metadata !DIExpression()), !dbg !8004
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8005
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8005
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8005
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8002, metadata !DIExpression()), !dbg !8004
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !8006

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8007
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #25, !dbg !8010
  %10 = icmp eq i32 %9, 0, !dbg !8010
  br i1 %10, label %18, label %11, !dbg !8011

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8012, !srcloc !8019
  call void @llvm.dbg.value(metadata i32 undef, metadata !8015, metadata !DIExpression()) #23, !dbg !8020
  call void @llvm.dbg.value(metadata i32 undef, metadata !8016, metadata !DIExpression()) #23, !dbg !8020
  call void @llvm.dbg.value(metadata i32 undef, metadata !8003, metadata !DIExpression()), !dbg !8004
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8021
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #25, !dbg !8023
  %15 = icmp eq i32 %14, 0, !dbg !8023
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !8012
  br i1 %15, label %17, label %19, !dbg !8024

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !8015, metadata !DIExpression()) #23, !dbg !8020
  call void @llvm.dbg.value(metadata i32 %16, metadata !8003, metadata !DIExpression()), !dbg !8004
  call void @llvm.dbg.value(metadata i32 undef, metadata !8025, metadata !DIExpression()) #23, !dbg !8028
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !8030, !srcloc !8031
  br label %18, !dbg !8032

18:                                               ; preds = %17, %7
  br label %7, !dbg !8007, !llvm.loop !8033

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !8012
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8035
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #25, !dbg !8036
  call void @llvm.dbg.value(metadata i32 %20, metadata !8025, metadata !DIExpression()) #23, !dbg !8037
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !8039, !srcloc !8031
  ret void, !dbg !8040
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #15 !dbg !8041 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8043, metadata !DIExpression()), !dbg !8046
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8047
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8047
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8047
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8044, metadata !DIExpression()), !dbg !8046
  call void @llvm.dbg.value(metadata i32 0, metadata !8045, metadata !DIExpression()), !dbg !8046
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8048
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8048
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #25, !dbg !8050
  %8 = icmp ne i32 %7, 0, !dbg !8050
  %9 = zext i1 %8 to i32, !dbg !8051
  call void @llvm.dbg.value(metadata i32 %9, metadata !8045, metadata !DIExpression()), !dbg !8046
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8052
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #25, !dbg !8054
  %12 = icmp eq i32 %11, 0, !dbg !8054
  %13 = or i32 %9, 2, !dbg !8055
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !8055
  call void @llvm.dbg.value(metadata i32 %14, metadata !8045, metadata !DIExpression()), !dbg !8046
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8056
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #25, !dbg !8058
  %17 = icmp eq i32 %16, 0, !dbg !8058
  %18 = or i32 %14, 4, !dbg !8059
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !8059
  call void @llvm.dbg.value(metadata i32 %19, metadata !8045, metadata !DIExpression()), !dbg !8046
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8060
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #25, !dbg !8062
  %22 = icmp eq i32 %21, 0, !dbg !8062
  %23 = or i32 %19, 8, !dbg !8063
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !8063
  call void @llvm.dbg.value(metadata i32 %24, metadata !8045, metadata !DIExpression()), !dbg !8046
  %25 = and i32 %24, 8, !dbg !8064
  %26 = icmp eq i32 %25, 0, !dbg !8064
  br i1 %26, label %29, label %27, !dbg !8066

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8067
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #25, !dbg !8069
  br label %29, !dbg !8070

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !8071
  %31 = icmp eq i32 %30, 0, !dbg !8071
  br i1 %31, label %34, label %32, !dbg !8073

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8074
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #25, !dbg !8076
  br label %34, !dbg !8077

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !8078
  %36 = icmp eq i32 %35, 0, !dbg !8078
  br i1 %36, label %39, label %37, !dbg !8080

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8081
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #25, !dbg !8083
  br label %39, !dbg !8084

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !8085
  %41 = icmp eq i32 %40, 0, !dbg !8085
  br i1 %41, label %44, label %42, !dbg !8087

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8088
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #25, !dbg !8090
  br label %44, !dbg !8091

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8092
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #25, !dbg !8093
  ret i32 %24, !dbg !8094
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !8095 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8097, metadata !DIExpression()), !dbg !8106
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !8098, metadata !DIExpression()), !dbg !8106
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8107
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8107
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8107
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8099, metadata !DIExpression()), !dbg !8106
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8108
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !8108
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !8108
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !8100, metadata !DIExpression()), !dbg !8106
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !8109
  %10 = load i8, i8* %9, align 4, !dbg !8109
  %11 = zext i8 %10 to i32, !dbg !8110
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #25, !dbg !8111
  call void @llvm.dbg.value(metadata i32 %12, metadata !8102, metadata !DIExpression()), !dbg !8106
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !8112
  %14 = load i8, i8* %13, align 1, !dbg !8112
  %15 = zext i8 %14 to i32, !dbg !8113
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #25, !dbg !8114
  call void @llvm.dbg.value(metadata i32 %16, metadata !8103, metadata !DIExpression()), !dbg !8106
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !8115
  %18 = load i8, i8* %17, align 2, !dbg !8115
  %19 = zext i8 %18 to i32, !dbg !8116
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #25, !dbg !8117
  call void @llvm.dbg.value(metadata i32 %20, metadata !8104, metadata !DIExpression()), !dbg !8106
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !8118
  %22 = load i8, i8* %21, align 1, !dbg !8118
  %23 = zext i8 %22 to i32, !dbg !8119
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #25, !dbg !8120
  call void @llvm.dbg.value(metadata i32 %24, metadata !8105, metadata !DIExpression()), !dbg !8106
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !8121

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !8123
  br i1 %26, label %69, label %27, !dbg !8125

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !8126

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !8127
  br i1 %29, label %65, label %30, !dbg !8127

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !8129
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !8106
  br i1 %31, label %38, label %34, !dbg !8131

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !8132
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073812480, label %36
  ], !dbg !8132

36:                                               ; preds = %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !8135
  br i1 %37, label %38, label %69, !dbg !8136

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8137
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #25, !dbg !8138
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #25, !dbg !8139
  %41 = icmp eq i32 %12, %40, !dbg !8141
  br i1 %41, label %43, label %42, !dbg !8142

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #25, !dbg !8143
  br label %43, !dbg !8145

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #25, !dbg !8146
  %45 = icmp eq i32 %16, %44, !dbg !8148
  br i1 %45, label %47, label %46, !dbg !8149

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #25, !dbg !8150
  br label %47, !dbg !8152

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #25, !dbg !8153
  %49 = icmp eq i32 %20, %48, !dbg !8155
  br i1 %49, label %51, label %50, !dbg !8156

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #25, !dbg !8157
  br label %51, !dbg !8159

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #25, !dbg !8160
  %53 = icmp eq i32 %24, %52, !dbg !8162
  br i1 %53, label %55, label %54, !dbg !8163

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #25, !dbg !8164
  br label %55, !dbg !8166

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !8167
  %57 = load i32, i32* %56, align 4, !dbg !8167
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !8169
  %59 = load i32, i32* %58, align 4, !dbg !8169
  %60 = icmp eq i32 %57, %59, !dbg !8170
  br i1 %60, label %63, label %61, !dbg !8171

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #25, !dbg !8172
  %62 = load i32, i32* %56, align 4, !dbg !8174
  store i32 %62, i32* %58, align 4, !dbg !8175
  br label %63, !dbg !8176

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !8177
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #25, !dbg !8178
  br label %69, !dbg !8179

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !8127
  %67 = and i8 %66, 1, !dbg !8127
  %68 = icmp eq i8 %67, 0, !dbg !8127
  br i1 %68, label %30, label %69, !dbg !8127

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !8106
  ret i32 %70, !dbg !8180
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !8181 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8183, metadata !DIExpression()), !dbg !8186
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !8184, metadata !DIExpression()), !dbg !8186
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8187
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !8187
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !8187
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !8185, metadata !DIExpression()), !dbg !8186
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !8188
  %7 = load i32, i32* %6, align 4, !dbg !8188
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !8189
  store i32 %7, i32* %8, align 4, !dbg !8190
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #25, !dbg !8191, !range !8192
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #25, !dbg !8193
  %11 = trunc i32 %10 to i8, !dbg !8193
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !8194
  store i8 %11, i8* %12, align 4, !dbg !8195
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #25, !dbg !8196, !range !8197
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #25, !dbg !8198
  %15 = trunc i32 %14 to i8, !dbg !8198
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !8199
  store i8 %15, i8* %16, align 1, !dbg !8200
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #25, !dbg !8201
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #25, !dbg !8202, !range !8192
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #25, !dbg !8203
  %20 = trunc i32 %19 to i8, !dbg !8203
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !8204
  store i8 %20, i8* %21, align 2, !dbg !8205
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #25, !dbg !8206, !range !8207
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #25, !dbg !8208
  %24 = trunc i32 %23 to i8, !dbg !8208
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !8209
  store i8 %24, i8* %25, align 1, !dbg !8210
  ret i32 0, !dbg !8211
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8212 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8216, metadata !DIExpression()), !dbg !8218
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8219
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8219
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8219
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8217, metadata !DIExpression()), !dbg !8218
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8220
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8220
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #25, !dbg !8221
  ret i32 %7, !dbg !8222
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #12 !dbg !8223 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8227, metadata !DIExpression()), !dbg !8228
  %2 = icmp eq i32 %0, 1024, !dbg !8229
  %3 = select i1 %2, i32 2, i32 0, !dbg !8229
  %4 = icmp eq i32 %0, 1536, !dbg !8229
  %5 = select i1 %4, i32 1, i32 %3, !dbg !8229
  ret i32 %5, !dbg !8230
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8231 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8233, metadata !DIExpression()), !dbg !8235
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8236
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8236
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8236
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8234, metadata !DIExpression()), !dbg !8235
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8237
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8237
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #25, !dbg !8238
  ret i32 %7, !dbg !8239
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !8240 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8244, metadata !DIExpression()), !dbg !8245
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !8246
  %3 = icmp ult i32 %2, 4, !dbg !8246
  br i1 %3, label %4, label %7, !dbg !8246

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !8246
  %6 = load i32, i32* %5, align 4, !dbg !8246
  br label %7, !dbg !8246

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !8247
  ret i32 %8, !dbg !8249
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8250 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8252, metadata !DIExpression()), !dbg !8254
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8255
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8255
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8255
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8253, metadata !DIExpression()), !dbg !8254
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8256
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8256
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #25, !dbg !8257
  ret i32 %7, !dbg !8258
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !8259 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8263, metadata !DIExpression()), !dbg !8265
  call void @llvm.dbg.value(metadata i32 %1, metadata !8264, metadata !DIExpression()), !dbg !8265
  %3 = icmp eq i32 %0, 4096, !dbg !8266
  %4 = icmp eq i32 %1, 0, !dbg !8266
  %5 = select i1 %4, i32 4, i32 3, !dbg !8266
  %6 = select i1 %4, i32 3, i32 2, !dbg !8266
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !8266
  ret i32 %7, !dbg !8267
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8268 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8270, metadata !DIExpression()), !dbg !8272
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8273
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8273
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8273
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8271, metadata !DIExpression()), !dbg !8272
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8274
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8274
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #25, !dbg !8275
  ret i32 %7, !dbg !8276
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #12 !dbg !8277 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8281, metadata !DIExpression()), !dbg !8282
  %2 = icmp eq i32 %0, 768, !dbg !8283
  %3 = zext i1 %2 to i32, !dbg !8282
  ret i32 %3, !dbg !8285
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8286 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8291, metadata !DIExpression()), !dbg !8292
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8293
  %3 = load volatile i32, i32* %2, align 4, !dbg !8293
  %4 = and i32 %3, 768, !dbg !8293
  ret i32 %4, !dbg !8294
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8295 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8297, metadata !DIExpression()), !dbg !8298
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8299
  %3 = load volatile i32, i32* %2, align 4, !dbg !8299
  %4 = and i32 %3, 4096, !dbg !8299
  ret i32 %4, !dbg !8300
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8301 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8303, metadata !DIExpression()), !dbg !8304
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8305
  %3 = load volatile i32, i32* %2, align 4, !dbg !8305
  %4 = and i32 %3, 12288, !dbg !8305
  ret i32 %4, !dbg !8306
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8307 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8309, metadata !DIExpression()), !dbg !8310
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8311
  %3 = load volatile i32, i32* %2, align 4, !dbg !8311
  %4 = and i32 %3, 1536, !dbg !8311
  ret i32 %4, !dbg !8312
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #12 !dbg !8313 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8317, metadata !DIExpression()), !dbg !8318
  %2 = icmp eq i32 %0, 2, !dbg !8319
  %3 = select i1 %2, i32 1024, i32 0, !dbg !8319
  %4 = icmp eq i32 %0, 1, !dbg !8319
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !8319
  ret i32 %5, !dbg !8320
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #12 !dbg !8321 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8325, metadata !DIExpression()), !dbg !8326
  %2 = icmp ult i32 %0, 3, !dbg !8327
  br i1 %2, label %3, label %6, !dbg !8327

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !8327
  %5 = load i32, i32* %4, align 4, !dbg !8327
  br label %6, !dbg !8327

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !8328
  ret i32 %7, !dbg !8330
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !8331 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8335, metadata !DIExpression()), !dbg !8337
  call void @llvm.dbg.value(metadata i32 %1, metadata !8336, metadata !DIExpression()), !dbg !8337
  %3 = icmp eq i32 %0, 4, !dbg !8338
  %4 = icmp eq i32 %1, 0, !dbg !8338
  %5 = select i1 %4, i32 0, i32 4096, !dbg !8338
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !8338
  ret i32 %6, !dbg !8339
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #12 !dbg !8340 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8344, metadata !DIExpression()), !dbg !8345
  %2 = icmp eq i32 %0, 1, !dbg !8346
  %3 = select i1 %2, i32 768, i32 0, !dbg !8345
  ret i32 %3, !dbg !8348
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8349 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8353, metadata !DIExpression()), !dbg !8354
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8355
  %3 = load volatile i32, i32* %2, align 4, !dbg !8355
  %4 = and i32 %3, -8193, !dbg !8355
  store volatile i32 %4, i32* %2, align 4, !dbg !8355
  ret void, !dbg !8356
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8357 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8361, metadata !DIExpression()), !dbg !8364
  call void @llvm.dbg.value(metadata i32 %1, metadata !8362, metadata !DIExpression()), !dbg !8364
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8365
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8365
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8365
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8363, metadata !DIExpression()), !dbg !8364
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8366
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8366
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !8367
  ret void, !dbg !8368
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8369 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8371, metadata !DIExpression()), !dbg !8374
  call void @llvm.dbg.value(metadata i32 %1, metadata !8372, metadata !DIExpression()), !dbg !8374
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8375
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8375
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8375
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8373, metadata !DIExpression()), !dbg !8374
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8376
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8376
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !8377
  ret void, !dbg !8378
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8379 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8381, metadata !DIExpression()), !dbg !8384
  call void @llvm.dbg.value(metadata i32 %1, metadata !8382, metadata !DIExpression()), !dbg !8384
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8385
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8385
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8385
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8383, metadata !DIExpression()), !dbg !8384
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8386
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8386
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !8387
  ret void, !dbg !8388
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8389 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8391, metadata !DIExpression()), !dbg !8394
  call void @llvm.dbg.value(metadata i32 %1, metadata !8392, metadata !DIExpression()), !dbg !8394
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8395
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8395
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8395
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8393, metadata !DIExpression()), !dbg !8394
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8396
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8396
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !8397
  ret void, !dbg !8398
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8399 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8401, metadata !DIExpression()), !dbg !8406
  call void @llvm.dbg.value(metadata i32 %1, metadata !8402, metadata !DIExpression()), !dbg !8406
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8407
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !8407
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !8407
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !8403, metadata !DIExpression()), !dbg !8406
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8408
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !8408
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !8408
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !8404, metadata !DIExpression()), !dbg !8406
  %10 = bitcast i32* %3 to i8*, !dbg !8409
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !8409
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !8410
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !8410
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !8414
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !8414
  %15 = load i8*, i8** %14, align 4, !dbg !8414
  call void @llvm.dbg.value(metadata i32* %3, metadata !8405, metadata !DIExpression(DW_OP_deref)), !dbg !8406
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #25, !dbg !8415
  %17 = icmp slt i32 %16, 0, !dbg !8416
  br i1 %17, label %23, label %18, !dbg !8417

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !8418
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !8418
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #25, !dbg !8419
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !8420
  %22 = load i32, i32* %3, align 4, !dbg !8421
  call void @llvm.dbg.value(metadata i32 %22, metadata !8405, metadata !DIExpression()), !dbg !8406
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #25, !dbg !8422
  br label %23, !dbg !8423

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !8423
  ret void, !dbg !8423
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8424 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8426, metadata !DIExpression()), !dbg !8427
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8428
  %3 = load volatile i32, i32* %2, align 4, !dbg !8428
  %4 = or i32 %3, 8192, !dbg !8428
  store volatile i32 %4, i32* %2, align 4, !dbg !8428
  ret void, !dbg !8429
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !8430 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8432, metadata !DIExpression()), !dbg !8436
  call void @llvm.dbg.value(metadata i8* %1, metadata !8433, metadata !DIExpression()), !dbg !8436
  call void @llvm.dbg.value(metadata i32* %2, metadata !8434, metadata !DIExpression()), !dbg !8436
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !8437
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !8437
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !8437
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !8435, metadata !DIExpression()), !dbg !8436
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !8438
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !8438
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !8440
  br i1 %9, label %12, label %10, !dbg !8441

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #24, !dbg !8442
  br label %12, !dbg !8443

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !8436
  ret i32 %13, !dbg !8444
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8445 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8449, metadata !DIExpression()), !dbg !8451
  call void @llvm.dbg.value(metadata i32 0, metadata !8450, metadata !DIExpression()), !dbg !8451
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8452
  %3 = load volatile i32, i32* %2, align 4, !dbg !8452
  %4 = and i32 %3, -32769, !dbg !8452
  store volatile i32 %4, i32* %2, align 4, !dbg !8452
  ret void, !dbg !8453
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !8454 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8458, metadata !DIExpression()), !dbg !8462
  call void @llvm.dbg.value(metadata i32 %1, metadata !8459, metadata !DIExpression()), !dbg !8462
  call void @llvm.dbg.value(metadata i32 0, metadata !8460, metadata !DIExpression()), !dbg !8462
  call void @llvm.dbg.value(metadata i32 %2, metadata !8461, metadata !DIExpression()), !dbg !8462
  %4 = zext i32 %1 to i64, !dbg !8463
  %5 = mul nuw nsw i64 %4, 25, !dbg !8463
  %6 = zext i32 %2 to i64, !dbg !8463
  %7 = shl nuw nsw i64 %6, 2, !dbg !8463
  %8 = udiv i64 %5, %7, !dbg !8463
  %9 = trunc i64 %8 to i32, !dbg !8463
  %10 = udiv i32 %9, 100, !dbg !8463
  %11 = shl nuw nsw i32 %10, 4, !dbg !8463
  %12 = mul i32 %10, -100, !dbg !8463
  %13 = add i32 %12, %9, !dbg !8463
  %14 = shl i32 %13, 4, !dbg !8463
  %15 = add i32 %14, 50, !dbg !8463
  %16 = udiv i32 %15, 100, !dbg !8463
  %17 = and i32 %16, 240, !dbg !8463
  %18 = add nuw nsw i32 %17, %11, !dbg !8463
  %19 = and i32 %16, 15, !dbg !8463
  %20 = and i32 %18, 65520, !dbg !8466
  %21 = or i32 %20, %19, !dbg !8466
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !8467
  store volatile i32 %21, i32* %22, align 4, !dbg !8468
  ret void, !dbg !8469
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8470 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8472, metadata !DIExpression()), !dbg !8474
  call void @llvm.dbg.value(metadata i32 %1, metadata !8473, metadata !DIExpression()), !dbg !8474
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8475
  %4 = load volatile i32, i32* %3, align 4, !dbg !8475
  %5 = and i32 %4, -769, !dbg !8475
  %6 = or i32 %5, %1, !dbg !8475
  store volatile i32 %6, i32* %3, align 4, !dbg !8475
  ret void, !dbg !8476
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8477 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8479, metadata !DIExpression()), !dbg !8481
  call void @llvm.dbg.value(metadata i32 %1, metadata !8480, metadata !DIExpression()), !dbg !8481
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8482
  %4 = load volatile i32, i32* %3, align 4, !dbg !8482
  %5 = and i32 %4, -4097, !dbg !8482
  %6 = or i32 %5, %1, !dbg !8482
  store volatile i32 %6, i32* %3, align 4, !dbg !8482
  ret void, !dbg !8483
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8484 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8486, metadata !DIExpression()), !dbg !8488
  call void @llvm.dbg.value(metadata i32 %1, metadata !8487, metadata !DIExpression()), !dbg !8488
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8489
  %4 = load volatile i32, i32* %3, align 4, !dbg !8489
  %5 = and i32 %4, -12289, !dbg !8489
  %6 = or i32 %5, %1, !dbg !8489
  store volatile i32 %6, i32* %3, align 4, !dbg !8489
  ret void, !dbg !8490
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8491 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8493, metadata !DIExpression()), !dbg !8495
  call void @llvm.dbg.value(metadata i32 %1, metadata !8494, metadata !DIExpression()), !dbg !8495
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8496
  %4 = load volatile i32, i32* %3, align 4, !dbg !8496
  %5 = and i32 %4, -1537, !dbg !8496
  %6 = or i32 %5, %1, !dbg !8496
  store volatile i32 %6, i32* %3, align 4, !dbg !8496
  ret void, !dbg !8497
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8498 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8500, metadata !DIExpression()), !dbg !8501
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8502
  %3 = load volatile i32, i32* %2, align 4, !dbg !8502
  %4 = lshr i32 %3, 3, !dbg !8503
  %5 = and i32 %4, 1, !dbg !8503
  ret i32 %5, !dbg !8504
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8505 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8507, metadata !DIExpression()), !dbg !8508
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8509
  %3 = load volatile i32, i32* %2, align 4, !dbg !8509
  %4 = and i32 %3, 1, !dbg !8509
  ret i32 %4, !dbg !8510
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8511 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8513, metadata !DIExpression()), !dbg !8514
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8515
  %3 = load volatile i32, i32* %2, align 4, !dbg !8515
  %4 = lshr i32 %3, 1, !dbg !8516
  %5 = and i32 %4, 1, !dbg !8516
  ret i32 %5, !dbg !8517
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8518 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8520, metadata !DIExpression()), !dbg !8521
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8522
  %3 = load volatile i32, i32* %2, align 4, !dbg !8522
  %4 = lshr i32 %3, 8, !dbg !8523
  %5 = and i32 %4, 1, !dbg !8523
  ret i32 %5, !dbg !8524
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8525 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8527, metadata !DIExpression()), !dbg !8528
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8529
  store volatile i32 -257, i32* %2, align 4, !dbg !8529
  ret void, !dbg !8530
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8531 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8533, metadata !DIExpression()), !dbg !8535
  %3 = bitcast i32* %2 to i8*, !dbg !8536
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8536
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8534, metadata !DIExpression()), !dbg !8537
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8538
  %5 = load volatile i32, i32* %4, align 4, !dbg !8538
  store volatile i32 %5, i32* %2, align 4, !dbg !8539
  %6 = load volatile i32, i32* %2, align 4, !dbg !8540
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8541
  %8 = load volatile i32, i32* %7, align 4, !dbg !8541
  store volatile i32 %8, i32* %2, align 4, !dbg !8542
  %9 = load volatile i32, i32* %2, align 4, !dbg !8543
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8544
  ret void, !dbg !8544
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8545 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8547, metadata !DIExpression()), !dbg !8549
  %3 = bitcast i32* %2 to i8*, !dbg !8550
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8550
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8548, metadata !DIExpression()), !dbg !8551
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8552
  %5 = load volatile i32, i32* %4, align 4, !dbg !8552
  store volatile i32 %5, i32* %2, align 4, !dbg !8553
  %6 = load volatile i32, i32* %2, align 4, !dbg !8554
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8555
  %8 = load volatile i32, i32* %7, align 4, !dbg !8555
  store volatile i32 %8, i32* %2, align 4, !dbg !8556
  %9 = load volatile i32, i32* %2, align 4, !dbg !8557
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8558
  ret void, !dbg !8558
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8559 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8561, metadata !DIExpression()), !dbg !8563
  %3 = bitcast i32* %2 to i8*, !dbg !8564
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8564
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8562, metadata !DIExpression()), !dbg !8565
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8566
  %5 = load volatile i32, i32* %4, align 4, !dbg !8566
  store volatile i32 %5, i32* %2, align 4, !dbg !8567
  %6 = load volatile i32, i32* %2, align 4, !dbg !8568
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8569
  %8 = load volatile i32, i32* %7, align 4, !dbg !8569
  store volatile i32 %8, i32* %2, align 4, !dbg !8570
  %9 = load volatile i32, i32* %2, align 4, !dbg !8571
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8572
  ret void, !dbg !8572
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8573 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8575, metadata !DIExpression()), !dbg !8577
  %3 = bitcast i32* %2 to i8*, !dbg !8578
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8578
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8576, metadata !DIExpression()), !dbg !8579
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8580
  %5 = load volatile i32, i32* %4, align 4, !dbg !8580
  store volatile i32 %5, i32* %2, align 4, !dbg !8581
  %6 = load volatile i32, i32* %2, align 4, !dbg !8582
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8583
  %8 = load volatile i32, i32* %7, align 4, !dbg !8583
  store volatile i32 %8, i32* %2, align 4, !dbg !8584
  %9 = load volatile i32, i32* %2, align 4, !dbg !8585
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8586
  ret void, !dbg !8586
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8587 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8589, metadata !DIExpression()), !dbg !8590
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8591
  %3 = load volatile i32, i32* %2, align 4, !dbg !8591
  %4 = lshr i32 %3, 7, !dbg !8592
  %5 = and i32 %4, 1, !dbg !8592
  ret i32 %5, !dbg !8593
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #13 !dbg !8594 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8598, metadata !DIExpression()), !dbg !8600
  call void @llvm.dbg.value(metadata i8 %1, metadata !8599, metadata !DIExpression()), !dbg !8600
  %3 = zext i8 %1 to i32, !dbg !8601
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8602
  store volatile i32 %3, i32* %4, align 4, !dbg !8603
  ret void, !dbg !8604
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8605 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8607, metadata !DIExpression()), !dbg !8608
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8609
  %3 = load volatile i32, i32* %2, align 4, !dbg !8609
  %4 = lshr i32 %3, 5, !dbg !8610
  %5 = and i32 %4, 1, !dbg !8610
  ret i32 %5, !dbg !8611
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8612 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8616, metadata !DIExpression()), !dbg !8617
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8618
  %3 = load volatile i32, i32* %2, align 4, !dbg !8618
  %4 = trunc i32 %3 to i8, !dbg !8619
  ret i8 %4, !dbg !8620
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !8621 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8623, metadata !DIExpression()), !dbg !8629
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8630
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8630
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8630
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8624, metadata !DIExpression()), !dbg !8629
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8631
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !8631
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !8631
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !8625, metadata !DIExpression()), !dbg !8629
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #25, !dbg !8632
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !8633
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !8633
  %10 = tail call fastcc zeroext i1 @device_is_ready.60(%struct.device* noundef %9) #25, !dbg !8635
  br i1 %10, label %11, label %49, !dbg !8636

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !8637
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !8638
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !8638
  %15 = load i8*, i8** %14, align 4, !dbg !8638
  %16 = tail call fastcc i32 @clock_control_on.61(%struct.device* noundef %12, i8* noundef %15) #25, !dbg !8639
  call void @llvm.dbg.value(metadata i32 %16, metadata !8628, metadata !DIExpression()), !dbg !8629
  %17 = icmp eq i32 %16, 0, !dbg !8640
  br i1 %17, label %18, label %49, !dbg !8642

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !8643
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !8643
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #25, !dbg !8644
  call void @llvm.dbg.value(metadata i32 %21, metadata !8628, metadata !DIExpression()), !dbg !8629
  %22 = icmp slt i32 %21, 0, !dbg !8645
  br i1 %22, label %49, label %23, !dbg !8647

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8648
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8648
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #25, !dbg !8649
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8650
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #25, !dbg !8651
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !8652
  %28 = load i32, i32* %27, align 4, !dbg !8652
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !8654

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !8626, metadata !DIExpression()), !dbg !8629
  call void @llvm.dbg.value(metadata i32 4096, metadata !8627, metadata !DIExpression()), !dbg !8629
  br label %31, !dbg !8655

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !8626, metadata !DIExpression()), !dbg !8629
  call void @llvm.dbg.value(metadata i32 0, metadata !8627, metadata !DIExpression()), !dbg !8629
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !8658
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !8658
  call void @llvm.dbg.value(metadata i32 %33, metadata !8627, metadata !DIExpression()), !dbg !8629
  call void @llvm.dbg.value(metadata i32 %32, metadata !8626, metadata !DIExpression()), !dbg !8629
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8659
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #25, !dbg !8660
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !8661
  %36 = load i8, i8* %35, align 4, !dbg !8661, !range !5253
  %37 = icmp eq i8 %36, 0, !dbg !8661
  br i1 %37, label %39, label %38, !dbg !8663

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #25, !dbg !8664
  br label %39, !dbg !8666

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !8667
  %41 = load i32, i32* %40, align 4, !dbg !8667
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #25, !dbg !8668
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !8669
  %43 = load i8, i8* %42, align 4, !dbg !8669, !range !5253
  %44 = icmp eq i8 %43, 0, !dbg !8669
  br i1 %44, label %47, label %45, !dbg !8671

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8672
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #25, !dbg !8674
  br label %47, !dbg !8675

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8676
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #25, !dbg !8677
  br label %49, !dbg !8678

49:                                               ; preds = %18, %11, %1, %47
  %50 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !8629
  ret i32 %50, !dbg !8679
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !8680 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8684, metadata !DIExpression()), !dbg !8688
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8689
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !8689
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !8689
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !8685, metadata !DIExpression()), !dbg !8688
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !8686, metadata !DIExpression()), !dbg !8688
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !8690
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !8691
  ret void, !dbg !8692
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.60(%struct.device* noundef %0) unnamed_addr #1 !dbg !8693 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8697, metadata !DIExpression()), !dbg !8698
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8699, !srcloc !8701
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.62(%struct.device* noundef %0) #25, !dbg !8702
  ret i1 %2, !dbg !8703
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.61(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !8704 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8706, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata i8* %1, metadata !8707, metadata !DIExpression()), !dbg !8709
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !8710
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !8710
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !8710
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !8708, metadata !DIExpression()), !dbg !8709
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !8711
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !8711
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #24, !dbg !8712
  ret i32 %8, !dbg !8713
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !8714 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !8718, metadata !DIExpression()), !dbg !8722
  call void @llvm.dbg.value(metadata i8 0, metadata !8719, metadata !DIExpression()), !dbg !8722
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !8723
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !8723
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !8721, metadata !DIExpression(DW_OP_deref)), !dbg !8722
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #24, !dbg !8724
  call void @llvm.dbg.value(metadata i32 %4, metadata !8720, metadata !DIExpression()), !dbg !8722
  %5 = icmp slt i32 %4, 0, !dbg !8725
  br i1 %5, label %9, label %6, !dbg !8727

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !8728
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !8721, metadata !DIExpression()), !dbg !8722
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #25, !dbg !8729
  br label %9, !dbg !8730

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !8722
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !8731
  ret i32 %10, !dbg !8731
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !8732 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8734, metadata !DIExpression()), !dbg !8738
  call void @llvm.dbg.value(metadata i32 12, metadata !8735, metadata !DIExpression()), !dbg !8738
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !8739

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !8740, metadata !DIExpression()) #23, !dbg !8746
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !8749, !srcloc !8750
  call void @llvm.dbg.value(metadata i32 %4, metadata !8745, metadata !DIExpression()) #23, !dbg !8746
  %5 = or i32 %4, 12, !dbg !8751
  call void @llvm.dbg.value(metadata i32 %5, metadata !8736, metadata !DIExpression()), !dbg !8752
  call void @llvm.dbg.value(metadata i32 %5, metadata !8753, metadata !DIExpression()) #23, !dbg !8760
  call void @llvm.dbg.value(metadata i32* %2, metadata !8758, metadata !DIExpression()) #23, !dbg !8760
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !8762, !srcloc !8763
  call void @llvm.dbg.value(metadata i32 %6, metadata !8759, metadata !DIExpression()) #23, !dbg !8760
  %7 = icmp eq i32 %6, 0, !dbg !8739
  br i1 %7, label %8, label %3, !dbg !8751, !llvm.loop !8764

8:                                                ; preds = %3
  ret void, !dbg !8765
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !8766 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8768, metadata !DIExpression()), !dbg !8772
  call void @llvm.dbg.value(metadata i32 %1, metadata !8769, metadata !DIExpression()), !dbg !8772
  call void @llvm.dbg.value(metadata i32 %2, metadata !8770, metadata !DIExpression()), !dbg !8772
  call void @llvm.dbg.value(metadata i32 0, metadata !8771, metadata !DIExpression()), !dbg !8772
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8773
  %5 = load volatile i32, i32* %4, align 4, !dbg !8773
  %6 = and i32 %5, -5633, !dbg !8773
  %7 = or i32 %2, %1, !dbg !8773
  %8 = or i32 %7, %6, !dbg !8773
  store volatile i32 %8, i32* %4, align 4, !dbg !8773
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8774
  %10 = load volatile i32, i32* %9, align 4, !dbg !8774
  %11 = and i32 %10, -12289, !dbg !8774
  store volatile i32 %11, i32* %9, align 4, !dbg !8774
  ret void, !dbg !8775
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8776 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8778, metadata !DIExpression()), !dbg !8779
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8780
  %3 = load volatile i32, i32* %2, align 4, !dbg !8780
  %4 = or i32 %3, 8, !dbg !8780
  store volatile i32 %4, i32* %2, align 4, !dbg !8780
  ret void, !dbg !8781
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8782 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !8786, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !8787, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.value(metadata i32 0, metadata !8788, metadata !DIExpression()), !dbg !8789
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !8790
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !8790
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !8791
  %5 = load i8, i8* %4, align 4, !dbg !8791
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #24, !dbg !8792
  ret i32 %6, !dbg !8793
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.62(%struct.device* noundef %0) unnamed_addr #1 !dbg !8794 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8796, metadata !DIExpression()), !dbg !8797
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #24, !dbg !8798
  ret i1 %2, !dbg !8799
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #13 !dbg !8800 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8802, metadata !DIExpression()), !dbg !8803
  tail call fastcc void @__NVIC_SetPriority.64() #25, !dbg !8804
  store i32 16799, i32* @last_load, align 4, !dbg !8805
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8806
  store volatile i32 16799, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !8807
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8808
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8809
  %3 = or i32 %2, 7, !dbg !8809
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8809
  ret i32 0, !dbg !8810
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.64() unnamed_addr #13 !dbg !8811 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !8813, metadata !DIExpression()), !dbg !8815
  call void @llvm.dbg.value(metadata i32 1, metadata !8814, metadata !DIExpression()), !dbg !8815
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !8816
  ret void, !dbg !8819
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8820 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8822, metadata !DIExpression()), !dbg !8824
  %2 = tail call fastcc i32 @elapsed() #25, !dbg !8825
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8826
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8827
  %5 = add i32 %4, %3, !dbg !8827
  store i32 %5, i32* @cycle_count, align 4, !dbg !8827
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8828
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !8829
  %7 = sub i32 %5, %6, !dbg !8832
  %8 = udiv i32 %7, 16800, !dbg !8833
  call void @llvm.dbg.value(metadata i32 %8, metadata !8823, metadata !DIExpression()), !dbg !8824
  %9 = mul nuw i32 %8, 16800, !dbg !8834
  %10 = add i32 %9, %6, !dbg !8835
  store i32 %10, i32* @announced_cycles, align 4, !dbg !8835
  tail call void @sys_clock_announce(i32 noundef %8) #24, !dbg !8836
  tail call void @z_arm_int_exit() #24, !dbg !8837
  ret void, !dbg !8838
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #13 !dbg !8839 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8844
  call void @llvm.dbg.value(metadata i32 %1, metadata !8841, metadata !DIExpression()), !dbg !8845
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8846
  call void @llvm.dbg.value(metadata i32 %2, metadata !8842, metadata !DIExpression()), !dbg !8845
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8847
  call void @llvm.dbg.value(metadata i32 %3, metadata !8843, metadata !DIExpression()), !dbg !8845
  %4 = and i32 %2, 65536, !dbg !8848
  %5 = icmp ne i32 %4, 0, !dbg !8848
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !8850
  %8 = load i32, i32* @last_load, align 4, !dbg !8845
  br i1 %7, label %9, label %13, !dbg !8850

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8851
  %11 = add i32 %10, %8, !dbg !8851
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !8851
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8853
  br label %13, !dbg !8854

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !8855
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8856
  %16 = add i32 %14, %15, !dbg !8857
  ret i32 %16, !dbg !8858
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !8859 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8863, metadata !DIExpression()), !dbg !8876
  call void @llvm.dbg.value(metadata i1 %1, metadata !8864, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8876
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !8877
  br i1 %4, label %5, label %8, !dbg !8877

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8879
  %7 = and i32 %6, -2, !dbg !8879
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8879
  store i32 -16777216, i32* @last_load, align 4, !dbg !8881
  br label %54, !dbg !8882

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !8883
  call void @llvm.dbg.value(metadata i32 %9, metadata !8868, metadata !DIExpression()), !dbg !8876
  br i1 %3, label %18, label %10, !dbg !8884

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !8884
  call void @llvm.dbg.value(metadata i32 undef, metadata !8863, metadata !DIExpression()), !dbg !8876
  %12 = icmp slt i32 %11, 1, !dbg !8885
  br i1 %12, label %18, label %13, !dbg !8885

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 997, !dbg !8885
  %15 = select i1 %14, i32 %11, i32 997, !dbg !8885
  %16 = mul nuw nsw i32 %15, 16800, !dbg !8885
  %17 = add nuw nsw i32 %16, 16799, !dbg !8885
  br label %18, !dbg !8885

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 16799, %10 ], [ 16749599, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8863, metadata !DIExpression()), !dbg !8876
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8886, metadata !DIExpression()) #23, !dbg !8893
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8895, !srcloc !8901
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !8895
  call void @llvm.dbg.value(metadata i32 %21, metadata !8898, metadata !DIExpression()) #23, !dbg !8902
  call void @llvm.dbg.value(metadata i32 undef, metadata !8899, metadata !DIExpression()) #23, !dbg !8902
  call void @llvm.dbg.value(metadata i32 %21, metadata !8892, metadata !DIExpression()) #23, !dbg !8893
  call void @llvm.dbg.value(metadata i32 %21, metadata !8869, metadata !DIExpression()), !dbg !8876
  %22 = tail call fastcc i32 @elapsed() #25, !dbg !8903
  call void @llvm.dbg.value(metadata i32 %22, metadata !8874, metadata !DIExpression()), !dbg !8876
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8904
  call void @llvm.dbg.value(metadata i32 %23, metadata !8866, metadata !DIExpression()), !dbg !8876
  %24 = load i32, i32* @cycle_count, align 4, !dbg !8905
  %25 = add i32 %24, %22, !dbg !8905
  store i32 %25, i32* @cycle_count, align 4, !dbg !8905
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8906
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !8907
  %27 = sub i32 %25, %26, !dbg !8908
  call void @llvm.dbg.value(metadata i32 %27, metadata !8875, metadata !DIExpression()), !dbg !8876
  %28 = icmp slt i32 %27, 0, !dbg !8909
  br i1 %28, label %38, label %29, !dbg !8911

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !8865, metadata !DIExpression()), !dbg !8876
  call void @llvm.dbg.value(metadata i32 undef, metadata !8865, metadata !DIExpression()), !dbg !8876
  %30 = add nuw i32 %19, %27, !dbg !8912
  %31 = urem i32 %30, 16800, !dbg !8914
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !8865, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8876
  %32 = sub nuw nsw i32 %19, %31, !dbg !8915
  call void @llvm.dbg.value(metadata i32 %32, metadata !8865, metadata !DIExpression()), !dbg !8876
  %33 = icmp ugt i32 %32, 1050, !dbg !8916
  br i1 %33, label %34, label %36, !dbg !8916

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !8865, metadata !DIExpression()), !dbg !8876
  %35 = icmp ugt i32 %32, 16749600, !dbg !8917
  br i1 %35, label %38, label %36, !dbg !8919

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1050, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1050, %18 ], [ 16749600, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !8920
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8921
  call void @llvm.dbg.value(metadata i32 %40, metadata !8867, metadata !DIExpression()), !dbg !8876
  %41 = add nsw i32 %39, -1, !dbg !8922
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !8923
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8924
  %42 = icmp ult i32 %23, %40, !dbg !8925
  br i1 %42, label %43, label %48, !dbg !8927

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !8928
  %45 = add i32 %23, %9, !dbg !8930
  %46 = sub i32 %45, %40, !dbg !8931
  %47 = add i32 %46, %44, !dbg !8928
  br label %52, !dbg !8932

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !8933
  %50 = load i32, i32* @cycle_count, align 4, !dbg !8935
  %51 = add i32 %49, %50, !dbg !8935
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !8936
  store i32 %53, i32* @cycle_count, align 4, !dbg !8936
  call void @llvm.dbg.value(metadata i32 %21, metadata !8937, metadata !DIExpression()) #23, !dbg !8943
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8942, metadata !DIExpression()) #23, !dbg !8943
  call void @llvm.dbg.value(metadata i32 %21, metadata !8945, metadata !DIExpression()) #23, !dbg !8948
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #23, !dbg !8950, !srcloc !8951
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !8952
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !8953 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8886, metadata !DIExpression()) #23, !dbg !8957
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8959, !srcloc !8901
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !8959
  call void @llvm.dbg.value(metadata i32 %2, metadata !8898, metadata !DIExpression()) #23, !dbg !8961
  call void @llvm.dbg.value(metadata i32 undef, metadata !8899, metadata !DIExpression()) #23, !dbg !8961
  call void @llvm.dbg.value(metadata i32 %2, metadata !8892, metadata !DIExpression()) #23, !dbg !8957
  call void @llvm.dbg.value(metadata i32 %2, metadata !8955, metadata !DIExpression()), !dbg !8962
  %3 = tail call fastcc i32 @elapsed() #25, !dbg !8963
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8964
  %5 = add i32 %4, %3, !dbg !8965
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !8966
  %7 = sub i32 %5, %6, !dbg !8967
  call void @llvm.dbg.value(metadata i32 %7, metadata !8956, metadata !DIExpression()), !dbg !8962
  call void @llvm.dbg.value(metadata i32 %2, metadata !8937, metadata !DIExpression()) #23, !dbg !8968
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8942, metadata !DIExpression()) #23, !dbg !8968
  call void @llvm.dbg.value(metadata i32 %2, metadata !8945, metadata !DIExpression()) #23, !dbg !8970
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !8972, !srcloc !8951
  %8 = udiv i32 %7, 16800, !dbg !8973
  ret i32 %8, !dbg !8974
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !8975 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8886, metadata !DIExpression()) #23, !dbg !8979
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8981, !srcloc !8901
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !8981
  call void @llvm.dbg.value(metadata i32 %2, metadata !8898, metadata !DIExpression()) #23, !dbg !8983
  call void @llvm.dbg.value(metadata i32 undef, metadata !8899, metadata !DIExpression()) #23, !dbg !8983
  call void @llvm.dbg.value(metadata i32 %2, metadata !8892, metadata !DIExpression()) #23, !dbg !8979
  call void @llvm.dbg.value(metadata i32 %2, metadata !8977, metadata !DIExpression()), !dbg !8984
  %3 = tail call fastcc i32 @elapsed() #25, !dbg !8985
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8986
  %5 = add i32 %4, %3, !dbg !8987
  call void @llvm.dbg.value(metadata i32 %5, metadata !8978, metadata !DIExpression()), !dbg !8984
  call void @llvm.dbg.value(metadata i32 %2, metadata !8937, metadata !DIExpression()) #23, !dbg !8988
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8942, metadata !DIExpression()) #23, !dbg !8988
  call void @llvm.dbg.value(metadata i32 %2, metadata !8945, metadata !DIExpression()) #23, !dbg !8990
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !8992, !srcloc !8951
  ret i32 %5, !dbg !8993
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #13 !dbg !8994 {
  %1 = load i32, i32* @last_load, align 4, !dbg !8995
  %2 = icmp eq i32 %1, -16777216, !dbg !8997
  br i1 %2, label %3, label %6, !dbg !8998

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8999
  %5 = or i32 %4, 1, !dbg !8999
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8999
  br label %6, !dbg !9001

6:                                                ; preds = %3, %0
  ret void, !dbg !9002
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #13 !dbg !9003 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9004
  %2 = and i32 %1, -2, !dbg !9004
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9004
  ret void, !dbg !9005
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #11 !dbg !9006 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !9032, metadata !DIExpression()), !dbg !9035
  call void @llvm.dbg.value(metadata i8 %1, metadata !9033, metadata !DIExpression()), !dbg !9035
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !9034, metadata !DIExpression()), !dbg !9035
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !9036
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9036
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !9035
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9037
  %8 = load i8, i8* %6, align 4, !dbg !9038
  %9 = zext i8 %8 to i32, !dbg !9039
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !9039
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !9040
  br i1 %11, label %18, label %24, !dbg !9041

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !9035
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9037
  %14 = load i8, i8* %6, align 4, !dbg !9038
  %15 = zext i8 %14 to i32, !dbg !9039
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !9039
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !9040
  br i1 %17, label %18, label %24, !dbg !9041, !llvm.loop !9042

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !9044
  %21 = load i8, i8* %20, align 1, !dbg !9044
  %22 = icmp eq i8 %21, %1, !dbg !9047
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !9048
  br i1 %22, label %24, label %12, !dbg !9049

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !9035
  ret i32 %25, !dbg !9050
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9051 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !9062, metadata !DIExpression()), !dbg !9078
  call void @llvm.dbg.value(metadata i8 %1, metadata !9063, metadata !DIExpression()), !dbg !9078
  call void @llvm.dbg.value(metadata i32 %2, metadata !9064, metadata !DIExpression()), !dbg !9078
  call void @llvm.dbg.value(metadata i32 0, metadata !9067, metadata !DIExpression()), !dbg !9078
  call void @llvm.dbg.value(metadata i32 0, metadata !9068, metadata !DIExpression()), !dbg !9078
  call void @llvm.dbg.value(metadata i8 0, metadata !9069, metadata !DIExpression()), !dbg !9079
  %4 = icmp eq i8 %1, 0, !dbg !9080
  br i1 %4, label %35, label %5, !dbg !9081

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !9080
  br label %9, !dbg !9081

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !9069, metadata !DIExpression()), !dbg !9079
  call void @llvm.dbg.value(metadata i32 %29, metadata !9067, metadata !DIExpression()), !dbg !9078
  %8 = icmp eq i32 %34, %6, !dbg !9080
  br i1 %8, label %35, label %9, !dbg !9081, !llvm.loop !9082

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !9069, metadata !DIExpression()), !dbg !9079
  call void @llvm.dbg.value(metadata i32 %11, metadata !9067, metadata !DIExpression()), !dbg !9078
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !9084
  %13 = load i32, i32* %12, align 4, !dbg !9084
  call void @llvm.dbg.value(metadata i32 %13, metadata !9066, metadata !DIExpression()), !dbg !9078
  %14 = and i32 %13, 31, !dbg !9085
  %15 = icmp ult i32 %14, 16, !dbg !9086
  br i1 %15, label %16, label %20, !dbg !9087

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !9088
  %18 = load i32, i32* %17, align 4, !dbg !9088
  %19 = or i32 %18, 32, !dbg !9090
  call void @llvm.dbg.value(metadata i32 %19, metadata !9067, metadata !DIExpression()), !dbg !9078
  br label %28, !dbg !9091

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !9092

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !9093
  %23 = load i32, i32* %22, align 4, !dbg !9093
  call void @llvm.dbg.value(metadata i32 %23, metadata !9071, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !9094
  %24 = lshr i32 %23, 7, !dbg !9095
  %25 = and i32 %24, 16, !dbg !9095
  %26 = or i32 %25, %23, !dbg !9095
  call void @llvm.dbg.value(metadata i32 %26, metadata !9067, metadata !DIExpression()), !dbg !9078
  br label %28, !dbg !9096

27:                                               ; preds = %20
  br label %28, !dbg !9097

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !9078
  call void @llvm.dbg.value(metadata i32 %29, metadata !9067, metadata !DIExpression()), !dbg !9078
  %30 = lshr i32 %13, 5, !dbg !9097
  %31 = and i32 %30, 255, !dbg !9097
  call void @llvm.dbg.value(metadata i32 %31, metadata !9065, metadata !DIExpression()), !dbg !9078
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #25, !dbg !9098
  call void @llvm.dbg.value(metadata i32 %32, metadata !9068, metadata !DIExpression()), !dbg !9078
  %33 = icmp slt i32 %32, 0, !dbg !9099
  %34 = add nuw nsw i32 %10, 1, !dbg !9101
  call void @llvm.dbg.value(metadata i32 %34, metadata !9069, metadata !DIExpression()), !dbg !9079
  br i1 %33, label %35, label %7, !dbg !9102

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !9103
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9104 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9108, metadata !DIExpression()), !dbg !9112
  call void @llvm.dbg.value(metadata i32 %1, metadata !9109, metadata !DIExpression()), !dbg !9112
  call void @llvm.dbg.value(metadata i32 %2, metadata !9110, metadata !DIExpression()), !dbg !9112
  %4 = icmp ugt i32 %0, 175, !dbg !9113
  br i1 %4, label %16, label %5, !dbg !9115

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !9116
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !9117
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !9117
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !9111, metadata !DIExpression()), !dbg !9112
  %9 = add nsw i32 %6, -9, !dbg !9118
  %10 = icmp ult i32 %9, 2, !dbg !9118
  br i1 %10, label %16, label %11, !dbg !9120

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.69(%struct.device* noundef %8) #25, !dbg !9121
  br i1 %12, label %13, label %16, !dbg !9122

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !9123
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #24, !dbg !9124
  br label %16, !dbg !9125

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !9112
  ret i32 %17, !dbg !9126
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.69(%struct.device* noundef %0) unnamed_addr #1 !dbg !9127 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9131, metadata !DIExpression()), !dbg !9132
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9133, !srcloc !9135
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.70(%struct.device* noundef %0) #25, !dbg !9136
  ret i1 %2, !dbg !9137
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.70(%struct.device* noundef %0) unnamed_addr #1 !dbg !9138 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9140, metadata !DIExpression()), !dbg !9141
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #24, !dbg !9142
  ret i1 %2, !dbg !9143
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #12 !dbg !9144 {
  ret void, !dbg !9145
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #14 !dbg !9146 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9148, metadata !DIExpression()), !dbg !9153
  call void @llvm.dbg.value(metadata i32 0, metadata !9149, metadata !DIExpression()), !dbg !9153
  call void @llvm.dbg.value(metadata i32 2, metadata !9150, metadata !DIExpression()), !dbg !9153
  call void @llvm.dbg.value(metadata i32 0, metadata !9151, metadata !DIExpression()), !dbg !9153
  call void @llvm.dbg.value(metadata i32 2, metadata !9152, metadata !DIExpression()), !dbg !9153
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9154
  %2 = and i32 %1, 12, !dbg !9155
  call void @llvm.dbg.value(metadata i32 %2, metadata !9148, metadata !DIExpression()), !dbg !9153
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !9156

3:                                                ; preds = %0
  br label %21, !dbg !9157

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9159
  call void @llvm.dbg.value(metadata i32 %5, metadata !9151, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !9153
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9160
  %7 = and i32 %6, 63, !dbg !9161
  call void @llvm.dbg.value(metadata i32 %7, metadata !9152, metadata !DIExpression()), !dbg !9153
  %8 = and i32 %5, 4194304, !dbg !9162
  %9 = icmp eq i32 %8, 0, !dbg !9162
  %10 = select i1 %9, i32 16000000, i32 12000000
  %11 = udiv i32 %10, %7, !dbg !9164
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9164
  %13 = lshr i32 %12, 6, !dbg !9164
  %14 = and i32 %13, 511, !dbg !9164
  %15 = mul i32 %14, %11, !dbg !9164
  call void @llvm.dbg.value(metadata i32 %15, metadata !9149, metadata !DIExpression()), !dbg !9153
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9165
  %17 = lshr i32 %16, 15, !dbg !9166
  %18 = and i32 %17, 6, !dbg !9166
  %19 = add nuw nsw i32 %18, 2, !dbg !9166
  call void @llvm.dbg.value(metadata i32 %19, metadata !9150, metadata !DIExpression()), !dbg !9153
  %20 = udiv i32 %15, %19, !dbg !9167
  br label %21, !dbg !9168

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 12000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !9169
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9170
  %24 = lshr i32 %23, 4, !dbg !9171
  %25 = and i32 %24, 15, !dbg !9171
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !9172
  %27 = load i8, i8* %26, align 1, !dbg !9172
  %28 = zext i8 %27 to i32, !dbg !9172
  call void @llvm.dbg.value(metadata i32 %28, metadata !9148, metadata !DIExpression()), !dbg !9153
  %29 = lshr i32 %22, %28, !dbg !9173
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !9173
  ret void, !dbg !9174
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !9175 {
  ret i32 0, !dbg !9180
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !9181 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !9207, metadata !DIExpression()), !dbg !9218
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !9219
  br i1 %3, label %311, label %4, !dbg !9221

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !9222
  %6 = load i32, i32* %5, align 4, !dbg !9222
  %7 = and i32 %6, 1, !dbg !9224
  %8 = icmp eq i32 %7, 0, !dbg !9225
  br i1 %8, label %66, label %9, !dbg !9226

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9227
  %11 = and i32 %10, 12, !dbg !9227
  %12 = icmp eq i32 %11, 4, !dbg !9230
  br i1 %12, label %21, label %13, !dbg !9231

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9232
  %15 = and i32 %14, 12, !dbg !9232
  %16 = icmp eq i32 %15, 8, !dbg !9233
  br i1 %16, label %17, label %29, !dbg !9234

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9235
  %19 = and i32 %18, 4194304, !dbg !9236
  %20 = icmp eq i32 %19, 0, !dbg !9237
  br i1 %20, label %29, label %21, !dbg !9238

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9239
  %23 = and i32 %22, 131072, !dbg !9239
  %24 = icmp eq i32 %23, 0, !dbg !9239
  br i1 %24, label %66, label %25, !dbg !9242

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !9243
  %27 = load i32, i32* %26, align 4, !dbg !9243
  %28 = icmp eq i32 %27, 0, !dbg !9244
  br i1 %28, label %311, label %66, !dbg !9245

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !9246
  %31 = load i32, i32* %30, align 4, !dbg !9246
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !9250

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9251
  %34 = or i32 %33, 65536, !dbg !9251
  br label %45, !dbg !9251

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9253
  %37 = or i32 %36, 262144, !dbg !9253
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9253
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9253
  %39 = or i32 %38, 65536, !dbg !9253
  br label %45, !dbg !9253

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9256
  %42 = and i32 %41, -65537, !dbg !9256
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9256
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9256
  %44 = and i32 %43, -262145, !dbg !9256
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9258
  %47 = load i32, i32* %30, align 4, !dbg !9259
  %48 = icmp eq i32 %47, 0, !dbg !9261
  %49 = tail call i32 @HAL_GetTick() #24, !dbg !9262
  call void @llvm.dbg.value(metadata i32 %49, metadata !9208, metadata !DIExpression()), !dbg !9218
  call void @llvm.dbg.value(metadata i32 %49, metadata !9208, metadata !DIExpression()), !dbg !9218
  br i1 %48, label %58, label %50, !dbg !9263

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9264
  %52 = and i32 %51, 131072, !dbg !9266
  %53 = icmp eq i32 %52, 0, !dbg !9266
  br i1 %53, label %54, label %66, !dbg !9267

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #24, !dbg !9268
  %56 = sub i32 %55, %49, !dbg !9271
  %57 = icmp ugt i32 %56, 100, !dbg !9272
  br i1 %57, label %311, label %50, !dbg !9273, !llvm.loop !9274

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9276
  %60 = and i32 %59, 131072, !dbg !9276
  %61 = icmp eq i32 %60, 0, !dbg !9276
  br i1 %61, label %66, label %62, !dbg !9278

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #24, !dbg !9279
  %64 = sub i32 %63, %49, !dbg !9282
  %65 = icmp ugt i32 %64, 100, !dbg !9283
  br i1 %65, label %311, label %58, !dbg !9284, !llvm.loop !9285

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !9287
  %68 = and i32 %67, 2, !dbg !9289
  %69 = icmp eq i32 %68, 0, !dbg !9290
  br i1 %69, label %121, label %70, !dbg !9291

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9292
  %72 = and i32 %71, 12, !dbg !9292
  %73 = icmp eq i32 %72, 0, !dbg !9295
  br i1 %73, label %82, label %74, !dbg !9296

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9297
  %76 = and i32 %75, 12, !dbg !9297
  %77 = icmp eq i32 %76, 8, !dbg !9298
  br i1 %77, label %78, label %90, !dbg !9299

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9300
  %80 = and i32 %79, 4194304, !dbg !9301
  %81 = icmp eq i32 %80, 0, !dbg !9302
  br i1 %81, label %82, label %90, !dbg !9303

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9304
  %84 = and i32 %83, 2, !dbg !9304
  %85 = icmp eq i32 %84, 0, !dbg !9304
  br i1 %85, label %114, label %86, !dbg !9307

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !9308
  %88 = load i32, i32* %87, align 4, !dbg !9308
  %89 = icmp eq i32 %88, 1, !dbg !9309
  br i1 %89, label %114, label %311, !dbg !9310

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !9311
  %92 = load i32, i32* %91, align 4, !dbg !9311
  %93 = icmp eq i32 %92, 0, !dbg !9314
  br i1 %93, label %104, label %94, !dbg !9315

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !9316
  %95 = tail call i32 @HAL_GetTick() #24, !dbg !9318
  call void @llvm.dbg.value(metadata i32 %95, metadata !9208, metadata !DIExpression()), !dbg !9218
  br label %96, !dbg !9319

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9320
  %98 = and i32 %97, 2, !dbg !9321
  %99 = icmp eq i32 %98, 0, !dbg !9321
  br i1 %99, label %100, label %114, !dbg !9319

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #24, !dbg !9322
  %102 = sub i32 %101, %95, !dbg !9325
  %103 = icmp ugt i32 %102, 2, !dbg !9326
  br i1 %103, label %311, label %96, !dbg !9327, !llvm.loop !9328

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !9330
  %105 = tail call i32 @HAL_GetTick() #24, !dbg !9332
  call void @llvm.dbg.value(metadata i32 %105, metadata !9208, metadata !DIExpression()), !dbg !9218
  br label %106, !dbg !9333

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9334
  %108 = and i32 %107, 2, !dbg !9334
  %109 = icmp eq i32 %108, 0, !dbg !9334
  br i1 %109, label %121, label %110, !dbg !9333

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #24, !dbg !9335
  %112 = sub i32 %111, %105, !dbg !9338
  %113 = icmp ugt i32 %112, 2, !dbg !9339
  br i1 %113, label %311, label %106, !dbg !9340, !llvm.loop !9341

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9343
  %116 = and i32 %115, -249, !dbg !9343
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !9343
  %118 = load i32, i32* %117, align 4, !dbg !9343
  %119 = shl i32 %118, 3, !dbg !9343
  %120 = or i32 %119, %116, !dbg !9343
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9343
  br label %121, !dbg !9344

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !9344
  %123 = and i32 %122, 8, !dbg !9346
  %124 = icmp eq i32 %123, 0, !dbg !9347
  br i1 %124, label %149, label %125, !dbg !9348

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !9349
  %127 = load i32, i32* %126, align 4, !dbg !9349
  %128 = icmp eq i32 %127, 0, !dbg !9352
  br i1 %128, label %139, label %129, !dbg !9353

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !9354
  %130 = tail call i32 @HAL_GetTick() #24, !dbg !9356
  call void @llvm.dbg.value(metadata i32 %130, metadata !9208, metadata !DIExpression()), !dbg !9218
  br label %131, !dbg !9357

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9358
  %133 = and i32 %132, 2, !dbg !9359
  %134 = icmp eq i32 %133, 0, !dbg !9359
  br i1 %134, label %135, label %149, !dbg !9357

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #24, !dbg !9360
  %137 = sub i32 %136, %130, !dbg !9363
  %138 = icmp ugt i32 %137, 2, !dbg !9364
  br i1 %138, label %311, label %131, !dbg !9365, !llvm.loop !9366

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !9368
  %140 = tail call i32 @HAL_GetTick() #24, !dbg !9370
  call void @llvm.dbg.value(metadata i32 %140, metadata !9208, metadata !DIExpression()), !dbg !9218
  br label %141, !dbg !9371

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9372
  %143 = and i32 %142, 2, !dbg !9372
  %144 = icmp eq i32 %143, 0, !dbg !9372
  br i1 %144, label %149, label %145, !dbg !9371

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #24, !dbg !9373
  %147 = sub i32 %146, %140, !dbg !9376
  %148 = icmp ugt i32 %147, 2, !dbg !9377
  br i1 %148, label %311, label %141, !dbg !9378, !llvm.loop !9379

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !9381
  %151 = and i32 %150, 4, !dbg !9382
  %152 = icmp eq i32 %151, 0, !dbg !9383
  br i1 %152, label %221, label %153, !dbg !9384

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !9210, metadata !DIExpression()), !dbg !9385
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9386
  %155 = and i32 %154, 268435456, !dbg !9386
  %156 = icmp eq i32 %155, 0, !dbg !9386
  br i1 %156, label %157, label %164, !dbg !9387

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !9388
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !9388
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9214, metadata !DIExpression()), !dbg !9388
  store volatile i32 0, i32* %2, align 4, !dbg !9388
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9388
  %160 = or i32 %159, 268435456, !dbg !9388
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9388
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9388
  %162 = and i32 %161, 268435456, !dbg !9388
  store volatile i32 %162, i32* %2, align 4, !dbg !9388
  %163 = load volatile i32, i32* %2, align 4, !dbg !9388
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !9389
  call void @llvm.dbg.value(metadata i32 1, metadata !9210, metadata !DIExpression()), !dbg !9385
  br label %164, !dbg !9390

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !9210, metadata !DIExpression()), !dbg !9385
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9391
  %166 = and i32 %165, 256, !dbg !9391
  %167 = icmp eq i32 %166, 0, !dbg !9391
  br i1 %167, label %168, label %180, !dbg !9393

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9394
  %170 = or i32 %169, 256, !dbg !9394
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9394
  %171 = tail call i32 @HAL_GetTick() #24, !dbg !9396
  call void @llvm.dbg.value(metadata i32 %171, metadata !9208, metadata !DIExpression()), !dbg !9218
  br label %172, !dbg !9397

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9398
  %174 = and i32 %173, 256, !dbg !9398
  %175 = icmp eq i32 %174, 0, !dbg !9398
  br i1 %175, label %176, label %180, !dbg !9397

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #24, !dbg !9399
  %178 = sub i32 %177, %171, !dbg !9402
  %179 = icmp ugt i32 %178, 2, !dbg !9403
  br i1 %179, label %311, label %172, !dbg !9404, !llvm.loop !9405

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !9407
  %182 = load i32, i32* %181, align 4, !dbg !9407
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !9410

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9411
  %185 = or i32 %184, 1, !dbg !9411
  br label %196, !dbg !9411

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9413
  %188 = or i32 %187, 4, !dbg !9413
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9413
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9413
  %190 = or i32 %189, 1, !dbg !9413
  br label %196, !dbg !9413

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9416
  %193 = and i32 %192, -2, !dbg !9416
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9416
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9416
  %195 = and i32 %194, -5, !dbg !9416
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9418
  %198 = load i32, i32* %181, align 4, !dbg !9419
  %199 = icmp eq i32 %198, 0, !dbg !9421
  %200 = tail call i32 @HAL_GetTick() #24, !dbg !9422
  call void @llvm.dbg.value(metadata i32 %200, metadata !9208, metadata !DIExpression()), !dbg !9218
  call void @llvm.dbg.value(metadata i32 %200, metadata !9208, metadata !DIExpression()), !dbg !9218
  br i1 %199, label %209, label %201, !dbg !9423

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9424
  %203 = and i32 %202, 2, !dbg !9426
  %204 = icmp eq i32 %203, 0, !dbg !9426
  br i1 %204, label %205, label %217, !dbg !9427

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #24, !dbg !9428
  %207 = sub i32 %206, %200, !dbg !9431
  %208 = icmp ugt i32 %207, 5000, !dbg !9432
  br i1 %208, label %311, label %201, !dbg !9433, !llvm.loop !9434

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9436
  %211 = and i32 %210, 2, !dbg !9436
  %212 = icmp eq i32 %211, 0, !dbg !9436
  br i1 %212, label %217, label %213, !dbg !9438

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #24, !dbg !9439
  %215 = sub i32 %214, %200, !dbg !9442
  %216 = icmp ugt i32 %215, 5000, !dbg !9443
  br i1 %216, label %311, label %209, !dbg !9444, !llvm.loop !9445

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !9447

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9448
  %220 = and i32 %219, -268435457, !dbg !9448
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9448
  br label %221, !dbg !9451

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !9452
  %223 = load i32, i32* %222, align 4, !dbg !9452
  %224 = icmp eq i32 %223, 0, !dbg !9454
  br i1 %224, label %310, label %225, !dbg !9455

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9456
  %227 = and i32 %226, 12, !dbg !9456
  %228 = icmp eq i32 %227, 8, !dbg !9459
  br i1 %228, label %277, label %229, !dbg !9460

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !9461
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !9464
  %231 = tail call i32 @HAL_GetTick() #24, !dbg !9464
  call void @llvm.dbg.value(metadata i32 %231, metadata !9208, metadata !DIExpression()), !dbg !9218
  call void @llvm.dbg.value(metadata i32 %231, metadata !9208, metadata !DIExpression()), !dbg !9218
  br i1 %230, label %232, label %269, !dbg !9465

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9466
  %234 = and i32 %233, 33554432, !dbg !9466
  %235 = icmp eq i32 %234, 0, !dbg !9466
  br i1 %235, label %240, label %236, !dbg !9468

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #24, !dbg !9469
  %238 = sub i32 %237, %231, !dbg !9472
  %239 = icmp ugt i32 %238, 2, !dbg !9473
  br i1 %239, label %311, label %232, !dbg !9474, !llvm.loop !9475

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !9477
  %242 = load i32, i32* %241, align 4, !dbg !9477
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !9477
  %244 = load i32, i32* %243, align 4, !dbg !9477
  %245 = or i32 %244, %242, !dbg !9477
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !9477
  %247 = load i32, i32* %246, align 4, !dbg !9477
  %248 = shl i32 %247, 6, !dbg !9477
  %249 = or i32 %245, %248, !dbg !9477
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !9477
  %251 = load i32, i32* %250, align 4, !dbg !9477
  %252 = shl i32 %251, 15, !dbg !9477
  %253 = add i32 %252, -65536, !dbg !9477
  %254 = and i32 %253, -65536, !dbg !9477
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !9477
  %256 = load i32, i32* %255, align 4, !dbg !9477
  %257 = shl i32 %256, 24, !dbg !9477
  %258 = or i32 %249, %257, !dbg !9477
  %259 = or i32 %258, %254, !dbg !9477
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9477
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !9478
  %260 = tail call i32 @HAL_GetTick() #24, !dbg !9479
  call void @llvm.dbg.value(metadata i32 %260, metadata !9208, metadata !DIExpression()), !dbg !9218
  br label %261, !dbg !9480

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9481
  %263 = and i32 %262, 33554432, !dbg !9482
  %264 = icmp eq i32 %263, 0, !dbg !9482
  br i1 %264, label %265, label %310, !dbg !9480

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #24, !dbg !9483
  %267 = sub i32 %266, %260, !dbg !9486
  %268 = icmp ugt i32 %267, 2, !dbg !9487
  br i1 %268, label %311, label %261, !dbg !9488, !llvm.loop !9489

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9491
  %271 = and i32 %270, 33554432, !dbg !9491
  %272 = icmp eq i32 %271, 0, !dbg !9491
  br i1 %272, label %310, label %273, !dbg !9493

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #24, !dbg !9494
  %275 = sub i32 %274, %231, !dbg !9497
  %276 = icmp ugt i32 %275, 2, !dbg !9498
  br i1 %276, label %311, label %269, !dbg !9499, !llvm.loop !9500

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !9502
  br i1 %278, label %311, label %279, !dbg !9505

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9506
  call void @llvm.dbg.value(metadata i32 %280, metadata !9209, metadata !DIExpression()), !dbg !9218
  %281 = and i32 %280, 4194304, !dbg !9508
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !9510
  %283 = load i32, i32* %282, align 4, !dbg !9510
  %284 = icmp eq i32 %281, %283, !dbg !9511
  br i1 %284, label %285, label %311, !dbg !9512

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !9513
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !9514
  %288 = load i32, i32* %287, align 4, !dbg !9514
  %289 = icmp eq i32 %286, %288, !dbg !9515
  br i1 %289, label %290, label %311, !dbg !9516

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !9517
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !9518
  %293 = load i32, i32* %292, align 4, !dbg !9518
  %294 = shl i32 %293, 6, !dbg !9519
  %295 = icmp eq i32 %291, %294, !dbg !9520
  br i1 %295, label %296, label %311, !dbg !9521

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !9522
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !9523
  %299 = load i32, i32* %298, align 4, !dbg !9523
  %300 = shl i32 %299, 15, !dbg !9524
  %301 = add i32 %300, -65536, !dbg !9524
  %302 = and i32 %301, -65536, !dbg !9524
  %303 = icmp eq i32 %297, %302, !dbg !9525
  br i1 %303, label %304, label %311, !dbg !9526

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !9527
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !9528
  %307 = load i32, i32* %306, align 4, !dbg !9528
  %308 = shl i32 %307, 24, !dbg !9529
  %309 = icmp eq i32 %305, %308, !dbg !9530
  br i1 %309, label %310, label %311, !dbg !9531

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !9532

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !9218
  ret i32 %312, !dbg !9533
}

; Function Attrs: optsize
declare !dbg !9534 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !9536 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !9549, metadata !DIExpression()), !dbg !9552
  call void @llvm.dbg.value(metadata i32 %1, metadata !9550, metadata !DIExpression()), !dbg !9552
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !9553
  br i1 %3, label %115, label %4, !dbg !9555

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9556
  %6 = and i32 %5, 7, !dbg !9556
  %7 = icmp ult i32 %6, %1, !dbg !9558
  br i1 %7, label %8, label %13, !dbg !9559

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !9560
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !9560
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9562
  %11 = and i32 %10, 7, !dbg !9562
  %12 = icmp eq i32 %11, %1, !dbg !9564
  br i1 %12, label %13, label %115, !dbg !9565

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !9566
  %15 = load i32, i32* %14, align 4, !dbg !9566
  %16 = and i32 %15, 2, !dbg !9568
  %17 = icmp eq i32 %16, 0, !dbg !9569
  br i1 %17, label %39, label %18, !dbg !9570

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !9571
  %20 = icmp eq i32 %19, 0, !dbg !9574
  br i1 %20, label %25, label %21, !dbg !9575

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9576
  %23 = or i32 %22, 7168, !dbg !9576
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9576
  %24 = load i32, i32* %14, align 4, !dbg !9578
  br label %25, !dbg !9580

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !9578
  %27 = and i32 %26, 8, !dbg !9581
  %28 = icmp eq i32 %27, 0, !dbg !9582
  br i1 %28, label %32, label %29, !dbg !9583

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9584
  %31 = or i32 %30, 57344, !dbg !9584
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9584
  br label %32, !dbg !9586

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9587
  %34 = and i32 %33, -241, !dbg !9587
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !9587
  %36 = load i32, i32* %35, align 4, !dbg !9587
  %37 = or i32 %34, %36, !dbg !9587
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9587
  %38 = load i32, i32* %14, align 4, !dbg !9588
  br label %39, !dbg !9590

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !9588
  %41 = and i32 %40, 1, !dbg !9591
  %42 = icmp eq i32 %41, 0, !dbg !9592
  br i1 %42, label %73, label %43, !dbg !9593

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !9594
  %45 = load i32, i32* %44, align 4, !dbg !9594
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !9597

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9598
  %48 = and i32 %47, 131072, !dbg !9601
  %49 = icmp eq i32 %48, 0, !dbg !9601
  br i1 %49, label %115, label %58, !dbg !9602

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9603
  %52 = and i32 %51, 33554432, !dbg !9607
  %53 = icmp eq i32 %52, 0, !dbg !9607
  br i1 %53, label %115, label %58, !dbg !9608

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9609
  %56 = and i32 %55, 2, !dbg !9612
  %57 = icmp eq i32 %56, 0, !dbg !9612
  br i1 %57, label %115, label %58, !dbg !9613

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9614
  %60 = and i32 %59, -4, !dbg !9614
  %61 = or i32 %60, %45, !dbg !9614
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9614
  %62 = tail call i32 @HAL_GetTick() #24, !dbg !9615
  call void @llvm.dbg.value(metadata i32 %62, metadata !9551, metadata !DIExpression()), !dbg !9552
  br label %63, !dbg !9616

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9617
  %65 = and i32 %64, 12, !dbg !9617
  %66 = load i32, i32* %44, align 4, !dbg !9618
  %67 = shl i32 %66, 2, !dbg !9619
  %68 = icmp eq i32 %65, %67, !dbg !9620
  br i1 %68, label %73, label %69, !dbg !9616

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #24, !dbg !9621
  %71 = sub i32 %70, %62, !dbg !9624
  %72 = icmp ugt i32 %71, 5000, !dbg !9625
  br i1 %72, label %115, label %63, !dbg !9626, !llvm.loop !9627

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9629
  %75 = and i32 %74, 7, !dbg !9629
  %76 = icmp ugt i32 %75, %1, !dbg !9631
  br i1 %76, label %77, label %82, !dbg !9632

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !9633
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !9633
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9635
  %80 = and i32 %79, 7, !dbg !9635
  %81 = icmp eq i32 %80, %1, !dbg !9637
  br i1 %81, label %82, label %115, !dbg !9638

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !9639
  %84 = and i32 %83, 4, !dbg !9641
  %85 = icmp eq i32 %84, 0, !dbg !9642
  br i1 %85, label %93, label %86, !dbg !9643

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9644
  %88 = and i32 %87, -7169, !dbg !9644
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !9644
  %90 = load i32, i32* %89, align 4, !dbg !9644
  %91 = or i32 %88, %90, !dbg !9644
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9644
  %92 = load i32, i32* %14, align 4, !dbg !9646
  br label %93, !dbg !9648

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !9646
  %95 = and i32 %94, 8, !dbg !9649
  %96 = icmp eq i32 %95, 0, !dbg !9650
  br i1 %96, label %104, label %97, !dbg !9651

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9652
  %99 = and i32 %98, -57345, !dbg !9652
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !9652
  %101 = load i32, i32* %100, align 4, !dbg !9652
  %102 = shl i32 %101, 3, !dbg !9652
  %103 = or i32 %102, %99, !dbg !9652
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9652
  br label %104, !dbg !9654

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !9655
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9656
  %107 = lshr i32 %106, 4, !dbg !9657
  %108 = and i32 %107, 15, !dbg !9657
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !9658
  %110 = load i8, i8* %109, align 1, !dbg !9658
  %111 = zext i8 %110 to i32, !dbg !9658
  %112 = lshr i32 %105, %111, !dbg !9659
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !9660
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !9661
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #24, !dbg !9662
  br label %115, !dbg !9663

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !9552
  ret i32 %116, !dbg !9664
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !9665 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9667, metadata !DIExpression()), !dbg !9671
  call void @llvm.dbg.value(metadata i32 0, metadata !9668, metadata !DIExpression()), !dbg !9671
  call void @llvm.dbg.value(metadata i32 0, metadata !9669, metadata !DIExpression()), !dbg !9671
  call void @llvm.dbg.value(metadata i32 0, metadata !9670, metadata !DIExpression()), !dbg !9671
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9672
  %2 = and i32 %1, 12, !dbg !9673
  switch i32 %2, label %24 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !9674

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 12000000, metadata !9670, metadata !DIExpression()), !dbg !9671
  br label %24, !dbg !9675

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9678
  %6 = and i32 %5, 63, !dbg !9680
  call void @llvm.dbg.value(metadata i32 %6, metadata !9667, metadata !DIExpression()), !dbg !9671
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9681
  %8 = and i32 %7, 4194304, !dbg !9681
  %9 = icmp eq i32 %8, 0, !dbg !9683
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9684
  %11 = lshr i32 %10, 6, !dbg !9684
  %12 = and i32 %11, 511, !dbg !9684
  %13 = zext i32 %12 to i64, !dbg !9684
  %14 = select i1 %9, i64 16000000, i64 12000000
  %15 = mul nuw nsw i64 %14, %13, !dbg !9684
  %16 = zext i32 %6 to i64, !dbg !9684
  %17 = udiv i64 %15, %16, !dbg !9684
  %18 = trunc i64 %17 to i32, !dbg !9684
  call void @llvm.dbg.value(metadata i32 %18, metadata !9668, metadata !DIExpression()), !dbg !9671
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9685
  %20 = lshr i32 %19, 15, !dbg !9686
  %21 = and i32 %20, 6, !dbg !9686
  %22 = add nuw nsw i32 %21, 2, !dbg !9686
  call void @llvm.dbg.value(metadata i32 %22, metadata !9669, metadata !DIExpression()), !dbg !9671
  %23 = udiv i32 %18, %22, !dbg !9687
  call void @llvm.dbg.value(metadata i32 %23, metadata !9670, metadata !DIExpression()), !dbg !9671
  br label %24, !dbg !9688

24:                                               ; preds = %0, %4, %3
  %25 = phi i32 [ %23, %4 ], [ 12000000, %3 ], [ 16000000, %0 ], !dbg !9689
  call void @llvm.dbg.value(metadata i32 %25, metadata !9670, metadata !DIExpression()), !dbg !9671
  ret i32 %25, !dbg !9690
}

; Function Attrs: optsize
declare !dbg !9691 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9694 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !9698, metadata !DIExpression()), !dbg !9718
  call void @llvm.dbg.value(metadata i32 %1, metadata !9699, metadata !DIExpression()), !dbg !9718
  call void @llvm.dbg.value(metadata i32 %2, metadata !9700, metadata !DIExpression()), !dbg !9718
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !9719
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #23, !dbg !9719
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !9701, metadata !DIExpression()), !dbg !9720
  %8 = icmp eq i32 %0, 0, !dbg !9721
  br i1 %8, label %9, label %23, !dbg !9722

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !9723
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !9723
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9711, metadata !DIExpression()), !dbg !9723
  store volatile i32 0, i32* %5, align 4, !dbg !9723
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !9723
  %12 = or i32 %11, 1, !dbg !9723
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !9723
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !9723
  %14 = and i32 %13, 1, !dbg !9723
  store volatile i32 %14, i32* %5, align 4, !dbg !9723
  %15 = load volatile i32, i32* %5, align 4, !dbg !9723
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !9724
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !9725
  store i32 256, i32* %16, align 4, !dbg !9726
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !9727
  store i32 2, i32* %17, align 4, !dbg !9728
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !9729
  store i32 3, i32* %18, align 4, !dbg !9730
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !9731
  store i32 0, i32* %19, align 4, !dbg !9732
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !9733
  store i32 0, i32* %20, align 4, !dbg !9734
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #24, !dbg !9735
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9736
  %22 = and i32 %21, -123731969, !dbg !9736
  br label %38, !dbg !9737

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !9738
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !9738
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9715, metadata !DIExpression()), !dbg !9738
  store volatile i32 0, i32* %6, align 4, !dbg !9738
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !9738
  %26 = or i32 %25, 4, !dbg !9738
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !9738
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !9738
  %28 = and i32 %27, 4, !dbg !9738
  store volatile i32 %28, i32* %6, align 4, !dbg !9738
  %29 = load volatile i32, i32* %6, align 4, !dbg !9738
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !9739
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !9740
  store i32 512, i32* %30, align 4, !dbg !9741
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !9742
  store i32 2, i32* %31, align 4, !dbg !9743
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !9744
  store i32 3, i32* %32, align 4, !dbg !9745
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !9746
  store i32 0, i32* %33, align 4, !dbg !9747
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !9748
  store i32 0, i32* %34, align 4, !dbg !9749
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #24, !dbg !9750
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9751
  %36 = and i32 %35, 134217727, !dbg !9751
  %37 = shl i32 %2, 3, !dbg !9751
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !9752
  %42 = or i32 %41, %40, !dbg !9752
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9752
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #23, !dbg !9753
  ret void, !dbg !9753
}

; Function Attrs: optsize
declare !dbg !9754 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #13 !dbg !9758 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !9759
  ret void, !dbg !9760
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #13 !dbg !9761 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !9762
  ret void, !dbg !9763
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #4 !dbg !9764 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !9765
  ret i32 %1, !dbg !9766
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #14 !dbg !9767 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #25, !dbg !9768
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9769
  %3 = lshr i32 %2, 10, !dbg !9770
  %4 = and i32 %3, 7, !dbg !9770
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !9771
  %6 = load i8, i8* %5, align 1, !dbg !9771
  %7 = zext i8 %6 to i32, !dbg !9771
  %8 = lshr i32 %1, %7, !dbg !9772
  ret i32 %8, !dbg !9773
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #14 !dbg !9774 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #25, !dbg !9775
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9776
  %3 = lshr i32 %2, 13, !dbg !9777
  %4 = and i32 %3, 7, !dbg !9777
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !9778
  %6 = load i8, i8* %5, align 1, !dbg !9778
  %7 = zext i8 %6 to i32, !dbg !9778
  %8 = lshr i32 %1, %7, !dbg !9779
  ret i32 %8, !dbg !9780
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !9781 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !9785, metadata !DIExpression()), !dbg !9786
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !9787
  store i32 15, i32* %2, align 4, !dbg !9788
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9789
  %4 = and i32 %3, 262144, !dbg !9791
  %5 = icmp eq i32 %4, 0, !dbg !9792
  br i1 %5, label %8, label %6, !dbg !9793

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !9794
  store i32 327680, i32* %7, align 4, !dbg !9796
  br label %15, !dbg !9797

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9798
  %10 = and i32 %9, 65536, !dbg !9800
  %11 = icmp eq i32 %10, 0, !dbg !9801
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !9802
  br i1 %11, label %14, label %13, !dbg !9803

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !9804
  br label %15, !dbg !9806

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !9807
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9809
  %17 = and i32 %16, 1, !dbg !9811
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !9812
  store i32 %17, i32* %18, align 4, !dbg !9814
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9815
  %20 = lshr i32 %19, 3, !dbg !9816
  %21 = and i32 %20, 31, !dbg !9816
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !9817
  store i32 %21, i32* %22, align 4, !dbg !9818
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9819
  %24 = and i32 %23, 4, !dbg !9821
  %25 = icmp eq i32 %24, 0, !dbg !9822
  br i1 %25, label %28, label %26, !dbg !9823

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !9824
  store i32 5, i32* %27, align 4, !dbg !9826
  br label %35, !dbg !9827

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9828
  %30 = and i32 %29, 1, !dbg !9830
  %31 = icmp eq i32 %30, 0, !dbg !9831
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !9832
  br i1 %31, label %34, label %33, !dbg !9833

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !9834
  br label %35, !dbg !9836

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !9837
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9839
  %37 = and i32 %36, 1, !dbg !9841
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !9842
  store i32 %37, i32* %38, align 4, !dbg !9844
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9845
  %40 = and i32 %39, 16777216, !dbg !9847
  %41 = icmp eq i32 %40, 0, !dbg !9848
  %42 = select i1 %41, i32 1, i32 2, !dbg !9849
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !9850
  store i32 %42, i32* %43, align 4, !dbg !9852
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9853
  %45 = and i32 %44, 4194304, !dbg !9854
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !9855
  store i32 %45, i32* %46, align 4, !dbg !9856
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9857
  %48 = and i32 %47, 63, !dbg !9858
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !9859
  store i32 %48, i32* %49, align 4, !dbg !9860
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9861
  %51 = lshr i32 %50, 6, !dbg !9862
  %52 = and i32 %51, 511, !dbg !9862
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !9863
  store i32 %52, i32* %53, align 4, !dbg !9864
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9865
  %55 = shl i32 %54, 1, !dbg !9866
  %56 = and i32 %55, 393216, !dbg !9866
  %57 = add nuw nsw i32 %56, 131072, !dbg !9866
  %58 = lshr exact i32 %57, 16, !dbg !9867
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !9868
  store i32 %58, i32* %59, align 4, !dbg !9869
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9870
  %61 = lshr i32 %60, 24, !dbg !9871
  %62 = and i32 %61, 15, !dbg !9871
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !9872
  store i32 %62, i32* %63, align 4, !dbg !9873
  ret void, !dbg !9874
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #14 !dbg !9875 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !9879, metadata !DIExpression()), !dbg !9881
  call void @llvm.dbg.value(metadata i32* %1, metadata !9880, metadata !DIExpression()), !dbg !9881
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !9882
  store i32 15, i32* %3, align 4, !dbg !9883
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9884
  %5 = and i32 %4, 3, !dbg !9885
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !9886
  store i32 %5, i32* %6, align 4, !dbg !9887
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9888
  %8 = and i32 %7, 240, !dbg !9889
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !9890
  store i32 %8, i32* %9, align 4, !dbg !9891
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9892
  %11 = and i32 %10, 7168, !dbg !9893
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !9894
  store i32 %11, i32* %12, align 4, !dbg !9895
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9896
  %14 = lshr i32 %13, 3, !dbg !9897
  %15 = and i32 %14, 7168, !dbg !9897
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !9898
  store i32 %15, i32* %16, align 4, !dbg !9899
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9900
  %18 = and i32 %17, 7, !dbg !9901
  store i32 %18, i32* %1, align 4, !dbg !9902
  ret void, !dbg !9903
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !9904 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9905
  %2 = and i32 %1, 128, !dbg !9905
  %3 = icmp eq i32 %2, 0, !dbg !9905
  br i1 %3, label %5, label %4, !dbg !9907

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #25, !dbg !9908
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !9910
  br label %5, !dbg !9911

5:                                                ; preds = %4, %0
  ret void, !dbg !9912
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !9913 {
  ret void, !dbg !9914
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #13 !dbg !9915 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9918, metadata !DIExpression()), !dbg !9919
  tail call fastcc void @LL_InitTick(i32 noundef %0) #25, !dbg !9920
  ret void, !dbg !9921
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #13 !dbg !9922 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9925, metadata !DIExpression()), !dbg !9927
  call void @llvm.dbg.value(metadata i32 1000, metadata !9926, metadata !DIExpression()), !dbg !9927
  %2 = udiv i32 %0, 1000, !dbg !9928
  %3 = add nsw i32 %2, -1, !dbg !9929
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !9930
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9931
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9932
  ret void, !dbg !9933
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #15 !dbg !9934 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !9936, metadata !DIExpression()), !dbg !9938
  %3 = bitcast i32* %2 to i8*, !dbg !9939
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9939
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9937, metadata !DIExpression()), !dbg !9940
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9941
  store volatile i32 %4, i32* %2, align 4, !dbg !9940
  %5 = load volatile i32, i32* %2, align 4, !dbg !9942
  %6 = icmp eq i32 %0, -1, !dbg !9943
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !9936, metadata !DIExpression()), !dbg !9938
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !9938
  call void @llvm.dbg.value(metadata i32 %8, metadata !9936, metadata !DIExpression()), !dbg !9938
  br label %9, !dbg !9945

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !9936, metadata !DIExpression()), !dbg !9938
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9946
  call void @llvm.dbg.value(metadata i32 undef, metadata !9936, metadata !DIExpression()), !dbg !9938
  %12 = shl i32 %11, 15, !dbg !9938
  %13 = ashr i32 %12, 31, !dbg !9938
  %14 = add i32 %13, %10, !dbg !9938
  call void @llvm.dbg.value(metadata i32 %14, metadata !9936, metadata !DIExpression()), !dbg !9938
  %15 = icmp eq i32 %14, 0, !dbg !9945
  br i1 %15, label %16, label %9, !dbg !9945

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9949
  ret void, !dbg !9949
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #3 !dbg !9950 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9952, metadata !DIExpression()), !dbg !9953
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !9954
  ret void, !dbg !9955
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #13 !dbg !9956 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9961, metadata !DIExpression()), !dbg !9966
  call void @llvm.dbg.value(metadata i32 0, metadata !9964, metadata !DIExpression()), !dbg !9966
  call void @llvm.dbg.value(metadata i32 0, metadata !9965, metadata !DIExpression()), !dbg !9966
  %2 = icmp eq i32 %0, 0, !dbg !9967
  br i1 %2, label %52, label %3, !dbg !9969

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !9970
  %5 = icmp eq i32 %4, 16384, !dbg !9973
  br i1 %5, label %6, label %21, !dbg !9974

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !9975
  %8 = select i1 %7, i32 0, i32 5, !dbg !9978
  call void @llvm.dbg.value(metadata i32 %8, metadata !9964, metadata !DIExpression()), !dbg !9966
  %9 = add i32 %0, -120000001, !dbg !9979
  %10 = icmp ult i32 %9, 30000000, !dbg !9979
  %11 = select i1 %10, i32 4, i32 %8, !dbg !9979
  call void @llvm.dbg.value(metadata i32 %11, metadata !9964, metadata !DIExpression()), !dbg !9966
  %12 = icmp ult i32 %9, -30000000, !dbg !9981
  %13 = select i1 %12, i32 %11, i32 3, !dbg !9981
  call void @llvm.dbg.value(metadata i32 %13, metadata !9964, metadata !DIExpression()), !dbg !9966
  %14 = icmp ugt i32 %0, 60000000, !dbg !9983
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !9985
  br i1 %16, label %21, label %17, !dbg !9985

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !9986
  %19 = and i1 %18, %15, !dbg !9989
  %20 = select i1 %19, i32 1, i32 %13, !dbg !9989
  br label %21, !dbg !9989

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !9966
  call void @llvm.dbg.value(metadata i32 %22, metadata !9964, metadata !DIExpression()), !dbg !9966
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !9990
  %24 = icmp eq i32 %23, 0, !dbg !9992
  br i1 %24, label %25, label %41, !dbg !9993

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 12000000, !dbg !9994
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !9997
  %29 = select i1 %28, i32 4, i32 %22, !dbg !9997
  call void @llvm.dbg.value(metadata i32 %29, metadata !9964, metadata !DIExpression()), !dbg !9966
  %30 = icmp ugt i32 %0, 90000000, !dbg !9998
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !10000
  %33 = select i1 %32, i32 3, i32 %29, !dbg !10000
  call void @llvm.dbg.value(metadata i32 %33, metadata !9964, metadata !DIExpression()), !dbg !9966
  %34 = icmp ugt i32 %0, 60000000, !dbg !10001
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !10003
  br i1 %36, label %41, label %37, !dbg !10003

37:                                               ; preds = %25
  %38 = icmp ugt i32 %0, 30000000, !dbg !10004
  %39 = and i1 %38, %35, !dbg !10007
  %40 = select i1 %39, i32 1, i32 %33, !dbg !10007
  br label %41, !dbg !10007

41:                                               ; preds = %37, %25, %21
  %42 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %40, %37 ], !dbg !10008
  call void @llvm.dbg.value(metadata i32 %42, metadata !9964, metadata !DIExpression()), !dbg !9966
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %42) #25, !dbg !10009
  call void @llvm.dbg.value(metadata i32 2, metadata !9962, metadata !DIExpression()), !dbg !9966
  br label %43, !dbg !10010

43:                                               ; preds = %43, %41
  %44 = phi i32 [ 2, %41 ], [ %46, %43 ], !dbg !10008
  call void @llvm.dbg.value(metadata i32 %44, metadata !9962, metadata !DIExpression()), !dbg !9966
  %45 = tail call fastcc i32 @LL_FLASH_GetLatency() #25, !dbg !10011
  call void @llvm.dbg.value(metadata i32 %45, metadata !9963, metadata !DIExpression()), !dbg !9966
  %46 = add nsw i32 %44, -1, !dbg !10013
  call void @llvm.dbg.value(metadata i32 %46, metadata !9962, metadata !DIExpression()), !dbg !9966
  %47 = icmp ne i32 %45, %42, !dbg !10014
  %48 = icmp ne i32 %46, 0, !dbg !10015
  %49 = select i1 %47, i1 %48, i1 false, !dbg !10015
  br i1 %49, label %43, label %50, !dbg !10016, !llvm.loop !10017

50:                                               ; preds = %43
  %51 = zext i1 %47 to i32
  br label %52

52:                                               ; preds = %50, %1
  %53 = phi i32 [ 1, %1 ], [ %51, %50 ], !dbg !10019
  call void @llvm.dbg.value(metadata i32 %53, metadata !9965, metadata !DIExpression()), !dbg !9966
  ret i32 %53, !dbg !10020
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #14 !dbg !10021 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10022
  %2 = and i32 %1, 16384, !dbg !10022
  ret i32 %2, !dbg !10023
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #13 !dbg !10024 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10026, metadata !DIExpression()), !dbg !10027
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10028
  %3 = and i32 %2, -8, !dbg !10028
  %4 = or i32 %3, %0, !dbg !10028
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10028
  ret void, !dbg !10029
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #14 !dbg !10030 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10031
  %2 = and i32 %1, 7, !dbg !10031
  ret i32 %2, !dbg !10032
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !10033 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !10051, metadata !DIExpression()), !dbg !10055
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10052, metadata !DIExpression()), !dbg !10055
  call void @llvm.dbg.value(metadata i32 0, metadata !10053, metadata !DIExpression()), !dbg !10055
  call void @llvm.dbg.value(metadata i32 0, metadata !10054, metadata !DIExpression()), !dbg !10055
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #25, !dbg !10056
  %4 = icmp eq i32 %3, 0, !dbg !10058
  br i1 %4, label %5, label %21, !dbg !10059

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #25, !dbg !10060
  call void @llvm.dbg.value(metadata i32 %6, metadata !10054, metadata !DIExpression()), !dbg !10055
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.79() #25, !dbg !10062
  %8 = icmp eq i32 %7, 1, !dbg !10064
  br i1 %8, label %13, label %9, !dbg !10065

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.80() #25, !dbg !10066
  br label %10, !dbg !10068

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.79() #25, !dbg !10069
  %12 = icmp eq i32 %11, 1, !dbg !10070
  br i1 %12, label %13, label %10, !dbg !10068, !llvm.loop !10071

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !10073
  %15 = load i32, i32* %14, align 4, !dbg !10073
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !10074
  %17 = load i32, i32* %16, align 4, !dbg !10074
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !10075
  %19 = load i32, i32* %18, align 4, !dbg !10075
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.81(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #25, !dbg !10076
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #25, !dbg !10077
  call void @llvm.dbg.value(metadata i32 %20, metadata !10053, metadata !DIExpression()), !dbg !10055
  br label %21, !dbg !10078

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !10079
  call void @llvm.dbg.value(metadata i32 %22, metadata !10053, metadata !DIExpression()), !dbg !10055
  ret i32 %22, !dbg !10080
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #14 !dbg !10081 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10085, metadata !DIExpression()), !dbg !10086
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.83() #25, !dbg !10087
  %2 = icmp ne i32 %1, 0, !dbg !10089
  call void @llvm.dbg.value(metadata i1 %2, metadata !10085, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10086
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #25, !dbg !10090
  %4 = icmp ne i32 %3, 0, !dbg !10092
  %5 = select i1 %4, i1 true, i1 %2, !dbg !10093
  %6 = zext i1 %5 to i32, !dbg !10093
  call void @llvm.dbg.value(metadata i32 %6, metadata !10085, metadata !DIExpression()), !dbg !10086
  ret i32 %6, !dbg !10094
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #4 !dbg !10095 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10099, metadata !DIExpression()), !dbg !10102
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10100, metadata !DIExpression()), !dbg !10102
  call void @llvm.dbg.value(metadata i32 0, metadata !10101, metadata !DIExpression()), !dbg !10102
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !10103
  %4 = load i32, i32* %3, align 4, !dbg !10103
  %5 = and i32 %4, 63, !dbg !10104
  %6 = udiv i32 %0, %5, !dbg !10105
  call void @llvm.dbg.value(metadata i32 %6, metadata !10101, metadata !DIExpression()), !dbg !10102
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !10106
  %8 = load i32, i32* %7, align 4, !dbg !10106
  %9 = and i32 %8, 511, !dbg !10107
  %10 = mul i32 %9, %6, !dbg !10108
  call void @llvm.dbg.value(metadata i32 %10, metadata !10101, metadata !DIExpression()), !dbg !10102
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !10109
  %12 = load i32, i32* %11, align 4, !dbg !10109
  %13 = lshr i32 %12, 15, !dbg !10110
  %14 = and i32 %13, 131070, !dbg !10110
  %15 = add nuw nsw i32 %14, 2, !dbg !10110
  %16 = udiv i32 %10, %15, !dbg !10111
  call void @llvm.dbg.value(metadata i32 %16, metadata !10101, metadata !DIExpression()), !dbg !10102
  ret i32 %16, !dbg !10112
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.79() unnamed_addr #14 !dbg !10113 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10114
  %2 = lshr i32 %1, 1, !dbg !10115
  %3 = and i32 %2, 1, !dbg !10115
  ret i32 %3, !dbg !10116
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.80() unnamed_addr #13 !dbg !10117 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10118
  %2 = or i32 %1, 1, !dbg !10118
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10118
  ret void, !dbg !10119
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.81(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #13 !dbg !10120 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10122, metadata !DIExpression()), !dbg !10126
  call void @llvm.dbg.value(metadata i32 %1, metadata !10123, metadata !DIExpression()), !dbg !10126
  call void @llvm.dbg.value(metadata i32 %2, metadata !10124, metadata !DIExpression()), !dbg !10126
  call void @llvm.dbg.value(metadata i32 %3, metadata !10125, metadata !DIExpression()), !dbg !10126
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10127
  %6 = and i32 %5, -4227072, !dbg !10127
  %7 = or i32 %1, %0, !dbg !10127
  %8 = shl i32 %2, 6, !dbg !10127
  %9 = or i32 %7, %8, !dbg !10127
  %10 = or i32 %9, %6, !dbg !10127
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10127
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10128
  %12 = and i32 %11, -196609, !dbg !10128
  %13 = or i32 %12, %3, !dbg !10128
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10128
  ret void, !dbg !10129
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #13 !dbg !10130 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10134, metadata !DIExpression()), !dbg !10138
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10135, metadata !DIExpression()), !dbg !10138
  call void @llvm.dbg.value(metadata i32 0, metadata !10136, metadata !DIExpression()), !dbg !10138
  call void @llvm.dbg.value(metadata i32 0, metadata !10137, metadata !DIExpression()), !dbg !10138
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !10139
  %4 = load i32, i32* %3, align 4, !dbg !10139
  %5 = lshr i32 %4, 4, !dbg !10139
  %6 = and i32 %5, 15, !dbg !10139
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !10139
  %8 = load i8, i8* %7, align 1, !dbg !10139
  %9 = zext i8 %8 to i32, !dbg !10139
  %10 = lshr i32 %0, %9, !dbg !10139
  call void @llvm.dbg.value(metadata i32 %10, metadata !10137, metadata !DIExpression()), !dbg !10138
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !10140
  %12 = icmp ult i32 %11, %10, !dbg !10142
  br i1 %12, label %13, label %16, !dbg !10143

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #25, !dbg !10144
  call void @llvm.dbg.value(metadata i32 %14, metadata !10136, metadata !DIExpression()), !dbg !10138
  %15 = icmp eq i32 %14, 0, !dbg !10146
  br i1 %15, label %16, label %30, !dbg !10148

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.82() #25, !dbg !10149
  br label %17, !dbg !10151

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.83() #25, !dbg !10152
  %19 = icmp eq i32 %18, 1, !dbg !10153
  br i1 %19, label %20, label %17, !dbg !10151, !llvm.loop !10154

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !10156
  tail call fastcc void @LL_RCC_SetAHBPrescaler.84(i32 noundef %21) #25, !dbg !10157
  tail call fastcc void @LL_RCC_SetSysClkSource.85() #25, !dbg !10158
  br label %22, !dbg !10159

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.86() #25, !dbg !10160
  %24 = icmp eq i32 %23, 8, !dbg !10161
  br i1 %24, label %25, label %22, !dbg !10159, !llvm.loop !10162

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !10164
  %27 = load i32, i32* %26, align 4, !dbg !10164
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.87(i32 noundef %27) #25, !dbg !10165
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !10166
  %29 = load i32, i32* %28, align 4, !dbg !10166
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.88(i32 noundef %29) #25, !dbg !10167
  br label %30, !dbg !10168

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !10169
  %33 = icmp ugt i32 %32, %10, !dbg !10171
  br i1 %33, label %34, label %36, !dbg !10172

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #25, !dbg !10173
  call void @llvm.dbg.value(metadata i32 %35, metadata !10136, metadata !DIExpression()), !dbg !10138
  br label %36, !dbg !10175

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !10138
  call void @llvm.dbg.value(metadata i32 %37, metadata !10136, metadata !DIExpression()), !dbg !10138
  %38 = icmp eq i32 %37, 0, !dbg !10176
  br i1 %38, label %39, label %40, !dbg !10178

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #25, !dbg !10179
  br label %40, !dbg !10181

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !10182
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.82() unnamed_addr #13 !dbg !10183 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10184
  %2 = or i32 %1, 16777216, !dbg !10184
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10184
  ret void, !dbg !10185
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.83() unnamed_addr #14 !dbg !10186 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10187
  %2 = lshr i32 %1, 25, !dbg !10188
  %3 = and i32 %2, 1, !dbg !10188
  ret i32 %3, !dbg !10189
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.84(i32 noundef %0) unnamed_addr #13 !dbg !10190 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10192, metadata !DIExpression()), !dbg !10193
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10194
  %3 = and i32 %2, -241, !dbg !10194
  %4 = or i32 %3, %0, !dbg !10194
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10194
  ret void, !dbg !10195
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.85() unnamed_addr #13 !dbg !10196 {
  call void @llvm.dbg.value(metadata i32 2, metadata !10198, metadata !DIExpression()), !dbg !10199
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10200
  %2 = and i32 %1, -4, !dbg !10200
  %3 = or i32 %2, 2, !dbg !10200
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10200
  ret void, !dbg !10201
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.86() unnamed_addr #14 !dbg !10202 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10203
  %2 = and i32 %1, 12, !dbg !10203
  ret i32 %2, !dbg !10204
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.87(i32 noundef %0) unnamed_addr #13 !dbg !10205 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10207, metadata !DIExpression()), !dbg !10208
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10209
  %3 = and i32 %2, -7169, !dbg !10209
  %4 = or i32 %3, %0, !dbg !10209
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10209
  ret void, !dbg !10210
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.88(i32 noundef %0) unnamed_addr #13 !dbg !10211 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10213, metadata !DIExpression()), !dbg !10214
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10215
  %3 = and i32 %2, -57345, !dbg !10215
  %4 = or i32 %3, %0, !dbg !10215
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10215
  ret void, !dbg !10216
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #14 !dbg !10217 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10218
  %2 = lshr i32 %1, 27, !dbg !10219
  %3 = and i32 %2, 1, !dbg !10219
  ret i32 %3, !dbg !10220
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #13 !dbg !10221 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10225, metadata !DIExpression()), !dbg !10231
  call void @llvm.dbg.value(metadata i32 %1, metadata !10226, metadata !DIExpression()), !dbg !10231
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !10227, metadata !DIExpression()), !dbg !10231
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !10228, metadata !DIExpression()), !dbg !10231
  call void @llvm.dbg.value(metadata i32 0, metadata !10229, metadata !DIExpression()), !dbg !10231
  call void @llvm.dbg.value(metadata i32 0, metadata !10230, metadata !DIExpression()), !dbg !10231
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #25, !dbg !10232
  %6 = icmp eq i32 %5, 0, !dbg !10234
  br i1 %6, label %7, label %27, !dbg !10235

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #25, !dbg !10236
  call void @llvm.dbg.value(metadata i32 %8, metadata !10230, metadata !DIExpression()), !dbg !10231
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.89() #25, !dbg !10238
  %10 = icmp eq i32 %9, 1, !dbg !10240
  br i1 %10, label %19, label %11, !dbg !10241

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !10242
  br i1 %12, label %13, label %14, !dbg !10245

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #25, !dbg !10246
  br label %15, !dbg !10248

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.90() #25, !dbg !10249
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.91() #25, !dbg !10251
  br label %16, !dbg !10252

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.89() #25, !dbg !10253
  %18 = icmp eq i32 %17, 1, !dbg !10254
  br i1 %18, label %19, label %16, !dbg !10252, !llvm.loop !10255

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !10257
  %21 = load i32, i32* %20, align 4, !dbg !10257
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !10258
  %23 = load i32, i32* %22, align 4, !dbg !10258
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !10259
  %25 = load i32, i32* %24, align 4, !dbg !10259
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.81(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #25, !dbg !10260
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #25, !dbg !10261
  call void @llvm.dbg.value(metadata i32 %26, metadata !10229, metadata !DIExpression()), !dbg !10231
  br label %27, !dbg !10262

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !10263
  call void @llvm.dbg.value(metadata i32 %28, metadata !10229, metadata !DIExpression()), !dbg !10231
  ret i32 %28, !dbg !10264
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.89() unnamed_addr #14 !dbg !10265 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10266
  %2 = lshr i32 %1, 17, !dbg !10267
  %3 = and i32 %2, 1, !dbg !10267
  ret i32 %3, !dbg !10268
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #13 !dbg !10269 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10270
  %2 = or i32 %1, 262144, !dbg !10270
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10270
  ret void, !dbg !10271
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.90() unnamed_addr #13 !dbg !10272 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10273
  %2 = and i32 %1, -262145, !dbg !10273
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10273
  ret void, !dbg !10274
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.91() unnamed_addr #13 !dbg !10275 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10276
  %2 = or i32 %1, 65536, !dbg !10276
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10276
  ret void, !dbg !10277
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !10278 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !10281, metadata !DIExpression()), !dbg !10297
  call void @llvm.dbg.value(metadata i32 undef, metadata !10281, metadata !DIExpression()), !dbg !10297
  call void @llvm.dbg.value(metadata i32 undef, metadata !10281, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !10297
  ret void, !dbg !10298
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !10299 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10303, metadata !DIExpression()), !dbg !10305
  %2 = icmp eq i8* %0, null, !dbg !10306
  br i1 %2, label %29, label %3, !dbg !10308

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !10309
  %5 = icmp eq i8 %4, 0, !dbg !10310
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !10311
  br i1 %6, label %29, label %8, !dbg !10311

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !10304, metadata !DIExpression()), !dbg !10305
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !10312

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !10304, metadata !DIExpression()), !dbg !10305
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #25, !dbg !10314
  br i1 %10, label %11, label %15, !dbg !10319

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !10320
  %13 = load i8*, i8** %12, align 4, !dbg !10320
  %14 = icmp eq i8* %13, %0, !dbg !10321
  br i1 %14, label %29, label %15, !dbg !10322

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !10323
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !10304, metadata !DIExpression()), !dbg !10305
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !10324
  br i1 %17, label %7, label %8, !dbg !10325, !llvm.loop !10326

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !10304, metadata !DIExpression()), !dbg !10305
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #25, !dbg !10328
  br i1 %20, label %21, label %26, !dbg !10332

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !10333
  %23 = load i8*, i8** %22, align 4, !dbg !10333
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #24, !dbg !10334
  %25 = icmp eq i32 %24, 0, !dbg !10335
  br i1 %25, label %29, label %26, !dbg !10336

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !10337
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !10304, metadata !DIExpression()), !dbg !10305
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !10338
  br i1 %28, label %29, label %18, !dbg !10312, !llvm.loop !10339

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !10305
  ret %struct.device* %30, !dbg !10341
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #4 !dbg !10342 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10346, metadata !DIExpression()), !dbg !10347
  %2 = icmp eq %struct.device* %0, null, !dbg !10348
  br i1 %2, label %14, label %3, !dbg !10350

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !10351
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !10351
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !10352
  %7 = load i8, i8* %6, align 1, !dbg !10352
  %8 = and i8 %7, 1, !dbg !10352
  %9 = icmp eq i8 %8, 0, !dbg !10352
  br i1 %9, label %14, label %10, !dbg !10353

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !10354
  %12 = load i8, i8* %11, align 1, !dbg !10354
  %13 = icmp eq i8 %12, 0, !dbg !10355
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !10347
  ret i1 %15, !dbg !10356
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #3 !dbg !10357 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !10362, metadata !DIExpression()), !dbg !10363
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !10364
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !10365
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !10366 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10374, metadata !DIExpression()), !dbg !10379
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !10375, metadata !DIExpression()), !dbg !10379
  call void @llvm.dbg.value(metadata i8* %2, metadata !10376, metadata !DIExpression()), !dbg !10379
  %5 = bitcast i32* %4 to i8*, !dbg !10380
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10380
  call void @llvm.dbg.value(metadata i32 0, metadata !10377, metadata !DIExpression()), !dbg !10379
  store i32 0, i32* %4, align 4, !dbg !10381
  call void @llvm.dbg.value(metadata i32* %4, metadata !10377, metadata !DIExpression(DW_OP_deref)), !dbg !10379
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !10382
  call void @llvm.dbg.value(metadata i16* %6, metadata !10378, metadata !DIExpression()), !dbg !10379
  %7 = load i32, i32* %4, align 4, !dbg !10383
  call void @llvm.dbg.value(metadata i32 %7, metadata !10377, metadata !DIExpression()), !dbg !10379
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !10384
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10385
  ret i32 %8, !dbg !10386
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #11 !dbg !10387 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10391, metadata !DIExpression()), !dbg !10397
  call void @llvm.dbg.value(metadata i32* %1, metadata !10392, metadata !DIExpression()), !dbg !10397
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !10398
  %4 = load i16*, i16** %3, align 4, !dbg !10398
  call void @llvm.dbg.value(metadata i16* %4, metadata !10393, metadata !DIExpression()), !dbg !10397
  %5 = icmp eq i16* %4, null, !dbg !10399
  br i1 %5, label %14, label %6, !dbg !10400

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !10401
  call void @llvm.dbg.value(metadata i32 %7, metadata !10394, metadata !DIExpression()), !dbg !10401
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !10402
  %9 = load i16, i16* %8, align 2, !dbg !10402
  %10 = add i16 %9, -32767, !dbg !10403
  %11 = icmp ult i16 %10, 2, !dbg !10403
  %12 = add i32 %7, 1, !dbg !10404
  call void @llvm.dbg.value(metadata i32 %12, metadata !10394, metadata !DIExpression()), !dbg !10401
  br i1 %11, label %13, label %6, !dbg !10403, !llvm.loop !10406

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !10409
  br label %14, !dbg !10410

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !10411
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !10412 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !10416, metadata !DIExpression()), !dbg !10427
  call void @llvm.dbg.value(metadata i32 %1, metadata !10417, metadata !DIExpression()), !dbg !10427
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !10418, metadata !DIExpression()), !dbg !10427
  call void @llvm.dbg.value(metadata i8* %3, metadata !10419, metadata !DIExpression()), !dbg !10427
  call void @llvm.dbg.value(metadata i32 0, metadata !10420, metadata !DIExpression()), !dbg !10428
  %5 = icmp eq i32 %1, 0, !dbg !10429
  br i1 %5, label %16, label %8, !dbg !10430

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !10420, metadata !DIExpression()), !dbg !10428
  %7 = icmp eq i32 %15, %1, !dbg !10429
  br i1 %7, label %16, label %8, !dbg !10430, !llvm.loop !10431

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10420, metadata !DIExpression()), !dbg !10428
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !10433
  %11 = load i16, i16* %10, align 2, !dbg !10433
  call void @llvm.dbg.value(metadata i16 %11, metadata !10422, metadata !DIExpression()), !dbg !10434
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #25, !dbg !10435
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !10425, metadata !DIExpression()), !dbg !10434
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #24, !dbg !10436
  call void @llvm.dbg.value(metadata i32 %13, metadata !10426, metadata !DIExpression()), !dbg !10434
  %14 = icmp slt i32 %13, 0, !dbg !10437
  %15 = add nuw i32 %9, 1, !dbg !10439
  call void @llvm.dbg.value(metadata i32 %15, metadata !10420, metadata !DIExpression()), !dbg !10428
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !10440
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #12 !dbg !10441 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !10445, metadata !DIExpression()), !dbg !10448
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !10446, metadata !DIExpression()), !dbg !10448
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !10447, metadata !DIExpression()), !dbg !10448
  %2 = sext i16 %0 to i32, !dbg !10449
  %3 = icmp slt i16 %0, 1, !dbg !10451
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !10452
  %6 = add nsw i32 %2, -1, !dbg !10452
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !10452
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !10452
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10446, metadata !DIExpression()), !dbg !10448
  ret %struct.device* %8, !dbg !10453
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !10454 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10456, metadata !DIExpression()), !dbg !10461
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !10457, metadata !DIExpression()), !dbg !10461
  call void @llvm.dbg.value(metadata i8* %2, metadata !10458, metadata !DIExpression()), !dbg !10461
  %5 = bitcast i32* %4 to i8*, !dbg !10462
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10462
  call void @llvm.dbg.value(metadata i32 0, metadata !10459, metadata !DIExpression()), !dbg !10461
  store i32 0, i32* %4, align 4, !dbg !10463
  call void @llvm.dbg.value(metadata i32* %4, metadata !10459, metadata !DIExpression(DW_OP_deref)), !dbg !10461
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !10464
  call void @llvm.dbg.value(metadata i16* %6, metadata !10460, metadata !DIExpression()), !dbg !10461
  %7 = load i32, i32* %4, align 4, !dbg !10465
  call void @llvm.dbg.value(metadata i32 %7, metadata !10459, metadata !DIExpression()), !dbg !10461
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !10466
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10467
  ret i32 %8, !dbg !10468
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #11 !dbg !10469 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10471, metadata !DIExpression()), !dbg !10476
  call void @llvm.dbg.value(metadata i32* %1, metadata !10472, metadata !DIExpression()), !dbg !10476
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !10477
  %4 = load i16*, i16** %3, align 4, !dbg !10477
  call void @llvm.dbg.value(metadata i16* %4, metadata !10473, metadata !DIExpression()), !dbg !10476
  call void @llvm.dbg.value(metadata i32 0, metadata !10474, metadata !DIExpression()), !dbg !10476
  call void @llvm.dbg.value(metadata i32 0, metadata !10475, metadata !DIExpression()), !dbg !10476
  %5 = icmp eq i16* %4, null, !dbg !10478
  br i1 %5, label %22, label %6, !dbg !10480

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !10474, metadata !DIExpression()), !dbg !10476
  call void @llvm.dbg.value(metadata i16* %8, metadata !10473, metadata !DIExpression()), !dbg !10476
  %9 = load i16, i16* %8, align 2, !dbg !10481
  %10 = icmp eq i16 %9, -32768, !dbg !10485
  call void @llvm.dbg.value(metadata i32 undef, metadata !10474, metadata !DIExpression()), !dbg !10476
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !10486
  call void @llvm.dbg.value(metadata i16* %11, metadata !10473, metadata !DIExpression()), !dbg !10476
  %12 = zext i1 %10 to i32, !dbg !10487
  %13 = add i32 %7, %12, !dbg !10487
  call void @llvm.dbg.value(metadata i32 %13, metadata !10474, metadata !DIExpression()), !dbg !10476
  %14 = icmp eq i32 %13, 2, !dbg !10488
  br i1 %14, label %15, label %6, !dbg !10489

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !10476
  call void @llvm.dbg.value(metadata i32 %16, metadata !10475, metadata !DIExpression()), !dbg !10476
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !10490
  %18 = load i16, i16* %17, align 2, !dbg !10490
  %19 = icmp eq i16 %18, 32767, !dbg !10491
  %20 = add i32 %16, 1, !dbg !10492
  call void @llvm.dbg.value(metadata i32 %20, metadata !10475, metadata !DIExpression()), !dbg !10476
  br i1 %19, label %21, label %15, !dbg !10494, !llvm.loop !10495

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !10497
  br label %22, !dbg !10498

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !10499
  call void @llvm.dbg.value(metadata i16* %23, metadata !10473, metadata !DIExpression()), !dbg !10476
  ret i16* %23, !dbg !10500
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #4 !dbg !10501 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10504
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !10505
  ret i32* %2, !dbg !10506
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #12 !dbg !10507 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !10655, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !10656, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !10657, metadata !DIExpression()), !dbg !10658
  ret void, !dbg !10659
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #12 !dbg !10660 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10664, metadata !DIExpression()), !dbg !10666
  call void @llvm.dbg.value(metadata i32 %1, metadata !10665, metadata !DIExpression()), !dbg !10666
  ret void, !dbg !10667
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #12 !dbg !10668 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10672, metadata !DIExpression()), !dbg !10674
  call void @llvm.dbg.value(metadata i32 %1, metadata !10673, metadata !DIExpression()), !dbg !10674
  ret void, !dbg !10675
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !10676 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10680, metadata !DIExpression()), !dbg !10682
  call void @llvm.dbg.value(metadata i8* %1, metadata !10681, metadata !DIExpression()), !dbg !10682
  ret i32 -134, !dbg !10683
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !10684 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10688, metadata !DIExpression()), !dbg !10690
  call void @llvm.dbg.value(metadata i8* %1, metadata !10689, metadata !DIExpression()), !dbg !10690
  ret i32 -134, !dbg !10691
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !10692 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10695, metadata !DIExpression()), !dbg !10696
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10697, !srcloc !10703
  call void @llvm.dbg.value(metadata i32 undef, metadata !10700, metadata !DIExpression()) #23, !dbg !10704
  call void @llvm.dbg.value(metadata i32 undef, metadata !10701, metadata !DIExpression()) #23, !dbg !10704
  br label %3, !dbg !10705

3:                                                ; preds = %3, %1
  br label %3, !dbg !10706, !llvm.loop !10709
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !10712 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10716, metadata !DIExpression()), !dbg !10718
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !10717, metadata !DIExpression()), !dbg !10718
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !10719
  unreachable, !dbg !10719
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !10720 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10722, metadata !DIExpression()), !dbg !10723
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !10724
  unreachable, !dbg !10724
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !10725 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10727, metadata !DIExpression()), !dbg !10731
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !10728, metadata !DIExpression()), !dbg !10731
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10732, !srcloc !10703
  call void @llvm.dbg.value(metadata i32 undef, metadata !10700, metadata !DIExpression()) #23, !dbg !10734
  call void @llvm.dbg.value(metadata i32 undef, metadata !10701, metadata !DIExpression()) #23, !dbg !10734
  call void @llvm.dbg.value(metadata i32 undef, metadata !10729, metadata !DIExpression()), !dbg !10731
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !10730, metadata !DIExpression()), !dbg !10731
  %4 = icmp eq %struct.__esf* %1, null, !dbg !10735
  br i1 %4, label %6, label %5, !dbg !10737

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #25, !dbg !10738
  br label %7, !dbg !10739

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #25, !dbg !10738
  br label %7, !dbg !10742

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !10732
  call void @llvm.dbg.value(metadata i32 %8, metadata !10700, metadata !DIExpression()) #23, !dbg !10734
  call void @llvm.dbg.value(metadata i32 %8, metadata !10729, metadata !DIExpression()), !dbg !10731
  %9 = tail call fastcc %struct.k_thread* @k_current_get.98() #26, !dbg !10744
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !10730, metadata !DIExpression()), !dbg !10731
  call void @llvm.dbg.value(metadata i32 undef, metadata !10745, metadata !DIExpression()) #23, !dbg !10748
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !10750, !srcloc !10751
  tail call fastcc void @k_thread_abort.99(%struct.k_thread* noundef %9) #25, !dbg !10752
  ret void, !dbg !10755
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.98() unnamed_addr #9 !dbg !10756 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.100() #26, !dbg !10760
  ret %struct.k_thread* %1, !dbg !10761
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.99(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !10762 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10766, metadata !DIExpression()), !dbg !10767
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10768, !srcloc !10770
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !10771
  ret void, !dbg !10772
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.100() unnamed_addr #9 !dbg !10773 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10774, !srcloc !10776
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !10777
  ret %struct.k_thread* %1, !dbg !10778
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10779 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10783, metadata !DIExpression()), !dbg !10786
  call void @llvm.dbg.value(metadata i32 %1, metadata !10784, metadata !DIExpression()), !dbg !10786
  call void @llvm.dbg.value(metadata i32 %2, metadata !10785, metadata !DIExpression()), !dbg !10786
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #24, !dbg !10787
  ret void, !dbg !10788
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10789 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10793, metadata !DIExpression()), !dbg !10796
  call void @llvm.dbg.value(metadata i8* %1, metadata !10794, metadata !DIExpression()), !dbg !10796
  call void @llvm.dbg.value(metadata i32 %2, metadata !10795, metadata !DIExpression()), !dbg !10796
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #24, !dbg !10797
  ret void, !dbg !10798
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !10799 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #25, !dbg !10800
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_bss_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_bss_start to i32))) #25, !dbg !10801
  ret void, !dbg !10802
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !10803 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10805, metadata !DIExpression()), !dbg !10806
  tail call fastcc void @init_idle_thread(i32 noundef %0) #25, !dbg !10807
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !10808
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !10809
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !10810
  %4 = trunc i32 %0 to i8, !dbg !10811
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !10812
  store i8 %4, i8* %5, align 4, !dbg !10813
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !10814
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #25, !dbg !10815
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !10816
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !10817
  store i8* %8, i8** %9, align 4, !dbg !10818
  ret void, !dbg !10819
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !10820 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10822, metadata !DIExpression()), !dbg !10828
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !10829
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !10823, metadata !DIExpression()), !dbg !10828
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !10830
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !10824, metadata !DIExpression()), !dbg !10828
  call void @llvm.dbg.value(metadata i8* null, metadata !10827, metadata !DIExpression()), !dbg !10828
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !10831
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !10832
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #24, !dbg !10833
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #25, !dbg !10834
  ret void, !dbg !10835
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #12 !dbg !10836 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !10840, metadata !DIExpression()), !dbg !10841
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !10842
  ret i8* %2, !dbg !10843
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !10844 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10849, metadata !DIExpression()), !dbg !10850
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10851
  %3 = load i8, i8* %2, align 1, !dbg !10852
  %4 = and i8 %3, -5, !dbg !10852
  store i8 %4, i8* %2, align 1, !dbg !10852
  ret void, !dbg !10853
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #8 !dbg !10854 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #25, !dbg !10857
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #24, !dbg !10858
  %3 = ptrtoint i8* %2 to i32, !dbg !10867
  %4 = add i32 %3, 2048, !dbg !10868
  call void @llvm.dbg.value(metadata i32 %4, metadata !10862, metadata !DIExpression()) #23, !dbg !10869
  call void @llvm.dbg.value(metadata i32 %4, metadata !10870, metadata !DIExpression()) #23, !dbg !10873
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !10875, !srcloc !10876
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !10877
  %6 = or i32 %5, 512, !dbg !10877
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !10877
  tail call fastcc void @__NVIC_SetPriority.107(i32 noundef -2, i32 noundef 255) #24, !dbg !10878
  tail call fastcc void @__NVIC_SetPriority.107(i32 noundef -5, i32 noundef 0) #24, !dbg !10881
  tail call fastcc void @__NVIC_SetPriority.107(i32 noundef -12, i32 noundef 0) #24, !dbg !10882
  tail call fastcc void @__NVIC_SetPriority.107(i32 noundef -11, i32 noundef 0) #24, !dbg !10883
  tail call fastcc void @__NVIC_SetPriority.107(i32 noundef -10, i32 noundef 0) #24, !dbg !10884
  tail call fastcc void @__NVIC_SetPriority.107(i32 noundef -4, i32 noundef 0) #24, !dbg !10885
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !10886
  %8 = or i32 %7, 458752, !dbg !10886
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !10886
  tail call void @z_arm_fault_init() #24, !dbg !10887
  tail call void @z_arm_cpu_idle_init() #24, !dbg !10888
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !10889
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !10892
  %9 = tail call i32 @z_arm_mpu_init() #24, !dbg !10893
  tail call void @z_arm_configure_static_mpu_regions() #24, !dbg !10894
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !10895
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #23, !dbg !10895
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !10856, metadata !DIExpression()), !dbg !10896
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #25, !dbg !10897
  call void @z_device_state_init() #24, !dbg !10898
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #25, !dbg !10899
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #25, !dbg !10900
  %11 = call fastcc i8* @prepare_multithreading() #25, !dbg !10901
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !10902
  unreachable, !dbg !10902
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !1979 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1983, metadata !DIExpression()), !dbg !10903
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !10904
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !10904
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1984, metadata !DIExpression()), !dbg !10903
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1984, metadata !DIExpression()), !dbg !10903
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !10905
  br i1 %7, label %8, label %35, !dbg !10906

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !1984, metadata !DIExpression()), !dbg !10903
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !10907
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !10907
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !1994, metadata !DIExpression()), !dbg !10908
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !10909
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !10909
  %14 = tail call i32 %13(%struct.device* noundef %11) #24, !dbg !10910
  call void @llvm.dbg.value(metadata i32 %14, metadata !1998, metadata !DIExpression()), !dbg !10908
  %15 = icmp eq %struct.device* %11, null, !dbg !10911
  br i1 %15, label %32, label %16, !dbg !10913

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !10914
  br i1 %17, label %26, label %18, !dbg !10917

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !10918
  call void @llvm.dbg.value(metadata i32 %19, metadata !1998, metadata !DIExpression()), !dbg !10908
  %20 = icmp ult i32 %19, 255, !dbg !10920
  %21 = select i1 %20, i32 %19, i32 255, !dbg !10920
  call void @llvm.dbg.value(metadata i32 %21, metadata !1998, metadata !DIExpression()), !dbg !10908
  %22 = trunc i32 %21 to i8, !dbg !10921
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !10922
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !10922
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !10923
  store i8 %22, i8* %25, align 1, !dbg !10924
  br label %26, !dbg !10925

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !10926
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !10926
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !10927
  %30 = load i8, i8* %29, align 1, !dbg !10928
  %31 = or i8 %30, 1, !dbg !10928
  store i8 %31, i8* %29, align 1, !dbg !10928
  br label %32, !dbg !10929

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !10930
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !1984, metadata !DIExpression()), !dbg !10903
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !10905
  br i1 %34, label %8, label %35, !dbg !10906, !llvm.loop !10931

35:                                               ; preds = %32, %1
  ret void, !dbg !10933
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.107(i32 noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !10934 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10936, metadata !DIExpression()), !dbg !10938
  call void @llvm.dbg.value(metadata i32 %1, metadata !10937, metadata !DIExpression()), !dbg !10938
  %3 = trunc i32 %1 to i8, !dbg !10939
  %4 = shl i8 %3, 4, !dbg !10939
  %5 = and i32 %0, 15, !dbg !10942
  %6 = add nsw i32 %5, -4, !dbg !10943
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !10944
  store volatile i8 %4, i8* %7, align 1, !dbg !10945
  ret void, !dbg !10946
}

; Function Attrs: optsize
declare !dbg !10947 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #3 !dbg !10948 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10951, metadata !DIExpression()), !dbg !10952
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10953
  store i8 1, i8* %2, align 1, !dbg !10954
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !10955
  store i8 1, i8* %3, align 4, !dbg !10956
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !10957
  store i32 0, i32* %4, align 4, !dbg !10958
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !10959
  store i32 0, i32* %5, align 4, !dbg !10960
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !10961
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !10962
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10963
  ret void, !dbg !10964
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !10965 {
  tail call void @z_sched_init() #24, !dbg !10970
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !10971
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.108, i32 0, i32 0)) #24, !dbg !10972
  call void @llvm.dbg.value(metadata i8* %1, metadata !10969, metadata !DIExpression()), !dbg !10973
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !10974
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !10975
  tail call void @z_init_cpu(i32 noundef 0) #25, !dbg !10976
  ret i8* %1, !dbg !10977
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #8 !dbg !10978 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10982, metadata !DIExpression()), !dbg !10983
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #24, !dbg !10984
  unreachable, !dbg !10985
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !10986 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10988, metadata !DIExpression()), !dbg !10991
  call void @llvm.dbg.value(metadata i8* %1, metadata !10989, metadata !DIExpression()), !dbg !10991
  call void @llvm.dbg.value(metadata i8* %2, metadata !10990, metadata !DIExpression()), !dbg !10991
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !10992
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #25, !dbg !10993
  tail call void @boot_banner() #24, !dbg !10994
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #25, !dbg !10995
  tail call void @z_init_static_threads() #24, !dbg !10996
  tail call void @main() #24, !dbg !10997
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !10998
  %5 = and i8 %4, -2, !dbg !10998
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !10998
  ret void, !dbg !10999
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #12 !dbg !11000 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !11010, metadata !DIExpression()), !dbg !11012
  call void @llvm.dbg.value(metadata i8* %1, metadata !11011, metadata !DIExpression()), !dbg !11012
  ret void, !dbg !11013
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #12 !dbg !11014 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !11016, metadata !DIExpression()), !dbg !11018
  call void @llvm.dbg.value(metadata i8* %1, metadata !11017, metadata !DIExpression()), !dbg !11018
  ret void, !dbg !11019
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !11020 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !11021, !srcloc !11028
  call void @llvm.dbg.value(metadata i32 %1, metadata !11024, metadata !DIExpression()) #23, !dbg !11029
  %2 = icmp ne i32 %1, 0, !dbg !11030
  ret i1 %2, !dbg !11031
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #7 !dbg !11032 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11033
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11034
  %3 = load i8, i8* %2, align 4, !dbg !11035
  %4 = or i8 %3, 1, !dbg !11035
  store i8 %4, i8* %2, align 4, !dbg !11035
  ret void, !dbg !11036
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #7 !dbg !11037 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11038
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11039
  %3 = load i8, i8* %2, align 4, !dbg !11040
  %4 = and i8 %3, -2, !dbg !11040
  store i8 %4, i8* %2, align 4, !dbg !11040
  ret void, !dbg !11041
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #4 !dbg !11042 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11043
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11044
  %3 = load i8, i8* %2, align 4, !dbg !11044
  %4 = and i8 %3, 1, !dbg !11045
  %5 = icmp ne i8 %4, 0, !dbg !11046
  ret i1 %5, !dbg !11047
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !11048 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11052, metadata !DIExpression()), !dbg !11054
  call void @llvm.dbg.value(metadata i8* %1, metadata !11053, metadata !DIExpression()), !dbg !11054
  ret i32 -88, !dbg !11055
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #12 !dbg !11056 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11060, metadata !DIExpression()), !dbg !11061
  ret i8* null, !dbg !11062
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #12 !dbg !11063 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11067, metadata !DIExpression()), !dbg !11070
  call void @llvm.dbg.value(metadata i8* %1, metadata !11068, metadata !DIExpression()), !dbg !11070
  call void @llvm.dbg.value(metadata i32 %2, metadata !11069, metadata !DIExpression()), !dbg !11070
  ret i32 -88, !dbg !11071
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2005 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2119, metadata !DIExpression()), !dbg !11072
  call void @llvm.dbg.value(metadata i8* %1, metadata !2120, metadata !DIExpression()), !dbg !11072
  call void @llvm.dbg.value(metadata i32 %2, metadata !2121, metadata !DIExpression()), !dbg !11072
  call void @llvm.dbg.value(metadata i32 0, metadata !2122, metadata !DIExpression()), !dbg !11072
  call void @llvm.dbg.value(metadata i8 undef, metadata !2124, metadata !DIExpression()), !dbg !11072
  %4 = icmp eq i8* %1, null, !dbg !11073
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !11075
  br i1 %6, label %46, label %7, !dbg !11075

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11076
  %9 = load i8, i8* %8, align 1, !dbg !11076
  call void @llvm.dbg.value(metadata i8 %9, metadata !2124, metadata !DIExpression()), !dbg !11072
  %10 = add i32 %2, -1, !dbg !11077
  call void @llvm.dbg.value(metadata i32 %10, metadata !2121, metadata !DIExpression()), !dbg !11072
  call void @llvm.dbg.value(metadata i8 0, metadata !2125, metadata !DIExpression()), !dbg !11078
  call void @llvm.dbg.value(metadata i8 %9, metadata !2124, metadata !DIExpression()), !dbg !11072
  call void @llvm.dbg.value(metadata i32 0, metadata !2122, metadata !DIExpression()), !dbg !11072
  %11 = icmp eq i8 %9, 0, !dbg !11079
  br i1 %11, label %12, label %15, !dbg !11081

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !11082
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !11083
  store i8 0, i8* %14, align 1, !dbg !11084
  br label %46, !dbg !11085

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2125, metadata !DIExpression()), !dbg !11078
  call void @llvm.dbg.value(metadata i8 %17, metadata !2124, metadata !DIExpression()), !dbg !11072
  call void @llvm.dbg.value(metadata i32 %18, metadata !2122, metadata !DIExpression()), !dbg !11072
  %19 = zext i8 %17 to i32, !dbg !11086
  %20 = zext i8 %16 to i32, !dbg !11087
  %21 = shl nuw i32 1, %20, !dbg !11087
  call void @llvm.dbg.value(metadata i32 %21, metadata !2123, metadata !DIExpression()), !dbg !11072
  %22 = and i32 %21, %19, !dbg !11089
  %23 = icmp eq i32 %22, 0, !dbg !11091
  br i1 %23, label %42, label %24, !dbg !11092

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !11093
  %26 = sub i32 %10, %18, !dbg !11094
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !11095
  %28 = load i8*, i8** %27, align 4, !dbg !11095
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !11096
  %30 = load i32, i32* %29, align 4, !dbg !11096
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #25, !dbg !11097
  %32 = add i32 %31, %18, !dbg !11098
  call void @llvm.dbg.value(metadata i32 %32, metadata !2122, metadata !DIExpression()), !dbg !11072
  %33 = trunc i32 %21 to i8, !dbg !11099
  %34 = xor i8 %33, -1, !dbg !11099
  %35 = and i8 %17, %34, !dbg !11099
  call void @llvm.dbg.value(metadata i8 %35, metadata !2124, metadata !DIExpression()), !dbg !11072
  %36 = icmp eq i8 %35, 0, !dbg !11100
  br i1 %36, label %12, label %37, !dbg !11102

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !11103
  %39 = sub i32 %10, %32, !dbg !11105
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.109, i32 0, i32 0), i32 noundef 1) #25, !dbg !11106
  %41 = add i32 %40, %32, !dbg !11107
  call void @llvm.dbg.value(metadata i32 %41, metadata !2122, metadata !DIExpression()), !dbg !11072
  br label %42, !dbg !11108

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !11072
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !11072
  call void @llvm.dbg.value(metadata i8 %44, metadata !2124, metadata !DIExpression()), !dbg !11072
  call void @llvm.dbg.value(metadata i32 %43, metadata !2122, metadata !DIExpression()), !dbg !11072
  %45 = add i8 %16, 1, !dbg !11109
  call void @llvm.dbg.value(metadata i8 %45, metadata !2125, metadata !DIExpression()), !dbg !11078
  br label %15, !dbg !11081

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.110, i32 0, i32 0), %3 ], !dbg !11072
  ret i8* %47, !dbg !11110
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !11111 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11115, metadata !DIExpression()), !dbg !11120
  call void @llvm.dbg.value(metadata i32 %1, metadata !11116, metadata !DIExpression()), !dbg !11120
  call void @llvm.dbg.value(metadata i8* %2, metadata !11117, metadata !DIExpression()), !dbg !11120
  call void @llvm.dbg.value(metadata i32 %3, metadata !11118, metadata !DIExpression()), !dbg !11120
  %5 = icmp ult i32 %1, %3, !dbg !11121
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !11121
  call void @llvm.dbg.value(metadata i32 %6, metadata !11119, metadata !DIExpression()), !dbg !11120
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #24, !dbg !11122
  ret i32 %6, !dbg !11123
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11124 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11128, metadata !DIExpression()), !dbg !11129
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #24, !dbg !11130
  ret void, !dbg !11131
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !11132 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11141, metadata !DIExpression()), !dbg !11152
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11142, metadata !DIExpression()), !dbg !11152
  call void @llvm.dbg.value(metadata i32 %2, metadata !11143, metadata !DIExpression()), !dbg !11152
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !11144, metadata !DIExpression()), !dbg !11152
  call void @llvm.dbg.value(metadata i8* %4, metadata !11145, metadata !DIExpression()), !dbg !11152
  call void @llvm.dbg.value(metadata i8* %5, metadata !11146, metadata !DIExpression()), !dbg !11152
  call void @llvm.dbg.value(metadata i8* %6, metadata !11147, metadata !DIExpression()), !dbg !11152
  call void @llvm.dbg.value(metadata i32 %7, metadata !11148, metadata !DIExpression()), !dbg !11152
  call void @llvm.dbg.value(metadata i32 %8, metadata !11149, metadata !DIExpression()), !dbg !11152
  call void @llvm.dbg.value(metadata i8* undef, metadata !11150, metadata !DIExpression()), !dbg !11152
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !11153
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #25, !dbg !11154
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !11155
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #25, !dbg !11156
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #25, !dbg !11157
  call void @llvm.dbg.value(metadata i8* %13, metadata !11151, metadata !DIExpression()), !dbg !11152
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #24, !dbg !11158
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !11159
  store i8* null, i8** %14, align 4, !dbg !11160
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11161
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !11161
  br i1 %16, label %20, label %17, !dbg !11163

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !11164
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !11164
  br label %20, !dbg !11165

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !11152
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !11166
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !11168
  ret i8* %13, !dbg !11169
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #3 !dbg !11170 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !11175, metadata !DIExpression()), !dbg !11176
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !11177
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #25, !dbg !11178
  ret void, !dbg !11179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #3 !dbg !11180 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !11185, metadata !DIExpression()), !dbg !11189
  call void @llvm.dbg.value(metadata i32 %1, metadata !11186, metadata !DIExpression()), !dbg !11189
  call void @llvm.dbg.value(metadata i32 %2, metadata !11187, metadata !DIExpression()), !dbg !11189
  call void @llvm.dbg.value(metadata i32 %3, metadata !11188, metadata !DIExpression()), !dbg !11189
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !11190
  store %union.anon* null, %union.anon** %5, align 8, !dbg !11191
  %6 = trunc i32 %3 to i8, !dbg !11192
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !11193
  store i8 %6, i8* %7, align 4, !dbg !11194
  %8 = trunc i32 %2 to i8, !dbg !11195
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !11196
  store i8 %8, i8* %9, align 1, !dbg !11197
  %10 = trunc i32 %1 to i8, !dbg !11198
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !11199
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !11199
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !11199
  store i8 %10, i8* %13, align 2, !dbg !11200
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !11201
  store i8 0, i8* %14, align 1, !dbg !11202
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #25, !dbg !11203
  ret void, !dbg !11204
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #3 !dbg !11205 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11209, metadata !DIExpression()), !dbg !11217
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11210, metadata !DIExpression()), !dbg !11217
  call void @llvm.dbg.value(metadata i32 %2, metadata !11211, metadata !DIExpression()), !dbg !11217
  call void @llvm.dbg.value(metadata i32 0, metadata !11216, metadata !DIExpression()), !dbg !11217
  %4 = add i32 %2, 7, !dbg !11218
  %5 = and i32 %4, -8, !dbg !11218
  %6 = add i32 %5, 64, !dbg !11218
  call void @llvm.dbg.value(metadata i32 %6, metadata !11212, metadata !DIExpression()), !dbg !11217
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.120(%struct.z_thread_stack_element* noundef %1) #25, !dbg !11220
  call void @llvm.dbg.value(metadata i8* %7, metadata !11215, metadata !DIExpression()), !dbg !11217
  call void @llvm.dbg.value(metadata i32 %5, metadata !11213, metadata !DIExpression()), !dbg !11217
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !11221
  call void @llvm.dbg.value(metadata i8* %8, metadata !11214, metadata !DIExpression()), !dbg !11217
  call void @llvm.dbg.value(metadata i32 0, metadata !11216, metadata !DIExpression()), !dbg !11217
  %9 = ptrtoint i8* %7 to i32, !dbg !11222
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !11223
  store i32 %9, i32* %10, align 4, !dbg !11224
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !11225
  store i32 %5, i32* %11, align 4, !dbg !11226
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !11227
  store i32 0, i32* %12, align 4, !dbg !11228
  call void @llvm.dbg.value(metadata i8* %8, metadata !11214, metadata !DIExpression()), !dbg !11217
  ret i8* %8, !dbg !11229
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.120(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #12 !dbg !11230 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !11234, metadata !DIExpression()), !dbg !11235
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !11236
  ret i8* %2, !dbg !11237
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !11238 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !11243, metadata !DIExpression()), !dbg !11244
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !11245
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !11246
  ret void, !dbg !11247
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !11248 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11250, metadata !DIExpression()), !dbg !11251
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !11252
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #25, !dbg !11253
  ret void, !dbg !11254
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !11255 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11259, metadata !DIExpression()), !dbg !11260
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11261
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !11262
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11263
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !11264
  ret void, !dbg !11265
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #3 !dbg !11266 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11271, metadata !DIExpression()), !dbg !11272
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11273
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !11274
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11275
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !11276
  ret void, !dbg !11277
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !11278 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !11295, metadata !DIExpression()), !dbg !11296
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11286, metadata !DIExpression()), !dbg !11296
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11287, metadata !DIExpression()), !dbg !11296
  call void @llvm.dbg.value(metadata i32 %2, metadata !11288, metadata !DIExpression()), !dbg !11296
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !11289, metadata !DIExpression()), !dbg !11296
  call void @llvm.dbg.value(metadata i8* %4, metadata !11290, metadata !DIExpression()), !dbg !11296
  call void @llvm.dbg.value(metadata i8* %5, metadata !11291, metadata !DIExpression()), !dbg !11296
  call void @llvm.dbg.value(metadata i8* %6, metadata !11292, metadata !DIExpression()), !dbg !11296
  call void @llvm.dbg.value(metadata i32 %7, metadata !11293, metadata !DIExpression()), !dbg !11296
  call void @llvm.dbg.value(metadata i32 %8, metadata !11294, metadata !DIExpression()), !dbg !11296
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #25, !dbg !11297
  %13 = icmp eq i64 %11, -1, !dbg !11298
  br i1 %13, label %15, label %14, !dbg !11300

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #25, !dbg !11301
  br label %15, !dbg !11303

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !11304
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11305 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !11310, metadata !DIExpression()), !dbg !11311
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11309, metadata !DIExpression()), !dbg !11311
  %4 = icmp eq i64 %3, 0, !dbg !11312
  br i1 %4, label %5, label %6, !dbg !11314

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !11315
  br label %7, !dbg !11317

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !11318
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !11320
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11321 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11325, metadata !DIExpression()), !dbg !11326
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11327, !srcloc !11329
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !11330
  ret void, !dbg !11331
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11332 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !11335, metadata !DIExpression()), !dbg !11336
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11334, metadata !DIExpression()), !dbg !11336
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !11337
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !11338
  ret void, !dbg !11339
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !11340 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11342, metadata !DIExpression()), !dbg !11362
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !11363

1:                                                ; preds = %2
  tail call void @k_sched_lock() #24, !dbg !11364
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11360, metadata !DIExpression()), !dbg !11365
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !11366

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !11342, metadata !DIExpression()), !dbg !11362
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !11367
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !11367
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !11370
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !11370
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !11371
  %9 = load i32, i32* %8, align 4, !dbg !11371
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !11372
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !11372
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !11373
  %13 = load i8*, i8** %12, align 4, !dbg !11373
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !11374
  %15 = load i8*, i8** %14, align 4, !dbg !11374
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !11375
  %17 = load i8*, i8** %16, align 4, !dbg !11375
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !11376
  %19 = load i32, i32* %18, align 4, !dbg !11376
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !11377
  %21 = load i32, i32* %20, align 4, !dbg !11377
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #25, !dbg !11378
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !11379
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !11380
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !11381
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !11381
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !11382
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !11342, metadata !DIExpression()), !dbg !11362
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11383
  br i1 %27, label %2, label %1, !dbg !11363, !llvm.loop !11385

28:                                               ; preds = %0
  tail call void @k_sched_lock() #24, !dbg !11364
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11360, metadata !DIExpression()), !dbg !11365
  br label %29, !dbg !11366

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #24, !dbg !11387
  ret void, !dbg !11388

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !11360, metadata !DIExpression()), !dbg !11365
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !11389
  %33 = load i32, i32* %32, align 4, !dbg !11389
  %34 = icmp eq i32 %33, -1, !dbg !11393
  br i1 %34, label %43, label %35, !dbg !11394

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !11395
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !11395
  %38 = icmp sgt i32 %33, 0, !dbg !11397
  %39 = select i1 %38, i32 %33, i32 0, !dbg !11397
  %40 = zext i32 %39 to i64, !dbg !11397
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #25, !dbg !11397
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !11398
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #25, !dbg !11398
  br label %43, !dbg !11399

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !11400
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !11360, metadata !DIExpression()), !dbg !11365
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11401
  br i1 %45, label %30, label %29, !dbg !11366, !llvm.loop !11403
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #12 !dbg !11405 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !11410, metadata !DIExpression()), !dbg !11411
  call void @llvm.dbg.value(metadata i64 %0, metadata !11412, metadata !DIExpression()), !dbg !11429
  call void @llvm.dbg.value(metadata i32 1000, metadata !11417, metadata !DIExpression()), !dbg !11429
  call void @llvm.dbg.value(metadata i32 10000, metadata !11418, metadata !DIExpression()), !dbg !11429
  call void @llvm.dbg.value(metadata i8 1, metadata !11419, metadata !DIExpression()), !dbg !11429
  call void @llvm.dbg.value(metadata i8 0, metadata !11420, metadata !DIExpression()), !dbg !11429
  call void @llvm.dbg.value(metadata i8 1, metadata !11421, metadata !DIExpression()), !dbg !11429
  call void @llvm.dbg.value(metadata i8 0, metadata !11422, metadata !DIExpression()), !dbg !11429
  call void @llvm.dbg.value(metadata i8 1, metadata !11423, metadata !DIExpression()), !dbg !11429
  call void @llvm.dbg.value(metadata i8 0, metadata !11424, metadata !DIExpression()), !dbg !11429
  call void @llvm.dbg.value(metadata i64 0, metadata !11425, metadata !DIExpression()), !dbg !11429
  call void @llvm.dbg.value(metadata i64 0, metadata !11425, metadata !DIExpression()), !dbg !11429
  %2 = mul i64 %0, 10, !dbg !11431
  ret i64 %2, !dbg !11437
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #8 !dbg !11438 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !11440, metadata !DIExpression()), !dbg !11444
  call void @llvm.dbg.value(metadata i8* %1, metadata !11441, metadata !DIExpression()), !dbg !11444
  call void @llvm.dbg.value(metadata i8* %2, metadata !11442, metadata !DIExpression()), !dbg !11444
  call void @llvm.dbg.value(metadata i8* %3, metadata !11443, metadata !DIExpression()), !dbg !11444
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11445
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !11446
  %7 = load i8, i8* %6, align 4, !dbg !11447
  %8 = or i8 %7, 4, !dbg !11447
  store i8 %8, i8* %6, align 4, !dbg !11447
  tail call void @z_thread_essential_clear() #25, !dbg !11448
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !11449
  unreachable, !dbg !11449
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #12 !dbg !11450 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11454, metadata !DIExpression()), !dbg !11455
  ret i32 -134, !dbg !11456
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #12 !dbg !11457 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11461, metadata !DIExpression()), !dbg !11463
  call void @llvm.dbg.value(metadata i32 %1, metadata !11462, metadata !DIExpression()), !dbg !11463
  ret i32 -134, !dbg !11464
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #12 !dbg !11465 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11472, metadata !DIExpression()), !dbg !11474
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !11473, metadata !DIExpression()), !dbg !11474
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !11475
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !11477
  %6 = select i1 %5, i32 -22, i32 0, !dbg !11474
  ret i32 %6, !dbg !11478
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #12 !dbg !11479 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !11483, metadata !DIExpression()), !dbg !11484
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !11485
  %3 = select i1 %2, i32 -22, i32 0, !dbg !11484
  ret i32 %3, !dbg !11487
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !11488 {
  tail call void @sys_clock_idle_exit() #24, !dbg !11490
  ret void, !dbg !11491
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #8 !dbg !11492 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11494, metadata !DIExpression()), !dbg !11497
  call void @llvm.dbg.value(metadata i8* %1, metadata !11495, metadata !DIExpression()), !dbg !11497
  call void @llvm.dbg.value(metadata i8* %2, metadata !11496, metadata !DIExpression()), !dbg !11497
  br label %4, !dbg !11498

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11499, !srcloc !11506
  call void @llvm.dbg.value(metadata i32 undef, metadata !11502, metadata !DIExpression()) #23, !dbg !11507
  call void @llvm.dbg.value(metadata i32 undef, metadata !11503, metadata !DIExpression()) #23, !dbg !11507
  tail call fastcc void @k_cpu_idle() #25, !dbg !11508
  br label %4, !dbg !11498, !llvm.loop !11509
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !11511 {
  tail call void @arch_cpu_idle() #24, !dbg !11512
  ret void, !dbg !11513
}

; Function Attrs: optsize
declare !dbg !11514 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #4 !dbg !11515 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11519, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !11520, metadata !DIExpression()), !dbg !11523
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !11524
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !11524
  %5 = load i8, i8* %4, align 2, !dbg !11524
  call void @llvm.dbg.value(metadata i8 %5, metadata !11521, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !11523
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !11525
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !11525
  %8 = load i8, i8* %7, align 2, !dbg !11525
  call void @llvm.dbg.value(metadata i8 %8, metadata !11522, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !11523
  %9 = icmp eq i8 %8, %5, !dbg !11526
  %10 = sext i8 %5 to i32, !dbg !11528
  %11 = sext i8 %8 to i32, !dbg !11528
  %12 = sub nsw i32 %11, %10, !dbg !11528
  %13 = select i1 %9, i32 0, i32 %12, !dbg !11528
  ret i32 %13, !dbg !11529
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !11530 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11534, metadata !DIExpression()), !dbg !11535
  %2 = tail call fastcc i32 @slice_time() #25, !dbg !11536
  %3 = icmp eq i32 %2, 0, !dbg !11538
  br i1 %3, label %8, label %4, !dbg !11539

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #24, !dbg !11540
  %6 = add i32 %5, %2, !dbg !11542
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11543
  %7 = tail call fastcc i32 @slice_time() #25, !dbg !11544
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #24, !dbg !11545
  br label %8, !dbg !11546

8:                                                ; preds = %4, %1
  ret void, !dbg !11547
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #4 !dbg !11548 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11552, metadata !DIExpression()), !dbg !11554
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !11555
  call void @llvm.dbg.value(metadata i32 %1, metadata !11553, metadata !DIExpression()), !dbg !11554
  ret i32 %1, !dbg !11556
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11557 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11561, metadata !DIExpression()), !dbg !11570
  call void @llvm.dbg.value(metadata i32 %1, metadata !11562, metadata !DIExpression()), !dbg !11570
  call void @llvm.dbg.value(metadata i32 0, metadata !11563, metadata !DIExpression()), !dbg !11571
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11572, metadata !DIExpression()) #23, !dbg !11579
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11581, !srcloc !11587
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !11581
  call void @llvm.dbg.value(metadata i32 %4, metadata !11584, metadata !DIExpression()) #23, !dbg !11588
  call void @llvm.dbg.value(metadata i32 undef, metadata !11585, metadata !DIExpression()) #23, !dbg !11588
  call void @llvm.dbg.value(metadata i32 %4, metadata !11578, metadata !DIExpression()) #23, !dbg !11579
  call void @llvm.dbg.value(metadata i32 %4, metadata !11569, metadata !DIExpression()), !dbg !11571
  call void @llvm.dbg.value(metadata i32 undef, metadata !11563, metadata !DIExpression()), !dbg !11571
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11589
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #25, !dbg !11592
  %6 = icmp sgt i32 %0, 0, !dbg !11593
  %7 = icmp sgt i32 %5, 2, !dbg !11595
  %8 = select i1 %7, i32 %5, i32 2, !dbg !11595
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !11595
  store i32 %9, i32* @slice_ticks, align 4, !dbg !11596
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !11597
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !11598
  call void @llvm.dbg.value(metadata i32 %4, metadata !11599, metadata !DIExpression()) #23, !dbg !11605
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11604, metadata !DIExpression()) #23, !dbg !11605
  call void @llvm.dbg.value(metadata i32 %4, metadata !11607, metadata !DIExpression()) #23, !dbg !11610
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !11612, !srcloc !11613
  call void @llvm.dbg.value(metadata i32 1, metadata !11563, metadata !DIExpression()), !dbg !11571
  call void @llvm.dbg.value(metadata i32 undef, metadata !11563, metadata !DIExpression()), !dbg !11571
  ret void, !dbg !11614
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #12 !dbg !11615 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11617, metadata !DIExpression()), !dbg !11618
  call void @llvm.dbg.value(metadata i32 %0, metadata !11619, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11634
  call void @llvm.dbg.value(metadata i32 1000, metadata !11622, metadata !DIExpression()), !dbg !11634
  call void @llvm.dbg.value(metadata i32 10000, metadata !11623, metadata !DIExpression()), !dbg !11634
  call void @llvm.dbg.value(metadata i8 1, metadata !11624, metadata !DIExpression()), !dbg !11634
  call void @llvm.dbg.value(metadata i1 true, metadata !11625, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11634
  call void @llvm.dbg.value(metadata i1 true, metadata !11626, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11634
  call void @llvm.dbg.value(metadata i8 0, metadata !11627, metadata !DIExpression()), !dbg !11634
  call void @llvm.dbg.value(metadata i1 true, metadata !11628, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11634
  call void @llvm.dbg.value(metadata i1 false, metadata !11629, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11634
  call void @llvm.dbg.value(metadata i64 0, metadata !11630, metadata !DIExpression()), !dbg !11634
  call void @llvm.dbg.value(metadata i64 0, metadata !11630, metadata !DIExpression()), !dbg !11634
  %2 = mul i32 %0, 10, !dbg !11636
  ret i32 %2, !dbg !11642
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !11643 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11645, metadata !DIExpression()), !dbg !11647
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11572, metadata !DIExpression()) #23, !dbg !11648
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11650, !srcloc !11587
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !11650
  call void @llvm.dbg.value(metadata i32 %3, metadata !11584, metadata !DIExpression()) #23, !dbg !11652
  call void @llvm.dbg.value(metadata i32 undef, metadata !11585, metadata !DIExpression()) #23, !dbg !11652
  call void @llvm.dbg.value(metadata i32 %3, metadata !11578, metadata !DIExpression()) #23, !dbg !11648
  call void @llvm.dbg.value(metadata i32 %3, metadata !11646, metadata !DIExpression()), !dbg !11647
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !11653
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11655
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !11656
  br i1 %6, label %7, label %8, !dbg !11657

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !11658
  call void @llvm.dbg.value(metadata i32 %3, metadata !11599, metadata !DIExpression()) #23, !dbg !11660
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11604, metadata !DIExpression()) #23, !dbg !11660
  call void @llvm.dbg.value(metadata i32 %3, metadata !11607, metadata !DIExpression()) #23, !dbg !11662
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !11664, !srcloc !11613
  br label %24, !dbg !11665

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !11666
  %9 = tail call fastcc i32 @slice_time() #25, !dbg !11667
  %10 = icmp eq i32 %9, 0, !dbg !11667
  br i1 %10, label %21, label %11, !dbg !11669

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #25, !dbg !11670
  br i1 %12, label %13, label %21, !dbg !11671

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11672
  %15 = icmp sgt i32 %14, %0, !dbg !11675
  br i1 %15, label %19, label %16, !dbg !11676

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !11677
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #25, !dbg !11677
  call void @llvm.dbg.value(metadata i32 %18, metadata !11646, metadata !DIExpression()), !dbg !11647
  br label %22, !dbg !11679

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !11680
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11680
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11682
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !11647
  call void @llvm.dbg.value(metadata i32 %23, metadata !11646, metadata !DIExpression()), !dbg !11647
  call void @llvm.dbg.value(metadata i32 %23, metadata !11599, metadata !DIExpression()) #23, !dbg !11684
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11604, metadata !DIExpression()) #23, !dbg !11684
  call void @llvm.dbg.value(metadata i32 %23, metadata !11607, metadata !DIExpression()) #23, !dbg !11686
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !11688, !srcloc !11613
  br label %24, !dbg !11689

24:                                               ; preds = %22, %7
  ret void, !dbg !11689
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !11690 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11694, metadata !DIExpression()), !dbg !11696
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #25, !dbg !11697
  %3 = icmp eq i32 %2, 0, !dbg !11697
  br i1 %3, label %16, label %4, !dbg !11698

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !11699
  br i1 %5, label %16, label %6, !dbg !11700

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !11701
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !11701
  %9 = load i8, i8* %8, align 2, !dbg !11701
  %10 = sext i8 %9 to i32, !dbg !11702
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !11703
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #25, !dbg !11704
  br i1 %12, label %16, label %13, !dbg !11705

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #25, !dbg !11706
  %15 = xor i1 %14, true, !dbg !11707
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !11696
  call void @llvm.dbg.value(metadata i1 %17, metadata !11695, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11696
  ret i1 %17, !dbg !11708
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !11709 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !11713, metadata !DIExpression()), !dbg !11715
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11716
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11714, metadata !DIExpression()), !dbg !11715
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #25, !dbg !11717
  br i1 %3, label %5, label %4, !dbg !11719

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #25, !dbg !11720
  br label %5, !dbg !11722

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !11713, metadata !DIExpression()), !dbg !11715
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !11723
  ret i32 %6, !dbg !11724
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !11725 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11727, metadata !DIExpression()), !dbg !11729
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11730
  %3 = load i8, i8* %2, align 1, !dbg !11730
  call void @llvm.dbg.value(metadata i8 %3, metadata !11728, metadata !DIExpression()), !dbg !11729
  %4 = and i8 %3, 31, !dbg !11731
  %5 = icmp ne i8 %4, 0, !dbg !11732
  ret i1 %5, !dbg !11733
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11734 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11736, metadata !DIExpression()), !dbg !11737
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !11738
  br i1 %2, label %3, label %7, !dbg !11740

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11741, metadata !DIExpression()) #23, !dbg !11744
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11747
  %5 = load i8, i8* %4, align 1, !dbg !11748
  %6 = and i8 %5, 127, !dbg !11748
  store i8 %6, i8* %4, align 1, !dbg !11748
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11749, metadata !DIExpression()) #23, !dbg !11752
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !11756
  br label %7, !dbg !11757

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11758, metadata !DIExpression()) #23, !dbg !11761
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11763
  %9 = load i8, i8* %8, align 1, !dbg !11764
  %10 = or i8 %9, -128, !dbg !11764
  store i8 %10, i8* %8, align 1, !dbg !11764
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11765, metadata !DIExpression()) #23, !dbg !11768
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !11772, metadata !DIExpression()) #23, !dbg !11780
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11778, metadata !DIExpression()) #23, !dbg !11780
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !11782
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !11779, metadata !DIExpression()) #23, !dbg !11780
  %12 = icmp eq %struct._dnode* %11, null, !dbg !11784
  br i1 %12, label %23, label %13, !dbg !11782

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !11779, metadata !DIExpression()) #23, !dbg !11780
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !11786
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !11779, metadata !DIExpression()) #23, !dbg !11780
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #24, !dbg !11787
  %17 = icmp sgt i32 %16, 0, !dbg !11790
  br i1 %17, label %18, label %20, !dbg !11791

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !11792
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #24, !dbg !11794
  br label %25, !dbg !11795

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #24, !dbg !11784
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !11779, metadata !DIExpression()) #23, !dbg !11780
  %22 = icmp eq %struct._dnode* %21, null, !dbg !11784
  br i1 %22, label %23, label %13, !dbg !11782, !llvm.loop !11796

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !11798
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #24, !dbg !11799
  br label %25, !dbg !11800

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11801
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !11802
  %28 = zext i1 %27 to i32, !dbg !11802
  tail call fastcc void @update_cache(i32 noundef %28) #25, !dbg !11803
  ret void, !dbg !11804
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !11805 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11807, metadata !DIExpression()), !dbg !11808
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #25, !dbg !11809
  ret i1 %2, !dbg !11810
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #7 !dbg !11811 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !11813, metadata !DIExpression()), !dbg !11815
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !11814, metadata !DIExpression()), !dbg !11815
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !11816
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #25, !dbg !11817
  ret void, !dbg !11818
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !11819 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11823, metadata !DIExpression()), !dbg !11824
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #25, !dbg !11825
  br i1 %2, label %6, label %3, !dbg !11825

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11826
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !11826
  br label %6, !dbg !11825

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !11825
  ret %struct._dnode* %7, !dbg !11827
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !11828 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11832, metadata !DIExpression()), !dbg !11836
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !11833, metadata !DIExpression()), !dbg !11836
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11837
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !11837
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !11834, metadata !DIExpression()), !dbg !11836
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !11838
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !11839
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !11840
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !11841
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !11842
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !11843
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !11844
  ret void, !dbg !11845
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #4 !dbg !11846 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11850, metadata !DIExpression()), !dbg !11852
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !11851, metadata !DIExpression()), !dbg !11852
  %3 = icmp eq %struct._dnode* %1, null, !dbg !11853
  br i1 %3, label %6, label %4, !dbg !11854

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #25, !dbg !11855
  br label %6, !dbg !11854

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !11854
  ret %struct._dnode* %7, !dbg !11856
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !11857 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11861, metadata !DIExpression()), !dbg !11864
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !11862, metadata !DIExpression()), !dbg !11864
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11865
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !11865
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !11863, metadata !DIExpression()), !dbg !11864
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !11866
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !11867
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !11868
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !11869
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !11870
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !11871
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !11872
  ret void, !dbg !11873
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !11874 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11876, metadata !DIExpression()), !dbg !11878
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !11879
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11886, metadata !DIExpression()) #23, !dbg !11888
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !11889
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !11890
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !11890
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !11877, metadata !DIExpression()), !dbg !11878
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !11891, metadata !DIExpression()) #23, !dbg !11897
  call void @llvm.dbg.value(metadata i32 %0, metadata !11896, metadata !DIExpression()) #23, !dbg !11897
  %6 = icmp eq i32 %0, 0, !dbg !11900
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11902
  br i1 %6, label %8, label %15, !dbg !11903

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #24, !dbg !11904
  br i1 %9, label %15, label %10, !dbg !11906

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #24, !dbg !11907
  br i1 %11, label %15, label %12, !dbg !11909

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #24, !dbg !11910
  %14 = icmp eq i32 %13, 0, !dbg !11910
  br i1 %14, label %18, label %15, !dbg !11912

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !11913
  br i1 %16, label %18, label %17, !dbg !11916

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !11917
  br label %18, !dbg !11919

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !11902
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !11902
  ret void, !dbg !11920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #4 !dbg !11921 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11925, metadata !DIExpression()), !dbg !11928
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !11926, metadata !DIExpression()), !dbg !11928
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #25, !dbg !11929
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !11927, metadata !DIExpression()), !dbg !11928
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !11926, metadata !DIExpression()), !dbg !11928
  ret %struct.k_thread* %3, !dbg !11930
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !11931 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11933, metadata !DIExpression()), !dbg !11934
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !11935
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !11936
  %4 = xor i1 %3, true, !dbg !11937
  ret i1 %4, !dbg !11938
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !11939 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11941, metadata !DIExpression()), !dbg !11942
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !11943
  %3 = load i16, i16* %2, align 2, !dbg !11943
  %4 = icmp ult i16 %3, 128, !dbg !11944
  %5 = zext i1 %4 to i32, !dbg !11944
  ret i32 %5, !dbg !11945
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #4 !dbg !11946 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11952, metadata !DIExpression()), !dbg !11953
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !11954
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #25, !dbg !11955
  %4 = xor i1 %3, true, !dbg !11956
  ret i1 %4, !dbg !11957
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !11958 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11964, metadata !DIExpression()), !dbg !11965
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11966
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !11966
  %4 = icmp ne %struct._dnode* %3, null, !dbg !11967
  ret i1 %4, !dbg !11968
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #4 !dbg !11969 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11971, metadata !DIExpression()), !dbg !11973
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !11972, metadata !DIExpression()), !dbg !11973
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11974
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !11974
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !11975
  br i1 %5, label %9, label %6, !dbg !11976

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !11977
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !11977
  br label %9, !dbg !11976

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !11976
  ret %struct._dnode* %10, !dbg !11978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !11979 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11983, metadata !DIExpression()), !dbg !11984
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11985
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !11985
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !11986
  ret i1 %4, !dbg !11987
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !11988 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11992, metadata !DIExpression()), !dbg !11995
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11996
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !11996
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !11993, metadata !DIExpression()), !dbg !11995
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11997
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !11997
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !11994, metadata !DIExpression()), !dbg !11995
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !11998
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !11999
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !12000
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !12001
  tail call fastcc void @sys_dnode_init.125(%struct._dnode* noundef %0) #25, !dbg !12002
  ret void, !dbg !12003
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.125(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !12004 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12006, metadata !DIExpression()), !dbg !12007
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12008
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12009
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12010
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12011
  ret void, !dbg !12012
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12013 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12017, metadata !DIExpression()), !dbg !12019
  call void @llvm.dbg.value(metadata i32 128, metadata !12018, metadata !DIExpression()), !dbg !12019
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12020
  %3 = load i8, i8* %2, align 1, !dbg !12020
  %4 = icmp slt i8 %3, 0, !dbg !12021
  ret i1 %4, !dbg !12022
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !12023 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12027, metadata !DIExpression()), !dbg !12029
  call void @llvm.dbg.value(metadata i32 %1, metadata !12028, metadata !DIExpression()), !dbg !12029
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #25, !dbg !12030
  ret i1 %3, !dbg !12031
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #12 !dbg !12032 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12034, metadata !DIExpression()), !dbg !12035
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !12036
  ret i1 %2, !dbg !12037
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !12038 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12040, metadata !DIExpression()), !dbg !12042
  call void @llvm.dbg.value(metadata i32 %1, metadata !12041, metadata !DIExpression()), !dbg !12042
  %3 = icmp slt i32 %0, %1, !dbg !12043
  ret i1 %3, !dbg !12044
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12045 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12047, metadata !DIExpression()), !dbg !12051
  call void @llvm.dbg.value(metadata i32 0, metadata !12048, metadata !DIExpression()), !dbg !12052
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11572, metadata !DIExpression()) #23, !dbg !12053
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12055, !srcloc !11587
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12055
  call void @llvm.dbg.value(metadata i32 %3, metadata !11584, metadata !DIExpression()) #23, !dbg !12057
  call void @llvm.dbg.value(metadata i32 undef, metadata !11585, metadata !DIExpression()) #23, !dbg !12057
  call void @llvm.dbg.value(metadata i32 %3, metadata !11578, metadata !DIExpression()) #23, !dbg !12053
  call void @llvm.dbg.value(metadata i32 %3, metadata !12050, metadata !DIExpression()), !dbg !12052
  call void @llvm.dbg.value(metadata i32 undef, metadata !12048, metadata !DIExpression()), !dbg !12052
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !12058
  call void @llvm.dbg.value(metadata i32 %3, metadata !11599, metadata !DIExpression()) #23, !dbg !12063
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11604, metadata !DIExpression()) #23, !dbg !12063
  call void @llvm.dbg.value(metadata i32 %3, metadata !11607, metadata !DIExpression()) #23, !dbg !12065
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12067, !srcloc !11613
  call void @llvm.dbg.value(metadata i32 1, metadata !12048, metadata !DIExpression()), !dbg !12052
  call void @llvm.dbg.value(metadata i32 undef, metadata !12048, metadata !DIExpression()), !dbg !12052
  ret void, !dbg !12068
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12069 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12071, metadata !DIExpression()), !dbg !12072
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !12073
  br i1 %2, label %24, label %3, !dbg !12075

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !12076
  br i1 %4, label %5, label %24, !dbg !12077

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11758, metadata !DIExpression()) #23, !dbg !12078
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12081
  %7 = load i8, i8* %6, align 1, !dbg !12082
  %8 = or i8 %7, -128, !dbg !12082
  store i8 %8, i8* %6, align 1, !dbg !12082
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11765, metadata !DIExpression()) #23, !dbg !12083
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !11772, metadata !DIExpression()) #23, !dbg !12085
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11778, metadata !DIExpression()) #23, !dbg !12085
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !12087
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !11779, metadata !DIExpression()) #23, !dbg !12085
  %10 = icmp eq %struct._dnode* %9, null, !dbg !12088
  br i1 %10, label %21, label %11, !dbg !12087

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !11779, metadata !DIExpression()) #23, !dbg !12085
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !12089
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !11779, metadata !DIExpression()) #23, !dbg !12085
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #24, !dbg !12090
  %15 = icmp sgt i32 %14, 0, !dbg !12091
  br i1 %15, label %16, label %18, !dbg !12092

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12093
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #24, !dbg !12094
  br label %23, !dbg !12095

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #24, !dbg !12088
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !11779, metadata !DIExpression()) #23, !dbg !12085
  %20 = icmp eq %struct._dnode* %19, null, !dbg !12088
  br i1 %20, label %21, label %11, !dbg !12087, !llvm.loop !12096

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12098
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #24, !dbg !12099
  br label %23, !dbg !12100

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !12101
  br label %24, !dbg !12102

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !12103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12104 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12106, metadata !DIExpression()), !dbg !12107
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !12108
  br i1 %2, label %6, label %3, !dbg !12109

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #25, !dbg !12110
  %5 = xor i1 %4, true, !dbg !12109
  br label %6, !dbg !12109

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !12111
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12112 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12114, metadata !DIExpression()), !dbg !12118
  call void @llvm.dbg.value(metadata i32 0, metadata !12115, metadata !DIExpression()), !dbg !12119
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11572, metadata !DIExpression()) #23, !dbg !12120
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12122, !srcloc !11587
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12122
  call void @llvm.dbg.value(metadata i32 %3, metadata !11584, metadata !DIExpression()) #23, !dbg !12124
  call void @llvm.dbg.value(metadata i32 undef, metadata !11585, metadata !DIExpression()) #23, !dbg !12124
  call void @llvm.dbg.value(metadata i32 %3, metadata !11578, metadata !DIExpression()) #23, !dbg !12120
  call void @llvm.dbg.value(metadata i32 %3, metadata !12117, metadata !DIExpression()), !dbg !12119
  call void @llvm.dbg.value(metadata i32 undef, metadata !12115, metadata !DIExpression()), !dbg !12119
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #25, !dbg !12125
  call void @llvm.dbg.value(metadata i32 %3, metadata !11599, metadata !DIExpression()) #23, !dbg !12128
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11604, metadata !DIExpression()) #23, !dbg !12128
  call void @llvm.dbg.value(metadata i32 %3, metadata !11607, metadata !DIExpression()) #23, !dbg !12130
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12132, !srcloc !11613
  call void @llvm.dbg.value(metadata i32 1, metadata !12115, metadata !DIExpression()), !dbg !12119
  call void @llvm.dbg.value(metadata i32 undef, metadata !12115, metadata !DIExpression()), !dbg !12119
  ret void, !dbg !12133
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12134 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12136, metadata !DIExpression()), !dbg !12138
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11572, metadata !DIExpression()) #23, !dbg !12139
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12141, !srcloc !11587
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12141
  call void @llvm.dbg.value(metadata i32 %3, metadata !11584, metadata !DIExpression()) #23, !dbg !12143
  call void @llvm.dbg.value(metadata i32 undef, metadata !11585, metadata !DIExpression()) #23, !dbg !12143
  call void @llvm.dbg.value(metadata i32 %3, metadata !11578, metadata !DIExpression()) #23, !dbg !12139
  call void @llvm.dbg.value(metadata i32 %3, metadata !12137, metadata !DIExpression()), !dbg !12138
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #25, !dbg !12144
  br i1 %4, label %5, label %6, !dbg !12146

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !11599, metadata !DIExpression()) #23, !dbg !12147
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11604, metadata !DIExpression()) #23, !dbg !12147
  call void @llvm.dbg.value(metadata i32 %3, metadata !11607, metadata !DIExpression()) #23, !dbg !12150
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12152, !srcloc !11613
  br label %8, !dbg !12153

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.130(%struct.k_thread* noundef %0) #25, !dbg !12154
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !12155
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12156
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #25, !dbg !12156
  br label %8, !dbg !12157

8:                                                ; preds = %6, %5
  ret void, !dbg !12157
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12158 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12160, metadata !DIExpression()), !dbg !12161
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12162
  %3 = load i8, i8* %2, align 1, !dbg !12162
  %4 = and i8 %3, 4, !dbg !12163
  %5 = icmp eq i8 %4, 0, !dbg !12164
  ret i1 %5, !dbg !12165
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.130(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12166 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12168, metadata !DIExpression()), !dbg !12169
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12170
  %3 = load i8, i8* %2, align 1, !dbg !12171
  %4 = and i8 %3, -5, !dbg !12171
  store i8 %4, i8* %2, align 1, !dbg !12171
  ret void, !dbg !12172
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !12173 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !12176, metadata !DIExpression()), !dbg !12177
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12175, metadata !DIExpression()), !dbg !12177
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #25, !dbg !12178
  br i1 %4, label %5, label %9, !dbg !12180

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #25, !dbg !12181
  br i1 %6, label %7, label %9, !dbg !12182

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !12183, metadata !DIExpression()) #23, !dbg !12189
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12188, metadata !DIExpression()) #23, !dbg !12189
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !12192
  br label %10, !dbg !12193

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !11599, metadata !DIExpression()) #23, !dbg !12194
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11604, metadata !DIExpression()) #23, !dbg !12194
  call void @llvm.dbg.value(metadata i32 %3, metadata !11607, metadata !DIExpression()) #23, !dbg !12197
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12199, !srcloc !11613
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !12200
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !12201 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12205, metadata !DIExpression()), !dbg !12206
  call void @llvm.dbg.value(metadata i32 %0, metadata !12207, metadata !DIExpression()), !dbg !12212
  %2 = icmp eq i32 %0, 0, !dbg !12214
  br i1 %2, label %3, label %6, !dbg !12215

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !12216, !srcloc !12223
  call void @llvm.dbg.value(metadata i32 %4, metadata !12219, metadata !DIExpression()) #23, !dbg !12224
  %5 = icmp eq i32 %4, 0, !dbg !12225
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !12206
  ret i1 %7, !dbg !12226
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #4 !dbg !12227 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12230
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12229, metadata !DIExpression()), !dbg !12231
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12232
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !12233
  ret i1 %3, !dbg !12234
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !12235 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12237, metadata !DIExpression()), !dbg !12239
  %2 = tail call i32 @arch_swap(i32 noundef %0) #24, !dbg !12240
  call void @llvm.dbg.value(metadata i32 %2, metadata !12238, metadata !DIExpression()), !dbg !12239
  ret i32 %2, !dbg !12241
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12242 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12244, metadata !DIExpression()), !dbg !12248
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !12249
  call void @llvm.dbg.value(metadata i32 0, metadata !12245, metadata !DIExpression()), !dbg !12250
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11572, metadata !DIExpression()) #23, !dbg !12251
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12253, !srcloc !11587
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12253
  call void @llvm.dbg.value(metadata i32 %4, metadata !11584, metadata !DIExpression()) #23, !dbg !12255
  call void @llvm.dbg.value(metadata i32 undef, metadata !11585, metadata !DIExpression()) #23, !dbg !12255
  call void @llvm.dbg.value(metadata i32 %4, metadata !11578, metadata !DIExpression()) #23, !dbg !12251
  call void @llvm.dbg.value(metadata i32 %4, metadata !12247, metadata !DIExpression()), !dbg !12250
  call void @llvm.dbg.value(metadata i32 undef, metadata !12245, metadata !DIExpression()), !dbg !12250
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !12256
  br i1 %5, label %6, label %10, !dbg !12260

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11741, metadata !DIExpression()) #23, !dbg !12261
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12264
  %8 = load i8, i8* %7, align 1, !dbg !12265
  %9 = and i8 %8, 127, !dbg !12265
  store i8 %9, i8* %7, align 1, !dbg !12265
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11749, metadata !DIExpression()) #23, !dbg !12266
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !12268
  br label %10, !dbg !12269

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #25, !dbg !12270
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12271
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !12272
  %13 = zext i1 %12 to i32, !dbg !12272
  tail call fastcc void @update_cache(i32 noundef %13) #25, !dbg !12273
  call void @llvm.dbg.value(metadata i32 %4, metadata !11599, metadata !DIExpression()) #23, !dbg !12274
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11604, metadata !DIExpression()) #23, !dbg !12274
  call void @llvm.dbg.value(metadata i32 %4, metadata !11607, metadata !DIExpression()) #23, !dbg !12276
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12278, !srcloc !11613
  call void @llvm.dbg.value(metadata i32 1, metadata !12245, metadata !DIExpression()), !dbg !12250
  call void @llvm.dbg.value(metadata i32 undef, metadata !12245, metadata !DIExpression()), !dbg !12250
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12279
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !12281
  br i1 %15, label %16, label %17, !dbg !12282

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !12283
  br label %17, !dbg !12285

17:                                               ; preds = %16, %10
  ret void, !dbg !12286
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12287 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12289, metadata !DIExpression()), !dbg !12290
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12291
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !12292
  ret i32 %3, !dbg !12293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12294 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12296, metadata !DIExpression()), !dbg !12297
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12298
  %3 = load i8, i8* %2, align 1, !dbg !12299
  %4 = or i8 %3, 16, !dbg !12299
  store i8 %4, i8* %2, align 1, !dbg !12299
  ret void, !dbg !12300
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !12301 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12302, !srcloc !11587
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12302
  call void @llvm.dbg.value(metadata i32 %2, metadata !11584, metadata !DIExpression()) #23, !dbg !12304
  call void @llvm.dbg.value(metadata i32 undef, metadata !11585, metadata !DIExpression()) #23, !dbg !12304
  tail call void @z_reschedule_irqlock(i32 noundef %2) #25, !dbg !12305
  ret void, !dbg !12306
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !12307 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12309, metadata !DIExpression()), !dbg !12310
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #25, !dbg !12311
  br i1 %2, label %3, label %5, !dbg !12313

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !12314
  br label %6, !dbg !12316

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !11607, metadata !DIExpression()) #23, !dbg !12317
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !12320, !srcloc !11613
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !12321
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12322 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12324, metadata !DIExpression()), !dbg !12326
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11572, metadata !DIExpression()) #23, !dbg !12327
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12329, !srcloc !11587
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12329
  call void @llvm.dbg.value(metadata i32 %3, metadata !11584, metadata !DIExpression()) #23, !dbg !12331
  call void @llvm.dbg.value(metadata i32 undef, metadata !11585, metadata !DIExpression()) #23, !dbg !12331
  call void @llvm.dbg.value(metadata i32 %3, metadata !11578, metadata !DIExpression()) #23, !dbg !12327
  call void @llvm.dbg.value(metadata i32 %3, metadata !12325, metadata !DIExpression()), !dbg !12326
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #25, !dbg !12332
  br i1 %4, label %6, label %5, !dbg !12334

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !11599, metadata !DIExpression()) #23, !dbg !12335
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11604, metadata !DIExpression()) #23, !dbg !12335
  call void @llvm.dbg.value(metadata i32 %3, metadata !11607, metadata !DIExpression()) #23, !dbg !12338
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12340, !srcloc !11613
  br label %8, !dbg !12341

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !12342
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !12343
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12344
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #25, !dbg !12344
  br label %8, !dbg !12345

8:                                                ; preds = %6, %5
  ret void, !dbg !12345
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12346 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12348, metadata !DIExpression()), !dbg !12349
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12350
  %3 = load i8, i8* %2, align 1, !dbg !12350
  %4 = and i8 %3, 16, !dbg !12351
  %5 = icmp ne i8 %4, 0, !dbg !12352
  ret i1 %5, !dbg !12353
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12354 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12356, metadata !DIExpression()), !dbg !12357
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12358
  %3 = load i8, i8* %2, align 1, !dbg !12359
  %4 = and i8 %3, -17, !dbg !12359
  store i8 %4, i8* %2, align 1, !dbg !12359
  ret void, !dbg !12360
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !12361 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12371, metadata !DIExpression()), !dbg !12375
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12369, metadata !DIExpression()), !dbg !12375
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12370, metadata !DIExpression()), !dbg !12375
  call void @llvm.dbg.value(metadata i32 0, metadata !12372, metadata !DIExpression()), !dbg !12376
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11572, metadata !DIExpression()) #23, !dbg !12377
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12379, !srcloc !11587
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !12379
  call void @llvm.dbg.value(metadata i32 %5, metadata !11584, metadata !DIExpression()) #23, !dbg !12381
  call void @llvm.dbg.value(metadata i32 undef, metadata !11585, metadata !DIExpression()) #23, !dbg !12381
  call void @llvm.dbg.value(metadata i32 %5, metadata !11578, metadata !DIExpression()) #23, !dbg !12377
  call void @llvm.dbg.value(metadata i32 %5, metadata !12374, metadata !DIExpression()), !dbg !12376
  call void @llvm.dbg.value(metadata i32 undef, metadata !12372, metadata !DIExpression()), !dbg !12376
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !12382
  call void @llvm.dbg.value(metadata i32 %5, metadata !11599, metadata !DIExpression()) #23, !dbg !12385
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11604, metadata !DIExpression()) #23, !dbg !12385
  call void @llvm.dbg.value(metadata i32 %5, metadata !11607, metadata !DIExpression()) #23, !dbg !12387
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !12389, !srcloc !11613
  call void @llvm.dbg.value(metadata i32 1, metadata !12372, metadata !DIExpression()), !dbg !12376
  call void @llvm.dbg.value(metadata i32 undef, metadata !12372, metadata !DIExpression()), !dbg !12376
  ret void, !dbg !12390
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !12391 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12395, metadata !DIExpression()), !dbg !12396
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12393, metadata !DIExpression()), !dbg !12396
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12394, metadata !DIExpression()), !dbg !12396
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #25, !dbg !12397
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #25, !dbg !12398
  ret void, !dbg !12399
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !12400 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12404, metadata !DIExpression()), !dbg !12406
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12405, metadata !DIExpression()), !dbg !12406
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #25, !dbg !12407
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #25, !dbg !12408
  %3 = icmp eq %union.anon* %1, null, !dbg !12409
  br i1 %3, label %21, label %4, !dbg !12411

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !12412
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !12414
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !12415
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !11772, metadata !DIExpression()) #23, !dbg !12416
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11778, metadata !DIExpression()) #23, !dbg !12416
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #24, !dbg !12418
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !11779, metadata !DIExpression()) #23, !dbg !12416
  %8 = icmp eq %struct._dnode* %7, null, !dbg !12419
  br i1 %8, label %19, label %9, !dbg !12418

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !11779, metadata !DIExpression()) #23, !dbg !12416
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !12420
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !11779, metadata !DIExpression()) #23, !dbg !12416
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #24, !dbg !12421
  %13 = icmp sgt i32 %12, 0, !dbg !12422
  br i1 %13, label %14, label %16, !dbg !12423

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12424
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #24, !dbg !12425
  br label %21, !dbg !12426

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #24, !dbg !12419
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !11779, metadata !DIExpression()) #23, !dbg !12416
  %18 = icmp eq %struct._dnode* %17, null, !dbg !12419
  br i1 %18, label %19, label %9, !dbg !12418, !llvm.loop !12427

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12429
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #24, !dbg !12430
  br label %21, !dbg !12431

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !12432
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12433 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12438, metadata !DIExpression()), !dbg !12439
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12437, metadata !DIExpression()), !dbg !12439
  %4 = icmp eq i64 %3, -1, !dbg !12440
  br i1 %4, label %6, label %5, !dbg !12442

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.131(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !12443
  br label %6, !dbg !12445

6:                                                ; preds = %5, %2
  ret void, !dbg !12446
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.131(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12447 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12450, metadata !DIExpression()), !dbg !12451
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12449, metadata !DIExpression()), !dbg !12451
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12452
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !12453
  ret void, !dbg !12454
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !12455 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12457, metadata !DIExpression()), !dbg !12465
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !12466
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !12466
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12458, metadata !DIExpression()), !dbg !12465
  call void @llvm.dbg.value(metadata i32 0, metadata !12459, metadata !DIExpression()), !dbg !12467
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11572, metadata !DIExpression()) #23, !dbg !12468
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12470, !srcloc !11587
  call void @llvm.dbg.value(metadata i32 undef, metadata !11584, metadata !DIExpression()) #23, !dbg !12472
  call void @llvm.dbg.value(metadata i32 undef, metadata !11585, metadata !DIExpression()) #23, !dbg !12472
  call void @llvm.dbg.value(metadata i32 undef, metadata !11578, metadata !DIExpression()) #23, !dbg !12468
  call void @llvm.dbg.value(metadata i32 undef, metadata !12461, metadata !DIExpression()), !dbg !12467
  call void @llvm.dbg.value(metadata i32 undef, metadata !12459, metadata !DIExpression()), !dbg !12467
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !12473
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !12474
  %7 = load i8, i8* %6, align 1, !dbg !12474
  %8 = and i8 %7, 40, !dbg !12475
  %9 = icmp eq i8 %8, 0, !dbg !12475
  call void @llvm.dbg.value(metadata i1 %9, metadata !12462, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12476
  br i1 %9, label %10, label %17, !dbg !12477

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !12478
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !12478
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !12478
  %14 = icmp eq %union.anon* %13, null, !dbg !12482
  br i1 %14, label %16, label %15, !dbg !12483

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #25, !dbg !12484
  br label %16, !dbg !12486

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.130(%struct.k_thread* noundef nonnull %3) #25, !dbg !12487
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #25, !dbg !12488
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #25, !dbg !12489
  br label %17, !dbg !12490

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !12470
  call void @llvm.dbg.value(metadata i32 %18, metadata !11584, metadata !DIExpression()) #23, !dbg !12472
  call void @llvm.dbg.value(metadata i32 %18, metadata !11578, metadata !DIExpression()) #23, !dbg !12468
  call void @llvm.dbg.value(metadata i32 %18, metadata !12461, metadata !DIExpression()), !dbg !12467
  call void @llvm.dbg.value(metadata i32 undef, metadata !11599, metadata !DIExpression()) #23, !dbg !12491
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11604, metadata !DIExpression()) #23, !dbg !12491
  call void @llvm.dbg.value(metadata i32 undef, metadata !11607, metadata !DIExpression()) #23, !dbg !12493
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !12495, !srcloc !11613
  call void @llvm.dbg.value(metadata i32 1, metadata !12459, metadata !DIExpression()), !dbg !12467
  call void @llvm.dbg.value(metadata i32 undef, metadata !12459, metadata !DIExpression()), !dbg !12467
  ret void, !dbg !12496
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12497 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12499, metadata !DIExpression()), !dbg !12500
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !12501
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #25, !dbg !12502
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !12503
  store %union.anon* null, %union.anon** %2, align 8, !dbg !12504
  ret void, !dbg !12505
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12506 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12508, metadata !DIExpression()), !dbg !12509
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12510
  %3 = load i8, i8* %2, align 1, !dbg !12511
  %4 = and i8 %3, -3, !dbg !12511
  store i8 %4, i8* %2, align 1, !dbg !12511
  ret void, !dbg !12512
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12513 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12515, metadata !DIExpression()), !dbg !12516
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !12517
  br i1 %2, label %3, label %7, !dbg !12519

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11741, metadata !DIExpression()) #23, !dbg !12520
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12523
  %5 = load i8, i8* %4, align 1, !dbg !12524
  %6 = and i8 %5, 127, !dbg !12524
  store i8 %6, i8* %4, align 1, !dbg !12524
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11749, metadata !DIExpression()) #23, !dbg !12525
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !12527
  br label %7, !dbg !12528

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12529
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !12530
  %10 = zext i1 %9 to i32, !dbg !12530
  tail call fastcc void @update_cache(i32 noundef %10) #25, !dbg !12531
  ret void, !dbg !12532
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12533 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12535, metadata !DIExpression()), !dbg !12536
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12537
  %3 = load i8, i8* %2, align 1, !dbg !12538
  %4 = or i8 %3, 2, !dbg !12538
  store i8 %4, i8* %2, align 1, !dbg !12538
  ret void, !dbg !12539
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #22 !dbg !12540 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12542, metadata !DIExpression()), !dbg !12546
  call void @llvm.dbg.value(metadata i32 0, metadata !12543, metadata !DIExpression()), !dbg !12547
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11572, metadata !DIExpression()) #23, !dbg !12548
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12550, !srcloc !11587
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12550
  call void @llvm.dbg.value(metadata i32 %3, metadata !11584, metadata !DIExpression()) #23, !dbg !12552
  call void @llvm.dbg.value(metadata i32 undef, metadata !11585, metadata !DIExpression()) #23, !dbg !12552
  call void @llvm.dbg.value(metadata i32 %3, metadata !11578, metadata !DIExpression()) #23, !dbg !12548
  call void @llvm.dbg.value(metadata i32 %3, metadata !12545, metadata !DIExpression()), !dbg !12547
  call void @llvm.dbg.value(metadata i32 undef, metadata !12543, metadata !DIExpression()), !dbg !12547
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !12553
  call void @llvm.dbg.value(metadata i32 %3, metadata !11599, metadata !DIExpression()) #23, !dbg !12556
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11604, metadata !DIExpression()) #23, !dbg !12556
  call void @llvm.dbg.value(metadata i32 %3, metadata !11607, metadata !DIExpression()) #23, !dbg !12558
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12560, !srcloc !11613
  call void @llvm.dbg.value(metadata i32 1, metadata !12543, metadata !DIExpression()), !dbg !12547
  call void @llvm.dbg.value(metadata i32 undef, metadata !12543, metadata !DIExpression()), !dbg !12547
  ret void, !dbg !12561
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !12562 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12568, metadata !DIExpression()), !dbg !12573
  call void @llvm.dbg.value(metadata i32 %0, metadata !12566, metadata !DIExpression()), !dbg !12573
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12567, metadata !DIExpression()), !dbg !12573
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12574
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !12575
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12576
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !12577
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !12578
  call void @llvm.dbg.value(metadata i32 %6, metadata !12569, metadata !DIExpression()), !dbg !12573
  call void @llvm.dbg.value(metadata i32 0, metadata !12570, metadata !DIExpression()), !dbg !12579
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11572, metadata !DIExpression()) #23, !dbg !12580
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12582, !srcloc !11587
  call void @llvm.dbg.value(metadata i32 undef, metadata !11584, metadata !DIExpression()) #23, !dbg !12584
  call void @llvm.dbg.value(metadata i32 undef, metadata !11585, metadata !DIExpression()) #23, !dbg !12584
  call void @llvm.dbg.value(metadata i32 undef, metadata !11578, metadata !DIExpression()) #23, !dbg !12580
  call void @llvm.dbg.value(metadata i32 undef, metadata !12572, metadata !DIExpression()), !dbg !12579
  call void @llvm.dbg.value(metadata i32 undef, metadata !12570, metadata !DIExpression()), !dbg !12579
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !12585
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12589
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !12590
  br i1 %10, label %11, label %12, !dbg !12591

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !12592
  br label %12, !dbg !12594

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !12582
  call void @llvm.dbg.value(metadata i32 %13, metadata !11584, metadata !DIExpression()) #23, !dbg !12584
  call void @llvm.dbg.value(metadata i32 %13, metadata !11578, metadata !DIExpression()) #23, !dbg !12580
  call void @llvm.dbg.value(metadata i32 %13, metadata !12572, metadata !DIExpression()), !dbg !12579
  call void @llvm.dbg.value(metadata i32 undef, metadata !11599, metadata !DIExpression()) #23, !dbg !12595
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11604, metadata !DIExpression()) #23, !dbg !12595
  call void @llvm.dbg.value(metadata i32 undef, metadata !11607, metadata !DIExpression()) #23, !dbg !12597
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !12599, !srcloc !11613
  call void @llvm.dbg.value(metadata i32 1, metadata !12570, metadata !DIExpression()), !dbg !12579
  call void @llvm.dbg.value(metadata i32 undef, metadata !12570, metadata !DIExpression()), !dbg !12579
  ret i32 %6, !dbg !12600
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !12601 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12606, metadata !DIExpression()), !dbg !12609
  call void @llvm.dbg.value(metadata i64 undef, metadata !12608, metadata !DIExpression()), !dbg !12609
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12605, metadata !DIExpression()), !dbg !12609
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !12607, metadata !DIExpression()), !dbg !12609
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12610
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !12611
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11572, metadata !DIExpression()) #23, !dbg !12612
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12614, !srcloc !11587
  call void @llvm.dbg.value(metadata i32 undef, metadata !11584, metadata !DIExpression()) #23, !dbg !12616
  call void @llvm.dbg.value(metadata i32 undef, metadata !11585, metadata !DIExpression()) #23, !dbg !12616
  call void @llvm.dbg.value(metadata i32 undef, metadata !11578, metadata !DIExpression()) #23, !dbg !12612
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12617
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !12618
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !12183, metadata !DIExpression()) #23, !dbg !12619
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12188, metadata !DIExpression()) #23, !dbg !12619
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #24, !dbg !12621
  ret i32 %9, !dbg !12622
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !12623 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12627, metadata !DIExpression()), !dbg !12632
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12628, metadata !DIExpression()), !dbg !12632
  call void @llvm.dbg.value(metadata i32 0, metadata !12629, metadata !DIExpression()), !dbg !12633
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11572, metadata !DIExpression()) #23, !dbg !12634
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12636, !srcloc !11587
  call void @llvm.dbg.value(metadata i32 undef, metadata !11584, metadata !DIExpression()) #23, !dbg !12638
  call void @llvm.dbg.value(metadata i32 undef, metadata !11585, metadata !DIExpression()) #23, !dbg !12638
  call void @llvm.dbg.value(metadata i32 undef, metadata !11578, metadata !DIExpression()) #23, !dbg !12634
  call void @llvm.dbg.value(metadata i32 undef, metadata !12631, metadata !DIExpression()), !dbg !12633
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12628, metadata !DIExpression()), !dbg !12632
  call void @llvm.dbg.value(metadata i32 undef, metadata !12629, metadata !DIExpression()), !dbg !12633
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #25, !dbg !12639
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12628, metadata !DIExpression()), !dbg !12632
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !12642
  br i1 %5, label %7, label %6, !dbg !12644

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !12645
  br label %7, !dbg !12647

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !12636
  call void @llvm.dbg.value(metadata i32 %8, metadata !11584, metadata !DIExpression()) #23, !dbg !12638
  call void @llvm.dbg.value(metadata i32 %8, metadata !11578, metadata !DIExpression()) #23, !dbg !12634
  call void @llvm.dbg.value(metadata i32 %8, metadata !12631, metadata !DIExpression()), !dbg !12633
  call void @llvm.dbg.value(metadata i32 undef, metadata !11599, metadata !DIExpression()) #23, !dbg !12648
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11604, metadata !DIExpression()) #23, !dbg !12648
  call void @llvm.dbg.value(metadata i32 undef, metadata !11607, metadata !DIExpression()) #23, !dbg !12650
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !12652, !srcloc !11613
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12628, metadata !DIExpression()), !dbg !12632
  call void @llvm.dbg.value(metadata i32 undef, metadata !12629, metadata !DIExpression()), !dbg !12633
  ret %struct.k_thread* %4, !dbg !12653
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !12654 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12656, metadata !DIExpression()), !dbg !12661
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12657, metadata !DIExpression()), !dbg !12661
  call void @llvm.dbg.value(metadata i32 0, metadata !12658, metadata !DIExpression()), !dbg !12662
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11572, metadata !DIExpression()) #23, !dbg !12663
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12665, !srcloc !11587
  call void @llvm.dbg.value(metadata i32 undef, metadata !11584, metadata !DIExpression()) #23, !dbg !12667
  call void @llvm.dbg.value(metadata i32 undef, metadata !11585, metadata !DIExpression()) #23, !dbg !12667
  call void @llvm.dbg.value(metadata i32 undef, metadata !11578, metadata !DIExpression()) #23, !dbg !12663
  call void @llvm.dbg.value(metadata i32 undef, metadata !12660, metadata !DIExpression()), !dbg !12662
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12657, metadata !DIExpression()), !dbg !12661
  call void @llvm.dbg.value(metadata i32 undef, metadata !12658, metadata !DIExpression()), !dbg !12662
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #25, !dbg !12668
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12657, metadata !DIExpression()), !dbg !12661
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !12671
  br i1 %5, label %8, label %6, !dbg !12673

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !12674
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !12676
  br label %8, !dbg !12677

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !12665
  call void @llvm.dbg.value(metadata i32 %9, metadata !11584, metadata !DIExpression()) #23, !dbg !12667
  call void @llvm.dbg.value(metadata i32 %9, metadata !11578, metadata !DIExpression()) #23, !dbg !12663
  call void @llvm.dbg.value(metadata i32 %9, metadata !12660, metadata !DIExpression()), !dbg !12662
  call void @llvm.dbg.value(metadata i32 undef, metadata !11599, metadata !DIExpression()) #23, !dbg !12678
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11604, metadata !DIExpression()) #23, !dbg !12678
  call void @llvm.dbg.value(metadata i32 undef, metadata !11607, metadata !DIExpression()) #23, !dbg !12680
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !12682, !srcloc !11613
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12657, metadata !DIExpression()), !dbg !12661
  call void @llvm.dbg.value(metadata i32 undef, metadata !12658, metadata !DIExpression()), !dbg !12662
  ret %struct.k_thread* %4, !dbg !12683
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12684 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12686, metadata !DIExpression()), !dbg !12687
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12542, metadata !DIExpression()) #23, !dbg !12688
  call void @llvm.dbg.value(metadata i32 0, metadata !12543, metadata !DIExpression()) #23, !dbg !12690
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11572, metadata !DIExpression()) #23, !dbg !12691
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12693, !srcloc !11587
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12693
  call void @llvm.dbg.value(metadata i32 %3, metadata !11584, metadata !DIExpression()) #23, !dbg !12695
  call void @llvm.dbg.value(metadata i32 undef, metadata !11585, metadata !DIExpression()) #23, !dbg !12695
  call void @llvm.dbg.value(metadata i32 %3, metadata !11578, metadata !DIExpression()) #23, !dbg !12691
  call void @llvm.dbg.value(metadata i32 %3, metadata !12545, metadata !DIExpression()) #23, !dbg !12690
  call void @llvm.dbg.value(metadata i32 undef, metadata !12543, metadata !DIExpression()) #23, !dbg !12690
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !12696
  call void @llvm.dbg.value(metadata i32 %3, metadata !11599, metadata !DIExpression()) #23, !dbg !12697
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11604, metadata !DIExpression()) #23, !dbg !12697
  call void @llvm.dbg.value(metadata i32 %3, metadata !11607, metadata !DIExpression()) #23, !dbg !12699
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12701, !srcloc !11613
  call void @llvm.dbg.value(metadata i32 1, metadata !12543, metadata !DIExpression()) #23, !dbg !12690
  call void @llvm.dbg.value(metadata i32 undef, metadata !12543, metadata !DIExpression()) #23, !dbg !12690
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !12702
  ret void, !dbg !12703
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12704 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12706, metadata !DIExpression()), !dbg !12712
  call void @llvm.dbg.value(metadata i32 %1, metadata !12707, metadata !DIExpression()), !dbg !12712
  call void @llvm.dbg.value(metadata i8 0, metadata !12708, metadata !DIExpression()), !dbg !12712
  call void @llvm.dbg.value(metadata i32 0, metadata !12709, metadata !DIExpression()), !dbg !12713
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11572, metadata !DIExpression()) #23, !dbg !12714
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12716, !srcloc !11587
  call void @llvm.dbg.value(metadata i32 undef, metadata !11584, metadata !DIExpression()) #23, !dbg !12718
  call void @llvm.dbg.value(metadata i32 undef, metadata !11585, metadata !DIExpression()) #23, !dbg !12718
  call void @llvm.dbg.value(metadata i32 undef, metadata !11578, metadata !DIExpression()) #23, !dbg !12714
  call void @llvm.dbg.value(metadata i32 undef, metadata !12711, metadata !DIExpression()), !dbg !12713
  call void @llvm.dbg.value(metadata i8 poison, metadata !12708, metadata !DIExpression()), !dbg !12712
  call void @llvm.dbg.value(metadata i32 undef, metadata !12709, metadata !DIExpression()), !dbg !12713
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !12719
  call void @llvm.dbg.value(metadata i1 %6, metadata !12708, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12712
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !12722

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11741, metadata !DIExpression()) #23, !dbg !12723
  %11 = load i8, i8* %4, align 1, !dbg !12729
  %12 = and i8 %11, 127, !dbg !12729
  store i8 %12, i8* %4, align 1, !dbg !12729
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11749, metadata !DIExpression()) #23, !dbg !12730
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !12732
  store i8 %9, i8* %8, align 2, !dbg !12733
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11758, metadata !DIExpression()) #23, !dbg !12734
  %13 = load i8, i8* %4, align 1, !dbg !12736
  %14 = or i8 %13, -128, !dbg !12736
  store i8 %14, i8* %4, align 1, !dbg !12736
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11765, metadata !DIExpression()) #23, !dbg !12737
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !11772, metadata !DIExpression()) #23, !dbg !12739
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11778, metadata !DIExpression()) #23, !dbg !12739
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !12741
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !11779, metadata !DIExpression()) #23, !dbg !12739
  %16 = icmp eq %struct._dnode* %15, null, !dbg !12742
  br i1 %16, label %26, label %17, !dbg !12741

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !11779, metadata !DIExpression()) #23, !dbg !12739
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !12743
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !11779, metadata !DIExpression()) #23, !dbg !12739
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #24, !dbg !12744
  %21 = icmp sgt i32 %20, 0, !dbg !12745
  br i1 %21, label %22, label %23, !dbg !12746

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #24, !dbg !12747
  br label %27, !dbg !12748

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #24, !dbg !12742
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !11779, metadata !DIExpression()) #23, !dbg !12739
  %25 = icmp eq %struct._dnode* %24, null, !dbg !12742
  br i1 %25, label %26, label %17, !dbg !12741, !llvm.loop !12749

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #24, !dbg !12751
  br label %27, !dbg !12752

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !12753
  br label %29, !dbg !12754

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !12755
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !12716
  call void @llvm.dbg.value(metadata i32 %30, metadata !11584, metadata !DIExpression()) #23, !dbg !12718
  call void @llvm.dbg.value(metadata i32 %30, metadata !11578, metadata !DIExpression()) #23, !dbg !12714
  call void @llvm.dbg.value(metadata i32 %30, metadata !12711, metadata !DIExpression()), !dbg !12713
  call void @llvm.dbg.value(metadata i32 undef, metadata !11599, metadata !DIExpression()) #23, !dbg !12757
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11604, metadata !DIExpression()) #23, !dbg !12757
  call void @llvm.dbg.value(metadata i32 undef, metadata !11607, metadata !DIExpression()) #23, !dbg !12759
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #23, !dbg !12761, !srcloc !11613
  call void @llvm.dbg.value(metadata i8 poison, metadata !12708, metadata !DIExpression()), !dbg !12712
  call void @llvm.dbg.value(metadata i32 undef, metadata !12709, metadata !DIExpression()), !dbg !12713
  ret i1 %6, !dbg !12762
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12763 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12767, metadata !DIExpression()), !dbg !12770
  call void @llvm.dbg.value(metadata i32 %1, metadata !12768, metadata !DIExpression()), !dbg !12770
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !12771
  call void @llvm.dbg.value(metadata i1 %3, metadata !12769, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12770
  br i1 %3, label %4, label %12, !dbg !12772

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12774
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !12775
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !12775
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !12775
  %9 = load i8, i8* %8, align 1, !dbg !12775
  %10 = icmp eq i8 %9, 0, !dbg !12776
  br i1 %10, label %11, label %12, !dbg !12777

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !12778
  br label %12, !dbg !12780

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !12781
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !12782 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12784, metadata !DIExpression()), !dbg !12787
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11572, metadata !DIExpression()) #23, !dbg !12788
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12790, !srcloc !11587
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12790
  call void @llvm.dbg.value(metadata i32 %2, metadata !11584, metadata !DIExpression()) #23, !dbg !12792
  call void @llvm.dbg.value(metadata i32 undef, metadata !11585, metadata !DIExpression()) #23, !dbg !12792
  call void @llvm.dbg.value(metadata i32 %2, metadata !11578, metadata !DIExpression()) #23, !dbg !12788
  call void @llvm.dbg.value(metadata i32 %2, metadata !12786, metadata !DIExpression()), !dbg !12787
  call void @llvm.dbg.value(metadata i32 undef, metadata !12784, metadata !DIExpression()), !dbg !12787
  tail call fastcc void @z_sched_lock() #25, !dbg !12793
  call void @llvm.dbg.value(metadata i32 %2, metadata !11599, metadata !DIExpression()) #23, !dbg !12796
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11604, metadata !DIExpression()) #23, !dbg !12796
  call void @llvm.dbg.value(metadata i32 %2, metadata !11607, metadata !DIExpression()) #23, !dbg !12798
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !12800, !srcloc !11613
  call void @llvm.dbg.value(metadata i32 1, metadata !12784, metadata !DIExpression()), !dbg !12787
  call void @llvm.dbg.value(metadata i32 undef, metadata !12784, metadata !DIExpression()), !dbg !12787
  ret void, !dbg !12801
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !12802 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12803
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !12804
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !12804
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !12804
  %5 = load i8, i8* %4, align 1, !dbg !12805
  %6 = add i8 %5, -1, !dbg !12805
  store i8 %6, i8* %4, align 1, !dbg !12805
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12806, !srcloc !12808
  ret void, !dbg !12809
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !12810 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12812, metadata !DIExpression()), !dbg !12815
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11572, metadata !DIExpression()) #23, !dbg !12816
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12818, !srcloc !11587
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12818
  call void @llvm.dbg.value(metadata i32 %2, metadata !11584, metadata !DIExpression()) #23, !dbg !12820
  call void @llvm.dbg.value(metadata i32 undef, metadata !11585, metadata !DIExpression()) #23, !dbg !12820
  call void @llvm.dbg.value(metadata i32 %2, metadata !11578, metadata !DIExpression()) #23, !dbg !12816
  call void @llvm.dbg.value(metadata i32 %2, metadata !12814, metadata !DIExpression()), !dbg !12815
  call void @llvm.dbg.value(metadata i32 undef, metadata !12812, metadata !DIExpression()), !dbg !12815
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12821
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !12824
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !12824
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12824
  %7 = load i8, i8* %6, align 1, !dbg !12825
  %8 = add i8 %7, 1, !dbg !12825
  store i8 %8, i8* %6, align 1, !dbg !12825
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !12826
  call void @llvm.dbg.value(metadata i32 %2, metadata !11599, metadata !DIExpression()) #23, !dbg !12827
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11604, metadata !DIExpression()) #23, !dbg !12827
  call void @llvm.dbg.value(metadata i32 %2, metadata !11607, metadata !DIExpression()) #23, !dbg !12829
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !12831, !srcloc !11613
  call void @llvm.dbg.value(metadata i32 1, metadata !12812, metadata !DIExpression()), !dbg !12815
  call void @llvm.dbg.value(metadata i32 undef, metadata !12812, metadata !DIExpression()), !dbg !12815
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !12832
  ret void, !dbg !12833
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #4 !dbg !12834 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12835
  ret %struct.k_thread* %1, !dbg !12836
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #4 !dbg !12837 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !12841, metadata !DIExpression()), !dbg !12846
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !12842, metadata !DIExpression()), !dbg !12846
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !12847
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12843, metadata !DIExpression()), !dbg !12846
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !12848
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12844, metadata !DIExpression()), !dbg !12846
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #25, !dbg !12849
  call void @llvm.dbg.value(metadata i32 %5, metadata !12845, metadata !DIExpression()), !dbg !12846
  %6 = icmp sgt i32 %5, 0, !dbg !12850
  br i1 %6, label %17, label %7, !dbg !12852

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !12853
  br i1 %8, label %17, label %9, !dbg !12855

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !12856
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !12856
  %12 = load i32, i32* %11, align 8, !dbg !12856
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !12858
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !12858
  %15 = load i32, i32* %14, align 8, !dbg !12858
  %16 = icmp ult i32 %12, %15, !dbg !12859
  br label %17, !dbg !12860

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !12861
  ret i1 %18, !dbg !12862
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !12863 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !12880, metadata !DIExpression()), !dbg !12895
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12881, metadata !DIExpression()), !dbg !12895
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !12896
  %5 = load i32, i32* %4, align 4, !dbg !12897
  %6 = add nsw i32 %5, 1, !dbg !12897
  store i32 %6, i32* %4, align 4, !dbg !12897
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !12898
  store i32 %5, i32* %7, align 8, !dbg !12899
  %8 = load i32, i32* %4, align 4, !dbg !12900
  %9 = icmp eq i32 %8, 0, !dbg !12901
  br i1 %9, label %10, label %32, !dbg !12902

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !12903
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #23, !dbg !12903
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !12883, metadata !DIExpression()), !dbg !12903
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !12903
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !12903
  %14 = load i32, i32* %13, align 4, !dbg !12903
  %15 = shl i32 %14, 2, !dbg !12903
  %16 = alloca i8, i32 %15, align 8, !dbg !12903
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !12903
  store i8* %16, i8** %17, align 4, !dbg !12903
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !12903
  %19 = alloca i8, i32 %14, align 8, !dbg !12903
  store i8* %19, i8** %18, align 4, !dbg !12903
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !12903
  store i32 -1, i32* %20, align 4, !dbg !12903
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !12904
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !12892, metadata !DIExpression()), !dbg !12905
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !12882, metadata !DIExpression()), !dbg !12895
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !12906
  br i1 %22, label %23, label %24, !dbg !12903

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #23, !dbg !12906
  br label %32, !dbg !12907

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !12882, metadata !DIExpression()), !dbg !12895
  %26 = load i32, i32* %4, align 4, !dbg !12908
  %27 = add nsw i32 %26, 1, !dbg !12908
  store i32 %27, i32* %4, align 4, !dbg !12908
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !12910
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !12910
  store i32 %26, i32* %29, align 8, !dbg !12911
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !12904
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !12892, metadata !DIExpression()), !dbg !12905
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !12882, metadata !DIExpression()), !dbg !12895
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !12906
  br i1 %31, label %23, label %24, !dbg !12903, !llvm.loop !12912

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !12914
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !12915
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #24, !dbg !12916
  ret void, !dbg !12917
}

; Function Attrs: optsize
declare !dbg !12918 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !12923 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !12926 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !12928, metadata !DIExpression()), !dbg !12930
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12929, metadata !DIExpression()), !dbg !12930
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !12931
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !12932
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #24, !dbg !12933
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !12934
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !12934
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !12936
  br i1 %7, label %8, label %10, !dbg !12937

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !12938
  store i32 0, i32* %9, align 4, !dbg !12940
  br label %10, !dbg !12941

10:                                               ; preds = %8, %2
  ret void, !dbg !12942
}

; Function Attrs: optsize
declare !dbg !12943 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !12944 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !12948, metadata !DIExpression()), !dbg !12951
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12949, metadata !DIExpression()), !dbg !12951
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !12952
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #25, !dbg !12953
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !12950, metadata !DIExpression()), !dbg !12951
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12949, metadata !DIExpression()), !dbg !12951
  ret %struct.k_thread* %4, !dbg !12954
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !12955 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !12959, metadata !DIExpression()), !dbg !12960
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #24, !dbg !12961
  ret %struct.rbnode* %2, !dbg !12962
}

; Function Attrs: optsize
declare !dbg !12963 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !12966 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !12978, metadata !DIExpression()), !dbg !12982
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !12983
  %3 = load i32, i32* %2, align 4, !dbg !12983
  %4 = icmp eq i32 %3, 0, !dbg !12985
  br i1 %4, label %10, label %5, !dbg !12986

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12979, metadata !DIExpression()), !dbg !12982
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !12987, !range !5833
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !12988
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !12980, metadata !DIExpression()), !dbg !12982
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #25, !dbg !12989
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !12981, metadata !DIExpression()), !dbg !12982
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12979, metadata !DIExpression()), !dbg !12982
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !12982
  ret %struct.k_thread* %11, !dbg !12990
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !12991 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12995, metadata !DIExpression()), !dbg !12998
  call void @llvm.dbg.value(metadata i32 0, metadata !12996, metadata !DIExpression()), !dbg !12998
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !12999
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12997, metadata !DIExpression()), !dbg !12998
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13000
  br i1 %3, label %8, label %4, !dbg !13001

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !13002
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !13004
  call void @llvm.dbg.value(metadata i32 1, metadata !12996, metadata !DIExpression()), !dbg !12998
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !12999
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12997, metadata !DIExpression()), !dbg !12998
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !13000
  br i1 %7, label %8, label %4, !dbg !13001, !llvm.loop !13005

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !12998
  ret i32 %9, !dbg !13007
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #4 !dbg !13008 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13010, metadata !DIExpression()), !dbg !13011
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13012
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #25, !dbg !13013
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13014
  ret %struct.k_thread* %4, !dbg !13015
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #3 !dbg !13016 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !13025, metadata !DIExpression()), !dbg !13026
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !13027
  tail call fastcc void @sys_dlist_init.138(%struct._dnode* noundef nonnull %2) #25, !dbg !13028
  ret void, !dbg !13029
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.138(%struct._dnode* noundef %0) unnamed_addr #3 !dbg !13030 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13034, metadata !DIExpression()), !dbg !13035
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13036
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13037
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13038
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13039
  ret void, !dbg !13040
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !13041 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #25, !dbg !13042
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #25, !dbg !13043
  ret void, !dbg !13044
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #4 !dbg !13045 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13050, metadata !DIExpression()), !dbg !13051
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13052
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !13052
  %4 = load i8, i8* %3, align 2, !dbg !13052
  %5 = sext i8 %4 to i32, !dbg !13053
  ret i32 %5, !dbg !13054
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13055 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13059, metadata !DIExpression()), !dbg !13062
  call void @llvm.dbg.value(metadata i32 %1, metadata !13060, metadata !DIExpression()), !dbg !13062
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13061, metadata !DIExpression()), !dbg !13062
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !13063
  ret void, !dbg !13064
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !13065 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #25, !dbg !13066
  br i1 %1, label %8, label %2, !dbg !13067

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !13068
  br i1 %3, label %8, label %4, !dbg !13069

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13070
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #25, !dbg !13071
  %7 = xor i1 %6, true, !dbg !13069
  br label %8, !dbg !13069

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !13072
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #4 !dbg !13073 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !13074, !range !5253
  %2 = icmp eq i8 %1, 0, !dbg !13074
  ret i1 %2, !dbg !13075
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !13076 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11572, metadata !DIExpression()) #23, !dbg !13079
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13081, !srcloc !11587
  call void @llvm.dbg.value(metadata i32 undef, metadata !11584, metadata !DIExpression()) #23, !dbg !13083
  call void @llvm.dbg.value(metadata i32 undef, metadata !11585, metadata !DIExpression()) #23, !dbg !13083
  call void @llvm.dbg.value(metadata i32 undef, metadata !11578, metadata !DIExpression()) #23, !dbg !13079
  call void @llvm.dbg.value(metadata i32 undef, metadata !13078, metadata !DIExpression()), !dbg !13084
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13085
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11741, metadata !DIExpression()) #23, !dbg !13088
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !13090
  %4 = load i8, i8* %3, align 1, !dbg !13091
  %5 = and i8 %4, 127, !dbg !13091
  store i8 %5, i8* %3, align 1, !dbg !13091
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11749, metadata !DIExpression()) #23, !dbg !13092
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #24, !dbg !13094
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13095
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !11758, metadata !DIExpression()) #23, !dbg !13096
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !13098
  %8 = load i8, i8* %7, align 1, !dbg !13099
  %9 = or i8 %8, -128, !dbg !13099
  store i8 %9, i8* %7, align 1, !dbg !13099
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !11765, metadata !DIExpression()) #23, !dbg !13100
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !11772, metadata !DIExpression()) #23, !dbg !13102
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !11778, metadata !DIExpression()) #23, !dbg !13102
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !13104
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !11779, metadata !DIExpression()) #23, !dbg !13102
  %11 = icmp eq %struct._dnode* %10, null, !dbg !13105
  br i1 %11, label %22, label %12, !dbg !13104

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !11779, metadata !DIExpression()) #23, !dbg !13102
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !13106
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !11779, metadata !DIExpression()) #23, !dbg !13102
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #24, !dbg !13107
  %16 = icmp sgt i32 %15, 0, !dbg !13108
  br i1 %16, label %17, label %19, !dbg !13109

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !13110
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #24, !dbg !13111
  br label %24, !dbg !13112

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #24, !dbg !13105
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !11779, metadata !DIExpression()) #23, !dbg !13102
  %21 = icmp eq %struct._dnode* %20, null, !dbg !13105
  br i1 %21, label %22, label %12, !dbg !13104, !llvm.loop !13113

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !13115
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #24, !dbg !13116
  br label %24, !dbg !13117

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !13081
  call void @llvm.dbg.value(metadata i32 %25, metadata !11584, metadata !DIExpression()) #23, !dbg !13083
  call void @llvm.dbg.value(metadata i32 %25, metadata !11578, metadata !DIExpression()) #23, !dbg !13079
  call void @llvm.dbg.value(metadata i32 %25, metadata !13078, metadata !DIExpression()), !dbg !13084
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !13118
  call void @llvm.dbg.value(metadata i32 undef, metadata !12183, metadata !DIExpression()) #23, !dbg !13119
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12188, metadata !DIExpression()) #23, !dbg !13119
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #24, !dbg !13121
  ret void, !dbg !13122
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !13123 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !13127, metadata !DIExpression()), !dbg !13130
  %3 = icmp eq i64 %2, -1, !dbg !13131
  br i1 %3, label %4, label %6, !dbg !13133

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13134
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #25, !dbg !13136
  br label %11, !dbg !13137

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !13128, metadata !DIExpression()), !dbg !13130
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #25, !dbg !13138
  %8 = sext i32 %7 to i64, !dbg !13138
  call void @llvm.dbg.value(metadata i64 %8, metadata !13128, metadata !DIExpression()), !dbg !13130
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #25, !dbg !13139
  %10 = trunc i64 %9 to i32, !dbg !13139
  call void @llvm.dbg.value(metadata i32 %10, metadata !13129, metadata !DIExpression()), !dbg !13130
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !13130
  ret i32 %12, !dbg !13140
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13141 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13145, metadata !DIExpression()), !dbg !13146
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13147, !srcloc !13149
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #25, !dbg !13150
  ret void, !dbg !13151
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !13152 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13156, metadata !DIExpression()), !dbg !13160
  %2 = icmp eq i64 %0, 0, !dbg !13161
  br i1 %2, label %3, label %4, !dbg !13163

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #25, !dbg !13164
  br label %29, !dbg !13166

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !13158, metadata !DIExpression()), !dbg !13160
  %5 = icmp sgt i64 %0, -3, !dbg !13167
  br i1 %5, label %6, label %10, !dbg !13169

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !13170
  %8 = trunc i64 %0 to i32, !dbg !13172
  %9 = add i32 %7, %8, !dbg !13172
  call void @llvm.dbg.value(metadata i32 %9, metadata !13157, metadata !DIExpression()), !dbg !13160
  br label %13, !dbg !13173

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !13174
  %12 = sub i32 -2, %11, !dbg !13174
  call void @llvm.dbg.value(metadata i32 %12, metadata !13157, metadata !DIExpression()), !dbg !13160
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !13176
  call void @llvm.dbg.value(metadata i32 %14, metadata !13157, metadata !DIExpression()), !dbg !13160
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11572, metadata !DIExpression()) #23, !dbg !13177
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13179, !srcloc !11587
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !13179
  call void @llvm.dbg.value(metadata i32 %16, metadata !11584, metadata !DIExpression()) #23, !dbg !13181
  call void @llvm.dbg.value(metadata i32 undef, metadata !11585, metadata !DIExpression()) #23, !dbg !13181
  call void @llvm.dbg.value(metadata i32 %16, metadata !11578, metadata !DIExpression()) #23, !dbg !13177
  call void @llvm.dbg.value(metadata i32 %16, metadata !13159, metadata !DIExpression()), !dbg !13160
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13182
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !13183
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #25, !dbg !13184
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13185
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !13186
  tail call fastcc void @z_add_thread_timeout.131(%struct.k_thread* noundef %18, [1 x i64] %19) #25, !dbg !13186
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13187
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #25, !dbg !13188
  call void @llvm.dbg.value(metadata i32 %16, metadata !12183, metadata !DIExpression()) #23, !dbg !13189
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12188, metadata !DIExpression()) #23, !dbg !13189
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #24, !dbg !13191
  %22 = zext i32 %14 to i64, !dbg !13192
  %23 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !13193
  %24 = zext i32 %23 to i64, !dbg !13193
  %25 = sub nsw i64 %22, %24, !dbg !13194
  call void @llvm.dbg.value(metadata i64 %25, metadata !13156, metadata !DIExpression()), !dbg !13160
  %26 = icmp sgt i64 %25, 0, !dbg !13195
  %27 = select i1 %26, i64 %25, i64 0, !dbg !13195
  %28 = trunc i64 %27 to i32, !dbg !13195
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !13160
  ret i32 %30, !dbg !13196
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #12 !dbg !13197 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13199, metadata !DIExpression()), !dbg !13200
  call void @llvm.dbg.value(metadata i64 %0, metadata !11619, metadata !DIExpression()), !dbg !13201
  call void @llvm.dbg.value(metadata i32 10000, metadata !11622, metadata !DIExpression()), !dbg !13201
  call void @llvm.dbg.value(metadata i32 1000, metadata !11623, metadata !DIExpression()), !dbg !13201
  call void @llvm.dbg.value(metadata i8 1, metadata !11624, metadata !DIExpression()), !dbg !13201
  call void @llvm.dbg.value(metadata i1 false, metadata !11625, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13201
  call void @llvm.dbg.value(metadata i1 false, metadata !11626, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13201
  call void @llvm.dbg.value(metadata i8 0, metadata !11627, metadata !DIExpression()), !dbg !13201
  call void @llvm.dbg.value(metadata i1 false, metadata !11628, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13201
  call void @llvm.dbg.value(metadata i1 true, metadata !11629, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13201
  call void @llvm.dbg.value(metadata i64 0, metadata !11630, metadata !DIExpression()), !dbg !13201
  call void @llvm.dbg.value(metadata i64 0, metadata !11630, metadata !DIExpression()), !dbg !13201
  call void @llvm.dbg.value(metadata i64 %0, metadata !11619, metadata !DIExpression()), !dbg !13201
  %2 = udiv i64 %0, 10, !dbg !13203
  ret i64 %2, !dbg !13207
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !13208 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13209, !srcloc !13211
  tail call void @z_impl_k_yield() #25, !dbg !13212
  ret void, !dbg !13213
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !13214 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13218, metadata !DIExpression()), !dbg !13220
  %2 = sext i32 %0 to i64, !dbg !13221
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #25, !dbg !13222
  call void @llvm.dbg.value(metadata i64 %3, metadata !13219, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13220
  %4 = shl i64 %3, 32, !dbg !13223
  %5 = ashr exact i64 %4, 32, !dbg !13223
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #25, !dbg !13224
  call void @llvm.dbg.value(metadata i32 %6, metadata !13219, metadata !DIExpression()), !dbg !13220
  %7 = sext i32 %6 to i64, !dbg !13225
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #25, !dbg !13226
  %9 = trunc i64 %8 to i32, !dbg !13226
  ret i32 %9, !dbg !13227
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #12 !dbg !13228 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13230, metadata !DIExpression()), !dbg !13231
  call void @llvm.dbg.value(metadata i64 %0, metadata !11619, metadata !DIExpression()), !dbg !13232
  call void @llvm.dbg.value(metadata i32 1000000, metadata !11622, metadata !DIExpression()), !dbg !13232
  call void @llvm.dbg.value(metadata i32 10000, metadata !11623, metadata !DIExpression()), !dbg !13232
  call void @llvm.dbg.value(metadata i8 1, metadata !11624, metadata !DIExpression()), !dbg !13232
  call void @llvm.dbg.value(metadata i1 false, metadata !11625, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13232
  call void @llvm.dbg.value(metadata i1 true, metadata !11626, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13232
  call void @llvm.dbg.value(metadata i8 0, metadata !11627, metadata !DIExpression()), !dbg !13232
  call void @llvm.dbg.value(metadata i1 false, metadata !11628, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13232
  call void @llvm.dbg.value(metadata i1 true, metadata !11629, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13232
  call void @llvm.dbg.value(metadata i64 0, metadata !11630, metadata !DIExpression()), !dbg !13232
  call void @llvm.dbg.value(metadata i64 0, metadata !11630, metadata !DIExpression()), !dbg !13232
  %2 = add i64 %0, 99, !dbg !13234
  call void @llvm.dbg.value(metadata i64 %2, metadata !11619, metadata !DIExpression()), !dbg !13232
  %3 = udiv i64 %2, 100, !dbg !13235
  ret i64 %3, !dbg !13236
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #12 !dbg !13237 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13239, metadata !DIExpression()), !dbg !13240
  call void @llvm.dbg.value(metadata i64 %0, metadata !11619, metadata !DIExpression()), !dbg !13241
  call void @llvm.dbg.value(metadata i32 10000, metadata !11622, metadata !DIExpression()), !dbg !13241
  call void @llvm.dbg.value(metadata i32 1000000, metadata !11623, metadata !DIExpression()), !dbg !13241
  call void @llvm.dbg.value(metadata i8 1, metadata !11624, metadata !DIExpression()), !dbg !13241
  call void @llvm.dbg.value(metadata i1 false, metadata !11625, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13241
  call void @llvm.dbg.value(metadata i1 false, metadata !11626, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13241
  call void @llvm.dbg.value(metadata i8 0, metadata !11627, metadata !DIExpression()), !dbg !13241
  call void @llvm.dbg.value(metadata i1 true, metadata !11628, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13241
  call void @llvm.dbg.value(metadata i1 false, metadata !11629, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13241
  call void @llvm.dbg.value(metadata i64 0, metadata !11630, metadata !DIExpression()), !dbg !13241
  call void @llvm.dbg.value(metadata i64 0, metadata !11630, metadata !DIExpression()), !dbg !13241
  %2 = mul i64 %0, 100, !dbg !13243
  ret i64 %2, !dbg !13245
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13246 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13248, metadata !DIExpression()), !dbg !13249
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #25, !dbg !13250
  br i1 %2, label %14, label %3, !dbg !13252

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !13253
  %5 = icmp slt i32 %4, 0, !dbg !13255
  br i1 %5, label %6, label %10, !dbg !13256

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13257
  %8 = load i8, i8* %7, align 1, !dbg !13257
  %9 = icmp eq i8 %8, 16, !dbg !13260
  br i1 %9, label %10, label %14, !dbg !13261

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !13262
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #25, !dbg !13263
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13264, !srcloc !12223
  call void @llvm.dbg.value(metadata i32 %11, metadata !12219, metadata !DIExpression()) #23, !dbg !13268
  %12 = icmp eq i32 %11, 0, !dbg !13269
  br i1 %12, label %13, label %14, !dbg !13270

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !13271
  br label %14, !dbg !13273

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !13274
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !13275 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13277, metadata !DIExpression()), !dbg !13278
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13279
  %3 = load i8, i8* %2, align 1, !dbg !13279
  %4 = and i8 %3, 2, !dbg !13280
  %5 = icmp ne i8 %4, 0, !dbg !13281
  ret i1 %5, !dbg !13282
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #4 !dbg !13283 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13288
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13287, metadata !DIExpression()), !dbg !13289
  ret %struct.k_thread* %1, !dbg !13290
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !13291 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13292, !srcloc !12223
  call void @llvm.dbg.value(metadata i32 %1, metadata !12219, metadata !DIExpression()) #23, !dbg !13295
  %2 = icmp eq i32 %1, 0, !dbg !13296
  br i1 %2, label %3, label %8, !dbg !13297

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13298
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #25, !dbg !13299
  %6 = icmp ne i32 %5, 0, !dbg !13297
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !13300
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13301 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13303, metadata !DIExpression()), !dbg !13305
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11572, metadata !DIExpression()) #23, !dbg !13306
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13308, !srcloc !11587
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13308
  call void @llvm.dbg.value(metadata i32 %3, metadata !11584, metadata !DIExpression()) #23, !dbg !13310
  call void @llvm.dbg.value(metadata i32 undef, metadata !11585, metadata !DIExpression()) #23, !dbg !13310
  call void @llvm.dbg.value(metadata i32 %3, metadata !11578, metadata !DIExpression()) #23, !dbg !13306
  call void @llvm.dbg.value(metadata i32 %3, metadata !13304, metadata !DIExpression()), !dbg !13305
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13311
  %5 = load i8, i8* %4, align 4, !dbg !13311
  %6 = and i8 %5, 1, !dbg !13313
  %7 = icmp eq i8 %6, 0, !dbg !13314
  br i1 %7, label %9, label %8, !dbg !13315

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !11599, metadata !DIExpression()) #23, !dbg !13316
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11604, metadata !DIExpression()) #23, !dbg !13316
  call void @llvm.dbg.value(metadata i32 %3, metadata !11607, metadata !DIExpression()) #23, !dbg !13319
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13321, !srcloc !11613
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !13322, !srcloc !13324
  br label %24, !dbg !13325

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13326
  %11 = load i8, i8* %10, align 1, !dbg !13326
  %12 = and i8 %11, 8, !dbg !13328
  %13 = icmp eq i8 %12, 0, !dbg !13329
  br i1 %13, label %15, label %14, !dbg !13330

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !11599, metadata !DIExpression()) #23, !dbg !13331
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11604, metadata !DIExpression()) #23, !dbg !13331
  call void @llvm.dbg.value(metadata i32 %3, metadata !11607, metadata !DIExpression()) #23, !dbg !13334
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13336, !srcloc !11613
  br label %24, !dbg !13337

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #25, !dbg !13338
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13339
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !13341
  br i1 %17, label %18, label %23, !dbg !13342

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13343, !srcloc !12223
  call void @llvm.dbg.value(metadata i32 %19, metadata !12219, metadata !DIExpression()) #23, !dbg !13346
  %20 = icmp eq i32 %19, 0, !dbg !13347
  br i1 %20, label %21, label %23, !dbg !13348

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !12183, metadata !DIExpression()) #23, !dbg !13349
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12188, metadata !DIExpression()) #23, !dbg !13349
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !13352
  br label %23, !dbg !13353

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !11599, metadata !DIExpression()) #23, !dbg !13354
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11604, metadata !DIExpression()) #23, !dbg !13354
  call void @llvm.dbg.value(metadata i32 %3, metadata !11607, metadata !DIExpression()) #23, !dbg !13356
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13358, !srcloc !11613
  br label %24, !dbg !13359

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !13359
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13360 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13362, metadata !DIExpression()), !dbg !13363
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13364
  %3 = load i8, i8* %2, align 1, !dbg !13364
  %4 = and i8 %3, 8, !dbg !13366
  %5 = icmp eq i8 %4, 0, !dbg !13367
  br i1 %5, label %6, label %20, !dbg !13368

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !13369
  %8 = or i8 %7, 8, !dbg !13369
  store i8 %8, i8* %2, align 1, !dbg !13369
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #25, !dbg !13371
  br i1 %9, label %10, label %12, !dbg !13373

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11741, metadata !DIExpression()) #23, !dbg !13374
  %11 = and i8 %8, 95, !dbg !13377
  store i8 %11, i8* %2, align 1, !dbg !13377
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11749, metadata !DIExpression()) #23, !dbg !13378
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #24, !dbg !13380
  br label %12, !dbg !13381

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13382
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !13382
  %15 = icmp eq %union.anon* %14, null, !dbg !13384
  br i1 %15, label %17, label %16, !dbg !13385

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !13386
  br label %17, !dbg !13388

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !13389
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13390
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #25, !dbg !13391
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !13392
  br label %20, !dbg !13393

20:                                               ; preds = %17, %1
  ret void, !dbg !13394
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !13395 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13399, metadata !DIExpression()), !dbg !13401
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !13402
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13400, metadata !DIExpression()), !dbg !13401
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13403
  br i1 %3, label %10, label %4, !dbg !13404

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !13405
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !13407
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13408, metadata !DIExpression()), !dbg !13414
  call void @llvm.dbg.value(metadata i32 0, metadata !13413, metadata !DIExpression()), !dbg !13414
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !13416
  store i32 0, i32* %7, align 4, !dbg !13417
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !13418
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !13402
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !13400, metadata !DIExpression()), !dbg !13401
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !13403
  br i1 %9, label %10, label %4, !dbg !13404, !llvm.loop !13419

10:                                               ; preds = %4, %1
  ret void, !dbg !13421
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !13422 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13427, metadata !DIExpression()), !dbg !13430
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13426, metadata !DIExpression()), !dbg !13430
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11572, metadata !DIExpression()) #23, !dbg !13431
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13433, !srcloc !11587
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13433
  call void @llvm.dbg.value(metadata i32 %4, metadata !11584, metadata !DIExpression()) #23, !dbg !13435
  call void @llvm.dbg.value(metadata i32 undef, metadata !11585, metadata !DIExpression()) #23, !dbg !13435
  call void @llvm.dbg.value(metadata i32 %4, metadata !11578, metadata !DIExpression()) #23, !dbg !13431
  call void @llvm.dbg.value(metadata i32 %4, metadata !13428, metadata !DIExpression()), !dbg !13430
  call void @llvm.dbg.value(metadata i32 0, metadata !13429, metadata !DIExpression()), !dbg !13430
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13436
  %6 = load i8, i8* %5, align 1, !dbg !13436
  %7 = and i8 %6, 8, !dbg !13438
  %8 = icmp eq i8 %7, 0, !dbg !13439
  br i1 %8, label %9, label %24, !dbg !13440

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !13427, metadata !DIExpression()), !dbg !13430
  %11 = icmp eq i64 %10, 0, !dbg !13441
  br i1 %11, label %24, label %12, !dbg !13443

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13444
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !13446
  br i1 %14, label %24, label %15, !dbg !13447

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13448
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !13448
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !13449
  %19 = icmp eq %union.anon* %17, %18, !dbg !13450
  br i1 %19, label %24, label %20, !dbg !13451

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13452
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #25, !dbg !13454
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13455
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #25, !dbg !13456
  call void @llvm.dbg.value(metadata i32 %4, metadata !12183, metadata !DIExpression()) #23, !dbg !13457
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12188, metadata !DIExpression()) #23, !dbg !13457
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #24, !dbg !13459
  call void @llvm.dbg.value(metadata i32 %23, metadata !13429, metadata !DIExpression()), !dbg !13430
  br label %26, !dbg !13460

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !13461
  call void @llvm.dbg.value(metadata i32 %25, metadata !13429, metadata !DIExpression()), !dbg !13430
  call void @llvm.dbg.value(metadata i32 %4, metadata !11599, metadata !DIExpression()) #23, !dbg !13462
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11604, metadata !DIExpression()) #23, !dbg !13462
  call void @llvm.dbg.value(metadata i32 %4, metadata !11607, metadata !DIExpression()) #23, !dbg !13464
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13466, !srcloc !11613
  br label %26, !dbg !13467

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !13430
  ret i32 %27, !dbg !13468
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13469 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13473, metadata !DIExpression()), !dbg !13481
  call void @llvm.dbg.value(metadata i32 %1, metadata !13474, metadata !DIExpression()), !dbg !13481
  call void @llvm.dbg.value(metadata i8* %2, metadata !13475, metadata !DIExpression()), !dbg !13481
  call void @llvm.dbg.value(metadata i8 0, metadata !13477, metadata !DIExpression()), !dbg !13481
  call void @llvm.dbg.value(metadata i32 0, metadata !13478, metadata !DIExpression()), !dbg !13482
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11572, metadata !DIExpression()) #23, !dbg !13483
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13485, !srcloc !11587
  call void @llvm.dbg.value(metadata i32 undef, metadata !11584, metadata !DIExpression()) #23, !dbg !13487
  call void @llvm.dbg.value(metadata i32 undef, metadata !11585, metadata !DIExpression()) #23, !dbg !13487
  call void @llvm.dbg.value(metadata i32 undef, metadata !11578, metadata !DIExpression()) #23, !dbg !13483
  call void @llvm.dbg.value(metadata i32 undef, metadata !13480, metadata !DIExpression()), !dbg !13482
  call void @llvm.dbg.value(metadata i8 poison, metadata !13477, metadata !DIExpression()), !dbg !13481
  call void @llvm.dbg.value(metadata i32 undef, metadata !13478, metadata !DIExpression()), !dbg !13482
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #25, !dbg !13488
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13476, metadata !DIExpression()), !dbg !13481
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !13491
  br i1 %7, label %12, label %8, !dbg !13493

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13494, metadata !DIExpression()), !dbg !13502
  call void @llvm.dbg.value(metadata i32 %1, metadata !13500, metadata !DIExpression()), !dbg !13502
  call void @llvm.dbg.value(metadata i8* %2, metadata !13501, metadata !DIExpression()), !dbg !13502
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13408, metadata !DIExpression()), !dbg !13505
  call void @llvm.dbg.value(metadata i32 %1, metadata !13413, metadata !DIExpression()), !dbg !13505
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !13507
  store i32 %1, i32* %9, align 4, !dbg !13508
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !13509
  store i8* %2, i8** %10, align 4, !dbg !13510
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #25, !dbg !13511
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #25, !dbg !13512
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #25, !dbg !13513
  call void @llvm.dbg.value(metadata i8 1, metadata !13477, metadata !DIExpression()), !dbg !13481
  br label %12, !dbg !13514

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !13485
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !13485
  call void @llvm.dbg.value(metadata i32 %14, metadata !11584, metadata !DIExpression()) #23, !dbg !13487
  call void @llvm.dbg.value(metadata i32 %14, metadata !11578, metadata !DIExpression()) #23, !dbg !13483
  call void @llvm.dbg.value(metadata i32 %14, metadata !13480, metadata !DIExpression()), !dbg !13482
  call void @llvm.dbg.value(metadata i8 poison, metadata !13477, metadata !DIExpression()), !dbg !13481
  call void @llvm.dbg.value(metadata i32 undef, metadata !11599, metadata !DIExpression()) #23, !dbg !13515
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11604, metadata !DIExpression()) #23, !dbg !13515
  call void @llvm.dbg.value(metadata i32 undef, metadata !11607, metadata !DIExpression()) #23, !dbg !13517
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !13519, !srcloc !11613
  call void @llvm.dbg.value(metadata i32 undef, metadata !13478, metadata !DIExpression()), !dbg !13482
  ret i1 %13, !dbg !13520
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !13521 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()), !dbg !13532
  call void @llvm.dbg.value(metadata i64 undef, metadata !13529, metadata !DIExpression()), !dbg !13532
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13526, metadata !DIExpression()), !dbg !13532
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !13528, metadata !DIExpression()), !dbg !13532
  call void @llvm.dbg.value(metadata i8** %4, metadata !13530, metadata !DIExpression()), !dbg !13532
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !13533
  call void @llvm.dbg.value(metadata i32 %6, metadata !13531, metadata !DIExpression()), !dbg !13532
  %7 = icmp eq i8** %4, null, !dbg !13534
  br i1 %7, label %12, label %8, !dbg !13536

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13537
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !13539
  %11 = load i8*, i8** %10, align 4, !dbg !13539
  store i8* %11, i8** %4, align 4, !dbg !13540
  br label %12, !dbg !13541

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !13542
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !13543 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #24, !dbg !13545
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #24, !dbg !13546
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_rom_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_data_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_data_start to i32))) #24, !dbg !13547
  ret void, !dbg !13548
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13549 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !13559, metadata !DIExpression()), !dbg !13576
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13557, metadata !DIExpression()), !dbg !13576
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !13558, metadata !DIExpression()), !dbg !13576
  %5 = icmp eq i64 %4, -1, !dbg !13577
  br i1 %5, label %55, label %6, !dbg !13579

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !13580
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !13581
  call void @llvm.dbg.value(metadata i32 0, metadata !13560, metadata !DIExpression()), !dbg !13582
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13583, metadata !DIExpression()) #23, !dbg !13590
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13592, !srcloc !13598
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !13592
  call void @llvm.dbg.value(metadata i32 %9, metadata !13595, metadata !DIExpression()) #23, !dbg !13599
  call void @llvm.dbg.value(metadata i32 undef, metadata !13596, metadata !DIExpression()) #23, !dbg !13599
  call void @llvm.dbg.value(metadata i32 %9, metadata !13589, metadata !DIExpression()) #23, !dbg !13590
  call void @llvm.dbg.value(metadata i32 %9, metadata !13566, metadata !DIExpression()), !dbg !13582
  call void @llvm.dbg.value(metadata i32 undef, metadata !13560, metadata !DIExpression()), !dbg !13582
  %10 = icmp slt i64 %4, -1, !dbg !13600
  br i1 %10, label %11, label %17, !dbg !13601

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !13602
  %13 = add i64 %4, %12, !dbg !13603
  %14 = sub i64 -2, %13, !dbg !13603
  call void @llvm.dbg.value(metadata i64 %14, metadata !13570, metadata !DIExpression()), !dbg !13604
  %15 = icmp sgt i64 %14, 1, !dbg !13605
  %16 = select i1 %15, i64 %14, i64 1, !dbg !13605
  br label %22, !dbg !13606

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !13607
  %19 = tail call fastcc i32 @elapsed.149() #25, !dbg !13609
  %20 = sext i32 %19 to i64, !dbg !13609
  %21 = add nsw i64 %18, %20, !dbg !13610
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !13611
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !13612
  store i64 %23, i64* %24, align 8, !dbg !13613
  %25 = tail call fastcc %struct._timeout* @first() #25, !dbg !13614
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !13567, metadata !DIExpression()), !dbg !13616
  %26 = icmp eq %struct._timeout* %25, null, !dbg !13617
  br i1 %26, label %42, label %27, !dbg !13617

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !13618
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !13567, metadata !DIExpression()), !dbg !13616
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !13622
  %31 = load i64, i64* %30, align 8, !dbg !13622
  %32 = icmp slt i64 %28, %31, !dbg !13623
  br i1 %32, label %33, label %38, !dbg !13624

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !13622
  %35 = sub nsw i64 %31, %28, !dbg !13625
  store i64 %35, i64* %34, align 8, !dbg !13625
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !13627
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13628
  tail call fastcc void @sys_dlist_insert.150(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #25, !dbg !13629
  br label %44, !dbg !13630

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !13631
  store i64 %39, i64* %24, align 8, !dbg !13631
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #25, !dbg !13632
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !13567, metadata !DIExpression()), !dbg !13616
  %41 = icmp eq %struct._timeout* %40, null, !dbg !13617
  br i1 %41, label %42, label %27, !dbg !13617, !llvm.loop !13633

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13635
  tail call fastcc void @sys_dlist_append.151(%struct._dnode* noundef %43) #25, !dbg !13638
  br label %44, !dbg !13639

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #25, !dbg !13640
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !13641
  br i1 %46, label %47, label %54, !dbg !13642

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #25, !dbg !13643
  call void @llvm.dbg.value(metadata i32 %48, metadata !13573, metadata !DIExpression()), !dbg !13644
  %49 = icmp ne i32 %48, 0, !dbg !13645
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !13647
  br i1 %52, label %54, label %53, !dbg !13647

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #24, !dbg !13648
  br label %54, !dbg !13650

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !13651, metadata !DIExpression()) #23, !dbg !13657
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13656, metadata !DIExpression()) #23, !dbg !13657
  call void @llvm.dbg.value(metadata i32 %9, metadata !13659, metadata !DIExpression()) #23, !dbg !13662
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !13664, !srcloc !13665
  call void @llvm.dbg.value(metadata i32 undef, metadata !13560, metadata !DIExpression()), !dbg !13582
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !13666
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.149() unnamed_addr #1 !dbg !13667 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !13670
  %2 = icmp eq i32 %1, 0, !dbg !13671
  br i1 %2, label %3, label %5, !dbg !13670

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #24, !dbg !13672
  br label %5, !dbg !13670

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !13670
  ret i32 %6, !dbg !13673
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #4 !dbg !13674 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.154() #25, !dbg !13680
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13678, metadata !DIExpression()), !dbg !13681
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !13682
  ret %struct._timeout* %2, !dbg !13683
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.150(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !13684 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13688, metadata !DIExpression()), !dbg !13692
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13689, metadata !DIExpression()), !dbg !13692
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13693
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13693
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13690, metadata !DIExpression()), !dbg !13692
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13694
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !13695
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13696
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !13697
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13698
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13699
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13700
  ret void, !dbg !13701
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #4 !dbg !13702 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13706, metadata !DIExpression()), !dbg !13708
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13709
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.152(%struct._dnode* noundef %2) #25, !dbg !13710
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !13707, metadata !DIExpression()), !dbg !13708
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !13711
  ret %struct._timeout* %4, !dbg !13712
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.151(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !13713 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13718, metadata !DIExpression()), !dbg !13721
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13719, metadata !DIExpression()), !dbg !13721
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !13722
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !13720, metadata !DIExpression()), !dbg !13721
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13723
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !13724
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13725
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !13726
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !13727
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !13728
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !13729
  ret void, !dbg !13730
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !13731 {
  %1 = tail call fastcc %struct._timeout* @first() #25, !dbg !13736
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !13733, metadata !DIExpression()), !dbg !13737
  %2 = tail call fastcc i32 @elapsed.149() #25, !dbg !13738
  call void @llvm.dbg.value(metadata i32 %2, metadata !13734, metadata !DIExpression()), !dbg !13737
  %3 = icmp eq %struct._timeout* %1, null, !dbg !13739
  br i1 %3, label %14, label %4, !dbg !13741

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !13742
  %6 = load i64, i64* %5, align 8, !dbg !13742
  %7 = sext i32 %2 to i64, !dbg !13743
  %8 = sub nsw i64 %6, %7, !dbg !13744
  %9 = icmp sgt i64 %8, 2147483647, !dbg !13745
  br i1 %9, label %14, label %10, !dbg !13746

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !13747
  %12 = select i1 %11, i64 %8, i64 0, !dbg !13747
  %13 = trunc i64 %12 to i32, !dbg !13747
  call void @llvm.dbg.value(metadata i32 %13, metadata !13735, metadata !DIExpression()), !dbg !13737
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !13749
  call void @llvm.dbg.value(metadata i32 %15, metadata !13735, metadata !DIExpression()), !dbg !13737
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13750
  %17 = icmp ne i32 %16, 0, !dbg !13752
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !13753
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !13753
  call void @llvm.dbg.value(metadata i32 %20, metadata !13735, metadata !DIExpression()), !dbg !13737
  ret i32 %20, !dbg !13754
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.152(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !13755 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13759, metadata !DIExpression()), !dbg !13761
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13760, metadata !DIExpression()), !dbg !13761
  %2 = icmp eq %struct._dnode* %0, null, !dbg !13762
  br i1 %2, label %5, label %3, !dbg !13763

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.153(%struct._dnode* noundef nonnull %0) #25, !dbg !13764
  br label %5, !dbg !13763

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !13763
  ret %struct._dnode* %6, !dbg !13765
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.153(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !13766 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13768, metadata !DIExpression()), !dbg !13770
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13769, metadata !DIExpression()), !dbg !13770
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !13771
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !13772
  br i1 %3, label %7, label %4, !dbg !13773

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13774
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !13774
  br label %7, !dbg !13773

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !13773
  ret %struct._dnode* %8, !dbg !13775
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.154() unnamed_addr #4 !dbg !13776 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13780, metadata !DIExpression()), !dbg !13781
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.155() #25, !dbg !13782
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !13782
  ret %struct._dnode* %3, !dbg !13783
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.155() unnamed_addr #4 !dbg !13784 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13788, metadata !DIExpression()), !dbg !13789
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !13790
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !13791
  ret i1 %2, !dbg !13792
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !13793 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13797, metadata !DIExpression()), !dbg !13802
  call void @llvm.dbg.value(metadata i32 -22, metadata !13798, metadata !DIExpression()), !dbg !13802
  call void @llvm.dbg.value(metadata i32 0, metadata !13799, metadata !DIExpression()), !dbg !13803
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13583, metadata !DIExpression()) #23, !dbg !13804
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13806, !srcloc !13598
  call void @llvm.dbg.value(metadata i32 undef, metadata !13595, metadata !DIExpression()) #23, !dbg !13808
  call void @llvm.dbg.value(metadata i32 undef, metadata !13596, metadata !DIExpression()) #23, !dbg !13808
  call void @llvm.dbg.value(metadata i32 undef, metadata !13589, metadata !DIExpression()) #23, !dbg !13804
  call void @llvm.dbg.value(metadata i32 undef, metadata !13801, metadata !DIExpression()), !dbg !13803
  call void @llvm.dbg.value(metadata i32 -22, metadata !13798, metadata !DIExpression()), !dbg !13802
  call void @llvm.dbg.value(metadata i32 undef, metadata !13799, metadata !DIExpression()), !dbg !13803
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !13798, metadata !DIExpression()), !dbg !13802
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.158(%struct._dnode* noundef %3) #25, !dbg !13809
  br i1 %4, label %5, label %6, !dbg !13813

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #25, !dbg !13814
  call void @llvm.dbg.value(metadata i32 0, metadata !13798, metadata !DIExpression()), !dbg !13802
  br label %6, !dbg !13816

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !13802
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !13806
  call void @llvm.dbg.value(metadata i32 %8, metadata !13595, metadata !DIExpression()) #23, !dbg !13808
  call void @llvm.dbg.value(metadata i32 %8, metadata !13589, metadata !DIExpression()) #23, !dbg !13804
  call void @llvm.dbg.value(metadata i32 %8, metadata !13801, metadata !DIExpression()), !dbg !13803
  call void @llvm.dbg.value(metadata i32 %7, metadata !13798, metadata !DIExpression()), !dbg !13802
  call void @llvm.dbg.value(metadata i32 undef, metadata !13651, metadata !DIExpression()) #23, !dbg !13817
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13656, metadata !DIExpression()) #23, !dbg !13817
  call void @llvm.dbg.value(metadata i32 undef, metadata !13659, metadata !DIExpression()) #23, !dbg !13819
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !13821, !srcloc !13665
  call void @llvm.dbg.value(metadata i32 undef, metadata !13799, metadata !DIExpression()), !dbg !13803
  ret i32 %7, !dbg !13822
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.158(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !13823 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13829, metadata !DIExpression()), !dbg !13830
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13831
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13831
  %4 = icmp ne %struct._dnode* %3, null, !dbg !13832
  ret i1 %4, !dbg !13833
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #7 !dbg !13834 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13836, metadata !DIExpression()), !dbg !13837
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #25, !dbg !13838
  %3 = icmp eq %struct._timeout* %2, null, !dbg !13840
  br i1 %3, label %10, label %4, !dbg !13841

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !13842
  %6 = load i64, i64* %5, align 8, !dbg !13842
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !13844
  %8 = load i64, i64* %7, align 8, !dbg !13845
  %9 = add nsw i64 %8, %6, !dbg !13845
  store i64 %9, i64* %7, align 8, !dbg !13845
  br label %10, !dbg !13846

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13847
  tail call fastcc void @sys_dlist_remove.159(%struct._dnode* noundef %11) #25, !dbg !13848
  ret void, !dbg !13849
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.159(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !13850 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13854, metadata !DIExpression()), !dbg !13857
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13858
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13858
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !13855, metadata !DIExpression()), !dbg !13857
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13859
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13859
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !13856, metadata !DIExpression()), !dbg !13857
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !13860
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !13861
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !13862
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !13863
  tail call fastcc void @sys_dnode_init.160(%struct._dnode* noundef %0) #25, !dbg !13864
  ret void, !dbg !13865
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.160(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !13866 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13868, metadata !DIExpression()), !dbg !13869
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13870
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13871
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13872
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13873
  ret void, !dbg !13874
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !13875 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13881, metadata !DIExpression()), !dbg !13886
  call void @llvm.dbg.value(metadata i64 0, metadata !13882, metadata !DIExpression()), !dbg !13886
  call void @llvm.dbg.value(metadata i32 0, metadata !13883, metadata !DIExpression()), !dbg !13887
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13583, metadata !DIExpression()) #23, !dbg !13888
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13890, !srcloc !13598
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13890
  call void @llvm.dbg.value(metadata i32 %3, metadata !13595, metadata !DIExpression()) #23, !dbg !13892
  call void @llvm.dbg.value(metadata i32 undef, metadata !13596, metadata !DIExpression()) #23, !dbg !13892
  call void @llvm.dbg.value(metadata i32 %3, metadata !13589, metadata !DIExpression()) #23, !dbg !13888
  call void @llvm.dbg.value(metadata i32 %3, metadata !13885, metadata !DIExpression()), !dbg !13887
  call void @llvm.dbg.value(metadata i64 0, metadata !13882, metadata !DIExpression()), !dbg !13886
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()), !dbg !13887
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !13893
  call void @llvm.dbg.value(metadata i64 %4, metadata !13882, metadata !DIExpression()), !dbg !13886
  call void @llvm.dbg.value(metadata i32 %3, metadata !13651, metadata !DIExpression()) #23, !dbg !13896
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13656, metadata !DIExpression()) #23, !dbg !13896
  call void @llvm.dbg.value(metadata i32 %3, metadata !13659, metadata !DIExpression()) #23, !dbg !13898
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13900, !srcloc !13665
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()), !dbg !13887
  ret i64 %4, !dbg !13901
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !13902 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13904, metadata !DIExpression()), !dbg !13908
  call void @llvm.dbg.value(metadata i64 0, metadata !13905, metadata !DIExpression()), !dbg !13908
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.161(%struct._timeout* noundef %0) #25, !dbg !13909
  br i1 %2, label %21, label %3, !dbg !13911

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #25, !dbg !13912
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !13906, metadata !DIExpression()), !dbg !13913
  call void @llvm.dbg.value(metadata i64 0, metadata !13905, metadata !DIExpression()), !dbg !13908
  %5 = icmp eq %struct._timeout* %4, null, !dbg !13914
  br i1 %5, label %16, label %6, !dbg !13916

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !13906, metadata !DIExpression()), !dbg !13913
  call void @llvm.dbg.value(metadata i64 %8, metadata !13905, metadata !DIExpression()), !dbg !13908
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !13917
  %10 = load i64, i64* %9, align 8, !dbg !13917
  %11 = add nsw i64 %10, %8, !dbg !13919
  call void @llvm.dbg.value(metadata i64 %11, metadata !13905, metadata !DIExpression()), !dbg !13908
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !13920
  br i1 %12, label %16, label %13, !dbg !13922

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #25, !dbg !13923
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !13906, metadata !DIExpression()), !dbg !13913
  call void @llvm.dbg.value(metadata i64 %11, metadata !13905, metadata !DIExpression()), !dbg !13908
  %15 = icmp eq %struct._timeout* %14, null, !dbg !13914
  br i1 %15, label %16, label %6, !dbg !13916, !llvm.loop !13924

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !13908
  call void @llvm.dbg.value(metadata i64 %17, metadata !13905, metadata !DIExpression()), !dbg !13908
  %18 = tail call fastcc i32 @elapsed.149() #25, !dbg !13926
  %19 = sext i32 %18 to i64, !dbg !13926
  %20 = sub nsw i64 %17, %19, !dbg !13927
  br label %21, !dbg !13928

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !13908
  ret i64 %22, !dbg !13929
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.161(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #4 !dbg !13930 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13934, metadata !DIExpression()), !dbg !13935
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13936
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.158(%struct._dnode* noundef %2) #25, !dbg !13937
  %4 = xor i1 %3, true, !dbg !13938
  ret i1 %4, !dbg !13939
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !13940 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13942, metadata !DIExpression()), !dbg !13947
  call void @llvm.dbg.value(metadata i64 0, metadata !13943, metadata !DIExpression()), !dbg !13947
  call void @llvm.dbg.value(metadata i32 0, metadata !13944, metadata !DIExpression()), !dbg !13948
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13583, metadata !DIExpression()) #23, !dbg !13949
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13951, !srcloc !13598
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13951
  call void @llvm.dbg.value(metadata i32 %3, metadata !13595, metadata !DIExpression()) #23, !dbg !13953
  call void @llvm.dbg.value(metadata i32 undef, metadata !13596, metadata !DIExpression()) #23, !dbg !13953
  call void @llvm.dbg.value(metadata i32 %3, metadata !13589, metadata !DIExpression()) #23, !dbg !13949
  call void @llvm.dbg.value(metadata i32 %3, metadata !13946, metadata !DIExpression()), !dbg !13948
  call void @llvm.dbg.value(metadata i64 0, metadata !13943, metadata !DIExpression()), !dbg !13947
  call void @llvm.dbg.value(metadata i32 undef, metadata !13944, metadata !DIExpression()), !dbg !13948
  %4 = load i64, i64* @curr_tick, align 8, !dbg !13954
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !13957
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !13943, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !13947
  call void @llvm.dbg.value(metadata i32 %3, metadata !13651, metadata !DIExpression()) #23, !dbg !13958
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13656, metadata !DIExpression()) #23, !dbg !13958
  call void @llvm.dbg.value(metadata i32 %3, metadata !13659, metadata !DIExpression()) #23, !dbg !13960
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13962, !srcloc !13665
  call void @llvm.dbg.value(metadata i32 undef, metadata !13944, metadata !DIExpression()), !dbg !13948
  %6 = add i64 %5, %4, !dbg !13963
  ret i64 %6, !dbg !13964
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !13965 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !13967, metadata !DIExpression()), !dbg !13971
  call void @llvm.dbg.value(metadata i32 0, metadata !13968, metadata !DIExpression()), !dbg !13972
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13583, metadata !DIExpression()) #23, !dbg !13973
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13975, !srcloc !13598
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13975
  call void @llvm.dbg.value(metadata i32 %2, metadata !13595, metadata !DIExpression()) #23, !dbg !13977
  call void @llvm.dbg.value(metadata i32 undef, metadata !13596, metadata !DIExpression()) #23, !dbg !13977
  call void @llvm.dbg.value(metadata i32 %2, metadata !13589, metadata !DIExpression()) #23, !dbg !13973
  call void @llvm.dbg.value(metadata i32 %2, metadata !13970, metadata !DIExpression()), !dbg !13972
  call void @llvm.dbg.value(metadata i32 -1, metadata !13967, metadata !DIExpression()), !dbg !13971
  call void @llvm.dbg.value(metadata i32 undef, metadata !13968, metadata !DIExpression()), !dbg !13972
  %3 = tail call fastcc i32 @next_timeout() #25, !dbg !13978
  call void @llvm.dbg.value(metadata i32 %3, metadata !13967, metadata !DIExpression()), !dbg !13971
  call void @llvm.dbg.value(metadata i32 %2, metadata !13651, metadata !DIExpression()) #23, !dbg !13981
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13656, metadata !DIExpression()) #23, !dbg !13981
  call void @llvm.dbg.value(metadata i32 %2, metadata !13659, metadata !DIExpression()) #23, !dbg !13983
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !13985, !srcloc !13665
  call void @llvm.dbg.value(metadata i32 undef, metadata !13968, metadata !DIExpression()), !dbg !13972
  ret i32 %3, !dbg !13986
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !13987 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13989, metadata !DIExpression()), !dbg !13999
  call void @llvm.dbg.value(metadata i1 %1, metadata !13990, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13999
  call void @llvm.dbg.value(metadata i32 0, metadata !13991, metadata !DIExpression()), !dbg !14000
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13583, metadata !DIExpression()) #23, !dbg !14001
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14003, !srcloc !13598
  call void @llvm.dbg.value(metadata i32 undef, metadata !13595, metadata !DIExpression()) #23, !dbg !14005
  call void @llvm.dbg.value(metadata i32 undef, metadata !13596, metadata !DIExpression()) #23, !dbg !14005
  call void @llvm.dbg.value(metadata i32 undef, metadata !13589, metadata !DIExpression()) #23, !dbg !14001
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()), !dbg !14000
  call void @llvm.dbg.value(metadata i32 undef, metadata !13991, metadata !DIExpression()), !dbg !14000
  %4 = tail call fastcc i32 @next_timeout() #25, !dbg !14006
  call void @llvm.dbg.value(metadata i32 %4, metadata !13994, metadata !DIExpression()), !dbg !14007
  call void @llvm.dbg.value(metadata i1 undef, metadata !13997, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14007
  %5 = icmp slt i32 %4, 2, !dbg !14008
  call void @llvm.dbg.value(metadata i1 %5, metadata !13998, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14007
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !14009
  call void @llvm.dbg.value(metadata i1 %6, metadata !13997, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14007
  br i1 %7, label %11, label %8, !dbg !14009

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !14011
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !14011
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #24, !dbg !14013
  br label %11, !dbg !14014

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !14003
  call void @llvm.dbg.value(metadata i32 %12, metadata !13595, metadata !DIExpression()) #23, !dbg !14005
  call void @llvm.dbg.value(metadata i32 %12, metadata !13589, metadata !DIExpression()) #23, !dbg !14001
  call void @llvm.dbg.value(metadata i32 %12, metadata !13993, metadata !DIExpression()), !dbg !14000
  call void @llvm.dbg.value(metadata i32 undef, metadata !13651, metadata !DIExpression()) #23, !dbg !14015
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13656, metadata !DIExpression()) #23, !dbg !14015
  call void @llvm.dbg.value(metadata i32 undef, metadata !13659, metadata !DIExpression()) #23, !dbg !14017
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !14019, !srcloc !13665
  call void @llvm.dbg.value(metadata i32 1, metadata !13991, metadata !DIExpression()), !dbg !14000
  call void @llvm.dbg.value(metadata i32 undef, metadata !13991, metadata !DIExpression()), !dbg !14000
  ret void, !dbg !14020
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !14021 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14025, metadata !DIExpression()), !dbg !14030
  tail call void @z_time_slice(i32 noundef %0) #24, !dbg !14031
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13583, metadata !DIExpression()) #23, !dbg !14032
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14034, !srcloc !13598
  call void @llvm.dbg.value(metadata i32 undef, metadata !13595, metadata !DIExpression()) #23, !dbg !14036
  call void @llvm.dbg.value(metadata i32 undef, metadata !13596, metadata !DIExpression()) #23, !dbg !14036
  call void @llvm.dbg.value(metadata i32 undef, metadata !13589, metadata !DIExpression()) #23, !dbg !14032
  call void @llvm.dbg.value(metadata i32 undef, metadata !14026, metadata !DIExpression()), !dbg !14030
  store i32 %0, i32* @announce_remaining, align 4, !dbg !14030
  call void @llvm.dbg.value(metadata i32 undef, metadata !14026, metadata !DIExpression()), !dbg !14030
  %3 = tail call fastcc %struct._timeout* @first() #25, !dbg !14037
  %4 = icmp eq %struct._timeout* %3, null, !dbg !14038
  br i1 %4, label %28, label %5, !dbg !14039

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !14040
  %10 = load i64, i64* %9, align 8, !dbg !14040
  %11 = sext i32 %8 to i64, !dbg !14041
  %12 = icmp sgt i64 %10, %11, !dbg !14042
  br i1 %12, label %26, label %13, !dbg !14043

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !14030
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !14027, metadata !DIExpression()), !dbg !14044
  %15 = trunc i64 %10 to i32, !dbg !14045
  call void @llvm.dbg.value(metadata i32 %15, metadata !14029, metadata !DIExpression()), !dbg !14044
  %16 = sext i32 %15 to i64, !dbg !14046
  %17 = load i64, i64* @curr_tick, align 8, !dbg !14047
  %18 = add i64 %17, %16, !dbg !14047
  store i64 %18, i64* @curr_tick, align 8, !dbg !14047
  store i64 0, i64* %9, align 8, !dbg !14048
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #25, !dbg !14049
  call void @llvm.dbg.value(metadata i32 %14, metadata !13651, metadata !DIExpression()) #23, !dbg !14050
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13656, metadata !DIExpression()) #23, !dbg !14050
  call void @llvm.dbg.value(metadata i32 %14, metadata !13659, metadata !DIExpression()) #23, !dbg !14052
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !14054, !srcloc !13665
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !14055
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !14055
  tail call void %20(%struct._timeout* noundef nonnull %6) #24, !dbg !14056
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13583, metadata !DIExpression()) #23, !dbg !14057
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14059, !srcloc !13598
  call void @llvm.dbg.value(metadata i32 undef, metadata !13595, metadata !DIExpression()) #23, !dbg !14061
  call void @llvm.dbg.value(metadata i32 undef, metadata !13596, metadata !DIExpression()) #23, !dbg !14061
  call void @llvm.dbg.value(metadata i32 undef, metadata !13589, metadata !DIExpression()) #23, !dbg !14057
  call void @llvm.dbg.value(metadata i32 undef, metadata !14026, metadata !DIExpression()), !dbg !14030
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !14062
  %23 = sub nsw i32 %22, %15, !dbg !14062
  store i32 %23, i32* @announce_remaining, align 4, !dbg !14030
  call void @llvm.dbg.value(metadata i32 undef, metadata !14026, metadata !DIExpression()), !dbg !14030
  %24 = tail call fastcc %struct._timeout* @first() #25, !dbg !14037
  %25 = icmp eq %struct._timeout* %24, null, !dbg !14038
  br i1 %25, label %28, label %5, !dbg !14039, !llvm.loop !14063

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !14065
  store i64 %27, i64* %9, align 8, !dbg !14065
  br label %32, !dbg !14068

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !14030
  %31 = sext i32 %30 to i64, !dbg !14069
  br label %32, !dbg !14069

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !14069
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !14030
  %36 = load i64, i64* @curr_tick, align 8, !dbg !14070
  %37 = add i64 %36, %33, !dbg !14070
  store i64 %37, i64* @curr_tick, align 8, !dbg !14070
  store i32 0, i32* @announce_remaining, align 4, !dbg !14071
  %38 = tail call fastcc i32 @next_timeout() #25, !dbg !14072
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #24, !dbg !14073
  call void @llvm.dbg.value(metadata i32 %35, metadata !13651, metadata !DIExpression()) #23, !dbg !14074
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13656, metadata !DIExpression()) #23, !dbg !14074
  call void @llvm.dbg.value(metadata i32 %35, metadata !13659, metadata !DIExpression()) #23, !dbg !14076
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !14078, !srcloc !13665
  ret void, !dbg !14079
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !14080 {
  call void @llvm.dbg.value(metadata i64 0, metadata !14084, metadata !DIExpression()), !dbg !14088
  call void @llvm.dbg.value(metadata i32 0, metadata !14085, metadata !DIExpression()), !dbg !14089
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13583, metadata !DIExpression()) #23, !dbg !14090
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14092, !srcloc !13598
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14092
  call void @llvm.dbg.value(metadata i32 %2, metadata !13595, metadata !DIExpression()) #23, !dbg !14094
  call void @llvm.dbg.value(metadata i32 undef, metadata !13596, metadata !DIExpression()) #23, !dbg !14094
  call void @llvm.dbg.value(metadata i32 %2, metadata !13589, metadata !DIExpression()) #23, !dbg !14090
  call void @llvm.dbg.value(metadata i32 %2, metadata !14087, metadata !DIExpression()), !dbg !14089
  call void @llvm.dbg.value(metadata i64 0, metadata !14084, metadata !DIExpression()), !dbg !14088
  call void @llvm.dbg.value(metadata i32 undef, metadata !14085, metadata !DIExpression()), !dbg !14089
  %3 = load i64, i64* @curr_tick, align 8, !dbg !14095
  %4 = tail call fastcc i32 @elapsed.149() #25, !dbg !14098
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !14084, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !14088
  call void @llvm.dbg.value(metadata i32 %2, metadata !13651, metadata !DIExpression()) #23, !dbg !14099
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13656, metadata !DIExpression()) #23, !dbg !14099
  call void @llvm.dbg.value(metadata i32 %2, metadata !13659, metadata !DIExpression()) #23, !dbg !14101
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !14103, !srcloc !13665
  call void @llvm.dbg.value(metadata i32 undef, metadata !14085, metadata !DIExpression()), !dbg !14089
  %5 = sext i32 %4 to i64, !dbg !14098
  %6 = add i64 %3, %5, !dbg !14104
  ret i64 %6, !dbg !14105
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !14106 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !14107
  %2 = trunc i64 %1 to i32, !dbg !14108
  ret i32 %2, !dbg !14109
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !14110 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !14111
  ret i64 %1, !dbg !14112
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !14113 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14115, metadata !DIExpression()), !dbg !14122
  %2 = icmp eq i32 %0, 0, !dbg !14123
  br i1 %2, label %10, label %3, !dbg !14125

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !14126
  call void @llvm.dbg.value(metadata i32 %4, metadata !14116, metadata !DIExpression()), !dbg !14122
  %5 = mul i32 %0, 168, !dbg !14127
  call void @llvm.dbg.value(metadata i32 %5, metadata !14117, metadata !DIExpression()), !dbg !14122
  br label %6, !dbg !14128

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !14129
  call void @llvm.dbg.value(metadata i32 %7, metadata !14118, metadata !DIExpression()), !dbg !14130
  %8 = sub i32 %7, %4, !dbg !14131
  %9 = icmp ult i32 %8, %5, !dbg !14133
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !14134
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !14135 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #25, !dbg !14136
  ret i32 %1, !dbg !14137
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !14138 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #24, !dbg !14140
  ret i32 %1, !dbg !14141
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !14142 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !14146, metadata !DIExpression()), !dbg !14148
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !14149

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #25, !dbg !14150
  br label %14, !dbg !14154

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !14147, metadata !DIExpression()), !dbg !14148
  %6 = icmp slt i64 %2, -1, !dbg !14155
  br i1 %6, label %7, label %9, !dbg !14158

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !14159
  br label %14, !dbg !14160

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #25, !dbg !14162
  %11 = icmp ugt i64 %2, 1, !dbg !14163
  %12 = select i1 %11, i64 %2, i64 1, !dbg !14163
  %13 = add nsw i64 %10, %12, !dbg !14164
  br label %14, !dbg !14165

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !14166
  ret i64 %15, !dbg !14167
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !14168 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.170, i32 0, i32 0)) #24, !dbg !14170
  ret void, !dbg !14171
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { argmemonly nofree nosync nounwind willreturn }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { argmemonly nofree nounwind willreturn writeonly }
attributes #11 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin nounwind optsize "no-builtins" }
attributes #25 = { nobuiltin optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!174, !2, !2282, !27, !109, !2284, !2286, !2324, !118, !213, !320, !2326, !2337, !2383, !2385, !2413, !2441, !2484, !2556, !2601, !349, !503, !2629, !539, !549, !574, !765, !2634, !889, !955, !1267, !1486, !2671, !1601, !1691, !2673, !2757, !2820, !1741, !2823, !1748, !2110, !2841, !2130, !2843, !2245, !2846}
!llvm.ident = !{!2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848, !2848}
!llvm.module.flags = !{!2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 94, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5248, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 82)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2624, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "backup_value", scope: !27, file: !105, line: 11, type: !106, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/boards/stm32/backup_sram/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!25}
!105 = !DIFile(filename: "zephyr/samples/boards/stm32/backup_sram/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!107 = !DIGlobalVariableExpression(var: !108, expr: !DIExpression())
!108 = distinct !DIGlobalVariable(name: "_char_out", scope: !109, file: !112, line: 54, type: !113, isLocal: false, isDefinition: true)
!109 = distinct !DICompileUnit(language: DW_LANG_C99, file: !110, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !111, splitDebugInlining: false, nameTableKind: None)
!110 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!111 = !{!107}
!112 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !114, size: 32)
!114 = !DISubroutineType(types: !115)
!115 = !{!103, !103}
!116 = !DIGlobalVariableExpression(var: !117, expr: !DIExpression())
!117 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !118, file: !135, line: 56, type: !136, isLocal: true, isDefinition: true, align: 32)
!118 = distinct !DICompileUnit(language: DW_LANG_C99, file: !119, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !120, globals: !134, splitDebugInlining: false, nameTableKind: None)
!119 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!120 = !{!121}
!121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 32)
!122 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !123, line: 369, baseType: !124)
!123 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f405xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!124 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 360, size: 224, elements: !125)
!125 = !{!126, !128, !129, !130, !131, !132, !133}
!126 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !124, file: !123, line: 362, baseType: !127, size: 32)
!127 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !106)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !124, file: !123, line: 363, baseType: !127, size: 32, offset: 32)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !124, file: !123, line: 364, baseType: !127, size: 32, offset: 64)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !124, file: !123, line: 365, baseType: !127, size: 32, offset: 96)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !124, file: !123, line: 366, baseType: !127, size: 32, offset: 128)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !124, file: !123, line: 367, baseType: !127, size: 32, offset: 160)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !124, file: !123, line: 368, baseType: !127, size: 32, offset: 192)
!134 = !{!116}
!135 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !137)
!137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !138, line: 51, size: 64, elements: !139)
!138 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!139 = !{!140, !171}
!140 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !137, file: !138, line: 60, baseType: !141, size: 32)
!141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 32)
!142 = !DISubroutineType(types: !143)
!143 = !{!103, !144}
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !146)
!146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !147, line: 378, size: 192, elements: !148)
!147 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!148 = !{!149, !153, !154, !155, !164, !165}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !146, file: !147, line: 380, baseType: !150, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !152)
!152 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !146, file: !147, line: 382, baseType: !13, size: 32, offset: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !146, file: !147, line: 384, baseType: !13, size: 32, offset: 64)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !146, file: !147, line: 386, baseType: !156, size: 32, offset: 96)
!156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !147, line: 351, size: 16, elements: !158)
!158 = !{!159, !162}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !157, file: !147, line: 359, baseType: !160, size: 8)
!160 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !161)
!161 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !157, file: !147, line: 364, baseType: !163, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!163 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !146, file: !147, line: 388, baseType: !102, size: 32, offset: 128)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !146, file: !147, line: 396, baseType: !166, size: 32, offset: 160)
!166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 32)
!167 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !168)
!168 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !147, line: 43, baseType: !169)
!169 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !170)
!170 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !137, file: !138, line: 65, baseType: !144, size: 32, offset: 32)
!172 = !DIGlobalVariableExpression(var: !173, expr: !DIExpression())
!173 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_38", scope: !174, file: !179, line: 101, type: !190, isLocal: false, isDefinition: true, align: 16)
!174 = distinct !DICompileUnit(language: DW_LANG_C99, file: !175, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !176, splitDebugInlining: false, nameTableKind: None)
!175 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!176 = !{!177, !183, !188, !193, !195, !197, !199, !201, !203, !205, !207, !209, !172}
!177 = !DIGlobalVariableExpression(var: !178, expr: !DIExpression())
!178 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !174, file: !179, line: 19, type: !180, isLocal: false, isDefinition: true, align: 16)
!179 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 224, elements: !181)
!181 = !{!182}
!182 = !DISubrange(count: 14)
!183 = !DIGlobalVariableExpression(var: !184, expr: !DIExpression())
!184 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !174, file: !179, line: 24, type: !185, isLocal: false, isDefinition: true, align: 16)
!185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 48, elements: !186)
!186 = !{!187}
!187 = !DISubrange(count: 3)
!188 = !DIGlobalVariableExpression(var: !189, expr: !DIExpression())
!189 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !174, file: !179, line: 31, type: !190, isLocal: false, isDefinition: true, align: 16)
!190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 64, elements: !191)
!191 = !{!192}
!192 = !DISubrange(count: 4)
!193 = !DIGlobalVariableExpression(var: !194, expr: !DIExpression())
!194 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !174, file: !179, line: 38, type: !190, isLocal: false, isDefinition: true, align: 16)
!195 = !DIGlobalVariableExpression(var: !196, expr: !DIExpression())
!196 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !174, file: !179, line: 45, type: !190, isLocal: false, isDefinition: true, align: 16)
!197 = !DIGlobalVariableExpression(var: !198, expr: !DIExpression())
!198 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !174, file: !179, line: 52, type: !190, isLocal: false, isDefinition: true, align: 16)
!199 = !DIGlobalVariableExpression(var: !200, expr: !DIExpression())
!200 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !174, file: !179, line: 59, type: !190, isLocal: false, isDefinition: true, align: 16)
!201 = !DIGlobalVariableExpression(var: !202, expr: !DIExpression())
!202 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !174, file: !179, line: 66, type: !190, isLocal: false, isDefinition: true, align: 16)
!203 = !DIGlobalVariableExpression(var: !204, expr: !DIExpression())
!204 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !174, file: !179, line: 73, type: !190, isLocal: false, isDefinition: true, align: 16)
!205 = !DIGlobalVariableExpression(var: !206, expr: !DIExpression())
!206 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !174, file: !179, line: 80, type: !190, isLocal: false, isDefinition: true, align: 16)
!207 = !DIGlobalVariableExpression(var: !208, expr: !DIExpression())
!208 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !174, file: !179, line: 87, type: !190, isLocal: false, isDefinition: true, align: 16)
!209 = !DIGlobalVariableExpression(var: !210, expr: !DIExpression())
!210 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !174, file: !179, line: 94, type: !190, isLocal: false, isDefinition: true, align: 16)
!211 = !DIGlobalVariableExpression(var: !212, expr: !DIExpression())
!212 = distinct !DIGlobalVariable(name: "config", scope: !213, file: !291, line: 56, type: !309, isLocal: true, isDefinition: true)
!213 = distinct !DICompileUnit(language: DW_LANG_C99, file: !214, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !215, retainedTypes: !223, globals: !288, splitDebugInlining: false, nameTableKind: None)
!214 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/stm32_backup_sram.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!215 = !{!216}
!216 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !217, line: 44, baseType: !32, size: 32, elements: !218)
!217 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!218 = !{!219, !220, !221, !222}
!219 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!220 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!221 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!222 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!223 = !{!224, !226, !282}
!224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !225, size: 32)
!225 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !217, line: 56, baseType: !102)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!227 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !228)
!228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !217, line: 100, size: 224, elements: !229)
!229 = !{!230, !250, !251, !260, !266, !271, !277}
!230 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !228, file: !217, line: 101, baseType: !231, size: 32)
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !217, line: 76, baseType: !232)
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 32)
!233 = !DISubroutineType(types: !234)
!234 = !{!103, !235, !225}
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 32)
!236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !237)
!237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !147, line: 378, size: 192, elements: !238)
!238 = !{!239, !240, !241, !242, !248, !249}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !237, file: !147, line: 380, baseType: !150, size: 32)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !237, file: !147, line: 382, baseType: !13, size: 32, offset: 32)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !237, file: !147, line: 384, baseType: !13, size: 32, offset: 64)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !237, file: !147, line: 386, baseType: !243, size: 32, offset: 96)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 32)
!244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !147, line: 351, size: 16, elements: !245)
!245 = !{!246, !247}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !244, file: !147, line: 359, baseType: !160, size: 8)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !244, file: !147, line: 364, baseType: !163, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !237, file: !147, line: 388, baseType: !102, size: 32, offset: 128)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !237, file: !147, line: 396, baseType: !166, size: 32, offset: 160)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !228, file: !217, line: 102, baseType: !231, size: 32, offset: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !228, file: !217, line: 103, baseType: !252, size: 32, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !217, line: 83, baseType: !253)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 32)
!254 = !DISubroutineType(types: !255)
!255 = !{!103, !235, !225, !256, !102}
!256 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !217, line: 72, baseType: !257)
!257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 32)
!258 = !DISubroutineType(types: !259)
!259 = !{null, !235, !225, !102}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !228, file: !217, line: 104, baseType: !261, size: 32, offset: 96)
!261 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !217, line: 79, baseType: !262)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 32)
!263 = !DISubroutineType(types: !264)
!264 = !{!103, !235, !225, !265}
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !228, file: !217, line: 105, baseType: !267, size: 32, offset: 128)
!267 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !217, line: 88, baseType: !268)
!268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 32)
!269 = !DISubroutineType(types: !270)
!270 = !{!216, !235, !225}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !228, file: !217, line: 106, baseType: !272, size: 32, offset: 160)
!272 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !217, line: 92, baseType: !273)
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 32)
!274 = !DISubroutineType(types: !275)
!275 = !{!103, !235, !225, !276}
!276 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !217, line: 64, baseType: !102)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !228, file: !217, line: 107, baseType: !278, size: 32, offset: 192)
!278 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !217, line: 96, baseType: !279)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DISubroutineType(types: !281)
!281 = !{!103, !235, !225, !102}
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 32)
!283 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !123, line: 494, baseType: !284)
!284 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 490, size: 64, elements: !285)
!285 = !{!286, !287}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !284, file: !123, line: 492, baseType: !127, size: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !284, file: !123, line: 493, baseType: !127, size: 32, offset: 32)
!288 = !{!289, !295, !297, !307, !211}
!289 = !DIGlobalVariableExpression(var: !290, expr: !DIExpression())
!290 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_38", scope: !213, file: !291, line: 61, type: !292, isLocal: false, isDefinition: true, align: 16)
!291 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/stm32_backup_sram.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!292 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 80, elements: !293)
!293 = !{!294}
!294 = !DISubrange(count: 5)
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "__device_dts_ord_38", scope: !213, file: !291, line: 61, type: !236, isLocal: false, isDefinition: true, align: 32)
!297 = !DIGlobalVariableExpression(var: !298, expr: !DIExpression())
!298 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_38", scope: !213, file: !291, line: 61, type: !299, isLocal: true, isDefinition: true, align: 32)
!299 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !300)
!300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !138, line: 51, size: 64, elements: !301)
!301 = !{!302, !306}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !300, file: !138, line: 60, baseType: !303, size: 32)
!303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 32)
!304 = !DISubroutineType(types: !305)
!305 = !{!103, !235}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !300, file: !138, line: 65, baseType: !235, size: 32, offset: 32)
!307 = !DIGlobalVariableExpression(var: !308, expr: !DIExpression())
!308 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_38", scope: !213, file: !291, line: 61, type: !244, isLocal: true, isDefinition: true, align: 8)
!309 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !310)
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_backup_sram_config", file: !291, line: 17, size: 64, elements: !311)
!311 = !{!312}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !310, file: !291, line: 18, baseType: !313, size: 64)
!313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !314, line: 343, size: 64, elements: !315)
!314 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!315 = !{!316, !317}
!316 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !313, file: !314, line: 344, baseType: !106, size: 32)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !313, file: !314, line: 345, baseType: !106, size: 32, offset: 32)
!318 = !DIGlobalVariableExpression(var: !319, expr: !DIExpression())
!319 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !320, file: !323, line: 71, type: !324, isLocal: true, isDefinition: true, align: 32)
!320 = distinct !DICompileUnit(language: DW_LANG_C99, file: !321, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !322, splitDebugInlining: false, nameTableKind: None)
!321 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!322 = !{!318}
!323 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !325)
!325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !138, line: 51, size: 64, elements: !326)
!326 = !{!327, !346}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !325, file: !138, line: 60, baseType: !328, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 32)
!329 = !DISubroutineType(types: !330)
!330 = !{!103, !331}
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 32)
!332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !333)
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !147, line: 378, size: 192, elements: !334)
!334 = !{!335, !336, !337, !338, !344, !345}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !333, file: !147, line: 380, baseType: !150, size: 32)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !333, file: !147, line: 382, baseType: !13, size: 32, offset: 32)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !333, file: !147, line: 384, baseType: !13, size: 32, offset: 64)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !333, file: !147, line: 386, baseType: !339, size: 32, offset: 96)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 32)
!340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !147, line: 351, size: 16, elements: !341)
!341 = !{!342, !343}
!342 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !340, file: !147, line: 359, baseType: !160, size: 8)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !340, file: !147, line: 364, baseType: !163, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !333, file: !147, line: 388, baseType: !102, size: 32, offset: 128)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !333, file: !147, line: 396, baseType: !166, size: 32, offset: 160)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !325, file: !138, line: 65, baseType: !331, size: 32, offset: 32)
!347 = !DIGlobalVariableExpression(var: !348, expr: !DIExpression())
!348 = distinct !DIGlobalVariable(name: "static_regions", scope: !349, file: !358, line: 62, type: !499, isLocal: true, isDefinition: true)
!349 = distinct !DICompileUnit(language: DW_LANG_C99, file: !350, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !351, globals: !354, splitDebugInlining: false, nameTableKind: None)
!350 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!351 = !{!352, !103, !106, !102}
!352 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !353, line: 214, baseType: !32)
!353 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!354 = !{!355, !347}
!355 = !DIGlobalVariableExpression(var: !356, expr: !DIExpression())
!356 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !357, file: !358, line: 198, type: !485, isLocal: true, isDefinition: true)
!357 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !358, file: !358, line: 175, type: !359, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !349, retainedNodes: !480)
!358 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!359 = !DISubroutineType(types: !360)
!360 = !{null, !361}
!361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 32)
!362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !363, line: 245, size: 1024, elements: !364)
!363 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!364 = !{!365, !434, !447, !448, !449, !450, !456, !475}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !362, file: !363, line: 247, baseType: !366, size: 384)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !363, line: 57, size: 384, elements: !367)
!367 = !{!368, !396, !404, !405, !406, !419, !420, !421}
!368 = !DIDerivedType(tag: DW_TAG_member, scope: !366, file: !363, line: 60, baseType: !369, size: 64)
!369 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !366, file: !363, line: 60, size: 64, elements: !370)
!370 = !{!371, !387}
!371 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !369, file: !363, line: 61, baseType: !372, size: 64)
!372 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !373, line: 49, baseType: !374)
!373 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !373, line: 37, size: 64, elements: !375)
!375 = !{!376, !382}
!376 = !DIDerivedType(tag: DW_TAG_member, scope: !374, file: !373, line: 38, baseType: !377, size: 32)
!377 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !374, file: !373, line: 38, size: 32, elements: !378)
!378 = !{!379, !381}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !377, file: !373, line: 39, baseType: !380, size: 32)
!380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !374, size: 32)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !377, file: !373, line: 40, baseType: !380, size: 32)
!382 = !DIDerivedType(tag: DW_TAG_member, scope: !374, file: !373, line: 42, baseType: !383, size: 32, offset: 32)
!383 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !374, file: !373, line: 42, size: 32, elements: !384)
!384 = !{!385, !386}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !383, file: !373, line: 43, baseType: !380, size: 32)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !383, file: !373, line: 44, baseType: !380, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !369, file: !363, line: 62, baseType: !388, size: 64)
!388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !389, line: 49, size: 64, elements: !390)
!389 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!390 = !{!391}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !388, file: !389, line: 50, baseType: !392, size: 64)
!392 = !DICompositeType(tag: DW_TAG_array_type, baseType: !393, size: 64, elements: !394)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 32)
!394 = !{!395}
!395 = !DISubrange(count: 2)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !366, file: !363, line: 68, baseType: !397, size: 32, offset: 64)
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 32)
!398 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !399, line: 233, baseType: !400)
!399 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!400 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !399, line: 231, size: 64, elements: !401)
!401 = !{!402}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !400, file: !399, line: 232, baseType: !403, size: 64)
!403 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !373, line: 48, baseType: !374)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !366, file: !363, line: 71, baseType: !160, size: 8, offset: 96)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !366, file: !363, line: 74, baseType: !160, size: 8, offset: 104)
!406 = !DIDerivedType(tag: DW_TAG_member, scope: !366, file: !363, line: 90, baseType: !407, size: 16, offset: 112)
!407 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !366, file: !363, line: 90, size: 16, elements: !408)
!408 = !{!409, !416}
!409 = !DIDerivedType(tag: DW_TAG_member, scope: !407, file: !363, line: 91, baseType: !410, size: 16)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !407, file: !363, line: 91, size: 16, elements: !411)
!411 = !{!412, !415}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !410, file: !363, line: 96, baseType: !413, size: 8)
!413 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !414)
!414 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !410, file: !363, line: 97, baseType: !160, size: 8, offset: 8)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !407, file: !363, line: 100, baseType: !417, size: 16)
!417 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !418)
!418 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !366, file: !363, line: 107, baseType: !106, size: 32, offset: 128)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !366, file: !363, line: 127, baseType: !102, size: 32, offset: 160)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !366, file: !363, line: 131, baseType: !422, size: 192, offset: 192)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !399, line: 244, size: 192, elements: !423)
!423 = !{!424, !425, !431}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !422, file: !399, line: 245, baseType: !372, size: 64)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !422, file: !399, line: 246, baseType: !426, size: 32, offset: 64)
!426 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !399, line: 242, baseType: !427)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 32)
!428 = !DISubroutineType(types: !429)
!429 = !{null, !430}
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !422, file: !399, line: 249, baseType: !432, size: 64, offset: 128)
!432 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !433)
!433 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !362, file: !363, line: 250, baseType: !435, size: 288, offset: 384)
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !437)
!436 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!437 = !{!438, !439, !440, !441, !442, !443, !444, !445, !446}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !435, file: !436, line: 26, baseType: !106, size: 32)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !435, file: !436, line: 27, baseType: !106, size: 32, offset: 32)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !435, file: !436, line: 28, baseType: !106, size: 32, offset: 64)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !435, file: !436, line: 29, baseType: !106, size: 32, offset: 96)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !435, file: !436, line: 30, baseType: !106, size: 32, offset: 128)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !435, file: !436, line: 31, baseType: !106, size: 32, offset: 160)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !435, file: !436, line: 32, baseType: !106, size: 32, offset: 192)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !435, file: !436, line: 33, baseType: !106, size: 32, offset: 224)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !435, file: !436, line: 34, baseType: !106, size: 32, offset: 256)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !362, file: !363, line: 253, baseType: !102, size: 32, offset: 672)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !362, file: !363, line: 256, baseType: !398, size: 64, offset: 704)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !362, file: !363, line: 294, baseType: !103, size: 32, offset: 768)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !362, file: !363, line: 300, baseType: !451, size: 96, offset: 800)
!451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !363, line: 149, size: 96, elements: !452)
!452 = !{!453, !454, !455}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !451, file: !363, line: 153, baseType: !22, size: 32)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !451, file: !363, line: 162, baseType: !352, size: 32, offset: 32)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !451, file: !363, line: 168, baseType: !352, size: 32, offset: 64)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !362, file: !363, line: 325, baseType: !457, size: 32, offset: 896)
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 32)
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !459, line: 5073, size: 160, elements: !460)
!459 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!460 = !{!461, !470, !471}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !458, file: !459, line: 5074, baseType: !462, size: 96)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !463, line: 56, size: 96, elements: !464)
!463 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!464 = !{!465, !468, !469}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !462, file: !463, line: 57, baseType: !466, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 32)
!467 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !463, line: 57, flags: DIFlagFwdDecl)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !462, file: !463, line: 58, baseType: !102, size: 32, offset: 32)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !462, file: !463, line: 59, baseType: !352, size: 32, offset: 64)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !458, file: !459, line: 5075, baseType: !398, size: 64, offset: 96)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !458, file: !459, line: 5076, baseType: !472, offset: 160)
!472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !473, line: 43, elements: !474)
!473 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!474 = !{}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !362, file: !363, line: 343, baseType: !476, size: 64, offset: 928)
!476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !477)
!477 = !{!478, !479}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !476, file: !436, line: 63, baseType: !106, size: 32)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !476, file: !436, line: 66, baseType: !106, size: 32, offset: 32)
!480 = !{!481, !482, !483, !484}
!481 = !DILocalVariable(name: "thread", arg: 1, scope: !357, file: !358, line: 175, type: !361)
!482 = !DILocalVariable(name: "region_num", scope: !357, file: !358, line: 200, type: !160)
!483 = !DILocalVariable(name: "guard_start", scope: !357, file: !358, line: 265, type: !22)
!484 = !DILocalVariable(name: "guard_size", scope: !357, file: !358, line: 266, type: !352)
!485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !486, size: 96, elements: !497)
!486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !487, line: 52, size: 96, elements: !488)
!487 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!488 = !{!489, !490, !491}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !486, file: !487, line: 53, baseType: !22, size: 32)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !486, file: !487, line: 54, baseType: !352, size: 32, offset: 32)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !486, file: !487, line: 55, baseType: !492, size: 32, offset: 64)
!492 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !493, line: 151, baseType: !494)
!493 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !493, line: 149, size: 32, elements: !495)
!495 = !{!496}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !494, file: !493, line: 150, baseType: !106, size: 32)
!497 = !{!498}
!498 = !DISubrange(count: 1)
!499 = !DICompositeType(tag: DW_TAG_array_type, baseType: !500, size: 96, elements: !497)
!500 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !486)
!501 = !DIGlobalVariableExpression(var: !502, expr: !DIExpression())
!502 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !503, file: !536, line: 39, type: !160, isLocal: true, isDefinition: true)
!503 = distinct !DICompileUnit(language: DW_LANG_C99, file: !504, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !505, globals: !535, splitDebugInlining: false, nameTableKind: None)
!504 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!505 = !{!506, !102, !103, !523, !160}
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 32)
!507 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !508, line: 1226, baseType: !509)
!508 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!509 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 1213, size: 352, elements: !510)
!510 = !{!511, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !509, file: !508, line: 1215, baseType: !512, size: 32)
!512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !127)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !509, file: !508, line: 1216, baseType: !127, size: 32, offset: 32)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !509, file: !508, line: 1217, baseType: !127, size: 32, offset: 64)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !509, file: !508, line: 1218, baseType: !127, size: 32, offset: 96)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !509, file: !508, line: 1219, baseType: !127, size: 32, offset: 128)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !509, file: !508, line: 1220, baseType: !127, size: 32, offset: 160)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !509, file: !508, line: 1221, baseType: !127, size: 32, offset: 192)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !509, file: !508, line: 1222, baseType: !127, size: 32, offset: 224)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !509, file: !508, line: 1223, baseType: !127, size: 32, offset: 256)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !509, file: !508, line: 1224, baseType: !127, size: 32, offset: 288)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !509, file: !508, line: 1225, baseType: !127, size: 32, offset: 320)
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 32)
!524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !525)
!525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !526, line: 27, size: 96, elements: !527)
!526 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!527 = !{!528, !529, !530}
!528 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !525, file: !526, line: 29, baseType: !106, size: 32)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !525, file: !526, line: 31, baseType: !150, size: 32, offset: 32)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !525, file: !526, line: 37, baseType: !531, size: 32, offset: 64)
!531 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !493, line: 146, baseType: !532)
!532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !493, line: 141, size: 32, elements: !533)
!533 = !{!534}
!534 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !532, file: !493, line: 143, baseType: !106, size: 32)
!535 = !{!501}
!536 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!537 = !DIGlobalVariableExpression(var: !538, expr: !DIExpression())
!538 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !539, file: !546, line: 21, type: !113, isLocal: true, isDefinition: true)
!539 = distinct !DICompileUnit(language: DW_LANG_C99, file: !540, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !541, globals: !545, splitDebugInlining: false, nameTableKind: None)
!540 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!541 = !{!542, !103, !102}
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 32)
!543 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !544, line: 22, baseType: !103)
!544 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!545 = !{!537}
!546 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!547 = !DIGlobalVariableExpression(var: !548, expr: !DIExpression())
!548 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !549, file: !554, line: 13, type: !571, isLocal: true, isDefinition: true)
!549 = distinct !DICompileUnit(language: DW_LANG_C99, file: !550, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !551, splitDebugInlining: false, nameTableKind: None)
!550 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!551 = !{!552, !547}
!552 = !DIGlobalVariableExpression(var: !553, expr: !DIExpression())
!553 = distinct !DIGlobalVariable(name: "mpu_config", scope: !549, file: !554, line: 37, type: !555, isLocal: false, isDefinition: true)
!554 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!555 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !556)
!556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !526, line: 41, size: 64, elements: !557)
!557 = !{!558, !559}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !556, file: !526, line: 43, baseType: !106, size: 32)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !556, file: !526, line: 45, baseType: !560, size: 32, offset: 32)
!560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !562)
!562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !526, line: 27, size: 96, elements: !563)
!563 = !{!564, !565, !566}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !562, file: !526, line: 29, baseType: !106, size: 32)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !562, file: !526, line: 31, baseType: !150, size: 32, offset: 32)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !562, file: !526, line: 37, baseType: !567, size: 32, offset: 64)
!567 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !493, line: 146, baseType: !568)
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !493, line: 141, size: 32, elements: !569)
!569 = !{!570}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !568, file: !493, line: 143, baseType: !106, size: 32)
!571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !561, size: 192, elements: !394)
!572 = !DIGlobalVariableExpression(var: !573, expr: !DIExpression())
!573 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !574, file: !679, line: 72, type: !760, isLocal: true, isDefinition: true)
!574 = distinct !DICompileUnit(language: DW_LANG_C99, file: !575, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !576, retainedTypes: !665, globals: !676, splitDebugInlining: false, nameTableKind: None)
!575 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!576 = !{!30, !577}
!577 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !123, line: 65, baseType: !103, size: 32, elements: !578)
!578 = !{!579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664}
!579 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!580 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!581 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!582 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!583 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!584 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!585 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!586 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!587 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!588 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!589 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!590 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!591 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!592 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!593 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!594 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!595 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!596 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!597 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!598 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!599 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!600 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!601 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!602 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!603 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!604 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!605 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!606 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!607 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!608 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!609 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!610 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!611 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!612 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!613 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!614 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!615 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!616 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!617 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!618 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!619 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!620 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!621 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!622 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!623 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!624 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!625 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!626 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!627 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!628 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!629 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!630 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!631 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!632 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!633 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!634 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!635 = !DIEnumerator(name: "FSMC_IRQn", value: 48)
!636 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!637 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!638 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!639 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!640 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!641 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!642 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!643 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!644 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!645 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!646 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!647 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!648 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!649 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!650 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!651 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!652 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!653 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!654 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!655 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!656 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!657 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!658 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!659 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!660 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!661 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!662 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!663 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!664 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!665 = !{!352, !103, !102, !666}
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 32)
!667 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !123, line: 354, baseType: !668)
!668 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 346, size: 192, elements: !669)
!669 = !{!670, !671, !672, !673, !674, !675}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !668, file: !123, line: 348, baseType: !127, size: 32)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !668, file: !123, line: 349, baseType: !127, size: 32, offset: 32)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !668, file: !123, line: 350, baseType: !127, size: 32, offset: 64)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !668, file: !123, line: 351, baseType: !127, size: 32, offset: 96)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !668, file: !123, line: 352, baseType: !127, size: 32, offset: 128)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !668, file: !123, line: 353, baseType: !127, size: 32, offset: 160)
!676 = !{!677, !680, !696, !707, !724, !572, !726, !740, !742, !744, !746, !748, !750, !752, !754, !756, !758}
!677 = !DIGlobalVariableExpression(var: !678, expr: !DIExpression())
!678 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !574, file: !679, line: 424, type: !190, isLocal: false, isDefinition: true, align: 16)
!679 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!680 = !DIGlobalVariableExpression(var: !681, expr: !DIExpression())
!681 = distinct !DIGlobalVariable(name: "__device_dts_ord_37", scope: !574, file: !679, line: 424, type: !682, isLocal: false, isDefinition: true, align: 32)
!682 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !683)
!683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !147, line: 378, size: 192, elements: !684)
!684 = !{!685, !686, !687, !688, !694, !695}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !683, file: !147, line: 380, baseType: !150, size: 32)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !683, file: !147, line: 382, baseType: !13, size: 32, offset: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !683, file: !147, line: 384, baseType: !13, size: 32, offset: 64)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !683, file: !147, line: 386, baseType: !689, size: 32, offset: 96)
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 32)
!690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !147, line: 351, size: 16, elements: !691)
!691 = !{!692, !693}
!692 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !690, file: !147, line: 359, baseType: !160, size: 8)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !690, file: !147, line: 364, baseType: !163, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !683, file: !147, line: 388, baseType: !102, size: 32, offset: 128)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !683, file: !147, line: 396, baseType: !166, size: 32, offset: 160)
!696 = !DIGlobalVariableExpression(var: !697, expr: !DIExpression())
!697 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_37", scope: !574, file: !679, line: 424, type: !698, isLocal: true, isDefinition: true, align: 32)
!698 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !699)
!699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !138, line: 51, size: 64, elements: !700)
!700 = !{!701, !706}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !699, file: !138, line: 60, baseType: !702, size: 32)
!702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !703, size: 32)
!703 = !DISubroutineType(types: !704)
!704 = !{!103, !705}
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 32)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !699, file: !138, line: 65, baseType: !705, size: 32, offset: 32)
!707 = !DIGlobalVariableExpression(var: !708, expr: !DIExpression())
!708 = distinct !DIGlobalVariable(name: "exti_data", scope: !574, file: !679, line: 423, type: !709, isLocal: true, isDefinition: true)
!709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !679, line: 107, size: 1472, elements: !710)
!710 = !{!711}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !709, file: !679, line: 109, baseType: !712, size: 1472)
!712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !713, size: 1472, elements: !722)
!713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !679, line: 101, size: 64, elements: !714)
!714 = !{!715, !721}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !713, file: !679, line: 102, baseType: !716, size: 32)
!716 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !717, line: 63, baseType: !718)
!717 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 32)
!719 = !DISubroutineType(types: !720)
!720 = !{null, !103, !102}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !713, file: !679, line: 103, baseType: !102, size: 32, offset: 32)
!722 = !{!723}
!723 = !DISubrange(count: 23)
!724 = !DIGlobalVariableExpression(var: !725, expr: !DIExpression())
!725 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_37", scope: !574, file: !679, line: 424, type: !690, isLocal: true, isDefinition: true, align: 8)
!726 = !DIGlobalVariableExpression(var: !727, expr: !DIExpression())
!727 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !728, file: !679, line: 493, type: !733, isLocal: true, isDefinition: true, align: 32)
!728 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !679, file: !679, line: 460, type: !729, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !731)
!729 = !DISubroutineType(types: !730)
!730 = !{null, !705}
!731 = !{!732}
!732 = !DILocalVariable(name: "dev", arg: 1, scope: !728, file: !679, line: 460, type: !705)
!733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !734)
!734 = !{!735, !737, !738, !739}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !733, file: !10, line: 55, baseType: !736, size: 32)
!736 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !733, file: !10, line: 57, baseType: !736, size: 32, offset: 32)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !733, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !733, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!740 = !DIGlobalVariableExpression(var: !741, expr: !DIExpression())
!741 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !728, file: !679, line: 497, type: !733, isLocal: true, isDefinition: true, align: 32)
!742 = !DIGlobalVariableExpression(var: !743, expr: !DIExpression())
!743 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !728, file: !679, line: 507, type: !733, isLocal: true, isDefinition: true, align: 32)
!744 = !DIGlobalVariableExpression(var: !745, expr: !DIExpression())
!745 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !728, file: !679, line: 512, type: !733, isLocal: true, isDefinition: true, align: 32)
!746 = !DIGlobalVariableExpression(var: !747, expr: !DIExpression())
!747 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !728, file: !679, line: 516, type: !733, isLocal: true, isDefinition: true, align: 32)
!748 = !DIGlobalVariableExpression(var: !749, expr: !DIExpression())
!749 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !728, file: !679, line: 523, type: !733, isLocal: true, isDefinition: true, align: 32)
!750 = !DIGlobalVariableExpression(var: !751, expr: !DIExpression())
!751 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !728, file: !679, line: 527, type: !733, isLocal: true, isDefinition: true, align: 32)
!752 = !DIGlobalVariableExpression(var: !753, expr: !DIExpression())
!753 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !728, file: !679, line: 581, type: !733, isLocal: true, isDefinition: true, align: 32)
!754 = !DIGlobalVariableExpression(var: !755, expr: !DIExpression())
!755 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !728, file: !679, line: 586, type: !733, isLocal: true, isDefinition: true, align: 32)
!756 = !DIGlobalVariableExpression(var: !757, expr: !DIExpression())
!757 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !728, file: !679, line: 591, type: !733, isLocal: true, isDefinition: true, align: 32)
!758 = !DIGlobalVariableExpression(var: !759, expr: !DIExpression())
!759 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !728, file: !679, line: 595, type: !733, isLocal: true, isDefinition: true, align: 32)
!760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !761, size: 736, elements: !722)
!761 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !762)
!762 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !123, line: 155, baseType: !577)
!763 = !DIGlobalVariableExpression(var: !764, expr: !DIExpression())
!764 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !765, file: !817, line: 398, type: !850, isLocal: true, isDefinition: true)
!765 = distinct !DICompileUnit(language: DW_LANG_C99, file: !766, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !767, retainedTypes: !773, globals: !814, splitDebugInlining: false, nameTableKind: None)
!766 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!767 = !{!768, !30, !216}
!768 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !769, line: 197, baseType: !32, size: 32, elements: !770)
!769 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!770 = !{!771, !772}
!771 = !DIEnumerator(name: "SUCCESS", value: 0)
!772 = !DIEnumerator(name: "ERROR", value: 1)
!773 = !{!102, !103, !106, !774, !809, !265}
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 32)
!775 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !123, line: 532, baseType: !776)
!776 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 500, size: 1088, elements: !777)
!777 = !{!778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !776, file: !123, line: 502, baseType: !127, size: 32)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !776, file: !123, line: 503, baseType: !127, size: 32, offset: 32)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !776, file: !123, line: 504, baseType: !127, size: 32, offset: 64)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !776, file: !123, line: 505, baseType: !127, size: 32, offset: 96)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !776, file: !123, line: 506, baseType: !127, size: 32, offset: 128)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !776, file: !123, line: 507, baseType: !127, size: 32, offset: 160)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !776, file: !123, line: 508, baseType: !127, size: 32, offset: 192)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !776, file: !123, line: 509, baseType: !106, size: 32, offset: 224)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !776, file: !123, line: 510, baseType: !127, size: 32, offset: 256)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !776, file: !123, line: 511, baseType: !127, size: 32, offset: 288)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !776, file: !123, line: 512, baseType: !789, size: 64, offset: 320)
!789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !106, size: 64, elements: !394)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !776, file: !123, line: 513, baseType: !127, size: 32, offset: 384)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !776, file: !123, line: 514, baseType: !127, size: 32, offset: 416)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !776, file: !123, line: 515, baseType: !127, size: 32, offset: 448)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !776, file: !123, line: 516, baseType: !106, size: 32, offset: 480)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !776, file: !123, line: 517, baseType: !127, size: 32, offset: 512)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !776, file: !123, line: 518, baseType: !127, size: 32, offset: 544)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !776, file: !123, line: 519, baseType: !789, size: 64, offset: 576)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !776, file: !123, line: 520, baseType: !127, size: 32, offset: 640)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !776, file: !123, line: 521, baseType: !127, size: 32, offset: 672)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !776, file: !123, line: 522, baseType: !127, size: 32, offset: 704)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !776, file: !123, line: 523, baseType: !106, size: 32, offset: 736)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !776, file: !123, line: 524, baseType: !127, size: 32, offset: 768)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !776, file: !123, line: 525, baseType: !127, size: 32, offset: 800)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !776, file: !123, line: 526, baseType: !789, size: 64, offset: 832)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !776, file: !123, line: 527, baseType: !127, size: 32, offset: 896)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !776, file: !123, line: 528, baseType: !127, size: 32, offset: 928)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !776, file: !123, line: 529, baseType: !789, size: 64, offset: 960)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !776, file: !123, line: 530, baseType: !127, size: 32, offset: 1024)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !776, file: !123, line: 531, baseType: !127, size: 32, offset: 1056)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 32)
!810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !314, line: 343, size: 64, elements: !811)
!811 = !{!812, !813}
!812 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !810, file: !314, line: 344, baseType: !106, size: 32)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !810, file: !314, line: 345, baseType: !106, size: 32, offset: 32)
!814 = !{!815, !821, !837, !848, !763}
!815 = !DIGlobalVariableExpression(var: !816, expr: !DIExpression())
!816 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !765, file: !817, line: 752, type: !818, isLocal: false, isDefinition: true, align: 16)
!817 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 928, elements: !819)
!819 = !{!820}
!820 = !DISubrange(count: 58)
!821 = !DIGlobalVariableExpression(var: !822, expr: !DIExpression())
!822 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !765, file: !817, line: 752, type: !823, isLocal: false, isDefinition: true, align: 32)
!823 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !824)
!824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !147, line: 378, size: 192, elements: !825)
!825 = !{!826, !827, !828, !829, !835, !836}
!826 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !824, file: !147, line: 380, baseType: !150, size: 32)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !824, file: !147, line: 382, baseType: !13, size: 32, offset: 32)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !824, file: !147, line: 384, baseType: !13, size: 32, offset: 64)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !824, file: !147, line: 386, baseType: !830, size: 32, offset: 96)
!830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 32)
!831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !147, line: 351, size: 16, elements: !832)
!832 = !{!833, !834}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !831, file: !147, line: 359, baseType: !160, size: 8)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !831, file: !147, line: 364, baseType: !163, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !824, file: !147, line: 388, baseType: !102, size: 32, offset: 128)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !824, file: !147, line: 396, baseType: !166, size: 32, offset: 160)
!837 = !DIGlobalVariableExpression(var: !838, expr: !DIExpression())
!838 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !765, file: !817, line: 752, type: !839, isLocal: true, isDefinition: true, align: 32)
!839 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !840)
!840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !138, line: 51, size: 64, elements: !841)
!841 = !{!842, !847}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !840, file: !138, line: 60, baseType: !843, size: 32)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 32)
!844 = !DISubroutineType(types: !845)
!845 = !{!103, !846}
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !823, size: 32)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !840, file: !138, line: 65, baseType: !846, size: 32, offset: 32)
!848 = !DIGlobalVariableExpression(var: !849, expr: !DIExpression())
!849 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !765, file: !817, line: 752, type: !831, isLocal: true, isDefinition: true, align: 8)
!850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !217, line: 100, size: 224, elements: !851)
!851 = !{!852, !857, !858, !867, !872, !877, !882}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !850, file: !217, line: 101, baseType: !853, size: 32)
!853 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !217, line: 76, baseType: !854)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 32)
!855 = !DISubroutineType(types: !856)
!856 = !{!103, !846, !225}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !850, file: !217, line: 102, baseType: !853, size: 32, offset: 32)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !850, file: !217, line: 103, baseType: !859, size: 32, offset: 64)
!859 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !217, line: 83, baseType: !860)
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 32)
!861 = !DISubroutineType(types: !862)
!862 = !{!103, !846, !225, !863, !102}
!863 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !217, line: 72, baseType: !864)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 32)
!865 = !DISubroutineType(types: !866)
!866 = !{null, !846, !225, !102}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !850, file: !217, line: 104, baseType: !868, size: 32, offset: 96)
!868 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !217, line: 79, baseType: !869)
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 32)
!870 = !DISubroutineType(types: !871)
!871 = !{!103, !846, !225, !265}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !850, file: !217, line: 105, baseType: !873, size: 32, offset: 128)
!873 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !217, line: 88, baseType: !874)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 32)
!875 = !DISubroutineType(types: !876)
!876 = !{!216, !846, !225}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !850, file: !217, line: 106, baseType: !878, size: 32, offset: 160)
!878 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !217, line: 92, baseType: !879)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 32)
!880 = !DISubroutineType(types: !881)
!881 = !{!103, !846, !225, !276}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !850, file: !217, line: 107, baseType: !883, size: 32, offset: 192)
!883 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !217, line: 96, baseType: !884)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 32)
!885 = !DISubroutineType(types: !886)
!886 = !{!103, !846, !225, !102}
!887 = !DIGlobalVariableExpression(var: !888, expr: !DIExpression())
!888 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !889, file: !946, line: 603, type: !948, isLocal: true, isDefinition: true, align: 32)
!889 = distinct !DICompileUnit(language: DW_LANG_C99, file: !890, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !891, globals: !943, splitDebugInlining: false, nameTableKind: None)
!890 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!891 = !{!102, !103, !892}
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 32)
!893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !894)
!894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !895, line: 336, size: 160, elements: !896)
!895 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!896 = !{!897, !917, !921, !925, !938}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !894, file: !895, line: 365, baseType: !898, size: 32)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 32)
!899 = !DISubroutineType(types: !900)
!900 = !{!103, !901, !916}
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 32)
!902 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !903)
!903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !147, line: 378, size: 192, elements: !904)
!904 = !{!905, !906, !907, !908, !914, !915}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !903, file: !147, line: 380, baseType: !150, size: 32)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !903, file: !147, line: 382, baseType: !13, size: 32, offset: 32)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !903, file: !147, line: 384, baseType: !13, size: 32, offset: 64)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !903, file: !147, line: 386, baseType: !909, size: 32, offset: 96)
!909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 32)
!910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !147, line: 351, size: 16, elements: !911)
!911 = !{!912, !913}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !910, file: !147, line: 359, baseType: !160, size: 8)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !910, file: !147, line: 364, baseType: !163, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !903, file: !147, line: 388, baseType: !102, size: 32, offset: 128)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !903, file: !147, line: 396, baseType: !166, size: 32, offset: 160)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 32)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !894, file: !895, line: 366, baseType: !918, size: 32, offset: 32)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 32)
!919 = !DISubroutineType(types: !920)
!920 = !{null, !901, !161}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !894, file: !895, line: 374, baseType: !922, size: 32, offset: 64)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 32)
!923 = !DISubroutineType(types: !924)
!924 = !{!103, !901}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !894, file: !895, line: 377, baseType: !926, size: 32, offset: 96)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 32)
!927 = !DISubroutineType(types: !928)
!928 = !{!103, !901, !929}
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 32)
!930 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !931)
!931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !895, line: 122, size: 64, elements: !932)
!932 = !{!933, !934, !935, !936, !937}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !931, file: !895, line: 123, baseType: !106, size: 32)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !931, file: !895, line: 124, baseType: !160, size: 8, offset: 32)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !931, file: !895, line: 125, baseType: !160, size: 8, offset: 40)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !931, file: !895, line: 126, baseType: !160, size: 8, offset: 48)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !931, file: !895, line: 127, baseType: !160, size: 8, offset: 56)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !894, file: !895, line: 379, baseType: !939, size: 32, offset: 128)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 32)
!940 = !DISubroutineType(types: !941)
!941 = !{!103, !901, !942}
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 32)
!943 = !{!887, !944}
!944 = !DIGlobalVariableExpression(var: !945, expr: !DIExpression())
!945 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !889, file: !946, line: 38, type: !947, isLocal: true, isDefinition: true)
!946 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!947 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !901)
!948 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !949)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !138, line: 51, size: 64, elements: !950)
!950 = !{!951, !952}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !949, file: !138, line: 60, baseType: !922, size: 32)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !949, file: !138, line: 65, baseType: !901, size: 32, offset: 32)
!953 = !DIGlobalVariableExpression(var: !954, expr: !DIExpression())
!954 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !955, file: !1124, line: 762, type: !1240, isLocal: true, isDefinition: true)
!955 = distinct !DICompileUnit(language: DW_LANG_C99, file: !956, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !957, retainedTypes: !975, globals: !1121, splitDebugInlining: false, nameTableKind: None)
!956 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!957 = !{!30, !958, !964, !969, !216}
!958 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !959, line: 506, baseType: !32, size: 32, elements: !960)
!959 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!960 = !{!961, !962, !963}
!961 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!962 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!963 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!964 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !959, line: 512, baseType: !32, size: 32, elements: !965)
!965 = !{!966, !967, !968}
!966 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!967 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!968 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!969 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !717, line: 43, baseType: !32, size: 32, elements: !970)
!970 = !{!971, !972, !973, !974}
!971 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!972 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!973 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!974 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!975 = !{!102, !103, !976, !1046, !1051, !1011, !964, !958, !1056, !1057, !106, !1071, !1026, !1081, !224, !1082}
!976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 32)
!977 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !978)
!978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !959, line: 523, size: 288, elements: !979)
!979 = !{!980, !1001, !1007, !1012, !1016, !1017, !1018, !1022, !1042}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !978, file: !959, line: 524, baseType: !981, size: 32)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 32)
!982 = !DISubroutineType(types: !983)
!983 = !{!103, !984, !999, !1000}
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 32)
!985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !986)
!986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !147, line: 378, size: 192, elements: !987)
!987 = !{!988, !989, !990, !991, !997, !998}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !986, file: !147, line: 380, baseType: !150, size: 32)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !986, file: !147, line: 382, baseType: !13, size: 32, offset: 32)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !986, file: !147, line: 384, baseType: !13, size: 32, offset: 64)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !986, file: !147, line: 386, baseType: !992, size: 32, offset: 96)
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 32)
!993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !147, line: 351, size: 16, elements: !994)
!994 = !{!995, !996}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !993, file: !147, line: 359, baseType: !160, size: 8)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !993, file: !147, line: 364, baseType: !163, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !986, file: !147, line: 388, baseType: !102, size: 32, offset: 128)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !986, file: !147, line: 396, baseType: !166, size: 32, offset: 160)
!999 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !959, line: 237, baseType: !160)
!1000 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !959, line: 257, baseType: !106)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !978, file: !959, line: 530, baseType: !1002, size: 32, offset: 32)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 32)
!1003 = !DISubroutineType(types: !1004)
!1004 = !{!103, !984, !1005}
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 32)
!1006 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !959, line: 229, baseType: !106)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !978, file: !959, line: 532, baseType: !1008, size: 32, offset: 64)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 32)
!1009 = !DISubroutineType(types: !1010)
!1010 = !{!103, !984, !1011, !1006}
!1011 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !959, line: 216, baseType: !106)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !978, file: !959, line: 535, baseType: !1013, size: 32, offset: 96)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 32)
!1014 = !DISubroutineType(types: !1015)
!1015 = !{!103, !984, !1011}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !978, file: !959, line: 537, baseType: !1013, size: 32, offset: 128)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !978, file: !959, line: 539, baseType: !1013, size: 32, offset: 160)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !978, file: !959, line: 541, baseType: !1019, size: 32, offset: 192)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 32)
!1020 = !DISubroutineType(types: !1021)
!1021 = !{!103, !984, !999, !958, !964}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !978, file: !959, line: 544, baseType: !1023, size: 32, offset: 224)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 32)
!1024 = !DISubroutineType(types: !1025)
!1025 = !{!103, !984, !1026, !163}
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 32)
!1027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !959, line: 478, size: 96, elements: !1028)
!1028 = !{!1029, !1036, !1041}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1027, file: !959, line: 482, baseType: !1030, size: 32)
!1030 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1031, line: 33, baseType: !1032)
!1031 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1031, line: 29, size: 32, elements: !1033)
!1033 = !{!1034}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1032, file: !1031, line: 30, baseType: !1035, size: 32)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 32)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1027, file: !959, line: 485, baseType: !1037, size: 32, offset: 32)
!1037 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !959, line: 464, baseType: !1038)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 32)
!1039 = !DISubroutineType(types: !1040)
!1040 = !{null, !984, !1026, !1011}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1027, file: !959, line: 493, baseType: !1011, size: 32, offset: 64)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !978, file: !959, line: 547, baseType: !1043, size: 32, offset: 256)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 32)
!1044 = !DISubroutineType(types: !1045)
!1045 = !{!106, !984}
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 32)
!1047 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1048)
!1048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !959, line: 428, size: 32, elements: !1049)
!1049 = !{!1050}
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1048, file: !959, line: 434, baseType: !1011, size: 32)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 32)
!1052 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1053)
!1053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !959, line: 441, size: 32, elements: !1054)
!1054 = !{!1055}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1053, file: !959, line: 447, baseType: !1011, size: 32)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 32)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 32)
!1058 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !123, line: 441, baseType: !1059)
!1059 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 430, size: 320, elements: !1060)
!1060 = !{!1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1059, file: !123, line: 432, baseType: !127, size: 32)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1059, file: !123, line: 433, baseType: !127, size: 32, offset: 32)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1059, file: !123, line: 434, baseType: !127, size: 32, offset: 64)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1059, file: !123, line: 435, baseType: !127, size: 32, offset: 96)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1059, file: !123, line: 436, baseType: !127, size: 32, offset: 128)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1059, file: !123, line: 437, baseType: !127, size: 32, offset: 160)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1059, file: !123, line: 438, baseType: !127, size: 32, offset: 192)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1059, file: !123, line: 439, baseType: !127, size: 32, offset: 224)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1059, file: !123, line: 440, baseType: !1070, size: 64, offset: 256)
!1070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !127, size: 64, elements: !394)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 32)
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !123, line: 454, baseType: !1073)
!1073 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 447, size: 288, elements: !1074)
!1074 = !{!1075, !1076, !1077, !1079, !1080}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1073, file: !123, line: 449, baseType: !127, size: 32)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1073, file: !123, line: 450, baseType: !127, size: 32, offset: 32)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1073, file: !123, line: 451, baseType: !1078, size: 128, offset: 64)
!1078 = !DICompositeType(tag: DW_TAG_array_type, baseType: !127, size: 128, elements: !191)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1073, file: !123, line: 452, baseType: !789, size: 64, offset: 192)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1073, file: !123, line: 453, baseType: !127, size: 32, offset: 256)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 32)
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 32)
!1083 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1084)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !217, line: 100, size: 224, elements: !1085)
!1085 = !{!1086, !1091, !1092, !1101, !1106, !1111, !1116}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1084, file: !217, line: 101, baseType: !1087, size: 32)
!1087 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !217, line: 76, baseType: !1088)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 32)
!1089 = !DISubroutineType(types: !1090)
!1090 = !{!103, !984, !225}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1084, file: !217, line: 102, baseType: !1087, size: 32, offset: 32)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1084, file: !217, line: 103, baseType: !1093, size: 32, offset: 64)
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !217, line: 83, baseType: !1094)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 32)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!103, !984, !225, !1097, !102}
!1097 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !217, line: 72, baseType: !1098)
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 32)
!1099 = !DISubroutineType(types: !1100)
!1100 = !{null, !984, !225, !102}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1084, file: !217, line: 104, baseType: !1102, size: 32, offset: 96)
!1102 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !217, line: 79, baseType: !1103)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 32)
!1104 = !DISubroutineType(types: !1105)
!1105 = !{!103, !984, !225, !265}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1084, file: !217, line: 105, baseType: !1107, size: 32, offset: 128)
!1107 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !217, line: 88, baseType: !1108)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 32)
!1109 = !DISubroutineType(types: !1110)
!1110 = !{!216, !984, !225}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1084, file: !217, line: 106, baseType: !1112, size: 32, offset: 160)
!1112 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !217, line: 92, baseType: !1113)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 32)
!1114 = !DISubroutineType(types: !1115)
!1115 = !{!103, !984, !225, !276}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1084, file: !217, line: 107, baseType: !1117, size: 32, offset: 192)
!1117 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !217, line: 96, baseType: !1118)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 32)
!1119 = !DISubroutineType(types: !1120)
!1120 = !{!103, !984, !225, !102}
!1121 = !{!1122, !1128, !1130, !1140, !1142, !1144, !1146, !1148, !1150, !1152, !1154, !1156, !1158, !1160, !1162, !1164, !1166, !1168, !1170, !1172, !1174, !1176, !1178, !1180, !1182, !1184, !1186, !1188, !1202, !1204, !1206, !1208, !1210, !1212, !1214, !1216, !1218, !1220, !1222, !1224, !1226, !1228, !1230, !1232, !1234, !953, !1236, !1238, !1251, !1253, !1255, !1257, !1259, !1261, !1263}
!1122 = !DIGlobalVariableExpression(var: !1123, expr: !DIExpression())
!1123 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !955, file: !1124, line: 762, type: !1125, isLocal: false, isDefinition: true, align: 16)
!1124 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1125 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 96, elements: !1126)
!1126 = !{!1127}
!1127 = !DISubrange(count: 6)
!1128 = !DIGlobalVariableExpression(var: !1129, expr: !DIExpression())
!1129 = distinct !DIGlobalVariable(name: "__device_dts_ord_74", scope: !955, file: !1124, line: 762, type: !985, isLocal: false, isDefinition: true, align: 32)
!1130 = !DIGlobalVariableExpression(var: !1131, expr: !DIExpression())
!1131 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_74", scope: !955, file: !1124, line: 762, type: !1132, isLocal: true, isDefinition: true, align: 32)
!1132 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1133)
!1133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !138, line: 51, size: 64, elements: !1134)
!1134 = !{!1135, !1139}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1133, file: !138, line: 60, baseType: !1136, size: 32)
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 32)
!1137 = !DISubroutineType(types: !1138)
!1138 = !{!103, !984}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1133, file: !138, line: 65, baseType: !984, size: 32, offset: 32)
!1140 = !DIGlobalVariableExpression(var: !1141, expr: !DIExpression())
!1141 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !955, file: !1124, line: 766, type: !292, isLocal: false, isDefinition: true, align: 16)
!1142 = !DIGlobalVariableExpression(var: !1143, expr: !DIExpression())
!1143 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !955, file: !1124, line: 766, type: !985, isLocal: false, isDefinition: true, align: 32)
!1144 = !DIGlobalVariableExpression(var: !1145, expr: !DIExpression())
!1145 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !955, file: !1124, line: 766, type: !1132, isLocal: true, isDefinition: true, align: 32)
!1146 = !DIGlobalVariableExpression(var: !1147, expr: !DIExpression())
!1147 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !955, file: !1124, line: 770, type: !1125, isLocal: false, isDefinition: true, align: 16)
!1148 = !DIGlobalVariableExpression(var: !1149, expr: !DIExpression())
!1149 = distinct !DIGlobalVariable(name: "__device_dts_ord_21", scope: !955, file: !1124, line: 770, type: !985, isLocal: false, isDefinition: true, align: 32)
!1150 = !DIGlobalVariableExpression(var: !1151, expr: !DIExpression())
!1151 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_21", scope: !955, file: !1124, line: 770, type: !1132, isLocal: true, isDefinition: true, align: 32)
!1152 = !DIGlobalVariableExpression(var: !1153, expr: !DIExpression())
!1153 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !955, file: !1124, line: 774, type: !292, isLocal: false, isDefinition: true, align: 16)
!1154 = !DIGlobalVariableExpression(var: !1155, expr: !DIExpression())
!1155 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !955, file: !1124, line: 774, type: !985, isLocal: false, isDefinition: true, align: 32)
!1156 = !DIGlobalVariableExpression(var: !1157, expr: !DIExpression())
!1157 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !955, file: !1124, line: 774, type: !1132, isLocal: true, isDefinition: true, align: 32)
!1158 = !DIGlobalVariableExpression(var: !1159, expr: !DIExpression())
!1159 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !955, file: !1124, line: 778, type: !292, isLocal: false, isDefinition: true, align: 16)
!1160 = !DIGlobalVariableExpression(var: !1161, expr: !DIExpression())
!1161 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !955, file: !1124, line: 778, type: !985, isLocal: false, isDefinition: true, align: 32)
!1162 = !DIGlobalVariableExpression(var: !1163, expr: !DIExpression())
!1163 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !955, file: !1124, line: 778, type: !1132, isLocal: true, isDefinition: true, align: 32)
!1164 = !DIGlobalVariableExpression(var: !1165, expr: !DIExpression())
!1165 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !955, file: !1124, line: 782, type: !292, isLocal: false, isDefinition: true, align: 16)
!1166 = !DIGlobalVariableExpression(var: !1167, expr: !DIExpression())
!1167 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !955, file: !1124, line: 782, type: !985, isLocal: false, isDefinition: true, align: 32)
!1168 = !DIGlobalVariableExpression(var: !1169, expr: !DIExpression())
!1169 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !955, file: !1124, line: 782, type: !1132, isLocal: true, isDefinition: true, align: 32)
!1170 = !DIGlobalVariableExpression(var: !1171, expr: !DIExpression())
!1171 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !955, file: !1124, line: 786, type: !292, isLocal: false, isDefinition: true, align: 16)
!1172 = !DIGlobalVariableExpression(var: !1173, expr: !DIExpression())
!1173 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !955, file: !1124, line: 786, type: !985, isLocal: false, isDefinition: true, align: 32)
!1174 = !DIGlobalVariableExpression(var: !1175, expr: !DIExpression())
!1175 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !955, file: !1124, line: 786, type: !1132, isLocal: true, isDefinition: true, align: 32)
!1176 = !DIGlobalVariableExpression(var: !1177, expr: !DIExpression())
!1177 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !955, file: !1124, line: 790, type: !292, isLocal: false, isDefinition: true, align: 16)
!1178 = !DIGlobalVariableExpression(var: !1179, expr: !DIExpression())
!1179 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !955, file: !1124, line: 790, type: !985, isLocal: false, isDefinition: true, align: 32)
!1180 = !DIGlobalVariableExpression(var: !1181, expr: !DIExpression())
!1181 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !955, file: !1124, line: 790, type: !1132, isLocal: true, isDefinition: true, align: 32)
!1182 = !DIGlobalVariableExpression(var: !1183, expr: !DIExpression())
!1183 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !955, file: !1124, line: 794, type: !292, isLocal: false, isDefinition: true, align: 16)
!1184 = !DIGlobalVariableExpression(var: !1185, expr: !DIExpression())
!1185 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !955, file: !1124, line: 794, type: !985, isLocal: false, isDefinition: true, align: 32)
!1186 = !DIGlobalVariableExpression(var: !1187, expr: !DIExpression())
!1187 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !955, file: !1124, line: 794, type: !1132, isLocal: true, isDefinition: true, align: 32)
!1188 = !DIGlobalVariableExpression(var: !1189, expr: !DIExpression())
!1189 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !955, file: !1124, line: 762, type: !1190, isLocal: true, isDefinition: true)
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1191, line: 237, size: 128, elements: !1192)
!1191 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1192 = !{!1193, !1194, !1195}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1190, file: !1191, line: 239, baseType: !1053, size: 32)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1190, file: !1191, line: 241, baseType: !984, size: 32, offset: 32)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1190, file: !1191, line: 243, baseType: !1196, size: 64, offset: 64)
!1196 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1031, line: 40, baseType: !1197)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1031, line: 35, size: 64, elements: !1198)
!1198 = !{!1199, !1201}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1197, file: !1031, line: 36, baseType: !1200, size: 32)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 32)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1197, file: !1031, line: 37, baseType: !1200, size: 32, offset: 32)
!1202 = !DIGlobalVariableExpression(var: !1203, expr: !DIExpression())
!1203 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_74", scope: !955, file: !1124, line: 762, type: !993, isLocal: true, isDefinition: true, align: 8)
!1204 = !DIGlobalVariableExpression(var: !1205, expr: !DIExpression())
!1205 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !955, file: !1124, line: 766, type: !1190, isLocal: true, isDefinition: true)
!1206 = !DIGlobalVariableExpression(var: !1207, expr: !DIExpression())
!1207 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !955, file: !1124, line: 766, type: !993, isLocal: true, isDefinition: true, align: 8)
!1208 = !DIGlobalVariableExpression(var: !1209, expr: !DIExpression())
!1209 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !955, file: !1124, line: 770, type: !1190, isLocal: true, isDefinition: true)
!1210 = !DIGlobalVariableExpression(var: !1211, expr: !DIExpression())
!1211 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_21", scope: !955, file: !1124, line: 770, type: !993, isLocal: true, isDefinition: true, align: 8)
!1212 = !DIGlobalVariableExpression(var: !1213, expr: !DIExpression())
!1213 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !955, file: !1124, line: 774, type: !1190, isLocal: true, isDefinition: true)
!1214 = !DIGlobalVariableExpression(var: !1215, expr: !DIExpression())
!1215 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !955, file: !1124, line: 774, type: !993, isLocal: true, isDefinition: true, align: 8)
!1216 = !DIGlobalVariableExpression(var: !1217, expr: !DIExpression())
!1217 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !955, file: !1124, line: 778, type: !1190, isLocal: true, isDefinition: true)
!1218 = !DIGlobalVariableExpression(var: !1219, expr: !DIExpression())
!1219 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !955, file: !1124, line: 778, type: !993, isLocal: true, isDefinition: true, align: 8)
!1220 = !DIGlobalVariableExpression(var: !1221, expr: !DIExpression())
!1221 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !955, file: !1124, line: 782, type: !1190, isLocal: true, isDefinition: true)
!1222 = !DIGlobalVariableExpression(var: !1223, expr: !DIExpression())
!1223 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !955, file: !1124, line: 782, type: !993, isLocal: true, isDefinition: true, align: 8)
!1224 = !DIGlobalVariableExpression(var: !1225, expr: !DIExpression())
!1225 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !955, file: !1124, line: 786, type: !1190, isLocal: true, isDefinition: true)
!1226 = !DIGlobalVariableExpression(var: !1227, expr: !DIExpression())
!1227 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !955, file: !1124, line: 786, type: !993, isLocal: true, isDefinition: true, align: 8)
!1228 = !DIGlobalVariableExpression(var: !1229, expr: !DIExpression())
!1229 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !955, file: !1124, line: 790, type: !1190, isLocal: true, isDefinition: true)
!1230 = !DIGlobalVariableExpression(var: !1231, expr: !DIExpression())
!1231 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !955, file: !1124, line: 790, type: !993, isLocal: true, isDefinition: true, align: 8)
!1232 = !DIGlobalVariableExpression(var: !1233, expr: !DIExpression())
!1233 = distinct !DIGlobalVariable(name: "gpio_stm32_data_i", scope: !955, file: !1124, line: 794, type: !1190, isLocal: true, isDefinition: true)
!1234 = !DIGlobalVariableExpression(var: !1235, expr: !DIExpression())
!1235 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !955, file: !1124, line: 794, type: !993, isLocal: true, isDefinition: true, align: 8)
!1236 = !DIGlobalVariableExpression(var: !1237, expr: !DIExpression())
!1237 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !955, file: !1124, line: 656, type: !977, isLocal: true, isDefinition: true)
!1238 = !DIGlobalVariableExpression(var: !1239, expr: !DIExpression())
!1239 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !955, file: !1124, line: 766, type: !1240, isLocal: true, isDefinition: true)
!1240 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1241)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1191, line: 224, size: 160, elements: !1242)
!1242 = !{!1243, !1244, !1245, !1246}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1241, file: !1191, line: 226, baseType: !1048, size: 32)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1241, file: !1191, line: 228, baseType: !265, size: 32, offset: 32)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1241, file: !1191, line: 230, baseType: !103, size: 32, offset: 64)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1241, file: !1191, line: 231, baseType: !1247, size: 64, offset: 96)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !314, line: 343, size: 64, elements: !1248)
!1248 = !{!1249, !1250}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1247, file: !314, line: 344, baseType: !106, size: 32)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1247, file: !314, line: 345, baseType: !106, size: 32, offset: 32)
!1251 = !DIGlobalVariableExpression(var: !1252, expr: !DIExpression())
!1252 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !955, file: !1124, line: 770, type: !1240, isLocal: true, isDefinition: true)
!1253 = !DIGlobalVariableExpression(var: !1254, expr: !DIExpression())
!1254 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !955, file: !1124, line: 774, type: !1240, isLocal: true, isDefinition: true)
!1255 = !DIGlobalVariableExpression(var: !1256, expr: !DIExpression())
!1256 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !955, file: !1124, line: 778, type: !1240, isLocal: true, isDefinition: true)
!1257 = !DIGlobalVariableExpression(var: !1258, expr: !DIExpression())
!1258 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !955, file: !1124, line: 782, type: !1240, isLocal: true, isDefinition: true)
!1259 = !DIGlobalVariableExpression(var: !1260, expr: !DIExpression())
!1260 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !955, file: !1124, line: 786, type: !1240, isLocal: true, isDefinition: true)
!1261 = !DIGlobalVariableExpression(var: !1262, expr: !DIExpression())
!1262 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !955, file: !1124, line: 790, type: !1240, isLocal: true, isDefinition: true)
!1263 = !DIGlobalVariableExpression(var: !1264, expr: !DIExpression())
!1264 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_i", scope: !955, file: !1124, line: 794, type: !1240, isLocal: true, isDefinition: true)
!1265 = !DIGlobalVariableExpression(var: !1266, expr: !DIExpression())
!1266 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1267, file: !1408, line: 1914, type: !1469, isLocal: true, isDefinition: true)
!1267 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1268, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1269, retainedTypes: !1302, globals: !1405, splitDebugInlining: false, nameTableKind: None)
!1268 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!1269 = !{!30, !1270, !1277, !1284, !1291, !1297, !216}
!1270 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !895, line: 47, baseType: !32, size: 32, elements: !1271)
!1271 = !{!1272, !1273, !1274, !1275, !1276}
!1272 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1273 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1274 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1275 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1276 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1277 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !895, line: 75, baseType: !32, size: 32, elements: !1278)
!1278 = !{!1279, !1280, !1281, !1282, !1283}
!1279 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1280 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1281 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1282 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1283 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1284 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !895, line: 92, baseType: !32, size: 32, elements: !1285)
!1285 = !{!1286, !1287, !1288, !1289, !1290}
!1286 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1287 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1288 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1289 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1290 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1291 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !895, line: 84, baseType: !32, size: 32, elements: !1292)
!1292 = !{!1293, !1294, !1295, !1296}
!1293 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1294 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1295 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1296 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1297 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !895, line: 107, baseType: !32, size: 32, elements: !1298)
!1298 = !{!1299, !1300, !1301}
!1299 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1300 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1301 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1302 = !{!102, !103, !1303, !161, !160, !1352, !106, !225, !1363, !417, !1402, !1404}
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 32)
!1304 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1305)
!1305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !895, line: 336, size: 160, elements: !1306)
!1306 = !{!1307, !1326, !1330, !1334, !1347}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1305, file: !895, line: 365, baseType: !1308, size: 32)
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 32)
!1309 = !DISubroutineType(types: !1310)
!1310 = !{!103, !1311, !916}
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 32)
!1312 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1313)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !147, line: 378, size: 192, elements: !1314)
!1314 = !{!1315, !1316, !1317, !1318, !1324, !1325}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1313, file: !147, line: 380, baseType: !150, size: 32)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1313, file: !147, line: 382, baseType: !13, size: 32, offset: 32)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1313, file: !147, line: 384, baseType: !13, size: 32, offset: 64)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1313, file: !147, line: 386, baseType: !1319, size: 32, offset: 96)
!1319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 32)
!1320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !147, line: 351, size: 16, elements: !1321)
!1321 = !{!1322, !1323}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1320, file: !147, line: 359, baseType: !160, size: 8)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1320, file: !147, line: 364, baseType: !163, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1313, file: !147, line: 388, baseType: !102, size: 32, offset: 128)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1313, file: !147, line: 396, baseType: !166, size: 32, offset: 160)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1305, file: !895, line: 366, baseType: !1327, size: 32, offset: 32)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 32)
!1328 = !DISubroutineType(types: !1329)
!1329 = !{null, !1311, !161}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1305, file: !895, line: 374, baseType: !1331, size: 32, offset: 64)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 32)
!1332 = !DISubroutineType(types: !1333)
!1333 = !{!103, !1311}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1305, file: !895, line: 377, baseType: !1335, size: 32, offset: 96)
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 32)
!1336 = !DISubroutineType(types: !1337)
!1337 = !{!103, !1311, !1338}
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 32)
!1339 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1340)
!1340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !895, line: 122, size: 64, elements: !1341)
!1341 = !{!1342, !1343, !1344, !1345, !1346}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1340, file: !895, line: 123, baseType: !106, size: 32)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1340, file: !895, line: 124, baseType: !160, size: 8, offset: 32)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1340, file: !895, line: 125, baseType: !160, size: 8, offset: 40)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1340, file: !895, line: 126, baseType: !160, size: 8, offset: 48)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1340, file: !895, line: 127, baseType: !160, size: 8, offset: 56)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1305, file: !895, line: 379, baseType: !1348, size: 32, offset: 128)
!1348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 32)
!1349 = !DISubroutineType(types: !1350)
!1350 = !{!103, !1311, !1351}
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 32)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 32)
!1353 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !123, line: 670, baseType: !1354)
!1354 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 661, size: 224, elements: !1355)
!1355 = !{!1356, !1357, !1358, !1359, !1360, !1361, !1362}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1354, file: !123, line: 663, baseType: !127, size: 32)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1354, file: !123, line: 664, baseType: !127, size: 32, offset: 32)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1354, file: !123, line: 665, baseType: !127, size: 32, offset: 64)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1354, file: !123, line: 666, baseType: !127, size: 32, offset: 96)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1354, file: !123, line: 667, baseType: !127, size: 32, offset: 128)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1354, file: !123, line: 668, baseType: !127, size: 32, offset: 160)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1354, file: !123, line: 669, baseType: !127, size: 32, offset: 192)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 32)
!1364 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1365)
!1365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !217, line: 100, size: 224, elements: !1366)
!1366 = !{!1367, !1372, !1373, !1382, !1387, !1392, !1397}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1365, file: !217, line: 101, baseType: !1368, size: 32)
!1368 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !217, line: 76, baseType: !1369)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 32)
!1370 = !DISubroutineType(types: !1371)
!1371 = !{!103, !1311, !225}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1365, file: !217, line: 102, baseType: !1368, size: 32, offset: 32)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1365, file: !217, line: 103, baseType: !1374, size: 32, offset: 64)
!1374 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !217, line: 83, baseType: !1375)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 32)
!1376 = !DISubroutineType(types: !1377)
!1377 = !{!103, !1311, !225, !1378, !102}
!1378 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !217, line: 72, baseType: !1379)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 32)
!1380 = !DISubroutineType(types: !1381)
!1381 = !{null, !1311, !225, !102}
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1365, file: !217, line: 104, baseType: !1383, size: 32, offset: 96)
!1383 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !217, line: 79, baseType: !1384)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 32)
!1385 = !DISubroutineType(types: !1386)
!1386 = !{!103, !1311, !225, !265}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1365, file: !217, line: 105, baseType: !1388, size: 32, offset: 128)
!1388 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !217, line: 88, baseType: !1389)
!1389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 32)
!1390 = !DISubroutineType(types: !1391)
!1391 = !{!216, !1311, !225}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1365, file: !217, line: 106, baseType: !1393, size: 32, offset: 160)
!1393 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !217, line: 92, baseType: !1394)
!1394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1395, size: 32)
!1395 = !DISubroutineType(types: !1396)
!1396 = !{!103, !1311, !225, !276}
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1365, file: !217, line: 107, baseType: !1398, size: 32, offset: 192)
!1398 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !217, line: 96, baseType: !1399)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 32)
!1400 = !DISubroutineType(types: !1401)
!1401 = !{!103, !1311, !225, !102}
!1402 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1403)
!1403 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 32)
!1405 = !{!1406, !1412, !1414, !1421, !1265, !1423, !1431, !1454, !1457, !1460, !1462}
!1406 = !DIGlobalVariableExpression(var: !1407, expr: !DIExpression())
!1407 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1267, file: !1408, line: 1914, type: !1409, isLocal: false, isDefinition: true, align: 16)
!1408 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 128, elements: !1410)
!1410 = !{!1411}
!1411 = !DISubrange(count: 8)
!1412 = !DIGlobalVariableExpression(var: !1413, expr: !DIExpression())
!1413 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1267, file: !1408, line: 1914, type: !1312, isLocal: false, isDefinition: true, align: 32)
!1414 = !DIGlobalVariableExpression(var: !1415, expr: !DIExpression())
!1415 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1267, file: !1408, line: 1914, type: !1416, isLocal: true, isDefinition: true, align: 32)
!1416 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1417)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !138, line: 51, size: 64, elements: !1418)
!1418 = !{!1419, !1420}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1417, file: !138, line: 60, baseType: !1331, size: 32)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1417, file: !138, line: 65, baseType: !1311, size: 32, offset: 32)
!1421 = !DIGlobalVariableExpression(var: !1422, expr: !DIExpression())
!1422 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1267, file: !1408, line: 1914, type: !1320, isLocal: true, isDefinition: true, align: 8)
!1423 = !DIGlobalVariableExpression(var: !1424, expr: !DIExpression())
!1424 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1267, file: !1408, line: 1914, type: !1425, isLocal: true, isDefinition: true)
!1425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1426, size: 64, elements: !497)
!1426 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1427)
!1427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !314, line: 343, size: 64, elements: !1428)
!1428 = !{!1429, !1430}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1427, file: !314, line: 344, baseType: !106, size: 32)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1427, file: !314, line: 345, baseType: !106, size: 32, offset: 32)
!1431 = !DIGlobalVariableExpression(var: !1432, expr: !DIExpression())
!1432 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1267, file: !1408, line: 1914, type: !1433, isLocal: true, isDefinition: true)
!1433 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1434)
!1434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1435, line: 60, size: 64, elements: !1436)
!1435 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1436 = !{!1437, !1453}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1434, file: !1435, line: 69, baseType: !1438, size: 32)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 32)
!1439 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1440)
!1440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1435, line: 50, size: 64, elements: !1441)
!1441 = !{!1442, !1451, !1452}
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1440, file: !1435, line: 52, baseType: !1443, size: 32)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 32)
!1444 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1445)
!1445 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1446, line: 37, baseType: !1447)
!1446 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1446, line: 32, size: 64, elements: !1448)
!1448 = !{!1449, !1450}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1447, file: !1446, line: 34, baseType: !106, size: 32)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1447, file: !1446, line: 36, baseType: !106, size: 32, offset: 32)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1440, file: !1435, line: 54, baseType: !160, size: 8, offset: 32)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1440, file: !1435, line: 56, baseType: !160, size: 8, offset: 40)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1434, file: !1435, line: 71, baseType: !160, size: 8, offset: 32)
!1454 = !DIGlobalVariableExpression(var: !1455, expr: !DIExpression())
!1455 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1267, file: !1408, line: 1914, type: !1456, isLocal: true, isDefinition: true)
!1456 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1439, size: 64, elements: !497)
!1457 = !DIGlobalVariableExpression(var: !1458, expr: !DIExpression())
!1458 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1267, file: !1408, line: 1914, type: !1459, isLocal: true, isDefinition: true)
!1459 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1444, size: 128, elements: !394)
!1460 = !DIGlobalVariableExpression(var: !1461, expr: !DIExpression())
!1461 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1267, file: !1408, line: 1539, type: !1304, isLocal: true, isDefinition: true)
!1462 = !DIGlobalVariableExpression(var: !1463, expr: !DIExpression())
!1463 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1267, file: !1408, line: 1914, type: !1464, isLocal: true, isDefinition: true)
!1464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1465, line: 74, size: 64, elements: !1466)
!1465 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1466 = !{!1467, !1468}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1464, file: !1465, line: 76, baseType: !106, size: 32)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1464, file: !1465, line: 78, baseType: !1311, size: 32, offset: 32)
!1469 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1470)
!1470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1465, line: 22, size: 224, elements: !1471)
!1471 = !{!1472, !1473, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1470, file: !1465, line: 24, baseType: !1352, size: 32)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1470, file: !1465, line: 26, baseType: !1474, size: 32, offset: 32)
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1426, size: 32)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1470, file: !1465, line: 28, baseType: !352, size: 32, offset: 64)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1470, file: !1465, line: 30, baseType: !163, size: 8, offset: 96)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1470, file: !1465, line: 32, baseType: !103, size: 32, offset: 128)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1470, file: !1465, line: 34, baseType: !163, size: 8, offset: 160)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1470, file: !1465, line: 36, baseType: !163, size: 8, offset: 168)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1470, file: !1465, line: 38, baseType: !163, size: 8, offset: 176)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1470, file: !1465, line: 40, baseType: !163, size: 8, offset: 184)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1470, file: !1465, line: 41, baseType: !1483, size: 32, offset: 192)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 32)
!1484 = !DIGlobalVariableExpression(var: !1485, expr: !DIExpression())
!1485 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1486, file: !1566, line: 65, type: !127, isLocal: true, isDefinition: true)
!1486 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1487, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1488, retainedTypes: !1489, globals: !1563, splitDebugInlining: false, nameTableKind: None)
!1487 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!1488 = !{!577}
!1489 = !{!1490, !1492, !736, !160, !106, !1500, !1531}
!1490 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1491, line: 46, baseType: !432)
!1491 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 32)
!1493 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !508, line: 770, baseType: !1494)
!1494 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 764, size: 128, elements: !1495)
!1495 = !{!1496, !1497, !1498, !1499}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1494, file: !508, line: 766, baseType: !127, size: 32)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1494, file: !508, line: 767, baseType: !127, size: 32, offset: 32)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1494, file: !508, line: 768, baseType: !127, size: 32, offset: 64)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1494, file: !508, line: 769, baseType: !512, size: 32, offset: 96)
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 32)
!1501 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !508, line: 426, baseType: !1502)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 411, size: 28704, elements: !1503)
!1503 = !{!1504, !1506, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1521, !1526, !1530}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1502, file: !508, line: 413, baseType: !1505, size: 256)
!1505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !127, size: 256, elements: !1410)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1502, file: !508, line: 414, baseType: !1507, size: 768, offset: 256)
!1507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !106, size: 768, elements: !1508)
!1508 = !{!1509}
!1509 = !DISubrange(count: 24)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1502, file: !508, line: 415, baseType: !1505, size: 256, offset: 1024)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1502, file: !508, line: 416, baseType: !1507, size: 768, offset: 1280)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1502, file: !508, line: 417, baseType: !1505, size: 256, offset: 2048)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1502, file: !508, line: 418, baseType: !1507, size: 768, offset: 2304)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1502, file: !508, line: 419, baseType: !1505, size: 256, offset: 3072)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1502, file: !508, line: 420, baseType: !1507, size: 768, offset: 3328)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1502, file: !508, line: 421, baseType: !1505, size: 256, offset: 4096)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1502, file: !508, line: 422, baseType: !1518, size: 1792, offset: 4352)
!1518 = !DICompositeType(tag: DW_TAG_array_type, baseType: !106, size: 1792, elements: !1519)
!1519 = !{!1520}
!1520 = !DISubrange(count: 56)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1502, file: !508, line: 423, baseType: !1522, size: 1920, offset: 6144)
!1522 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1523, size: 1920, elements: !1524)
!1523 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !160)
!1524 = !{!1525}
!1525 = !DISubrange(count: 240)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1502, file: !508, line: 424, baseType: !1527, size: 20608, offset: 8064)
!1527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !106, size: 20608, elements: !1528)
!1528 = !{!1529}
!1529 = !DISubrange(count: 644)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1502, file: !508, line: 425, baseType: !127, size: 32, offset: 28672)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 32)
!1532 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !508, line: 468, baseType: !1533)
!1533 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 445, size: 1120, elements: !1534)
!1534 = !{!1535, !1536, !1537, !1538, !1539, !1540, !1541, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1554, !1555, !1556, !1558, !1560, !1562}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1533, file: !508, line: 447, baseType: !512, size: 32)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1533, file: !508, line: 448, baseType: !127, size: 32, offset: 32)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1533, file: !508, line: 449, baseType: !127, size: 32, offset: 64)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1533, file: !508, line: 450, baseType: !127, size: 32, offset: 96)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1533, file: !508, line: 451, baseType: !127, size: 32, offset: 128)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1533, file: !508, line: 452, baseType: !127, size: 32, offset: 160)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1533, file: !508, line: 453, baseType: !1542, size: 96, offset: 192)
!1542 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1523, size: 96, elements: !1543)
!1543 = !{!1544}
!1544 = !DISubrange(count: 12)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1533, file: !508, line: 454, baseType: !127, size: 32, offset: 288)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1533, file: !508, line: 455, baseType: !127, size: 32, offset: 320)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1533, file: !508, line: 456, baseType: !127, size: 32, offset: 352)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1533, file: !508, line: 457, baseType: !127, size: 32, offset: 384)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1533, file: !508, line: 458, baseType: !127, size: 32, offset: 416)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1533, file: !508, line: 459, baseType: !127, size: 32, offset: 448)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1533, file: !508, line: 460, baseType: !127, size: 32, offset: 480)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1533, file: !508, line: 461, baseType: !1553, size: 64, offset: 512)
!1553 = !DICompositeType(tag: DW_TAG_array_type, baseType: !512, size: 64, elements: !394)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1533, file: !508, line: 462, baseType: !512, size: 32, offset: 576)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1533, file: !508, line: 463, baseType: !512, size: 32, offset: 608)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1533, file: !508, line: 464, baseType: !1557, size: 128, offset: 640)
!1557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !512, size: 128, elements: !191)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1533, file: !508, line: 465, baseType: !1559, size: 160, offset: 768)
!1559 = !DICompositeType(tag: DW_TAG_array_type, baseType: !512, size: 160, elements: !293)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1533, file: !508, line: 466, baseType: !1561, size: 160, offset: 928)
!1561 = !DICompositeType(tag: DW_TAG_array_type, baseType: !106, size: 160, elements: !293)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1533, file: !508, line: 467, baseType: !127, size: 32, offset: 1088)
!1563 = !{!1564, !1590, !1593, !1595, !1597, !1484}
!1564 = !DIGlobalVariableExpression(var: !1565, expr: !DIExpression())
!1565 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1486, file: !1566, line: 285, type: !1567, isLocal: true, isDefinition: true, align: 32)
!1566 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1567 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1568)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !138, line: 51, size: 64, elements: !1569)
!1569 = !{!1570, !1589}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1568, file: !138, line: 60, baseType: !1571, size: 32)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 32)
!1572 = !DISubroutineType(types: !1573)
!1573 = !{!103, !1574}
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 32)
!1575 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1576)
!1576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !147, line: 378, size: 192, elements: !1577)
!1577 = !{!1578, !1579, !1580, !1581, !1587, !1588}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1576, file: !147, line: 380, baseType: !150, size: 32)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1576, file: !147, line: 382, baseType: !13, size: 32, offset: 32)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1576, file: !147, line: 384, baseType: !13, size: 32, offset: 64)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1576, file: !147, line: 386, baseType: !1582, size: 32, offset: 96)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 32)
!1583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !147, line: 351, size: 16, elements: !1584)
!1584 = !{!1585, !1586}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1583, file: !147, line: 359, baseType: !160, size: 8)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1583, file: !147, line: 364, baseType: !163, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1576, file: !147, line: 388, baseType: !102, size: 32, offset: 128)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1576, file: !147, line: 396, baseType: !166, size: 32, offset: 160)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1568, file: !138, line: 65, baseType: !1574, size: 32, offset: 32)
!1590 = !DIGlobalVariableExpression(var: !1591, expr: !DIExpression())
!1591 = distinct !DIGlobalVariable(name: "lock", scope: !1486, file: !1566, line: 34, type: !1592, isLocal: true, isDefinition: true)
!1592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !473, line: 43, elements: !474)
!1593 = !DIGlobalVariableExpression(var: !1594, expr: !DIExpression())
!1594 = distinct !DIGlobalVariable(name: "last_load", scope: !1486, file: !1566, line: 36, type: !106, isLocal: true, isDefinition: true)
!1595 = !DIGlobalVariableExpression(var: !1596, expr: !DIExpression())
!1596 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1486, file: !1566, line: 48, type: !106, isLocal: true, isDefinition: true)
!1597 = !DIGlobalVariableExpression(var: !1598, expr: !DIExpression())
!1598 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1486, file: !1566, line: 54, type: !106, isLocal: true, isDefinition: true)
!1599 = !DIGlobalVariableExpression(var: !1600, expr: !DIExpression())
!1600 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1601, file: !1683, line: 22, type: !1685, isLocal: true, isDefinition: true)
!1601 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1602, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1603, retainedTypes: !1604, globals: !1680, splitDebugInlining: false, nameTableKind: None)
!1602 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!1603 = !{!958, !964}
!1604 = !{!1605, !1669, !1674, !1011, !964, !958, !1679, !102}
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 32)
!1606 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1607)
!1607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !959, line: 523, size: 288, elements: !1608)
!1608 = !{!1609, !1628, !1632, !1636, !1640, !1641, !1642, !1646, !1665}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1607, file: !959, line: 524, baseType: !1610, size: 32)
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 32)
!1611 = !DISubroutineType(types: !1612)
!1612 = !{!103, !1613, !999, !1000}
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 32)
!1614 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1615)
!1615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !147, line: 378, size: 192, elements: !1616)
!1616 = !{!1617, !1618, !1619, !1620, !1626, !1627}
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1615, file: !147, line: 380, baseType: !150, size: 32)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1615, file: !147, line: 382, baseType: !13, size: 32, offset: 32)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1615, file: !147, line: 384, baseType: !13, size: 32, offset: 64)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1615, file: !147, line: 386, baseType: !1621, size: 32, offset: 96)
!1621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1622, size: 32)
!1622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !147, line: 351, size: 16, elements: !1623)
!1623 = !{!1624, !1625}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1622, file: !147, line: 359, baseType: !160, size: 8)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1622, file: !147, line: 364, baseType: !163, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1615, file: !147, line: 388, baseType: !102, size: 32, offset: 128)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1615, file: !147, line: 396, baseType: !166, size: 32, offset: 160)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1607, file: !959, line: 530, baseType: !1629, size: 32, offset: 32)
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 32)
!1630 = !DISubroutineType(types: !1631)
!1631 = !{!103, !1613, !1005}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1607, file: !959, line: 532, baseType: !1633, size: 32, offset: 64)
!1633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1634, size: 32)
!1634 = !DISubroutineType(types: !1635)
!1635 = !{!103, !1613, !1011, !1006}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1607, file: !959, line: 535, baseType: !1637, size: 32, offset: 96)
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 32)
!1638 = !DISubroutineType(types: !1639)
!1639 = !{!103, !1613, !1011}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1607, file: !959, line: 537, baseType: !1637, size: 32, offset: 128)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1607, file: !959, line: 539, baseType: !1637, size: 32, offset: 160)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1607, file: !959, line: 541, baseType: !1643, size: 32, offset: 192)
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 32)
!1644 = !DISubroutineType(types: !1645)
!1645 = !{!103, !1613, !999, !958, !964}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1607, file: !959, line: 544, baseType: !1647, size: 32, offset: 224)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 32)
!1648 = !DISubroutineType(types: !1649)
!1649 = !{!103, !1613, !1650, !163}
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 32)
!1651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !959, line: 478, size: 96, elements: !1652)
!1652 = !{!1653, !1659, !1664}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1651, file: !959, line: 482, baseType: !1654, size: 32)
!1654 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1031, line: 33, baseType: !1655)
!1655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1031, line: 29, size: 32, elements: !1656)
!1656 = !{!1657}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1655, file: !1031, line: 30, baseType: !1658, size: 32)
!1658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 32)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1651, file: !959, line: 485, baseType: !1660, size: 32, offset: 32)
!1660 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !959, line: 464, baseType: !1661)
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 32)
!1662 = !DISubroutineType(types: !1663)
!1663 = !{null, !1613, !1650, !1011}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1651, file: !959, line: 493, baseType: !1011, size: 32, offset: 64)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1607, file: !959, line: 547, baseType: !1666, size: 32, offset: 256)
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 32)
!1667 = !DISubroutineType(types: !1668)
!1668 = !{!106, !1613}
!1669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 32)
!1670 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1671)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !959, line: 428, size: 32, elements: !1672)
!1672 = !{!1673}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1671, file: !959, line: 434, baseType: !1011, size: 32)
!1674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1675, size: 32)
!1675 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1676)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !959, line: 441, size: 32, elements: !1677)
!1677 = !{!1678}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1676, file: !959, line: 447, baseType: !1011, size: 32)
!1679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 32)
!1680 = !{!1681, !1599}
!1681 = !DIGlobalVariableExpression(var: !1682, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1682 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1601, file: !1683, line: 37, type: !1684, isLocal: true, isDefinition: true)
!1683 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !352)
!1685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1686, size: 352, elements: !1687)
!1686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1613)
!1687 = !{!1688}
!1688 = !DISubrange(count: 11)
!1689 = !DIGlobalVariableExpression(var: !1690, expr: !DIExpression())
!1690 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1691, file: !1731, line: 139, type: !1738, isLocal: false, isDefinition: true)
!1691 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1692, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1693, globals: !1728, splitDebugInlining: false, nameTableKind: None)
!1692 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!1693 = !{!1694}
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 32)
!1695 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !123, line: 532, baseType: !1696)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 500, size: 1088, elements: !1697)
!1697 = !{!1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1696, file: !123, line: 502, baseType: !127, size: 32)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1696, file: !123, line: 503, baseType: !127, size: 32, offset: 32)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1696, file: !123, line: 504, baseType: !127, size: 32, offset: 64)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1696, file: !123, line: 505, baseType: !127, size: 32, offset: 96)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1696, file: !123, line: 506, baseType: !127, size: 32, offset: 128)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1696, file: !123, line: 507, baseType: !127, size: 32, offset: 160)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1696, file: !123, line: 508, baseType: !127, size: 32, offset: 192)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1696, file: !123, line: 509, baseType: !106, size: 32, offset: 224)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1696, file: !123, line: 510, baseType: !127, size: 32, offset: 256)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1696, file: !123, line: 511, baseType: !127, size: 32, offset: 288)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1696, file: !123, line: 512, baseType: !789, size: 64, offset: 320)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1696, file: !123, line: 513, baseType: !127, size: 32, offset: 384)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1696, file: !123, line: 514, baseType: !127, size: 32, offset: 416)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1696, file: !123, line: 515, baseType: !127, size: 32, offset: 448)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1696, file: !123, line: 516, baseType: !106, size: 32, offset: 480)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1696, file: !123, line: 517, baseType: !127, size: 32, offset: 512)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1696, file: !123, line: 518, baseType: !127, size: 32, offset: 544)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1696, file: !123, line: 519, baseType: !789, size: 64, offset: 576)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1696, file: !123, line: 520, baseType: !127, size: 32, offset: 640)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1696, file: !123, line: 521, baseType: !127, size: 32, offset: 672)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1696, file: !123, line: 522, baseType: !127, size: 32, offset: 704)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1696, file: !123, line: 523, baseType: !106, size: 32, offset: 736)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1696, file: !123, line: 524, baseType: !127, size: 32, offset: 768)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1696, file: !123, line: 525, baseType: !127, size: 32, offset: 800)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1696, file: !123, line: 526, baseType: !789, size: 64, offset: 832)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1696, file: !123, line: 527, baseType: !127, size: 32, offset: 896)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1696, file: !123, line: 528, baseType: !127, size: 32, offset: 928)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1696, file: !123, line: 529, baseType: !789, size: 64, offset: 960)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1696, file: !123, line: 530, baseType: !127, size: 32, offset: 1024)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1696, file: !123, line: 531, baseType: !127, size: 32, offset: 1056)
!1728 = !{!1729, !1732, !1689}
!1729 = !DIGlobalVariableExpression(var: !1730, expr: !DIExpression())
!1730 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1691, file: !1731, line: 137, type: !106, isLocal: false, isDefinition: true)
!1731 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1732 = !DIGlobalVariableExpression(var: !1733, expr: !DIExpression())
!1733 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1691, file: !1731, line: 138, type: !1734, isLocal: false, isDefinition: true)
!1734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1735, size: 128, elements: !1736)
!1735 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !160)
!1736 = !{!1737}
!1737 = !DISubrange(count: 16)
!1738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1735, size: 64, elements: !1410)
!1739 = !DIGlobalVariableExpression(var: !1740, expr: !DIExpression())
!1740 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1741, file: !1744, line: 23, type: !1745, isLocal: false, isDefinition: true)
!1741 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1742, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1743, splitDebugInlining: false, nameTableKind: None)
!1742 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!1743 = !{!1739}
!1744 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1745 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1746 = !DIGlobalVariableExpression(var: !1747, expr: !DIExpression())
!1747 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1748, file: !1752, line: 86, type: !2000, isLocal: false, isDefinition: true, align: 512)
!1748 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1749, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1750, retainedTypes: !1759, globals: !1833, splitDebugInlining: false, nameTableKind: None)
!1749 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!1750 = !{!1751, !30, !577}
!1751 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1752, line: 63, baseType: !32, size: 32, elements: !1753)
!1752 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1753 = !{!1754, !1755, !1756, !1757, !1758}
!1754 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1755 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1756 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1757 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1758 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1759 = !{!22, !352, !102, !103, !1760, !1081, !106, !1791, !736, !160, !1816}
!1760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 32)
!1761 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1762)
!1762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1763, line: 51, size: 64, elements: !1764)
!1763 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1764 = !{!1765, !1786}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1762, file: !1763, line: 52, baseType: !1766, size: 32)
!1766 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1763, line: 38, baseType: !1767)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 32)
!1768 = !DISubroutineType(types: !1769)
!1769 = !{!103, !1770, !1785, !417}
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 32)
!1771 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1772)
!1772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !147, line: 378, size: 192, elements: !1773)
!1773 = !{!1774, !1775, !1776, !1777, !1783, !1784}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1772, file: !147, line: 380, baseType: !150, size: 32)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1772, file: !147, line: 382, baseType: !13, size: 32, offset: 32)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1772, file: !147, line: 384, baseType: !13, size: 32, offset: 64)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1772, file: !147, line: 386, baseType: !1778, size: 32, offset: 96)
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 32)
!1779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !147, line: 351, size: 16, elements: !1780)
!1780 = !{!1781, !1782}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1779, file: !147, line: 359, baseType: !160, size: 8)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1779, file: !147, line: 364, baseType: !163, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1772, file: !147, line: 388, baseType: !102, size: 32, offset: 128)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1772, file: !147, line: 396, baseType: !166, size: 32, offset: 160)
!1785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 32)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1762, file: !1763, line: 53, baseType: !1787, size: 32, offset: 32)
!1787 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1763, line: 47, baseType: !1788)
!1788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1789, size: 32)
!1789 = !DISubroutineType(types: !1790)
!1790 = !{!103, !1770, !1785, !417, !106}
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 32)
!1792 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !508, line: 468, baseType: !1793)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 445, size: 1120, elements: !1794)
!1794 = !{!1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1793, file: !508, line: 447, baseType: !512, size: 32)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1793, file: !508, line: 448, baseType: !127, size: 32, offset: 32)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1793, file: !508, line: 449, baseType: !127, size: 32, offset: 64)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1793, file: !508, line: 450, baseType: !127, size: 32, offset: 96)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1793, file: !508, line: 451, baseType: !127, size: 32, offset: 128)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1793, file: !508, line: 452, baseType: !127, size: 32, offset: 160)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1793, file: !508, line: 453, baseType: !1542, size: 96, offset: 192)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1793, file: !508, line: 454, baseType: !127, size: 32, offset: 288)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1793, file: !508, line: 455, baseType: !127, size: 32, offset: 320)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1793, file: !508, line: 456, baseType: !127, size: 32, offset: 352)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1793, file: !508, line: 457, baseType: !127, size: 32, offset: 384)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1793, file: !508, line: 458, baseType: !127, size: 32, offset: 416)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1793, file: !508, line: 459, baseType: !127, size: 32, offset: 448)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1793, file: !508, line: 460, baseType: !127, size: 32, offset: 480)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1793, file: !508, line: 461, baseType: !1553, size: 64, offset: 512)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1793, file: !508, line: 462, baseType: !512, size: 32, offset: 576)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1793, file: !508, line: 463, baseType: !512, size: 32, offset: 608)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1793, file: !508, line: 464, baseType: !1557, size: 128, offset: 640)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1793, file: !508, line: 465, baseType: !1559, size: 160, offset: 768)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1793, file: !508, line: 466, baseType: !1561, size: 160, offset: 928)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1793, file: !508, line: 467, baseType: !127, size: 32, offset: 1088)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 32)
!1817 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !508, line: 426, baseType: !1818)
!1818 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 411, size: 28704, elements: !1819)
!1819 = !{!1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1818, file: !508, line: 413, baseType: !1505, size: 256)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1818, file: !508, line: 414, baseType: !1507, size: 768, offset: 256)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1818, file: !508, line: 415, baseType: !1505, size: 256, offset: 1024)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1818, file: !508, line: 416, baseType: !1507, size: 768, offset: 1280)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1818, file: !508, line: 417, baseType: !1505, size: 256, offset: 2048)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1818, file: !508, line: 418, baseType: !1507, size: 768, offset: 2304)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1818, file: !508, line: 419, baseType: !1505, size: 256, offset: 3072)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1818, file: !508, line: 420, baseType: !1507, size: 768, offset: 3328)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1818, file: !508, line: 421, baseType: !1505, size: 256, offset: 4096)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1818, file: !508, line: 422, baseType: !1518, size: 1792, offset: 4352)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1818, file: !508, line: 423, baseType: !1522, size: 1920, offset: 6144)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1818, file: !508, line: 424, baseType: !1527, size: 20608, offset: 8064)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1818, file: !508, line: 425, baseType: !127, size: 32, offset: 28672)
!1833 = !{!1834, !1956, !1965, !1967, !1746, !1970, !1972, !1977}
!1834 = !DIGlobalVariableExpression(var: !1835, expr: !DIExpression())
!1835 = distinct !DIGlobalVariable(name: "_kernel", scope: !1748, file: !1752, line: 40, type: !1836, isLocal: false, isDefinition: true)
!1836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !399, line: 158, size: 288, elements: !1837)
!1837 = !{!1838, !1951}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1836, file: !399, line: 159, baseType: !1839, size: 192)
!1839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1840, size: 192, elements: !497)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !399, line: 100, size: 192, elements: !1841)
!1841 = !{!1842, !1843, !1844, !1945, !1946, !1947, !1948}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1840, file: !399, line: 102, baseType: !106, size: 32)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1840, file: !399, line: 105, baseType: !1081, size: 32, offset: 32)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1840, file: !399, line: 108, baseType: !1845, size: 32, offset: 64)
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 32)
!1846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !363, line: 245, size: 1024, elements: !1847)
!1847 = !{!1848, !1906, !1918, !1919, !1920, !1921, !1927, !1940}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1846, file: !363, line: 247, baseType: !1849, size: 384)
!1849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !363, line: 57, size: 384, elements: !1850)
!1850 = !{!1851, !1875, !1882, !1883, !1884, !1893, !1894, !1895}
!1851 = !DIDerivedType(tag: DW_TAG_member, scope: !1849, file: !363, line: 60, baseType: !1852, size: 64)
!1852 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1849, file: !363, line: 60, size: 64, elements: !1853)
!1853 = !{!1854, !1869}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1852, file: !363, line: 61, baseType: !1855, size: 64)
!1855 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !373, line: 49, baseType: !1856)
!1856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !373, line: 37, size: 64, elements: !1857)
!1857 = !{!1858, !1864}
!1858 = !DIDerivedType(tag: DW_TAG_member, scope: !1856, file: !373, line: 38, baseType: !1859, size: 32)
!1859 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1856, file: !373, line: 38, size: 32, elements: !1860)
!1860 = !{!1861, !1863}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1859, file: !373, line: 39, baseType: !1862, size: 32)
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 32)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1859, file: !373, line: 40, baseType: !1862, size: 32)
!1864 = !DIDerivedType(tag: DW_TAG_member, scope: !1856, file: !373, line: 42, baseType: !1865, size: 32, offset: 32)
!1865 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1856, file: !373, line: 42, size: 32, elements: !1866)
!1866 = !{!1867, !1868}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1865, file: !373, line: 43, baseType: !1862, size: 32)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1865, file: !373, line: 44, baseType: !1862, size: 32)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1852, file: !363, line: 62, baseType: !1870, size: 64)
!1870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !389, line: 49, size: 64, elements: !1871)
!1871 = !{!1872}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1870, file: !389, line: 50, baseType: !1873, size: 64)
!1873 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1874, size: 64, elements: !394)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 32)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1849, file: !363, line: 68, baseType: !1876, size: 32, offset: 64)
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1877, size: 32)
!1877 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !399, line: 233, baseType: !1878)
!1878 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !399, line: 231, size: 64, elements: !1879)
!1879 = !{!1880}
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1878, file: !399, line: 232, baseType: !1881, size: 64)
!1881 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !373, line: 48, baseType: !1856)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1849, file: !363, line: 71, baseType: !160, size: 8, offset: 96)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1849, file: !363, line: 74, baseType: !160, size: 8, offset: 104)
!1884 = !DIDerivedType(tag: DW_TAG_member, scope: !1849, file: !363, line: 90, baseType: !1885, size: 16, offset: 112)
!1885 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1849, file: !363, line: 90, size: 16, elements: !1886)
!1886 = !{!1887, !1892}
!1887 = !DIDerivedType(tag: DW_TAG_member, scope: !1885, file: !363, line: 91, baseType: !1888, size: 16)
!1888 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1885, file: !363, line: 91, size: 16, elements: !1889)
!1889 = !{!1890, !1891}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1888, file: !363, line: 96, baseType: !413, size: 8)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1888, file: !363, line: 97, baseType: !160, size: 8, offset: 8)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1885, file: !363, line: 100, baseType: !417, size: 16)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1849, file: !363, line: 107, baseType: !106, size: 32, offset: 128)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1849, file: !363, line: 127, baseType: !102, size: 32, offset: 160)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1849, file: !363, line: 131, baseType: !1896, size: 192, offset: 192)
!1896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !399, line: 244, size: 192, elements: !1897)
!1897 = !{!1898, !1899, !1905}
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1896, file: !399, line: 245, baseType: !1855, size: 64)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1896, file: !399, line: 246, baseType: !1900, size: 32, offset: 64)
!1900 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !399, line: 242, baseType: !1901)
!1901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 32)
!1902 = !DISubroutineType(types: !1903)
!1903 = !{null, !1904}
!1904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 32)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1896, file: !399, line: 249, baseType: !432, size: 64, offset: 128)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1846, file: !363, line: 250, baseType: !1907, size: 288, offset: 384)
!1907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !1908)
!1908 = !{!1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1907, file: !436, line: 26, baseType: !106, size: 32)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1907, file: !436, line: 27, baseType: !106, size: 32, offset: 32)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1907, file: !436, line: 28, baseType: !106, size: 32, offset: 64)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1907, file: !436, line: 29, baseType: !106, size: 32, offset: 96)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1907, file: !436, line: 30, baseType: !106, size: 32, offset: 128)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1907, file: !436, line: 31, baseType: !106, size: 32, offset: 160)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1907, file: !436, line: 32, baseType: !106, size: 32, offset: 192)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1907, file: !436, line: 33, baseType: !106, size: 32, offset: 224)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1907, file: !436, line: 34, baseType: !106, size: 32, offset: 256)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1846, file: !363, line: 253, baseType: !102, size: 32, offset: 672)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1846, file: !363, line: 256, baseType: !1877, size: 64, offset: 704)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1846, file: !363, line: 294, baseType: !103, size: 32, offset: 768)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1846, file: !363, line: 300, baseType: !1922, size: 96, offset: 800)
!1922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !363, line: 149, size: 96, elements: !1923)
!1923 = !{!1924, !1925, !1926}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1922, file: !363, line: 153, baseType: !22, size: 32)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1922, file: !363, line: 162, baseType: !352, size: 32, offset: 32)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1922, file: !363, line: 168, baseType: !352, size: 32, offset: 64)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1846, file: !363, line: 325, baseType: !1928, size: 32, offset: 896)
!1928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1929, size: 32)
!1929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !459, line: 5073, size: 160, elements: !1930)
!1930 = !{!1931, !1937, !1938}
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1929, file: !459, line: 5074, baseType: !1932, size: 96)
!1932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !463, line: 56, size: 96, elements: !1933)
!1933 = !{!1934, !1935, !1936}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1932, file: !463, line: 57, baseType: !466, size: 32)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1932, file: !463, line: 58, baseType: !102, size: 32, offset: 32)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1932, file: !463, line: 59, baseType: !352, size: 32, offset: 64)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1929, file: !459, line: 5075, baseType: !1877, size: 64, offset: 96)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1929, file: !459, line: 5076, baseType: !1939, offset: 160)
!1939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !473, line: 43, elements: !474)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1846, file: !363, line: 343, baseType: !1941, size: 64, offset: 928)
!1941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !1942)
!1942 = !{!1943, !1944}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1941, file: !436, line: 63, baseType: !106, size: 32)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1941, file: !436, line: 66, baseType: !106, size: 32, offset: 32)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1840, file: !399, line: 111, baseType: !1845, size: 32, offset: 96)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1840, file: !399, line: 124, baseType: !103, size: 32, offset: 128)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1840, file: !399, line: 127, baseType: !160, size: 8, offset: 160)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1840, file: !399, line: 153, baseType: !1949, offset: 168)
!1949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !1950, line: 33, elements: !474)
!1950 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1836, file: !399, line: 170, baseType: !1952, size: 96, offset: 192)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !399, line: 83, size: 96, elements: !1953)
!1953 = !{!1954, !1955}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1952, file: !399, line: 86, baseType: !1845, size: 32)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !1952, file: !399, line: 90, baseType: !1881, size: 64, offset: 32)
!1956 = !DIGlobalVariableExpression(var: !1957, expr: !DIExpression())
!1957 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1748, file: !1752, line: 43, type: !1958, isLocal: false, isDefinition: true, align: 512)
!1958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1959, size: 8704, elements: !1963)
!1959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1960, line: 47, size: 8, elements: !1961)
!1960 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1961 = !{!1962}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1959, file: !1960, line: 48, baseType: !152, size: 8)
!1963 = !{!1964}
!1964 = !DISubrange(count: 1088)
!1965 = !DIGlobalVariableExpression(var: !1966, expr: !DIExpression())
!1966 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1748, file: !1752, line: 44, type: !1846, isLocal: false, isDefinition: true)
!1967 = !DIGlobalVariableExpression(var: !1968, expr: !DIExpression())
!1968 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1748, file: !1752, line: 48, type: !1969, isLocal: false, isDefinition: true)
!1969 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1846, size: 1024, elements: !497)
!1970 = !DIGlobalVariableExpression(var: !1971, expr: !DIExpression())
!1971 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1748, file: !1752, line: 217, type: !163, isLocal: false, isDefinition: true)
!1972 = !DIGlobalVariableExpression(var: !1973, expr: !DIExpression())
!1973 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1748, file: !1752, line: 50, type: !1974, isLocal: true, isDefinition: true, align: 512)
!1974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1959, size: 3072, elements: !1975)
!1975 = !{!498, !1976}
!1976 = !DISubrange(count: 384)
!1977 = !DIGlobalVariableExpression(var: !1978, expr: !DIExpression())
!1978 = distinct !DIGlobalVariable(name: "levels", scope: !1979, file: !1752, line: 232, type: !1999, isLocal: true, isDefinition: true)
!1979 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1752, file: !1752, line: 230, type: !1980, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !1982)
!1980 = !DISubroutineType(types: !1981)
!1981 = !{null, !1751}
!1982 = !{!1983, !1984, !1994, !1998}
!1983 = !DILocalVariable(name: "level", arg: 1, scope: !1979, file: !1752, line: 230, type: !1751)
!1984 = !DILocalVariable(name: "entry", scope: !1979, file: !1752, line: 244, type: !1985)
!1985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1986, size: 32)
!1986 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1987)
!1987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !138, line: 51, size: 64, elements: !1988)
!1988 = !{!1989, !1993}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1987, file: !138, line: 60, baseType: !1990, size: 32)
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 32)
!1991 = !DISubroutineType(types: !1992)
!1992 = !{!103, !1770}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1987, file: !138, line: 65, baseType: !1770, size: 32, offset: 32)
!1994 = !DILocalVariable(name: "dev", scope: !1995, file: !1752, line: 247, type: !1770)
!1995 = distinct !DILexicalBlock(scope: !1996, file: !1752, line: 246, column: 64)
!1996 = distinct !DILexicalBlock(scope: !1997, file: !1752, line: 246, column: 2)
!1997 = distinct !DILexicalBlock(scope: !1979, file: !1752, line: 246, column: 2)
!1998 = !DILocalVariable(name: "rc", scope: !1995, file: !1752, line: 248, type: !103)
!1999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1985, size: 192, elements: !1126)
!2000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1959, size: 16896, elements: !2001)
!2001 = !{!498, !2002}
!2002 = !DISubrange(count: 2112)
!2003 = !DIGlobalVariableExpression(var: !2004, expr: !DIExpression())
!2004 = distinct !DIGlobalVariable(name: "states_str", scope: !2005, file: !2006, line: 276, type: !2127, isLocal: true, isDefinition: true)
!2005 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2006, file: !2006, line: 271, type: !2007, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !2118)
!2006 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2007 = !DISubroutineType(types: !2008)
!2008 = !{!150, !2009, !1081, !352}
!2009 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !363, line: 347, baseType: !2010)
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2011, size: 32)
!2011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !363, line: 245, size: 1024, elements: !2012)
!2012 = !{!2013, !2071, !2083, !2084, !2085, !2086, !2092, !2105}
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2011, file: !363, line: 247, baseType: !2014, size: 384)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !363, line: 57, size: 384, elements: !2015)
!2015 = !{!2016, !2040, !2047, !2048, !2049, !2058, !2059, !2060}
!2016 = !DIDerivedType(tag: DW_TAG_member, scope: !2014, file: !363, line: 60, baseType: !2017, size: 64)
!2017 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2014, file: !363, line: 60, size: 64, elements: !2018)
!2018 = !{!2019, !2034}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2017, file: !363, line: 61, baseType: !2020, size: 64)
!2020 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !373, line: 49, baseType: !2021)
!2021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !373, line: 37, size: 64, elements: !2022)
!2022 = !{!2023, !2029}
!2023 = !DIDerivedType(tag: DW_TAG_member, scope: !2021, file: !373, line: 38, baseType: !2024, size: 32)
!2024 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2021, file: !373, line: 38, size: 32, elements: !2025)
!2025 = !{!2026, !2028}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2024, file: !373, line: 39, baseType: !2027, size: 32)
!2027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 32)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2024, file: !373, line: 40, baseType: !2027, size: 32)
!2029 = !DIDerivedType(tag: DW_TAG_member, scope: !2021, file: !373, line: 42, baseType: !2030, size: 32, offset: 32)
!2030 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2021, file: !373, line: 42, size: 32, elements: !2031)
!2031 = !{!2032, !2033}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2030, file: !373, line: 43, baseType: !2027, size: 32)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2030, file: !373, line: 44, baseType: !2027, size: 32)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2017, file: !363, line: 62, baseType: !2035, size: 64)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !389, line: 49, size: 64, elements: !2036)
!2036 = !{!2037}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2035, file: !389, line: 50, baseType: !2038, size: 64)
!2038 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2039, size: 64, elements: !394)
!2039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 32)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2014, file: !363, line: 68, baseType: !2041, size: 32, offset: 64)
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 32)
!2042 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !399, line: 233, baseType: !2043)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !399, line: 231, size: 64, elements: !2044)
!2044 = !{!2045}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2043, file: !399, line: 232, baseType: !2046, size: 64)
!2046 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !373, line: 48, baseType: !2021)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2014, file: !363, line: 71, baseType: !160, size: 8, offset: 96)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2014, file: !363, line: 74, baseType: !160, size: 8, offset: 104)
!2049 = !DIDerivedType(tag: DW_TAG_member, scope: !2014, file: !363, line: 90, baseType: !2050, size: 16, offset: 112)
!2050 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2014, file: !363, line: 90, size: 16, elements: !2051)
!2051 = !{!2052, !2057}
!2052 = !DIDerivedType(tag: DW_TAG_member, scope: !2050, file: !363, line: 91, baseType: !2053, size: 16)
!2053 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2050, file: !363, line: 91, size: 16, elements: !2054)
!2054 = !{!2055, !2056}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2053, file: !363, line: 96, baseType: !413, size: 8)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2053, file: !363, line: 97, baseType: !160, size: 8, offset: 8)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2050, file: !363, line: 100, baseType: !417, size: 16)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2014, file: !363, line: 107, baseType: !106, size: 32, offset: 128)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2014, file: !363, line: 127, baseType: !102, size: 32, offset: 160)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2014, file: !363, line: 131, baseType: !2061, size: 192, offset: 192)
!2061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !399, line: 244, size: 192, elements: !2062)
!2062 = !{!2063, !2064, !2070}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2061, file: !399, line: 245, baseType: !2020, size: 64)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2061, file: !399, line: 246, baseType: !2065, size: 32, offset: 64)
!2065 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !399, line: 242, baseType: !2066)
!2066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2067, size: 32)
!2067 = !DISubroutineType(types: !2068)
!2068 = !{null, !2069}
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2061, size: 32)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2061, file: !399, line: 249, baseType: !432, size: 64, offset: 128)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2011, file: !363, line: 250, baseType: !2072, size: 288, offset: 384)
!2072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !2073)
!2073 = !{!2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2072, file: !436, line: 26, baseType: !106, size: 32)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2072, file: !436, line: 27, baseType: !106, size: 32, offset: 32)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2072, file: !436, line: 28, baseType: !106, size: 32, offset: 64)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2072, file: !436, line: 29, baseType: !106, size: 32, offset: 96)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2072, file: !436, line: 30, baseType: !106, size: 32, offset: 128)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2072, file: !436, line: 31, baseType: !106, size: 32, offset: 160)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2072, file: !436, line: 32, baseType: !106, size: 32, offset: 192)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2072, file: !436, line: 33, baseType: !106, size: 32, offset: 224)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2072, file: !436, line: 34, baseType: !106, size: 32, offset: 256)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2011, file: !363, line: 253, baseType: !102, size: 32, offset: 672)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2011, file: !363, line: 256, baseType: !2042, size: 64, offset: 704)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2011, file: !363, line: 294, baseType: !103, size: 32, offset: 768)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2011, file: !363, line: 300, baseType: !2087, size: 96, offset: 800)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !363, line: 149, size: 96, elements: !2088)
!2088 = !{!2089, !2090, !2091}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2087, file: !363, line: 153, baseType: !22, size: 32)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2087, file: !363, line: 162, baseType: !352, size: 32, offset: 32)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2087, file: !363, line: 168, baseType: !352, size: 32, offset: 64)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2011, file: !363, line: 325, baseType: !2093, size: 32, offset: 896)
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 32)
!2094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !459, line: 5073, size: 160, elements: !2095)
!2095 = !{!2096, !2102, !2103}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2094, file: !459, line: 5074, baseType: !2097, size: 96)
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !463, line: 56, size: 96, elements: !2098)
!2098 = !{!2099, !2100, !2101}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2097, file: !463, line: 57, baseType: !466, size: 32)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2097, file: !463, line: 58, baseType: !102, size: 32, offset: 32)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2097, file: !463, line: 59, baseType: !352, size: 32, offset: 64)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2094, file: !459, line: 5075, baseType: !2042, size: 64, offset: 96)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2094, file: !459, line: 5076, baseType: !2104, offset: 160)
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !473, line: 43, elements: !474)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2011, file: !363, line: 343, baseType: !2106, size: 64, offset: 928)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !2107)
!2107 = !{!2108, !2109}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2106, file: !436, line: 63, baseType: !106, size: 32)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2106, file: !436, line: 66, baseType: !106, size: 32, offset: 32)
!2110 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2111, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2112, globals: !2114, splitDebugInlining: false, nameTableKind: None)
!2111 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!2112 = !{!102, !150, !1490, !160, !103, !2113, !24, !352, !1081, !22, !106, !1402}
!2113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2020, size: 32)
!2114 = !{!2003, !2115}
!2115 = !DIGlobalVariableExpression(var: !2116, expr: !DIExpression())
!2116 = distinct !DIGlobalVariable(name: "states_sz", scope: !2005, file: !2006, line: 279, type: !2117, isLocal: true, isDefinition: true)
!2117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1684, size: 256, elements: !1410)
!2118 = !{!2119, !2120, !2121, !2122, !2123, !2124, !2125}
!2119 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2005, file: !2006, line: 271, type: !2009)
!2120 = !DILocalVariable(name: "buf", arg: 2, scope: !2005, file: !2006, line: 271, type: !1081)
!2121 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2005, file: !2006, line: 271, type: !352)
!2122 = !DILocalVariable(name: "off", scope: !2005, file: !2006, line: 273, type: !352)
!2123 = !DILocalVariable(name: "bit", scope: !2005, file: !2006, line: 274, type: !160)
!2124 = !DILocalVariable(name: "thread_state", scope: !2005, file: !2006, line: 275, type: !160)
!2125 = !DILocalVariable(name: "index", scope: !2126, file: !2006, line: 293, type: !160)
!2126 = distinct !DILexicalBlock(scope: !2005, file: !2006, line: 293, column: 2)
!2127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 256, elements: !1410)
!2128 = !DIGlobalVariableExpression(var: !2129, expr: !DIExpression())
!2129 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2130, file: !2238, line: 56, type: !2227, isLocal: false, isDefinition: true)
!2130 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2131, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2132, globals: !2235, splitDebugInlining: false, nameTableKind: None)
!2131 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!2132 = !{!2133, !1081, !102, !2233, !1785, !1490, !736, !103, !106, !1402, !2234}
!2133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2134, size: 32)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !363, line: 245, size: 1024, elements: !2135)
!2135 = !{!2136, !2194, !2206, !2207, !2208, !2209, !2215, !2228}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2134, file: !363, line: 247, baseType: !2137, size: 384)
!2137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !363, line: 57, size: 384, elements: !2138)
!2138 = !{!2139, !2163, !2170, !2171, !2172, !2181, !2182, !2183}
!2139 = !DIDerivedType(tag: DW_TAG_member, scope: !2137, file: !363, line: 60, baseType: !2140, size: 64)
!2140 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2137, file: !363, line: 60, size: 64, elements: !2141)
!2141 = !{!2142, !2157}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2140, file: !363, line: 61, baseType: !2143, size: 64)
!2143 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !373, line: 49, baseType: !2144)
!2144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !373, line: 37, size: 64, elements: !2145)
!2145 = !{!2146, !2152}
!2146 = !DIDerivedType(tag: DW_TAG_member, scope: !2144, file: !373, line: 38, baseType: !2147, size: 32)
!2147 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2144, file: !373, line: 38, size: 32, elements: !2148)
!2148 = !{!2149, !2151}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2147, file: !373, line: 39, baseType: !2150, size: 32)
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 32)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2147, file: !373, line: 40, baseType: !2150, size: 32)
!2152 = !DIDerivedType(tag: DW_TAG_member, scope: !2144, file: !373, line: 42, baseType: !2153, size: 32, offset: 32)
!2153 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2144, file: !373, line: 42, size: 32, elements: !2154)
!2154 = !{!2155, !2156}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2153, file: !373, line: 43, baseType: !2150, size: 32)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2153, file: !373, line: 44, baseType: !2150, size: 32)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2140, file: !363, line: 62, baseType: !2158, size: 64)
!2158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !389, line: 49, size: 64, elements: !2159)
!2159 = !{!2160}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2158, file: !389, line: 50, baseType: !2161, size: 64)
!2161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2162, size: 64, elements: !394)
!2162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 32)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2137, file: !363, line: 68, baseType: !2164, size: 32, offset: 64)
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2165, size: 32)
!2165 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !399, line: 233, baseType: !2166)
!2166 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !399, line: 231, size: 64, elements: !2167)
!2167 = !{!2168}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2166, file: !399, line: 232, baseType: !2169, size: 64)
!2169 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !373, line: 48, baseType: !2144)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2137, file: !363, line: 71, baseType: !160, size: 8, offset: 96)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2137, file: !363, line: 74, baseType: !160, size: 8, offset: 104)
!2172 = !DIDerivedType(tag: DW_TAG_member, scope: !2137, file: !363, line: 90, baseType: !2173, size: 16, offset: 112)
!2173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2137, file: !363, line: 90, size: 16, elements: !2174)
!2174 = !{!2175, !2180}
!2175 = !DIDerivedType(tag: DW_TAG_member, scope: !2173, file: !363, line: 91, baseType: !2176, size: 16)
!2176 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2173, file: !363, line: 91, size: 16, elements: !2177)
!2177 = !{!2178, !2179}
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2176, file: !363, line: 96, baseType: !413, size: 8)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2176, file: !363, line: 97, baseType: !160, size: 8, offset: 8)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2173, file: !363, line: 100, baseType: !417, size: 16)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2137, file: !363, line: 107, baseType: !106, size: 32, offset: 128)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2137, file: !363, line: 127, baseType: !102, size: 32, offset: 160)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2137, file: !363, line: 131, baseType: !2184, size: 192, offset: 192)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !399, line: 244, size: 192, elements: !2185)
!2185 = !{!2186, !2187, !2193}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2184, file: !399, line: 245, baseType: !2143, size: 64)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2184, file: !399, line: 246, baseType: !2188, size: 32, offset: 64)
!2188 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !399, line: 242, baseType: !2189)
!2189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2190, size: 32)
!2190 = !DISubroutineType(types: !2191)
!2191 = !{null, !2192}
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 32)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2184, file: !399, line: 249, baseType: !432, size: 64, offset: 128)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2134, file: !363, line: 250, baseType: !2195, size: 288, offset: 384)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !2196)
!2196 = !{!2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2195, file: !436, line: 26, baseType: !106, size: 32)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2195, file: !436, line: 27, baseType: !106, size: 32, offset: 32)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2195, file: !436, line: 28, baseType: !106, size: 32, offset: 64)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2195, file: !436, line: 29, baseType: !106, size: 32, offset: 96)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2195, file: !436, line: 30, baseType: !106, size: 32, offset: 128)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2195, file: !436, line: 31, baseType: !106, size: 32, offset: 160)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2195, file: !436, line: 32, baseType: !106, size: 32, offset: 192)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2195, file: !436, line: 33, baseType: !106, size: 32, offset: 224)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2195, file: !436, line: 34, baseType: !106, size: 32, offset: 256)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2134, file: !363, line: 253, baseType: !102, size: 32, offset: 672)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2134, file: !363, line: 256, baseType: !2165, size: 64, offset: 704)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2134, file: !363, line: 294, baseType: !103, size: 32, offset: 768)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2134, file: !363, line: 300, baseType: !2210, size: 96, offset: 800)
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !363, line: 149, size: 96, elements: !2211)
!2211 = !{!2212, !2213, !2214}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2210, file: !363, line: 153, baseType: !22, size: 32)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2210, file: !363, line: 162, baseType: !352, size: 32, offset: 32)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2210, file: !363, line: 168, baseType: !352, size: 32, offset: 64)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2134, file: !363, line: 325, baseType: !2216, size: 32, offset: 896)
!2216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2217, size: 32)
!2217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !459, line: 5073, size: 160, elements: !2218)
!2218 = !{!2219, !2225, !2226}
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2217, file: !459, line: 5074, baseType: !2220, size: 96)
!2220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !463, line: 56, size: 96, elements: !2221)
!2221 = !{!2222, !2223, !2224}
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2220, file: !463, line: 57, baseType: !466, size: 32)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2220, file: !463, line: 58, baseType: !102, size: 32, offset: 32)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2220, file: !463, line: 59, baseType: !352, size: 32, offset: 64)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2217, file: !459, line: 5075, baseType: !2165, size: 64, offset: 96)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2217, file: !459, line: 5076, baseType: !2227, offset: 160)
!2227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !473, line: 43, elements: !474)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2134, file: !363, line: 343, baseType: !2229, size: 64, offset: 928)
!2229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !2230)
!2230 = !{!2231, !2232}
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2229, file: !436, line: 63, baseType: !106, size: 32)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2229, file: !436, line: 66, baseType: !106, size: 32, offset: 32)
!2233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2162, size: 32)
!2234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2143, size: 32)
!2235 = !{!2128, !2236, !2239, !2241}
!2236 = !DIGlobalVariableExpression(var: !2237, expr: !DIExpression())
!2237 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2130, file: !2238, line: 404, type: !103, isLocal: true, isDefinition: true)
!2238 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2239 = !DIGlobalVariableExpression(var: !2240, expr: !DIExpression())
!2240 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2130, file: !2238, line: 405, type: !103, isLocal: true, isDefinition: true)
!2241 = !DIGlobalVariableExpression(var: !2242, expr: !DIExpression())
!2242 = distinct !DIGlobalVariable(name: "pending_current", scope: !2130, file: !2238, line: 425, type: !2133, isLocal: true, isDefinition: true)
!2243 = !DIGlobalVariableExpression(var: !2244, expr: !DIExpression())
!2244 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2245, file: !2275, line: 15, type: !1402, isLocal: true, isDefinition: true)
!2245 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2246, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2247, globals: !2272, splitDebugInlining: false, nameTableKind: None)
!2246 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!2247 = !{!1490, !102, !736, !106, !1402, !103, !2248, !1081, !432}
!2248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2249, size: 32)
!2249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !399, line: 244, size: 192, elements: !2250)
!2250 = !{!2251, !2266, !2271}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2249, file: !399, line: 245, baseType: !2252, size: 64)
!2252 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !373, line: 49, baseType: !2253)
!2253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !373, line: 37, size: 64, elements: !2254)
!2254 = !{!2255, !2261}
!2255 = !DIDerivedType(tag: DW_TAG_member, scope: !2253, file: !373, line: 38, baseType: !2256, size: 32)
!2256 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2253, file: !373, line: 38, size: 32, elements: !2257)
!2257 = !{!2258, !2260}
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2256, file: !373, line: 39, baseType: !2259, size: 32)
!2259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 32)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2256, file: !373, line: 40, baseType: !2259, size: 32)
!2261 = !DIDerivedType(tag: DW_TAG_member, scope: !2253, file: !373, line: 42, baseType: !2262, size: 32, offset: 32)
!2262 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2253, file: !373, line: 42, size: 32, elements: !2263)
!2263 = !{!2264, !2265}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2262, file: !373, line: 43, baseType: !2259, size: 32)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2262, file: !373, line: 44, baseType: !2259, size: 32)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2249, file: !399, line: 246, baseType: !2267, size: 32, offset: 64)
!2267 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !399, line: 242, baseType: !2268)
!2268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2269, size: 32)
!2269 = !DISubroutineType(types: !2270)
!2270 = !{null, !2248}
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2249, file: !399, line: 249, baseType: !432, size: 64, offset: 128)
!2272 = !{!2243, !2273, !2277, !2279}
!2273 = !DIGlobalVariableExpression(var: !2274, expr: !DIExpression())
!2274 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2245, file: !2275, line: 19, type: !2276, isLocal: true, isDefinition: true)
!2275 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !473, line: 43, elements: !474)
!2277 = !DIGlobalVariableExpression(var: !2278, expr: !DIExpression())
!2278 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2245, file: !2275, line: 25, type: !103, isLocal: true, isDefinition: true)
!2279 = !DIGlobalVariableExpression(var: !2280, expr: !DIExpression())
!2280 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2245, file: !2275, line: 17, type: !2281, isLocal: true, isDefinition: true)
!2281 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !373, line: 48, baseType: !2253)
!2282 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2283, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2283 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!2284 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2285, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2285 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!2286 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2287, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2288, retainedTypes: !2308, splitDebugInlining: false, nameTableKind: None)
!2287 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!2288 = !{!2289, !2297}
!2289 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2290, line: 69, baseType: !32, size: 32, elements: !2291)
!2290 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2291 = !{!2292, !2293, !2294, !2295, !2296}
!2292 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2293 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2294 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2295 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2296 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2297 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2290, line: 56, baseType: !32, size: 32, elements: !2298)
!2298 = !{!2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307}
!2299 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2300 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2301 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2302 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2303 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2304 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2305 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2306 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2307 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2308 = !{!103, !2289, !2297, !2309, !414, !170, !2311, !2312, !161, !418, !150, !352, !102, !22, !32, !2314, !2315, !2316, !2317, !2318, !433, !2319, !2310, !2320, !2321, !2322, !2323}
!2309 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2290, line: 31, baseType: !2310)
!2310 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !433)
!2311 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !353, line: 329, baseType: !32)
!2312 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2290, line: 32, baseType: !2313)
!2313 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1403)
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 32)
!2316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 32)
!2317 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2317, size: 32)
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 32)
!2320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2310, size: 32)
!2321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 32)
!2322 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !353, line: 145, baseType: !103)
!2323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2322, size: 32)
!2324 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2325, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2325 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!2326 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2327, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2328, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2327 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!2328 = !{!2329, !30}
!2329 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2330, line: 27, baseType: !32, size: 32, elements: !2331)
!2330 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2331 = !{!2332, !2333, !2334, !2335, !2336}
!2332 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2333 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2334 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2335 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2336 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2337 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2338, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2339, retainedTypes: !2340, splitDebugInlining: false, nameTableKind: None)
!2338 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!2339 = !{!577, !2329, !30}
!2340 = !{!762, !2341, !102, !103, !736, !106, !160, !2358}
!2341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2342, size: 32)
!2342 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !508, line: 426, baseType: !2343)
!2343 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 411, size: 28704, elements: !2344)
!2344 = !{!2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357}
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2343, file: !508, line: 413, baseType: !1505, size: 256)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2343, file: !508, line: 414, baseType: !1507, size: 768, offset: 256)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2343, file: !508, line: 415, baseType: !1505, size: 256, offset: 1024)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2343, file: !508, line: 416, baseType: !1507, size: 768, offset: 1280)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2343, file: !508, line: 417, baseType: !1505, size: 256, offset: 2048)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2343, file: !508, line: 418, baseType: !1507, size: 768, offset: 2304)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2343, file: !508, line: 419, baseType: !1505, size: 256, offset: 3072)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2343, file: !508, line: 420, baseType: !1507, size: 768, offset: 3328)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2343, file: !508, line: 421, baseType: !1505, size: 256, offset: 4096)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2343, file: !508, line: 422, baseType: !1518, size: 1792, offset: 4352)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2343, file: !508, line: 423, baseType: !1522, size: 1920, offset: 6144)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2343, file: !508, line: 424, baseType: !1527, size: 20608, offset: 8064)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2343, file: !508, line: 425, baseType: !127, size: 32, offset: 28672)
!2358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2359, size: 32)
!2359 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !508, line: 468, baseType: !2360)
!2360 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 445, size: 1120, elements: !2361)
!2361 = !{!2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2360, file: !508, line: 447, baseType: !512, size: 32)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2360, file: !508, line: 448, baseType: !127, size: 32, offset: 32)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2360, file: !508, line: 449, baseType: !127, size: 32, offset: 64)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2360, file: !508, line: 450, baseType: !127, size: 32, offset: 96)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2360, file: !508, line: 451, baseType: !127, size: 32, offset: 128)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2360, file: !508, line: 452, baseType: !127, size: 32, offset: 160)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2360, file: !508, line: 453, baseType: !1542, size: 96, offset: 192)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2360, file: !508, line: 454, baseType: !127, size: 32, offset: 288)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2360, file: !508, line: 455, baseType: !127, size: 32, offset: 320)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2360, file: !508, line: 456, baseType: !127, size: 32, offset: 352)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2360, file: !508, line: 457, baseType: !127, size: 32, offset: 384)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2360, file: !508, line: 458, baseType: !127, size: 32, offset: 416)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2360, file: !508, line: 459, baseType: !127, size: 32, offset: 448)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2360, file: !508, line: 460, baseType: !127, size: 32, offset: 480)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2360, file: !508, line: 461, baseType: !1553, size: 64, offset: 512)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2360, file: !508, line: 462, baseType: !512, size: 32, offset: 576)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2360, file: !508, line: 463, baseType: !512, size: 32, offset: 608)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2360, file: !508, line: 464, baseType: !1557, size: 128, offset: 640)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2360, file: !508, line: 465, baseType: !1559, size: 160, offset: 768)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2360, file: !508, line: 466, baseType: !1561, size: 160, offset: 928)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2360, file: !508, line: 467, baseType: !127, size: 32, offset: 1088)
!2383 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2384, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2384 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!2385 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2386, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2387, splitDebugInlining: false, nameTableKind: None)
!2386 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!2387 = !{!102, !103, !22, !2388}
!2388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2389, size: 32)
!2389 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !508, line: 468, baseType: !2390)
!2390 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 445, size: 1120, elements: !2391)
!2391 = !{!2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2390, file: !508, line: 447, baseType: !512, size: 32)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2390, file: !508, line: 448, baseType: !127, size: 32, offset: 32)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2390, file: !508, line: 449, baseType: !127, size: 32, offset: 64)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2390, file: !508, line: 450, baseType: !127, size: 32, offset: 96)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2390, file: !508, line: 451, baseType: !127, size: 32, offset: 128)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2390, file: !508, line: 452, baseType: !127, size: 32, offset: 160)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2390, file: !508, line: 453, baseType: !1542, size: 96, offset: 192)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2390, file: !508, line: 454, baseType: !127, size: 32, offset: 288)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2390, file: !508, line: 455, baseType: !127, size: 32, offset: 320)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2390, file: !508, line: 456, baseType: !127, size: 32, offset: 352)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2390, file: !508, line: 457, baseType: !127, size: 32, offset: 384)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2390, file: !508, line: 458, baseType: !127, size: 32, offset: 416)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2390, file: !508, line: 459, baseType: !127, size: 32, offset: 448)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2390, file: !508, line: 460, baseType: !127, size: 32, offset: 480)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2390, file: !508, line: 461, baseType: !1553, size: 64, offset: 512)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2390, file: !508, line: 462, baseType: !512, size: 32, offset: 576)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2390, file: !508, line: 463, baseType: !512, size: 32, offset: 608)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2390, file: !508, line: 464, baseType: !1557, size: 128, offset: 640)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2390, file: !508, line: 465, baseType: !1559, size: 160, offset: 768)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2390, file: !508, line: 466, baseType: !1561, size: 160, offset: 928)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2390, file: !508, line: 467, baseType: !127, size: 32, offset: 1088)
!2413 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2414, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2415, splitDebugInlining: false, nameTableKind: None)
!2414 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!2415 = !{!2416, !102, !103}
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2417, size: 32)
!2417 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !508, line: 468, baseType: !2418)
!2418 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 445, size: 1120, elements: !2419)
!2419 = !{!2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440}
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2418, file: !508, line: 447, baseType: !512, size: 32)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2418, file: !508, line: 448, baseType: !127, size: 32, offset: 32)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2418, file: !508, line: 449, baseType: !127, size: 32, offset: 64)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2418, file: !508, line: 450, baseType: !127, size: 32, offset: 96)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2418, file: !508, line: 451, baseType: !127, size: 32, offset: 128)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2418, file: !508, line: 452, baseType: !127, size: 32, offset: 160)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2418, file: !508, line: 453, baseType: !1542, size: 96, offset: 192)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2418, file: !508, line: 454, baseType: !127, size: 32, offset: 288)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2418, file: !508, line: 455, baseType: !127, size: 32, offset: 320)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2418, file: !508, line: 456, baseType: !127, size: 32, offset: 352)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2418, file: !508, line: 457, baseType: !127, size: 32, offset: 384)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2418, file: !508, line: 458, baseType: !127, size: 32, offset: 416)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2418, file: !508, line: 459, baseType: !127, size: 32, offset: 448)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2418, file: !508, line: 460, baseType: !127, size: 32, offset: 480)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2418, file: !508, line: 461, baseType: !1553, size: 64, offset: 512)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2418, file: !508, line: 462, baseType: !512, size: 32, offset: 576)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2418, file: !508, line: 463, baseType: !512, size: 32, offset: 608)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2418, file: !508, line: 464, baseType: !1557, size: 128, offset: 640)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2418, file: !508, line: 465, baseType: !1559, size: 160, offset: 768)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2418, file: !508, line: 466, baseType: !1561, size: 160, offset: 928)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2418, file: !508, line: 467, baseType: !127, size: 32, offset: 1088)
!2441 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2442, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2443, splitDebugInlining: false, nameTableKind: None)
!2442 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!2443 = !{!2444, !106, !102, !103}
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2445, size: 32)
!2445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2446, line: 98, size: 256, elements: !2447)
!2446 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2447 = !{!2448, !2453, !2458, !2463, !2468, !2473, !2478, !2483}
!2448 = !DIDerivedType(tag: DW_TAG_member, scope: !2445, file: !2446, line: 99, baseType: !2449, size: 32)
!2449 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2445, file: !2446, line: 99, size: 32, elements: !2450)
!2450 = !{!2451, !2452}
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2449, file: !2446, line: 99, baseType: !106, size: 32)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2449, file: !2446, line: 99, baseType: !106, size: 32)
!2453 = !DIDerivedType(tag: DW_TAG_member, scope: !2445, file: !2446, line: 100, baseType: !2454, size: 32, offset: 32)
!2454 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2445, file: !2446, line: 100, size: 32, elements: !2455)
!2455 = !{!2456, !2457}
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2454, file: !2446, line: 100, baseType: !106, size: 32)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2454, file: !2446, line: 100, baseType: !106, size: 32)
!2458 = !DIDerivedType(tag: DW_TAG_member, scope: !2445, file: !2446, line: 101, baseType: !2459, size: 32, offset: 64)
!2459 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2445, file: !2446, line: 101, size: 32, elements: !2460)
!2460 = !{!2461, !2462}
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2459, file: !2446, line: 101, baseType: !106, size: 32)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2459, file: !2446, line: 101, baseType: !106, size: 32)
!2463 = !DIDerivedType(tag: DW_TAG_member, scope: !2445, file: !2446, line: 102, baseType: !2464, size: 32, offset: 96)
!2464 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2445, file: !2446, line: 102, size: 32, elements: !2465)
!2465 = !{!2466, !2467}
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2464, file: !2446, line: 102, baseType: !106, size: 32)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2464, file: !2446, line: 102, baseType: !106, size: 32)
!2468 = !DIDerivedType(tag: DW_TAG_member, scope: !2445, file: !2446, line: 103, baseType: !2469, size: 32, offset: 128)
!2469 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2445, file: !2446, line: 103, size: 32, elements: !2470)
!2470 = !{!2471, !2472}
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2469, file: !2446, line: 103, baseType: !106, size: 32)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2469, file: !2446, line: 103, baseType: !106, size: 32)
!2473 = !DIDerivedType(tag: DW_TAG_member, scope: !2445, file: !2446, line: 104, baseType: !2474, size: 32, offset: 160)
!2474 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2445, file: !2446, line: 104, size: 32, elements: !2475)
!2475 = !{!2476, !2477}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2474, file: !2446, line: 104, baseType: !106, size: 32)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2474, file: !2446, line: 104, baseType: !106, size: 32)
!2478 = !DIDerivedType(tag: DW_TAG_member, scope: !2445, file: !2446, line: 105, baseType: !2479, size: 32, offset: 192)
!2479 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2445, file: !2446, line: 105, size: 32, elements: !2480)
!2480 = !{!2481, !2482}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2479, file: !2446, line: 105, baseType: !106, size: 32)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2479, file: !2446, line: 105, baseType: !106, size: 32)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2445, file: !2446, line: 106, baseType: !106, size: 32, offset: 224)
!2484 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2485, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2328, retainedTypes: !2486, splitDebugInlining: false, nameTableKind: None)
!2485 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!2486 = !{!2487, !102, !103, !2512, !2555, !106}
!2487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2488, size: 32)
!2488 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !508, line: 468, baseType: !2489)
!2489 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 445, size: 1120, elements: !2490)
!2490 = !{!2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511}
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2489, file: !508, line: 447, baseType: !512, size: 32)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2489, file: !508, line: 448, baseType: !127, size: 32, offset: 32)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2489, file: !508, line: 449, baseType: !127, size: 32, offset: 64)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2489, file: !508, line: 450, baseType: !127, size: 32, offset: 96)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2489, file: !508, line: 451, baseType: !127, size: 32, offset: 128)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2489, file: !508, line: 452, baseType: !127, size: 32, offset: 160)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2489, file: !508, line: 453, baseType: !1542, size: 96, offset: 192)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2489, file: !508, line: 454, baseType: !127, size: 32, offset: 288)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2489, file: !508, line: 455, baseType: !127, size: 32, offset: 320)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2489, file: !508, line: 456, baseType: !127, size: 32, offset: 352)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2489, file: !508, line: 457, baseType: !127, size: 32, offset: 384)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2489, file: !508, line: 458, baseType: !127, size: 32, offset: 416)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2489, file: !508, line: 459, baseType: !127, size: 32, offset: 448)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2489, file: !508, line: 460, baseType: !127, size: 32, offset: 480)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2489, file: !508, line: 461, baseType: !1553, size: 64, offset: 512)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2489, file: !508, line: 462, baseType: !512, size: 32, offset: 576)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2489, file: !508, line: 463, baseType: !512, size: 32, offset: 608)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2489, file: !508, line: 464, baseType: !1557, size: 128, offset: 640)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2489, file: !508, line: 465, baseType: !1559, size: 160, offset: 768)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2489, file: !508, line: 466, baseType: !1561, size: 160, offset: 928)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2489, file: !508, line: 467, baseType: !127, size: 32, offset: 1088)
!2512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2513, size: 32)
!2513 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2446, line: 141, baseType: !2514)
!2514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2446, line: 97, size: 256, elements: !2515)
!2515 = !{!2516}
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2514, file: !2446, line: 107, baseType: !2517, size: 256)
!2517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2446, line: 98, size: 256, elements: !2518)
!2518 = !{!2519, !2524, !2529, !2534, !2539, !2544, !2549, !2554}
!2519 = !DIDerivedType(tag: DW_TAG_member, scope: !2517, file: !2446, line: 99, baseType: !2520, size: 32)
!2520 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2517, file: !2446, line: 99, size: 32, elements: !2521)
!2521 = !{!2522, !2523}
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2520, file: !2446, line: 99, baseType: !106, size: 32)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2520, file: !2446, line: 99, baseType: !106, size: 32)
!2524 = !DIDerivedType(tag: DW_TAG_member, scope: !2517, file: !2446, line: 100, baseType: !2525, size: 32, offset: 32)
!2525 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2517, file: !2446, line: 100, size: 32, elements: !2526)
!2526 = !{!2527, !2528}
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2525, file: !2446, line: 100, baseType: !106, size: 32)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2525, file: !2446, line: 100, baseType: !106, size: 32)
!2529 = !DIDerivedType(tag: DW_TAG_member, scope: !2517, file: !2446, line: 101, baseType: !2530, size: 32, offset: 64)
!2530 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2517, file: !2446, line: 101, size: 32, elements: !2531)
!2531 = !{!2532, !2533}
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2530, file: !2446, line: 101, baseType: !106, size: 32)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2530, file: !2446, line: 101, baseType: !106, size: 32)
!2534 = !DIDerivedType(tag: DW_TAG_member, scope: !2517, file: !2446, line: 102, baseType: !2535, size: 32, offset: 96)
!2535 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2517, file: !2446, line: 102, size: 32, elements: !2536)
!2536 = !{!2537, !2538}
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2535, file: !2446, line: 102, baseType: !106, size: 32)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2535, file: !2446, line: 102, baseType: !106, size: 32)
!2539 = !DIDerivedType(tag: DW_TAG_member, scope: !2517, file: !2446, line: 103, baseType: !2540, size: 32, offset: 128)
!2540 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2517, file: !2446, line: 103, size: 32, elements: !2541)
!2541 = !{!2542, !2543}
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2540, file: !2446, line: 103, baseType: !106, size: 32)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2540, file: !2446, line: 103, baseType: !106, size: 32)
!2544 = !DIDerivedType(tag: DW_TAG_member, scope: !2517, file: !2446, line: 104, baseType: !2545, size: 32, offset: 160)
!2545 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2517, file: !2446, line: 104, size: 32, elements: !2546)
!2546 = !{!2547, !2548}
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2545, file: !2446, line: 104, baseType: !106, size: 32)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2545, file: !2446, line: 104, baseType: !106, size: 32)
!2549 = !DIDerivedType(tag: DW_TAG_member, scope: !2517, file: !2446, line: 105, baseType: !2550, size: 32, offset: 192)
!2550 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2517, file: !2446, line: 105, size: 32, elements: !2551)
!2551 = !{!2552, !2553}
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2550, file: !2446, line: 105, baseType: !106, size: 32)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2550, file: !2446, line: 105, baseType: !106, size: 32)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2517, file: !2446, line: 106, baseType: !106, size: 32, offset: 224)
!2555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 32)
!2556 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2557, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1488, retainedTypes: !2558, splitDebugInlining: false, nameTableKind: None)
!2557 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!2558 = !{!762, !736, !160, !106, !2559, !2576}
!2559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2560, size: 32)
!2560 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !508, line: 426, baseType: !2561)
!2561 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 411, size: 28704, elements: !2562)
!2562 = !{!2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575}
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2561, file: !508, line: 413, baseType: !1505, size: 256)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2561, file: !508, line: 414, baseType: !1507, size: 768, offset: 256)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2561, file: !508, line: 415, baseType: !1505, size: 256, offset: 1024)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2561, file: !508, line: 416, baseType: !1507, size: 768, offset: 1280)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2561, file: !508, line: 417, baseType: !1505, size: 256, offset: 2048)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2561, file: !508, line: 418, baseType: !1507, size: 768, offset: 2304)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2561, file: !508, line: 419, baseType: !1505, size: 256, offset: 3072)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2561, file: !508, line: 420, baseType: !1507, size: 768, offset: 3328)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2561, file: !508, line: 421, baseType: !1505, size: 256, offset: 4096)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2561, file: !508, line: 422, baseType: !1518, size: 1792, offset: 4352)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2561, file: !508, line: 423, baseType: !1522, size: 1920, offset: 6144)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2561, file: !508, line: 424, baseType: !1527, size: 20608, offset: 8064)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2561, file: !508, line: 425, baseType: !127, size: 32, offset: 28672)
!2576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2577, size: 32)
!2577 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !508, line: 468, baseType: !2578)
!2578 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 445, size: 1120, elements: !2579)
!2579 = !{!2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600}
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2578, file: !508, line: 447, baseType: !512, size: 32)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2578, file: !508, line: 448, baseType: !127, size: 32, offset: 32)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2578, file: !508, line: 449, baseType: !127, size: 32, offset: 64)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2578, file: !508, line: 450, baseType: !127, size: 32, offset: 96)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2578, file: !508, line: 451, baseType: !127, size: 32, offset: 128)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2578, file: !508, line: 452, baseType: !127, size: 32, offset: 160)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2578, file: !508, line: 453, baseType: !1542, size: 96, offset: 192)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2578, file: !508, line: 454, baseType: !127, size: 32, offset: 288)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2578, file: !508, line: 455, baseType: !127, size: 32, offset: 320)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2578, file: !508, line: 456, baseType: !127, size: 32, offset: 352)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2578, file: !508, line: 457, baseType: !127, size: 32, offset: 384)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2578, file: !508, line: 458, baseType: !127, size: 32, offset: 416)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2578, file: !508, line: 459, baseType: !127, size: 32, offset: 448)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2578, file: !508, line: 460, baseType: !127, size: 32, offset: 480)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2578, file: !508, line: 461, baseType: !1553, size: 64, offset: 512)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2578, file: !508, line: 462, baseType: !512, size: 32, offset: 576)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2578, file: !508, line: 463, baseType: !512, size: 32, offset: 608)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2578, file: !508, line: 464, baseType: !1557, size: 128, offset: 640)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2578, file: !508, line: 465, baseType: !1559, size: 160, offset: 768)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2578, file: !508, line: 466, baseType: !1561, size: 160, offset: 928)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2578, file: !508, line: 467, baseType: !127, size: 32, offset: 1088)
!2601 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2602, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2603, splitDebugInlining: false, nameTableKind: None)
!2602 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!2603 = !{!2604, !102, !103}
!2604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2605, size: 32)
!2605 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !508, line: 468, baseType: !2606)
!2606 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 445, size: 1120, elements: !2607)
!2607 = !{!2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628}
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2606, file: !508, line: 447, baseType: !512, size: 32)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2606, file: !508, line: 448, baseType: !127, size: 32, offset: 32)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2606, file: !508, line: 449, baseType: !127, size: 32, offset: 64)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2606, file: !508, line: 450, baseType: !127, size: 32, offset: 96)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2606, file: !508, line: 451, baseType: !127, size: 32, offset: 128)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2606, file: !508, line: 452, baseType: !127, size: 32, offset: 160)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2606, file: !508, line: 453, baseType: !1542, size: 96, offset: 192)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2606, file: !508, line: 454, baseType: !127, size: 32, offset: 288)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2606, file: !508, line: 455, baseType: !127, size: 32, offset: 320)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2606, file: !508, line: 456, baseType: !127, size: 32, offset: 352)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2606, file: !508, line: 457, baseType: !127, size: 32, offset: 384)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2606, file: !508, line: 458, baseType: !127, size: 32, offset: 416)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2606, file: !508, line: 459, baseType: !127, size: 32, offset: 448)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2606, file: !508, line: 460, baseType: !127, size: 32, offset: 480)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2606, file: !508, line: 461, baseType: !1553, size: 64, offset: 512)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2606, file: !508, line: 462, baseType: !512, size: 32, offset: 576)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2606, file: !508, line: 463, baseType: !512, size: 32, offset: 608)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2606, file: !508, line: 464, baseType: !1557, size: 128, offset: 640)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2606, file: !508, line: 465, baseType: !1559, size: 160, offset: 768)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2606, file: !508, line: 466, baseType: !1561, size: 160, offset: 928)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2606, file: !508, line: 467, baseType: !127, size: 32, offset: 1088)
!2629 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2630, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2631, splitDebugInlining: false, nameTableKind: None)
!2630 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!2631 = !{!152, !1081, !352, !916, !2632, !161, !102}
!2632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2633, size: 32)
!2633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !161)
!2634 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2635, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2636, splitDebugInlining: false, nameTableKind: None)
!2635 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!2636 = !{!2637}
!2637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2638, size: 32)
!2638 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !123, line: 532, baseType: !2639)
!2639 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 500, size: 1088, elements: !2640)
!2640 = !{!2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670}
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2639, file: !123, line: 502, baseType: !127, size: 32)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2639, file: !123, line: 503, baseType: !127, size: 32, offset: 32)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2639, file: !123, line: 504, baseType: !127, size: 32, offset: 64)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2639, file: !123, line: 505, baseType: !127, size: 32, offset: 96)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2639, file: !123, line: 506, baseType: !127, size: 32, offset: 128)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2639, file: !123, line: 507, baseType: !127, size: 32, offset: 160)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2639, file: !123, line: 508, baseType: !127, size: 32, offset: 192)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2639, file: !123, line: 509, baseType: !106, size: 32, offset: 224)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2639, file: !123, line: 510, baseType: !127, size: 32, offset: 256)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2639, file: !123, line: 511, baseType: !127, size: 32, offset: 288)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2639, file: !123, line: 512, baseType: !789, size: 64, offset: 320)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2639, file: !123, line: 513, baseType: !127, size: 32, offset: 384)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2639, file: !123, line: 514, baseType: !127, size: 32, offset: 416)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2639, file: !123, line: 515, baseType: !127, size: 32, offset: 448)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2639, file: !123, line: 516, baseType: !106, size: 32, offset: 480)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2639, file: !123, line: 517, baseType: !127, size: 32, offset: 512)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2639, file: !123, line: 518, baseType: !127, size: 32, offset: 544)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2639, file: !123, line: 519, baseType: !789, size: 64, offset: 576)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2639, file: !123, line: 520, baseType: !127, size: 32, offset: 640)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2639, file: !123, line: 521, baseType: !127, size: 32, offset: 672)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2639, file: !123, line: 522, baseType: !127, size: 32, offset: 704)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2639, file: !123, line: 523, baseType: !106, size: 32, offset: 736)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2639, file: !123, line: 524, baseType: !127, size: 32, offset: 768)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2639, file: !123, line: 525, baseType: !127, size: 32, offset: 800)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2639, file: !123, line: 526, baseType: !789, size: 64, offset: 832)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2639, file: !123, line: 527, baseType: !127, size: 32, offset: 896)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2639, file: !123, line: 528, baseType: !127, size: 32, offset: 928)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2639, file: !123, line: 529, baseType: !789, size: 64, offset: 960)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2639, file: !123, line: 530, baseType: !127, size: 32, offset: 1024)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2639, file: !123, line: 531, baseType: !127, size: 32, offset: 1056)
!2671 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2672, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2672 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!2673 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2674, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2675, retainedTypes: !2691, splitDebugInlining: false, nameTableKind: None)
!2674 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!2675 = !{!2676, !2683, !2687}
!2676 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2677, line: 38, baseType: !32, size: 32, elements: !2678)
!2677 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2678 = !{!2679, !2680, !2681, !2682}
!2679 = !DIEnumerator(name: "HAL_OK", value: 0)
!2680 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2681 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2682 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2683 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !769, line: 184, baseType: !32, size: 32, elements: !2684)
!2684 = !{!2685, !2686}
!2685 = !DIEnumerator(name: "RESET", value: 0)
!2686 = !DIEnumerator(name: "SET", value: 1)
!2687 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !769, line: 190, baseType: !32, size: 32, elements: !2688)
!2688 = !{!2689, !2690}
!2689 = !DIEnumerator(name: "DISABLE", value: 0)
!2690 = !DIEnumerator(name: "ENABLE", value: 1)
!2691 = !{!102, !2692, !160, !106, !1404, !2726, !2732, !2743, !417, !2744, !1402}
!2692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2693, size: 32)
!2693 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !123, line: 532, baseType: !2694)
!2694 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 500, size: 1088, elements: !2695)
!2695 = !{!2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725}
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2694, file: !123, line: 502, baseType: !127, size: 32)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2694, file: !123, line: 503, baseType: !127, size: 32, offset: 32)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2694, file: !123, line: 504, baseType: !127, size: 32, offset: 64)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2694, file: !123, line: 505, baseType: !127, size: 32, offset: 96)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2694, file: !123, line: 506, baseType: !127, size: 32, offset: 128)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2694, file: !123, line: 507, baseType: !127, size: 32, offset: 160)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2694, file: !123, line: 508, baseType: !127, size: 32, offset: 192)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2694, file: !123, line: 509, baseType: !106, size: 32, offset: 224)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2694, file: !123, line: 510, baseType: !127, size: 32, offset: 256)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2694, file: !123, line: 511, baseType: !127, size: 32, offset: 288)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2694, file: !123, line: 512, baseType: !789, size: 64, offset: 320)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2694, file: !123, line: 513, baseType: !127, size: 32, offset: 384)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2694, file: !123, line: 514, baseType: !127, size: 32, offset: 416)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2694, file: !123, line: 515, baseType: !127, size: 32, offset: 448)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2694, file: !123, line: 516, baseType: !106, size: 32, offset: 480)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2694, file: !123, line: 517, baseType: !127, size: 32, offset: 512)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2694, file: !123, line: 518, baseType: !127, size: 32, offset: 544)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2694, file: !123, line: 519, baseType: !789, size: 64, offset: 576)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2694, file: !123, line: 520, baseType: !127, size: 32, offset: 640)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2694, file: !123, line: 521, baseType: !127, size: 32, offset: 672)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2694, file: !123, line: 522, baseType: !127, size: 32, offset: 704)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2694, file: !123, line: 523, baseType: !106, size: 32, offset: 736)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2694, file: !123, line: 524, baseType: !127, size: 32, offset: 768)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2694, file: !123, line: 525, baseType: !127, size: 32, offset: 800)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2694, file: !123, line: 526, baseType: !789, size: 64, offset: 832)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2694, file: !123, line: 527, baseType: !127, size: 32, offset: 896)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2694, file: !123, line: 528, baseType: !127, size: 32, offset: 928)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2694, file: !123, line: 529, baseType: !789, size: 64, offset: 960)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2694, file: !123, line: 530, baseType: !127, size: 32, offset: 1024)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2694, file: !123, line: 531, baseType: !127, size: 32, offset: 1056)
!2726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2727, size: 32)
!2727 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !123, line: 494, baseType: !2728)
!2728 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 490, size: 64, elements: !2729)
!2729 = !{!2730, !2731}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2728, file: !123, line: 492, baseType: !127, size: 32)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2728, file: !123, line: 493, baseType: !127, size: 32, offset: 32)
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2733, size: 32)
!2733 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !123, line: 369, baseType: !2734)
!2734 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 360, size: 224, elements: !2735)
!2735 = !{!2736, !2737, !2738, !2739, !2740, !2741, !2742}
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2734, file: !123, line: 362, baseType: !127, size: 32)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2734, file: !123, line: 363, baseType: !127, size: 32, offset: 32)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2734, file: !123, line: 364, baseType: !127, size: 32, offset: 64)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2734, file: !123, line: 365, baseType: !127, size: 32, offset: 96)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2734, file: !123, line: 366, baseType: !127, size: 32, offset: 128)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2734, file: !123, line: 367, baseType: !127, size: 32, offset: 160)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2734, file: !123, line: 368, baseType: !127, size: 32, offset: 192)
!2743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 32)
!2744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2745, size: 32)
!2745 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !123, line: 441, baseType: !2746)
!2746 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 430, size: 320, elements: !2747)
!2747 = !{!2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756}
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2746, file: !123, line: 432, baseType: !127, size: 32)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2746, file: !123, line: 433, baseType: !127, size: 32, offset: 32)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2746, file: !123, line: 434, baseType: !127, size: 32, offset: 64)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2746, file: !123, line: 435, baseType: !127, size: 32, offset: 96)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2746, file: !123, line: 436, baseType: !127, size: 32, offset: 128)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2746, file: !123, line: 437, baseType: !127, size: 32, offset: 160)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2746, file: !123, line: 438, baseType: !127, size: 32, offset: 192)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2746, file: !123, line: 439, baseType: !127, size: 32, offset: 224)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2746, file: !123, line: 440, baseType: !1070, size: 64, offset: 256)
!2757 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2758, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2759, retainedTypes: !2760, splitDebugInlining: false, nameTableKind: None)
!2758 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!2759 = !{!768}
!2760 = !{!2761, !106, !2769, !2775, !2786}
!2761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2762, size: 32)
!2762 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !508, line: 770, baseType: !2763)
!2763 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 764, size: 128, elements: !2764)
!2764 = !{!2765, !2766, !2767, !2768}
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2763, file: !508, line: 766, baseType: !127, size: 32)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2763, file: !508, line: 767, baseType: !127, size: 32, offset: 32)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2763, file: !508, line: 768, baseType: !127, size: 32, offset: 64)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2763, file: !508, line: 769, baseType: !512, size: 32, offset: 96)
!2769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2770, size: 32)
!2770 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !123, line: 494, baseType: !2771)
!2771 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 490, size: 64, elements: !2772)
!2772 = !{!2773, !2774}
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2771, file: !123, line: 492, baseType: !127, size: 32)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2771, file: !123, line: 493, baseType: !127, size: 32, offset: 32)
!2775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2776, size: 32)
!2776 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !123, line: 369, baseType: !2777)
!2777 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 360, size: 224, elements: !2778)
!2778 = !{!2779, !2780, !2781, !2782, !2783, !2784, !2785}
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2777, file: !123, line: 362, baseType: !127, size: 32)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2777, file: !123, line: 363, baseType: !127, size: 32, offset: 32)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2777, file: !123, line: 364, baseType: !127, size: 32, offset: 64)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2777, file: !123, line: 365, baseType: !127, size: 32, offset: 96)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2777, file: !123, line: 366, baseType: !127, size: 32, offset: 128)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2777, file: !123, line: 367, baseType: !127, size: 32, offset: 160)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2777, file: !123, line: 368, baseType: !127, size: 32, offset: 192)
!2786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2787, size: 32)
!2787 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !123, line: 532, baseType: !2788)
!2788 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 500, size: 1088, elements: !2789)
!2789 = !{!2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819}
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2788, file: !123, line: 502, baseType: !127, size: 32)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2788, file: !123, line: 503, baseType: !127, size: 32, offset: 32)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2788, file: !123, line: 504, baseType: !127, size: 32, offset: 64)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2788, file: !123, line: 505, baseType: !127, size: 32, offset: 96)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2788, file: !123, line: 506, baseType: !127, size: 32, offset: 128)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2788, file: !123, line: 507, baseType: !127, size: 32, offset: 160)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2788, file: !123, line: 508, baseType: !127, size: 32, offset: 192)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2788, file: !123, line: 509, baseType: !106, size: 32, offset: 224)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2788, file: !123, line: 510, baseType: !127, size: 32, offset: 256)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2788, file: !123, line: 511, baseType: !127, size: 32, offset: 288)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2788, file: !123, line: 512, baseType: !789, size: 64, offset: 320)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2788, file: !123, line: 513, baseType: !127, size: 32, offset: 384)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2788, file: !123, line: 514, baseType: !127, size: 32, offset: 416)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2788, file: !123, line: 515, baseType: !127, size: 32, offset: 448)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2788, file: !123, line: 516, baseType: !106, size: 32, offset: 480)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2788, file: !123, line: 517, baseType: !127, size: 32, offset: 512)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2788, file: !123, line: 518, baseType: !127, size: 32, offset: 544)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2788, file: !123, line: 519, baseType: !789, size: 64, offset: 576)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2788, file: !123, line: 520, baseType: !127, size: 32, offset: 640)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2788, file: !123, line: 521, baseType: !127, size: 32, offset: 672)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2788, file: !123, line: 522, baseType: !127, size: 32, offset: 704)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2788, file: !123, line: 523, baseType: !106, size: 32, offset: 736)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2788, file: !123, line: 524, baseType: !127, size: 32, offset: 768)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2788, file: !123, line: 525, baseType: !127, size: 32, offset: 800)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2788, file: !123, line: 526, baseType: !789, size: 64, offset: 832)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2788, file: !123, line: 527, baseType: !127, size: 32, offset: 896)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2788, file: !123, line: 528, baseType: !127, size: 32, offset: 928)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2788, file: !123, line: 529, baseType: !789, size: 64, offset: 960)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2788, file: !123, line: 530, baseType: !127, size: 32, offset: 1024)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2788, file: !123, line: 531, baseType: !127, size: 32, offset: 1056)
!2820 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2821, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2822, splitDebugInlining: false, nameTableKind: None)
!2821 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!2822 = !{!102, !352}
!2823 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2824, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2825, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2824 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!2825 = !{!2826, !2833, !30}
!2826 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2827, line: 14, baseType: !32, size: 32, elements: !2828)
!2827 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2828 = !{!2829, !2830, !2831, !2832}
!2829 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2830 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2831 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2832 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2833 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2827, line: 42, baseType: !32, size: 32, elements: !2834)
!2834 = !{!2835, !2836, !2837, !2838, !2839, !2840}
!2835 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2836 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2837 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2838 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2839 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2840 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2841 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2842, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2842 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!2843 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2844, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2845, splitDebugInlining: false, nameTableKind: None)
!2844 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!2845 = !{!22, !102, !103}
!2846 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2847, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2847 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!2848 = !{!"Ubuntu clang version 14.0.6"}
!2849 = !{i32 7, !"Dwarf Version", i32 4}
!2850 = !{i32 2, !"Debug Info Version", i32 3}
!2851 = !{i32 1, !"wchar_size", i32 4}
!2852 = !{i32 1, !"min_enum_size", i32 4}
!2853 = !{i32 1, !"branch-target-enforcement", i32 0}
!2854 = !{i32 1, !"sign-return-address", i32 0}
!2855 = !{i32 1, !"sign-return-address-all", i32 0}
!2856 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2857 = !{i32 7, !"frame-pointer", i32 2}
!2858 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2859, file: !2859, line: 26, type: !2860, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !474)
!2859 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2860 = !DISubroutineType(types: !2861)
!2861 = !{null}
!2862 = !DILocation(line: 28, column: 1, scope: !2858)
!2863 = !{i64 2155117520, i64 2155117540, i64 2155117603}
!2864 = !DILocation(line: 29, column: 1, scope: !2858)
!2865 = !{i64 2155117935, i64 2155117955, i64 2155118018}
!2866 = !DILocation(line: 30, column: 1, scope: !2858)
!2867 = !{i64 2155118354, i64 2155118374, i64 2155118437}
!2868 = !DILocation(line: 31, column: 1, scope: !2858)
!2869 = !{i64 2155118773, i64 2155118793, i64 2155118856}
!2870 = !DILocation(line: 33, column: 1, scope: !2858)
!2871 = !{i64 2155119065, i64 2155119085, i64 2155119148}
!2872 = !DILocation(line: 35, column: 1, scope: !2858)
!2873 = !{i64 2155119390, i64 2155119410, i64 2155119473}
!2874 = !DILocation(line: 50, column: 1, scope: !2858)
!2875 = !{i64 2155119817, i64 2155119837, i64 2155119900}
!2876 = !DILocation(line: 54, column: 1, scope: !2858)
!2877 = !{i64 2155120256, i64 2155120276, i64 2155120339}
!2878 = !DILocation(line: 61, column: 1, scope: !2858)
!2879 = !{i64 2155120573, i64 2155120593, i64 2155120656}
!2880 = !DILocation(line: 63, column: 1, scope: !2858)
!2881 = !{i64 2155120953, i64 2155120973, i64 2155121036}
!2882 = !DILocation(line: 64, column: 1, scope: !2858)
!2883 = !{i64 2155121475, i64 2155121495, i64 2155121558}
!2884 = !DILocation(line: 65, column: 1, scope: !2858)
!2885 = !{i64 2155121973, i64 2155121993, i64 2155122056}
!2886 = !DILocation(line: 66, column: 1, scope: !2858)
!2887 = !{i64 2155122455, i64 2155122475, i64 2155122538}
!2888 = !DILocation(line: 67, column: 1, scope: !2858)
!2889 = !{i64 2155122962, i64 2155122982, i64 2155123045}
!2890 = !DILocation(line: 68, column: 1, scope: !2858)
!2891 = !{i64 2155123450, i64 2155123470, i64 2155123533}
!2892 = !DILocation(line: 70, column: 1, scope: !2858)
!2893 = !{i64 2155123918, i64 2155123938, i64 2155124001}
!2894 = !DILocation(line: 71, column: 1, scope: !2858)
!2895 = !{i64 2155124360, i64 2155124380, i64 2155124443}
!2896 = !DILocation(line: 72, column: 1, scope: !2858)
!2897 = !{i64 2155124818, i64 2155124838, i64 2155124901}
!2898 = !DILocation(line: 79, column: 1, scope: !2858)
!2899 = !{i64 2155125272, i64 2155125292, i64 2155125355}
!2900 = !DILocation(line: 80, column: 1, scope: !2858)
!2901 = !{i64 2155125783, i64 2155125803, i64 2155125866}
!2902 = !DILocation(line: 82, column: 1, scope: !2858)
!2903 = !{i64 2155130335, i64 2155130355, i64 2155130418}
!2904 = !DILocation(line: 97, column: 1, scope: !2858)
!2905 = !{i64 2155130672, i64 2155130692, i64 2155130755}
!2906 = !DILocation(line: 99, column: 1, scope: !2858)
!2907 = !{i64 2155130890, i64 2155130910, i64 2155130973}
!2908 = !DILocation(line: 102, column: 1, scope: !2858)
!2909 = !{i64 2155131147, i64 2155131167, i64 2155131230}
!2910 = !DILocation(line: 105, column: 1, scope: !2858)
!2911 = !{i64 2155131387, i64 2155131407, i64 2155131470}
!2912 = !DILocation(line: 115, column: 1, scope: !2858)
!2913 = !{i64 2155131726, i64 2155131746, i64 2155131809}
!2914 = !DILocation(line: 118, column: 1, scope: !2858)
!2915 = !{i64 2155132070, i64 2155132090, i64 2155132153}
!2916 = !DILocation(line: 32, column: 1, scope: !2917)
!2917 = !DILexicalBlockFile(scope: !2858, file: !2918, discriminator: 0)
!2918 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2919 = !{i64 2155132426, i64 2155132446, i64 2155132509}
!2920 = !DILocation(line: 33, column: 1, scope: !2917)
!2921 = !{i64 2155132938, i64 2155132958, i64 2155133021}
!2922 = !DILocation(line: 53, column: 1, scope: !2917)
!2923 = !{i64 2155133446, i64 2155133466, i64 2155133529}
!2924 = !DILocation(line: 54, column: 1, scope: !2917)
!2925 = !{i64 2155133864, i64 2155133884, i64 2155133947}
!2926 = !DILocation(line: 55, column: 1, scope: !2917)
!2927 = !{i64 2155134282, i64 2155134302, i64 2155134365}
!2928 = !DILocation(line: 56, column: 1, scope: !2917)
!2929 = !{i64 2155134700, i64 2155134720, i64 2155134783}
!2930 = !DILocation(line: 57, column: 1, scope: !2917)
!2931 = !{i64 2155135118, i64 2155135138, i64 2155135201}
!2932 = !DILocation(line: 58, column: 1, scope: !2917)
!2933 = !{i64 2155135536, i64 2155135556, i64 2155135619}
!2934 = !DILocation(line: 59, column: 1, scope: !2917)
!2935 = !{i64 2155135954, i64 2155135974, i64 2155136037}
!2936 = !DILocation(line: 60, column: 1, scope: !2917)
!2937 = !{i64 2155136378, i64 2155136398, i64 2155136461}
!2938 = !DILocation(line: 61, column: 1, scope: !2917)
!2939 = !{i64 2155136695, i64 2155136715, i64 2155136778}
!2940 = !DILocation(line: 70, column: 1, scope: !2917)
!2941 = !{i64 2155136924, i64 2155136944, i64 2155137007}
!2942 = !DILocation(line: 72, column: 1, scope: !2917)
!2943 = !{i64 2155137256, i64 2155137276, i64 2155137339}
!2944 = !DILocation(line: 73, column: 1, scope: !2917)
!2945 = !{i64 2155137706, i64 2155137726, i64 2155137789}
!2946 = !DILocation(line: 74, column: 1, scope: !2917)
!2947 = !{i64 2155138156, i64 2155138176, i64 2155138239}
!2948 = !DILocation(line: 75, column: 1, scope: !2917)
!2949 = !{i64 2155138606, i64 2155138626, i64 2155138689}
!2950 = !DILocation(line: 76, column: 1, scope: !2917)
!2951 = !{i64 2155139056, i64 2155139076, i64 2155139139}
!2952 = !DILocation(line: 77, column: 1, scope: !2917)
!2953 = !{i64 2155139506, i64 2155139526, i64 2155139589}
!2954 = !DILocation(line: 78, column: 1, scope: !2917)
!2955 = !{i64 2155144017, i64 2155144037, i64 2155144100}
!2956 = !DILocation(line: 79, column: 1, scope: !2917)
!2957 = !{i64 2155144467, i64 2155144487, i64 2155144550}
!2958 = !DILocation(line: 80, column: 1, scope: !2917)
!2959 = !{i64 2155144920, i64 2155144940, i64 2155145003}
!2960 = !DILocation(line: 84, column: 1, scope: !2917)
!2961 = !{i64 2155145252, i64 2155145272, i64 2155145335}
!2962 = !DILocation(line: 91, column: 1, scope: !2917)
!2963 = !{i64 2155145649, i64 2155145669, i64 2155145732}
!2964 = !DILocation(line: 93, column: 1, scope: !2917)
!2965 = !{i64 2155146016, i64 2155146036, i64 2155146099}
!2966 = !DILocation(line: 106, column: 1, scope: !2917)
!2967 = !{i64 2155146286, i64 2155146306, i64 2155146369}
!2968 = !DILocation(line: 11, column: 1, scope: !2969)
!2969 = !DILexicalBlockFile(scope: !2858, file: !2970, discriminator: 0)
!2970 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2971 = distinct !DISubprogram(name: "main", scope: !105, file: !105, line: 13, type: !2860, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !474)
!2972 = !DILocation(line: 15, column: 47, scope: !2971)
!2973 = !DILocation(line: 15, column: 2, scope: !2971)
!2974 = !DILocation(line: 17, column: 14, scope: !2971)
!2975 = !DILocation(line: 22, column: 2, scope: !2971)
!2976 = !DILocation(line: 23, column: 2, scope: !2971)
!2977 = !DILocation(line: 24, column: 1, scope: !2971)
!2978 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !112, file: !112, line: 45, type: !114, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !109, retainedNodes: !2979)
!2979 = !{!2980}
!2980 = !DILocalVariable(name: "c", arg: 1, scope: !2978, file: !112, line: 45, type: !103)
!2981 = !DILocation(line: 0, scope: !2978)
!2982 = !DILocation(line: 50, column: 2, scope: !2978)
!2983 = distinct !DISubprogram(name: "__printk_hook_install", scope: !112, file: !112, line: 63, type: !2984, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !109, retainedNodes: !2986)
!2984 = !DISubroutineType(types: !2985)
!2985 = !{null, !113}
!2986 = !{!2987}
!2987 = !DILocalVariable(name: "fn", arg: 1, scope: !2983, file: !112, line: 63, type: !113)
!2988 = !DILocation(line: 0, scope: !2983)
!2989 = !DILocation(line: 65, column: 12, scope: !2983)
!2990 = !DILocation(line: 66, column: 1, scope: !2983)
!2991 = distinct !DISubprogram(name: "__printk_get_hook", scope: !112, file: !112, line: 76, type: !2992, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !109, retainedNodes: !474)
!2992 = !DISubroutineType(types: !2993)
!2993 = !{!102}
!2994 = !DILocation(line: 78, column: 9, scope: !2991)
!2995 = !DILocation(line: 78, column: 2, scope: !2991)
!2996 = distinct !DISubprogram(name: "vprintk", scope: !112, file: !112, line: 113, type: !2997, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !109, retainedNodes: !3006)
!2997 = !DISubroutineType(types: !2998)
!2998 = !{null, !150, !2999}
!2999 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3000, line: 99, baseType: !3001)
!3000 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3001 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3000, line: 40, baseType: !3002)
!3002 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !112, baseType: !3003)
!3003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3004)
!3004 = !{!3005}
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3003, file: !112, line: 79, baseType: !102, size: 32)
!3006 = !{!3007, !3008, !3009}
!3007 = !DILocalVariable(name: "fmt", arg: 1, scope: !2996, file: !112, line: 113, type: !150)
!3008 = !DILocalVariable(name: "ap", arg: 2, scope: !2996, file: !112, line: 113, type: !2999)
!3009 = !DILocalVariable(name: "ctx", scope: !3010, file: !112, line: 121, type: !3012)
!3010 = distinct !DILexicalBlock(scope: !3011, file: !112, line: 120, column: 27)
!3011 = distinct !DILexicalBlock(scope: !2996, file: !112, line: 120, column: 6)
!3012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !112, line: 81, size: 32, elements: !3013)
!3013 = !{!3014, !3015}
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3012, file: !112, line: 85, baseType: !32, size: 32)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3012, file: !112, line: 86, baseType: !3016, offset: 32)
!3016 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, elements: !3017)
!3017 = !{!3018}
!3018 = !DISubrange(count: 0)
!3019 = !DILocation(line: 0, scope: !2996)
!3020 = !DILocation(line: 148, column: 3, scope: !3021)
!3021 = distinct !DILexicalBlock(scope: !3011, file: !112, line: 138, column: 9)
!3022 = !DILocation(line: 155, column: 1, scope: !2996)
!3023 = distinct !DISubprogram(name: "char_out", scope: !112, file: !112, line: 107, type: !3024, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !109, retainedNodes: !3026)
!3024 = !DISubroutineType(types: !3025)
!3025 = !{!103, !103, !102}
!3026 = !{!3027, !3028}
!3027 = !DILocalVariable(name: "c", arg: 1, scope: !3023, file: !112, line: 107, type: !103)
!3028 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3023, file: !112, line: 107, type: !102)
!3029 = !DILocation(line: 0, scope: !3023)
!3030 = !DILocation(line: 110, column: 9, scope: !3023)
!3031 = !DILocation(line: 110, column: 2, scope: !3023)
!3032 = distinct !DISubprogram(name: "cbvprintf", scope: !3033, file: !3033, line: 739, type: !3034, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !109, retainedNodes: !3040)
!3033 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3034 = !DISubroutineType(types: !3035)
!3035 = !{!103, !3036, !102, !150, !2999}
!3036 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3033, line: 297, baseType: !3037)
!3037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3038, size: 32)
!3038 = !DISubroutineType(types: !3039)
!3039 = !{!103, null}
!3040 = !{!3041, !3042, !3043, !3044}
!3041 = !DILocalVariable(name: "out", arg: 1, scope: !3032, file: !3033, line: 739, type: !3036)
!3042 = !DILocalVariable(name: "ctx", arg: 2, scope: !3032, file: !3033, line: 739, type: !102)
!3043 = !DILocalVariable(name: "format", arg: 3, scope: !3032, file: !3033, line: 739, type: !150)
!3044 = !DILocalVariable(name: "ap", arg: 4, scope: !3032, file: !3033, line: 739, type: !2999)
!3045 = !DILocation(line: 0, scope: !3032)
!3046 = !DILocation(line: 741, column: 9, scope: !3032)
!3047 = !DILocation(line: 741, column: 2, scope: !3032)
!3048 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !112, file: !112, line: 157, type: !3049, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !109, retainedNodes: !3051)
!3049 = !DISubroutineType(types: !3050)
!3050 = !{null, !1081, !352}
!3051 = !{!3052, !3053, !3054}
!3052 = !DILocalVariable(name: "c", arg: 1, scope: !3048, file: !112, line: 157, type: !1081)
!3053 = !DILocalVariable(name: "n", arg: 2, scope: !3048, file: !112, line: 157, type: !352)
!3054 = !DILocalVariable(name: "i", scope: !3048, file: !112, line: 159, type: !352)
!3055 = !DILocation(line: 0, scope: !3048)
!3056 = !DILocation(line: 164, column: 16, scope: !3057)
!3057 = distinct !DILexicalBlock(scope: !3058, file: !112, line: 164, column: 2)
!3058 = distinct !DILexicalBlock(scope: !3048, file: !112, line: 164, column: 2)
!3059 = !DILocation(line: 164, column: 2, scope: !3058)
!3060 = !DILocation(line: 165, column: 3, scope: !3061)
!3061 = distinct !DILexicalBlock(scope: !3057, file: !112, line: 164, column: 26)
!3062 = !DILocation(line: 165, column: 13, scope: !3061)
!3063 = !DILocation(line: 164, column: 22, scope: !3057)
!3064 = distinct !{!3064, !3059, !3065}
!3065 = !DILocation(line: 166, column: 2, scope: !3058)
!3066 = !DILocation(line: 171, column: 1, scope: !3048)
!3067 = distinct !DISubprogram(name: "printk", scope: !112, file: !112, line: 203, type: !3068, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !109, retainedNodes: !3070)
!3068 = !DISubroutineType(types: !3069)
!3069 = !{null, !150, null}
!3070 = !{!3071, !3072}
!3071 = !DILocalVariable(name: "fmt", arg: 1, scope: !3067, file: !112, line: 203, type: !150)
!3072 = !DILocalVariable(name: "ap", scope: !3067, file: !112, line: 205, type: !2999)
!3073 = !DILocation(line: 0, scope: !3067)
!3074 = !DILocation(line: 205, column: 2, scope: !3067)
!3075 = !DILocation(line: 205, column: 10, scope: !3067)
!3076 = !DILocation(line: 207, column: 2, scope: !3067)
!3077 = !DILocation(line: 209, column: 2, scope: !3067)
!3078 = !DILocation(line: 211, column: 2, scope: !3067)
!3079 = !DILocation(line: 212, column: 1, scope: !3067)
!3080 = distinct !DISubprogram(name: "snprintk", scope: !112, file: !112, line: 239, type: !3081, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !109, retainedNodes: !3083)
!3081 = !DISubroutineType(types: !3082)
!3082 = !{!103, !1081, !352, !150, null}
!3083 = !{!3084, !3085, !3086, !3087, !3088}
!3084 = !DILocalVariable(name: "str", arg: 1, scope: !3080, file: !112, line: 239, type: !1081)
!3085 = !DILocalVariable(name: "size", arg: 2, scope: !3080, file: !112, line: 239, type: !352)
!3086 = !DILocalVariable(name: "fmt", arg: 3, scope: !3080, file: !112, line: 239, type: !150)
!3087 = !DILocalVariable(name: "ap", scope: !3080, file: !112, line: 241, type: !2999)
!3088 = !DILocalVariable(name: "ret", scope: !3080, file: !112, line: 242, type: !103)
!3089 = !DILocation(line: 0, scope: !3080)
!3090 = !DILocation(line: 241, column: 2, scope: !3080)
!3091 = !DILocation(line: 241, column: 10, scope: !3080)
!3092 = !DILocation(line: 244, column: 2, scope: !3080)
!3093 = !DILocation(line: 245, column: 8, scope: !3080)
!3094 = !DILocation(line: 246, column: 2, scope: !3080)
!3095 = !DILocation(line: 249, column: 1, scope: !3080)
!3096 = !DILocation(line: 248, column: 2, scope: !3080)
!3097 = distinct !DISubprogram(name: "vsnprintk", scope: !112, file: !112, line: 251, type: !3098, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !109, retainedNodes: !3100)
!3098 = !DISubroutineType(types: !3099)
!3099 = !{!103, !1081, !352, !150, !2999}
!3100 = !{!3101, !3102, !3103, !3104, !3105}
!3101 = !DILocalVariable(name: "str", arg: 1, scope: !3097, file: !112, line: 251, type: !1081)
!3102 = !DILocalVariable(name: "size", arg: 2, scope: !3097, file: !112, line: 251, type: !352)
!3103 = !DILocalVariable(name: "fmt", arg: 3, scope: !3097, file: !112, line: 251, type: !150)
!3104 = !DILocalVariable(name: "ap", arg: 4, scope: !3097, file: !112, line: 251, type: !2999)
!3105 = !DILocalVariable(name: "ctx", scope: !3097, file: !112, line: 253, type: !3106)
!3106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !112, line: 217, size: 96, elements: !3107)
!3107 = !{!3108, !3109, !3110}
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3106, file: !112, line: 218, baseType: !1081, size: 32)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3106, file: !112, line: 219, baseType: !103, size: 32, offset: 32)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3106, file: !112, line: 220, baseType: !103, size: 32, offset: 64)
!3111 = !DILocation(line: 0, scope: !3097)
!3112 = !DILocation(line: 253, column: 2, scope: !3097)
!3113 = !DILocation(line: 253, column: 21, scope: !3097)
!3114 = !DILocation(line: 253, column: 27, scope: !3097)
!3115 = !DILocation(line: 255, column: 2, scope: !3097)
!3116 = !DILocation(line: 257, column: 10, scope: !3117)
!3117 = distinct !DILexicalBlock(scope: !3097, file: !112, line: 257, column: 6)
!3118 = !DILocation(line: 257, column: 22, scope: !3117)
!3119 = !DILocation(line: 257, column: 16, scope: !3117)
!3120 = !DILocation(line: 257, column: 6, scope: !3097)
!3121 = !DILocation(line: 258, column: 3, scope: !3122)
!3122 = distinct !DILexicalBlock(scope: !3117, file: !112, line: 257, column: 27)
!3123 = !DILocation(line: 258, column: 18, scope: !3122)
!3124 = !DILocation(line: 259, column: 2, scope: !3122)
!3125 = !DILocation(line: 262, column: 1, scope: !3097)
!3126 = !DILocation(line: 261, column: 2, scope: !3097)
!3127 = distinct !DISubprogram(name: "str_out", scope: !112, file: !112, line: 223, type: !3128, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !109, retainedNodes: !3131)
!3128 = !DISubroutineType(types: !3129)
!3129 = !{!103, !103, !3130}
!3130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3106, size: 32)
!3131 = !{!3132, !3133}
!3132 = !DILocalVariable(name: "c", arg: 1, scope: !3127, file: !112, line: 223, type: !103)
!3133 = !DILocalVariable(name: "ctx", arg: 2, scope: !3127, file: !112, line: 223, type: !3130)
!3134 = !DILocation(line: 0, scope: !3127)
!3135 = !DILocation(line: 225, column: 11, scope: !3136)
!3136 = distinct !DILexicalBlock(scope: !3127, file: !112, line: 225, column: 6)
!3137 = !DILocation(line: 225, column: 15, scope: !3136)
!3138 = !DILocation(line: 0, scope: !3136)
!3139 = !DILocation(line: 225, column: 23, scope: !3136)
!3140 = !DILocation(line: 225, column: 45, scope: !3136)
!3141 = !DILocation(line: 225, column: 37, scope: !3136)
!3142 = !DILocation(line: 225, column: 6, scope: !3127)
!3143 = !DILocation(line: 226, column: 8, scope: !3144)
!3144 = distinct !DILexicalBlock(scope: !3136, file: !112, line: 225, column: 50)
!3145 = !DILocation(line: 226, column: 13, scope: !3144)
!3146 = !DILocation(line: 227, column: 3, scope: !3144)
!3147 = !DILocation(line: 230, column: 29, scope: !3148)
!3148 = distinct !DILexicalBlock(scope: !3127, file: !112, line: 230, column: 6)
!3149 = !DILocation(line: 230, column: 17, scope: !3148)
!3150 = !DILocation(line: 230, column: 6, scope: !3127)
!3151 = !DILocation(line: 231, column: 22, scope: !3152)
!3152 = distinct !DILexicalBlock(scope: !3148, file: !112, line: 230, column: 34)
!3153 = !DILocation(line: 231, column: 3, scope: !3152)
!3154 = !DILocation(line: 231, column: 26, scope: !3152)
!3155 = !DILocation(line: 232, column: 2, scope: !3152)
!3156 = !DILocation(line: 233, column: 28, scope: !3157)
!3157 = distinct !DILexicalBlock(scope: !3148, file: !112, line: 232, column: 9)
!3158 = !DILocation(line: 233, column: 22, scope: !3157)
!3159 = !DILocation(line: 233, column: 3, scope: !3157)
!3160 = !DILocation(line: 233, column: 26, scope: !3157)
!3161 = !DILocation(line: 237, column: 1, scope: !3127)
!3162 = distinct !DISubprogram(name: "z_thread_entry", scope: !3163, file: !3163, line: 30, type: !3164, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3171)
!3163 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3164 = !DISubroutineType(types: !3165)
!3165 = !{null, !3166, !102, !102, !102}
!3166 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3167, line: 46, baseType: !3168)
!3167 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3169, size: 32)
!3169 = !DISubroutineType(types: !3170)
!3170 = !{null, !102, !102, !102}
!3171 = !{!3172, !3173, !3174, !3175}
!3172 = !DILocalVariable(name: "entry", arg: 1, scope: !3162, file: !3163, line: 30, type: !3166)
!3173 = !DILocalVariable(name: "p1", arg: 2, scope: !3162, file: !3163, line: 31, type: !102)
!3174 = !DILocalVariable(name: "p2", arg: 3, scope: !3162, file: !3163, line: 31, type: !102)
!3175 = !DILocalVariable(name: "p3", arg: 4, scope: !3162, file: !3163, line: 31, type: !102)
!3176 = !DILocation(line: 0, scope: !3162)
!3177 = !DILocation(line: 36, column: 2, scope: !3162)
!3178 = !DILocation(line: 38, column: 17, scope: !3162)
!3179 = !DILocation(line: 38, column: 2, scope: !3162)
!3180 = !DILocation(line: 45, column: 2, scope: !3162)
!3181 = distinct !DISubprogram(name: "k_current_get", scope: !459, file: !459, line: 530, type: !3182, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !474)
!3182 = !DISubroutineType(types: !3183)
!3183 = !{!3184}
!3184 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !363, line: 347, baseType: !3185)
!3185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3186, size: 32)
!3186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !363, line: 245, size: 1024, elements: !3187)
!3187 = !{!3188, !3246, !3258, !3259, !3260, !3261, !3267, !3280}
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3186, file: !363, line: 247, baseType: !3189, size: 384)
!3189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !363, line: 57, size: 384, elements: !3190)
!3190 = !{!3191, !3215, !3222, !3223, !3224, !3233, !3234, !3235}
!3191 = !DIDerivedType(tag: DW_TAG_member, scope: !3189, file: !363, line: 60, baseType: !3192, size: 64)
!3192 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3189, file: !363, line: 60, size: 64, elements: !3193)
!3193 = !{!3194, !3209}
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3192, file: !363, line: 61, baseType: !3195, size: 64)
!3195 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !373, line: 49, baseType: !3196)
!3196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !373, line: 37, size: 64, elements: !3197)
!3197 = !{!3198, !3204}
!3198 = !DIDerivedType(tag: DW_TAG_member, scope: !3196, file: !373, line: 38, baseType: !3199, size: 32)
!3199 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3196, file: !373, line: 38, size: 32, elements: !3200)
!3200 = !{!3201, !3203}
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3199, file: !373, line: 39, baseType: !3202, size: 32)
!3202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3196, size: 32)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3199, file: !373, line: 40, baseType: !3202, size: 32)
!3204 = !DIDerivedType(tag: DW_TAG_member, scope: !3196, file: !373, line: 42, baseType: !3205, size: 32, offset: 32)
!3205 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3196, file: !373, line: 42, size: 32, elements: !3206)
!3206 = !{!3207, !3208}
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3205, file: !373, line: 43, baseType: !3202, size: 32)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3205, file: !373, line: 44, baseType: !3202, size: 32)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3192, file: !363, line: 62, baseType: !3210, size: 64)
!3210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !389, line: 49, size: 64, elements: !3211)
!3211 = !{!3212}
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3210, file: !389, line: 50, baseType: !3213, size: 64)
!3213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3214, size: 64, elements: !394)
!3214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3210, size: 32)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3189, file: !363, line: 68, baseType: !3216, size: 32, offset: 64)
!3216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3217, size: 32)
!3217 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !399, line: 233, baseType: !3218)
!3218 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !399, line: 231, size: 64, elements: !3219)
!3219 = !{!3220}
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3218, file: !399, line: 232, baseType: !3221, size: 64)
!3221 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !373, line: 48, baseType: !3196)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3189, file: !363, line: 71, baseType: !160, size: 8, offset: 96)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3189, file: !363, line: 74, baseType: !160, size: 8, offset: 104)
!3224 = !DIDerivedType(tag: DW_TAG_member, scope: !3189, file: !363, line: 90, baseType: !3225, size: 16, offset: 112)
!3225 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3189, file: !363, line: 90, size: 16, elements: !3226)
!3226 = !{!3227, !3232}
!3227 = !DIDerivedType(tag: DW_TAG_member, scope: !3225, file: !363, line: 91, baseType: !3228, size: 16)
!3228 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3225, file: !363, line: 91, size: 16, elements: !3229)
!3229 = !{!3230, !3231}
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3228, file: !363, line: 96, baseType: !413, size: 8)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3228, file: !363, line: 97, baseType: !160, size: 8, offset: 8)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3225, file: !363, line: 100, baseType: !417, size: 16)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3189, file: !363, line: 107, baseType: !106, size: 32, offset: 128)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3189, file: !363, line: 127, baseType: !102, size: 32, offset: 160)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3189, file: !363, line: 131, baseType: !3236, size: 192, offset: 192)
!3236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !399, line: 244, size: 192, elements: !3237)
!3237 = !{!3238, !3239, !3245}
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3236, file: !399, line: 245, baseType: !3195, size: 64)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3236, file: !399, line: 246, baseType: !3240, size: 32, offset: 64)
!3240 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !399, line: 242, baseType: !3241)
!3241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3242, size: 32)
!3242 = !DISubroutineType(types: !3243)
!3243 = !{null, !3244}
!3244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3236, size: 32)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3236, file: !399, line: 249, baseType: !432, size: 64, offset: 128)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3186, file: !363, line: 250, baseType: !3247, size: 288, offset: 384)
!3247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !3248)
!3248 = !{!3249, !3250, !3251, !3252, !3253, !3254, !3255, !3256, !3257}
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3247, file: !436, line: 26, baseType: !106, size: 32)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3247, file: !436, line: 27, baseType: !106, size: 32, offset: 32)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3247, file: !436, line: 28, baseType: !106, size: 32, offset: 64)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3247, file: !436, line: 29, baseType: !106, size: 32, offset: 96)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3247, file: !436, line: 30, baseType: !106, size: 32, offset: 128)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3247, file: !436, line: 31, baseType: !106, size: 32, offset: 160)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3247, file: !436, line: 32, baseType: !106, size: 32, offset: 192)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3247, file: !436, line: 33, baseType: !106, size: 32, offset: 224)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3247, file: !436, line: 34, baseType: !106, size: 32, offset: 256)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3186, file: !363, line: 253, baseType: !102, size: 32, offset: 672)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3186, file: !363, line: 256, baseType: !3217, size: 64, offset: 704)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3186, file: !363, line: 294, baseType: !103, size: 32, offset: 768)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3186, file: !363, line: 300, baseType: !3262, size: 96, offset: 800)
!3262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !363, line: 149, size: 96, elements: !3263)
!3263 = !{!3264, !3265, !3266}
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3262, file: !363, line: 153, baseType: !22, size: 32)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3262, file: !363, line: 162, baseType: !352, size: 32, offset: 32)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3262, file: !363, line: 168, baseType: !352, size: 32, offset: 64)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3186, file: !363, line: 325, baseType: !3268, size: 32, offset: 896)
!3268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3269, size: 32)
!3269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !459, line: 5073, size: 160, elements: !3270)
!3270 = !{!3271, !3277, !3278}
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3269, file: !459, line: 5074, baseType: !3272, size: 96)
!3272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !463, line: 56, size: 96, elements: !3273)
!3273 = !{!3274, !3275, !3276}
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3272, file: !463, line: 57, baseType: !466, size: 32)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3272, file: !463, line: 58, baseType: !102, size: 32, offset: 32)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3272, file: !463, line: 59, baseType: !352, size: 32, offset: 64)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3269, file: !459, line: 5075, baseType: !3217, size: 64, offset: 96)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3269, file: !459, line: 5076, baseType: !3279, offset: 160)
!3279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !473, line: 43, elements: !474)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3186, file: !363, line: 343, baseType: !3281, size: 64, offset: 928)
!3281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !3282)
!3282 = !{!3283, !3284}
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3281, file: !436, line: 63, baseType: !106, size: 32)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3281, file: !436, line: 66, baseType: !106, size: 32, offset: 32)
!3285 = !DILocation(line: 535, column: 9, scope: !3181)
!3286 = !DILocation(line: 535, column: 2, scope: !3181)
!3287 = distinct !DISubprogram(name: "k_thread_abort", scope: !3288, file: !3288, line: 188, type: !3289, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !3291)
!3288 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!3289 = !DISubroutineType(types: !3290)
!3290 = !{null, !3184}
!3291 = !{!3292}
!3292 = !DILocalVariable(name: "thread", arg: 1, scope: !3287, file: !3288, line: 188, type: !3184)
!3293 = !DILocation(line: 0, scope: !3287)
!3294 = !DILocation(line: 197, column: 2, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3287, file: !3288, line: 197, column: 2)
!3296 = !{i64 2154837948}
!3297 = !DILocation(line: 198, column: 2, scope: !3287)
!3298 = !DILocation(line: 199, column: 1, scope: !3287)
!3299 = distinct !DISubprogram(name: "z_current_get", scope: !3288, file: !3288, line: 173, type: !3182, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !474)
!3300 = !DILocation(line: 180, column: 2, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !3299, file: !3288, line: 180, column: 2)
!3302 = !{i64 2154837880}
!3303 = !DILocation(line: 181, column: 9, scope: !3299)
!3304 = !DILocation(line: 181, column: 2, scope: !3299)
!3305 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2290, file: !2290, line: 1338, type: !3306, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !3314)
!3306 = !DISubroutineType(types: !3307)
!3307 = !{!103, !3036, !102, !150, !3308, !106}
!3308 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3000, line: 99, baseType: !3309)
!3309 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3000, line: 40, baseType: !3310)
!3310 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2290, baseType: !3311)
!3311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3312)
!3312 = !{!3313}
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3311, file: !2290, baseType: !102, size: 32)
!3314 = !{!3315, !3316, !3317, !3318, !3319, !3320, !3324, !3325, !3326, !3328, !3333, !3378, !3381, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3393, !3394, !3395, !3399, !3402, !3404, !3407, !3408, !3409, !3414, !3420, !3423, !3427, !3433, !3437, !3440, !3442, !3445}
!3315 = !DILocalVariable(name: "out", arg: 1, scope: !3305, file: !2290, line: 1338, type: !3036)
!3316 = !DILocalVariable(name: "ctx", arg: 2, scope: !3305, file: !2290, line: 1338, type: !102)
!3317 = !DILocalVariable(name: "fp", arg: 3, scope: !3305, file: !2290, line: 1338, type: !150)
!3318 = !DILocalVariable(name: "ap", arg: 4, scope: !3305, file: !2290, line: 1339, type: !3308)
!3319 = !DILocalVariable(name: "flags", arg: 5, scope: !3305, file: !2290, line: 1339, type: !106)
!3320 = !DILocalVariable(name: "buf", scope: !3305, file: !2290, line: 1341, type: !3321)
!3321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 176, elements: !3322)
!3322 = !{!3323}
!3323 = !DISubrange(count: 22)
!3324 = !DILocalVariable(name: "count", scope: !3305, file: !2290, line: 1342, type: !352)
!3325 = !DILocalVariable(name: "sint", scope: !3305, file: !2290, line: 1343, type: !2309)
!3326 = !DILocalVariable(name: "tagged_ap", scope: !3305, file: !2290, line: 1345, type: !3327)
!3327 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !163)
!3328 = !DILocalVariable(name: "rc", scope: !3329, file: !2290, line: 1377, type: !103)
!3329 = distinct !DILexicalBlock(scope: !3330, file: !2290, line: 1377, column: 4)
!3330 = distinct !DILexicalBlock(scope: !3331, file: !2290, line: 1376, column: 19)
!3331 = distinct !DILexicalBlock(scope: !3332, file: !2290, line: 1376, column: 7)
!3332 = distinct !DILexicalBlock(scope: !3305, file: !2290, line: 1375, column: 19)
!3333 = !DILocalVariable(name: "state", scope: !3332, file: !2290, line: 1395, type: !3334)
!3334 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3305, file: !2290, line: 1392, size: 192, elements: !3335)
!3335 = !{!3336, !3346}
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3334, file: !2290, line: 1393, baseType: !3337, size: 64)
!3337 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2290, line: 166, size: 64, elements: !3338)
!3338 = !{!3339, !3340, !3341, !3343, !3345}
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !3337, file: !2290, line: 168, baseType: !2309, size: 64)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !3337, file: !2290, line: 171, baseType: !2312, size: 64)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !3337, file: !2290, line: 174, baseType: !3342, size: 64)
!3342 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !3337, file: !2290, line: 177, baseType: !3344, size: 64)
!3344 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3337, file: !2290, line: 180, baseType: !102, size: 32)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !3334, file: !2290, line: 1394, baseType: !3347, size: 96, offset: 64)
!3347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2290, line: 189, size: 96, elements: !3348)
!3348 = !{!3349, !3350, !3351, !3352, !3353, !3354, !3355, !3356, !3357, !3358, !3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3367, !3368, !3373}
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !3347, file: !2290, line: 191, baseType: !163, size: 1, flags: DIFlagBitField, extraData: i64 0)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !3347, file: !2290, line: 194, baseType: !163, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !3347, file: !2290, line: 197, baseType: !163, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !3347, file: !2290, line: 200, baseType: !163, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !3347, file: !2290, line: 203, baseType: !163, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !3347, file: !2290, line: 206, baseType: !163, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !3347, file: !2290, line: 209, baseType: !163, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !3347, file: !2290, line: 212, baseType: !163, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !3347, file: !2290, line: 219, baseType: !163, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !3347, file: !2290, line: 222, baseType: !163, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !3347, file: !2290, line: 229, baseType: !163, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !3347, file: !2290, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !3347, file: !2290, line: 238, baseType: !163, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !3347, file: !2290, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !3347, file: !2290, line: 244, baseType: !163, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !3347, file: !2290, line: 247, baseType: !163, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !3347, file: !2290, line: 252, baseType: !163, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !3347, file: !2290, line: 257, baseType: !163, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !3347, file: !2290, line: 260, baseType: !161, size: 8, offset: 24)
!3368 = !DIDerivedType(tag: DW_TAG_member, scope: !3347, file: !2290, line: 262, baseType: !3369, size: 32, offset: 32)
!3369 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3347, file: !2290, line: 262, size: 32, elements: !3370)
!3370 = !{!3371, !3372}
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !3369, file: !2290, line: 267, baseType: !103, size: 32)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !3369, file: !2290, line: 289, baseType: !103, size: 32)
!3373 = !DIDerivedType(tag: DW_TAG_member, scope: !3347, file: !2290, line: 292, baseType: !3374, size: 32, offset: 64)
!3374 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3347, file: !2290, line: 292, size: 32, elements: !3375)
!3375 = !{!3376, !3377}
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !3374, file: !2290, line: 297, baseType: !103, size: 32)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !3374, file: !2290, line: 306, baseType: !103, size: 32)
!3378 = !DILocalVariable(name: "conv", scope: !3332, file: !2290, line: 1400, type: !3379)
!3379 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3380)
!3380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3347, size: 32)
!3381 = !DILocalVariable(name: "value", scope: !3332, file: !2290, line: 1401, type: !3382)
!3382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3383)
!3383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3337, size: 32)
!3384 = !DILocalVariable(name: "sp", scope: !3332, file: !2290, line: 1402, type: !150)
!3385 = !DILocalVariable(name: "width", scope: !3332, file: !2290, line: 1403, type: !103)
!3386 = !DILocalVariable(name: "precision", scope: !3332, file: !2290, line: 1404, type: !103)
!3387 = !DILocalVariable(name: "bps", scope: !3332, file: !2290, line: 1405, type: !150)
!3388 = !DILocalVariable(name: "bpe", scope: !3332, file: !2290, line: 1406, type: !150)
!3389 = !DILocalVariable(name: "sign", scope: !3332, file: !2290, line: 1407, type: !152)
!3390 = !DILocalVariable(name: "arg", scope: !3391, file: !2290, line: 1432, type: !103)
!3391 = distinct !DILexicalBlock(scope: !3392, file: !2290, line: 1431, column: 24)
!3392 = distinct !DILexicalBlock(scope: !3332, file: !2290, line: 1431, column: 7)
!3393 = !DILocalVariable(name: "specifier_cat", scope: !3332, file: !2290, line: 1468, type: !2289)
!3394 = !DILocalVariable(name: "length_mod", scope: !3332, file: !2290, line: 1470, type: !2297)
!3395 = !DILocalVariable(name: "rc", scope: !3396, file: !2290, line: 1575, type: !103)
!3396 = distinct !DILexicalBlock(scope: !3397, file: !2290, line: 1575, column: 4)
!3397 = distinct !DILexicalBlock(scope: !3398, file: !2290, line: 1574, column: 43)
!3398 = distinct !DILexicalBlock(scope: !3332, file: !2290, line: 1574, column: 7)
!3399 = !DILocalVariable(name: "rc", scope: !3400, file: !2290, line: 1584, type: !103)
!3400 = distinct !DILexicalBlock(scope: !3401, file: !2290, line: 1584, column: 4)
!3401 = distinct !DILexicalBlock(scope: !3332, file: !2290, line: 1582, column: 28)
!3402 = !DILocalVariable(name: "len", scope: !3403, file: !2290, line: 1589, type: !352)
!3403 = distinct !DILexicalBlock(scope: !3401, file: !2290, line: 1586, column: 13)
!3404 = !DILocalVariable(name: "len", scope: !3405, file: !2290, line: 1641, type: !352)
!3405 = distinct !DILexicalBlock(scope: !3406, file: !2290, line: 1640, column: 24)
!3406 = distinct !DILexicalBlock(scope: !3401, file: !2290, line: 1640, column: 8)
!3407 = !DILocalVariable(name: "nj_len", scope: !3332, file: !2290, line: 1722, type: !352)
!3408 = !DILocalVariable(name: "pad_len", scope: !3332, file: !2290, line: 1723, type: !103)
!3409 = !DILocalVariable(name: "pad", scope: !3410, file: !2290, line: 1751, type: !152)
!3410 = distinct !DILexicalBlock(scope: !3411, file: !2290, line: 1750, column: 26)
!3411 = distinct !DILexicalBlock(scope: !3412, file: !2290, line: 1750, column: 8)
!3412 = distinct !DILexicalBlock(scope: !3413, file: !2290, line: 1747, column: 18)
!3413 = distinct !DILexicalBlock(scope: !3332, file: !2290, line: 1747, column: 7)
!3414 = !DILocalVariable(name: "rc", scope: !3415, file: !2290, line: 1758, type: !103)
!3415 = distinct !DILexicalBlock(scope: !3416, file: !2290, line: 1758, column: 7)
!3416 = distinct !DILexicalBlock(scope: !3417, file: !2290, line: 1757, column: 21)
!3417 = distinct !DILexicalBlock(scope: !3418, file: !2290, line: 1757, column: 10)
!3418 = distinct !DILexicalBlock(scope: !3419, file: !2290, line: 1756, column: 26)
!3419 = distinct !DILexicalBlock(scope: !3410, file: !2290, line: 1756, column: 9)
!3420 = !DILocalVariable(name: "rc", scope: !3421, file: !2290, line: 1765, type: !103)
!3421 = distinct !DILexicalBlock(scope: !3422, file: !2290, line: 1765, column: 6)
!3422 = distinct !DILexicalBlock(scope: !3410, file: !2290, line: 1764, column: 25)
!3423 = !DILocalVariable(name: "rc", scope: !3424, file: !2290, line: 1774, type: !103)
!3424 = distinct !DILexicalBlock(scope: !3425, file: !2290, line: 1774, column: 4)
!3425 = distinct !DILexicalBlock(scope: !3426, file: !2290, line: 1773, column: 18)
!3426 = distinct !DILexicalBlock(scope: !3332, file: !2290, line: 1773, column: 7)
!3427 = !DILocalVariable(name: "rc", scope: !3428, file: !2290, line: 1819, type: !103)
!3428 = distinct !DILexicalBlock(scope: !3429, file: !2290, line: 1819, column: 5)
!3429 = distinct !DILexicalBlock(scope: !3430, file: !2290, line: 1818, column: 44)
!3430 = distinct !DILexicalBlock(scope: !3431, file: !2290, line: 1818, column: 8)
!3431 = distinct !DILexicalBlock(scope: !3432, file: !2290, line: 1817, column: 10)
!3432 = distinct !DILexicalBlock(scope: !3332, file: !2290, line: 1777, column: 7)
!3433 = !DILocalVariable(name: "rc", scope: !3434, file: !2290, line: 1823, type: !103)
!3434 = distinct !DILexicalBlock(scope: !3435, file: !2290, line: 1823, column: 5)
!3435 = distinct !DILexicalBlock(scope: !3436, file: !2290, line: 1822, column: 26)
!3436 = distinct !DILexicalBlock(scope: !3431, file: !2290, line: 1822, column: 8)
!3437 = !DILocalVariable(name: "rc", scope: !3438, file: !2290, line: 1828, type: !103)
!3438 = distinct !DILexicalBlock(scope: !3439, file: !2290, line: 1828, column: 5)
!3439 = distinct !DILexicalBlock(scope: !3431, file: !2290, line: 1827, column: 26)
!3440 = !DILocalVariable(name: "rc", scope: !3441, file: !2290, line: 1831, type: !103)
!3441 = distinct !DILexicalBlock(scope: !3431, file: !2290, line: 1831, column: 4)
!3442 = !DILocalVariable(name: "rc", scope: !3443, file: !2290, line: 1836, type: !103)
!3443 = distinct !DILexicalBlock(scope: !3444, file: !2290, line: 1836, column: 4)
!3444 = distinct !DILexicalBlock(scope: !3332, file: !2290, line: 1835, column: 21)
!3445 = !DILabel(scope: !3401, name: "prec_int_pad0", file: !2290, line: 1634)
!3446 = !DILocation(line: 0, scope: !3305)
!3447 = !DILocation(line: 1341, column: 2, scope: !3305)
!3448 = !DILocation(line: 1341, column: 7, scope: !3305)
!3449 = !DILocation(line: 1375, column: 2, scope: !3305)
!3450 = !DILocation(line: 1342, column: 9, scope: !3305)
!3451 = !DILocation(line: 1375, column: 9, scope: !3305)
!3452 = !DILocation(line: 1377, column: 4, scope: !3329)
!3453 = !DILocation(line: 0, scope: !3329)
!3454 = !DILocation(line: 1377, column: 4, scope: !3455)
!3455 = distinct !DILexicalBlock(scope: !3329, file: !2290, line: 1377, column: 4)
!3456 = distinct !{!3456, !3449, !3457}
!3457 = !DILocation(line: 1839, column: 2, scope: !3305)
!3458 = !DILocation(line: 1392, column: 3, scope: !3332)
!3459 = !DILocation(line: 1395, column: 5, scope: !3332)
!3460 = !DILocation(line: 0, scope: !3332)
!3461 = !DILocation(line: 1409, column: 8, scope: !3332)
!3462 = !DILocation(line: 1414, column: 13, scope: !3463)
!3463 = distinct !DILexicalBlock(scope: !3332, file: !2290, line: 1414, column: 7)
!3464 = !DILocation(line: 1414, column: 7, scope: !3332)
!3465 = !DILocation(line: 1415, column: 12, scope: !3466)
!3466 = distinct !DILexicalBlock(scope: !3463, file: !2290, line: 1414, column: 25)
!3467 = !DILocation(line: 1417, column: 14, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3466, file: !2290, line: 1417, column: 8)
!3469 = !DILocation(line: 1417, column: 8, scope: !3466)
!3470 = !DILocation(line: 1418, column: 21, scope: !3471)
!3471 = distinct !DILexicalBlock(scope: !3468, file: !2290, line: 1417, column: 19)
!3472 = !DILocation(line: 1419, column: 13, scope: !3471)
!3473 = !DILocation(line: 1420, column: 4, scope: !3471)
!3474 = !DILocation(line: 1421, column: 20, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3463, file: !2290, line: 1421, column: 14)
!3476 = !DILocation(line: 1421, column: 14, scope: !3463)
!3477 = !DILocation(line: 1431, column: 13, scope: !3392)
!3478 = !DILocation(line: 1431, column: 7, scope: !3332)
!3479 = !DILocation(line: 1432, column: 14, scope: !3391)
!3480 = !DILocation(line: 0, scope: !3391)
!3481 = !DILocation(line: 1434, column: 12, scope: !3482)
!3482 = distinct !DILexicalBlock(scope: !3391, file: !2290, line: 1434, column: 8)
!3483 = !DILocation(line: 1434, column: 8, scope: !3391)
!3484 = !DILocation(line: 1435, column: 24, scope: !3485)
!3485 = distinct !DILexicalBlock(scope: !3482, file: !2290, line: 1434, column: 17)
!3486 = !DILocation(line: 1436, column: 4, scope: !3485)
!3487 = !DILocation(line: 1439, column: 20, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3392, file: !2290, line: 1439, column: 14)
!3489 = !DILocation(line: 1439, column: 14, scope: !3392)
!3490 = !DILocation(line: 1469, column: 37, scope: !3332)
!3491 = !DILocation(line: 1448, column: 20, scope: !3332)
!3492 = !DILocation(line: 1449, column: 22, scope: !3332)
!3493 = !DILocation(line: 1471, column: 34, scope: !3332)
!3494 = !DILocation(line: 1478, column: 7, scope: !3332)
!3495 = !DILocation(line: 1479, column: 4, scope: !3496)
!3496 = distinct !DILexicalBlock(scope: !3497, file: !2290, line: 1478, column: 40)
!3497 = distinct !DILexicalBlock(scope: !3332, file: !2290, line: 1478, column: 7)
!3498 = !DILocation(line: 1484, column: 19, scope: !3499)
!3499 = distinct !DILexicalBlock(scope: !3496, file: !2290, line: 1479, column: 24)
!3500 = !DILocation(line: 1484, column: 17, scope: !3499)
!3501 = !DILocation(line: 1485, column: 5, scope: !3499)
!3502 = !DILocation(line: 1492, column: 20, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3504, file: !2290, line: 1491, column: 12)
!3504 = distinct !DILexicalBlock(scope: !3499, file: !2290, line: 1487, column: 9)
!3505 = !DILocation(line: 1492, column: 18, scope: !3503)
!3506 = !DILocation(line: 1494, column: 5, scope: !3499)
!3507 = !DILocation(line: 1497, column: 23, scope: !3499)
!3508 = !DILocation(line: 1496, column: 17, scope: !3499)
!3509 = !DILocation(line: 1498, column: 5, scope: !3499)
!3510 = !DILocation(line: 1501, column: 23, scope: !3499)
!3511 = !DILocation(line: 1500, column: 17, scope: !3499)
!3512 = !DILocation(line: 1502, column: 5, scope: !3499)
!3513 = !DILocation(line: 1513, column: 23, scope: !3499)
!3514 = !DILocation(line: 1513, column: 6, scope: !3499)
!3515 = !DILocation(line: 1512, column: 17, scope: !3499)
!3516 = !DILocation(line: 1514, column: 5, scope: !3499)
!3517 = !DILocation(line: 0, scope: !3499)
!3518 = !DILocation(line: 1516, column: 8, scope: !3496)
!3519 = !DILocation(line: 1517, column: 19, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3521, file: !2290, line: 1516, column: 33)
!3521 = distinct !DILexicalBlock(scope: !3496, file: !2290, line: 1516, column: 8)
!3522 = !DILocation(line: 1517, column: 17, scope: !3520)
!3523 = !DILocation(line: 1518, column: 4, scope: !3520)
!3524 = !DILocation(line: 1519, column: 19, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3526, file: !2290, line: 1518, column: 39)
!3526 = distinct !DILexicalBlock(scope: !3521, file: !2290, line: 1518, column: 15)
!3527 = !DILocation(line: 1519, column: 17, scope: !3525)
!3528 = !DILocation(line: 1520, column: 4, scope: !3525)
!3529 = !DILocation(line: 1522, column: 4, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3531, file: !2290, line: 1521, column: 47)
!3531 = distinct !DILexicalBlock(scope: !3497, file: !2290, line: 1521, column: 14)
!3532 = !DILocation(line: 1527, column: 19, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3530, file: !2290, line: 1522, column: 24)
!3534 = !DILocation(line: 1527, column: 17, scope: !3533)
!3535 = !DILocation(line: 1528, column: 5, scope: !3533)
!3536 = !DILocation(line: 0, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3533, file: !2290, line: 1530, column: 9)
!3538 = !DILocation(line: 1540, column: 23, scope: !3533)
!3539 = !DILocation(line: 1539, column: 17, scope: !3533)
!3540 = !DILocation(line: 1542, column: 5, scope: !3533)
!3541 = !DILocation(line: 1545, column: 23, scope: !3533)
!3542 = !DILocation(line: 1544, column: 17, scope: !3533)
!3543 = !DILocation(line: 1547, column: 5, scope: !3533)
!3544 = !DILocation(line: 1551, column: 23, scope: !3533)
!3545 = !DILocation(line: 1551, column: 6, scope: !3533)
!3546 = !DILocation(line: 1550, column: 17, scope: !3533)
!3547 = !DILocation(line: 1552, column: 5, scope: !3533)
!3548 = !DILocation(line: 0, scope: !3533)
!3549 = !DILocation(line: 1554, column: 8, scope: !3530)
!3550 = !DILocation(line: 1555, column: 19, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !3552, file: !2290, line: 1554, column: 33)
!3552 = distinct !DILexicalBlock(scope: !3530, file: !2290, line: 1554, column: 8)
!3553 = !DILocation(line: 1555, column: 17, scope: !3551)
!3554 = !DILocation(line: 1556, column: 4, scope: !3551)
!3555 = !DILocation(line: 1557, column: 19, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3557, file: !2290, line: 1556, column: 39)
!3557 = distinct !DILexicalBlock(scope: !3552, file: !2290, line: 1556, column: 15)
!3558 = !DILocation(line: 1557, column: 17, scope: !3556)
!3559 = !DILocation(line: 1558, column: 4, scope: !3556)
!3560 = !DILocation(line: 0, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !3562, file: !2290, line: 1560, column: 8)
!3562 = distinct !DILexicalBlock(scope: !3563, file: !2290, line: 1559, column: 45)
!3563 = distinct !DILexicalBlock(scope: !3531, file: !2290, line: 1559, column: 14)
!3564 = !DILocation(line: 1566, column: 17, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3566, file: !2290, line: 1565, column: 46)
!3566 = distinct !DILexicalBlock(scope: !3563, file: !2290, line: 1565, column: 14)
!3567 = !DILocation(line: 1566, column: 15, scope: !3565)
!3568 = !DILocation(line: 1567, column: 3, scope: !3565)
!3569 = !DILocation(line: 1574, column: 21, scope: !3398)
!3570 = !DILocation(line: 1575, column: 4, scope: !3396)
!3571 = !DILocation(line: 0, scope: !3396)
!3572 = !DILocation(line: 1575, column: 4, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3396, file: !2290, line: 1575, column: 4)
!3574 = !DILocation(line: 1582, column: 17, scope: !3332)
!3575 = !DILocation(line: 1582, column: 3, scope: !3332)
!3576 = !DILocation(line: 1584, column: 4, scope: !3400)
!3577 = !DILocation(line: 0, scope: !3400)
!3578 = !DILocation(line: 1584, column: 4, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3400, file: !2290, line: 1584, column: 4)
!3580 = !DILocation(line: 1587, column: 31, scope: !3403)
!3581 = !DILocation(line: 1591, column: 18, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3403, file: !2290, line: 1591, column: 8)
!3583 = !DILocation(line: 1591, column: 8, scope: !3403)
!3584 = !DILocation(line: 1592, column: 11, scope: !3585)
!3585 = distinct !DILexicalBlock(scope: !3582, file: !2290, line: 1591, column: 24)
!3586 = !DILocation(line: 0, scope: !3403)
!3587 = !DILocation(line: 1593, column: 4, scope: !3585)
!3588 = !DILocation(line: 1594, column: 11, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3582, file: !2290, line: 1593, column: 11)
!3590 = !DILocation(line: 1604, column: 51, scope: !3401)
!3591 = !DILocation(line: 1604, column: 13, scope: !3401)
!3592 = !DILocation(line: 1604, column: 11, scope: !3401)
!3593 = !DILocation(line: 1606, column: 4, scope: !3401)
!3594 = !DILocation(line: 1609, column: 14, scope: !3595)
!3595 = distinct !DILexicalBlock(scope: !3401, file: !2290, line: 1609, column: 8)
!3596 = !DILocation(line: 1609, column: 8, scope: !3401)
!3597 = !DILocation(line: 1619, column: 18, scope: !3401)
!3598 = !DILocation(line: 1620, column: 13, scope: !3599)
!3599 = distinct !DILexicalBlock(scope: !3401, file: !2290, line: 1620, column: 8)
!3600 = !DILocation(line: 1620, column: 8, scope: !3401)
!3601 = !DILocation(line: 1622, column: 36, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3599, file: !2290, line: 1620, column: 18)
!3603 = !DILocation(line: 1622, column: 17, scope: !3602)
!3604 = !DILocation(line: 1623, column: 4, scope: !3602)
!3605 = !DILocation(line: 1632, column: 29, scope: !3401)
!3606 = !DILocation(line: 1632, column: 10, scope: !3401)
!3607 = !DILocation(line: 1632, column: 4, scope: !3401)
!3608 = !DILocation(line: 1407, column: 8, scope: !3332)
!3609 = !DILocation(line: 0, scope: !3401)
!3610 = !DILocation(line: 1634, column: 3, scope: !3401)
!3611 = !DILocation(line: 1640, column: 18, scope: !3406)
!3612 = !DILocation(line: 1640, column: 8, scope: !3401)
!3613 = !DILocation(line: 1729, column: 13, scope: !3614)
!3614 = distinct !DILexicalBlock(scope: !3332, file: !2290, line: 1729, column: 7)
!3615 = !DILocation(line: 1641, column: 22, scope: !3405)
!3616 = !DILocation(line: 0, scope: !3405)
!3617 = !DILocation(line: 1646, column: 21, scope: !3405)
!3618 = !DILocation(line: 1649, column: 13, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3405, file: !2290, line: 1649, column: 9)
!3620 = !DILocation(line: 1649, column: 9, scope: !3405)
!3621 = !DILocation(line: 1650, column: 35, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3619, file: !2290, line: 1649, column: 34)
!3623 = !DILocation(line: 1650, column: 23, scope: !3622)
!3624 = !DILocation(line: 1651, column: 5, scope: !3622)
!3625 = !DILocation(line: 1660, column: 15, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3401, file: !2290, line: 1660, column: 8)
!3627 = !DILocation(line: 1660, column: 19, scope: !3626)
!3628 = !DILocation(line: 1660, column: 8, scope: !3401)
!3629 = !DILocation(line: 1661, column: 23, scope: !3630)
!3630 = distinct !DILexicalBlock(scope: !3626, file: !2290, line: 1660, column: 28)
!3631 = !DILocation(line: 1661, column: 11, scope: !3630)
!3632 = !DILocation(line: 1665, column: 22, scope: !3630)
!3633 = !DILocation(line: 1666, column: 21, scope: !3630)
!3634 = !DILocation(line: 1668, column: 5, scope: !3630)
!3635 = !DILocation(line: 1677, column: 30, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !3637, file: !2290, line: 1676, column: 49)
!3637 = distinct !DILexicalBlock(scope: !3401, file: !2290, line: 1676, column: 8)
!3638 = !DILocation(line: 1677, column: 5, scope: !3636)
!3639 = !DILocation(line: 1680, column: 4, scope: !3401)
!3640 = !DILocation(line: 0, scope: !3582)
!3641 = !DILocation(line: 1597, column: 14, scope: !3403)
!3642 = !DILocation(line: 1699, column: 11, scope: !3643)
!3643 = distinct !DILexicalBlock(scope: !3332, file: !2290, line: 1699, column: 7)
!3644 = !DILocation(line: 1699, column: 7, scope: !3332)
!3645 = !DILocation(line: 1725, column: 7, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3332, file: !2290, line: 1725, column: 7)
!3647 = !DILocation(line: 1725, column: 12, scope: !3646)
!3648 = !DILocation(line: 1747, column: 13, scope: !3413)
!3649 = !DILocation(line: 1747, column: 7, scope: !3332)
!3650 = !DILocation(line: 1722, column: 24, scope: !3332)
!3651 = !DILocation(line: 1725, column: 7, scope: !3332)
!3652 = !DILocation(line: 1729, column: 7, scope: !3332)
!3653 = !DILocation(line: 1736, column: 13, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !3332, file: !2290, line: 1736, column: 7)
!3655 = !DILocation(line: 1735, column: 19, scope: !3332)
!3656 = !DILocation(line: 1736, column: 7, scope: !3332)
!3657 = !DILocation(line: 1748, column: 10, scope: !3412)
!3658 = !DILocation(line: 1750, column: 15, scope: !3411)
!3659 = !DILocation(line: 1750, column: 8, scope: !3412)
!3660 = !DILocation(line: 0, scope: !3410)
!3661 = !DILocation(line: 1756, column: 15, scope: !3419)
!3662 = !DILocation(line: 1756, column: 9, scope: !3410)
!3663 = !DILocation(line: 1758, column: 7, scope: !3415)
!3664 = !DILocation(line: 0, scope: !3415)
!3665 = !DILocation(line: 1758, column: 7, scope: !3666)
!3666 = distinct !DILexicalBlock(scope: !3415, file: !2290, line: 1758, column: 7)
!3667 = !DILocation(line: 1764, column: 5, scope: !3410)
!3668 = !DILocation(line: 0, scope: !3412)
!3669 = !DILocation(line: 1764, column: 20, scope: !3410)
!3670 = !DILocation(line: 1764, column: 17, scope: !3410)
!3671 = !DILocation(line: 1765, column: 6, scope: !3421)
!3672 = !DILocation(line: 0, scope: !3421)
!3673 = !DILocation(line: 1765, column: 6, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3421, file: !2290, line: 1765, column: 6)
!3675 = distinct !{!3675, !3667, !3676}
!3676 = !DILocation(line: 1766, column: 5, scope: !3410)
!3677 = !DILocation(line: 1773, column: 12, scope: !3426)
!3678 = !DILocation(line: 1773, column: 7, scope: !3332)
!3679 = !DILocation(line: 1773, column: 7, scope: !3426)
!3680 = !DILocation(line: 1774, column: 4, scope: !3424)
!3681 = !DILocation(line: 0, scope: !3424)
!3682 = !DILocation(line: 1774, column: 4, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3424, file: !2290, line: 1774, column: 4)
!3684 = !DILocation(line: 1818, column: 8, scope: !3430)
!3685 = !DILocation(line: 1818, column: 27, scope: !3430)
!3686 = !DILocation(line: 1818, column: 25, scope: !3430)
!3687 = !DILocation(line: 1818, column: 8, scope: !3431)
!3688 = !DILocation(line: 1819, column: 5, scope: !3428)
!3689 = !DILocation(line: 0, scope: !3428)
!3690 = !DILocation(line: 1819, column: 5, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3428, file: !2290, line: 1819, column: 5)
!3692 = !DILocation(line: 1822, column: 14, scope: !3436)
!3693 = !DILocation(line: 1822, column: 8, scope: !3431)
!3694 = !DILocation(line: 1823, column: 5, scope: !3434)
!3695 = !DILocation(line: 0, scope: !3434)
!3696 = !DILocation(line: 1823, column: 5, scope: !3697)
!3697 = distinct !DILexicalBlock(scope: !3434, file: !2290, line: 1823, column: 5)
!3698 = !DILocation(line: 1826, column: 20, scope: !3431)
!3699 = !DILocation(line: 1827, column: 4, scope: !3431)
!3700 = !DILocation(line: 0, scope: !3431)
!3701 = !DILocation(line: 1827, column: 21, scope: !3431)
!3702 = !DILocation(line: 1827, column: 18, scope: !3431)
!3703 = !DILocation(line: 1828, column: 5, scope: !3438)
!3704 = !DILocation(line: 0, scope: !3438)
!3705 = !DILocation(line: 1828, column: 5, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !3438, file: !2290, line: 1828, column: 5)
!3707 = distinct !{!3707, !3699, !3708}
!3708 = !DILocation(line: 1829, column: 4, scope: !3431)
!3709 = !DILocation(line: 1831, column: 4, scope: !3441)
!3710 = !DILocation(line: 0, scope: !3441)
!3711 = !DILocation(line: 1831, column: 4, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !3441, file: !2290, line: 1831, column: 4)
!3713 = !DILocation(line: 1835, column: 16, scope: !3332)
!3714 = !DILocation(line: 1835, column: 3, scope: !3332)
!3715 = !DILocation(line: 1836, column: 4, scope: !3443)
!3716 = !DILocation(line: 0, scope: !3443)
!3717 = !DILocation(line: 1836, column: 4, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !3443, file: !2290, line: 1836, column: 4)
!3719 = !DILocation(line: 1837, column: 4, scope: !3444)
!3720 = distinct !{!3720, !3714, !3721}
!3721 = !DILocation(line: 1838, column: 3, scope: !3332)
!3722 = !DILocation(line: 1844, column: 1, scope: !3305)
!3723 = distinct !DISubprogram(name: "extract_conversion", scope: !2290, file: !2290, line: 642, type: !3724, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !3726)
!3724 = !DISubroutineType(types: !3725)
!3725 = !{!150, !3380, !150}
!3726 = !{!3727, !3728}
!3727 = !DILocalVariable(name: "conv", arg: 1, scope: !3723, file: !2290, line: 642, type: !3380)
!3728 = !DILocalVariable(name: "sp", arg: 2, scope: !3723, file: !2290, line: 643, type: !150)
!3729 = !DILocation(line: 0, scope: !3723)
!3730 = !DILocation(line: 645, column: 10, scope: !3723)
!3731 = !DILocation(line: 653, column: 2, scope: !3723)
!3732 = !DILocation(line: 654, column: 6, scope: !3733)
!3733 = distinct !DILexicalBlock(scope: !3723, file: !2290, line: 654, column: 6)
!3734 = !DILocation(line: 654, column: 10, scope: !3733)
!3735 = !DILocation(line: 654, column: 6, scope: !3723)
!3736 = !DILocation(line: 655, column: 24, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3733, file: !2290, line: 654, column: 18)
!3738 = !DILocation(line: 655, column: 19, scope: !3737)
!3739 = !DILocation(line: 656, column: 3, scope: !3737)
!3740 = !DILocation(line: 659, column: 7, scope: !3723)
!3741 = !DILocation(line: 660, column: 7, scope: !3723)
!3742 = !DILocation(line: 661, column: 7, scope: !3723)
!3743 = !DILocation(line: 662, column: 7, scope: !3723)
!3744 = !DILocation(line: 663, column: 7, scope: !3723)
!3745 = !DILocation(line: 665, column: 2, scope: !3723)
!3746 = !DILocation(line: 666, column: 1, scope: !3723)
!3747 = distinct !DISubprogram(name: "outs", scope: !2290, file: !2290, line: 1319, type: !3748, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !3750)
!3748 = !DISubroutineType(types: !3749)
!3749 = !{!103, !3036, !102, !150, !150}
!3750 = !{!3751, !3752, !3753, !3754, !3755, !3756}
!3751 = !DILocalVariable(name: "out", arg: 1, scope: !3747, file: !2290, line: 1319, type: !3036)
!3752 = !DILocalVariable(name: "ctx", arg: 2, scope: !3747, file: !2290, line: 1320, type: !102)
!3753 = !DILocalVariable(name: "sp", arg: 3, scope: !3747, file: !2290, line: 1321, type: !150)
!3754 = !DILocalVariable(name: "ep", arg: 4, scope: !3747, file: !2290, line: 1322, type: !150)
!3755 = !DILocalVariable(name: "count", scope: !3747, file: !2290, line: 1324, type: !352)
!3756 = !DILocalVariable(name: "rc", scope: !3757, file: !2290, line: 1327, type: !103)
!3757 = distinct !DILexicalBlock(scope: !3747, file: !2290, line: 1326, column: 45)
!3758 = !DILocation(line: 0, scope: !3747)
!3759 = !DILocation(line: 1326, column: 2, scope: !3747)
!3760 = !DILocation(line: 1324, column: 9, scope: !3747)
!3761 = !DILocation(line: 1326, column: 13, scope: !3747)
!3762 = !DILocation(line: 1326, column: 19, scope: !3747)
!3763 = !DILocation(line: 1327, column: 21, scope: !3757)
!3764 = !DILocation(line: 1326, column: 36, scope: !3747)
!3765 = !DILocation(line: 1326, column: 39, scope: !3747)
!3766 = !DILocation(line: 1327, column: 24, scope: !3757)
!3767 = !DILocation(line: 1327, column: 16, scope: !3757)
!3768 = !DILocation(line: 1327, column: 12, scope: !3757)
!3769 = !DILocation(line: 0, scope: !3757)
!3770 = !DILocation(line: 1329, column: 10, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3757, file: !2290, line: 1329, column: 7)
!3772 = !DILocation(line: 1329, column: 7, scope: !3757)
!3773 = distinct !{!3773, !3759, !3774}
!3774 = !DILocation(line: 1333, column: 2, scope: !3747)
!3775 = !DILocation(line: 1336, column: 1, scope: !3747)
!3776 = distinct !DISubprogram(name: "encode_uint", scope: !2290, file: !2290, line: 788, type: !3777, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !3779)
!3777 = !DISubroutineType(types: !3778)
!3778 = !{!1081, !2312, !3380, !1081, !150}
!3779 = !{!3780, !3781, !3782, !3783, !3784, !3785, !3787, !3788}
!3780 = !DILocalVariable(name: "value", arg: 1, scope: !3776, file: !2290, line: 788, type: !2312)
!3781 = !DILocalVariable(name: "conv", arg: 2, scope: !3776, file: !2290, line: 789, type: !3380)
!3782 = !DILocalVariable(name: "bps", arg: 3, scope: !3776, file: !2290, line: 790, type: !1081)
!3783 = !DILocalVariable(name: "bpe", arg: 4, scope: !3776, file: !2290, line: 791, type: !150)
!3784 = !DILocalVariable(name: "upcase", scope: !3776, file: !2290, line: 793, type: !163)
!3785 = !DILocalVariable(name: "radix", scope: !3776, file: !2290, line: 794, type: !3786)
!3786 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!3787 = !DILocalVariable(name: "bp", scope: !3776, file: !2290, line: 795, type: !1081)
!3788 = !DILocalVariable(name: "lsv", scope: !3789, file: !2290, line: 798, type: !32)
!3789 = distinct !DILexicalBlock(scope: !3776, file: !2290, line: 797, column: 5)
!3790 = !DILocation(line: 0, scope: !3776)
!3791 = !DILocation(line: 793, column: 35, scope: !3776)
!3792 = !DILocation(line: 793, column: 24, scope: !3776)
!3793 = !DILocation(line: 793, column: 16, scope: !3776)
!3794 = !DILocation(line: 794, column: 29, scope: !3776)
!3795 = !DILocation(line: 795, column: 24, scope: !3776)
!3796 = !DILocation(line: 795, column: 17, scope: !3776)
!3797 = !DILocation(line: 797, column: 2, scope: !3776)
!3798 = !DILocation(line: 802, column: 9, scope: !3789)
!3799 = !DILocation(line: 798, column: 22, scope: !3789)
!3800 = !DILocation(line: 0, scope: !3789)
!3801 = !DILocation(line: 800, column: 16, scope: !3789)
!3802 = !DILocation(line: 800, column: 11, scope: !3789)
!3803 = !DILocation(line: 800, column: 4, scope: !3789)
!3804 = !DILocation(line: 800, column: 9, scope: !3789)
!3805 = !DILocation(line: 803, column: 18, scope: !3776)
!3806 = !DILocation(line: 803, column: 24, scope: !3776)
!3807 = !DILocation(line: 803, column: 2, scope: !3789)
!3808 = distinct !{!3808, !3797, !3809}
!3809 = !DILocation(line: 803, column: 37, scope: !3776)
!3810 = !DILocation(line: 808, column: 12, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !3776, file: !2290, line: 808, column: 6)
!3812 = !DILocation(line: 808, column: 6, scope: !3776)
!3813 = !DILocation(line: 809, column: 7, scope: !3814)
!3814 = distinct !DILexicalBlock(scope: !3811, file: !2290, line: 808, column: 23)
!3815 = !DILocation(line: 813, column: 3, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !3817, file: !2290, line: 811, column: 27)
!3817 = distinct !DILexicalBlock(scope: !3818, file: !2290, line: 811, column: 14)
!3818 = distinct !DILexicalBlock(scope: !3814, file: !2290, line: 809, column: 7)
!3819 = !DILocation(line: 0, scope: !3818)
!3820 = !DILocation(line: 818, column: 2, scope: !3776)
!3821 = distinct !DISubprogram(name: "store_count", scope: !2290, file: !2290, line: 1280, type: !3822, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !3826)
!3822 = !DISubroutineType(types: !3823)
!3823 = !{null, !3824, !102, !103}
!3824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3825, size: 32)
!3825 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3347)
!3826 = !{!3827, !3828, !3829}
!3827 = !DILocalVariable(name: "conv", arg: 1, scope: !3821, file: !2290, line: 1280, type: !3824)
!3828 = !DILocalVariable(name: "dp", arg: 2, scope: !3821, file: !2290, line: 1281, type: !102)
!3829 = !DILocalVariable(name: "count", arg: 3, scope: !3821, file: !2290, line: 1282, type: !103)
!3830 = !DILocation(line: 0, scope: !3821)
!3831 = !DILocation(line: 1284, column: 38, scope: !3821)
!3832 = !DILocation(line: 1284, column: 2, scope: !3821)
!3833 = !DILocation(line: 1286, column: 4, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3821, file: !2290, line: 1284, column: 50)
!3835 = !DILocation(line: 1286, column: 14, scope: !3834)
!3836 = !DILocation(line: 1287, column: 3, scope: !3834)
!3837 = !DILocation(line: 1289, column: 24, scope: !3834)
!3838 = !DILocation(line: 1289, column: 22, scope: !3834)
!3839 = !DILocation(line: 1290, column: 3, scope: !3834)
!3840 = !DILocation(line: 1292, column: 18, scope: !3834)
!3841 = !DILocation(line: 1292, column: 4, scope: !3834)
!3842 = !DILocation(line: 1292, column: 16, scope: !3834)
!3843 = !DILocation(line: 1293, column: 3, scope: !3834)
!3844 = !DILocation(line: 1295, column: 4, scope: !3834)
!3845 = !DILocation(line: 1295, column: 15, scope: !3834)
!3846 = !DILocation(line: 1296, column: 3, scope: !3834)
!3847 = !DILocation(line: 1298, column: 22, scope: !3834)
!3848 = !DILocation(line: 1298, column: 4, scope: !3834)
!3849 = !DILocation(line: 1298, column: 20, scope: !3834)
!3850 = !DILocation(line: 1299, column: 3, scope: !3834)
!3851 = !DILocation(line: 1301, column: 21, scope: !3834)
!3852 = !DILocation(line: 1301, column: 4, scope: !3834)
!3853 = !DILocation(line: 1301, column: 19, scope: !3834)
!3854 = !DILocation(line: 1302, column: 3, scope: !3834)
!3855 = !DILocation(line: 1304, column: 4, scope: !3834)
!3856 = !DILocation(line: 1304, column: 17, scope: !3834)
!3857 = !DILocation(line: 1305, column: 3, scope: !3834)
!3858 = !DILocation(line: 1307, column: 4, scope: !3834)
!3859 = !DILocation(line: 1307, column: 20, scope: !3834)
!3860 = !DILocation(line: 1308, column: 3, scope: !3834)
!3861 = !DILocation(line: 1316, column: 1, scope: !3821)
!3862 = distinct !DISubprogram(name: "isupper", scope: !3863, file: !3863, line: 16, type: !114, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !3864)
!3863 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3864 = !{!3865}
!3865 = !DILocalVariable(name: "a", arg: 1, scope: !3862, file: !3863, line: 16, type: !103)
!3866 = !DILocation(line: 0, scope: !3862)
!3867 = !DILocation(line: 18, column: 29, scope: !3862)
!3868 = !DILocation(line: 18, column: 45, scope: !3862)
!3869 = !DILocation(line: 18, column: 2, scope: !3862)
!3870 = distinct !DISubprogram(name: "conversion_radix", scope: !2290, file: !2290, line: 761, type: !3871, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !3873)
!3871 = !DISubroutineType(types: !3872)
!3872 = !{!352, !152}
!3873 = !{!3874}
!3874 = !DILocalVariable(name: "specifier", arg: 1, scope: !3870, file: !2290, line: 761, type: !152)
!3875 = !DILocation(line: 0, scope: !3870)
!3876 = !DILocation(line: 763, column: 2, scope: !3870)
!3877 = !DILocation(line: 770, column: 3, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3870, file: !2290, line: 763, column: 21)
!3879 = !DILocation(line: 774, column: 3, scope: !3878)
!3880 = !DILocation(line: 0, scope: !3878)
!3881 = !DILocation(line: 776, column: 1, scope: !3870)
!3882 = distinct !DISubprogram(name: "extract_flags", scope: !2290, file: !2290, line: 339, type: !3724, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !3883)
!3883 = !{!3884, !3885, !3886}
!3884 = !DILocalVariable(name: "conv", arg: 1, scope: !3882, file: !2290, line: 339, type: !3380)
!3885 = !DILocalVariable(name: "sp", arg: 2, scope: !3882, file: !2290, line: 340, type: !150)
!3886 = !DILocalVariable(name: "loop", scope: !3882, file: !2290, line: 342, type: !163)
!3887 = !DILocation(line: 0, scope: !3882)
!3888 = !DILocation(line: 344, column: 2, scope: !3882)
!3889 = !DILocation(line: 345, column: 11, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3882, file: !2290, line: 344, column: 5)
!3891 = !DILocation(line: 345, column: 3, scope: !3890)
!3892 = !DILocation(line: 351, column: 4, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3890, file: !2290, line: 345, column: 16)
!3894 = !DILocation(line: 354, column: 4, scope: !3893)
!3895 = !DILocation(line: 357, column: 4, scope: !3893)
!3896 = !DILocation(line: 360, column: 4, scope: !3893)
!3897 = !DILocation(line: 0, scope: !3893)
!3898 = !DILocation(line: 370, column: 12, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3882, file: !2290, line: 370, column: 6)
!3900 = !DILocation(line: 370, column: 22, scope: !3899)
!3901 = !DILocation(line: 371, column: 19, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3899, file: !2290, line: 370, column: 42)
!3903 = !DILocation(line: 372, column: 2, scope: !3902)
!3904 = !DILocation(line: 376, column: 2, scope: !3882)
!3905 = distinct !DISubprogram(name: "extract_width", scope: !2290, file: !2290, line: 388, type: !3724, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !3906)
!3906 = !{!3907, !3908, !3909, !3910}
!3907 = !DILocalVariable(name: "conv", arg: 1, scope: !3905, file: !2290, line: 388, type: !3380)
!3908 = !DILocalVariable(name: "sp", arg: 2, scope: !3905, file: !2290, line: 389, type: !150)
!3909 = !DILocalVariable(name: "wp", scope: !3905, file: !2290, line: 398, type: !150)
!3910 = !DILocalVariable(name: "width", scope: !3905, file: !2290, line: 399, type: !352)
!3911 = !DILocation(line: 0, scope: !3905)
!3912 = !DILocation(line: 391, column: 8, scope: !3905)
!3913 = !DILocation(line: 391, column: 22, scope: !3905)
!3914 = !DILocation(line: 393, column: 6, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3905, file: !2290, line: 393, column: 6)
!3916 = !DILocation(line: 393, column: 10, scope: !3915)
!3917 = !DILocation(line: 393, column: 6, scope: !3905)
!3918 = !DILocation(line: 394, column: 20, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3915, file: !2290, line: 393, column: 18)
!3920 = !DILocation(line: 395, column: 10, scope: !3919)
!3921 = !DILocation(line: 395, column: 3, scope: !3919)
!3922 = !DILocation(line: 399, column: 17, scope: !3905)
!3923 = !DILocation(line: 401, column: 6, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3905, file: !2290, line: 401, column: 6)
!3925 = !DILocation(line: 401, column: 9, scope: !3924)
!3926 = !DILocation(line: 401, column: 6, scope: !3905)
!3927 = !DILocation(line: 402, column: 23, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3924, file: !2290, line: 401, column: 16)
!3929 = !DILocation(line: 403, column: 9, scope: !3928)
!3930 = !DILocation(line: 403, column: 21, scope: !3928)
!3931 = !DILocation(line: 405, column: 11, scope: !3928)
!3932 = !DILocation(line: 404, column: 21, scope: !3928)
!3933 = !DILocation(line: 406, column: 2, scope: !3928)
!3934 = !DILocation(line: 409, column: 1, scope: !3905)
!3935 = distinct !DISubprogram(name: "extract_prec", scope: !2290, file: !2290, line: 420, type: !3724, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !3936)
!3936 = !{!3937, !3938, !3939}
!3937 = !DILocalVariable(name: "conv", arg: 1, scope: !3935, file: !2290, line: 420, type: !3380)
!3938 = !DILocalVariable(name: "sp", arg: 2, scope: !3935, file: !2290, line: 421, type: !150)
!3939 = !DILocalVariable(name: "prec", scope: !3935, file: !2290, line: 435, type: !352)
!3940 = !DILocation(line: 0, scope: !3935)
!3941 = !DILocation(line: 423, column: 24, scope: !3935)
!3942 = !DILocation(line: 423, column: 28, scope: !3935)
!3943 = !DILocation(line: 423, column: 8, scope: !3935)
!3944 = !DILocation(line: 423, column: 21, scope: !3935)
!3945 = !DILocation(line: 425, column: 6, scope: !3935)
!3946 = !DILocation(line: 428, column: 2, scope: !3935)
!3947 = !DILocation(line: 430, column: 6, scope: !3948)
!3948 = distinct !DILexicalBlock(scope: !3935, file: !2290, line: 430, column: 6)
!3949 = !DILocation(line: 430, column: 10, scope: !3948)
!3950 = !DILocation(line: 430, column: 6, scope: !3935)
!3951 = !DILocation(line: 431, column: 19, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3948, file: !2290, line: 430, column: 18)
!3953 = !DILocation(line: 432, column: 10, scope: !3952)
!3954 = !DILocation(line: 432, column: 3, scope: !3952)
!3955 = !DILocation(line: 435, column: 16, scope: !3935)
!3956 = !DILocation(line: 437, column: 8, scope: !3935)
!3957 = !DILocation(line: 437, column: 19, scope: !3935)
!3958 = !DILocation(line: 439, column: 10, scope: !3935)
!3959 = !DILocation(line: 438, column: 20, scope: !3935)
!3960 = !DILocation(line: 441, column: 9, scope: !3935)
!3961 = !DILocation(line: 442, column: 1, scope: !3935)
!3962 = distinct !DISubprogram(name: "extract_length", scope: !2290, file: !2290, line: 453, type: !3724, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !3963)
!3963 = !{!3964, !3965}
!3964 = !DILocalVariable(name: "conv", arg: 1, scope: !3962, file: !2290, line: 453, type: !3380)
!3965 = !DILocalVariable(name: "sp", arg: 2, scope: !3962, file: !2290, line: 454, type: !150)
!3966 = !DILocation(line: 0, scope: !3962)
!3967 = !DILocation(line: 456, column: 10, scope: !3962)
!3968 = !DILocation(line: 456, column: 2, scope: !3962)
!3969 = !DILocation(line: 458, column: 8, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3971, file: !2290, line: 458, column: 7)
!3971 = distinct !DILexicalBlock(scope: !3962, file: !2290, line: 456, column: 15)
!3972 = !DILocation(line: 458, column: 7, scope: !3970)
!3973 = !DILocation(line: 458, column: 13, scope: !3970)
!3974 = !DILocation(line: 0, scope: !3970)
!3975 = !DILocation(line: 458, column: 7, scope: !3971)
!3976 = !DILocation(line: 459, column: 21, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3970, file: !2290, line: 458, column: 21)
!3978 = !DILocation(line: 460, column: 4, scope: !3977)
!3979 = !DILocation(line: 461, column: 3, scope: !3977)
!3980 = !DILocation(line: 462, column: 21, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3970, file: !2290, line: 461, column: 10)
!3982 = !DILocation(line: 466, column: 8, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3971, file: !2290, line: 466, column: 7)
!3984 = !DILocation(line: 466, column: 7, scope: !3983)
!3985 = !DILocation(line: 466, column: 13, scope: !3983)
!3986 = !DILocation(line: 0, scope: !3983)
!3987 = !DILocation(line: 466, column: 7, scope: !3971)
!3988 = !DILocation(line: 467, column: 21, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3983, file: !2290, line: 466, column: 21)
!3990 = !DILocation(line: 468, column: 4, scope: !3989)
!3991 = !DILocation(line: 469, column: 3, scope: !3989)
!3992 = !DILocation(line: 470, column: 21, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3983, file: !2290, line: 469, column: 10)
!3994 = !DILocation(line: 474, column: 9, scope: !3971)
!3995 = !DILocation(line: 474, column: 20, scope: !3971)
!3996 = !DILocation(line: 475, column: 3, scope: !3971)
!3997 = !DILocation(line: 476, column: 3, scope: !3971)
!3998 = !DILocation(line: 478, column: 9, scope: !3971)
!3999 = !DILocation(line: 478, column: 20, scope: !3971)
!4000 = !DILocation(line: 479, column: 3, scope: !3971)
!4001 = !DILocation(line: 480, column: 3, scope: !3971)
!4002 = !DILocation(line: 482, column: 9, scope: !3971)
!4003 = !DILocation(line: 482, column: 20, scope: !3971)
!4004 = !DILocation(line: 483, column: 3, scope: !3971)
!4005 = !DILocation(line: 484, column: 3, scope: !3971)
!4006 = !DILocation(line: 486, column: 9, scope: !3971)
!4007 = !DILocation(line: 486, column: 20, scope: !3971)
!4008 = !DILocation(line: 487, column: 3, scope: !3971)
!4009 = !DILocation(line: 492, column: 21, scope: !3971)
!4010 = !DILocation(line: 493, column: 3, scope: !3971)
!4011 = !DILocation(line: 495, column: 9, scope: !3971)
!4012 = !DILocation(line: 495, column: 20, scope: !3971)
!4013 = !DILocation(line: 496, column: 3, scope: !3971)
!4014 = !DILocation(line: 498, column: 2, scope: !3962)
!4015 = distinct !DISubprogram(name: "extract_specifier", scope: !2290, file: !2290, line: 513, type: !3724, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !4016)
!4016 = !{!4017, !4018, !4019, !4020}
!4017 = !DILocalVariable(name: "conv", arg: 1, scope: !4015, file: !2290, line: 513, type: !3380)
!4018 = !DILocalVariable(name: "sp", arg: 2, scope: !4015, file: !2290, line: 514, type: !150)
!4019 = !DILocalVariable(name: "unsupported", scope: !4015, file: !2290, line: 516, type: !163)
!4020 = !DILabel(scope: !4021, name: "int_conv", file: !2290, line: 526)
!4021 = distinct !DILexicalBlock(scope: !4015, file: !2290, line: 520, column: 27)
!4022 = !DILocation(line: 0, scope: !4015)
!4023 = !DILocation(line: 518, column: 20, scope: !4015)
!4024 = !DILocation(line: 518, column: 8, scope: !4015)
!4025 = !DILocation(line: 518, column: 18, scope: !4015)
!4026 = !DILocation(line: 520, column: 2, scope: !4015)
!4027 = !DILocation(line: 525, column: 3, scope: !4021)
!4028 = !DILocation(line: 0, scope: !4021)
!4029 = !DILocation(line: 526, column: 1, scope: !4021)
!4030 = !DILocation(line: 528, column: 24, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !4021, file: !2290, line: 528, column: 7)
!4032 = !DILocation(line: 528, column: 7, scope: !4021)
!4033 = !DILocation(line: 535, column: 23, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !4021, file: !2290, line: 535, column: 7)
!4035 = !DILocation(line: 535, column: 7, scope: !4021)
!4036 = !DILocation(line: 536, column: 36, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !4034, file: !2290, line: 535, column: 31)
!4038 = !DILocation(line: 537, column: 3, scope: !4037)
!4039 = !DILocation(line: 570, column: 9, scope: !4021)
!4040 = !DILocation(line: 570, column: 23, scope: !4021)
!4041 = !DILocation(line: 575, column: 4, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !4043, file: !2290, line: 573, column: 48)
!4043 = distinct !DILexicalBlock(scope: !4021, file: !2290, line: 573, column: 7)
!4044 = !DILocation(line: 603, column: 9, scope: !4021)
!4045 = !DILocation(line: 603, column: 23, scope: !4021)
!4046 = !DILocation(line: 605, column: 24, scope: !4047)
!4047 = distinct !DILexicalBlock(scope: !4021, file: !2290, line: 605, column: 7)
!4048 = !DILocation(line: 605, column: 7, scope: !4021)
!4049 = !DILocation(line: 612, column: 9, scope: !4021)
!4050 = !DILocation(line: 612, column: 23, scope: !4021)
!4051 = !DILocation(line: 619, column: 24, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !4021, file: !2290, line: 619, column: 7)
!4053 = !DILocation(line: 619, column: 7, scope: !4021)
!4054 = !DILocation(line: 625, column: 9, scope: !4021)
!4055 = !DILocation(line: 625, column: 17, scope: !4021)
!4056 = !DILocation(line: 626, column: 3, scope: !4021)
!4057 = !DILocation(line: 629, column: 20, scope: !4015)
!4058 = !DILocation(line: 629, column: 8, scope: !4015)
!4059 = !DILocation(line: 518, column: 23, scope: !4015)
!4060 = !DILocation(line: 631, column: 2, scope: !4015)
!4061 = distinct !DISubprogram(name: "extract_decimal", scope: !2290, file: !2290, line: 318, type: !4062, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !4065)
!4062 = !DISubroutineType(types: !4063)
!4063 = !{!352, !4064}
!4064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 32)
!4065 = !{!4066, !4067, !4068}
!4066 = !DILocalVariable(name: "str", arg: 1, scope: !4061, file: !2290, line: 318, type: !4064)
!4067 = !DILocalVariable(name: "sp", scope: !4061, file: !2290, line: 320, type: !150)
!4068 = !DILocalVariable(name: "val", scope: !4061, file: !2290, line: 321, type: !352)
!4069 = !DILocation(line: 0, scope: !4061)
!4070 = !DILocation(line: 320, column: 19, scope: !4061)
!4071 = !DILocation(line: 323, column: 37, scope: !4061)
!4072 = !DILocation(line: 323, column: 17, scope: !4061)
!4073 = !DILocation(line: 323, column: 9, scope: !4061)
!4074 = !DILocation(line: 323, column: 2, scope: !4061)
!4075 = !DILocation(line: 324, column: 13, scope: !4076)
!4076 = distinct !DILexicalBlock(scope: !4061, file: !2290, line: 323, column: 43)
!4077 = !DILocation(line: 324, column: 24, scope: !4076)
!4078 = !DILocation(line: 324, column: 19, scope: !4076)
!4079 = !DILocation(line: 324, column: 27, scope: !4076)
!4080 = distinct !{!4080, !4074, !4081}
!4081 = !DILocation(line: 325, column: 2, scope: !4061)
!4082 = !DILocation(line: 326, column: 7, scope: !4061)
!4083 = !DILocation(line: 327, column: 2, scope: !4061)
!4084 = distinct !DISubprogram(name: "isdigit", scope: !3863, file: !3863, line: 43, type: !114, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !4085)
!4085 = !{!4086}
!4086 = !DILocalVariable(name: "a", arg: 1, scope: !4084, file: !3863, line: 43, type: !103)
!4087 = !DILocation(line: 0, scope: !4084)
!4088 = !DILocation(line: 45, column: 29, scope: !4084)
!4089 = !DILocation(line: 45, column: 45, scope: !4084)
!4090 = !DILocation(line: 45, column: 2, scope: !4084)
!4091 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !4092, file: !4092, line: 9, type: !2860, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2324, retainedNodes: !474)
!4092 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!4093 = !DILocation(line: 11, column: 1, scope: !4091)
!4094 = !{i64 2147561392, i64 2147561435, i64 2147561475}
!4095 = !DILocation(line: 12, column: 1, scope: !4091)
!4096 = !{i64 2147565619, i64 2147565662, i64 2147565702}
!4097 = !DILocation(line: 13, column: 1, scope: !4091)
!4098 = !{i64 2147565828, i64 2147565871, i64 2147565911}
!4099 = !DILocation(line: 14, column: 1, scope: !4091)
!4100 = !{i64 2147565997, i64 2147566040, i64 2147566080}
!4101 = !DILocation(line: 15, column: 1, scope: !4091)
!4102 = !{i64 2147566160, i64 2147566203, i64 2147566243}
!4103 = !DILocation(line: 16, column: 1, scope: !4091)
!4104 = !{i64 2147566344, i64 2147566387, i64 2147566427}
!4105 = !DILocation(line: 17, column: 1, scope: !4091)
!4106 = !{i64 2147566523, i64 2147566566, i64 2147566606}
!4107 = !DILocation(line: 18, column: 1, scope: !4091)
!4108 = !{i64 2147566766, i64 2147566809, i64 2147566849}
!4109 = !DILocation(line: 19, column: 1, scope: !4091)
!4110 = !{i64 2147567001, i64 2147567044, i64 2147567084}
!4111 = !DILocation(line: 20, column: 1, scope: !4091)
!4112 = !{i64 2147567188, i64 2147567231, i64 2147567271}
!4113 = !DILocation(line: 21, column: 1, scope: !4091)
!4114 = !{i64 2147567404, i64 2147567447, i64 2147567487}
!4115 = !DILocation(line: 22, column: 1, scope: !4091)
!4116 = !{i64 2147567607, i64 2147567650, i64 2147567690}
!4117 = !DILocation(line: 23, column: 1, scope: !4091)
!4118 = !{i64 2147567810, i64 2147567853, i64 2147567893}
!4119 = !DILocation(line: 24, column: 1, scope: !4091)
!4120 = !{i64 2147567985, i64 2147568028, i64 2147568068}
!4121 = !DILocation(line: 25, column: 1, scope: !4091)
!4122 = !{i64 2147568193, i64 2147568236, i64 2147568276}
!4123 = !DILocation(line: 26, column: 1, scope: !4091)
!4124 = !{i64 2147568397, i64 2147568440, i64 2147568480}
!4125 = !DILocation(line: 27, column: 1, scope: !4091)
!4126 = !{i64 2147568590, i64 2147568633, i64 2147568673}
!4127 = !DILocation(line: 28, column: 1, scope: !4091)
!4128 = !{i64 2147568792, i64 2147568835, i64 2147568875}
!4129 = !DILocation(line: 29, column: 1, scope: !4091)
!4130 = !{i64 2147569019, i64 2147569062, i64 2147569102}
!4131 = !DILocation(line: 30, column: 1, scope: !4091)
!4132 = !{i64 2147569221, i64 2147569264, i64 2147569304}
!4133 = !DILocation(line: 31, column: 1, scope: !4091)
!4134 = !{i64 2147569436, i64 2147569479, i64 2147569519}
!4135 = !DILocation(line: 32, column: 1, scope: !4091)
!4136 = !{i64 2147569608, i64 2147569651, i64 2147569691}
!4137 = !DILocation(line: 33, column: 1, scope: !4091)
!4138 = !{i64 2147569810, i64 2147569853, i64 2147569893}
!4139 = !DILocation(line: 34, column: 1, scope: !4091)
!4140 = !{i64 2147570036, i64 2147570079, i64 2147570119}
!4141 = !DILocation(line: 35, column: 1, scope: !4091)
!4142 = !{i64 2147570235, i64 2147570278, i64 2147570318}
!4143 = !DILocation(line: 36, column: 1, scope: !4091)
!4144 = !{i64 2147570410, i64 2147570453, i64 2147570493}
!4145 = !DILocation(line: 37, column: 1, scope: !4091)
!4146 = !{i64 2147570678, i64 2147570721, i64 2147570761}
!4147 = !DILocation(line: 38, column: 1, scope: !4091)
!4148 = !{i64 2147570931, i64 2147570974, i64 2147571014}
!4149 = !DILocation(line: 39, column: 1, scope: !4091)
!4150 = !{i64 2147571172, i64 2147571215, i64 2147571255}
!4151 = !DILocation(line: 40, column: 1, scope: !4091)
!4152 = !{i64 2147571407, i64 2147571450, i64 2147571490}
!4153 = !DILocation(line: 41, column: 1, scope: !4091)
!4154 = !{i64 2147571639, i64 2147571682, i64 2147571722}
!4155 = !DILocation(line: 42, column: 1, scope: !4091)
!4156 = !{i64 2147571865, i64 2147571908, i64 2147571948}
!4157 = !DILocation(line: 43, column: 1, scope: !4091)
!4158 = !{i64 2147572103, i64 2147572146, i64 2147572186}
!4159 = !DILocation(line: 44, column: 1, scope: !4091)
!4160 = !{i64 2147572329, i64 2147572372, i64 2147572412}
!4161 = !DILocation(line: 45, column: 1, scope: !4091)
!4162 = !{i64 2147572564, i64 2147572607, i64 2147572647}
!4163 = !DILocation(line: 46, column: 1, scope: !4091)
!4164 = !{i64 2147572799, i64 2147572842, i64 2147572882}
!4165 = !DILocation(line: 47, column: 1, scope: !4091)
!4166 = !{i64 2147573037, i64 2147573080, i64 2147573120}
!4167 = !DILocation(line: 48, column: 1, scope: !4091)
!4168 = !{i64 2147573311, i64 2147573354, i64 2147573394}
!4169 = !DILocation(line: 49, column: 1, scope: !4091)
!4170 = !{i64 2147573549, i64 2147573592, i64 2147573632}
!4171 = !DILocation(line: 50, column: 1, scope: !4091)
!4172 = !{i64 2147573802, i64 2147573845, i64 2147573885}
!4173 = !DILocation(line: 51, column: 1, scope: !4091)
!4174 = !{i64 2147574046, i64 2147574089, i64 2147574129}
!4175 = !DILocation(line: 52, column: 1, scope: !4091)
!4176 = !{i64 2147578357, i64 2147578400, i64 2147578440}
!4177 = !DILocation(line: 53, column: 1, scope: !4091)
!4178 = !{i64 2147578598, i64 2147578641, i64 2147578681}
!4179 = !DILocation(line: 54, column: 1, scope: !4091)
!4180 = !{i64 2147578845, i64 2147578888, i64 2147578928}
!4181 = !DILocation(line: 55, column: 1, scope: !4091)
!4182 = !{i64 2147579080, i64 2147579123, i64 2147579163}
!4183 = !DILocation(line: 56, column: 1, scope: !4091)
!4184 = !{i64 2147579315, i64 2147579358, i64 2147579398}
!4185 = !DILocation(line: 57, column: 1, scope: !4091)
!4186 = !{i64 2147579550, i64 2147579593, i64 2147579633}
!4187 = !DILocation(line: 58, column: 1, scope: !4091)
!4188 = !{i64 2147579788, i64 2147579831, i64 2147579871}
!4189 = !DILocation(line: 59, column: 1, scope: !4091)
!4190 = !{i64 2147580029, i64 2147580072, i64 2147580112}
!4191 = !DILocation(line: 60, column: 1, scope: !4091)
!4192 = !{i64 2147580309, i64 2147580352, i64 2147580392}
!4193 = !DILocation(line: 61, column: 1, scope: !4091)
!4194 = !{i64 2147580568, i64 2147580611, i64 2147580651}
!4195 = !DILocation(line: 62, column: 1, scope: !4091)
!4196 = !{i64 2147580806, i64 2147580849, i64 2147580889}
!4197 = !DILocation(line: 63, column: 1, scope: !4091)
!4198 = !{i64 2147581065, i64 2147581108, i64 2147581148}
!4199 = !DILocation(line: 64, column: 1, scope: !4091)
!4200 = !{i64 2147581294, i64 2147581337, i64 2147581377}
!4201 = !DILocation(line: 65, column: 1, scope: !4091)
!4202 = !{i64 2147581502, i64 2147581545, i64 2147581585}
!4203 = !DILocation(line: 66, column: 1, scope: !4091)
!4204 = !{i64 2147581713, i64 2147581756, i64 2147581796}
!4205 = !DILocation(line: 67, column: 1, scope: !4091)
!4206 = !{i64 2147581948, i64 2147581991, i64 2147582031}
!4207 = !DILocation(line: 68, column: 1, scope: !4091)
!4208 = !{i64 2147582177, i64 2147582220, i64 2147582260}
!4209 = !DILocation(line: 69, column: 1, scope: !4091)
!4210 = !{i64 2147582415, i64 2147582458, i64 2147582498}
!4211 = !DILocation(line: 70, column: 1, scope: !4091)
!4212 = !{i64 2147582647, i64 2147582690, i64 2147582730}
!4213 = !DILocation(line: 71, column: 1, scope: !4091)
!4214 = !{i64 2147582873, i64 2147582916, i64 2147582956}
!4215 = !DILocation(line: 72, column: 1, scope: !4091)
!4216 = !{i64 2147583090, i64 2147583133, i64 2147583173}
!4217 = !DILocation(line: 73, column: 1, scope: !4091)
!4218 = !{i64 2147583322, i64 2147583365, i64 2147583405}
!4219 = !DILocation(line: 74, column: 1, scope: !4091)
!4220 = !{i64 2147583548, i64 2147583591, i64 2147583631}
!4221 = !DILocation(line: 75, column: 1, scope: !4091)
!4222 = !{i64 2147583762, i64 2147583805, i64 2147583845}
!4223 = !DILocation(line: 76, column: 1, scope: !4091)
!4224 = !{i64 2147583982, i64 2147584025, i64 2147584065}
!4225 = !DILocation(line: 77, column: 1, scope: !4091)
!4226 = !{i64 2147584214, i64 2147584257, i64 2147584297}
!4227 = !DILocation(line: 78, column: 1, scope: !4091)
!4228 = !{i64 2147584422, i64 2147584465, i64 2147584505}
!4229 = !DILocation(line: 79, column: 1, scope: !4091)
!4230 = !{i64 2147584627, i64 2147584670, i64 2147584710}
!4231 = !DILocation(line: 80, column: 1, scope: !4091)
!4232 = !{i64 2147584844, i64 2147584887, i64 2147584927}
!4233 = !DILocation(line: 81, column: 1, scope: !4091)
!4234 = !{i64 2147585058, i64 2147585101, i64 2147585141}
!4235 = !DILocation(line: 82, column: 1, scope: !4091)
!4236 = !{i64 2147585284, i64 2147585327, i64 2147585367}
!4237 = !DILocation(line: 83, column: 1, scope: !4091)
!4238 = !{i64 2147585504, i64 2147585547, i64 2147585587}
!4239 = !DILocation(line: 84, column: 1, scope: !4091)
!4240 = !{i64 2147585709, i64 2147585752, i64 2147585792}
!4241 = !DILocation(line: 85, column: 1, scope: !4091)
!4242 = !{i64 2147585941, i64 2147585984, i64 2147586024}
!4243 = !DILocation(line: 86, column: 1, scope: !4091)
!4244 = !{i64 2147586176, i64 2147586219, i64 2147586259}
!4245 = !DILocation(line: 87, column: 1, scope: !4091)
!4246 = !{i64 2147586426, i64 2147586469, i64 2147586509}
!4247 = !DILocation(line: 88, column: 1, scope: !4091)
!4248 = !{i64 2147590737, i64 2147590780, i64 2147590820}
!4249 = !DILocation(line: 89, column: 1, scope: !4091)
!4250 = !{i64 2147590975, i64 2147591018, i64 2147591058}
!4251 = !DILocation(line: 90, column: 1, scope: !4091)
!4252 = !{i64 2147591186, i64 2147591229, i64 2147591269}
!4253 = !DILocation(line: 91, column: 1, scope: !4091)
!4254 = !{i64 2147591403, i64 2147591446, i64 2147591486}
!4255 = !DILocation(line: 92, column: 1, scope: !4091)
!4256 = !{i64 2147591599, i64 2147591642, i64 2147591682}
!4257 = !DILocation(line: 93, column: 1, scope: !4091)
!4258 = !{i64 2147591801, i64 2147591844, i64 2147591884}
!4259 = !DILocation(line: 94, column: 1, scope: !4091)
!4260 = !{i64 2147591994, i64 2147592037, i64 2147592077}
!4261 = !DILocation(line: 95, column: 1, scope: !4091)
!4262 = !{i64 2147592202, i64 2147592245, i64 2147592285}
!4263 = !DILocation(line: 96, column: 1, scope: !4091)
!4264 = !{i64 2147592398, i64 2147592441, i64 2147592481}
!4265 = !DILocation(line: 97, column: 1, scope: !4091)
!4266 = !{i64 2147592648, i64 2147592691, i64 2147592731}
!4267 = !DILocation(line: 98, column: 1, scope: !4091)
!4268 = !{i64 2147592859, i64 2147592902, i64 2147592942}
!4269 = !DILocation(line: 99, column: 1, scope: !4091)
!4270 = !{i64 2147593058, i64 2147593101, i64 2147593141}
!4271 = !DILocation(line: 100, column: 1, scope: !4091)
!4272 = !{i64 2147593233, i64 2147593276, i64 2147593316}
!4273 = !DILocation(line: 101, column: 1, scope: !4091)
!4274 = !{i64 2147593417, i64 2147593460, i64 2147593500}
!4275 = !DILocation(line: 102, column: 1, scope: !4091)
!4276 = !{i64 2147593619, i64 2147593662, i64 2147593702}
!4277 = !DILocation(line: 103, column: 1, scope: !4091)
!4278 = !{i64 2147593800, i64 2147593843, i64 2147593883}
!4279 = !DILocation(line: 104, column: 1, scope: !4091)
!4280 = !{i64 2147594005, i64 2147594048, i64 2147594088}
!4281 = !DILocation(line: 105, column: 1, scope: !4091)
!4282 = !{i64 2147594204, i64 2147594247, i64 2147594287}
!4283 = !DILocation(line: 106, column: 1, scope: !4091)
!4284 = !{i64 2147594370, i64 2147594413, i64 2147594453}
!4285 = !DILocation(line: 107, column: 1, scope: !4091)
!4286 = !{i64 2147594554, i64 2147594597, i64 2147594637}
!4287 = !DILocation(line: 108, column: 1, scope: !4091)
!4288 = !{i64 2147594744, i64 2147594787, i64 2147594827}
!4289 = !DILocation(line: 109, column: 1, scope: !4091)
!4290 = !{i64 2147594928, i64 2147594971, i64 2147595011}
!4291 = !DILocation(line: 110, column: 1, scope: !4091)
!4292 = !{i64 2147595142, i64 2147595185, i64 2147595225}
!4293 = !DILocation(line: 111, column: 1, scope: !4091)
!4294 = !{i64 2147595353, i64 2147595396, i64 2147595436}
!4295 = !DILocation(line: 112, column: 1, scope: !4091)
!4296 = !{i64 2147595576, i64 2147595619, i64 2147595659}
!4297 = !DILocation(line: 113, column: 1, scope: !4091)
!4298 = !{i64 2147595760, i64 2147595803, i64 2147595843}
!4299 = !DILocation(line: 114, column: 1, scope: !4091)
!4300 = !{i64 2147595974, i64 2147596017, i64 2147596057}
!4301 = !DILocation(line: 115, column: 1, scope: !4091)
!4302 = !{i64 2147596140, i64 2147596183, i64 2147596223}
!4303 = !DILocation(line: 116, column: 1, scope: !4091)
!4304 = !{i64 2147596321, i64 2147596364, i64 2147596404}
!4305 = !DILocation(line: 117, column: 1, scope: !4091)
!4306 = !{i64 2147596514, i64 2147596557, i64 2147596597}
!4307 = !DILocation(line: 118, column: 1, scope: !4091)
!4308 = !{i64 2147596740, i64 2147596783, i64 2147596823}
!4309 = !DILocation(line: 119, column: 1, scope: !4091)
!4310 = !{i64 2147596954, i64 2147596997, i64 2147597037}
!4311 = !DILocation(line: 120, column: 1, scope: !4091)
!4312 = !{i64 2147597180, i64 2147597223, i64 2147597263}
!4313 = !DILocation(line: 121, column: 1, scope: !4091)
!4314 = !{i64 2147597397, i64 2147597440, i64 2147597480}
!4315 = !DILocation(line: 122, column: 1, scope: !4091)
!4316 = !{i64 2147597674, i64 2147597717, i64 2147597757}
!4317 = !DILocation(line: 123, column: 1, scope: !4091)
!4318 = !{i64 2147597900, i64 2147597943, i64 2147597983}
!4319 = !DILocation(line: 124, column: 1, scope: !4091)
!4320 = !{i64 2147598108, i64 2147598151, i64 2147598191}
!4321 = !DILocation(line: 125, column: 1, scope: !4091)
!4322 = !{i64 2147598304, i64 2147598347, i64 2147598387}
!4323 = !DILocation(line: 126, column: 1, scope: !4091)
!4324 = !{i64 2147598569, i64 2147598612, i64 2147598652}
!4325 = !DILocation(line: 127, column: 1, scope: !4091)
!4326 = !{i64 2147598783, i64 2147598826, i64 2147598866}
!4327 = !DILocation(line: 128, column: 1, scope: !4091)
!4328 = !{i64 2147598958, i64 2147599001, i64 2147599041}
!4329 = !DILocation(line: 129, column: 1, scope: !4091)
!4330 = !{i64 2147599212, i64 2147599255, i64 2147599295}
!4331 = !DILocation(line: 130, column: 1, scope: !4091)
!4332 = !{i64 2147599411, i64 2147599454, i64 2147599494}
!4333 = !DILocation(line: 131, column: 1, scope: !4091)
!4334 = !{i64 2147603714, i64 2147603757, i64 2147603797}
!4335 = !DILocation(line: 132, column: 1, scope: !4091)
!4336 = !{i64 2147603877, i64 2147603920, i64 2147603960}
!4337 = !DILocation(line: 133, column: 1, scope: !4091)
!4338 = !{i64 2147604064, i64 2147604107, i64 2147604147}
!4339 = !DILocation(line: 134, column: 1, scope: !4091)
!4340 = !{i64 2147604257, i64 2147604300, i64 2147604340}
!4341 = !DILocation(line: 135, column: 1, scope: !4091)
!4342 = !{i64 2147604440, i64 2147604483, i64 2147604523}
!4343 = !DILocation(line: 136, column: 1, scope: !4091)
!4344 = !{i64 2147604654, i64 2147604697, i64 2147604737}
!4345 = !DILocation(line: 137, column: 1, scope: !4091)
!4346 = !{i64 2147604865, i64 2147604908, i64 2147604948}
!4347 = !DILocation(line: 138, column: 1, scope: !4091)
!4348 = !{i64 2147605085, i64 2147605128, i64 2147605168}
!4349 = !DILocation(line: 139, column: 1, scope: !4091)
!4350 = !{i64 2147605292, i64 2147605335, i64 2147605375}
!4351 = !DILocation(line: 140, column: 1, scope: !4091)
!4352 = !{i64 2147605565, i64 2147605608, i64 2147605648}
!4353 = !DILocation(line: 141, column: 1, scope: !4091)
!4354 = !{i64 2147605813, i64 2147605856, i64 2147605896}
!4355 = !DILocation(line: 142, column: 1, scope: !4091)
!4356 = !{i64 2147606012, i64 2147606055, i64 2147606095}
!4357 = !DILocation(line: 143, column: 1, scope: !4091)
!4358 = !{i64 2147606247, i64 2147606290, i64 2147606330}
!4359 = !DILocation(line: 144, column: 1, scope: !4091)
!4360 = !{i64 2147606497, i64 2147606540, i64 2147606580}
!4361 = !DILocation(line: 145, column: 1, scope: !4091)
!4362 = !{i64 2147606699, i64 2147606742, i64 2147606782}
!4363 = !DILocation(line: 146, column: 1, scope: !4091)
!4364 = !{i64 2147606922, i64 2147606965, i64 2147607005}
!4365 = !DILocation(line: 147, column: 1, scope: !4091)
!4366 = !{i64 2147607136, i64 2147607179, i64 2147607219}
!4367 = !DILocation(line: 148, column: 1, scope: !4091)
!4368 = !{i64 2147607380, i64 2147607423, i64 2147607463}
!4369 = !DILocation(line: 149, column: 1, scope: !4091)
!4370 = !{i64 2147607609, i64 2147607652, i64 2147607692}
!4371 = !DILocation(line: 150, column: 1, scope: !4091)
!4372 = !{i64 2147607838, i64 2147607881, i64 2147607921}
!4373 = !DILocation(line: 151, column: 1, scope: !4091)
!4374 = !{i64 2147608046, i64 2147608089, i64 2147608129}
!4375 = !DILocation(line: 152, column: 1, scope: !4091)
!4376 = !{i64 2147608284, i64 2147608327, i64 2147608367}
!4377 = !DILocation(line: 153, column: 1, scope: !4091)
!4378 = !{i64 2147608510, i64 2147608553, i64 2147608593}
!4379 = !DILocation(line: 154, column: 1, scope: !4091)
!4380 = !{i64 2147608769, i64 2147608812, i64 2147608852}
!4381 = !DILocation(line: 155, column: 1, scope: !4091)
!4382 = !{i64 2147608989, i64 2147609032, i64 2147609072}
!4383 = !DILocation(line: 156, column: 1, scope: !4091)
!4384 = !{i64 2147609221, i64 2147609264, i64 2147609304}
!4385 = !DILocation(line: 157, column: 1, scope: !4091)
!4386 = !{i64 2147609462, i64 2147609505, i64 2147609545}
!4387 = !DILocation(line: 158, column: 1, scope: !4091)
!4388 = !{i64 2147609703, i64 2147609746, i64 2147609786}
!4389 = !DILocation(line: 159, column: 1, scope: !4091)
!4390 = !{i64 2147609926, i64 2147609969, i64 2147610009}
!4391 = !DILocation(line: 160, column: 1, scope: !4091)
!4392 = !{i64 2147610143, i64 2147610186, i64 2147610226}
!4393 = !DILocation(line: 161, column: 1, scope: !4091)
!4394 = !{i64 2147610384, i64 2147610427, i64 2147610467}
!4395 = !DILocation(line: 162, column: 1, scope: !4091)
!4396 = !{i64 2147610571, i64 2147610614, i64 2147610654}
!4397 = !DILocation(line: 163, column: 1, scope: !4091)
!4398 = !{i64 2147610758, i64 2147610801, i64 2147610841}
!4399 = !DILocation(line: 164, column: 1, scope: !4091)
!4400 = !{i64 2147610921, i64 2147610964, i64 2147611004}
!4401 = !DILocation(line: 165, column: 1, scope: !4091)
!4402 = !{i64 2147611180, i64 2147611223, i64 2147611263}
!4403 = !DILocation(line: 166, column: 1, scope: !4091)
!4404 = !{i64 2147611403, i64 2147611446, i64 2147611486}
!4405 = !DILocation(line: 167, column: 1, scope: !4091)
!4406 = !{i64 2147611632, i64 2147611675, i64 2147611715}
!4407 = !DILocation(line: 168, column: 1, scope: !4091)
!4408 = !{i64 2147611828, i64 2147611871, i64 2147611911}
!4409 = !DILocation(line: 169, column: 1, scope: !4091)
!4410 = !{i64 2147612040, i64 2147612083, i64 2147612123}
!4411 = !DILocation(line: 170, column: 1, scope: !4091)
!4412 = !{i64 2147616322, i64 2147616365, i64 2147616405}
!4413 = !DILocation(line: 171, column: 1, scope: !4091)
!4414 = !{i64 2147616536, i64 2147616579, i64 2147616619}
!4415 = !DILocation(line: 172, column: 1, scope: !4091)
!4416 = !{i64 2147616726, i64 2147616769, i64 2147616809}
!4417 = !DILocation(line: 173, column: 1, scope: !4091)
!4418 = !{i64 2147616925, i64 2147616968, i64 2147617008}
!4419 = !DILocation(line: 174, column: 1, scope: !4091)
!4420 = !{i64 2147617130, i64 2147617173, i64 2147617213}
!4421 = !DILocation(line: 175, column: 1, scope: !4091)
!4422 = !{i64 2147617350, i64 2147617393, i64 2147617433}
!4423 = !DILocation(line: 176, column: 1, scope: !4091)
!4424 = !{i64 2147617551, i64 2147617594, i64 2147617634}
!4425 = !DILocation(line: 177, column: 1, scope: !4091)
!4426 = !{i64 2147617750, i64 2147617793, i64 2147617833}
!4427 = !DILocation(line: 178, column: 1, scope: !4091)
!4428 = !{i64 2147617955, i64 2147617998, i64 2147618038}
!4429 = !DILocation(line: 179, column: 1, scope: !4091)
!4430 = !{i64 2147618124, i64 2147618167, i64 2147618207}
!4431 = !DILocation(line: 180, column: 1, scope: !4091)
!4432 = !{i64 2147618308, i64 2147618351, i64 2147618391}
!4433 = !DILocation(line: 181, column: 1, scope: !4091)
!4434 = !{i64 2147618492, i64 2147618535, i64 2147618575}
!4435 = !DILocation(line: 182, column: 1, scope: !4091)
!4436 = !{i64 2147618679, i64 2147618722, i64 2147618762}
!4437 = !DILocation(line: 183, column: 1, scope: !4091)
!4438 = !{i64 2147618863, i64 2147618906, i64 2147618946}
!4439 = !DILocation(line: 184, column: 1, scope: !4091)
!4440 = !{i64 2147619101, i64 2147619144, i64 2147619184}
!4441 = !DILocation(line: 185, column: 1, scope: !4091)
!4442 = !{i64 2147619331, i64 2147619374, i64 2147619414}
!4443 = !DILocation(line: 186, column: 1, scope: !4091)
!4444 = !{i64 2147619560, i64 2147619603, i64 2147619643}
!4445 = !DILocation(line: 187, column: 1, scope: !4091)
!4446 = !{i64 2147619747, i64 2147619790, i64 2147619830}
!4447 = !DILocation(line: 188, column: 1, scope: !4091)
!4448 = !{i64 2147619943, i64 2147619986, i64 2147620026}
!4449 = !DILocation(line: 189, column: 1, scope: !4091)
!4450 = !{i64 2147620151, i64 2147620194, i64 2147620234}
!4451 = !DILocation(line: 190, column: 1, scope: !4091)
!4452 = !{i64 2147620363, i64 2147620406, i64 2147620446}
!4453 = !DILocation(line: 191, column: 1, scope: !4091)
!4454 = !{i64 2147620562, i64 2147620605, i64 2147620645}
!4455 = !DILocation(line: 192, column: 1, scope: !4091)
!4456 = !{i64 2147620800, i64 2147620843, i64 2147620883}
!4457 = !DILocation(line: 193, column: 1, scope: !4091)
!4458 = !{i64 2147620996, i64 2147621039, i64 2147621079}
!4459 = !DILocation(line: 194, column: 1, scope: !4091)
!4460 = !{i64 2147621198, i64 2147621241, i64 2147621281}
!4461 = !DILocation(line: 195, column: 1, scope: !4091)
!4462 = !{i64 2147621391, i64 2147621434, i64 2147621474}
!4463 = !DILocation(line: 196, column: 1, scope: !4091)
!4464 = !{i64 2147621625, i64 2147621668, i64 2147621708}
!4465 = !DILocation(line: 197, column: 1, scope: !4091)
!4466 = !{i64 2147621788, i64 2147621831, i64 2147621871}
!4467 = !DILocation(line: 198, column: 1, scope: !4091)
!4468 = !{i64 2147622027, i64 2147622070, i64 2147622110}
!4469 = !DILocation(line: 199, column: 1, scope: !4091)
!4470 = !{i64 2147622266, i64 2147622309, i64 2147622349}
!4471 = !DILocation(line: 200, column: 1, scope: !4091)
!4472 = !{i64 2147622502, i64 2147622545, i64 2147622585}
!4473 = !DILocation(line: 201, column: 1, scope: !4091)
!4474 = !{i64 2147622732, i64 2147622775, i64 2147622815}
!4475 = !DILocation(line: 202, column: 1, scope: !4091)
!4476 = !{i64 2147622919, i64 2147622962, i64 2147623002}
!4477 = !DILocation(line: 203, column: 1, scope: !4091)
!4478 = !{i64 2147623118, i64 2147623161, i64 2147623201}
!4479 = !DILocation(line: 204, column: 1, scope: !4091)
!4480 = !{i64 2147623389, i64 2147623432, i64 2147623472}
!4481 = !DILocation(line: 205, column: 1, scope: !4091)
!4482 = !{i64 2147623564, i64 2147623607, i64 2147623647}
!4483 = !DILocation(line: 206, column: 1, scope: !4091)
!4484 = !{i64 2147623798, i64 2147623841, i64 2147623881}
!4485 = !DILocation(line: 207, column: 1, scope: !4091)
!4486 = !{i64 2147624006, i64 2147624049, i64 2147624089}
!4487 = !DILocation(line: 208, column: 1, scope: !4091)
!4488 = !{i64 2147624224, i64 2147624267, i64 2147624307}
!4489 = !DILocation(line: 209, column: 1, scope: !4091)
!4490 = !{i64 2147624414, i64 2147624457, i64 2147624497}
!4491 = !DILocation(line: 210, column: 1, scope: !4091)
!4492 = !{i64 2147624610, i64 2147624653, i64 2147624693}
!4493 = !DILocation(line: 211, column: 1, scope: !4091)
!4494 = !{i64 2147624816, i64 2147624859, i64 2147624899}
!4495 = !DILocation(line: 212, column: 1, scope: !4091)
!4496 = !{i64 2147625021, i64 2147625064, i64 2147625104}
!4497 = !DILocation(line: 213, column: 1, scope: !4091)
!4498 = !{i64 2147625247, i64 2147625290, i64 2147625330}
!4499 = !DILocation(line: 214, column: 1, scope: !4091)
!4500 = !{i64 2147629540, i64 2147629583, i64 2147629623}
!4501 = !DILocation(line: 215, column: 1, scope: !4091)
!4502 = !{i64 2147629724, i64 2147629767, i64 2147629807}
!4503 = !DILocation(line: 216, column: 1, scope: !4091)
!4504 = !{i64 2147629933, i64 2147629976, i64 2147630016}
!4505 = !DILocation(line: 217, column: 1, scope: !4091)
!4506 = !{i64 2147630117, i64 2147630160, i64 2147630200}
!4507 = !DILocation(line: 218, column: 1, scope: !4091)
!4508 = !{i64 2147630343, i64 2147630386, i64 2147630426}
!4509 = !DILocation(line: 219, column: 1, scope: !4091)
!4510 = !{i64 2147630569, i64 2147630612, i64 2147630652}
!4511 = !DILocation(line: 220, column: 1, scope: !4091)
!4512 = !{i64 2147630795, i64 2147630838, i64 2147630878}
!4513 = !DILocation(line: 221, column: 1, scope: !4091)
!4514 = !{i64 2147631021, i64 2147631064, i64 2147631104}
!4515 = !DILocation(line: 222, column: 1, scope: !4091)
!4516 = !{i64 2147631247, i64 2147631290, i64 2147631330}
!4517 = !DILocation(line: 223, column: 1, scope: !4091)
!4518 = !{i64 2147631479, i64 2147631522, i64 2147631562}
!4519 = !DILocation(line: 224, column: 1, scope: !4091)
!4520 = !{i64 2147631717, i64 2147631760, i64 2147631800}
!4521 = !DILocation(line: 225, column: 1, scope: !4091)
!4522 = !{i64 2147631937, i64 2147631980, i64 2147632020}
!4523 = !DILocation(line: 226, column: 1, scope: !4091)
!4524 = !{i64 2147632181, i64 2147632224, i64 2147632264}
!4525 = !DILocation(line: 227, column: 1, scope: !4091)
!4526 = !{i64 2147632422, i64 2147632465, i64 2147632505}
!4527 = !DILocation(line: 228, column: 1, scope: !4091)
!4528 = !{i64 2147632657, i64 2147632700, i64 2147632740}
!4529 = !DILocation(line: 229, column: 1, scope: !4091)
!4530 = !{i64 2147632889, i64 2147632932, i64 2147632972}
!4531 = !DILocation(line: 230, column: 1, scope: !4091)
!4532 = !{i64 2147633091, i64 2147633134, i64 2147633174}
!4533 = !DILocation(line: 231, column: 1, scope: !4091)
!4534 = !{i64 2147633341, i64 2147633384, i64 2147633424}
!4535 = !DILocation(line: 232, column: 1, scope: !4091)
!4536 = !{i64 2147633579, i64 2147633622, i64 2147633662}
!4537 = !DILocation(line: 233, column: 1, scope: !4091)
!4538 = !{i64 2147633763, i64 2147633806, i64 2147633846}
!4539 = !DILocation(line: 234, column: 1, scope: !4091)
!4540 = !{i64 2147633987, i64 2147634030, i64 2147634070}
!4541 = !DILocation(line: 235, column: 1, scope: !4091)
!4542 = !{i64 2147634225, i64 2147634268, i64 2147634308}
!4543 = !DILocation(line: 236, column: 1, scope: !4091)
!4544 = !{i64 2147634463, i64 2147634506, i64 2147634546}
!4545 = !DILocation(line: 237, column: 1, scope: !4091)
!4546 = !{i64 2147634656, i64 2147634699, i64 2147634739}
!4547 = !DILocation(line: 238, column: 1, scope: !4091)
!4548 = !{i64 2147634909, i64 2147634952, i64 2147634992}
!4549 = !DILocation(line: 239, column: 1, scope: !4091)
!4550 = !{i64 2147635123, i64 2147635166, i64 2147635206}
!4551 = !DILocation(line: 240, column: 1, scope: !4091)
!4552 = !{i64 2147635331, i64 2147635374, i64 2147635414}
!4553 = !DILocation(line: 241, column: 1, scope: !4091)
!4554 = !{i64 2147635521, i64 2147635564, i64 2147635604}
!4555 = !DILocation(line: 242, column: 1, scope: !4091)
!4556 = !{i64 2147635735, i64 2147635778, i64 2147635818}
!4557 = !DILocation(line: 243, column: 1, scope: !4091)
!4558 = !{i64 2147635997, i64 2147636040, i64 2147636080}
!4559 = !DILocation(line: 244, column: 1, scope: !4091)
!4560 = !{i64 2147636208, i64 2147636251, i64 2147636291}
!4561 = !DILocation(line: 245, column: 1, scope: !4091)
!4562 = !{i64 2147636452, i64 2147636495, i64 2147636535}
!4563 = !DILocation(line: 246, column: 1, scope: !4091)
!4564 = !{i64 2147636663, i64 2147636706, i64 2147636746}
!4565 = !DILocation(line: 247, column: 1, scope: !4091)
!4566 = !{i64 2147636892, i64 2147636935, i64 2147636975}
!4567 = !DILocation(line: 248, column: 1, scope: !4091)
!4568 = !{i64 2147637157, i64 2147637200, i64 2147637240}
!4569 = !DILocation(line: 249, column: 1, scope: !4091)
!4570 = !{i64 2147637362, i64 2147637405, i64 2147637445}
!4571 = !DILocation(line: 250, column: 1, scope: !4091)
!4572 = !{i64 2147637558, i64 2147637601, i64 2147637641}
!4573 = !DILocation(line: 251, column: 1, scope: !4091)
!4574 = !{i64 2147637781, i64 2147637824, i64 2147637864}
!4575 = !DILocation(line: 252, column: 1, scope: !4091)
!4576 = !{i64 2147637944, i64 2147637987, i64 2147638027}
!4577 = !DILocation(line: 253, column: 1, scope: !4091)
!4578 = !{i64 2147642210, i64 2147642253, i64 2147642293}
!4579 = !DILocation(line: 254, column: 1, scope: !4091)
!4580 = !{i64 2147642430, i64 2147642473, i64 2147642513}
!4581 = !DILocation(line: 255, column: 1, scope: !4091)
!4582 = !{i64 2147642644, i64 2147642687, i64 2147642727}
!4583 = !DILocation(line: 256, column: 1, scope: !4091)
!4584 = !{i64 2147642858, i64 2147642901, i64 2147642941}
!4585 = !DILocation(line: 257, column: 1, scope: !4091)
!4586 = !{i64 2147643069, i64 2147643112, i64 2147643152}
!4587 = !DILocation(line: 258, column: 1, scope: !4091)
!4588 = !{i64 2147643262, i64 2147643305, i64 2147643345}
!4589 = !DILocation(line: 259, column: 1, scope: !4091)
!4590 = !{i64 2147643461, i64 2147643504, i64 2147643544}
!4591 = !DILocation(line: 260, column: 1, scope: !4091)
!4592 = !{i64 2147643633, i64 2147643676, i64 2147643716}
!4593 = !DILocation(line: 261, column: 1, scope: !4091)
!4594 = !{i64 2147643826, i64 2147643869, i64 2147643909}
!4595 = !DILocation(line: 262, column: 1, scope: !4091)
!4596 = !{i64 2147644022, i64 2147644065, i64 2147644105}
!4597 = !DILocation(line: 263, column: 1, scope: !4091)
!4598 = !{i64 2147644249, i64 2147644292, i64 2147644332}
!4599 = !DILocation(line: 264, column: 1, scope: !4091)
!4600 = !{i64 2147644466, i64 2147644509, i64 2147644549}
!4601 = !DILocation(line: 265, column: 1, scope: !4091)
!4602 = !{i64 2147644758, i64 2147644801, i64 2147644841}
!4603 = !DILocation(line: 266, column: 1, scope: !4091)
!4604 = !{i64 2147644990, i64 2147645033, i64 2147645073}
!4605 = !DILocation(line: 267, column: 1, scope: !4091)
!4606 = !{i64 2147645207, i64 2147645250, i64 2147645290}
!4607 = !DILocation(line: 268, column: 1, scope: !4091)
!4608 = !{i64 2147645414, i64 2147645457, i64 2147645497}
!4609 = !DILocation(line: 269, column: 1, scope: !4091)
!4610 = !{i64 2147645615, i64 2147645658, i64 2147645698}
!4611 = !DILocation(line: 270, column: 1, scope: !4091)
!4612 = !{i64 2147645847, i64 2147645890, i64 2147645930}
!4613 = !DILocation(line: 271, column: 1, scope: !4091)
!4614 = !{i64 2147646055, i64 2147646098, i64 2147646138}
!4615 = !DILocation(line: 272, column: 1, scope: !4091)
!4616 = !{i64 2147646245, i64 2147646288, i64 2147646328}
!4617 = !DILocation(line: 273, column: 1, scope: !4091)
!4618 = !{i64 2147646471, i64 2147646514, i64 2147646554}
!4619 = !DILocation(line: 274, column: 1, scope: !4091)
!4620 = !{i64 2147646660, i64 2147646703, i64 2147646743}
!4621 = !DILocation(line: 275, column: 1, scope: !4091)
!4622 = !{i64 2147646931, i64 2147646974, i64 2147647014}
!4623 = !DILocation(line: 276, column: 1, scope: !4091)
!4624 = !{i64 2147647151, i64 2147647194, i64 2147647234}
!4625 = !DILocation(line: 277, column: 1, scope: !4091)
!4626 = !{i64 2147647404, i64 2147647447, i64 2147647487}
!4627 = !DILocation(line: 278, column: 1, scope: !4091)
!4628 = !{i64 2147647612, i64 2147647655, i64 2147647695}
!4629 = !DILocation(line: 279, column: 1, scope: !4091)
!4630 = !{i64 2147647844, i64 2147647887, i64 2147647927}
!4631 = !DILocation(line: 280, column: 1, scope: !4091)
!4632 = !{i64 2147648055, i64 2147648098, i64 2147648138}
!4633 = !DILocation(line: 281, column: 1, scope: !4091)
!4634 = !{i64 2147648245, i64 2147648288, i64 2147648328}
!4635 = !DILocation(line: 282, column: 1, scope: !4091)
!4636 = !{i64 2147648459, i64 2147648502, i64 2147648542}
!4637 = !DILocation(line: 283, column: 1, scope: !4091)
!4638 = !{i64 2147648658, i64 2147648701, i64 2147648741}
!4639 = !DILocation(line: 284, column: 1, scope: !4091)
!4640 = !{i64 2147648845, i64 2147648888, i64 2147648928}
!4641 = !DILocation(line: 285, column: 1, scope: !4091)
!4642 = !{i64 2147649053, i64 2147649096, i64 2147649136}
!4643 = !DILocation(line: 286, column: 1, scope: !4091)
!4644 = !{i64 2147649282, i64 2147649325, i64 2147649365}
!4645 = !DILocation(line: 287, column: 1, scope: !4091)
!4646 = !{i64 2147649484, i64 2147649527, i64 2147649567}
!4647 = !DILocation(line: 288, column: 1, scope: !4091)
!4648 = !{i64 2147649683, i64 2147649726, i64 2147649766}
!4649 = !DILocation(line: 289, column: 1, scope: !4091)
!4650 = !{i64 2147649900, i64 2147649943, i64 2147649983}
!4651 = !DILocation(line: 291, column: 1, scope: !4091)
!4652 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !135, file: !135, line: 30, type: !142, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !118, retainedNodes: !4653)
!4653 = !{!4654, !4655}
!4654 = !DILocalVariable(name: "arg", arg: 1, scope: !4652, file: !135, line: 30, type: !144)
!4655 = !DILocalVariable(name: "key", scope: !4652, file: !135, line: 32, type: !106)
!4656 = !DILocation(line: 0, scope: !4652)
!4657 = !DILocation(line: 37, column: 2, scope: !4652)
!4658 = !DILocation(line: 38, column: 2, scope: !4652)
!4659 = !DILocation(line: 55, column: 2, scope: !4660, inlinedAt: !4667)
!4660 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4661, file: !4661, line: 42, type: !4662, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !118, retainedNodes: !4664)
!4661 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4662 = !DISubroutineType(types: !4663)
!4663 = !{!32}
!4664 = !{!4665, !4666}
!4665 = !DILocalVariable(name: "key", scope: !4660, file: !4661, line: 44, type: !32)
!4666 = !DILocalVariable(name: "tmp", scope: !4660, file: !4661, line: 53, type: !32)
!4667 = distinct !DILocation(line: 40, column: 8, scope: !4652)
!4668 = !{i64 2101429}
!4669 = !DILocation(line: 0, scope: !4660, inlinedAt: !4667)
!4670 = !DILocalVariable(name: "key", arg: 1, scope: !4671, file: !4661, line: 84, type: !32)
!4671 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4661, file: !4661, line: 84, type: !4672, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !118, retainedNodes: !4674)
!4672 = !DISubroutineType(types: !4673)
!4673 = !{null, !32}
!4674 = !{!4670}
!4675 = !DILocation(line: 0, scope: !4671, inlinedAt: !4676)
!4676 = distinct !DILocation(line: 47, column: 2, scope: !4652)
!4677 = !DILocation(line: 95, column: 2, scope: !4671, inlinedAt: !4676)
!4678 = !{i64 2102246}
!4679 = !DILocation(line: 51, column: 18, scope: !4652)
!4680 = !DILocation(line: 53, column: 2, scope: !4652)
!4681 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !4682, file: !4682, line: 1609, type: !2860, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !118, retainedNodes: !474)
!4682 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4683 = !DILocation(line: 1611, column: 3, scope: !4681)
!4684 = !DILocation(line: 1612, column: 1, scope: !4681)
!4685 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !4682, file: !4682, line: 1629, type: !2860, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !118, retainedNodes: !474)
!4686 = !DILocation(line: 1631, column: 3, scope: !4685)
!4687 = !DILocation(line: 1632, column: 1, scope: !4685)
!4688 = distinct !DISubprogram(name: "stm32_backup_sram_init", scope: !291, file: !291, line: 21, type: !304, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !213, retainedNodes: !4689)
!4689 = !{!4690, !4691, !4693, !4694}
!4690 = !DILocalVariable(name: "dev", arg: 1, scope: !4688, file: !291, line: 21, type: !235)
!4691 = !DILocalVariable(name: "config", scope: !4688, file: !291, line: 23, type: !4692)
!4692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 32)
!4693 = !DILocalVariable(name: "ret", scope: !4688, file: !291, line: 25, type: !103)
!4694 = !DILocalVariable(name: "clk", scope: !4688, file: !291, line: 28, type: !4695)
!4695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !235)
!4696 = !DILocation(line: 0, scope: !4688)
!4697 = !DILocation(line: 23, column: 55, scope: !4688)
!4698 = !DILocation(line: 30, column: 7, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4688, file: !291, line: 30, column: 6)
!4700 = !DILocation(line: 30, column: 6, scope: !4688)
!4701 = !DILocation(line: 35, column: 8, scope: !4688)
!4702 = !DILocation(line: 36, column: 10, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4688, file: !291, line: 36, column: 6)
!4704 = !DILocation(line: 36, column: 6, scope: !4688)
!4705 = !DILocation(line: 42, column: 2, scope: !4688)
!4706 = !DILocation(line: 43, column: 2, scope: !4688)
!4707 = !DILocation(line: 43, column: 10, scope: !4688)
!4708 = !DILocation(line: 43, column: 9, scope: !4688)
!4709 = distinct !{!4709, !4706, !4710}
!4710 = !DILocation(line: 44, column: 2, scope: !4688)
!4711 = !DILocation(line: 49, column: 2, scope: !4688)
!4712 = !DILocation(line: 50, column: 2, scope: !4688)
!4713 = !DILocation(line: 50, column: 10, scope: !4688)
!4714 = !DILocation(line: 50, column: 9, scope: !4688)
!4715 = distinct !{!4715, !4712, !4716}
!4716 = !DILocation(line: 51, column: 2, scope: !4688)
!4717 = !DILocation(line: 54, column: 1, scope: !4688)
!4718 = distinct !DISubprogram(name: "device_is_ready", scope: !4719, file: !4719, line: 47, type: !4720, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !213, retainedNodes: !4722)
!4719 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!4720 = !DISubroutineType(types: !4721)
!4721 = !{!163, !235}
!4722 = !{!4723}
!4723 = !DILocalVariable(name: "dev", arg: 1, scope: !4718, file: !4719, line: 47, type: !235)
!4724 = !DILocation(line: 0, scope: !4718)
!4725 = !DILocation(line: 55, column: 2, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4718, file: !4719, line: 55, column: 2)
!4727 = !{i64 2149378524}
!4728 = !DILocation(line: 56, column: 9, scope: !4718)
!4729 = !DILocation(line: 56, column: 2, scope: !4718)
!4730 = distinct !DISubprogram(name: "clock_control_on", scope: !217, file: !217, line: 123, type: !233, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !213, retainedNodes: !4731)
!4731 = !{!4732, !4733, !4734}
!4732 = !DILocalVariable(name: "dev", arg: 1, scope: !4730, file: !217, line: 123, type: !235)
!4733 = !DILocalVariable(name: "sys", arg: 2, scope: !4730, file: !217, line: 124, type: !225)
!4734 = !DILocalVariable(name: "api", scope: !4730, file: !217, line: 126, type: !226)
!4735 = !DILocation(line: 0, scope: !4730)
!4736 = !DILocation(line: 127, column: 49, scope: !4730)
!4737 = !DILocation(line: 129, column: 14, scope: !4730)
!4738 = !DILocation(line: 129, column: 9, scope: !4730)
!4739 = !DILocation(line: 129, column: 2, scope: !4730)
!4740 = distinct !DISubprogram(name: "LL_PWR_EnableBkUpAccess", scope: !4741, file: !4741, line: 558, type: !2860, scopeLine: 559, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !213, retainedNodes: !474)
!4741 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4742 = !DILocation(line: 560, column: 3, scope: !4740)
!4743 = !DILocation(line: 561, column: 1, scope: !4740)
!4744 = distinct !DISubprogram(name: "LL_PWR_IsEnabledBkUpAccess", scope: !4741, file: !4741, line: 578, type: !4745, scopeLine: 579, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !213, retainedNodes: !474)
!4745 = !DISubroutineType(types: !4746)
!4746 = !{!106}
!4747 = !DILocation(line: 580, column: 11, scope: !4744)
!4748 = !DILocation(line: 580, column: 41, scope: !4744)
!4749 = !DILocation(line: 580, column: 3, scope: !4744)
!4750 = distinct !DISubprogram(name: "LL_PWR_EnableBkUpRegulator", scope: !4741, file: !4741, line: 589, type: !2860, scopeLine: 590, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !213, retainedNodes: !474)
!4751 = !DILocation(line: 591, column: 3, scope: !4750)
!4752 = !DILocation(line: 592, column: 1, scope: !4750)
!4753 = distinct !DISubprogram(name: "LL_PWR_IsEnabledBkUpRegulator", scope: !4741, file: !4741, line: 611, type: !4745, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !213, retainedNodes: !474)
!4754 = !DILocation(line: 613, column: 11, scope: !4753)
!4755 = !DILocation(line: 613, column: 43, scope: !4753)
!4756 = !DILocation(line: 613, column: 3, scope: !4753)
!4757 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !147, file: !147, line: 730, type: !4720, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !213, retainedNodes: !4758)
!4758 = !{!4759}
!4759 = !DILocalVariable(name: "dev", arg: 1, scope: !4757, file: !147, line: 730, type: !235)
!4760 = !DILocation(line: 0, scope: !4757)
!4761 = !DILocation(line: 732, column: 9, scope: !4757)
!4762 = !DILocation(line: 732, column: 2, scope: !4757)
!4763 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !323, file: !323, line: 26, type: !329, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !320, retainedNodes: !4764)
!4764 = !{!4765}
!4765 = !DILocalVariable(name: "dev", arg: 1, scope: !4763, file: !323, line: 26, type: !331)
!4766 = !DILocation(line: 0, scope: !4763)
!4767 = !DILocation(line: 68, column: 2, scope: !4763)
!4768 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !4769, file: !4769, line: 57, type: !4770, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2326, retainedNodes: !4816)
!4769 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4770 = !DISubroutineType(types: !4771)
!4771 = !{null, !32, !4772}
!4772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4773, size: 32)
!4773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4774)
!4774 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2446, line: 141, baseType: !4775)
!4775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2446, line: 97, size: 256, elements: !4776)
!4776 = !{!4777}
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !4775, file: !2446, line: 107, baseType: !4778, size: 256)
!4778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2446, line: 98, size: 256, elements: !4779)
!4779 = !{!4780, !4785, !4790, !4795, !4800, !4805, !4810, !4815}
!4780 = !DIDerivedType(tag: DW_TAG_member, scope: !4778, file: !2446, line: 99, baseType: !4781, size: 32)
!4781 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4778, file: !2446, line: 99, size: 32, elements: !4782)
!4782 = !{!4783, !4784}
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !4781, file: !2446, line: 99, baseType: !106, size: 32)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !4781, file: !2446, line: 99, baseType: !106, size: 32)
!4785 = !DIDerivedType(tag: DW_TAG_member, scope: !4778, file: !2446, line: 100, baseType: !4786, size: 32, offset: 32)
!4786 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4778, file: !2446, line: 100, size: 32, elements: !4787)
!4787 = !{!4788, !4789}
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !4786, file: !2446, line: 100, baseType: !106, size: 32)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !4786, file: !2446, line: 100, baseType: !106, size: 32)
!4790 = !DIDerivedType(tag: DW_TAG_member, scope: !4778, file: !2446, line: 101, baseType: !4791, size: 32, offset: 64)
!4791 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4778, file: !2446, line: 101, size: 32, elements: !4792)
!4792 = !{!4793, !4794}
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !4791, file: !2446, line: 101, baseType: !106, size: 32)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !4791, file: !2446, line: 101, baseType: !106, size: 32)
!4795 = !DIDerivedType(tag: DW_TAG_member, scope: !4778, file: !2446, line: 102, baseType: !4796, size: 32, offset: 96)
!4796 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4778, file: !2446, line: 102, size: 32, elements: !4797)
!4797 = !{!4798, !4799}
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !4796, file: !2446, line: 102, baseType: !106, size: 32)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !4796, file: !2446, line: 102, baseType: !106, size: 32)
!4800 = !DIDerivedType(tag: DW_TAG_member, scope: !4778, file: !2446, line: 103, baseType: !4801, size: 32, offset: 128)
!4801 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4778, file: !2446, line: 103, size: 32, elements: !4802)
!4802 = !{!4803, !4804}
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4801, file: !2446, line: 103, baseType: !106, size: 32)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !4801, file: !2446, line: 103, baseType: !106, size: 32)
!4805 = !DIDerivedType(tag: DW_TAG_member, scope: !4778, file: !2446, line: 104, baseType: !4806, size: 32, offset: 160)
!4806 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4778, file: !2446, line: 104, size: 32, elements: !4807)
!4807 = !{!4808, !4809}
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !4806, file: !2446, line: 104, baseType: !106, size: 32)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !4806, file: !2446, line: 104, baseType: !106, size: 32)
!4810 = !DIDerivedType(tag: DW_TAG_member, scope: !4778, file: !2446, line: 105, baseType: !4811, size: 32, offset: 192)
!4811 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4778, file: !2446, line: 105, size: 32, elements: !4812)
!4812 = !{!4813, !4814}
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !4811, file: !2446, line: 105, baseType: !106, size: 32)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !4811, file: !2446, line: 105, baseType: !106, size: 32)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !4778, file: !2446, line: 106, baseType: !106, size: 32, offset: 224)
!4816 = !{!4817, !4818}
!4817 = !DILocalVariable(name: "reason", arg: 1, scope: !4768, file: !4769, line: 57, type: !32)
!4818 = !DILocalVariable(name: "esf", arg: 2, scope: !4768, file: !4769, line: 57, type: !4772)
!4819 = !DILocation(line: 0, scope: !4768)
!4820 = !DILocation(line: 63, column: 2, scope: !4768)
!4821 = !DILocation(line: 64, column: 1, scope: !4768)
!4822 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !4769, file: !4769, line: 82, type: !4823, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2326, retainedNodes: !4838)
!4823 = !DISubroutineType(types: !4824)
!4824 = !{null, !4772, !4825}
!4825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4826, size: 32)
!4826 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !436, line: 37, baseType: !4827)
!4827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !4828)
!4828 = !{!4829, !4830, !4831, !4832, !4833, !4834, !4835, !4836, !4837}
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4827, file: !436, line: 26, baseType: !106, size: 32)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4827, file: !436, line: 27, baseType: !106, size: 32, offset: 32)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4827, file: !436, line: 28, baseType: !106, size: 32, offset: 64)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4827, file: !436, line: 29, baseType: !106, size: 32, offset: 96)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4827, file: !436, line: 30, baseType: !106, size: 32, offset: 128)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4827, file: !436, line: 31, baseType: !106, size: 32, offset: 160)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4827, file: !436, line: 32, baseType: !106, size: 32, offset: 192)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4827, file: !436, line: 33, baseType: !106, size: 32, offset: 224)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4827, file: !436, line: 34, baseType: !106, size: 32, offset: 256)
!4838 = !{!4839, !4840, !4841}
!4839 = !DILocalVariable(name: "esf", arg: 1, scope: !4822, file: !4769, line: 82, type: !4772)
!4840 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !4822, file: !4769, line: 82, type: !4825)
!4841 = !DILocalVariable(name: "reason", scope: !4822, file: !4769, line: 88, type: !32)
!4842 = !DILocation(line: 0, scope: !4822)
!4843 = !DILocation(line: 88, column: 35, scope: !4822)
!4844 = !DILocation(line: 108, column: 2, scope: !4822)
!4845 = !DILocation(line: 131, column: 1, scope: !4822)
!4846 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !4769, file: !4769, line: 133, type: !4847, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2326, retainedNodes: !4849)
!4847 = !DISubroutineType(types: !4848)
!4848 = !{null, !102}
!4849 = !{!4850, !4851, !4852}
!4850 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !4846, file: !4769, line: 133, type: !102)
!4851 = !DILocalVariable(name: "ssf_contents", scope: !4846, file: !4769, line: 135, type: !265)
!4852 = !DILocalVariable(name: "oops_esf", scope: !4846, file: !4769, line: 136, type: !4774)
!4853 = !DILocation(line: 0, scope: !4846)
!4854 = !DILocation(line: 136, column: 2, scope: !4846)
!4855 = !DILocation(line: 136, column: 15, scope: !4846)
!4856 = !DILocation(line: 139, column: 22, scope: !4846)
!4857 = !DILocation(line: 139, column: 17, scope: !4846)
!4858 = !DILocation(line: 139, column: 20, scope: !4846)
!4859 = !DILocation(line: 141, column: 2, scope: !4846)
!4860 = !DILocation(line: 142, column: 2, scope: !4846)
!4861 = distinct !DISubprogram(name: "arch_irq_enable", scope: !4862, file: !4862, line: 40, type: !4672, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !4863)
!4862 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4863 = !{!4864}
!4864 = !DILocalVariable(name: "irq", arg: 1, scope: !4861, file: !4862, line: 40, type: !32)
!4865 = !DILocation(line: 0, scope: !4861)
!4866 = !DILocation(line: 42, column: 2, scope: !4861)
!4867 = !DILocation(line: 43, column: 1, scope: !4861)
!4868 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !508, file: !508, line: 1684, type: !4869, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !4871)
!4869 = !DISubroutineType(types: !4870)
!4870 = !{null, !762}
!4871 = !{!4872}
!4872 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4868, file: !508, line: 1684, type: !762)
!4873 = !DILocation(line: 0, scope: !4868)
!4874 = !DILocation(line: 1686, column: 23, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4868, file: !508, line: 1686, column: 7)
!4876 = !DILocation(line: 1686, column: 7, scope: !4868)
!4877 = !DILocation(line: 1688, column: 5, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4875, file: !508, line: 1687, column: 3)
!4879 = !{i64 2151069354}
!4880 = !DILocation(line: 1689, column: 81, scope: !4878)
!4881 = !DILocation(line: 1689, column: 60, scope: !4878)
!4882 = !DILocation(line: 1689, column: 34, scope: !4878)
!4883 = !DILocation(line: 1689, column: 5, scope: !4878)
!4884 = !DILocation(line: 1689, column: 43, scope: !4878)
!4885 = !DILocation(line: 1690, column: 5, scope: !4878)
!4886 = !{i64 2151069468}
!4887 = !DILocation(line: 1691, column: 3, scope: !4878)
!4888 = !DILocation(line: 1692, column: 1, scope: !4868)
!4889 = distinct !DISubprogram(name: "arch_irq_disable", scope: !4862, file: !4862, line: 45, type: !4672, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !4890)
!4890 = !{!4891}
!4891 = !DILocalVariable(name: "irq", arg: 1, scope: !4889, file: !4862, line: 45, type: !32)
!4892 = !DILocation(line: 0, scope: !4889)
!4893 = !DILocation(line: 47, column: 2, scope: !4889)
!4894 = !DILocation(line: 48, column: 1, scope: !4889)
!4895 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !508, file: !508, line: 1722, type: !4869, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !4896)
!4896 = !{!4897}
!4897 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4895, file: !508, line: 1722, type: !762)
!4898 = !DILocation(line: 0, scope: !4895)
!4899 = !DILocation(line: 1724, column: 23, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4895, file: !508, line: 1724, column: 7)
!4901 = !DILocation(line: 1724, column: 7, scope: !4895)
!4902 = !DILocation(line: 1726, column: 81, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4900, file: !508, line: 1725, column: 3)
!4904 = !DILocation(line: 1726, column: 60, scope: !4903)
!4905 = !DILocation(line: 1726, column: 34, scope: !4903)
!4906 = !DILocation(line: 1726, column: 5, scope: !4903)
!4907 = !DILocation(line: 1726, column: 43, scope: !4903)
!4908 = !DILocation(line: 271, column: 3, scope: !4909, inlinedAt: !4911)
!4909 = distinct !DISubprogram(name: "__DSB", scope: !4910, file: !4910, line: 269, type: !2860, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !474)
!4910 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4911 = distinct !DILocation(line: 1727, column: 5, scope: !4903)
!4912 = !{i64 3523737}
!4913 = !DILocation(line: 260, column: 3, scope: !4914, inlinedAt: !4915)
!4914 = distinct !DISubprogram(name: "__ISB", scope: !4910, file: !4910, line: 258, type: !2860, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !474)
!4915 = distinct !DILocation(line: 1728, column: 5, scope: !4903)
!4916 = !{i64 3523454}
!4917 = !DILocation(line: 1729, column: 3, scope: !4903)
!4918 = !DILocation(line: 1730, column: 1, scope: !4895)
!4919 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !4862, file: !4862, line: 50, type: !4920, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !4922)
!4920 = !DISubroutineType(types: !4921)
!4921 = !{!103, !32}
!4922 = !{!4923}
!4923 = !DILocalVariable(name: "irq", arg: 1, scope: !4919, file: !4862, line: 50, type: !32)
!4924 = !DILocation(line: 0, scope: !4919)
!4925 = !DILocation(line: 52, column: 20, scope: !4919)
!4926 = !DILocation(line: 52, column: 9, scope: !4919)
!4927 = !DILocation(line: 52, column: 41, scope: !4919)
!4928 = !DILocation(line: 52, column: 39, scope: !4919)
!4929 = !DILocation(line: 52, column: 2, scope: !4919)
!4930 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !4862, file: !4862, line: 64, type: !4931, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !4933)
!4931 = !DISubroutineType(types: !4932)
!4932 = !{null, !32, !32, !106}
!4933 = !{!4934, !4935, !4936}
!4934 = !DILocalVariable(name: "irq", arg: 1, scope: !4930, file: !4862, line: 64, type: !32)
!4935 = !DILocalVariable(name: "prio", arg: 2, scope: !4930, file: !4862, line: 64, type: !32)
!4936 = !DILocalVariable(name: "flags", arg: 3, scope: !4930, file: !4862, line: 64, type: !106)
!4937 = !DILocation(line: 0, scope: !4930)
!4938 = !DILocation(line: 83, column: 8, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4940, file: !4862, line: 82, column: 9)
!4940 = distinct !DILexicalBlock(scope: !4930, file: !4862, line: 76, column: 6)
!4941 = !DILocation(line: 95, column: 2, scope: !4930)
!4942 = !DILocation(line: 96, column: 1, scope: !4930)
!4943 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !508, file: !508, line: 1814, type: !4944, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !4946)
!4944 = !DISubroutineType(types: !4945)
!4945 = !{null, !762, !106}
!4946 = !{!4947, !4948}
!4947 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4943, file: !508, line: 1814, type: !762)
!4948 = !DILocalVariable(name: "priority", arg: 2, scope: !4943, file: !508, line: 1814, type: !106)
!4949 = !DILocation(line: 0, scope: !4943)
!4950 = !DILocation(line: 0, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !4943, file: !508, line: 1816, column: 7)
!4952 = !DILocation(line: 1816, column: 7, scope: !4943)
!4953 = !DILocation(line: 1824, column: 1, scope: !4943)
!4954 = distinct !DISubprogram(name: "z_irq_spurious", scope: !4862, file: !4862, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !4955)
!4955 = !{!4956}
!4956 = !DILocalVariable(name: "unused", arg: 1, scope: !4954, file: !4862, line: 155, type: !13)
!4957 = !DILocation(line: 0, scope: !4954)
!4958 = !DILocation(line: 159, column: 2, scope: !4954)
!4959 = !DILocation(line: 160, column: 1, scope: !4954)
!4960 = distinct !DISubprogram(name: "z_arm_nmi", scope: !4961, file: !4961, line: 87, type: !2860, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2383, retainedNodes: !474)
!4961 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4962 = !DILocation(line: 89, column: 2, scope: !4960)
!4963 = !DILocation(line: 90, column: 2, scope: !4960)
!4964 = !DILocation(line: 91, column: 1, scope: !4960)
!4965 = !DISubprogram(name: "z_SysNmiOnReset", scope: !4961, file: !4961, line: 23, type: !2860, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !474)
!4966 = !DISubprogram(name: "z_arm_int_exit", scope: !4967, file: !4967, line: 153, type: !2860, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !474)
!4967 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4968 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !4969, file: !4969, line: 256, type: !2860, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !474)
!4969 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4970 = !DILocation(line: 258, column: 2, scope: !4968)
!4971 = !DILocation(line: 260, column: 2, scope: !4968)
!4972 = !DILocation(line: 262, column: 2, scope: !4968)
!4973 = !DILocation(line: 263, column: 2, scope: !4968)
!4974 = !DILocation(line: 267, column: 2, scope: !4968)
!4975 = !DILocation(line: 268, column: 2, scope: !4968)
!4976 = distinct !DISubprogram(name: "relocate_vector_table", scope: !4969, file: !4969, line: 53, type: !2860, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !474)
!4977 = !DILocation(line: 55, column: 12, scope: !4976)
!4978 = !DILocation(line: 271, column: 3, scope: !4979, inlinedAt: !4980)
!4979 = distinct !DISubprogram(name: "__DSB", scope: !4910, file: !4910, line: 269, type: !2860, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !474)
!4980 = distinct !DILocation(line: 56, column: 2, scope: !4976)
!4981 = !{i64 3522408}
!4982 = !DILocation(line: 260, column: 3, scope: !4983, inlinedAt: !4984)
!4983 = distinct !DISubprogram(name: "__ISB", scope: !4910, file: !4910, line: 258, type: !2860, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !474)
!4984 = distinct !DILocation(line: 57, column: 2, scope: !4976)
!4985 = !{i64 3522125}
!4986 = !DILocation(line: 58, column: 1, scope: !4976)
!4987 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !4969, file: !4969, line: 96, type: !2860, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !474)
!4988 = !DILocation(line: 103, column: 13, scope: !4987)
!4989 = !DILocation(line: 975, column: 3, scope: !4990, inlinedAt: !4993)
!4990 = distinct !DISubprogram(name: "__get_CONTROL", scope: !4910, file: !4910, line: 971, type: !4745, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !4991)
!4991 = !{!4992}
!4992 = !DILocalVariable(name: "result", scope: !4990, file: !4910, line: 973, type: !106)
!4993 = distinct !DILocation(line: 189, column: 16, scope: !4987)
!4994 = !{i64 3543238}
!4995 = !DILocation(line: 0, scope: !4990, inlinedAt: !4993)
!4996 = !DILocation(line: 189, column: 32, scope: !4987)
!4997 = !DILocalVariable(name: "control", arg: 1, scope: !4998, file: !4910, line: 1001, type: !106)
!4998 = distinct !DISubprogram(name: "__set_CONTROL", scope: !4910, file: !4910, line: 1001, type: !4999, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !5001)
!4999 = !DISubroutineType(types: !5000)
!5000 = !{null, !106}
!5001 = !{!4997}
!5002 = !DILocation(line: 0, scope: !4998, inlinedAt: !5003)
!5003 = distinct !DILocation(line: 189, column: 2, scope: !4987)
!5004 = !DILocation(line: 1003, column: 3, scope: !4998, inlinedAt: !5003)
!5005 = !{i64 3543958}
!5006 = !DILocation(line: 260, column: 3, scope: !4983, inlinedAt: !5007)
!5007 = distinct !DILocation(line: 1004, column: 3, scope: !4998, inlinedAt: !5003)
!5008 = !DILocation(line: 191, column: 1, scope: !4987)
!5009 = distinct !DISubprogram(name: "arch_swap", scope: !5010, file: !5010, line: 33, type: !4920, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !5011)
!5010 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5011 = !{!5012}
!5012 = !DILocalVariable(name: "key", arg: 1, scope: !5009, file: !5010, line: 33, type: !32)
!5013 = !DILocation(line: 0, scope: !5009)
!5014 = !DILocation(line: 36, column: 2, scope: !5009)
!5015 = !DILocation(line: 36, column: 17, scope: !5009)
!5016 = !DILocation(line: 36, column: 25, scope: !5009)
!5017 = !DILocation(line: 37, column: 37, scope: !5009)
!5018 = !DILocation(line: 37, column: 17, scope: !5009)
!5019 = !DILocation(line: 37, column: 35, scope: !5009)
!5020 = !DILocation(line: 41, column: 12, scope: !5009)
!5021 = !DILocalVariable(name: "key", arg: 1, scope: !5022, file: !4661, line: 84, type: !32)
!5022 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4661, file: !4661, line: 84, type: !4672, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !5023)
!5023 = !{!5021}
!5024 = !DILocation(line: 0, scope: !5022, inlinedAt: !5025)
!5025 = distinct !DILocation(line: 44, column: 2, scope: !5009)
!5026 = !DILocation(line: 95, column: 2, scope: !5022, inlinedAt: !5025)
!5027 = !{i64 2221730}
!5028 = !DILocation(line: 53, column: 9, scope: !5009)
!5029 = !DILocation(line: 53, column: 24, scope: !5009)
!5030 = !DILocation(line: 53, column: 2, scope: !5009)
!5031 = distinct !DISubprogram(name: "arch_new_thread", scope: !5032, file: !5032, line: 56, type: !5033, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !5140)
!5032 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5033 = !DISubroutineType(types: !5034)
!5034 = !{null, !5035, !5135, !1081, !3166, !102, !102, !102}
!5035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5036, size: 32)
!5036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !363, line: 245, size: 1024, elements: !5037)
!5037 = !{!5038, !5096, !5108, !5109, !5110, !5111, !5117, !5130}
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5036, file: !363, line: 247, baseType: !5039, size: 384)
!5039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !363, line: 57, size: 384, elements: !5040)
!5040 = !{!5041, !5065, !5072, !5073, !5074, !5083, !5084, !5085}
!5041 = !DIDerivedType(tag: DW_TAG_member, scope: !5039, file: !363, line: 60, baseType: !5042, size: 64)
!5042 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5039, file: !363, line: 60, size: 64, elements: !5043)
!5043 = !{!5044, !5059}
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5042, file: !363, line: 61, baseType: !5045, size: 64)
!5045 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !373, line: 49, baseType: !5046)
!5046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !373, line: 37, size: 64, elements: !5047)
!5047 = !{!5048, !5054}
!5048 = !DIDerivedType(tag: DW_TAG_member, scope: !5046, file: !373, line: 38, baseType: !5049, size: 32)
!5049 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5046, file: !373, line: 38, size: 32, elements: !5050)
!5050 = !{!5051, !5053}
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5049, file: !373, line: 39, baseType: !5052, size: 32)
!5052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5046, size: 32)
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5049, file: !373, line: 40, baseType: !5052, size: 32)
!5054 = !DIDerivedType(tag: DW_TAG_member, scope: !5046, file: !373, line: 42, baseType: !5055, size: 32, offset: 32)
!5055 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5046, file: !373, line: 42, size: 32, elements: !5056)
!5056 = !{!5057, !5058}
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5055, file: !373, line: 43, baseType: !5052, size: 32)
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5055, file: !373, line: 44, baseType: !5052, size: 32)
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5042, file: !363, line: 62, baseType: !5060, size: 64)
!5060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !389, line: 49, size: 64, elements: !5061)
!5061 = !{!5062}
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5060, file: !389, line: 50, baseType: !5063, size: 64)
!5063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5064, size: 64, elements: !394)
!5064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5060, size: 32)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5039, file: !363, line: 68, baseType: !5066, size: 32, offset: 64)
!5066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5067, size: 32)
!5067 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !399, line: 233, baseType: !5068)
!5068 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !399, line: 231, size: 64, elements: !5069)
!5069 = !{!5070}
!5070 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5068, file: !399, line: 232, baseType: !5071, size: 64)
!5071 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !373, line: 48, baseType: !5046)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5039, file: !363, line: 71, baseType: !160, size: 8, offset: 96)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5039, file: !363, line: 74, baseType: !160, size: 8, offset: 104)
!5074 = !DIDerivedType(tag: DW_TAG_member, scope: !5039, file: !363, line: 90, baseType: !5075, size: 16, offset: 112)
!5075 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5039, file: !363, line: 90, size: 16, elements: !5076)
!5076 = !{!5077, !5082}
!5077 = !DIDerivedType(tag: DW_TAG_member, scope: !5075, file: !363, line: 91, baseType: !5078, size: 16)
!5078 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5075, file: !363, line: 91, size: 16, elements: !5079)
!5079 = !{!5080, !5081}
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5078, file: !363, line: 96, baseType: !413, size: 8)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5078, file: !363, line: 97, baseType: !160, size: 8, offset: 8)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5075, file: !363, line: 100, baseType: !417, size: 16)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5039, file: !363, line: 107, baseType: !106, size: 32, offset: 128)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5039, file: !363, line: 127, baseType: !102, size: 32, offset: 160)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5039, file: !363, line: 131, baseType: !5086, size: 192, offset: 192)
!5086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !399, line: 244, size: 192, elements: !5087)
!5087 = !{!5088, !5089, !5095}
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5086, file: !399, line: 245, baseType: !5045, size: 64)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5086, file: !399, line: 246, baseType: !5090, size: 32, offset: 64)
!5090 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !399, line: 242, baseType: !5091)
!5091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5092, size: 32)
!5092 = !DISubroutineType(types: !5093)
!5093 = !{null, !5094}
!5094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5086, size: 32)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5086, file: !399, line: 249, baseType: !432, size: 64, offset: 128)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5036, file: !363, line: 250, baseType: !5097, size: 288, offset: 384)
!5097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !5098)
!5098 = !{!5099, !5100, !5101, !5102, !5103, !5104, !5105, !5106, !5107}
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5097, file: !436, line: 26, baseType: !106, size: 32)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5097, file: !436, line: 27, baseType: !106, size: 32, offset: 32)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5097, file: !436, line: 28, baseType: !106, size: 32, offset: 64)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5097, file: !436, line: 29, baseType: !106, size: 32, offset: 96)
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5097, file: !436, line: 30, baseType: !106, size: 32, offset: 128)
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5097, file: !436, line: 31, baseType: !106, size: 32, offset: 160)
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5097, file: !436, line: 32, baseType: !106, size: 32, offset: 192)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5097, file: !436, line: 33, baseType: !106, size: 32, offset: 224)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5097, file: !436, line: 34, baseType: !106, size: 32, offset: 256)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5036, file: !363, line: 253, baseType: !102, size: 32, offset: 672)
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5036, file: !363, line: 256, baseType: !5067, size: 64, offset: 704)
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5036, file: !363, line: 294, baseType: !103, size: 32, offset: 768)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5036, file: !363, line: 300, baseType: !5112, size: 96, offset: 800)
!5112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !363, line: 149, size: 96, elements: !5113)
!5113 = !{!5114, !5115, !5116}
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5112, file: !363, line: 153, baseType: !22, size: 32)
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5112, file: !363, line: 162, baseType: !352, size: 32, offset: 32)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5112, file: !363, line: 168, baseType: !352, size: 32, offset: 64)
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5036, file: !363, line: 325, baseType: !5118, size: 32, offset: 896)
!5118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5119, size: 32)
!5119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !459, line: 5073, size: 160, elements: !5120)
!5120 = !{!5121, !5127, !5128}
!5121 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5119, file: !459, line: 5074, baseType: !5122, size: 96)
!5122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !463, line: 56, size: 96, elements: !5123)
!5123 = !{!5124, !5125, !5126}
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5122, file: !463, line: 57, baseType: !466, size: 32)
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5122, file: !463, line: 58, baseType: !102, size: 32, offset: 32)
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5122, file: !463, line: 59, baseType: !352, size: 32, offset: 64)
!5127 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5119, file: !459, line: 5075, baseType: !5067, size: 64, offset: 96)
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5119, file: !459, line: 5076, baseType: !5129, offset: 160)
!5129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !473, line: 43, elements: !474)
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5036, file: !363, line: 343, baseType: !5131, size: 64, offset: 928)
!5131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !5132)
!5132 = !{!5133, !5134}
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5131, file: !436, line: 63, baseType: !106, size: 32)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5131, file: !436, line: 66, baseType: !106, size: 32, offset: 32)
!5135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5136, size: 32)
!5136 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3167, line: 44, baseType: !5137)
!5137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1960, line: 47, size: 8, elements: !5138)
!5138 = !{!5139}
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5137, file: !1960, line: 48, baseType: !152, size: 8)
!5140 = !{!5141, !5142, !5143, !5144, !5145, !5146, !5147, !5148}
!5141 = !DILocalVariable(name: "thread", arg: 1, scope: !5031, file: !5032, line: 56, type: !5035)
!5142 = !DILocalVariable(name: "stack", arg: 2, scope: !5031, file: !5032, line: 56, type: !5135)
!5143 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !5031, file: !5032, line: 57, type: !1081)
!5144 = !DILocalVariable(name: "entry", arg: 4, scope: !5031, file: !5032, line: 57, type: !3166)
!5145 = !DILocalVariable(name: "p1", arg: 5, scope: !5031, file: !5032, line: 58, type: !102)
!5146 = !DILocalVariable(name: "p2", arg: 6, scope: !5031, file: !5032, line: 58, type: !102)
!5147 = !DILocalVariable(name: "p3", arg: 7, scope: !5031, file: !5032, line: 58, type: !102)
!5148 = !DILocalVariable(name: "iframe", scope: !5031, file: !5032, line: 60, type: !2444)
!5149 = !DILocation(line: 0, scope: !5031)
!5150 = !DILocation(line: 85, column: 11, scope: !5031)
!5151 = !DILocation(line: 93, column: 10, scope: !5031)
!5152 = !DILocation(line: 98, column: 13, scope: !5031)
!5153 = !DILocation(line: 100, column: 15, scope: !5031)
!5154 = !DILocation(line: 100, column: 10, scope: !5031)
!5155 = !DILocation(line: 100, column: 13, scope: !5031)
!5156 = !DILocation(line: 101, column: 15, scope: !5031)
!5157 = !DILocation(line: 101, column: 10, scope: !5031)
!5158 = !DILocation(line: 101, column: 13, scope: !5031)
!5159 = !DILocation(line: 102, column: 15, scope: !5031)
!5160 = !DILocation(line: 102, column: 10, scope: !5031)
!5161 = !DILocation(line: 102, column: 13, scope: !5031)
!5162 = !DILocation(line: 103, column: 15, scope: !5031)
!5163 = !DILocation(line: 103, column: 10, scope: !5031)
!5164 = !DILocation(line: 103, column: 13, scope: !5031)
!5165 = !DILocation(line: 106, column: 10, scope: !5031)
!5166 = !DILocation(line: 106, column: 15, scope: !5031)
!5167 = !DILocation(line: 122, column: 29, scope: !5031)
!5168 = !DILocation(line: 122, column: 23, scope: !5031)
!5169 = !DILocation(line: 122, column: 27, scope: !5031)
!5170 = !DILocation(line: 123, column: 15, scope: !5031)
!5171 = !DILocation(line: 123, column: 23, scope: !5031)
!5172 = !DILocation(line: 143, column: 1, scope: !5031)
!5173 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !5032, file: !5032, line: 385, type: !5174, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !5177)
!5174 = !DISubroutineType(types: !5175)
!5175 = !{!106, !5176, !5176}
!5176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !106)
!5177 = !{!5178, !5179, !5180, !5183}
!5178 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !5173, file: !5032, line: 385, type: !5176)
!5179 = !DILocalVariable(name: "psp", arg: 2, scope: !5173, file: !5032, line: 385, type: !5176)
!5180 = !DILocalVariable(name: "thread", scope: !5173, file: !5032, line: 388, type: !5181)
!5181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5182, size: 32)
!5182 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5036)
!5183 = !DILocalVariable(name: "guard_len", scope: !5173, file: !5032, line: 405, type: !106)
!5184 = !DILocation(line: 0, scope: !5173)
!5185 = !DILocation(line: 388, column: 34, scope: !5173)
!5186 = !DILocation(line: 390, column: 13, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5173, file: !5032, line: 390, column: 6)
!5188 = !DILocation(line: 390, column: 6, scope: !5173)
!5189 = !DILocation(line: 438, column: 6, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5173, file: !5032, line: 438, column: 6)
!5191 = !DILocation(line: 438, column: 6, scope: !5173)
!5192 = !DILocation(line: 442, column: 3, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5190, file: !5032, line: 440, column: 22)
!5194 = !DILocation(line: 455, column: 1, scope: !5173)
!5195 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !5032, file: !5032, line: 530, type: !5196, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !5198)
!5196 = !DISubroutineType(types: !5197)
!5197 = !{null, !5035, !1081, !3166}
!5198 = !{!5199, !5200, !5201}
!5199 = !DILocalVariable(name: "main_thread", arg: 1, scope: !5195, file: !5032, line: 530, type: !5035)
!5200 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !5195, file: !5032, line: 530, type: !1081)
!5201 = !DILocalVariable(name: "_main", arg: 3, scope: !5195, file: !5032, line: 531, type: !3166)
!5202 = !DILocation(line: 0, scope: !5195)
!5203 = !DILocation(line: 535, column: 11, scope: !5195)
!5204 = !DILocation(line: 560, column: 2, scope: !5195)
!5205 = !DILocation(line: 576, column: 2, scope: !5195)
!5206 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!5207 = !DILocation(line: 603, column: 2, scope: !5195)
!5208 = distinct !DISubprogram(name: "z_arm_fault", scope: !5209, file: !5209, line: 1036, type: !5210, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !5225)
!5209 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5210 = !DISubroutineType(types: !5211)
!5211 = !{null, !106, !106, !106, !5212}
!5212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5213, size: 32)
!5213 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !436, line: 37, baseType: !5214)
!5214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !5215)
!5215 = !{!5216, !5217, !5218, !5219, !5220, !5221, !5222, !5223, !5224}
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5214, file: !436, line: 26, baseType: !106, size: 32)
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5214, file: !436, line: 27, baseType: !106, size: 32, offset: 32)
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5214, file: !436, line: 28, baseType: !106, size: 32, offset: 64)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5214, file: !436, line: 29, baseType: !106, size: 32, offset: 96)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5214, file: !436, line: 30, baseType: !106, size: 32, offset: 128)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5214, file: !436, line: 31, baseType: !106, size: 32, offset: 160)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5214, file: !436, line: 32, baseType: !106, size: 32, offset: 192)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5214, file: !436, line: 33, baseType: !106, size: 32, offset: 224)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5214, file: !436, line: 34, baseType: !106, size: 32, offset: 256)
!5225 = !{!5226, !5227, !5228, !5229, !5230, !5231, !5232, !5233, !5234, !5235}
!5226 = !DILocalVariable(name: "msp", arg: 1, scope: !5208, file: !5209, line: 1036, type: !106)
!5227 = !DILocalVariable(name: "psp", arg: 2, scope: !5208, file: !5209, line: 1036, type: !106)
!5228 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5208, file: !5209, line: 1036, type: !106)
!5229 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !5208, file: !5209, line: 1037, type: !5212)
!5230 = !DILocalVariable(name: "reason", scope: !5208, file: !5209, line: 1039, type: !106)
!5231 = !DILocalVariable(name: "fault", scope: !5208, file: !5209, line: 1040, type: !103)
!5232 = !DILocalVariable(name: "recoverable", scope: !5208, file: !5209, line: 1041, type: !163)
!5233 = !DILocalVariable(name: "nested_exc", scope: !5208, file: !5209, line: 1041, type: !163)
!5234 = !DILocalVariable(name: "esf", scope: !5208, file: !5209, line: 1042, type: !2512)
!5235 = !DILocalVariable(name: "esf_copy", scope: !5208, file: !5209, line: 1047, type: !2513)
!5236 = !DILocation(line: 0, scope: !5208)
!5237 = !DILocation(line: 1040, column: 19, scope: !5208)
!5238 = !DILocation(line: 1040, column: 24, scope: !5208)
!5239 = !DILocation(line: 1041, column: 2, scope: !5208)
!5240 = !DILocation(line: 1047, column: 2, scope: !5208)
!5241 = !DILocation(line: 1047, column: 15, scope: !5208)
!5242 = !DILocalVariable(name: "key", arg: 1, scope: !5243, file: !4661, line: 84, type: !32)
!5243 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4661, file: !4661, line: 84, type: !4672, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !5244)
!5244 = !{!5242}
!5245 = !DILocation(line: 0, scope: !5243, inlinedAt: !5246)
!5246 = distinct !DILocation(line: 1050, column: 2, scope: !5208)
!5247 = !DILocation(line: 95, column: 2, scope: !5243, inlinedAt: !5246)
!5248 = !{i64 2254974}
!5249 = !DILocation(line: 1055, column: 9, scope: !5208)
!5250 = !DILocation(line: 1063, column: 11, scope: !5208)
!5251 = !DILocation(line: 1064, column: 6, scope: !5252)
!5252 = distinct !DILexicalBlock(scope: !5208, file: !5209, line: 1064, column: 6)
!5253 = !{i8 0, i8 2}
!5254 = !DILocation(line: 1064, column: 6, scope: !5208)
!5255 = !DILocation(line: 1070, column: 20, scope: !5208)
!5256 = !DILocation(line: 1070, column: 2, scope: !5208)
!5257 = !DILocation(line: 1089, column: 6, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5208, file: !5209, line: 1089, column: 6)
!5259 = !DILocation(line: 0, scope: !5258)
!5260 = !DILocation(line: 1089, column: 6, scope: !5208)
!5261 = !DILocation(line: 1090, column: 28, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5263, file: !5209, line: 1090, column: 7)
!5263 = distinct !DILexicalBlock(scope: !5258, file: !5209, line: 1089, column: 18)
!5264 = !DILocation(line: 1090, column: 44, scope: !5262)
!5265 = !DILocation(line: 1090, column: 7, scope: !5263)
!5266 = !DILocation(line: 1091, column: 24, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5262, file: !5209, line: 1090, column: 50)
!5268 = !DILocation(line: 1092, column: 3, scope: !5267)
!5269 = !DILocation(line: 1094, column: 23, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5258, file: !5209, line: 1093, column: 9)
!5271 = !DILocation(line: 1097, column: 2, scope: !5208)
!5272 = !DILocation(line: 1098, column: 1, scope: !5208)
!5273 = distinct !DISubprogram(name: "get_esf", scope: !5209, file: !5209, line: 894, type: !5274, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !5277)
!5274 = !DISubroutineType(types: !5275)
!5275 = !{!2512, !106, !106, !106, !5276}
!5276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !163, size: 32)
!5277 = !{!5278, !5279, !5280, !5281, !5282, !5283}
!5278 = !DILocalVariable(name: "msp", arg: 1, scope: !5273, file: !5209, line: 894, type: !106)
!5279 = !DILocalVariable(name: "psp", arg: 2, scope: !5273, file: !5209, line: 894, type: !106)
!5280 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5273, file: !5209, line: 894, type: !106)
!5281 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !5273, file: !5209, line: 895, type: !5276)
!5282 = !DILocalVariable(name: "alternative_state_exc", scope: !5273, file: !5209, line: 897, type: !163)
!5283 = !DILocalVariable(name: "ptr_esf", scope: !5273, file: !5209, line: 898, type: !2512)
!5284 = !DILocation(line: 0, scope: !5273)
!5285 = !DILocation(line: 900, column: 14, scope: !5273)
!5286 = !DILocation(line: 902, column: 49, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5273, file: !5209, line: 902, column: 6)
!5288 = !DILocation(line: 902, column: 6, scope: !5273)
!5289 = !DILocation(line: 983, column: 18, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5273, file: !5209, line: 983, column: 6)
!5291 = !DILocation(line: 991, column: 7, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5293, file: !5209, line: 990, column: 30)
!5293 = distinct !DILexicalBlock(scope: !5273, file: !5209, line: 990, column: 6)
!5294 = !DILocation(line: 998, column: 16, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5296, file: !5209, line: 995, column: 10)
!5296 = distinct !DILexicalBlock(scope: !5292, file: !5209, line: 991, column: 7)
!5297 = !DILocation(line: 1002, column: 2, scope: !5273)
!5298 = !DILocation(line: 1003, column: 1, scope: !5273)
!5299 = distinct !DISubprogram(name: "fault_handle", scope: !5209, file: !5209, line: 786, type: !5300, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !5302)
!5300 = !DISubroutineType(types: !5301)
!5301 = !{!106, !2512, !103, !5276}
!5302 = !{!5303, !5304, !5305, !5306}
!5303 = !DILocalVariable(name: "esf", arg: 1, scope: !5299, file: !5209, line: 786, type: !2512)
!5304 = !DILocalVariable(name: "fault", arg: 2, scope: !5299, file: !5209, line: 786, type: !103)
!5305 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5299, file: !5209, line: 786, type: !5276)
!5306 = !DILocalVariable(name: "reason", scope: !5299, file: !5209, line: 788, type: !106)
!5307 = !DILocation(line: 0, scope: !5299)
!5308 = !DILocation(line: 790, column: 15, scope: !5299)
!5309 = !DILocation(line: 792, column: 2, scope: !5299)
!5310 = !DILocation(line: 794, column: 12, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5299, file: !5209, line: 792, column: 17)
!5312 = !DILocation(line: 795, column: 3, scope: !5311)
!5313 = !DILocation(line: 800, column: 12, scope: !5311)
!5314 = !DILocation(line: 801, column: 3, scope: !5311)
!5315 = !DILocation(line: 803, column: 12, scope: !5311)
!5316 = !DILocation(line: 804, column: 3, scope: !5311)
!5317 = !DILocation(line: 806, column: 12, scope: !5311)
!5318 = !DILocation(line: 807, column: 3, scope: !5311)
!5319 = !DILocation(line: 814, column: 3, scope: !5311)
!5320 = !DILocation(line: 815, column: 3, scope: !5311)
!5321 = !DILocation(line: 829, column: 2, scope: !5299)
!5322 = distinct !DISubprogram(name: "hard_fault", scope: !5209, file: !5209, line: 709, type: !5323, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !5325)
!5323 = !DISubroutineType(types: !5324)
!5324 = !{!106, !2512, !5276}
!5325 = !{!5326, !5327, !5328}
!5326 = !DILocalVariable(name: "esf", arg: 1, scope: !5322, file: !5209, line: 709, type: !2512)
!5327 = !DILocalVariable(name: "recoverable", arg: 2, scope: !5322, file: !5209, line: 709, type: !5276)
!5328 = !DILocalVariable(name: "reason", scope: !5322, file: !5209, line: 711, type: !106)
!5329 = !DILocation(line: 0, scope: !5322)
!5330 = !DILocation(line: 732, column: 15, scope: !5322)
!5331 = !DILocation(line: 734, column: 12, scope: !5332)
!5332 = distinct !DILexicalBlock(scope: !5322, file: !5209, line: 734, column: 6)
!5333 = !DILocation(line: 734, column: 17, scope: !5332)
!5334 = !DILocation(line: 734, column: 41, scope: !5332)
!5335 = !DILocation(line: 734, column: 6, scope: !5322)
!5336 = !DILocation(line: 736, column: 19, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5332, file: !5209, line: 736, column: 13)
!5338 = !DILocation(line: 736, column: 49, scope: !5337)
!5339 = !DILocation(line: 736, column: 13, scope: !5332)
!5340 = !DILocation(line: 738, column: 19, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !5337, file: !5209, line: 738, column: 13)
!5342 = !DILocation(line: 738, column: 24, scope: !5341)
!5343 = !DILocation(line: 738, column: 47, scope: !5341)
!5344 = !DILocation(line: 738, column: 13, scope: !5337)
!5345 = !DILocation(line: 740, column: 7, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5347, file: !5209, line: 740, column: 7)
!5347 = distinct !DILexicalBlock(scope: !5341, file: !5209, line: 738, column: 53)
!5348 = !DILocation(line: 740, column: 7, scope: !5347)
!5349 = !DILocation(line: 742, column: 24, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5346, file: !5209, line: 740, column: 38)
!5351 = !DILocation(line: 743, column: 3, scope: !5350)
!5352 = !DILocation(line: 743, column: 20, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5346, file: !5209, line: 743, column: 14)
!5354 = !DILocation(line: 743, column: 25, scope: !5353)
!5355 = !DILocation(line: 743, column: 52, scope: !5353)
!5356 = !DILocation(line: 743, column: 14, scope: !5346)
!5357 = !DILocation(line: 744, column: 13, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !5353, file: !5209, line: 743, column: 58)
!5359 = !DILocation(line: 745, column: 3, scope: !5358)
!5360 = !DILocation(line: 745, column: 20, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5353, file: !5209, line: 745, column: 14)
!5362 = !DILocation(line: 745, column: 25, scope: !5361)
!5363 = !DILocation(line: 745, column: 52, scope: !5361)
!5364 = !DILocation(line: 745, column: 14, scope: !5353)
!5365 = !DILocation(line: 746, column: 13, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5361, file: !5209, line: 745, column: 58)
!5367 = !DILocation(line: 747, column: 3, scope: !5366)
!5368 = !DILocation(line: 747, column: 20, scope: !5369)
!5369 = distinct !DILexicalBlock(scope: !5361, file: !5209, line: 747, column: 14)
!5370 = !DILocation(line: 747, column: 52, scope: !5369)
!5371 = !DILocation(line: 747, column: 14, scope: !5361)
!5372 = !DILocation(line: 748, column: 13, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !5369, file: !5209, line: 747, column: 58)
!5374 = !DILocation(line: 753, column: 3, scope: !5373)
!5375 = !DILocation(line: 766, column: 2, scope: !5322)
!5376 = distinct !DISubprogram(name: "mem_manage_fault", scope: !5209, file: !5209, line: 229, type: !5300, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !5377)
!5377 = !{!5378, !5379, !5380, !5381, !5382, !5383, !5386}
!5378 = !DILocalVariable(name: "esf", arg: 1, scope: !5376, file: !5209, line: 229, type: !2512)
!5379 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !5376, file: !5209, line: 229, type: !103)
!5380 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5376, file: !5209, line: 230, type: !5276)
!5381 = !DILocalVariable(name: "reason", scope: !5376, file: !5209, line: 232, type: !106)
!5382 = !DILocalVariable(name: "mmfar", scope: !5376, file: !5209, line: 233, type: !106)
!5383 = !DILocalVariable(name: "temp", scope: !5384, file: !5209, line: 254, type: !106)
!5384 = distinct !DILexicalBlock(scope: !5385, file: !5209, line: 244, column: 48)
!5385 = distinct !DILexicalBlock(scope: !5376, file: !5209, line: 244, column: 6)
!5386 = !DILocalVariable(name: "min_stack_ptr", scope: !5387, file: !5209, line: 309, type: !106)
!5387 = distinct !DILexicalBlock(scope: !5388, file: !5209, line: 308, column: 43)
!5388 = distinct !DILexicalBlock(scope: !5389, file: !5209, line: 308, column: 7)
!5389 = distinct !DILexicalBlock(scope: !5390, file: !5209, line: 289, column: 40)
!5390 = distinct !DILexicalBlock(scope: !5376, file: !5209, line: 288, column: 6)
!5391 = !DILocation(line: 0, scope: !5376)
!5392 = !DILocation(line: 237, column: 12, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !5376, file: !5209, line: 237, column: 6)
!5394 = !DILocation(line: 241, column: 12, scope: !5395)
!5395 = distinct !DILexicalBlock(scope: !5376, file: !5209, line: 241, column: 6)
!5396 = !DILocation(line: 244, column: 12, scope: !5385)
!5397 = !DILocation(line: 244, column: 17, scope: !5385)
!5398 = !DILocation(line: 244, column: 42, scope: !5385)
!5399 = !DILocation(line: 244, column: 6, scope: !5376)
!5400 = !DILocation(line: 254, column: 24, scope: !5384)
!5401 = !DILocation(line: 0, scope: !5384)
!5402 = !DILocation(line: 256, column: 13, scope: !5403)
!5403 = distinct !DILexicalBlock(scope: !5384, file: !5209, line: 256, column: 7)
!5404 = !DILocation(line: 256, column: 18, scope: !5403)
!5405 = !DILocation(line: 256, column: 44, scope: !5403)
!5406 = !DILocation(line: 256, column: 7, scope: !5384)
!5407 = !DILocation(line: 259, column: 24, scope: !5408)
!5408 = distinct !DILexicalBlock(scope: !5409, file: !5209, line: 259, column: 8)
!5409 = distinct !DILexicalBlock(scope: !5403, file: !5209, line: 256, column: 50)
!5410 = !DILocation(line: 259, column: 8, scope: !5409)
!5411 = !DILocation(line: 261, column: 15, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5408, file: !5209, line: 259, column: 30)
!5413 = !DILocation(line: 262, column: 4, scope: !5412)
!5414 = !DILocation(line: 265, column: 12, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5376, file: !5209, line: 265, column: 6)
!5416 = !DILocation(line: 269, column: 12, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5376, file: !5209, line: 269, column: 6)
!5418 = !DILocation(line: 288, column: 12, scope: !5390)
!5419 = !DILocation(line: 288, column: 17, scope: !5390)
!5420 = !DILocation(line: 288, column: 41, scope: !5390)
!5421 = !DILocation(line: 289, column: 9, scope: !5390)
!5422 = !DILocation(line: 289, column: 14, scope: !5390)
!5423 = !DILocation(line: 288, column: 6, scope: !5376)
!5424 = !DILocation(line: 308, column: 12, scope: !5388)
!5425 = !DILocation(line: 308, column: 17, scope: !5388)
!5426 = !DILocation(line: 308, column: 7, scope: !5389)
!5427 = !DILocation(line: 310, column: 6, scope: !5387)
!5428 = !DILocation(line: 309, column: 29, scope: !5387)
!5429 = !DILocation(line: 0, scope: !5387)
!5430 = !DILocation(line: 312, column: 8, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !5387, file: !5209, line: 312, column: 8)
!5432 = !DILocation(line: 312, column: 8, scope: !5387)
!5433 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !5434, file: !4910, line: 1099, type: !106)
!5434 = distinct !DISubprogram(name: "__set_PSP", scope: !4910, file: !4910, line: 1099, type: !4999, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !5435)
!5435 = !{!5433}
!5436 = !DILocation(line: 0, scope: !5434, inlinedAt: !5437)
!5437 = distinct !DILocation(line: 338, column: 5, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5431, file: !5209, line: 312, column: 23)
!5439 = !DILocation(line: 1101, column: 3, scope: !5434, inlinedAt: !5437)
!5440 = !{i64 3573377}
!5441 = !DILocation(line: 341, column: 4, scope: !5438)
!5442 = !DILocation(line: 360, column: 12, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5376, file: !5209, line: 360, column: 6)
!5444 = !DILocation(line: 360, column: 17, scope: !5443)
!5445 = !DILocation(line: 360, column: 41, scope: !5443)
!5446 = !DILocation(line: 360, column: 6, scope: !5376)
!5447 = !DILocation(line: 361, column: 14, scope: !5448)
!5448 = distinct !DILexicalBlock(scope: !5443, file: !5209, line: 360, column: 47)
!5449 = !DILocation(line: 362, column: 2, scope: !5448)
!5450 = !DILocation(line: 366, column: 12, scope: !5376)
!5451 = !DILocation(line: 369, column: 15, scope: !5376)
!5452 = !DILocation(line: 371, column: 2, scope: !5376)
!5453 = distinct !DISubprogram(name: "bus_fault", scope: !5209, file: !5209, line: 383, type: !5454, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !5456)
!5454 = !DISubroutineType(types: !5455)
!5455 = !{!103, !2512, !103, !5276}
!5456 = !{!5457, !5458, !5459, !5460, !5461}
!5457 = !DILocalVariable(name: "esf", arg: 1, scope: !5453, file: !5209, line: 383, type: !2512)
!5458 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !5453, file: !5209, line: 383, type: !103)
!5459 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5453, file: !5209, line: 383, type: !5276)
!5460 = !DILocalVariable(name: "reason", scope: !5453, file: !5209, line: 385, type: !106)
!5461 = !DILocalVariable(name: "bfar", scope: !5462, file: !5209, line: 405, type: !106)
!5462 = distinct !DILexicalBlock(scope: !5463, file: !5209, line: 395, column: 42)
!5463 = distinct !DILexicalBlock(scope: !5453, file: !5209, line: 395, column: 6)
!5464 = !DILocation(line: 0, scope: !5453)
!5465 = !DILocation(line: 389, column: 11, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5453, file: !5209, line: 389, column: 6)
!5467 = !DILocation(line: 392, column: 11, scope: !5468)
!5468 = distinct !DILexicalBlock(scope: !5453, file: !5209, line: 392, column: 6)
!5469 = !DILocation(line: 395, column: 11, scope: !5463)
!5470 = !DILocation(line: 395, column: 16, scope: !5463)
!5471 = !DILocation(line: 395, column: 6, scope: !5453)
!5472 = !DILocation(line: 405, column: 3, scope: !5462)
!5473 = !DILocation(line: 0, scope: !5462)
!5474 = !DILocation(line: 407, column: 13, scope: !5475)
!5475 = distinct !DILexicalBlock(scope: !5462, file: !5209, line: 407, column: 7)
!5476 = !DILocation(line: 407, column: 18, scope: !5475)
!5477 = !DILocation(line: 407, column: 44, scope: !5475)
!5478 = !DILocation(line: 407, column: 7, scope: !5462)
!5479 = !DILocation(line: 411, column: 15, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5481, file: !5209, line: 409, column: 30)
!5481 = distinct !DILexicalBlock(scope: !5482, file: !5209, line: 409, column: 8)
!5482 = distinct !DILexicalBlock(scope: !5475, file: !5209, line: 407, column: 50)
!5483 = !DILocation(line: 412, column: 4, scope: !5480)
!5484 = !DILocation(line: 415, column: 11, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5453, file: !5209, line: 415, column: 6)
!5486 = !DILocation(line: 418, column: 12, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5453, file: !5209, line: 418, column: 6)
!5488 = !DILocation(line: 418, column: 17, scope: !5487)
!5489 = !DILocation(line: 418, column: 41, scope: !5487)
!5490 = !DILocation(line: 418, column: 6, scope: !5453)
!5491 = !DILocation(line: 423, column: 18, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5487, file: !5209, line: 423, column: 13)
!5493 = !DILocation(line: 524, column: 12, scope: !5453)
!5494 = !DILocation(line: 526, column: 15, scope: !5453)
!5495 = !DILocation(line: 528, column: 2, scope: !5453)
!5496 = distinct !DISubprogram(name: "usage_fault", scope: !5209, file: !5209, line: 539, type: !5497, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !5501)
!5497 = !DISubroutineType(types: !5498)
!5498 = !{!106, !5499}
!5499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5500, size: 32)
!5500 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2513)
!5501 = !{!5502, !5503}
!5502 = !DILocalVariable(name: "esf", arg: 1, scope: !5496, file: !5209, line: 539, type: !5499)
!5503 = !DILocalVariable(name: "reason", scope: !5496, file: !5209, line: 541, type: !106)
!5504 = !DILocation(line: 0, scope: !5496)
!5505 = !DILocation(line: 546, column: 12, scope: !5506)
!5506 = distinct !DILexicalBlock(scope: !5496, file: !5209, line: 546, column: 6)
!5507 = !DILocation(line: 549, column: 12, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5496, file: !5209, line: 549, column: 6)
!5509 = !DILocation(line: 567, column: 12, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5496, file: !5209, line: 567, column: 6)
!5511 = !DILocation(line: 570, column: 12, scope: !5512)
!5512 = distinct !DILexicalBlock(scope: !5496, file: !5209, line: 570, column: 6)
!5513 = !DILocation(line: 573, column: 12, scope: !5514)
!5514 = distinct !DILexicalBlock(scope: !5496, file: !5209, line: 573, column: 6)
!5515 = !DILocation(line: 576, column: 12, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5496, file: !5209, line: 576, column: 6)
!5517 = !DILocation(line: 581, column: 12, scope: !5496)
!5518 = !DILocation(line: 583, column: 2, scope: !5496)
!5519 = distinct !DISubprogram(name: "debug_monitor", scope: !5209, file: !5209, line: 632, type: !5520, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !5522)
!5520 = !DISubroutineType(types: !5521)
!5521 = !{null, !2512, !5276}
!5522 = !{!5523, !5524}
!5523 = !DILocalVariable(name: "esf", arg: 1, scope: !5519, file: !5209, line: 632, type: !2512)
!5524 = !DILocalVariable(name: "recoverable", arg: 2, scope: !5519, file: !5209, line: 632, type: !5276)
!5525 = !DILocation(line: 0, scope: !5519)
!5526 = !DILocation(line: 634, column: 15, scope: !5519)
!5527 = !DILocation(line: 652, column: 1, scope: !5519)
!5528 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !5209, file: !5209, line: 658, type: !5529, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !5531)
!5529 = !DISubroutineType(types: !5530)
!5530 = !{!163, !2512}
!5531 = !{!5532, !5533, !5534}
!5532 = !DILocalVariable(name: "esf", arg: 1, scope: !5528, file: !5209, line: 658, type: !2512)
!5533 = !DILocalVariable(name: "ret_addr", scope: !5528, file: !5209, line: 660, type: !2555)
!5534 = !DILocalVariable(name: "fault_insn", scope: !5528, file: !5209, line: 686, type: !417)
!5535 = !DILocation(line: 0, scope: !5528)
!5536 = !DILocation(line: 660, column: 46, scope: !5528)
!5537 = !DILocation(line: 660, column: 23, scope: !5528)
!5538 = !DILocation(line: 682, column: 11, scope: !5528)
!5539 = !DILocation(line: 271, column: 3, scope: !5540, inlinedAt: !5541)
!5540 = distinct !DISubprogram(name: "__DSB", scope: !4910, file: !4910, line: 269, type: !2860, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !474)
!5541 = distinct !DILocation(line: 683, column: 2, scope: !5528)
!5542 = !{i64 3549512}
!5543 = !DILocation(line: 260, column: 3, scope: !5544, inlinedAt: !5545)
!5544 = distinct !DISubprogram(name: "__ISB", scope: !4910, file: !4910, line: 258, type: !2860, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !474)
!5545 = distinct !DILocation(line: 684, column: 2, scope: !5528)
!5546 = !{i64 3549229}
!5547 = !DILocation(line: 686, column: 35, scope: !5528)
!5548 = !DILocation(line: 686, column: 24, scope: !5528)
!5549 = !DILocation(line: 688, column: 11, scope: !5528)
!5550 = !DILocation(line: 271, column: 3, scope: !5540, inlinedAt: !5551)
!5551 = distinct !DILocation(line: 689, column: 2, scope: !5528)
!5552 = !DILocation(line: 260, column: 3, scope: !5544, inlinedAt: !5553)
!5553 = distinct !DILocation(line: 690, column: 2, scope: !5528)
!5554 = !DILocation(line: 693, column: 45, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5528, file: !5209, line: 693, column: 6)
!5556 = !DILocation(line: 699, column: 1, scope: !5528)
!5557 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !5209, file: !5209, line: 1107, type: !2860, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !474)
!5558 = !DILocation(line: 1111, column: 11, scope: !5557)
!5559 = !DILocation(line: 1136, column: 1, scope: !5557)
!5560 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !5561, file: !5561, line: 26, type: !2860, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !5562)
!5561 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5562 = !{!5563}
!5563 = !DILocalVariable(name: "irq", scope: !5560, file: !5561, line: 28, type: !103)
!5564 = !DILocation(line: 0, scope: !5560)
!5565 = !DILocation(line: 30, column: 2, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5560, file: !5561, line: 30, column: 2)
!5567 = !DILocation(line: 31, column: 3, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5569, file: !5561, line: 30, column: 39)
!5569 = distinct !DILexicalBlock(scope: !5566, file: !5561, line: 30, column: 2)
!5570 = !DILocation(line: 30, column: 35, scope: !5569)
!5571 = !DILocation(line: 30, column: 13, scope: !5569)
!5572 = distinct !{!5572, !5565, !5573}
!5573 = !DILocation(line: 32, column: 2, scope: !5566)
!5574 = !DILocation(line: 33, column: 1, scope: !5560)
!5575 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !508, file: !508, line: 1814, type: !4944, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !5576)
!5576 = !{!5577, !5578}
!5577 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5575, file: !508, line: 1814, type: !762)
!5578 = !DILocalVariable(name: "priority", arg: 2, scope: !5575, file: !508, line: 1814, type: !106)
!5579 = !DILocation(line: 0, scope: !5575)
!5580 = !DILocation(line: 1816, column: 7, scope: !5575)
!5581 = !DILocation(line: 0, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !5575, file: !508, line: 1816, column: 7)
!5583 = !DILocation(line: 1824, column: 1, scope: !5575)
!5584 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !5585, file: !5585, line: 27, type: !5586, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2601, retainedNodes: !5689)
!5585 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5586 = !DISubroutineType(types: !5587)
!5587 = !{null, !5588}
!5588 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !363, line: 347, baseType: !5589)
!5589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5590, size: 32)
!5590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !363, line: 245, size: 1024, elements: !5591)
!5591 = !{!5592, !5650, !5662, !5663, !5664, !5665, !5671, !5684}
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5590, file: !363, line: 247, baseType: !5593, size: 384)
!5593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !363, line: 57, size: 384, elements: !5594)
!5594 = !{!5595, !5619, !5626, !5627, !5628, !5637, !5638, !5639}
!5595 = !DIDerivedType(tag: DW_TAG_member, scope: !5593, file: !363, line: 60, baseType: !5596, size: 64)
!5596 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5593, file: !363, line: 60, size: 64, elements: !5597)
!5597 = !{!5598, !5613}
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5596, file: !363, line: 61, baseType: !5599, size: 64)
!5599 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !373, line: 49, baseType: !5600)
!5600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !373, line: 37, size: 64, elements: !5601)
!5601 = !{!5602, !5608}
!5602 = !DIDerivedType(tag: DW_TAG_member, scope: !5600, file: !373, line: 38, baseType: !5603, size: 32)
!5603 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5600, file: !373, line: 38, size: 32, elements: !5604)
!5604 = !{!5605, !5607}
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5603, file: !373, line: 39, baseType: !5606, size: 32)
!5606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5600, size: 32)
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5603, file: !373, line: 40, baseType: !5606, size: 32)
!5608 = !DIDerivedType(tag: DW_TAG_member, scope: !5600, file: !373, line: 42, baseType: !5609, size: 32, offset: 32)
!5609 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5600, file: !373, line: 42, size: 32, elements: !5610)
!5610 = !{!5611, !5612}
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5609, file: !373, line: 43, baseType: !5606, size: 32)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5609, file: !373, line: 44, baseType: !5606, size: 32)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5596, file: !363, line: 62, baseType: !5614, size: 64)
!5614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !389, line: 49, size: 64, elements: !5615)
!5615 = !{!5616}
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5614, file: !389, line: 50, baseType: !5617, size: 64)
!5617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5618, size: 64, elements: !394)
!5618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5614, size: 32)
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5593, file: !363, line: 68, baseType: !5620, size: 32, offset: 64)
!5620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5621, size: 32)
!5621 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !399, line: 233, baseType: !5622)
!5622 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !399, line: 231, size: 64, elements: !5623)
!5623 = !{!5624}
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5622, file: !399, line: 232, baseType: !5625, size: 64)
!5625 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !373, line: 48, baseType: !5600)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5593, file: !363, line: 71, baseType: !160, size: 8, offset: 96)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5593, file: !363, line: 74, baseType: !160, size: 8, offset: 104)
!5628 = !DIDerivedType(tag: DW_TAG_member, scope: !5593, file: !363, line: 90, baseType: !5629, size: 16, offset: 112)
!5629 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5593, file: !363, line: 90, size: 16, elements: !5630)
!5630 = !{!5631, !5636}
!5631 = !DIDerivedType(tag: DW_TAG_member, scope: !5629, file: !363, line: 91, baseType: !5632, size: 16)
!5632 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5629, file: !363, line: 91, size: 16, elements: !5633)
!5633 = !{!5634, !5635}
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5632, file: !363, line: 96, baseType: !413, size: 8)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5632, file: !363, line: 97, baseType: !160, size: 8, offset: 8)
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5629, file: !363, line: 100, baseType: !417, size: 16)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5593, file: !363, line: 107, baseType: !106, size: 32, offset: 128)
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5593, file: !363, line: 127, baseType: !102, size: 32, offset: 160)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5593, file: !363, line: 131, baseType: !5640, size: 192, offset: 192)
!5640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !399, line: 244, size: 192, elements: !5641)
!5641 = !{!5642, !5643, !5649}
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5640, file: !399, line: 245, baseType: !5599, size: 64)
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5640, file: !399, line: 246, baseType: !5644, size: 32, offset: 64)
!5644 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !399, line: 242, baseType: !5645)
!5645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5646, size: 32)
!5646 = !DISubroutineType(types: !5647)
!5647 = !{null, !5648}
!5648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5640, size: 32)
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5640, file: !399, line: 249, baseType: !432, size: 64, offset: 128)
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5590, file: !363, line: 250, baseType: !5651, size: 288, offset: 384)
!5651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !5652)
!5652 = !{!5653, !5654, !5655, !5656, !5657, !5658, !5659, !5660, !5661}
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5651, file: !436, line: 26, baseType: !106, size: 32)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5651, file: !436, line: 27, baseType: !106, size: 32, offset: 32)
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5651, file: !436, line: 28, baseType: !106, size: 32, offset: 64)
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5651, file: !436, line: 29, baseType: !106, size: 32, offset: 96)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5651, file: !436, line: 30, baseType: !106, size: 32, offset: 128)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5651, file: !436, line: 31, baseType: !106, size: 32, offset: 160)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5651, file: !436, line: 32, baseType: !106, size: 32, offset: 192)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5651, file: !436, line: 33, baseType: !106, size: 32, offset: 224)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5651, file: !436, line: 34, baseType: !106, size: 32, offset: 256)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5590, file: !363, line: 253, baseType: !102, size: 32, offset: 672)
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5590, file: !363, line: 256, baseType: !5621, size: 64, offset: 704)
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5590, file: !363, line: 294, baseType: !103, size: 32, offset: 768)
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5590, file: !363, line: 300, baseType: !5666, size: 96, offset: 800)
!5666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !363, line: 149, size: 96, elements: !5667)
!5667 = !{!5668, !5669, !5670}
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5666, file: !363, line: 153, baseType: !22, size: 32)
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5666, file: !363, line: 162, baseType: !352, size: 32, offset: 32)
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5666, file: !363, line: 168, baseType: !352, size: 32, offset: 64)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5590, file: !363, line: 325, baseType: !5672, size: 32, offset: 896)
!5672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5673, size: 32)
!5673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !459, line: 5073, size: 160, elements: !5674)
!5674 = !{!5675, !5681, !5682}
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5673, file: !459, line: 5074, baseType: !5676, size: 96)
!5676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !463, line: 56, size: 96, elements: !5677)
!5677 = !{!5678, !5679, !5680}
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5676, file: !463, line: 57, baseType: !466, size: 32)
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5676, file: !463, line: 58, baseType: !102, size: 32, offset: 32)
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5676, file: !463, line: 59, baseType: !352, size: 32, offset: 64)
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5673, file: !459, line: 5075, baseType: !5621, size: 64, offset: 96)
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5673, file: !459, line: 5076, baseType: !5683, offset: 160)
!5683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !473, line: 43, elements: !474)
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5590, file: !363, line: 343, baseType: !5685, size: 64, offset: 928)
!5685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !5686)
!5686 = !{!5687, !5688}
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5685, file: !436, line: 63, baseType: !106, size: 32)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5685, file: !436, line: 66, baseType: !106, size: 32, offset: 32)
!5689 = !{!5690}
!5690 = !DILocalVariable(name: "thread", arg: 1, scope: !5584, file: !5585, line: 27, type: !5588)
!5691 = !DILocation(line: 0, scope: !5584)
!5692 = !DILocation(line: 29, column: 6, scope: !5693)
!5693 = distinct !DILexicalBlock(scope: !5584, file: !5585, line: 29, column: 6)
!5694 = !DILocation(line: 29, column: 15, scope: !5693)
!5695 = !DILocation(line: 29, column: 6, scope: !5584)
!5696 = !DILocation(line: 1031, column: 3, scope: !5697, inlinedAt: !5700)
!5697 = distinct !DISubprogram(name: "__get_IPSR", scope: !4910, file: !4910, line: 1027, type: !4745, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2601, retainedNodes: !5698)
!5698 = !{!5699}
!5699 = !DILocalVariable(name: "result", scope: !5697, file: !4910, line: 1029, type: !106)
!5700 = distinct !DILocation(line: 48, column: 10, scope: !5701, inlinedAt: !5705)
!5701 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !5702, file: !5702, line: 46, type: !5703, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2601, retainedNodes: !474)
!5702 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5703 = !DISubroutineType(types: !5704)
!5704 = !{!163}
!5705 = distinct !DILocation(line: 30, column: 7, scope: !5706)
!5706 = distinct !DILexicalBlock(scope: !5707, file: !5585, line: 30, column: 7)
!5707 = distinct !DILexicalBlock(scope: !5693, file: !5585, line: 29, column: 26)
!5708 = !{i64 3538360}
!5709 = !DILocation(line: 0, scope: !5697, inlinedAt: !5700)
!5710 = !DILocation(line: 48, column: 9, scope: !5701, inlinedAt: !5705)
!5711 = !DILocation(line: 30, column: 7, scope: !5707)
!5712 = !DILocation(line: 42, column: 14, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5706, file: !5585, line: 30, column: 25)
!5714 = !DILocation(line: 48, column: 15, scope: !5713)
!5715 = !DILocation(line: 49, column: 3, scope: !5713)
!5716 = !DILocation(line: 52, column: 2, scope: !5584)
!5717 = !DILocation(line: 53, column: 1, scope: !5584)
!5718 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !358, file: !358, line: 127, type: !2860, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !349, retainedNodes: !474)
!5719 = !DILocation(line: 134, column: 2, scope: !5718)
!5720 = !DILocation(line: 156, column: 1, scope: !5718)
!5721 = !DILocation(line: 0, scope: !357)
!5722 = !DILocation(line: 289, column: 36, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !357, file: !358, line: 285, column: 2)
!5724 = !DILocation(line: 289, column: 42, scope: !5723)
!5725 = !DILocation(line: 300, column: 36, scope: !357)
!5726 = !DILocation(line: 301, column: 35, scope: !357)
!5727 = !DILocation(line: 302, column: 37, scope: !357)
!5728 = !DILocation(line: 311, column: 2, scope: !357)
!5729 = !DILocation(line: 316, column: 1, scope: !357)
!5730 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !536, file: !536, line: 180, type: !2860, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !474)
!5731 = !DILocation(line: 188, column: 12, scope: !5730)
!5732 = !DILocation(line: 271, column: 3, scope: !5733, inlinedAt: !5734)
!5733 = distinct !DISubprogram(name: "__DSB", scope: !4910, file: !4910, line: 269, type: !2860, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !474)
!5734 = distinct !DILocation(line: 192, column: 2, scope: !5730)
!5735 = !{i64 3699038}
!5736 = !DILocation(line: 260, column: 3, scope: !5737, inlinedAt: !5738)
!5737 = distinct !DISubprogram(name: "__ISB", scope: !4910, file: !4910, line: 258, type: !2860, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !474)
!5738 = distinct !DILocation(line: 193, column: 2, scope: !5730)
!5739 = !{i64 3698755}
!5740 = !DILocation(line: 194, column: 1, scope: !5730)
!5741 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !536, file: !536, line: 199, type: !2860, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !474)
!5742 = !DILocation(line: 282, column: 3, scope: !5743, inlinedAt: !5744)
!5743 = distinct !DISubprogram(name: "__DMB", scope: !4910, file: !4910, line: 280, type: !2860, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !474)
!5744 = distinct !DILocation(line: 202, column: 2, scope: !5741)
!5745 = !{i64 3699314}
!5746 = !DILocation(line: 205, column: 12, scope: !5741)
!5747 = !DILocation(line: 206, column: 1, scope: !5741)
!5748 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !536, file: !536, line: 275, type: !5749, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !5762)
!5749 = !DISubroutineType(types: !5750)
!5750 = !{null, !5751, !1735, !5176, !5176}
!5751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5752, size: 32)
!5752 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5753)
!5753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !487, line: 52, size: 96, elements: !5754)
!5754 = !{!5755, !5756, !5757}
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5753, file: !487, line: 53, baseType: !22, size: 32)
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5753, file: !487, line: 54, baseType: !352, size: 32, offset: 32)
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5753, file: !487, line: 55, baseType: !5758, size: 32, offset: 64)
!5758 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !493, line: 151, baseType: !5759)
!5759 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !493, line: 149, size: 32, elements: !5760)
!5760 = !{!5761}
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !5759, file: !493, line: 150, baseType: !106, size: 32)
!5762 = !{!5763, !5764, !5765, !5766}
!5763 = !DILocalVariable(name: "static_regions", arg: 1, scope: !5748, file: !536, line: 276, type: !5751)
!5764 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5748, file: !536, line: 276, type: !1735)
!5765 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !5748, file: !536, line: 277, type: !5176)
!5766 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !5748, file: !536, line: 277, type: !5176)
!5767 = !DILocation(line: 0, scope: !5748)
!5768 = !DILocation(line: 279, column: 6, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5748, file: !536, line: 279, column: 6)
!5770 = !DILocation(line: 285, column: 1, scope: !5748)
!5771 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !5772, file: !5772, line: 220, type: !5773, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !5775)
!5772 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5773 = !DISubroutineType(types: !5774)
!5774 = !{!103, !5751, !1735, !5176, !5176}
!5775 = !{!5776, !5777, !5778, !5779, !5780}
!5776 = !DILocalVariable(name: "static_regions", arg: 1, scope: !5771, file: !5772, line: 221, type: !5751)
!5777 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5771, file: !5772, line: 221, type: !1735)
!5778 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !5771, file: !5772, line: 222, type: !5176)
!5779 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !5771, file: !5772, line: 223, type: !5176)
!5780 = !DILocalVariable(name: "mpu_reg_index", scope: !5771, file: !5772, line: 225, type: !103)
!5781 = !DILocation(line: 0, scope: !5771)
!5782 = !DILocation(line: 225, column: 22, scope: !5771)
!5783 = !DILocation(line: 233, column: 18, scope: !5771)
!5784 = !DILocation(line: 236, column: 23, scope: !5771)
!5785 = !DILocation(line: 236, column: 21, scope: !5771)
!5786 = !DILocation(line: 238, column: 2, scope: !5771)
!5787 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !536, file: !536, line: 105, type: !5788, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !5790)
!5788 = !DISubroutineType(types: !5789)
!5789 = !{!103, !5751, !160, !160, !163}
!5790 = !{!5791, !5792, !5793, !5794, !5795, !5796}
!5791 = !DILocalVariable(name: "regions", arg: 1, scope: !5787, file: !536, line: 106, type: !5751)
!5792 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5787, file: !536, line: 106, type: !160)
!5793 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !5787, file: !536, line: 106, type: !160)
!5794 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !5787, file: !536, line: 107, type: !163)
!5795 = !DILocalVariable(name: "i", scope: !5787, file: !536, line: 109, type: !103)
!5796 = !DILocalVariable(name: "reg_index", scope: !5787, file: !536, line: 110, type: !103)
!5797 = !DILocation(line: 0, scope: !5787)
!5798 = !DILocation(line: 110, column: 18, scope: !5787)
!5799 = !DILocation(line: 112, column: 16, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5801, file: !536, line: 112, column: 2)
!5801 = distinct !DILexicalBlock(scope: !5787, file: !536, line: 112, column: 2)
!5802 = !DILocation(line: 112, column: 2, scope: !5801)
!5803 = !DILocation(line: 113, column: 7, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5805, file: !536, line: 113, column: 7)
!5805 = distinct !DILexicalBlock(scope: !5800, file: !536, line: 112, column: 36)
!5806 = !DILocation(line: 113, column: 18, scope: !5804)
!5807 = !DILocation(line: 113, column: 23, scope: !5804)
!5808 = !DILocation(line: 113, column: 7, scope: !5805)
!5809 = !DILocation(line: 118, column: 23, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5805, file: !536, line: 118, column: 7)
!5811 = !DILocation(line: 119, column: 7, scope: !5810)
!5812 = !DILocation(line: 118, column: 7, scope: !5805)
!5813 = !DILocation(line: 124, column: 36, scope: !5805)
!5814 = !DILocation(line: 124, column: 15, scope: !5805)
!5815 = !DILocation(line: 126, column: 17, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5805, file: !536, line: 126, column: 7)
!5817 = !DILocation(line: 126, column: 7, scope: !5805)
!5818 = !DILocation(line: 131, column: 12, scope: !5805)
!5819 = !DILocation(line: 132, column: 2, scope: !5805)
!5820 = !DILocation(line: 112, column: 32, scope: !5800)
!5821 = distinct !{!5821, !5802, !5822}
!5822 = !DILocation(line: 132, column: 2, scope: !5801)
!5823 = !DILocation(line: 135, column: 1, scope: !5787)
!5824 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !5772, file: !5772, line: 63, type: !5825, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !5827)
!5825 = !DISubroutineType(types: !5826)
!5826 = !{!103, !5751}
!5827 = !{!5828, !5829}
!5828 = !DILocalVariable(name: "part", arg: 1, scope: !5824, file: !5772, line: 63, type: !5751)
!5829 = !DILocalVariable(name: "partition_is_valid", scope: !5824, file: !5772, line: 70, type: !103)
!5830 = !DILocation(line: 0, scope: !5824)
!5831 = !DILocation(line: 71, column: 11, scope: !5824)
!5832 = !DILocation(line: 71, column: 37, scope: !5824)
!5833 = !{i32 0, i32 33}
!5834 = !DILocation(line: 72, column: 3, scope: !5824)
!5835 = !DILocation(line: 71, column: 30, scope: !5824)
!5836 = !DILocation(line: 75, column: 11, scope: !5824)
!5837 = !DILocation(line: 75, column: 17, scope: !5824)
!5838 = !DILocation(line: 75, column: 38, scope: !5824)
!5839 = !DILocation(line: 77, column: 2, scope: !5824)
!5840 = distinct !DISubprogram(name: "mpu_configure_region", scope: !536, file: !536, line: 79, type: !5841, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !5843)
!5841 = !DISubroutineType(types: !5842)
!5842 = !{!103, !1735, !5751}
!5843 = !{!5844, !5845, !5846}
!5844 = !DILocalVariable(name: "index", arg: 1, scope: !5840, file: !536, line: 79, type: !1735)
!5845 = !DILocalVariable(name: "new_region", arg: 2, scope: !5840, file: !536, line: 80, type: !5751)
!5846 = !DILocalVariable(name: "region_conf", scope: !5840, file: !536, line: 82, type: !525)
!5847 = !DILocation(line: 0, scope: !5840)
!5848 = !DILocation(line: 82, column: 2, scope: !5840)
!5849 = !DILocation(line: 82, column: 24, scope: !5840)
!5850 = !DILocation(line: 87, column: 33, scope: !5840)
!5851 = !DILocation(line: 87, column: 14, scope: !5840)
!5852 = !DILocation(line: 87, column: 19, scope: !5840)
!5853 = !DILocation(line: 91, column: 55, scope: !5840)
!5854 = !DILocation(line: 92, column: 16, scope: !5840)
!5855 = !DILocation(line: 92, column: 53, scope: !5840)
!5856 = !DILocation(line: 91, column: 2, scope: !5840)
!5857 = !DILocation(line: 95, column: 9, scope: !5840)
!5858 = !DILocation(line: 97, column: 1, scope: !5840)
!5859 = !DILocation(line: 95, column: 2, scope: !5840)
!5860 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !5772, file: !5772, line: 113, type: !5861, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !5866)
!5861 = !DISubroutineType(types: !5862)
!5862 = !{null, !5863, !5864, !106, !106}
!5863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 32)
!5864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5865, size: 32)
!5865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5758)
!5866 = !{!5867, !5868, !5869, !5870}
!5867 = !DILocalVariable(name: "p_attr", arg: 1, scope: !5860, file: !5772, line: 114, type: !5863)
!5868 = !DILocalVariable(name: "attr", arg: 2, scope: !5860, file: !5772, line: 115, type: !5864)
!5869 = !DILocalVariable(name: "base", arg: 3, scope: !5860, file: !5772, line: 115, type: !106)
!5870 = !DILocalVariable(name: "size", arg: 4, scope: !5860, file: !5772, line: 115, type: !106)
!5871 = !DILocation(line: 0, scope: !5860)
!5872 = !DILocation(line: 127, column: 23, scope: !5860)
!5873 = !DILocation(line: 127, column: 35, scope: !5860)
!5874 = !DILocation(line: 127, column: 33, scope: !5860)
!5875 = !DILocation(line: 127, column: 10, scope: !5860)
!5876 = !DILocation(line: 127, column: 15, scope: !5860)
!5877 = !DILocation(line: 129, column: 1, scope: !5860)
!5878 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !536, file: !536, line: 57, type: !5879, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !5881)
!5879 = !DISubroutineType(types: !5880)
!5880 = !{!103, !1735, !523}
!5881 = !{!5882, !5883}
!5882 = !DILocalVariable(name: "index", arg: 1, scope: !5878, file: !536, line: 57, type: !1735)
!5883 = !DILocalVariable(name: "region_conf", arg: 2, scope: !5878, file: !536, line: 58, type: !523)
!5884 = !DILocation(line: 0, scope: !5878)
!5885 = !DILocation(line: 61, column: 6, scope: !5886)
!5886 = distinct !DILexicalBlock(scope: !5878, file: !536, line: 61, column: 6)
!5887 = !DILocation(line: 61, column: 12, scope: !5886)
!5888 = !DILocation(line: 61, column: 6, scope: !5878)
!5889 = !DILocation(line: 71, column: 2, scope: !5878)
!5890 = !DILocation(line: 73, column: 2, scope: !5878)
!5891 = !DILocation(line: 74, column: 1, scope: !5878)
!5892 = distinct !DISubprogram(name: "region_init", scope: !5772, file: !5772, line: 29, type: !5893, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !5895)
!5893 = !DISubroutineType(types: !5894)
!5894 = !{null, !5176, !523}
!5895 = !{!5896, !5897}
!5896 = !DILocalVariable(name: "index", arg: 1, scope: !5892, file: !5772, line: 29, type: !5176)
!5897 = !DILocalVariable(name: "region_conf", arg: 2, scope: !5892, file: !5772, line: 30, type: !523)
!5898 = !DILocation(line: 0, scope: !5892)
!5899 = !DILocation(line: 33, column: 2, scope: !5892)
!5900 = !DILocation(line: 47, column: 28, scope: !5892)
!5901 = !DILocation(line: 47, column: 33, scope: !5892)
!5902 = !DILocation(line: 48, column: 26, scope: !5892)
!5903 = !DILocation(line: 47, column: 12, scope: !5892)
!5904 = !DILocation(line: 49, column: 32, scope: !5892)
!5905 = !DILocation(line: 49, column: 37, scope: !5892)
!5906 = !DILocation(line: 49, column: 12, scope: !5892)
!5907 = !DILocation(line: 53, column: 1, scope: !5892)
!5908 = distinct !DISubprogram(name: "set_region_number", scope: !5909, file: !5909, line: 32, type: !4999, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !5910)
!5909 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5910 = !{!5911}
!5911 = !DILocalVariable(name: "index", arg: 1, scope: !5908, file: !5909, line: 32, type: !106)
!5912 = !DILocation(line: 0, scope: !5908)
!5913 = !DILocation(line: 34, column: 11, scope: !5908)
!5914 = !DILocation(line: 35, column: 1, scope: !5908)
!5915 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !5772, file: !5772, line: 88, type: !5916, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !5918)
!5916 = !DISubroutineType(types: !5917)
!5917 = !{!106, !106}
!5918 = !{!5919}
!5919 = !DILocalVariable(name: "size", arg: 1, scope: !5915, file: !5772, line: 88, type: !106)
!5920 = !DILocation(line: 0, scope: !5915)
!5921 = !DILocation(line: 91, column: 11, scope: !5922)
!5922 = distinct !DILexicalBlock(scope: !5915, file: !5772, line: 91, column: 6)
!5923 = !DILocation(line: 91, column: 6, scope: !5915)
!5924 = !DILocation(line: 100, column: 11, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5915, file: !5772, line: 100, column: 6)
!5926 = !DILocation(line: 100, column: 6, scope: !5915)
!5927 = !DILocation(line: 104, column: 35, scope: !5915)
!5928 = !DILocation(line: 104, column: 16, scope: !5915)
!5929 = !DILocation(line: 104, column: 50, scope: !5915)
!5930 = !DILocation(line: 104, column: 72, scope: !5915)
!5931 = !DILocation(line: 104, column: 2, scope: !5915)
!5932 = !DILocation(line: 106, column: 1, scope: !5915)
!5933 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !536, file: !536, line: 307, type: !5934, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !5936)
!5934 = !DISubroutineType(types: !5935)
!5935 = !{null, !5751, !160}
!5936 = !{!5937, !5938}
!5937 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !5933, file: !536, line: 308, type: !5751)
!5938 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5933, file: !536, line: 308, type: !160)
!5939 = !DILocation(line: 0, scope: !5933)
!5940 = !DILocation(line: 310, column: 6, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5933, file: !536, line: 310, column: 6)
!5942 = !DILocation(line: 316, column: 1, scope: !5933)
!5943 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !5772, file: !5772, line: 249, type: !5944, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !5946)
!5944 = !DISubroutineType(types: !5945)
!5945 = !{!103, !5751, !160}
!5946 = !{!5947, !5948, !5949, !5950}
!5947 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !5943, file: !5772, line: 250, type: !5751)
!5948 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5943, file: !5772, line: 250, type: !160)
!5949 = !DILocalVariable(name: "mpu_reg_index", scope: !5943, file: !5772, line: 252, type: !103)
!5950 = !DILocalVariable(name: "i", scope: !5951, file: !5772, line: 264, type: !103)
!5951 = distinct !DILexicalBlock(scope: !5952, file: !5772, line: 264, column: 3)
!5952 = distinct !DILexicalBlock(scope: !5953, file: !5772, line: 261, column: 32)
!5953 = distinct !DILexicalBlock(scope: !5943, file: !5772, line: 261, column: 6)
!5954 = !DILocation(line: 0, scope: !5943)
!5955 = !DILocation(line: 252, column: 22, scope: !5943)
!5956 = !DILocation(line: 258, column: 18, scope: !5943)
!5957 = !DILocation(line: 261, column: 20, scope: !5953)
!5958 = !DILocation(line: 261, column: 6, scope: !5943)
!5959 = !DILocation(line: 0, scope: !5951)
!5960 = !DILocation(line: 265, column: 4, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5962, file: !5772, line: 264, column: 59)
!5962 = distinct !DILexicalBlock(scope: !5951, file: !5772, line: 264, column: 3)
!5963 = !DILocation(line: 264, column: 55, scope: !5962)
!5964 = !DILocation(line: 264, column: 33, scope: !5962)
!5965 = !DILocation(line: 264, column: 3, scope: !5951)
!5966 = distinct !{!5966, !5965, !5967}
!5967 = !DILocation(line: 266, column: 3, scope: !5951)
!5968 = !DILocation(line: 269, column: 2, scope: !5943)
!5969 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !5970, file: !5970, line: 218, type: !4999, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !5971)
!5970 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5971 = !{!5972}
!5972 = !DILocalVariable(name: "rnr", arg: 1, scope: !5969, file: !5970, line: 218, type: !106)
!5973 = !DILocation(line: 0, scope: !5969)
!5974 = !DILocation(line: 220, column: 12, scope: !5969)
!5975 = !DILocation(line: 221, column: 13, scope: !5969)
!5976 = !DILocation(line: 222, column: 1, scope: !5969)
!5977 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !536, file: !536, line: 326, type: !5978, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !5980)
!5978 = !DISubroutineType(types: !5979)
!5979 = !{!103}
!5980 = !{!5981}
!5981 = !DILocalVariable(name: "r_index", scope: !5977, file: !536, line: 328, type: !106)
!5982 = !DILocation(line: 330, column: 17, scope: !5983)
!5983 = distinct !DILexicalBlock(scope: !5977, file: !536, line: 330, column: 6)
!5984 = !DILocation(line: 330, column: 29, scope: !5983)
!5985 = !DILocation(line: 330, column: 6, scope: !5977)
!5986 = !DILocation(line: 347, column: 2, scope: !5977)
!5987 = !DILocation(line: 0, scope: !5977)
!5988 = !DILocation(line: 364, column: 29, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5990, file: !536, line: 364, column: 2)
!5990 = distinct !DILexicalBlock(scope: !5977, file: !536, line: 364, column: 2)
!5991 = !DILocation(line: 364, column: 2, scope: !5990)
!5992 = !DILocation(line: 365, column: 25, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5989, file: !536, line: 364, column: 66)
!5994 = !DILocation(line: 365, column: 3, scope: !5993)
!5995 = !DILocation(line: 364, column: 62, scope: !5989)
!5996 = distinct !{!5996, !5991, !5997}
!5997 = !DILocation(line: 366, column: 2, scope: !5990)
!5998 = !DILocation(line: 369, column: 23, scope: !5977)
!5999 = !DILocation(line: 369, column: 21, scope: !5977)
!6000 = !DILocation(line: 372, column: 2, scope: !5977)
!6001 = !DILocation(line: 443, column: 2, scope: !5977)
!6002 = !DILocation(line: 444, column: 1, scope: !5977)
!6003 = distinct !DISubprogram(name: "strcpy", scope: !6004, file: !6004, line: 20, type: !6005, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6009)
!6004 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6005 = !DISubroutineType(types: !6006)
!6006 = !{!1081, !6007, !6008}
!6007 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1081)
!6008 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !150)
!6009 = !{!6010, !6011, !6012}
!6010 = !DILocalVariable(name: "d", arg: 1, scope: !6003, file: !6004, line: 20, type: !6007)
!6011 = !DILocalVariable(name: "s", arg: 2, scope: !6003, file: !6004, line: 20, type: !6008)
!6012 = !DILocalVariable(name: "dest", scope: !6003, file: !6004, line: 22, type: !1081)
!6013 = !DILocation(line: 0, scope: !6003)
!6014 = !DILocation(line: 24, column: 9, scope: !6003)
!6015 = !DILocation(line: 24, column: 12, scope: !6003)
!6016 = !DILocation(line: 24, column: 2, scope: !6003)
!6017 = !DILocation(line: 25, column: 6, scope: !6018)
!6018 = distinct !DILexicalBlock(scope: !6003, file: !6004, line: 24, column: 21)
!6019 = !DILocation(line: 26, column: 4, scope: !6018)
!6020 = !DILocation(line: 27, column: 4, scope: !6018)
!6021 = distinct !{!6021, !6016, !6022}
!6022 = !DILocation(line: 28, column: 2, scope: !6003)
!6023 = !DILocation(line: 30, column: 5, scope: !6003)
!6024 = !DILocation(line: 32, column: 2, scope: !6003)
!6025 = distinct !DISubprogram(name: "strncpy", scope: !6004, file: !6004, line: 42, type: !6026, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6028)
!6026 = !DISubroutineType(types: !6027)
!6027 = !{!1081, !6007, !6008, !352}
!6028 = !{!6029, !6030, !6031, !6032}
!6029 = !DILocalVariable(name: "d", arg: 1, scope: !6025, file: !6004, line: 42, type: !6007)
!6030 = !DILocalVariable(name: "s", arg: 2, scope: !6025, file: !6004, line: 42, type: !6008)
!6031 = !DILocalVariable(name: "n", arg: 3, scope: !6025, file: !6004, line: 42, type: !352)
!6032 = !DILocalVariable(name: "dest", scope: !6025, file: !6004, line: 44, type: !1081)
!6033 = !DILocation(line: 0, scope: !6025)
!6034 = !DILocation(line: 46, column: 12, scope: !6025)
!6035 = !DILocation(line: 46, column: 17, scope: !6025)
!6036 = !DILocation(line: 46, column: 20, scope: !6025)
!6037 = !DILocation(line: 46, column: 23, scope: !6025)
!6038 = !DILocation(line: 46, column: 2, scope: !6025)
!6039 = !DILocation(line: 47, column: 6, scope: !6040)
!6040 = distinct !DILexicalBlock(scope: !6025, file: !6004, line: 46, column: 32)
!6041 = !DILocation(line: 48, column: 4, scope: !6040)
!6042 = !DILocation(line: 49, column: 4, scope: !6040)
!6043 = !DILocation(line: 50, column: 4, scope: !6040)
!6044 = distinct !{!6044, !6038, !6045}
!6045 = !DILocation(line: 51, column: 2, scope: !6025)
!6046 = !DILocation(line: 54, column: 6, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6025, file: !6004, line: 53, column: 16)
!6048 = !DILocation(line: 55, column: 4, scope: !6047)
!6049 = !DILocation(line: 56, column: 4, scope: !6047)
!6050 = !DILocation(line: 53, column: 11, scope: !6025)
!6051 = !DILocation(line: 53, column: 2, scope: !6025)
!6052 = distinct !{!6052, !6051, !6053}
!6053 = !DILocation(line: 57, column: 2, scope: !6025)
!6054 = !DILocation(line: 59, column: 2, scope: !6025)
!6055 = distinct !DISubprogram(name: "strchr", scope: !6004, file: !6004, line: 69, type: !6056, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6058)
!6056 = !DISubroutineType(types: !6057)
!6057 = !{!1081, !150, !103}
!6058 = !{!6059, !6060, !6061}
!6059 = !DILocalVariable(name: "s", arg: 1, scope: !6055, file: !6004, line: 69, type: !150)
!6060 = !DILocalVariable(name: "c", arg: 2, scope: !6055, file: !6004, line: 69, type: !103)
!6061 = !DILocalVariable(name: "tmp", scope: !6055, file: !6004, line: 71, type: !152)
!6062 = !DILocation(line: 0, scope: !6055)
!6063 = !DILocation(line: 73, column: 2, scope: !6055)
!6064 = !DILocation(line: 73, column: 10, scope: !6055)
!6065 = !DILocation(line: 73, column: 13, scope: !6055)
!6066 = !DILocation(line: 73, column: 21, scope: !6055)
!6067 = !DILocation(line: 74, column: 4, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6055, file: !6004, line: 73, column: 38)
!6069 = distinct !{!6069, !6063, !6070}
!6070 = !DILocation(line: 75, column: 2, scope: !6055)
!6071 = !DILocation(line: 77, column: 9, scope: !6055)
!6072 = !DILocation(line: 77, column: 2, scope: !6055)
!6073 = distinct !DISubprogram(name: "strrchr", scope: !6004, file: !6004, line: 87, type: !6056, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6074)
!6074 = !{!6075, !6076, !6077}
!6075 = !DILocalVariable(name: "s", arg: 1, scope: !6073, file: !6004, line: 87, type: !150)
!6076 = !DILocalVariable(name: "c", arg: 2, scope: !6073, file: !6004, line: 87, type: !103)
!6077 = !DILocalVariable(name: "match", scope: !6073, file: !6004, line: 89, type: !1081)
!6078 = !DILocation(line: 0, scope: !6073)
!6079 = !DILocation(line: 91, column: 2, scope: !6073)
!6080 = !DILocation(line: 92, column: 7, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !6082, file: !6004, line: 92, column: 7)
!6082 = distinct !DILexicalBlock(scope: !6073, file: !6004, line: 91, column: 5)
!6083 = !DILocation(line: 92, column: 10, scope: !6081)
!6084 = !DILocation(line: 92, column: 7, scope: !6082)
!6085 = !DILocation(line: 95, column: 13, scope: !6073)
!6086 = !DILocation(line: 95, column: 2, scope: !6082)
!6087 = distinct !{!6087, !6079, !6088}
!6088 = !DILocation(line: 95, column: 15, scope: !6073)
!6089 = !DILocation(line: 97, column: 2, scope: !6073)
!6090 = distinct !DISubprogram(name: "strlen", scope: !6004, file: !6004, line: 107, type: !6091, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6093)
!6091 = !DISubroutineType(types: !6092)
!6092 = !{!352, !150}
!6093 = !{!6094, !6095}
!6094 = !DILocalVariable(name: "s", arg: 1, scope: !6090, file: !6004, line: 107, type: !150)
!6095 = !DILocalVariable(name: "n", scope: !6090, file: !6004, line: 109, type: !352)
!6096 = !DILocation(line: 0, scope: !6090)
!6097 = !DILocation(line: 111, column: 9, scope: !6090)
!6098 = !DILocation(line: 111, column: 12, scope: !6090)
!6099 = !DILocation(line: 111, column: 2, scope: !6090)
!6100 = !DILocation(line: 112, column: 4, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6090, file: !6004, line: 111, column: 21)
!6102 = !DILocation(line: 113, column: 4, scope: !6101)
!6103 = distinct !{!6103, !6099, !6104}
!6104 = !DILocation(line: 114, column: 2, scope: !6090)
!6105 = !DILocation(line: 116, column: 2, scope: !6090)
!6106 = distinct !DISubprogram(name: "strnlen", scope: !6004, file: !6004, line: 126, type: !6107, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6109)
!6107 = !DISubroutineType(types: !6108)
!6108 = !{!352, !150, !352}
!6109 = !{!6110, !6111, !6112}
!6110 = !DILocalVariable(name: "s", arg: 1, scope: !6106, file: !6004, line: 126, type: !150)
!6111 = !DILocalVariable(name: "maxlen", arg: 2, scope: !6106, file: !6004, line: 126, type: !352)
!6112 = !DILocalVariable(name: "n", scope: !6106, file: !6004, line: 128, type: !352)
!6113 = !DILocation(line: 0, scope: !6106)
!6114 = !DILocation(line: 130, column: 9, scope: !6106)
!6115 = !DILocation(line: 130, column: 12, scope: !6106)
!6116 = !DILocation(line: 130, column: 20, scope: !6106)
!6117 = !DILocation(line: 130, column: 2, scope: !6106)
!6118 = !DILocation(line: 131, column: 4, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6106, file: !6004, line: 130, column: 35)
!6120 = !DILocation(line: 132, column: 4, scope: !6119)
!6121 = distinct !{!6121, !6117, !6122}
!6122 = !DILocation(line: 133, column: 2, scope: !6106)
!6123 = !DILocation(line: 135, column: 2, scope: !6106)
!6124 = distinct !DISubprogram(name: "strcmp", scope: !6004, file: !6004, line: 145, type: !6125, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6127)
!6125 = !DISubroutineType(types: !6126)
!6126 = !{!103, !150, !150}
!6127 = !{!6128, !6129}
!6128 = !DILocalVariable(name: "s1", arg: 1, scope: !6124, file: !6004, line: 145, type: !150)
!6129 = !DILocalVariable(name: "s2", arg: 2, scope: !6124, file: !6004, line: 145, type: !150)
!6130 = !DILocation(line: 0, scope: !6124)
!6131 = !DILocation(line: 147, column: 10, scope: !6124)
!6132 = !DILocation(line: 147, column: 17, scope: !6124)
!6133 = !DILocation(line: 147, column: 14, scope: !6124)
!6134 = !DILocation(line: 147, column: 22, scope: !6124)
!6135 = !DILocation(line: 148, column: 5, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !6124, file: !6004, line: 147, column: 40)
!6137 = !DILocation(line: 149, column: 5, scope: !6136)
!6138 = distinct !{!6138, !6139, !6140}
!6139 = !DILocation(line: 147, column: 2, scope: !6124)
!6140 = !DILocation(line: 150, column: 2, scope: !6124)
!6141 = !DILocation(line: 152, column: 9, scope: !6124)
!6142 = !DILocation(line: 152, column: 15, scope: !6124)
!6143 = !DILocation(line: 152, column: 13, scope: !6124)
!6144 = !DILocation(line: 152, column: 2, scope: !6124)
!6145 = distinct !DISubprogram(name: "strncmp", scope: !6004, file: !6004, line: 162, type: !6146, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6148)
!6146 = !DISubroutineType(types: !6147)
!6147 = !{!103, !150, !150, !352}
!6148 = !{!6149, !6150, !6151}
!6149 = !DILocalVariable(name: "s1", arg: 1, scope: !6145, file: !6004, line: 162, type: !150)
!6150 = !DILocalVariable(name: "s2", arg: 2, scope: !6145, file: !6004, line: 162, type: !150)
!6151 = !DILocalVariable(name: "n", arg: 3, scope: !6145, file: !6004, line: 162, type: !352)
!6152 = !DILocation(line: 0, scope: !6145)
!6153 = !DILocation(line: 164, column: 17, scope: !6145)
!6154 = !DILocation(line: 164, column: 21, scope: !6145)
!6155 = !DILocation(line: 164, column: 28, scope: !6145)
!6156 = !DILocation(line: 164, column: 25, scope: !6145)
!6157 = !DILocation(line: 164, column: 33, scope: !6145)
!6158 = !DILocation(line: 165, column: 5, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6145, file: !6004, line: 164, column: 51)
!6160 = !DILocation(line: 166, column: 5, scope: !6159)
!6161 = !DILocation(line: 167, column: 4, scope: !6159)
!6162 = distinct !{!6162, !6163, !6164}
!6163 = !DILocation(line: 164, column: 2, scope: !6145)
!6164 = !DILocation(line: 168, column: 2, scope: !6145)
!6165 = !DILocation(line: 170, column: 25, scope: !6145)
!6166 = !DILocation(line: 170, column: 31, scope: !6145)
!6167 = !DILocation(line: 170, column: 29, scope: !6145)
!6168 = !DILocation(line: 170, column: 9, scope: !6145)
!6169 = !DILocation(line: 170, column: 2, scope: !6145)
!6170 = distinct !DISubprogram(name: "strtok_r", scope: !6004, file: !6004, line: 180, type: !6171, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6174)
!6171 = !DISubroutineType(types: !6172)
!6172 = !{!1081, !1081, !150, !6173}
!6173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 32)
!6174 = !{!6175, !6176, !6177, !6178, !6179}
!6175 = !DILocalVariable(name: "str", arg: 1, scope: !6170, file: !6004, line: 180, type: !1081)
!6176 = !DILocalVariable(name: "sep", arg: 2, scope: !6170, file: !6004, line: 180, type: !150)
!6177 = !DILocalVariable(name: "state", arg: 3, scope: !6170, file: !6004, line: 180, type: !6173)
!6178 = !DILocalVariable(name: "start", scope: !6170, file: !6004, line: 182, type: !1081)
!6179 = !DILocalVariable(name: "end", scope: !6170, file: !6004, line: 182, type: !1081)
!6180 = !DILocation(line: 0, scope: !6170)
!6181 = !DILocation(line: 184, column: 10, scope: !6170)
!6182 = !DILocation(line: 184, column: 22, scope: !6170)
!6183 = !DILocation(line: 187, column: 9, scope: !6170)
!6184 = !DILocation(line: 187, column: 16, scope: !6170)
!6185 = !DILocation(line: 187, column: 19, scope: !6170)
!6186 = !DILocation(line: 187, column: 2, scope: !6170)
!6187 = !DILocation(line: 188, column: 8, scope: !6188)
!6188 = distinct !DILexicalBlock(scope: !6170, file: !6004, line: 187, column: 40)
!6189 = distinct !{!6189, !6186, !6190}
!6190 = !DILocation(line: 189, column: 2, scope: !6170)
!6191 = !DILocation(line: 198, column: 9, scope: !6170)
!6192 = !DILocation(line: 198, column: 18, scope: !6170)
!6193 = !DILocation(line: 198, column: 17, scope: !6170)
!6194 = !DILocation(line: 198, column: 2, scope: !6170)
!6195 = !DILocation(line: 199, column: 6, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6170, file: !6004, line: 198, column: 37)
!6197 = !DILocation(line: 198, column: 14, scope: !6170)
!6198 = distinct !{!6198, !6194, !6199}
!6199 = !DILocation(line: 200, column: 2, scope: !6170)
!6200 = !DILocation(line: 203, column: 8, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6202, file: !6004, line: 202, column: 20)
!6202 = distinct !DILexicalBlock(scope: !6170, file: !6004, line: 202, column: 6)
!6203 = !DILocation(line: 204, column: 16, scope: !6201)
!6204 = !DILocation(line: 205, column: 2, scope: !6201)
!6205 = !DILocation(line: 210, column: 1, scope: !6170)
!6206 = distinct !DISubprogram(name: "strcat", scope: !6004, file: !6004, line: 212, type: !6005, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6207)
!6207 = !{!6208, !6209}
!6208 = !DILocalVariable(name: "dest", arg: 1, scope: !6206, file: !6004, line: 212, type: !6007)
!6209 = !DILocalVariable(name: "src", arg: 2, scope: !6206, file: !6004, line: 212, type: !6008)
!6210 = !DILocation(line: 0, scope: !6206)
!6211 = !DILocation(line: 214, column: 16, scope: !6206)
!6212 = !DILocation(line: 214, column: 14, scope: !6206)
!6213 = !DILocation(line: 214, column: 2, scope: !6206)
!6214 = !DILocation(line: 215, column: 2, scope: !6206)
!6215 = distinct !DISubprogram(name: "strncat", scope: !6004, file: !6004, line: 218, type: !6026, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6216)
!6216 = !{!6217, !6218, !6219, !6220, !6221}
!6217 = !DILocalVariable(name: "dest", arg: 1, scope: !6215, file: !6004, line: 218, type: !6007)
!6218 = !DILocalVariable(name: "src", arg: 2, scope: !6215, file: !6004, line: 218, type: !6008)
!6219 = !DILocalVariable(name: "n", arg: 3, scope: !6215, file: !6004, line: 219, type: !352)
!6220 = !DILocalVariable(name: "orig_dest", scope: !6215, file: !6004, line: 221, type: !1081)
!6221 = !DILocalVariable(name: "len", scope: !6215, file: !6004, line: 222, type: !352)
!6222 = !DILocation(line: 0, scope: !6215)
!6223 = !DILocation(line: 222, column: 15, scope: !6215)
!6224 = !DILocation(line: 224, column: 7, scope: !6215)
!6225 = !DILocation(line: 225, column: 14, scope: !6215)
!6226 = !DILocation(line: 225, column: 19, scope: !6215)
!6227 = !DILocation(line: 225, column: 11, scope: !6215)
!6228 = !DILocation(line: 225, column: 23, scope: !6215)
!6229 = !DILocation(line: 225, column: 28, scope: !6215)
!6230 = !DILocation(line: 225, column: 2, scope: !6215)
!6231 = !DILocation(line: 226, column: 17, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6215, file: !6004, line: 225, column: 38)
!6233 = !DILocation(line: 226, column: 8, scope: !6232)
!6234 = !DILocation(line: 226, column: 11, scope: !6232)
!6235 = distinct !{!6235, !6230, !6236}
!6236 = !DILocation(line: 227, column: 2, scope: !6215)
!6237 = !DILocation(line: 228, column: 8, scope: !6215)
!6238 = !DILocation(line: 230, column: 2, scope: !6215)
!6239 = distinct !DISubprogram(name: "memcmp", scope: !6004, file: !6004, line: 239, type: !6240, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6242)
!6240 = !DISubroutineType(types: !6241)
!6241 = !{!103, !13, !13, !352}
!6242 = !{!6243, !6244, !6245, !6246, !6247}
!6243 = !DILocalVariable(name: "m1", arg: 1, scope: !6239, file: !6004, line: 239, type: !13)
!6244 = !DILocalVariable(name: "m2", arg: 2, scope: !6239, file: !6004, line: 239, type: !13)
!6245 = !DILocalVariable(name: "n", arg: 3, scope: !6239, file: !6004, line: 239, type: !352)
!6246 = !DILocalVariable(name: "c1", scope: !6239, file: !6004, line: 241, type: !150)
!6247 = !DILocalVariable(name: "c2", scope: !6239, file: !6004, line: 242, type: !150)
!6248 = !DILocation(line: 0, scope: !6239)
!6249 = !DILocation(line: 244, column: 7, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !6239, file: !6004, line: 244, column: 6)
!6251 = !DILocation(line: 244, column: 6, scope: !6239)
!6252 = !DILocation(line: 248, column: 10, scope: !6239)
!6253 = !DILocation(line: 248, column: 14, scope: !6239)
!6254 = !DILocation(line: 248, column: 19, scope: !6239)
!6255 = !DILocation(line: 248, column: 2, scope: !6239)
!6256 = !DILocation(line: 248, column: 23, scope: !6239)
!6257 = !DILocation(line: 248, column: 30, scope: !6239)
!6258 = !DILocation(line: 248, column: 27, scope: !6239)
!6259 = !DILocation(line: 249, column: 5, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6239, file: !6004, line: 248, column: 36)
!6261 = !DILocation(line: 250, column: 5, scope: !6260)
!6262 = distinct !{!6262, !6255, !6263}
!6263 = !DILocation(line: 251, column: 2, scope: !6239)
!6264 = !DILocation(line: 253, column: 9, scope: !6239)
!6265 = !DILocation(line: 253, column: 15, scope: !6239)
!6266 = !DILocation(line: 253, column: 13, scope: !6239)
!6267 = !DILocation(line: 253, column: 2, scope: !6239)
!6268 = !DILocation(line: 254, column: 1, scope: !6239)
!6269 = distinct !DISubprogram(name: "memmove", scope: !6004, file: !6004, line: 263, type: !6270, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6272)
!6270 = !DISubroutineType(types: !6271)
!6271 = !{!102, !102, !13, !352}
!6272 = !{!6273, !6274, !6275, !6276, !6277}
!6273 = !DILocalVariable(name: "d", arg: 1, scope: !6269, file: !6004, line: 263, type: !102)
!6274 = !DILocalVariable(name: "s", arg: 2, scope: !6269, file: !6004, line: 263, type: !13)
!6275 = !DILocalVariable(name: "n", arg: 3, scope: !6269, file: !6004, line: 263, type: !352)
!6276 = !DILocalVariable(name: "dest", scope: !6269, file: !6004, line: 265, type: !1081)
!6277 = !DILocalVariable(name: "src", scope: !6269, file: !6004, line: 266, type: !150)
!6278 = !DILocation(line: 0, scope: !6269)
!6279 = !DILocation(line: 268, column: 21, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6269, file: !6004, line: 268, column: 6)
!6281 = !DILocation(line: 268, column: 28, scope: !6280)
!6282 = !DILocation(line: 268, column: 6, scope: !6269)
!6283 = !DILocation(line: 280, column: 12, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6280, file: !6004, line: 278, column: 9)
!6285 = !DILocation(line: 280, column: 3, scope: !6284)
!6286 = !DILocation(line: 275, column: 5, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6288, file: !6004, line: 274, column: 17)
!6288 = distinct !DILexicalBlock(scope: !6280, file: !6004, line: 268, column: 33)
!6289 = !DILocation(line: 276, column: 14, scope: !6287)
!6290 = !DILocation(line: 276, column: 4, scope: !6287)
!6291 = !DILocation(line: 276, column: 12, scope: !6287)
!6292 = !DILocation(line: 274, column: 12, scope: !6288)
!6293 = !DILocation(line: 274, column: 3, scope: !6288)
!6294 = distinct !{!6294, !6293, !6295}
!6295 = !DILocation(line: 277, column: 3, scope: !6288)
!6296 = !DILocation(line: 281, column: 12, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6284, file: !6004, line: 280, column: 17)
!6298 = !DILocation(line: 281, column: 10, scope: !6297)
!6299 = !DILocation(line: 282, column: 8, scope: !6297)
!6300 = !DILocation(line: 283, column: 7, scope: !6297)
!6301 = !DILocation(line: 284, column: 5, scope: !6297)
!6302 = distinct !{!6302, !6285, !6303}
!6303 = !DILocation(line: 285, column: 3, scope: !6284)
!6304 = !DILocation(line: 288, column: 2, scope: !6269)
!6305 = distinct !DISubprogram(name: "memcpy", scope: !6004, file: !6004, line: 298, type: !6306, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6310)
!6306 = !DISubroutineType(types: !6307)
!6307 = !{!102, !6308, !6309, !352}
!6308 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!6309 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!6310 = !{!6311, !6312, !6313, !6314, !6315}
!6311 = !DILocalVariable(name: "d", arg: 1, scope: !6305, file: !6004, line: 298, type: !6308)
!6312 = !DILocalVariable(name: "s", arg: 2, scope: !6305, file: !6004, line: 298, type: !6309)
!6313 = !DILocalVariable(name: "n", arg: 3, scope: !6305, file: !6004, line: 298, type: !352)
!6314 = !DILocalVariable(name: "d_byte", scope: !6305, file: !6004, line: 302, type: !916)
!6315 = !DILocalVariable(name: "s_byte", scope: !6305, file: !6004, line: 303, type: !2632)
!6316 = !DILocation(line: 0, scope: !6305)
!6317 = !DILocation(line: 337, column: 11, scope: !6305)
!6318 = !DILocation(line: 337, column: 2, scope: !6305)
!6319 = !DILocation(line: 338, column: 25, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6305, file: !6004, line: 337, column: 16)
!6321 = !DILocation(line: 338, column: 17, scope: !6320)
!6322 = !DILocation(line: 338, column: 11, scope: !6320)
!6323 = !DILocation(line: 338, column: 15, scope: !6320)
!6324 = !DILocation(line: 339, column: 4, scope: !6320)
!6325 = distinct !{!6325, !6318, !6326}
!6326 = !DILocation(line: 340, column: 2, scope: !6305)
!6327 = !DILocation(line: 342, column: 2, scope: !6305)
!6328 = distinct !DISubprogram(name: "memset", scope: !6004, file: !6004, line: 352, type: !6329, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6331)
!6329 = !DISubroutineType(types: !6330)
!6330 = !{!102, !102, !103, !352}
!6331 = !{!6332, !6333, !6334, !6335, !6336}
!6332 = !DILocalVariable(name: "buf", arg: 1, scope: !6328, file: !6004, line: 352, type: !102)
!6333 = !DILocalVariable(name: "c", arg: 2, scope: !6328, file: !6004, line: 352, type: !103)
!6334 = !DILocalVariable(name: "n", arg: 3, scope: !6328, file: !6004, line: 352, type: !352)
!6335 = !DILocalVariable(name: "d_byte", scope: !6328, file: !6004, line: 356, type: !916)
!6336 = !DILocalVariable(name: "c_byte", scope: !6328, file: !6004, line: 357, type: !161)
!6337 = !DILocation(line: 0, scope: !6328)
!6338 = !DILocation(line: 357, column: 25, scope: !6328)
!6339 = !DILocation(line: 389, column: 11, scope: !6328)
!6340 = !DILocation(line: 389, column: 2, scope: !6328)
!6341 = !DILocation(line: 390, column: 11, scope: !6342)
!6342 = distinct !DILexicalBlock(scope: !6328, file: !6004, line: 389, column: 16)
!6343 = !DILocation(line: 390, column: 15, scope: !6342)
!6344 = !DILocation(line: 391, column: 4, scope: !6342)
!6345 = distinct !{!6345, !6340, !6346}
!6346 = !DILocation(line: 392, column: 2, scope: !6328)
!6347 = !DILocation(line: 394, column: 2, scope: !6328)
!6348 = distinct !DISubprogram(name: "memchr", scope: !6004, file: !6004, line: 404, type: !6349, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6351)
!6349 = !DISubroutineType(types: !6350)
!6350 = !{!102, !13, !103, !352}
!6351 = !{!6352, !6353, !6354, !6355}
!6352 = !DILocalVariable(name: "s", arg: 1, scope: !6348, file: !6004, line: 404, type: !13)
!6353 = !DILocalVariable(name: "c", arg: 2, scope: !6348, file: !6004, line: 404, type: !103)
!6354 = !DILocalVariable(name: "n", arg: 3, scope: !6348, file: !6004, line: 404, type: !352)
!6355 = !DILocalVariable(name: "p", scope: !6356, file: !6004, line: 407, type: !2632)
!6356 = distinct !DILexicalBlock(scope: !6357, file: !6004, line: 406, column: 14)
!6357 = distinct !DILexicalBlock(scope: !6348, file: !6004, line: 406, column: 6)
!6358 = !DILocation(line: 0, scope: !6348)
!6359 = !DILocation(line: 406, column: 8, scope: !6357)
!6360 = !DILocation(line: 406, column: 6, scope: !6348)
!6361 = !DILocation(line: 409, column: 3, scope: !6356)
!6362 = !DILocation(line: 0, scope: !6356)
!6363 = !DILocation(line: 410, column: 8, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6365, file: !6004, line: 410, column: 8)
!6365 = distinct !DILexicalBlock(scope: !6356, file: !6004, line: 409, column: 6)
!6366 = !DILocation(line: 410, column: 13, scope: !6364)
!6367 = !DILocation(line: 410, column: 8, scope: !6365)
!6368 = distinct !{!6368, !6361, !6369}
!6369 = !DILocation(line: 414, column: 20, scope: !6356)
!6370 = !DILocation(line: 417, column: 2, scope: !6348)
!6371 = !DILocation(line: 418, column: 1, scope: !6348)
!6372 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !546, file: !546, line: 23, type: !2984, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !539, retainedNodes: !6373)
!6373 = !{!6374}
!6374 = !DILocalVariable(name: "hook", arg: 1, scope: !6372, file: !546, line: 23, type: !113)
!6375 = !DILocation(line: 0, scope: !6372)
!6376 = !DILocation(line: 25, column: 15, scope: !6372)
!6377 = !DILocation(line: 26, column: 1, scope: !6372)
!6378 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !546, file: !546, line: 14, type: !114, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !539, retainedNodes: !6379)
!6379 = !{!6380}
!6380 = !DILocalVariable(name: "c", arg: 1, scope: !6378, file: !546, line: 14, type: !103)
!6381 = !DILocation(line: 0, scope: !6378)
!6382 = !DILocation(line: 18, column: 2, scope: !6378)
!6383 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !546, file: !546, line: 28, type: !6384, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !539, retainedNodes: !6386)
!6384 = !DISubroutineType(types: !6385)
!6385 = !{!103, !103, !542}
!6386 = !{!6387, !6388}
!6387 = !DILocalVariable(name: "c", arg: 1, scope: !6383, file: !546, line: 28, type: !103)
!6388 = !DILocalVariable(name: "stream", arg: 2, scope: !6383, file: !546, line: 28, type: !542)
!6389 = !DILocation(line: 0, scope: !6383)
!6390 = !DILocation(line: 30, column: 27, scope: !6383)
!6391 = !DILocation(line: 30, column: 50, scope: !6383)
!6392 = !DILocation(line: 30, column: 9, scope: !6383)
!6393 = !DILocation(line: 30, column: 2, scope: !6383)
!6394 = distinct !DISubprogram(name: "fputc", scope: !546, file: !546, line: 41, type: !6384, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !539, retainedNodes: !6395)
!6395 = !{!6396, !6397}
!6396 = !DILocalVariable(name: "c", arg: 1, scope: !6394, file: !546, line: 41, type: !103)
!6397 = !DILocalVariable(name: "stream", arg: 2, scope: !6394, file: !546, line: 41, type: !542)
!6398 = !DILocation(line: 0, scope: !6394)
!6399 = !DILocation(line: 43, column: 9, scope: !6394)
!6400 = !DILocation(line: 43, column: 2, scope: !6394)
!6401 = distinct !DISubprogram(name: "zephyr_fputc", scope: !6402, file: !6402, line: 72, type: !6384, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !539, retainedNodes: !6403)
!6402 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!6403 = !{!6404, !6405}
!6404 = !DILocalVariable(name: "c", arg: 1, scope: !6401, file: !6402, line: 72, type: !103)
!6405 = !DILocalVariable(name: "stream", arg: 2, scope: !6401, file: !6402, line: 72, type: !542)
!6406 = !DILocation(line: 0, scope: !6401)
!6407 = !DILocation(line: 81, column: 2, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6401, file: !6402, line: 81, column: 2)
!6409 = !{i64 2154903413}
!6410 = !DILocation(line: 82, column: 9, scope: !6401)
!6411 = !DILocation(line: 82, column: 2, scope: !6401)
!6412 = distinct !DISubprogram(name: "fputs", scope: !546, file: !546, line: 46, type: !6413, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !539, retainedNodes: !6416)
!6413 = !DISubroutineType(types: !6414)
!6414 = !{!103, !6008, !6415}
!6415 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !542)
!6416 = !{!6417, !6418, !6419, !6420}
!6417 = !DILocalVariable(name: "s", arg: 1, scope: !6412, file: !546, line: 46, type: !6008)
!6418 = !DILocalVariable(name: "stream", arg: 2, scope: !6412, file: !546, line: 46, type: !6415)
!6419 = !DILocalVariable(name: "len", scope: !6412, file: !546, line: 48, type: !103)
!6420 = !DILocalVariable(name: "ret", scope: !6412, file: !546, line: 49, type: !103)
!6421 = !DILocation(line: 0, scope: !6412)
!6422 = !DILocation(line: 48, column: 12, scope: !6412)
!6423 = !DILocation(line: 51, column: 8, scope: !6412)
!6424 = !DILocation(line: 53, column: 13, scope: !6412)
!6425 = !DILocation(line: 53, column: 9, scope: !6412)
!6426 = !DILocation(line: 53, column: 2, scope: !6412)
!6427 = distinct !DISubprogram(name: "fwrite", scope: !546, file: !546, line: 99, type: !6428, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !539, retainedNodes: !6430)
!6428 = !DISubroutineType(types: !6429)
!6429 = !{!352, !6309, !352, !352, !6415}
!6430 = !{!6431, !6432, !6433, !6434}
!6431 = !DILocalVariable(name: "ptr", arg: 1, scope: !6427, file: !546, line: 99, type: !6309)
!6432 = !DILocalVariable(name: "size", arg: 2, scope: !6427, file: !546, line: 99, type: !352)
!6433 = !DILocalVariable(name: "nitems", arg: 3, scope: !6427, file: !546, line: 99, type: !352)
!6434 = !DILocalVariable(name: "stream", arg: 4, scope: !6427, file: !546, line: 100, type: !6415)
!6435 = !DILocation(line: 0, scope: !6427)
!6436 = !DILocation(line: 102, column: 9, scope: !6427)
!6437 = !DILocation(line: 102, column: 2, scope: !6427)
!6438 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !6402, file: !6402, line: 96, type: !6428, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !539, retainedNodes: !6439)
!6439 = !{!6440, !6441, !6442, !6443}
!6440 = !DILocalVariable(name: "ptr", arg: 1, scope: !6438, file: !6402, line: 96, type: !6309)
!6441 = !DILocalVariable(name: "size", arg: 2, scope: !6438, file: !6402, line: 96, type: !352)
!6442 = !DILocalVariable(name: "nitems", arg: 3, scope: !6438, file: !6402, line: 96, type: !352)
!6443 = !DILocalVariable(name: "stream", arg: 4, scope: !6438, file: !6402, line: 96, type: !6415)
!6444 = !DILocation(line: 0, scope: !6438)
!6445 = !DILocation(line: 107, column: 2, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6438, file: !6402, line: 107, column: 2)
!6447 = !{i64 2154903517}
!6448 = !DILocation(line: 108, column: 9, scope: !6438)
!6449 = !DILocation(line: 108, column: 2, scope: !6438)
!6450 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !546, file: !546, line: 56, type: !6428, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !539, retainedNodes: !6451)
!6451 = !{!6452, !6453, !6454, !6455, !6456, !6457, !6458, !6459}
!6452 = !DILocalVariable(name: "ptr", arg: 1, scope: !6450, file: !546, line: 56, type: !6309)
!6453 = !DILocalVariable(name: "size", arg: 2, scope: !6450, file: !546, line: 56, type: !352)
!6454 = !DILocalVariable(name: "nitems", arg: 3, scope: !6450, file: !546, line: 57, type: !352)
!6455 = !DILocalVariable(name: "stream", arg: 4, scope: !6450, file: !546, line: 57, type: !6415)
!6456 = !DILocalVariable(name: "i", scope: !6450, file: !546, line: 59, type: !352)
!6457 = !DILocalVariable(name: "j", scope: !6450, file: !546, line: 60, type: !352)
!6458 = !DILocalVariable(name: "p", scope: !6450, file: !546, line: 61, type: !2632)
!6459 = !DILabel(scope: !6450, name: "done", file: !546, line: 82)
!6460 = !DILocation(line: 0, scope: !6450)
!6461 = !DILocation(line: 63, column: 14, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6450, file: !546, line: 63, column: 6)
!6463 = !DILocation(line: 63, column: 24, scope: !6462)
!6464 = !DILocation(line: 72, column: 3, scope: !6465)
!6465 = distinct !DILexicalBlock(scope: !6450, file: !546, line: 70, column: 5)
!6466 = !DILocation(line: 0, scope: !6465)
!6467 = !DILocation(line: 73, column: 8, scope: !6468)
!6468 = distinct !DILexicalBlock(scope: !6469, file: !546, line: 73, column: 8)
!6469 = distinct !DILexicalBlock(scope: !6465, file: !546, line: 72, column: 6)
!6470 = !DILocation(line: 73, column: 29, scope: !6468)
!6471 = !DILocation(line: 73, column: 27, scope: !6468)
!6472 = !DILocation(line: 73, column: 21, scope: !6468)
!6473 = !DILocation(line: 73, column: 33, scope: !6468)
!6474 = !DILocation(line: 73, column: 8, scope: !6469)
!6475 = !DILocation(line: 76, column: 5, scope: !6469)
!6476 = !DILocation(line: 77, column: 14, scope: !6465)
!6477 = !DILocation(line: 77, column: 3, scope: !6469)
!6478 = distinct !{!6478, !6464, !6479}
!6479 = !DILocation(line: 77, column: 17, scope: !6465)
!6480 = !DILocation(line: 79, column: 4, scope: !6465)
!6481 = !DILocation(line: 80, column: 13, scope: !6450)
!6482 = !DILocation(line: 80, column: 2, scope: !6465)
!6483 = distinct !{!6483, !6484, !6485}
!6484 = !DILocation(line: 70, column: 2, scope: !6450)
!6485 = !DILocation(line: 80, column: 16, scope: !6450)
!6486 = !DILocation(line: 82, column: 1, scope: !6450)
!6487 = !DILocation(line: 83, column: 17, scope: !6450)
!6488 = !DILocation(line: 83, column: 2, scope: !6450)
!6489 = !DILocation(line: 84, column: 1, scope: !6450)
!6490 = distinct !DISubprogram(name: "puts", scope: !546, file: !546, line: 106, type: !6491, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !539, retainedNodes: !6493)
!6491 = !DISubroutineType(types: !6492)
!6492 = !{!103, !150}
!6493 = !{!6494}
!6494 = !DILocalVariable(name: "s", arg: 1, scope: !6490, file: !546, line: 106, type: !150)
!6495 = !DILocation(line: 0, scope: !6490)
!6496 = !DILocation(line: 108, column: 6, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6490, file: !546, line: 108, column: 6)
!6498 = !DILocation(line: 108, column: 23, scope: !6497)
!6499 = !DILocation(line: 108, column: 6, scope: !6490)
!6500 = !DILocation(line: 112, column: 9, scope: !6490)
!6501 = !DILocation(line: 112, column: 29, scope: !6490)
!6502 = !DILocation(line: 112, column: 2, scope: !6490)
!6503 = !DILocation(line: 113, column: 1, scope: !6490)
!6504 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !679, file: !679, line: 368, type: !729, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !6505)
!6505 = !{!6506}
!6506 = !DILocalVariable(name: "dev", arg: 1, scope: !6504, file: !679, line: 368, type: !705)
!6507 = !DILocation(line: 0, scope: !6504)
!6508 = !DILocation(line: 370, column: 2, scope: !6504)
!6509 = !DILocation(line: 371, column: 1, scope: !6504)
!6510 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !679, file: !679, line: 243, type: !6511, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !6513)
!6511 = !DISubroutineType(types: !6512)
!6512 = !{null, !103, !103, !705}
!6513 = !{!6514, !6515, !6516, !6517, !6519}
!6514 = !DILocalVariable(name: "min", arg: 1, scope: !6510, file: !679, line: 243, type: !103)
!6515 = !DILocalVariable(name: "max", arg: 2, scope: !6510, file: !679, line: 243, type: !103)
!6516 = !DILocalVariable(name: "dev", arg: 3, scope: !6510, file: !679, line: 243, type: !705)
!6517 = !DILocalVariable(name: "data", scope: !6510, file: !679, line: 245, type: !6518)
!6518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 32)
!6519 = !DILocalVariable(name: "line", scope: !6510, file: !679, line: 246, type: !103)
!6520 = !DILocation(line: 0, scope: !6510)
!6521 = !DILocation(line: 245, column: 38, scope: !6510)
!6522 = !DILocation(line: 249, column: 24, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6524, file: !679, line: 249, column: 2)
!6524 = distinct !DILexicalBlock(scope: !6510, file: !679, line: 249, column: 2)
!6525 = !DILocation(line: 249, column: 2, scope: !6524)
!6526 = !DILocation(line: 251, column: 7, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !6528, file: !679, line: 251, column: 7)
!6528 = distinct !DILexicalBlock(scope: !6523, file: !679, line: 249, column: 39)
!6529 = !DILocation(line: 251, column: 7, scope: !6528)
!6530 = !DILocation(line: 253, column: 4, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !6527, file: !679, line: 251, column: 36)
!6532 = !DILocation(line: 256, column: 24, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6531, file: !679, line: 256, column: 8)
!6534 = !DILocation(line: 256, column: 9, scope: !6533)
!6535 = !DILocation(line: 256, column: 8, scope: !6531)
!6536 = !DILocation(line: 260, column: 43, scope: !6531)
!6537 = !DILocation(line: 260, column: 4, scope: !6531)
!6538 = !DILocation(line: 261, column: 3, scope: !6531)
!6539 = !DILocation(line: 249, column: 35, scope: !6523)
!6540 = distinct !{!6540, !6525, !6541}
!6541 = !DILocation(line: 262, column: 2, scope: !6524)
!6542 = !DILocation(line: 263, column: 1, scope: !6510)
!6543 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !679, file: !679, line: 158, type: !114, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !6544)
!6544 = !{!6545}
!6545 = !DILocalVariable(name: "line", arg: 1, scope: !6543, file: !679, line: 158, type: !103)
!6546 = !DILocation(line: 0, scope: !6543)
!6547 = !DILocation(line: 170, column: 38, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6549, file: !679, line: 160, column: 17)
!6549 = distinct !DILexicalBlock(scope: !6543, file: !679, line: 160, column: 6)
!6550 = !DILocation(line: 170, column: 10, scope: !6548)
!6551 = !DILocation(line: 176, column: 1, scope: !6543)
!6552 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !679, file: !679, line: 183, type: !6553, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !6555)
!6553 = !DISubroutineType(types: !6554)
!6554 = !{null, !103}
!6555 = !{!6556}
!6556 = !DILocalVariable(name: "line", arg: 1, scope: !6552, file: !679, line: 183, type: !103)
!6557 = !DILocation(line: 0, scope: !6552)
!6558 = !DILocation(line: 195, column: 28, scope: !6559)
!6559 = distinct !DILexicalBlock(scope: !6560, file: !679, line: 185, column: 17)
!6560 = distinct !DILexicalBlock(scope: !6552, file: !679, line: 185, column: 6)
!6561 = !DILocation(line: 195, column: 3, scope: !6559)
!6562 = !DILocation(line: 200, column: 1, scope: !6552)
!6563 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !6564, file: !6564, line: 910, type: !4999, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !6565)
!6564 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6565 = !{!6566}
!6566 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6563, file: !6564, line: 910, type: !106)
!6567 = !DILocation(line: 0, scope: !6563)
!6568 = !DILocation(line: 912, column: 3, scope: !6563)
!6569 = !DILocation(line: 913, column: 1, scope: !6563)
!6570 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !6564, file: !6564, line: 834, type: !5916, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !6571)
!6571 = !{!6572}
!6572 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6570, file: !6564, line: 834, type: !106)
!6573 = !DILocation(line: 0, scope: !6570)
!6574 = !DILocation(line: 836, column: 11, scope: !6570)
!6575 = !DILocation(line: 836, column: 40, scope: !6570)
!6576 = !DILocation(line: 836, column: 3, scope: !6570)
!6577 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !679, file: !679, line: 304, type: !729, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !6578)
!6578 = !{!6579}
!6579 = !DILocalVariable(name: "dev", arg: 1, scope: !6577, file: !679, line: 304, type: !705)
!6580 = !DILocation(line: 0, scope: !6577)
!6581 = !DILocation(line: 306, column: 2, scope: !6577)
!6582 = !DILocation(line: 307, column: 1, scope: !6577)
!6583 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !679, file: !679, line: 299, type: !729, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !6584)
!6584 = !{!6585}
!6585 = !DILocalVariable(name: "dev", arg: 1, scope: !6583, file: !679, line: 299, type: !705)
!6586 = !DILocation(line: 0, scope: !6583)
!6587 = !DILocation(line: 301, column: 2, scope: !6583)
!6588 = !DILocation(line: 302, column: 1, scope: !6583)
!6589 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !679, file: !679, line: 294, type: !729, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !6590)
!6590 = !{!6591}
!6591 = !DILocalVariable(name: "dev", arg: 1, scope: !6589, file: !679, line: 294, type: !705)
!6592 = !DILocation(line: 0, scope: !6589)
!6593 = !DILocation(line: 296, column: 2, scope: !6589)
!6594 = !DILocation(line: 297, column: 1, scope: !6589)
!6595 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !679, file: !679, line: 397, type: !729, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !6596)
!6596 = !{!6597}
!6597 = !DILocalVariable(name: "dev", arg: 1, scope: !6595, file: !679, line: 397, type: !705)
!6598 = !DILocation(line: 0, scope: !6595)
!6599 = !DILocation(line: 399, column: 2, scope: !6595)
!6600 = !DILocation(line: 400, column: 1, scope: !6595)
!6601 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !679, file: !679, line: 392, type: !729, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !6602)
!6602 = !{!6603}
!6603 = !DILocalVariable(name: "dev", arg: 1, scope: !6601, file: !679, line: 392, type: !705)
!6604 = !DILocation(line: 0, scope: !6601)
!6605 = !DILocation(line: 394, column: 2, scope: !6601)
!6606 = !DILocation(line: 395, column: 1, scope: !6601)
!6607 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !679, file: !679, line: 289, type: !729, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !6608)
!6608 = !{!6609}
!6609 = !DILocalVariable(name: "dev", arg: 1, scope: !6607, file: !679, line: 289, type: !705)
!6610 = !DILocation(line: 0, scope: !6607)
!6611 = !DILocation(line: 291, column: 2, scope: !6607)
!6612 = !DILocation(line: 292, column: 1, scope: !6607)
!6613 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !679, file: !679, line: 387, type: !729, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !6614)
!6614 = !{!6615}
!6615 = !DILocalVariable(name: "dev", arg: 1, scope: !6613, file: !679, line: 387, type: !705)
!6616 = !DILocation(line: 0, scope: !6613)
!6617 = !DILocation(line: 389, column: 2, scope: !6613)
!6618 = !DILocation(line: 390, column: 1, scope: !6613)
!6619 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !679, file: !679, line: 382, type: !729, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !6620)
!6620 = !{!6621}
!6621 = !DILocalVariable(name: "dev", arg: 1, scope: !6619, file: !679, line: 382, type: !705)
!6622 = !DILocation(line: 0, scope: !6619)
!6623 = !DILocation(line: 384, column: 2, scope: !6619)
!6624 = !DILocation(line: 385, column: 1, scope: !6619)
!6625 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !679, file: !679, line: 373, type: !729, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !6626)
!6626 = !{!6627}
!6627 = !DILocalVariable(name: "dev", arg: 1, scope: !6625, file: !679, line: 373, type: !705)
!6628 = !DILocation(line: 0, scope: !6625)
!6629 = !DILocation(line: 375, column: 2, scope: !6625)
!6630 = !DILocation(line: 376, column: 1, scope: !6625)
!6631 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !679, file: !679, line: 284, type: !729, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !6632)
!6632 = !{!6633}
!6633 = !DILocalVariable(name: "dev", arg: 1, scope: !6631, file: !679, line: 284, type: !705)
!6634 = !DILocation(line: 0, scope: !6631)
!6635 = !DILocation(line: 286, column: 2, scope: !6631)
!6636 = !DILocation(line: 287, column: 1, scope: !6631)
!6637 = distinct !DISubprogram(name: "stm32_exti_init", scope: !679, file: !679, line: 416, type: !703, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !6638)
!6638 = !{!6639}
!6639 = !DILocalVariable(name: "dev", arg: 1, scope: !6637, file: !679, line: 416, type: !705)
!6640 = !DILocation(line: 0, scope: !6637)
!6641 = !DILocation(line: 418, column: 2, scope: !6637)
!6642 = !DILocation(line: 420, column: 2, scope: !6637)
!6643 = !DILocation(line: 0, scope: !728)
!6644 = !DILocation(line: 493, column: 2, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !728, file: !679, line: 493, column: 2)
!6646 = !DILocation(line: 497, column: 2, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !728, file: !679, line: 497, column: 2)
!6648 = !DILocation(line: 507, column: 2, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !728, file: !679, line: 507, column: 2)
!6650 = !DILocation(line: 512, column: 2, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !728, file: !679, line: 512, column: 2)
!6652 = !DILocation(line: 516, column: 2, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !728, file: !679, line: 516, column: 2)
!6654 = !DILocation(line: 523, column: 2, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !728, file: !679, line: 523, column: 2)
!6656 = !DILocation(line: 527, column: 2, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !728, file: !679, line: 527, column: 2)
!6658 = !DILocation(line: 581, column: 2, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !728, file: !679, line: 581, column: 2)
!6660 = !DILocation(line: 586, column: 2, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !728, file: !679, line: 586, column: 2)
!6662 = !DILocation(line: 591, column: 2, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !728, file: !679, line: 591, column: 2)
!6664 = !DILocation(line: 595, column: 2, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !728, file: !679, line: 595, column: 2)
!6666 = !DILocation(line: 607, column: 1, scope: !728)
!6667 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !679, file: !679, line: 112, type: !6553, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !6668)
!6668 = !{!6669, !6670}
!6669 = !DILocalVariable(name: "line", arg: 1, scope: !6667, file: !679, line: 112, type: !103)
!6670 = !DILocalVariable(name: "irqnum", scope: !6667, file: !679, line: 114, type: !103)
!6671 = !DILocation(line: 0, scope: !6667)
!6672 = !DILocation(line: 121, column: 11, scope: !6667)
!6673 = !DILocation(line: 130, column: 26, scope: !6667)
!6674 = !DILocation(line: 130, column: 2, scope: !6667)
!6675 = !DILocation(line: 134, column: 2, scope: !6667)
!6676 = !DILocation(line: 135, column: 1, scope: !6667)
!6677 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !6564, file: !6564, line: 268, type: !4999, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !6678)
!6678 = !{!6679}
!6679 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6677, file: !6564, line: 268, type: !106)
!6680 = !DILocation(line: 0, scope: !6677)
!6681 = !DILocation(line: 270, column: 3, scope: !6677)
!6682 = !DILocation(line: 271, column: 1, scope: !6677)
!6683 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !679, file: !679, line: 137, type: !6553, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !6684)
!6684 = !{!6685}
!6685 = !DILocalVariable(name: "line", arg: 1, scope: !6683, file: !679, line: 137, type: !103)
!6686 = !DILocation(line: 0, scope: !6683)
!6687 = !DILocation(line: 141, column: 11, scope: !6688)
!6688 = distinct !DILexicalBlock(scope: !6683, file: !679, line: 141, column: 6)
!6689 = !DILocation(line: 141, column: 6, scope: !6683)
!6690 = !DILocation(line: 145, column: 28, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6688, file: !679, line: 141, column: 17)
!6692 = !DILocation(line: 145, column: 3, scope: !6691)
!6693 = !DILocation(line: 147, column: 2, scope: !6691)
!6694 = !DILocation(line: 151, column: 1, scope: !6683)
!6695 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !6564, file: !6564, line: 309, type: !4999, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !6696)
!6696 = !{!6697}
!6697 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6695, file: !6564, line: 309, type: !106)
!6698 = !DILocation(line: 0, scope: !6695)
!6699 = !DILocation(line: 311, column: 3, scope: !6695)
!6700 = !DILocation(line: 312, column: 1, scope: !6695)
!6701 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !679, file: !679, line: 202, type: !6702, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !6704)
!6702 = !DISubroutineType(types: !6703)
!6703 = !{null, !103, !103}
!6704 = !{!6705, !6706}
!6705 = !DILocalVariable(name: "line", arg: 1, scope: !6701, file: !679, line: 202, type: !103)
!6706 = !DILocalVariable(name: "trigger", arg: 2, scope: !6701, file: !679, line: 202, type: !103)
!6707 = !DILocation(line: 0, scope: !6701)
!6708 = !DILocation(line: 211, column: 2, scope: !6701)
!6709 = !DILocation(line: 213, column: 36, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !6701, file: !679, line: 211, column: 19)
!6711 = !DILocation(line: 213, column: 3, scope: !6710)
!6712 = !DILocation(line: 214, column: 3, scope: !6710)
!6713 = !DILocation(line: 215, column: 3, scope: !6710)
!6714 = !DILocation(line: 217, column: 35, scope: !6710)
!6715 = !DILocation(line: 217, column: 3, scope: !6710)
!6716 = !DILocation(line: 218, column: 3, scope: !6710)
!6717 = !DILocation(line: 219, column: 3, scope: !6710)
!6718 = !DILocation(line: 221, column: 36, scope: !6710)
!6719 = !DILocation(line: 221, column: 3, scope: !6710)
!6720 = !DILocation(line: 222, column: 3, scope: !6710)
!6721 = !DILocation(line: 223, column: 3, scope: !6710)
!6722 = !DILocation(line: 225, column: 35, scope: !6710)
!6723 = !DILocation(line: 225, column: 3, scope: !6710)
!6724 = !DILocation(line: 226, column: 3, scope: !6710)
!6725 = !DILocation(line: 227, column: 3, scope: !6710)
!6726 = !DILocation(line: 232, column: 1, scope: !6701)
!6727 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !6564, file: !6564, line: 573, type: !4999, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !6728)
!6728 = !{!6729}
!6729 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6727, file: !6564, line: 573, type: !106)
!6730 = !DILocation(line: 0, scope: !6727)
!6731 = !DILocation(line: 575, column: 3, scope: !6727)
!6732 = !DILocation(line: 577, column: 1, scope: !6727)
!6733 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !6564, file: !6564, line: 703, type: !4999, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !6734)
!6734 = !{!6735}
!6735 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6733, file: !6564, line: 703, type: !106)
!6736 = !DILocation(line: 0, scope: !6733)
!6737 = !DILocation(line: 705, column: 3, scope: !6733)
!6738 = !DILocation(line: 706, column: 1, scope: !6733)
!6739 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !6564, file: !6564, line: 529, type: !4999, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !6740)
!6740 = !{!6741}
!6741 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6739, file: !6564, line: 529, type: !106)
!6742 = !DILocation(line: 0, scope: !6739)
!6743 = !DILocation(line: 531, column: 3, scope: !6739)
!6744 = !DILocation(line: 533, column: 1, scope: !6739)
!6745 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !6564, file: !6564, line: 661, type: !4999, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !6746)
!6746 = !{!6747}
!6747 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6745, file: !6564, line: 661, type: !106)
!6748 = !DILocation(line: 0, scope: !6745)
!6749 = !DILocation(line: 663, column: 3, scope: !6745)
!6750 = !DILocation(line: 664, column: 1, scope: !6745)
!6751 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !679, file: !679, line: 433, type: !6752, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !6754)
!6752 = !DISubroutineType(types: !6753)
!6753 = !{!103, !103, !716, !102}
!6754 = !{!6755, !6756, !6757, !6758, !6760}
!6755 = !DILocalVariable(name: "line", arg: 1, scope: !6751, file: !679, line: 433, type: !103)
!6756 = !DILocalVariable(name: "cb", arg: 2, scope: !6751, file: !679, line: 433, type: !716)
!6757 = !DILocalVariable(name: "arg", arg: 3, scope: !6751, file: !679, line: 433, type: !102)
!6758 = !DILocalVariable(name: "dev", scope: !6751, file: !679, line: 435, type: !6759)
!6759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !705)
!6760 = !DILocalVariable(name: "data", scope: !6751, file: !679, line: 436, type: !6518)
!6761 = !DILocation(line: 0, scope: !6751)
!6762 = !DILocation(line: 438, column: 21, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6751, file: !679, line: 438, column: 6)
!6764 = !DILocation(line: 438, column: 6, scope: !6763)
!6765 = !DILocation(line: 438, column: 6, scope: !6751)
!6766 = !DILocation(line: 442, column: 20, scope: !6751)
!6767 = !DILocation(line: 443, column: 17, scope: !6751)
!6768 = !DILocation(line: 443, column: 22, scope: !6751)
!6769 = !DILocation(line: 445, column: 2, scope: !6751)
!6770 = !DILocation(line: 446, column: 1, scope: !6751)
!6771 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !679, file: !679, line: 448, type: !6553, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !6772)
!6772 = !{!6773, !6774, !6775}
!6773 = !DILocalVariable(name: "line", arg: 1, scope: !6771, file: !679, line: 448, type: !103)
!6774 = !DILocalVariable(name: "dev", scope: !6771, file: !679, line: 450, type: !6759)
!6775 = !DILocalVariable(name: "data", scope: !6771, file: !679, line: 451, type: !6518)
!6776 = !DILocation(line: 0, scope: !6771)
!6777 = !DILocation(line: 453, column: 17, scope: !6771)
!6778 = !DILocation(line: 453, column: 20, scope: !6771)
!6779 = !DILocation(line: 454, column: 17, scope: !6771)
!6780 = !DILocation(line: 454, column: 22, scope: !6771)
!6781 = !DILocation(line: 455, column: 1, scope: !6771)
!6782 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !817, file: !817, line: 183, type: !855, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !6783)
!6783 = !{!6784, !6785, !6786, !6787, !6788}
!6784 = !DILocalVariable(name: "dev", arg: 1, scope: !6782, file: !817, line: 183, type: !846)
!6785 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6782, file: !817, line: 184, type: !225)
!6786 = !DILocalVariable(name: "pclken", scope: !6782, file: !817, line: 186, type: !809)
!6787 = !DILocalVariable(name: "reg", scope: !6782, file: !817, line: 187, type: !1404)
!6788 = !DILocalVariable(name: "reg_val", scope: !6782, file: !817, line: 188, type: !106)
!6789 = !DILocation(line: 0, scope: !6782)
!6790 = !DILocation(line: 192, column: 6, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6782, file: !817, line: 192, column: 6)
!6792 = !DILocation(line: 192, column: 6, scope: !6782)
!6793 = !DILocation(line: 197, column: 52, scope: !6782)
!6794 = !DILocation(line: 197, column: 8, scope: !6782)
!6795 = !DILocation(line: 198, column: 12, scope: !6782)
!6796 = !DILocation(line: 199, column: 21, scope: !6782)
!6797 = !DILocation(line: 199, column: 10, scope: !6782)
!6798 = !DILocation(line: 200, column: 7, scope: !6782)
!6799 = !DILocation(line: 202, column: 2, scope: !6782)
!6800 = !DILocation(line: 203, column: 1, scope: !6782)
!6801 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !817, file: !817, line: 205, type: !855, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !6802)
!6802 = !{!6803, !6804, !6805, !6806, !6807}
!6803 = !DILocalVariable(name: "dev", arg: 1, scope: !6801, file: !817, line: 205, type: !846)
!6804 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6801, file: !817, line: 206, type: !225)
!6805 = !DILocalVariable(name: "pclken", scope: !6801, file: !817, line: 208, type: !809)
!6806 = !DILocalVariable(name: "reg", scope: !6801, file: !817, line: 209, type: !1404)
!6807 = !DILocalVariable(name: "reg_val", scope: !6801, file: !817, line: 210, type: !106)
!6808 = !DILocation(line: 0, scope: !6801)
!6809 = !DILocation(line: 214, column: 6, scope: !6810)
!6810 = distinct !DILexicalBlock(scope: !6801, file: !817, line: 214, column: 6)
!6811 = !DILocation(line: 214, column: 6, scope: !6801)
!6812 = !DILocation(line: 219, column: 52, scope: !6801)
!6813 = !DILocation(line: 219, column: 8, scope: !6801)
!6814 = !DILocation(line: 220, column: 12, scope: !6801)
!6815 = !DILocation(line: 221, column: 22, scope: !6801)
!6816 = !DILocation(line: 221, column: 13, scope: !6801)
!6817 = !DILocation(line: 221, column: 10, scope: !6801)
!6818 = !DILocation(line: 222, column: 7, scope: !6801)
!6819 = !DILocation(line: 224, column: 2, scope: !6801)
!6820 = !DILocation(line: 225, column: 1, scope: !6801)
!6821 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !817, file: !817, line: 262, type: !870, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !6822)
!6822 = !{!6823, !6824, !6825, !6826, !6827, !6828, !6829, !6830}
!6823 = !DILocalVariable(name: "clock", arg: 1, scope: !6821, file: !817, line: 262, type: !846)
!6824 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6821, file: !817, line: 263, type: !225)
!6825 = !DILocalVariable(name: "rate", arg: 3, scope: !6821, file: !817, line: 264, type: !265)
!6826 = !DILocalVariable(name: "pclken", scope: !6821, file: !817, line: 266, type: !809)
!6827 = !DILocalVariable(name: "ahb_clock", scope: !6821, file: !817, line: 273, type: !106)
!6828 = !DILocalVariable(name: "apb1_clock", scope: !6821, file: !817, line: 274, type: !106)
!6829 = !DILocalVariable(name: "apb2_clock", scope: !6821, file: !817, line: 276, type: !106)
!6830 = !DILocalVariable(name: "ahb3_clock", scope: !6821, file: !817, line: 286, type: !106)
!6831 = !DILocation(line: 0, scope: !6821)
!6832 = !DILocation(line: 273, column: 23, scope: !6821)
!6833 = !DILocation(line: 299, column: 18, scope: !6821)
!6834 = !DILocation(line: 299, column: 2, scope: !6821)
!6835 = !DILocation(line: 274, column: 24, scope: !6821)
!6836 = !DILocation(line: 319, column: 3, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6821, file: !817, line: 299, column: 23)
!6838 = !DILocation(line: 276, column: 24, scope: !6821)
!6839 = !DILocation(line: 323, column: 3, scope: !6837)
!6840 = !DILocation(line: 346, column: 33, scope: !6837)
!6841 = !DILocation(line: 346, column: 11, scope: !6837)
!6842 = !DILocation(line: 350, column: 3, scope: !6837)
!6843 = !DILocation(line: 354, column: 33, scope: !6837)
!6844 = !DILocation(line: 354, column: 11, scope: !6837)
!6845 = !DILocation(line: 358, column: 3, scope: !6837)
!6846 = !DILocation(line: 374, column: 3, scope: !6837)
!6847 = !DILocation(line: 379, column: 3, scope: !6837)
!6848 = !DILocation(line: 0, scope: !6837)
!6849 = !DILocation(line: 396, column: 1, scope: !6821)
!6850 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !817, file: !817, line: 227, type: !885, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !6851)
!6851 = !{!6852, !6853, !6854, !6855, !6856, !6857, !6858, !6859}
!6852 = !DILocalVariable(name: "dev", arg: 1, scope: !6850, file: !817, line: 227, type: !846)
!6853 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6850, file: !817, line: 228, type: !225)
!6854 = !DILocalVariable(name: "data", arg: 3, scope: !6850, file: !817, line: 229, type: !102)
!6855 = !DILocalVariable(name: "pclken", scope: !6850, file: !817, line: 233, type: !809)
!6856 = !DILocalVariable(name: "reg", scope: !6850, file: !817, line: 234, type: !1404)
!6857 = !DILocalVariable(name: "reg_val", scope: !6850, file: !817, line: 235, type: !106)
!6858 = !DILocalVariable(name: "dt_val", scope: !6850, file: !817, line: 235, type: !106)
!6859 = !DILocalVariable(name: "err", scope: !6850, file: !817, line: 236, type: !103)
!6860 = !DILocation(line: 0, scope: !6850)
!6861 = !DILocation(line: 241, column: 30, scope: !6850)
!6862 = !DILocation(line: 241, column: 8, scope: !6850)
!6863 = !DILocation(line: 242, column: 10, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6850, file: !817, line: 242, column: 6)
!6865 = !DILocation(line: 242, column: 6, scope: !6850)
!6866 = !DILocation(line: 247, column: 11, scope: !6850)
!6867 = !DILocation(line: 248, column: 6, scope: !6850)
!6868 = !DILocation(line: 247, column: 44, scope: !6850)
!6869 = !DILocation(line: 250, column: 6, scope: !6850)
!6870 = !DILocation(line: 249, column: 52, scope: !6850)
!6871 = !DILocation(line: 249, column: 8, scope: !6850)
!6872 = !DILocation(line: 251, column: 12, scope: !6850)
!6873 = !DILocation(line: 252, column: 10, scope: !6850)
!6874 = !DILocation(line: 253, column: 7, scope: !6850)
!6875 = !DILocation(line: 255, column: 2, scope: !6850)
!6876 = !DILocation(line: 260, column: 1, scope: !6850)
!6877 = distinct !DISubprogram(name: "enabled_clock", scope: !817, file: !817, line: 100, type: !6878, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !6880)
!6878 = !DISubroutineType(types: !6879)
!6879 = !{!103, !106}
!6880 = !{!6881, !6882}
!6881 = !DILocalVariable(name: "src_clk", arg: 1, scope: !6877, file: !817, line: 100, type: !106)
!6882 = !DILocalVariable(name: "r", scope: !6877, file: !817, line: 102, type: !103)
!6883 = !DILocation(line: 0, scope: !6877)
!6884 = !DILocation(line: 104, column: 2, scope: !6877)
!6885 = !DILocation(line: 180, column: 2, scope: !6877)
!6886 = !DILocation(line: 181, column: 1, scope: !6877)
!6887 = distinct !DISubprogram(name: "get_bus_clock", scope: !817, file: !817, line: 79, type: !6888, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !6890)
!6888 = !DISubroutineType(types: !6889)
!6889 = !{!106, !106, !106}
!6890 = !{!6891, !6892}
!6891 = !DILocalVariable(name: "clock", arg: 1, scope: !6887, file: !817, line: 79, type: !106)
!6892 = !DILocalVariable(name: "prescaler", arg: 2, scope: !6887, file: !817, line: 79, type: !106)
!6893 = !DILocation(line: 0, scope: !6887)
!6894 = !DILocation(line: 81, column: 15, scope: !6887)
!6895 = !DILocation(line: 81, column: 2, scope: !6887)
!6896 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !817, file: !817, line: 68, type: !6897, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !6899)
!6897 = !DISubroutineType(types: !6898)
!6898 = !{!106, !106, !103, !103, !103}
!6899 = !{!6900, !6901, !6902, !6903}
!6900 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !6896, file: !817, line: 68, type: !106)
!6901 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !6896, file: !817, line: 69, type: !103)
!6902 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !6896, file: !817, line: 70, type: !103)
!6903 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !6896, file: !817, line: 71, type: !103)
!6904 = !DILocation(line: 0, scope: !6896)
!6905 = !DILocation(line: 75, column: 22, scope: !6896)
!6906 = !DILocation(line: 76, column: 13, scope: !6896)
!6907 = !DILocation(line: 75, column: 34, scope: !6896)
!6908 = !DILocation(line: 75, column: 2, scope: !6896)
!6909 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !817, file: !817, line: 641, type: !844, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !6910)
!6910 = !{!6911, !6912, !6913}
!6911 = !DILocalVariable(name: "dev", arg: 1, scope: !6909, file: !817, line: 641, type: !846)
!6912 = !DILocalVariable(name: "old_flash_freq", scope: !6909, file: !817, line: 664, type: !106)
!6913 = !DILocalVariable(name: "new_flash_freq", scope: !6909, file: !817, line: 665, type: !106)
!6914 = !DILocation(line: 0, scope: !6909)
!6915 = !DILocation(line: 646, column: 2, scope: !6909)
!6916 = !DILocation(line: 667, column: 19, scope: !6909)
!6917 = !DILocation(line: 674, column: 21, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6909, file: !817, line: 674, column: 6)
!6919 = !DILocation(line: 674, column: 6, scope: !6909)
!6920 = !DILocation(line: 675, column: 3, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6918, file: !817, line: 674, column: 59)
!6922 = !DILocation(line: 676, column: 2, scope: !6921)
!6923 = !DILocation(line: 680, column: 2, scope: !6909)
!6924 = !DILocation(line: 683, column: 2, scope: !6909)
!6925 = !DILocation(line: 690, column: 3, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6927, file: !817, line: 689, column: 9)
!6927 = distinct !DILexicalBlock(scope: !6909, file: !817, line: 685, column: 6)
!6928 = !DILocation(line: 695, column: 2, scope: !6909)
!6929 = !DILocation(line: 696, column: 2, scope: !6909)
!6930 = !DILocation(line: 696, column: 9, scope: !6909)
!6931 = !DILocation(line: 696, column: 34, scope: !6909)
!6932 = distinct !{!6932, !6929, !6933}
!6933 = !DILocation(line: 697, column: 2, scope: !6909)
!6934 = !DILocation(line: 720, column: 21, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6909, file: !817, line: 720, column: 6)
!6936 = !DILocation(line: 720, column: 6, scope: !6909)
!6937 = !DILocation(line: 721, column: 3, scope: !6938)
!6938 = distinct !DILexicalBlock(scope: !6935, file: !817, line: 720, column: 60)
!6939 = !DILocation(line: 722, column: 2, scope: !6938)
!6940 = !DILocation(line: 725, column: 18, scope: !6909)
!6941 = !DILocation(line: 728, column: 2, scope: !6909)
!6942 = !DILocation(line: 730, column: 2, scope: !6909)
!6943 = !DILocation(line: 745, column: 2, scope: !6909)
!6944 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !6945, file: !6945, line: 3275, type: !4745, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !474)
!6945 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6946 = !DILocation(line: 3277, column: 21, scope: !6944)
!6947 = !DILocation(line: 3277, column: 3, scope: !6944)
!6948 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !817, file: !817, line: 507, type: !2860, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !474)
!6949 = !DILocation(line: 516, column: 4, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6951, file: !817, line: 515, column: 10)
!6951 = distinct !DILexicalBlock(scope: !6952, file: !817, line: 513, column: 7)
!6952 = distinct !DILexicalBlock(scope: !6953, file: !817, line: 510, column: 37)
!6953 = distinct !DILexicalBlock(scope: !6948, file: !817, line: 510, column: 6)
!6954 = !DILocation(line: 526, column: 3, scope: !6952)
!6955 = !DILocation(line: 527, column: 3, scope: !6952)
!6956 = !DILocation(line: 527, column: 10, scope: !6952)
!6957 = !DILocation(line: 527, column: 31, scope: !6952)
!6958 = distinct !{!6958, !6955, !6959}
!6959 = !DILocation(line: 529, column: 3, scope: !6952)
!6960 = !DILocation(line: 583, column: 3, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6962, file: !817, line: 577, column: 37)
!6962 = distinct !DILexicalBlock(scope: !6948, file: !817, line: 577, column: 6)
!6963 = !DILocation(line: 584, column: 3, scope: !6961)
!6964 = !DILocation(line: 584, column: 10, scope: !6961)
!6965 = !DILocation(line: 584, column: 31, scope: !6961)
!6966 = distinct !{!6966, !6963, !6967}
!6967 = !DILocation(line: 585, column: 3, scope: !6961)
!6968 = !DILocation(line: 627, column: 1, scope: !6948)
!6969 = distinct !DISubprogram(name: "set_up_plls", scope: !817, file: !817, line: 448, type: !2860, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !474)
!6970 = !DILocation(line: 460, column: 6, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6969, file: !817, line: 460, column: 6)
!6972 = !DILocation(line: 460, column: 31, scope: !6971)
!6973 = !DILocation(line: 460, column: 6, scope: !6969)
!6974 = !DILocation(line: 461, column: 3, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6971, file: !817, line: 460, column: 67)
!6976 = !DILocation(line: 462, column: 3, scope: !6975)
!6977 = !DILocation(line: 463, column: 2, scope: !6975)
!6978 = !DILocation(line: 464, column: 2, scope: !6969)
!6979 = !DILocation(line: 488, column: 2, scope: !6969)
!6980 = !DILocation(line: 492, column: 2, scope: !6969)
!6981 = !DILocation(line: 496, column: 2, scope: !6969)
!6982 = !DILocation(line: 499, column: 2, scope: !6969)
!6983 = !DILocation(line: 500, column: 2, scope: !6969)
!6984 = !DILocation(line: 500, column: 9, scope: !6969)
!6985 = !DILocation(line: 500, column: 30, scope: !6969)
!6986 = distinct !{!6986, !6983, !6987}
!6987 = !DILocation(line: 502, column: 2, scope: !6969)
!6988 = !DILocation(line: 505, column: 1, scope: !6969)
!6989 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !6945, file: !6945, line: 3224, type: !4999, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !6990)
!6990 = !{!6991}
!6991 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !6989, file: !6945, line: 3224, type: !106)
!6992 = !DILocation(line: 0, scope: !6989)
!6993 = !DILocation(line: 3226, column: 3, scope: !6989)
!6994 = !DILocation(line: 3227, column: 1, scope: !6989)
!6995 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !6945, file: !6945, line: 3188, type: !4999, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !6996)
!6996 = !{!6997}
!6997 = !DILocalVariable(name: "Source", arg: 1, scope: !6995, file: !6945, line: 3188, type: !106)
!6998 = !DILocation(line: 0, scope: !6995)
!6999 = !DILocation(line: 3190, column: 3, scope: !6995)
!7000 = !DILocation(line: 3191, column: 1, scope: !6995)
!7001 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !6945, file: !6945, line: 3204, type: !4745, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !474)
!7002 = !DILocation(line: 3206, column: 21, scope: !7001)
!7003 = !DILocation(line: 3206, column: 3, scope: !7001)
!7004 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !6945, file: !6945, line: 3240, type: !4999, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !7005)
!7005 = !{!7006}
!7006 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !7004, file: !6945, line: 3240, type: !106)
!7007 = !DILocation(line: 0, scope: !7004)
!7008 = !DILocation(line: 3242, column: 3, scope: !7004)
!7009 = !DILocation(line: 3243, column: 1, scope: !7004)
!7010 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !6945, file: !6945, line: 3256, type: !4999, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !7011)
!7011 = !{!7012}
!7012 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !7010, file: !6945, line: 3256, type: !106)
!7013 = !DILocation(line: 0, scope: !7010)
!7014 = !DILocation(line: 3258, column: 3, scope: !7010)
!7015 = !DILocation(line: 3259, column: 1, scope: !7010)
!7016 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !817, file: !817, line: 409, type: !2860, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !474)
!7017 = !DILocation(line: 412, column: 6, scope: !7018)
!7018 = distinct !DILexicalBlock(scope: !7016, file: !817, line: 412, column: 6)
!7019 = !DILocation(line: 412, column: 27, scope: !7018)
!7020 = !DILocation(line: 412, column: 6, scope: !7016)
!7021 = !DILocation(line: 414, column: 3, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !7018, file: !817, line: 412, column: 33)
!7023 = !DILocation(line: 415, column: 3, scope: !7022)
!7024 = !DILocation(line: 415, column: 10, scope: !7022)
!7025 = !DILocation(line: 415, column: 31, scope: !7022)
!7026 = distinct !{!7026, !7023, !7027}
!7027 = !DILocation(line: 417, column: 3, scope: !7022)
!7028 = !DILocation(line: 421, column: 2, scope: !7016)
!7029 = !DILocation(line: 422, column: 2, scope: !7016)
!7030 = !DILocation(line: 422, column: 9, scope: !7016)
!7031 = !DILocation(line: 422, column: 34, scope: !7016)
!7032 = distinct !{!7032, !7029, !7033}
!7033 = !DILocation(line: 423, column: 2, scope: !7016)
!7034 = !DILocation(line: 424, column: 1, scope: !7016)
!7035 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !6945, file: !6945, line: 4195, type: !2860, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !474)
!7036 = !DILocation(line: 4197, column: 3, scope: !7035)
!7037 = !DILocation(line: 4198, column: 1, scope: !7035)
!7038 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !6945, file: !6945, line: 4184, type: !2860, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !474)
!7039 = !DILocation(line: 4186, column: 3, scope: !7038)
!7040 = !DILocation(line: 4187, column: 1, scope: !7038)
!7041 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !6945, file: !6945, line: 4205, type: !4745, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !474)
!7042 = !DILocation(line: 4207, column: 11, scope: !7041)
!7043 = !DILocation(line: 4207, column: 44, scope: !7041)
!7044 = !DILocation(line: 4207, column: 3, scope: !7041)
!7045 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !6945, file: !6945, line: 3007, type: !4745, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !474)
!7046 = !DILocation(line: 3009, column: 11, scope: !7045)
!7047 = !DILocation(line: 3009, column: 44, scope: !7045)
!7048 = !DILocation(line: 3009, column: 3, scope: !7045)
!7049 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !6945, file: !6945, line: 2987, type: !2860, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !474)
!7050 = !DILocation(line: 2989, column: 3, scope: !7049)
!7051 = !DILocation(line: 2990, column: 1, scope: !7049)
!7052 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !6945, file: !6945, line: 2939, type: !2860, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !474)
!7053 = !DILocation(line: 2941, column: 3, scope: !7052)
!7054 = !DILocation(line: 2942, column: 1, scope: !7052)
!7055 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !6945, file: !6945, line: 2949, type: !2860, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !474)
!7056 = !DILocation(line: 2951, column: 3, scope: !7055)
!7057 = !DILocation(line: 2952, column: 1, scope: !7055)
!7058 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !6945, file: !6945, line: 2969, type: !4745, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !474)
!7059 = !DILocation(line: 2971, column: 11, scope: !7058)
!7060 = !DILocation(line: 2971, column: 44, scope: !7058)
!7061 = !DILocation(line: 2971, column: 3, scope: !7058)
!7062 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !6945, file: !6945, line: 3143, type: !2860, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !474)
!7063 = !DILocation(line: 3145, column: 3, scope: !7062)
!7064 = !DILocation(line: 3146, column: 1, scope: !7062)
!7065 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !6945, file: !6945, line: 3163, type: !4745, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !474)
!7066 = !DILocation(line: 3165, column: 11, scope: !7065)
!7067 = !DILocation(line: 3165, column: 46, scope: !7065)
!7068 = !DILocation(line: 3165, column: 3, scope: !7065)
!7069 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !7070, file: !7070, line: 40, type: !4745, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !474)
!7070 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7071 = !DILocation(line: 45, column: 3, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7073, file: !7070, line: 44, column: 44)
!7073 = distinct !DILexicalBlock(scope: !7074, file: !7070, line: 44, column: 13)
!7074 = distinct !DILexicalBlock(scope: !7069, file: !7070, line: 42, column: 6)
!7075 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !7070, file: !7070, line: 56, type: !2860, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !474)
!7076 = !DILocation(line: 58, column: 2, scope: !7075)
!7077 = !DILocation(line: 62, column: 1, scope: !7075)
!7078 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !6945, file: !6945, line: 4304, type: !7079, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !7081)
!7079 = !DISubroutineType(types: !7080)
!7080 = !{null, !106, !106, !106, !106}
!7081 = !{!7082, !7083, !7084, !7085}
!7082 = !DILocalVariable(name: "Source", arg: 1, scope: !7078, file: !6945, line: 4304, type: !106)
!7083 = !DILocalVariable(name: "PLLM", arg: 2, scope: !7078, file: !6945, line: 4304, type: !106)
!7084 = !DILocalVariable(name: "PLLN", arg: 3, scope: !7078, file: !6945, line: 4304, type: !106)
!7085 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !7078, file: !6945, line: 4304, type: !106)
!7086 = !DILocation(line: 0, scope: !7078)
!7087 = !DILocation(line: 4306, column: 3, scope: !7078)
!7088 = !DILocation(line: 4308, column: 3, scope: !7078)
!7089 = !DILocation(line: 4312, column: 1, scope: !7078)
!7090 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !7070, file: !7070, line: 69, type: !2860, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !474)
!7091 = !DILocation(line: 72, column: 2, scope: !7090)
!7092 = !DILocation(line: 73, column: 1, scope: !7090)
!7093 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !7094, file: !7094, line: 1185, type: !4999, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !7095)
!7094 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7095 = !{!7096, !7097}
!7096 = !DILocalVariable(name: "Periphs", arg: 1, scope: !7093, file: !7094, line: 1185, type: !106)
!7097 = !DILocalVariable(name: "tmpreg", scope: !7093, file: !7094, line: 1187, type: !127)
!7098 = !DILocation(line: 0, scope: !7093)
!7099 = !DILocation(line: 1187, column: 3, scope: !7093)
!7100 = !DILocation(line: 1187, column: 17, scope: !7093)
!7101 = !DILocation(line: 1188, column: 3, scope: !7093)
!7102 = !DILocation(line: 1190, column: 12, scope: !7093)
!7103 = !DILocation(line: 1190, column: 10, scope: !7093)
!7104 = !DILocation(line: 1191, column: 9, scope: !7093)
!7105 = !DILocation(line: 1192, column: 1, scope: !7093)
!7106 = distinct !DISubprogram(name: "uart_console_init", scope: !946, file: !946, line: 588, type: !923, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !889, retainedNodes: !7107)
!7107 = !{!7108}
!7108 = !DILocalVariable(name: "arg", arg: 1, scope: !7106, file: !946, line: 588, type: !901)
!7109 = !DILocation(line: 0, scope: !7106)
!7110 = !DILocation(line: 593, column: 7, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7106, file: !946, line: 593, column: 6)
!7112 = !DILocation(line: 593, column: 6, scope: !7106)
!7113 = !DILocation(line: 597, column: 2, scope: !7106)
!7114 = !DILocation(line: 599, column: 2, scope: !7106)
!7115 = !DILocation(line: 600, column: 1, scope: !7106)
!7116 = distinct !DISubprogram(name: "device_is_ready", scope: !4719, file: !4719, line: 47, type: !7117, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !889, retainedNodes: !7119)
!7117 = !DISubroutineType(types: !7118)
!7118 = !{!163, !901}
!7119 = !{!7120}
!7120 = !DILocalVariable(name: "dev", arg: 1, scope: !7116, file: !4719, line: 47, type: !901)
!7121 = !DILocation(line: 0, scope: !7116)
!7122 = !DILocation(line: 55, column: 2, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !7116, file: !4719, line: 55, column: 2)
!7124 = !{i64 2155043427}
!7125 = !DILocation(line: 56, column: 9, scope: !7116)
!7126 = !DILocation(line: 56, column: 2, scope: !7116)
!7127 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !946, file: !946, line: 573, type: !2860, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !889, retainedNodes: !474)
!7128 = !DILocation(line: 576, column: 2, scope: !7127)
!7129 = !DILocation(line: 579, column: 2, scope: !7127)
!7130 = !DILocation(line: 581, column: 1, scope: !7127)
!7131 = distinct !DISubprogram(name: "console_out", scope: !946, file: !946, line: 77, type: !114, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !889, retainedNodes: !7132)
!7132 = !{!7133}
!7133 = !DILocalVariable(name: "c", arg: 1, scope: !7131, file: !946, line: 77, type: !103)
!7134 = !DILocation(line: 0, scope: !7131)
!7135 = !DILocation(line: 89, column: 11, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7131, file: !946, line: 89, column: 6)
!7137 = !DILocation(line: 89, column: 6, scope: !7131)
!7138 = !DILocation(line: 90, column: 3, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7136, file: !946, line: 89, column: 17)
!7140 = !DILocation(line: 91, column: 2, scope: !7139)
!7141 = !DILocation(line: 92, column: 34, scope: !7131)
!7142 = !DILocation(line: 92, column: 2, scope: !7131)
!7143 = !DILocation(line: 94, column: 2, scope: !7131)
!7144 = distinct !DISubprogram(name: "uart_poll_out", scope: !7145, file: !7145, line: 95, type: !919, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !889, retainedNodes: !7146)
!7145 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/boards/stm32/backup_sram")
!7146 = !{!7147, !7148}
!7147 = !DILocalVariable(name: "dev", arg: 1, scope: !7144, file: !7145, line: 95, type: !901)
!7148 = !DILocalVariable(name: "out_char", arg: 2, scope: !7144, file: !7145, line: 95, type: !161)
!7149 = !DILocation(line: 0, scope: !7144)
!7150 = !DILocation(line: 105, column: 2, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7144, file: !7145, line: 105, column: 2)
!7152 = !{i64 2155126818}
!7153 = !DILocation(line: 106, column: 2, scope: !7144)
!7154 = !DILocation(line: 107, column: 1, scope: !7144)
!7155 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !895, file: !895, line: 574, type: !919, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !889, retainedNodes: !7156)
!7156 = !{!7157, !7158, !7159}
!7157 = !DILocalVariable(name: "dev", arg: 1, scope: !7155, file: !895, line: 574, type: !901)
!7158 = !DILocalVariable(name: "out_char", arg: 2, scope: !7155, file: !895, line: 575, type: !161)
!7159 = !DILocalVariable(name: "api", scope: !7155, file: !895, line: 577, type: !892)
!7160 = !DILocation(line: 0, scope: !7155)
!7161 = !DILocation(line: 578, column: 40, scope: !7155)
!7162 = !DILocation(line: 580, column: 7, scope: !7155)
!7163 = !DILocation(line: 580, column: 2, scope: !7155)
!7164 = !DILocation(line: 581, column: 1, scope: !7155)
!7165 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !147, file: !147, line: 730, type: !7117, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !889, retainedNodes: !7166)
!7166 = !{!7167}
!7167 = !DILocalVariable(name: "dev", arg: 1, scope: !7165, file: !147, line: 730, type: !901)
!7168 = !DILocation(line: 0, scope: !7165)
!7169 = !DILocation(line: 732, column: 9, scope: !7165)
!7170 = !DILocation(line: 732, column: 2, scope: !7165)
!7171 = distinct !DISubprogram(name: "uart_register_input", scope: !946, file: !946, line: 560, type: !7172, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !889, retainedNodes: !7217)
!7172 = !DISubroutineType(types: !7173)
!7173 = !{null, !7174, !7174, !7214}
!7174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7175, size: 32)
!7175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !459, line: 2208, size: 128, elements: !7176)
!7176 = !{!7177}
!7177 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !7175, file: !459, line: 2209, baseType: !7178, size: 128)
!7178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !459, line: 1709, size: 128, elements: !7179)
!7179 = !{!7180, !7193, !7195}
!7180 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !7178, file: !459, line: 1710, baseType: !7181, size: 64)
!7181 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !7182, line: 46, baseType: !7183)
!7182 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !7182, line: 41, size: 64, elements: !7184)
!7184 = !{!7185, !7192}
!7185 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7183, file: !7182, line: 42, baseType: !7186, size: 32)
!7186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7187, size: 32)
!7187 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !7182, line: 39, baseType: !7188)
!7188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !7182, line: 35, size: 32, elements: !7189)
!7189 = !{!7190}
!7190 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !7188, file: !7182, line: 36, baseType: !7191, size: 32)
!7191 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !7182, line: 32, baseType: !106)
!7192 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7183, file: !7182, line: 43, baseType: !7186, size: 32, offset: 32)
!7193 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7178, file: !459, line: 1711, baseType: !7194, offset: 64)
!7194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !473, line: 43, elements: !474)
!7195 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7178, file: !459, line: 1712, baseType: !7196, size: 64, offset: 64)
!7196 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !399, line: 233, baseType: !7197)
!7197 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !399, line: 231, size: 64, elements: !7198)
!7198 = !{!7199}
!7199 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7197, file: !399, line: 232, baseType: !7200, size: 64)
!7200 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !373, line: 48, baseType: !7201)
!7201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !373, line: 37, size: 64, elements: !7202)
!7202 = !{!7203, !7209}
!7203 = !DIDerivedType(tag: DW_TAG_member, scope: !7201, file: !373, line: 38, baseType: !7204, size: 32)
!7204 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7201, file: !373, line: 38, size: 32, elements: !7205)
!7205 = !{!7206, !7208}
!7206 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7204, file: !373, line: 39, baseType: !7207, size: 32)
!7207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7201, size: 32)
!7208 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7204, file: !373, line: 40, baseType: !7207, size: 32)
!7209 = !DIDerivedType(tag: DW_TAG_member, scope: !7201, file: !373, line: 42, baseType: !7210, size: 32, offset: 32)
!7210 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7201, file: !373, line: 42, size: 32, elements: !7211)
!7211 = !{!7212, !7213}
!7212 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7210, file: !373, line: 43, baseType: !7207, size: 32)
!7213 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7210, file: !373, line: 44, baseType: !7207, size: 32)
!7214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7215, size: 32)
!7215 = !DISubroutineType(types: !7216)
!7216 = !{!160, !1081, !160}
!7217 = !{!7218, !7219, !7220}
!7218 = !DILocalVariable(name: "avail", arg: 1, scope: !7171, file: !946, line: 560, type: !7174)
!7219 = !DILocalVariable(name: "lines", arg: 2, scope: !7171, file: !946, line: 560, type: !7174)
!7220 = !DILocalVariable(name: "completion", arg: 3, scope: !7171, file: !946, line: 561, type: !7214)
!7221 = !DILocation(line: 0, scope: !7171)
!7222 = !DILocation(line: 566, column: 1, scope: !7171)
!7223 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1124, file: !1124, line: 523, type: !982, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7224)
!7224 = !{!7225, !7226, !7227, !7228, !7229}
!7225 = !DILocalVariable(name: "dev", arg: 1, scope: !7223, file: !1124, line: 523, type: !984)
!7226 = !DILocalVariable(name: "pin", arg: 2, scope: !7223, file: !1124, line: 524, type: !999)
!7227 = !DILocalVariable(name: "flags", arg: 3, scope: !7223, file: !1124, line: 524, type: !1000)
!7228 = !DILocalVariable(name: "err", scope: !7223, file: !1124, line: 526, type: !103)
!7229 = !DILocalVariable(name: "pincfg", scope: !7223, file: !1124, line: 527, type: !103)
!7230 = !DILocation(line: 0, scope: !7223)
!7231 = !DILocation(line: 527, column: 2, scope: !7223)
!7232 = !DILocation(line: 532, column: 8, scope: !7223)
!7233 = !DILocation(line: 533, column: 10, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7223, file: !1124, line: 533, column: 6)
!7235 = !DILocation(line: 533, column: 6, scope: !7223)
!7236 = !DILocation(line: 543, column: 13, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7223, file: !1124, line: 543, column: 6)
!7238 = !DILocation(line: 543, column: 28, scope: !7237)
!7239 = !DILocation(line: 543, column: 6, scope: !7223)
!7240 = !DILocation(line: 544, column: 14, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7242, file: !1124, line: 544, column: 7)
!7242 = distinct !DILexicalBlock(scope: !7237, file: !1124, line: 543, column: 34)
!7243 = !DILocation(line: 544, column: 39, scope: !7241)
!7244 = !DILocation(line: 544, column: 7, scope: !7242)
!7245 = !DILocation(line: 545, column: 38, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7241, file: !1124, line: 544, column: 45)
!7247 = !DILocation(line: 545, column: 4, scope: !7246)
!7248 = !DILocation(line: 546, column: 3, scope: !7246)
!7249 = !DILocation(line: 546, column: 21, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !7241, file: !1124, line: 546, column: 14)
!7251 = !DILocation(line: 546, column: 45, scope: !7250)
!7252 = !DILocation(line: 546, column: 14, scope: !7241)
!7253 = !DILocation(line: 547, column: 40, scope: !7254)
!7254 = distinct !DILexicalBlock(scope: !7250, file: !1124, line: 546, column: 51)
!7255 = !DILocation(line: 547, column: 4, scope: !7254)
!7256 = !DILocation(line: 548, column: 3, scope: !7254)
!7257 = !DILocation(line: 551, column: 32, scope: !7223)
!7258 = !DILocation(line: 551, column: 37, scope: !7223)
!7259 = !DILocation(line: 551, column: 2, scope: !7223)
!7260 = !DILocation(line: 554, column: 6, scope: !7223)
!7261 = !DILocation(line: 562, column: 1, scope: !7223)
!7262 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1124, file: !1124, line: 410, type: !7263, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7265)
!7263 = !DISubroutineType(types: !7264)
!7264 = !{!103, !984, !265}
!7265 = !{!7266, !7267, !7268, !7270}
!7266 = !DILocalVariable(name: "dev", arg: 1, scope: !7262, file: !1124, line: 410, type: !984)
!7267 = !DILocalVariable(name: "value", arg: 2, scope: !7262, file: !1124, line: 410, type: !265)
!7268 = !DILocalVariable(name: "cfg", scope: !7262, file: !1124, line: 412, type: !7269)
!7269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 32)
!7270 = !DILocalVariable(name: "gpio", scope: !7262, file: !1124, line: 413, type: !1057)
!7271 = !DILocation(line: 0, scope: !7262)
!7272 = !DILocation(line: 412, column: 45, scope: !7262)
!7273 = !DILocation(line: 413, column: 44, scope: !7262)
!7274 = !DILocation(line: 415, column: 11, scope: !7262)
!7275 = !DILocation(line: 415, column: 9, scope: !7262)
!7276 = !DILocation(line: 417, column: 2, scope: !7262)
!7277 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1124, file: !1124, line: 420, type: !1009, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7278)
!7278 = !{!7279, !7280, !7281, !7282, !7283, !7284}
!7279 = !DILocalVariable(name: "dev", arg: 1, scope: !7277, file: !1124, line: 420, type: !984)
!7280 = !DILocalVariable(name: "mask", arg: 2, scope: !7277, file: !1124, line: 421, type: !1011)
!7281 = !DILocalVariable(name: "value", arg: 3, scope: !7277, file: !1124, line: 422, type: !1006)
!7282 = !DILocalVariable(name: "cfg", scope: !7277, file: !1124, line: 424, type: !7269)
!7283 = !DILocalVariable(name: "gpio", scope: !7277, file: !1124, line: 425, type: !1057)
!7284 = !DILocalVariable(name: "port_value", scope: !7277, file: !1124, line: 426, type: !106)
!7285 = !DILocation(line: 0, scope: !7277)
!7286 = !DILocation(line: 424, column: 45, scope: !7277)
!7287 = !DILocation(line: 425, column: 44, scope: !7277)
!7288 = !DILocation(line: 430, column: 15, scope: !7277)
!7289 = !DILocation(line: 431, column: 46, scope: !7277)
!7290 = !DILocation(line: 431, column: 44, scope: !7277)
!7291 = !DILocation(line: 431, column: 61, scope: !7277)
!7292 = !DILocation(line: 431, column: 53, scope: !7277)
!7293 = !DILocation(line: 431, column: 2, scope: !7277)
!7294 = !DILocation(line: 435, column: 2, scope: !7277)
!7295 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1124, file: !1124, line: 438, type: !1014, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7296)
!7296 = !{!7297, !7298, !7299, !7300}
!7297 = !DILocalVariable(name: "dev", arg: 1, scope: !7295, file: !1124, line: 438, type: !984)
!7298 = !DILocalVariable(name: "pins", arg: 2, scope: !7295, file: !1124, line: 439, type: !1011)
!7299 = !DILocalVariable(name: "cfg", scope: !7295, file: !1124, line: 441, type: !7269)
!7300 = !DILocalVariable(name: "gpio", scope: !7295, file: !1124, line: 442, type: !1057)
!7301 = !DILocation(line: 0, scope: !7295)
!7302 = !DILocation(line: 441, column: 45, scope: !7295)
!7303 = !DILocation(line: 442, column: 44, scope: !7295)
!7304 = !DILocation(line: 448, column: 2, scope: !7295)
!7305 = !DILocation(line: 450, column: 2, scope: !7295)
!7306 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1124, file: !1124, line: 453, type: !1014, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7307)
!7307 = !{!7308, !7309, !7310, !7311}
!7308 = !DILocalVariable(name: "dev", arg: 1, scope: !7306, file: !1124, line: 453, type: !984)
!7309 = !DILocalVariable(name: "pins", arg: 2, scope: !7306, file: !1124, line: 454, type: !1011)
!7310 = !DILocalVariable(name: "cfg", scope: !7306, file: !1124, line: 456, type: !7269)
!7311 = !DILocalVariable(name: "gpio", scope: !7306, file: !1124, line: 457, type: !1057)
!7312 = !DILocation(line: 0, scope: !7306)
!7313 = !DILocation(line: 456, column: 45, scope: !7306)
!7314 = !DILocation(line: 457, column: 44, scope: !7306)
!7315 = !DILocation(line: 467, column: 2, scope: !7306)
!7316 = !DILocation(line: 470, column: 2, scope: !7306)
!7317 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1124, file: !1124, line: 473, type: !1014, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7318)
!7318 = !{!7319, !7320, !7321, !7322}
!7319 = !DILocalVariable(name: "dev", arg: 1, scope: !7317, file: !1124, line: 473, type: !984)
!7320 = !DILocalVariable(name: "pins", arg: 2, scope: !7317, file: !1124, line: 474, type: !1011)
!7321 = !DILocalVariable(name: "cfg", scope: !7317, file: !1124, line: 476, type: !7269)
!7322 = !DILocalVariable(name: "gpio", scope: !7317, file: !1124, line: 477, type: !1057)
!7323 = !DILocation(line: 0, scope: !7317)
!7324 = !DILocation(line: 476, column: 45, scope: !7317)
!7325 = !DILocation(line: 477, column: 44, scope: !7317)
!7326 = !DILocation(line: 484, column: 2, scope: !7317)
!7327 = !DILocation(line: 487, column: 2, scope: !7317)
!7328 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1124, file: !1124, line: 594, type: !1020, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7329)
!7329 = !{!7330, !7331, !7332, !7333, !7334, !7335, !7337, !7338, !7339}
!7330 = !DILocalVariable(name: "dev", arg: 1, scope: !7328, file: !1124, line: 594, type: !984)
!7331 = !DILocalVariable(name: "pin", arg: 2, scope: !7328, file: !1124, line: 595, type: !999)
!7332 = !DILocalVariable(name: "mode", arg: 3, scope: !7328, file: !1124, line: 596, type: !958)
!7333 = !DILocalVariable(name: "trig", arg: 4, scope: !7328, file: !1124, line: 597, type: !964)
!7334 = !DILocalVariable(name: "cfg", scope: !7328, file: !1124, line: 599, type: !7269)
!7335 = !DILocalVariable(name: "data", scope: !7328, file: !1124, line: 600, type: !7336)
!7336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 32)
!7337 = !DILocalVariable(name: "edge", scope: !7328, file: !1124, line: 601, type: !103)
!7338 = !DILocalVariable(name: "err", scope: !7328, file: !1124, line: 602, type: !103)
!7339 = !DILabel(scope: !7328, name: "exit", file: !1124, line: 643)
!7340 = !DILocation(line: 0, scope: !7328)
!7341 = !DILocation(line: 599, column: 45, scope: !7328)
!7342 = !DILocation(line: 604, column: 6, scope: !7328)
!7343 = !DILocation(line: 605, column: 34, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7345, file: !1124, line: 605, column: 7)
!7345 = distinct !DILexicalBlock(scope: !7346, file: !1124, line: 604, column: 38)
!7346 = distinct !DILexicalBlock(scope: !7328, file: !1124, line: 604, column: 6)
!7347 = !DILocation(line: 605, column: 7, scope: !7344)
!7348 = !DILocation(line: 605, column: 47, scope: !7344)
!7349 = !DILocation(line: 605, column: 39, scope: !7344)
!7350 = !DILocation(line: 605, column: 7, scope: !7345)
!7351 = !DILocation(line: 606, column: 4, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7344, file: !1124, line: 605, column: 53)
!7353 = !DILocation(line: 607, column: 4, scope: !7352)
!7354 = !DILocation(line: 608, column: 4, scope: !7352)
!7355 = !DILocation(line: 609, column: 3, scope: !7352)
!7356 = !DILocation(line: 600, column: 38, scope: !7328)
!7357 = !DILocation(line: 620, column: 30, scope: !7358)
!7358 = distinct !DILexicalBlock(scope: !7328, file: !1124, line: 620, column: 6)
!7359 = !DILocation(line: 620, column: 6, scope: !7358)
!7360 = !DILocation(line: 620, column: 57, scope: !7358)
!7361 = !DILocation(line: 620, column: 6, scope: !7328)
!7362 = !DILocation(line: 625, column: 29, scope: !7328)
!7363 = !DILocation(line: 625, column: 2, scope: !7328)
!7364 = !DILocation(line: 627, column: 2, scope: !7328)
!7365 = !DILocation(line: 630, column: 3, scope: !7366)
!7366 = distinct !DILexicalBlock(scope: !7328, file: !1124, line: 627, column: 16)
!7367 = !DILocation(line: 633, column: 3, scope: !7366)
!7368 = !DILocation(line: 636, column: 3, scope: !7366)
!7369 = !DILocation(line: 639, column: 2, scope: !7328)
!7370 = !DILocation(line: 641, column: 2, scope: !7328)
!7371 = !DILocation(line: 643, column: 1, scope: !7328)
!7372 = !DILocation(line: 644, column: 2, scope: !7328)
!7373 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1124, file: !1124, line: 647, type: !1024, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7374)
!7374 = !{!7375, !7376, !7377, !7378}
!7375 = !DILocalVariable(name: "dev", arg: 1, scope: !7373, file: !1124, line: 647, type: !984)
!7376 = !DILocalVariable(name: "callback", arg: 2, scope: !7373, file: !1124, line: 648, type: !1026)
!7377 = !DILocalVariable(name: "set", arg: 3, scope: !7373, file: !1124, line: 649, type: !163)
!7378 = !DILocalVariable(name: "data", scope: !7373, file: !1124, line: 651, type: !7336)
!7379 = !DILocation(line: 0, scope: !7373)
!7380 = !DILocation(line: 651, column: 38, scope: !7373)
!7381 = !DILocation(line: 653, column: 37, scope: !7373)
!7382 = !DILocation(line: 653, column: 9, scope: !7373)
!7383 = !DILocation(line: 653, column: 2, scope: !7373)
!7384 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !7385, file: !7385, line: 38, type: !7386, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7389)
!7385 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7386 = !DISubroutineType(types: !7387)
!7387 = !{!103, !7388, !1026, !163}
!7388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 32)
!7389 = !{!7390, !7391, !7392}
!7390 = !DILocalVariable(name: "callbacks", arg: 1, scope: !7384, file: !7385, line: 38, type: !7388)
!7391 = !DILocalVariable(name: "callback", arg: 2, scope: !7384, file: !7385, line: 39, type: !1026)
!7392 = !DILocalVariable(name: "set", arg: 3, scope: !7384, file: !7385, line: 40, type: !163)
!7393 = !DILocation(line: 0, scope: !7384)
!7394 = !DILocation(line: 45, column: 7, scope: !7395)
!7395 = distinct !DILexicalBlock(scope: !7384, file: !7385, line: 45, column: 6)
!7396 = !DILocation(line: 45, column: 6, scope: !7384)
!7397 = !DILocation(line: 46, column: 56, scope: !7398)
!7398 = distinct !DILexicalBlock(scope: !7399, file: !7385, line: 46, column: 7)
!7399 = distinct !DILexicalBlock(scope: !7395, file: !7385, line: 45, column: 38)
!7400 = !DILocation(line: 46, column: 8, scope: !7398)
!7401 = !DILocation(line: 46, column: 7, scope: !7399)
!7402 = !DILocation(line: 51, column: 13, scope: !7395)
!7403 = !DILocation(line: 56, column: 43, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7405, file: !7385, line: 55, column: 11)
!7405 = distinct !DILexicalBlock(scope: !7384, file: !7385, line: 55, column: 6)
!7406 = !DILocation(line: 56, column: 3, scope: !7404)
!7407 = !DILocation(line: 57, column: 2, scope: !7404)
!7408 = !DILocation(line: 60, column: 1, scope: !7384)
!7409 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1031, file: !1031, line: 261, type: !7410, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7412)
!7410 = !DISubroutineType(types: !7411)
!7411 = !{!163, !7388}
!7412 = !{!7413}
!7413 = !DILocalVariable(name: "list", arg: 1, scope: !7409, file: !1031, line: 261, type: !7388)
!7414 = !DILocation(line: 0, scope: !7409)
!7415 = !DILocation(line: 261, column: 1, scope: !7409)
!7416 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1031, file: !1031, line: 417, type: !7417, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7419)
!7417 = !DISubroutineType(types: !7418)
!7418 = !{!163, !7388, !1200}
!7419 = !{!7420, !7421, !7422, !7423}
!7420 = !DILocalVariable(name: "list", arg: 1, scope: !7416, file: !1031, line: 417, type: !7388)
!7421 = !DILocalVariable(name: "node", arg: 2, scope: !7416, file: !1031, line: 417, type: !1200)
!7422 = !DILocalVariable(name: "prev", scope: !7416, file: !1031, line: 417, type: !1200)
!7423 = !DILocalVariable(name: "test", scope: !7416, file: !1031, line: 417, type: !1200)
!7424 = !DILocation(line: 0, scope: !7416)
!7425 = !DILocation(line: 417, column: 1, scope: !7426)
!7426 = distinct !DILexicalBlock(scope: !7416, file: !1031, line: 417, column: 1)
!7427 = !DILocation(line: 417, column: 1, scope: !7428)
!7428 = distinct !DILexicalBlock(scope: !7426, file: !1031, line: 417, column: 1)
!7429 = !DILocation(line: 417, column: 1, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !7431, file: !1031, line: 417, column: 1)
!7431 = distinct !DILexicalBlock(scope: !7428, file: !1031, line: 417, column: 1)
!7432 = !DILocation(line: 417, column: 1, scope: !7431)
!7433 = distinct !{!7433, !7425, !7425}
!7434 = !DILocation(line: 417, column: 1, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !7430, file: !1031, line: 417, column: 1)
!7436 = !DILocation(line: 417, column: 1, scope: !7416)
!7437 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1031, file: !1031, line: 298, type: !7438, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7440)
!7438 = !DISubroutineType(types: !7439)
!7439 = !{null, !7388, !1200}
!7440 = !{!7441, !7442}
!7441 = !DILocalVariable(name: "list", arg: 1, scope: !7437, file: !1031, line: 298, type: !7388)
!7442 = !DILocalVariable(name: "node", arg: 2, scope: !7437, file: !1031, line: 298, type: !1200)
!7443 = !DILocation(line: 0, scope: !7437)
!7444 = !DILocation(line: 298, column: 1, scope: !7437)
!7445 = !DILocation(line: 298, column: 1, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7437, file: !1031, line: 298, column: 1)
!7447 = !DILocation(line: 298, column: 1, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !7446, file: !1031, line: 298, column: 1)
!7449 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1031, file: !1031, line: 231, type: !7450, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7452)
!7450 = !DISubroutineType(types: !7451)
!7451 = !{!1200, !7388}
!7452 = !{!7453}
!7453 = !DILocalVariable(name: "list", arg: 1, scope: !7449, file: !1031, line: 231, type: !7388)
!7454 = !DILocation(line: 0, scope: !7449)
!7455 = !DILocation(line: 233, column: 15, scope: !7449)
!7456 = !DILocation(line: 233, column: 2, scope: !7449)
!7457 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1031, file: !1031, line: 209, type: !7458, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7460)
!7458 = !DISubroutineType(types: !7459)
!7459 = !{null, !1200, !1200}
!7460 = !{!7461, !7462}
!7461 = !DILocalVariable(name: "parent", arg: 1, scope: !7457, file: !1031, line: 209, type: !1200)
!7462 = !DILocalVariable(name: "child", arg: 2, scope: !7457, file: !1031, line: 209, type: !1200)
!7463 = !DILocation(line: 0, scope: !7457)
!7464 = !DILocation(line: 211, column: 10, scope: !7457)
!7465 = !DILocation(line: 211, column: 15, scope: !7457)
!7466 = !DILocation(line: 212, column: 1, scope: !7457)
!7467 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1031, file: !1031, line: 214, type: !7438, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7468)
!7468 = !{!7469, !7470}
!7469 = !DILocalVariable(name: "list", arg: 1, scope: !7467, file: !1031, line: 214, type: !7388)
!7470 = !DILocalVariable(name: "node", arg: 2, scope: !7467, file: !1031, line: 214, type: !1200)
!7471 = !DILocation(line: 0, scope: !7467)
!7472 = !DILocation(line: 216, column: 8, scope: !7467)
!7473 = !DILocation(line: 216, column: 13, scope: !7467)
!7474 = !DILocation(line: 217, column: 1, scope: !7467)
!7475 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1031, file: !1031, line: 243, type: !7450, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7476)
!7476 = !{!7477}
!7477 = !DILocalVariable(name: "list", arg: 1, scope: !7475, file: !1031, line: 243, type: !7388)
!7478 = !DILocation(line: 0, scope: !7475)
!7479 = !DILocation(line: 245, column: 15, scope: !7475)
!7480 = !DILocation(line: 245, column: 2, scope: !7475)
!7481 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1031, file: !1031, line: 219, type: !7438, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7482)
!7482 = !{!7483, !7484}
!7483 = !DILocalVariable(name: "list", arg: 1, scope: !7481, file: !1031, line: 219, type: !7388)
!7484 = !DILocalVariable(name: "node", arg: 2, scope: !7481, file: !1031, line: 219, type: !1200)
!7485 = !DILocation(line: 0, scope: !7481)
!7486 = !DILocation(line: 221, column: 8, scope: !7481)
!7487 = !DILocation(line: 221, column: 13, scope: !7481)
!7488 = !DILocation(line: 222, column: 1, scope: !7481)
!7489 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1031, file: !1031, line: 401, type: !7490, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7492)
!7490 = !DISubroutineType(types: !7491)
!7491 = !{null, !7388, !1200, !1200}
!7492 = !{!7493, !7494, !7495}
!7493 = !DILocalVariable(name: "list", arg: 1, scope: !7489, file: !1031, line: 401, type: !7388)
!7494 = !DILocalVariable(name: "prev_node", arg: 2, scope: !7489, file: !1031, line: 401, type: !1200)
!7495 = !DILocalVariable(name: "node", arg: 3, scope: !7489, file: !1031, line: 401, type: !1200)
!7496 = !DILocation(line: 0, scope: !7489)
!7497 = !DILocation(line: 401, column: 1, scope: !7498)
!7498 = distinct !DILexicalBlock(scope: !7489, file: !1031, line: 401, column: 1)
!7499 = !DILocation(line: 0, scope: !7498)
!7500 = !DILocation(line: 401, column: 1, scope: !7489)
!7501 = !DILocation(line: 401, column: 1, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !7498, file: !1031, line: 401, column: 1)
!7503 = !DILocation(line: 401, column: 1, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7502, file: !1031, line: 401, column: 1)
!7505 = !DILocation(line: 401, column: 1, scope: !7506)
!7506 = distinct !DILexicalBlock(scope: !7504, file: !1031, line: 401, column: 1)
!7507 = !DILocation(line: 401, column: 1, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7498, file: !1031, line: 401, column: 1)
!7509 = !DILocation(line: 401, column: 1, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7508, file: !1031, line: 401, column: 1)
!7511 = !DILocation(line: 401, column: 1, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7510, file: !1031, line: 401, column: 1)
!7513 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1031, file: !1031, line: 285, type: !7514, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7516)
!7514 = !DISubroutineType(types: !7515)
!7515 = !{!1200, !1200}
!7516 = !{!7517}
!7517 = !DILocalVariable(name: "node", arg: 1, scope: !7513, file: !1031, line: 285, type: !1200)
!7518 = !DILocation(line: 0, scope: !7513)
!7519 = !DILocation(line: 285, column: 1, scope: !7513)
!7520 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1031, file: !1031, line: 274, type: !7514, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7521)
!7521 = !{!7522}
!7522 = !DILocalVariable(name: "node", arg: 1, scope: !7520, file: !1031, line: 274, type: !1200)
!7523 = !DILocation(line: 0, scope: !7520)
!7524 = !DILocation(line: 274, column: 1, scope: !7520)
!7525 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1031, file: !1031, line: 204, type: !7514, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7526)
!7526 = !{!7527}
!7527 = !DILocalVariable(name: "node", arg: 1, scope: !7525, file: !1031, line: 204, type: !1200)
!7528 = !DILocation(line: 0, scope: !7525)
!7529 = !DILocation(line: 206, column: 15, scope: !7525)
!7530 = !DILocation(line: 206, column: 2, scope: !7525)
!7531 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1124, file: !1124, line: 342, type: !114, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7532)
!7532 = !{!7533, !7534, !7535}
!7533 = !DILocalVariable(name: "pin", arg: 1, scope: !7531, file: !1124, line: 342, type: !103)
!7534 = !DILocalVariable(name: "line", scope: !7531, file: !1124, line: 344, type: !106)
!7535 = !DILocalVariable(name: "port", scope: !7531, file: !1124, line: 345, type: !103)
!7536 = !DILocation(line: 0, scope: !7531)
!7537 = !DILocation(line: 344, column: 18, scope: !7531)
!7538 = !{i32 983040, i32 0}
!7539 = !DILocation(line: 356, column: 9, scope: !7531)
!7540 = !DILocation(line: 370, column: 2, scope: !7531)
!7541 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1124, file: !1124, line: 37, type: !719, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7542)
!7542 = !{!7543, !7544, !7545}
!7543 = !DILocalVariable(name: "line", arg: 1, scope: !7541, file: !1124, line: 37, type: !103)
!7544 = !DILocalVariable(name: "arg", arg: 2, scope: !7541, file: !1124, line: 37, type: !102)
!7545 = !DILocalVariable(name: "data", scope: !7541, file: !1124, line: 39, type: !7336)
!7546 = !DILocation(line: 0, scope: !7541)
!7547 = !DILocation(line: 41, column: 29, scope: !7541)
!7548 = !DILocation(line: 41, column: 39, scope: !7541)
!7549 = !DILocation(line: 41, column: 44, scope: !7541)
!7550 = !DILocation(line: 41, column: 2, scope: !7541)
!7551 = !DILocation(line: 42, column: 1, scope: !7541)
!7552 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1124, file: !1124, line: 376, type: !7553, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7555)
!7553 = !DISubroutineType(types: !7554)
!7554 = !{!103, !103, !103}
!7555 = !{!7556, !7557, !7558, !7560, !7561}
!7556 = !DILocalVariable(name: "port", arg: 1, scope: !7552, file: !1124, line: 376, type: !103)
!7557 = !DILocalVariable(name: "pin", arg: 2, scope: !7552, file: !1124, line: 376, type: !103)
!7558 = !DILocalVariable(name: "clk", scope: !7552, file: !1124, line: 386, type: !7559)
!7559 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !984)
!7560 = !DILocalVariable(name: "pclken", scope: !7552, file: !1124, line: 387, type: !1247)
!7561 = !DILocalVariable(name: "ret", scope: !7552, file: !1124, line: 396, type: !103)
!7562 = !DILocation(line: 0, scope: !7552)
!7563 = !DILocation(line: 387, column: 2, scope: !7552)
!7564 = !DILocation(line: 387, column: 22, scope: !7552)
!7565 = !DILocation(line: 399, column: 8, scope: !7552)
!7566 = !DILocation(line: 400, column: 10, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7552, file: !1124, line: 400, column: 6)
!7568 = !DILocation(line: 400, column: 6, scope: !7552)
!7569 = !DILocation(line: 405, column: 2, scope: !7552)
!7570 = !DILocation(line: 407, column: 2, scope: !7552)
!7571 = !DILocation(line: 408, column: 1, scope: !7552)
!7572 = distinct !DISubprogram(name: "clock_control_on", scope: !217, file: !217, line: 123, type: !1089, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7573)
!7573 = !{!7574, !7575, !7576}
!7574 = !DILocalVariable(name: "dev", arg: 1, scope: !7572, file: !217, line: 123, type: !984)
!7575 = !DILocalVariable(name: "sys", arg: 2, scope: !7572, file: !217, line: 124, type: !225)
!7576 = !DILocalVariable(name: "api", scope: !7572, file: !217, line: 126, type: !1082)
!7577 = !DILocation(line: 0, scope: !7572)
!7578 = !DILocation(line: 127, column: 49, scope: !7572)
!7579 = !DILocation(line: 129, column: 14, scope: !7572)
!7580 = !DILocation(line: 129, column: 9, scope: !7572)
!7581 = !DILocation(line: 129, column: 2, scope: !7572)
!7582 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1124, file: !1124, line: 311, type: !6702, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7583)
!7583 = !{!7584, !7585, !7586}
!7584 = !DILocalVariable(name: "port", arg: 1, scope: !7582, file: !1124, line: 311, type: !103)
!7585 = !DILocalVariable(name: "pin", arg: 2, scope: !7582, file: !1124, line: 311, type: !103)
!7586 = !DILocalVariable(name: "line", scope: !7582, file: !1124, line: 313, type: !106)
!7587 = !DILocation(line: 0, scope: !7582)
!7588 = !DILocation(line: 313, column: 18, scope: !7582)
!7589 = !DILocation(line: 337, column: 2, scope: !7582)
!7590 = !DILocation(line: 340, column: 1, scope: !7582)
!7591 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1124, file: !1124, line: 295, type: !7592, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7594)
!7592 = !DISubroutineType(types: !7593)
!7593 = !{!106, !103}
!7594 = !{!7595}
!7595 = !DILocalVariable(name: "pin", arg: 1, scope: !7591, file: !1124, line: 295, type: !103)
!7596 = !DILocation(line: 0, scope: !7591)
!7597 = !DILocation(line: 307, column: 46, scope: !7591)
!7598 = !DILocation(line: 307, column: 27, scope: !7591)
!7599 = !DILocation(line: 307, column: 32, scope: !7591)
!7600 = !DILocation(line: 307, column: 14, scope: !7591)
!7601 = !DILocation(line: 307, column: 39, scope: !7591)
!7602 = !DILocation(line: 307, column: 2, scope: !7591)
!7603 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !4682, file: !4682, line: 671, type: !7604, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7606)
!7604 = !DISubroutineType(types: !7605)
!7605 = !{null, !106, !106}
!7606 = !{!7607, !7608}
!7607 = !DILocalVariable(name: "Port", arg: 1, scope: !7603, file: !4682, line: 671, type: !106)
!7608 = !DILocalVariable(name: "Line", arg: 2, scope: !7603, file: !4682, line: 671, type: !106)
!7609 = !DILocation(line: 0, scope: !7603)
!7610 = !DILocation(line: 673, column: 3, scope: !7603)
!7611 = !DILocalVariable(name: "value", arg: 1, scope: !7612, file: !4910, line: 373, type: !106)
!7612 = distinct !DISubprogram(name: "__RBIT", scope: !4910, file: !4910, line: 373, type: !5916, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7613)
!7613 = !{!7611, !7614}
!7614 = !DILocalVariable(name: "result", scope: !7612, file: !4910, line: 375, type: !106)
!7615 = !DILocation(line: 0, scope: !7612, inlinedAt: !7616)
!7616 = distinct !DILocation(line: 673, column: 3, scope: !7603)
!7617 = !DILocation(line: 380, column: 4, scope: !7612, inlinedAt: !7616)
!7618 = !{i64 3545660}
!7619 = !DILocalVariable(name: "value", arg: 1, scope: !7620, file: !4910, line: 403, type: !106)
!7620 = distinct !DISubprogram(name: "__CLZ", scope: !4910, file: !4910, line: 403, type: !7621, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7623)
!7621 = !DISubroutineType(types: !7622)
!7622 = !{!160, !106}
!7623 = !{!7619}
!7624 = !DILocation(line: 0, scope: !7620, inlinedAt: !7625)
!7625 = distinct !DILocation(line: 673, column: 3, scope: !7603)
!7626 = !DILocation(line: 414, column: 7, scope: !7620, inlinedAt: !7625)
!7627 = !DILocation(line: 674, column: 1, scope: !7603)
!7628 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !7385, file: !7385, line: 69, type: !7629, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7631)
!7629 = !DISubroutineType(types: !7630)
!7630 = !{null, !7388, !984, !106}
!7631 = !{!7632, !7633, !7634, !7635, !7636}
!7632 = !DILocalVariable(name: "list", arg: 1, scope: !7628, file: !7385, line: 69, type: !7388)
!7633 = !DILocalVariable(name: "port", arg: 2, scope: !7628, file: !7385, line: 70, type: !984)
!7634 = !DILocalVariable(name: "pins", arg: 3, scope: !7628, file: !7385, line: 71, type: !106)
!7635 = !DILocalVariable(name: "cb", scope: !7628, file: !7385, line: 73, type: !1026)
!7636 = !DILocalVariable(name: "tmp", scope: !7628, file: !7385, line: 73, type: !1026)
!7637 = !DILocation(line: 0, scope: !7628)
!7638 = !DILocation(line: 75, column: 2, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7628, file: !7385, line: 75, column: 2)
!7640 = !DILocation(line: 0, scope: !7639)
!7641 = !DILocation(line: 76, column: 11, scope: !7642)
!7642 = distinct !DILexicalBlock(scope: !7643, file: !7385, line: 76, column: 7)
!7643 = distinct !DILexicalBlock(scope: !7644, file: !7385, line: 75, column: 57)
!7644 = distinct !DILexicalBlock(scope: !7639, file: !7385, line: 75, column: 2)
!7645 = !DILocation(line: 76, column: 20, scope: !7642)
!7646 = !DILocation(line: 76, column: 7, scope: !7643)
!7647 = !DILocation(line: 78, column: 8, scope: !7648)
!7648 = distinct !DILexicalBlock(scope: !7642, file: !7385, line: 76, column: 28)
!7649 = !DILocation(line: 78, column: 4, scope: !7648)
!7650 = !DILocation(line: 79, column: 3, scope: !7648)
!7651 = !DILocation(line: 75, column: 2, scope: !7644)
!7652 = !DILocation(line: 81, column: 1, scope: !7628)
!7653 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !4682, file: !4682, line: 710, type: !5916, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7654)
!7654 = !{!7655}
!7655 = !DILocalVariable(name: "Line", arg: 1, scope: !7653, file: !4682, line: 710, type: !106)
!7656 = !DILocation(line: 0, scope: !7653)
!7657 = !DILocation(line: 712, column: 21, scope: !7653)
!7658 = !DILocation(line: 0, scope: !7612, inlinedAt: !7659)
!7659 = distinct !DILocation(line: 712, column: 76, scope: !7653)
!7660 = !DILocation(line: 380, column: 4, scope: !7612, inlinedAt: !7659)
!7661 = !DILocation(line: 0, scope: !7620, inlinedAt: !7662)
!7662 = distinct !DILocation(line: 712, column: 76, scope: !7653)
!7663 = !DILocation(line: 414, column: 7, scope: !7620, inlinedAt: !7662)
!7664 = !DILocation(line: 712, column: 73, scope: !7653)
!7665 = !DILocation(line: 712, column: 3, scope: !7653)
!7666 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !7667, file: !7667, line: 910, type: !7668, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7670)
!7667 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7668 = !DISubroutineType(types: !7669)
!7669 = !{null, !1057, !106}
!7670 = !{!7671, !7672}
!7671 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7666, file: !7667, line: 910, type: !1057)
!7672 = !DILocalVariable(name: "PinMask", arg: 2, scope: !7666, file: !7667, line: 910, type: !106)
!7673 = !DILocation(line: 0, scope: !7666)
!7674 = !DILocation(line: 912, column: 3, scope: !7666)
!7675 = !DILocation(line: 913, column: 1, scope: !7666)
!7676 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !7667, file: !7667, line: 823, type: !7677, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7679)
!7677 = !DISubroutineType(types: !7678)
!7678 = !{!106, !1057}
!7679 = !{!7680}
!7680 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7676, file: !7667, line: 823, type: !1057)
!7681 = !DILocation(line: 0, scope: !7676)
!7682 = !DILocation(line: 825, column: 21, scope: !7676)
!7683 = !DILocation(line: 825, column: 3, scope: !7676)
!7684 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !7667, file: !7667, line: 812, type: !7668, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7685)
!7685 = !{!7686, !7687}
!7686 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7684, file: !7667, line: 812, type: !1057)
!7687 = !DILocalVariable(name: "PortValue", arg: 2, scope: !7684, file: !7667, line: 812, type: !106)
!7688 = !DILocation(line: 0, scope: !7684)
!7689 = !DILocation(line: 814, column: 3, scope: !7684)
!7690 = !DILocation(line: 815, column: 1, scope: !7684)
!7691 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !7667, file: !7667, line: 771, type: !7677, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7692)
!7692 = !{!7693}
!7693 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7691, file: !7667, line: 771, type: !1057)
!7694 = !DILocation(line: 0, scope: !7691)
!7695 = !DILocation(line: 773, column: 21, scope: !7691)
!7696 = !DILocation(line: 773, column: 3, scope: !7691)
!7697 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1124, file: !1124, line: 47, type: !7698, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7700)
!7698 = !DISubroutineType(types: !7699)
!7699 = !{!103, !1000, !2314}
!7700 = !{!7701, !7702}
!7701 = !DILocalVariable(name: "flags", arg: 1, scope: !7697, file: !1124, line: 47, type: !1000)
!7702 = !DILocalVariable(name: "pincfg", arg: 2, scope: !7697, file: !1124, line: 47, type: !2314)
!7703 = !DILocation(line: 0, scope: !7697)
!7704 = !DILocation(line: 50, column: 13, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7697, file: !1124, line: 50, column: 6)
!7706 = !DILocation(line: 50, column: 28, scope: !7705)
!7707 = !DILocation(line: 50, column: 6, scope: !7697)
!7708 = !DILocation(line: 53, column: 11, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7705, file: !1124, line: 50, column: 34)
!7710 = !DILocation(line: 55, column: 14, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7709, file: !1124, line: 55, column: 7)
!7712 = !DILocation(line: 55, column: 35, scope: !7711)
!7713 = !DILocation(line: 55, column: 7, scope: !7709)
!7714 = !DILocation(line: 56, column: 14, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7716, file: !1124, line: 56, column: 8)
!7716 = distinct !DILexicalBlock(scope: !7711, file: !1124, line: 55, column: 41)
!7717 = !DILocation(line: 56, column: 8, scope: !7716)
!7718 = !DILocation(line: 0, scope: !7711)
!7719 = !DILocation(line: 66, column: 14, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7709, file: !1124, line: 66, column: 7)
!7721 = !DILocation(line: 66, column: 30, scope: !7720)
!7722 = !DILocation(line: 66, column: 7, scope: !7709)
!7723 = !DILocation(line: 67, column: 12, scope: !7724)
!7724 = distinct !DILexicalBlock(scope: !7720, file: !1124, line: 66, column: 36)
!7725 = !DILocation(line: 68, column: 3, scope: !7724)
!7726 = !DILocation(line: 68, column: 21, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7720, file: !1124, line: 68, column: 14)
!7728 = !DILocation(line: 68, column: 39, scope: !7727)
!7729 = !DILocation(line: 68, column: 14, scope: !7720)
!7730 = !DILocation(line: 69, column: 12, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !7727, file: !1124, line: 68, column: 45)
!7732 = !DILocation(line: 70, column: 3, scope: !7731)
!7733 = !DILocation(line: 72, column: 21, scope: !7734)
!7734 = distinct !DILexicalBlock(scope: !7705, file: !1124, line: 72, column: 14)
!7735 = !DILocation(line: 72, column: 35, scope: !7734)
!7736 = !DILocation(line: 72, column: 14, scope: !7705)
!7737 = !DILocation(line: 77, column: 14, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7739, file: !1124, line: 77, column: 7)
!7739 = distinct !DILexicalBlock(scope: !7734, file: !1124, line: 72, column: 41)
!7740 = !DILocation(line: 77, column: 30, scope: !7738)
!7741 = !DILocation(line: 77, column: 7, scope: !7739)
!7742 = !DILocation(line: 0, scope: !7705)
!7743 = !DILocation(line: 90, column: 1, scope: !7697)
!7744 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1124, file: !1124, line: 157, type: !7745, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7747)
!7745 = !DISubroutineType(types: !7746)
!7746 = !{null, !984, !103, !103, !103}
!7747 = !{!7748, !7749, !7750, !7751, !7752, !7753, !7754, !7755, !7756, !7757, !7758}
!7748 = !DILocalVariable(name: "dev", arg: 1, scope: !7744, file: !1124, line: 157, type: !984)
!7749 = !DILocalVariable(name: "pin", arg: 2, scope: !7744, file: !1124, line: 157, type: !103)
!7750 = !DILocalVariable(name: "conf", arg: 3, scope: !7744, file: !1124, line: 158, type: !103)
!7751 = !DILocalVariable(name: "func", arg: 4, scope: !7744, file: !1124, line: 158, type: !103)
!7752 = !DILocalVariable(name: "cfg", scope: !7744, file: !1124, line: 160, type: !7269)
!7753 = !DILocalVariable(name: "gpio", scope: !7744, file: !1124, line: 161, type: !1057)
!7754 = !DILocalVariable(name: "pin_ll", scope: !7744, file: !1124, line: 163, type: !103)
!7755 = !DILocalVariable(name: "mode", scope: !7744, file: !1124, line: 227, type: !32)
!7756 = !DILocalVariable(name: "otype", scope: !7744, file: !1124, line: 227, type: !32)
!7757 = !DILocalVariable(name: "ospeed", scope: !7744, file: !1124, line: 227, type: !32)
!7758 = !DILocalVariable(name: "pupd", scope: !7744, file: !1124, line: 227, type: !32)
!7759 = !DILocation(line: 0, scope: !7744)
!7760 = !DILocation(line: 160, column: 45, scope: !7744)
!7761 = !DILocation(line: 161, column: 44, scope: !7744)
!7762 = !DILocation(line: 163, column: 15, scope: !7744)
!7763 = !DILocation(line: 229, column: 14, scope: !7744)
!7764 = !DILocation(line: 246, column: 47, scope: !7744)
!7765 = !DILocation(line: 246, column: 2, scope: !7744)
!7766 = !DILocation(line: 248, column: 43, scope: !7744)
!7767 = !DILocation(line: 248, column: 2, scope: !7744)
!7768 = !DILocation(line: 250, column: 40, scope: !7744)
!7769 = !DILocation(line: 250, column: 2, scope: !7744)
!7770 = !DILocation(line: 252, column: 11, scope: !7771)
!7771 = distinct !DILexicalBlock(scope: !7744, file: !1124, line: 252, column: 6)
!7772 = !DILocation(line: 252, column: 6, scope: !7744)
!7773 = !DILocation(line: 253, column: 11, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7775, file: !1124, line: 253, column: 7)
!7775 = distinct !DILexicalBlock(scope: !7771, file: !1124, line: 252, column: 36)
!7776 = !DILocation(line: 253, column: 7, scope: !7775)
!7777 = !DILocation(line: 254, column: 4, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7774, file: !1124, line: 253, column: 16)
!7779 = !DILocation(line: 255, column: 3, scope: !7778)
!7780 = !DILocation(line: 256, column: 4, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !7774, file: !1124, line: 255, column: 10)
!7782 = !DILocation(line: 260, column: 40, scope: !7744)
!7783 = !DILocation(line: 260, column: 2, scope: !7744)
!7784 = !DILocation(line: 265, column: 1, scope: !7744)
!7785 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1124, file: !1124, line: 137, type: !7592, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7786)
!7786 = !{!7787, !7788}
!7787 = !DILocalVariable(name: "pin", arg: 1, scope: !7785, file: !1124, line: 137, type: !103)
!7788 = !DILocalVariable(name: "pinval", scope: !7785, file: !1124, line: 139, type: !106)
!7789 = !DILocation(line: 0, scope: !7785)
!7790 = !DILocation(line: 149, column: 13, scope: !7785)
!7791 = !DILocation(line: 151, column: 2, scope: !7785)
!7792 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !7667, file: !7667, line: 342, type: !7793, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7795)
!7793 = !DISubroutineType(types: !7794)
!7794 = !{null, !1057, !106, !106}
!7795 = !{!7796, !7797, !7798}
!7796 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7792, file: !7667, line: 342, type: !1057)
!7797 = !DILocalVariable(name: "PinMask", arg: 2, scope: !7792, file: !7667, line: 342, type: !106)
!7798 = !DILocalVariable(name: "OutputType", arg: 3, scope: !7792, file: !7667, line: 342, type: !106)
!7799 = !DILocation(line: 0, scope: !7792)
!7800 = !DILocation(line: 344, column: 3, scope: !7792)
!7801 = !DILocation(line: 345, column: 1, scope: !7792)
!7802 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !7667, file: !7667, line: 413, type: !7793, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7803)
!7803 = !{!7804, !7805, !7806}
!7804 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7802, file: !7667, line: 413, type: !1057)
!7805 = !DILocalVariable(name: "Pin", arg: 2, scope: !7802, file: !7667, line: 413, type: !106)
!7806 = !DILocalVariable(name: "Speed", arg: 3, scope: !7802, file: !7667, line: 413, type: !106)
!7807 = !DILocation(line: 0, scope: !7802)
!7808 = !DILocation(line: 415, column: 3, scope: !7802)
!7809 = !DILocation(line: 0, scope: !7612, inlinedAt: !7810)
!7810 = distinct !DILocation(line: 415, column: 3, scope: !7802)
!7811 = !DILocation(line: 380, column: 4, scope: !7612, inlinedAt: !7810)
!7812 = !DILocation(line: 0, scope: !7620, inlinedAt: !7813)
!7813 = distinct !DILocation(line: 415, column: 3, scope: !7802)
!7814 = !DILocation(line: 414, column: 7, scope: !7620, inlinedAt: !7813)
!7815 = !DILocation(line: 0, scope: !7612, inlinedAt: !7816)
!7816 = distinct !DILocation(line: 415, column: 3, scope: !7802)
!7817 = !DILocation(line: 0, scope: !7620, inlinedAt: !7818)
!7818 = distinct !DILocation(line: 415, column: 3, scope: !7802)
!7819 = !DILocation(line: 417, column: 1, scope: !7802)
!7820 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !7667, file: !7667, line: 484, type: !7793, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7821)
!7821 = !{!7822, !7823, !7824}
!7822 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7820, file: !7667, line: 484, type: !1057)
!7823 = !DILocalVariable(name: "Pin", arg: 2, scope: !7820, file: !7667, line: 484, type: !106)
!7824 = !DILocalVariable(name: "Pull", arg: 3, scope: !7820, file: !7667, line: 484, type: !106)
!7825 = !DILocation(line: 0, scope: !7820)
!7826 = !DILocation(line: 486, column: 3, scope: !7820)
!7827 = !DILocation(line: 0, scope: !7612, inlinedAt: !7828)
!7828 = distinct !DILocation(line: 486, column: 3, scope: !7820)
!7829 = !DILocation(line: 380, column: 4, scope: !7612, inlinedAt: !7828)
!7830 = !DILocation(line: 0, scope: !7620, inlinedAt: !7831)
!7831 = distinct !DILocation(line: 486, column: 3, scope: !7820)
!7832 = !DILocation(line: 414, column: 7, scope: !7620, inlinedAt: !7831)
!7833 = !DILocation(line: 0, scope: !7612, inlinedAt: !7834)
!7834 = distinct !DILocation(line: 486, column: 3, scope: !7820)
!7835 = !DILocation(line: 0, scope: !7620, inlinedAt: !7836)
!7836 = distinct !DILocation(line: 486, column: 3, scope: !7820)
!7837 = !DILocation(line: 487, column: 1, scope: !7820)
!7838 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !7667, file: !7667, line: 556, type: !7793, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7839)
!7839 = !{!7840, !7841, !7842}
!7840 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7838, file: !7667, line: 556, type: !1057)
!7841 = !DILocalVariable(name: "Pin", arg: 2, scope: !7838, file: !7667, line: 556, type: !106)
!7842 = !DILocalVariable(name: "Alternate", arg: 3, scope: !7838, file: !7667, line: 556, type: !106)
!7843 = !DILocation(line: 0, scope: !7838)
!7844 = !DILocation(line: 558, column: 3, scope: !7838)
!7845 = !DILocation(line: 0, scope: !7612, inlinedAt: !7846)
!7846 = distinct !DILocation(line: 558, column: 3, scope: !7838)
!7847 = !DILocation(line: 380, column: 4, scope: !7612, inlinedAt: !7846)
!7848 = !DILocation(line: 0, scope: !7620, inlinedAt: !7849)
!7849 = distinct !DILocation(line: 558, column: 3, scope: !7838)
!7850 = !DILocation(line: 414, column: 7, scope: !7620, inlinedAt: !7849)
!7851 = !DILocation(line: 0, scope: !7612, inlinedAt: !7852)
!7852 = distinct !DILocation(line: 558, column: 3, scope: !7838)
!7853 = !DILocation(line: 0, scope: !7620, inlinedAt: !7854)
!7854 = distinct !DILocation(line: 558, column: 3, scope: !7838)
!7855 = !DILocation(line: 560, column: 1, scope: !7838)
!7856 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !7667, file: !7667, line: 633, type: !7793, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7857)
!7857 = !{!7858, !7859, !7860}
!7858 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7856, file: !7667, line: 633, type: !1057)
!7859 = !DILocalVariable(name: "Pin", arg: 2, scope: !7856, file: !7667, line: 633, type: !106)
!7860 = !DILocalVariable(name: "Alternate", arg: 3, scope: !7856, file: !7667, line: 633, type: !106)
!7861 = !DILocation(line: 0, scope: !7856)
!7862 = !DILocation(line: 635, column: 3, scope: !7856)
!7863 = !DILocation(line: 0, scope: !7612, inlinedAt: !7864)
!7864 = distinct !DILocation(line: 635, column: 3, scope: !7856)
!7865 = !DILocation(line: 380, column: 4, scope: !7612, inlinedAt: !7864)
!7866 = !DILocation(line: 0, scope: !7620, inlinedAt: !7867)
!7867 = distinct !DILocation(line: 635, column: 3, scope: !7856)
!7868 = !DILocation(line: 414, column: 7, scope: !7620, inlinedAt: !7867)
!7869 = !DILocation(line: 0, scope: !7612, inlinedAt: !7870)
!7870 = distinct !DILocation(line: 635, column: 3, scope: !7856)
!7871 = !DILocation(line: 0, scope: !7620, inlinedAt: !7872)
!7872 = distinct !DILocation(line: 635, column: 3, scope: !7856)
!7873 = !DILocation(line: 637, column: 1, scope: !7856)
!7874 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !7667, file: !7667, line: 273, type: !7793, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7875)
!7875 = !{!7876, !7877, !7878}
!7876 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7874, file: !7667, line: 273, type: !1057)
!7877 = !DILocalVariable(name: "Pin", arg: 2, scope: !7874, file: !7667, line: 273, type: !106)
!7878 = !DILocalVariable(name: "Mode", arg: 3, scope: !7874, file: !7667, line: 273, type: !106)
!7879 = !DILocation(line: 0, scope: !7874)
!7880 = !DILocation(line: 275, column: 3, scope: !7874)
!7881 = !DILocation(line: 0, scope: !7612, inlinedAt: !7882)
!7882 = distinct !DILocation(line: 275, column: 3, scope: !7874)
!7883 = !DILocation(line: 380, column: 4, scope: !7612, inlinedAt: !7882)
!7884 = !DILocation(line: 0, scope: !7620, inlinedAt: !7885)
!7885 = distinct !DILocation(line: 275, column: 3, scope: !7874)
!7886 = !DILocation(line: 414, column: 7, scope: !7620, inlinedAt: !7885)
!7887 = !DILocation(line: 0, scope: !7612, inlinedAt: !7888)
!7888 = distinct !DILocation(line: 275, column: 3, scope: !7874)
!7889 = !DILocation(line: 0, scope: !7620, inlinedAt: !7890)
!7890 = distinct !DILocation(line: 275, column: 3, scope: !7874)
!7891 = !DILocation(line: 276, column: 1, scope: !7874)
!7892 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1124, file: !1124, line: 698, type: !1137, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7893)
!7893 = !{!7894, !7895, !7896}
!7894 = !DILocalVariable(name: "dev", arg: 1, scope: !7892, file: !1124, line: 698, type: !984)
!7895 = !DILocalVariable(name: "data", scope: !7892, file: !1124, line: 700, type: !7336)
!7896 = !DILocalVariable(name: "ret", scope: !7892, file: !1124, line: 701, type: !103)
!7897 = !DILocation(line: 0, scope: !7892)
!7898 = !DILocation(line: 700, column: 38, scope: !7892)
!7899 = !DILocation(line: 703, column: 8, scope: !7892)
!7900 = !DILocation(line: 703, column: 12, scope: !7892)
!7901 = !DILocation(line: 705, column: 7, scope: !7902)
!7902 = distinct !DILexicalBlock(scope: !7892, file: !1124, line: 705, column: 6)
!7903 = !DILocation(line: 705, column: 6, scope: !7892)
!7904 = !DILocation(line: 722, column: 8, scope: !7892)
!7905 = !DILocation(line: 723, column: 10, scope: !7906)
!7906 = distinct !DILexicalBlock(scope: !7892, file: !1124, line: 723, column: 6)
!7907 = !DILocation(line: 723, column: 6, scope: !7892)
!7908 = !DILocation(line: 731, column: 1, scope: !7892)
!7909 = distinct !DISubprogram(name: "device_is_ready", scope: !4719, file: !4719, line: 47, type: !7910, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7912)
!7910 = !DISubroutineType(types: !7911)
!7911 = !{!163, !984}
!7912 = !{!7913}
!7913 = !DILocalVariable(name: "dev", arg: 1, scope: !7909, file: !4719, line: 47, type: !984)
!7914 = !DILocation(line: 0, scope: !7909)
!7915 = !DILocation(line: 55, column: 2, scope: !7916)
!7916 = distinct !DILexicalBlock(scope: !7909, file: !4719, line: 55, column: 2)
!7917 = !{i64 2155034634}
!7918 = !DILocation(line: 56, column: 9, scope: !7909)
!7919 = !DILocation(line: 56, column: 2, scope: !7909)
!7920 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1124, file: !1124, line: 270, type: !7921, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7923)
!7921 = !DISubroutineType(types: !7922)
!7922 = !{!103, !984, !163}
!7923 = !{!7924, !7925, !7926, !7927, !7928}
!7924 = !DILocalVariable(name: "dev", arg: 1, scope: !7920, file: !1124, line: 270, type: !984)
!7925 = !DILocalVariable(name: "on", arg: 2, scope: !7920, file: !1124, line: 270, type: !163)
!7926 = !DILocalVariable(name: "cfg", scope: !7920, file: !1124, line: 272, type: !7269)
!7927 = !DILocalVariable(name: "ret", scope: !7920, file: !1124, line: 273, type: !103)
!7928 = !DILocalVariable(name: "clk", scope: !7920, file: !1124, line: 278, type: !7559)
!7929 = !DILocation(line: 0, scope: !7920)
!7930 = !DILocation(line: 272, column: 45, scope: !7920)
!7931 = !DILocation(line: 282, column: 38, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7933, file: !1124, line: 280, column: 10)
!7933 = distinct !DILexicalBlock(scope: !7920, file: !1124, line: 280, column: 6)
!7934 = !DILocation(line: 282, column: 6, scope: !7932)
!7935 = !DILocation(line: 281, column: 9, scope: !7932)
!7936 = !DILocation(line: 293, column: 1, scope: !7920)
!7937 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !147, file: !147, line: 730, type: !7910, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7938)
!7938 = !{!7939}
!7939 = !DILocalVariable(name: "dev", arg: 1, scope: !7937, file: !147, line: 730, type: !984)
!7940 = !DILocation(line: 0, scope: !7937)
!7941 = !DILocation(line: 732, column: 9, scope: !7937)
!7942 = !DILocation(line: 732, column: 2, scope: !7937)
!7943 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1124, file: !1124, line: 496, type: !7944, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !7946)
!7944 = !DISubroutineType(types: !7945)
!7945 = !{!103, !984, !103, !103, !103}
!7946 = !{!7947, !7948, !7949, !7950, !7951, !7952}
!7947 = !DILocalVariable(name: "dev", arg: 1, scope: !7943, file: !1124, line: 496, type: !984)
!7948 = !DILocalVariable(name: "pin", arg: 2, scope: !7943, file: !1124, line: 496, type: !103)
!7949 = !DILocalVariable(name: "conf", arg: 3, scope: !7943, file: !1124, line: 496, type: !103)
!7950 = !DILocalVariable(name: "func", arg: 4, scope: !7943, file: !1124, line: 496, type: !103)
!7951 = !DILocalVariable(name: "ret", scope: !7943, file: !1124, line: 498, type: !103)
!7952 = !DILocalVariable(name: "gpio_out", scope: !7953, file: !1124, line: 508, type: !106)
!7953 = distinct !DILexicalBlock(scope: !7954, file: !1124, line: 507, column: 27)
!7954 = distinct !DILexicalBlock(scope: !7943, file: !1124, line: 507, column: 6)
!7955 = !DILocation(line: 0, scope: !7943)
!7956 = !DILocation(line: 505, column: 2, scope: !7943)
!7957 = !DILocation(line: 507, column: 11, scope: !7954)
!7958 = !DILocation(line: 507, column: 6, scope: !7943)
!7959 = !DILocation(line: 508, column: 28, scope: !7953)
!7960 = !DILocation(line: 0, scope: !7953)
!7961 = !DILocation(line: 510, column: 16, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7953, file: !1124, line: 510, column: 7)
!7963 = !DILocation(line: 0, scope: !7962)
!7964 = !DILocation(line: 510, column: 7, scope: !7953)
!7965 = !DILocation(line: 511, column: 4, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !7962, file: !1124, line: 510, column: 32)
!7967 = !DILocation(line: 512, column: 3, scope: !7966)
!7968 = !DILocation(line: 513, column: 4, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7970, file: !1124, line: 512, column: 39)
!7970 = distinct !DILexicalBlock(scope: !7962, file: !1124, line: 512, column: 14)
!7971 = !DILocation(line: 514, column: 3, scope: !7969)
!7972 = !DILocation(line: 518, column: 1, scope: !7943)
!7973 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1408, file: !1408, line: 526, type: !1309, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !7974)
!7974 = !{!7975, !7976, !7977}
!7975 = !DILocalVariable(name: "dev", arg: 1, scope: !7973, file: !1408, line: 526, type: !1311)
!7976 = !DILocalVariable(name: "c", arg: 2, scope: !7973, file: !1408, line: 526, type: !916)
!7977 = !DILocalVariable(name: "config", scope: !7973, file: !1408, line: 528, type: !7978)
!7978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 32)
!7979 = !DILocation(line: 0, scope: !7973)
!7980 = !DILocation(line: 528, column: 48, scope: !7973)
!7981 = !DILocation(line: 531, column: 40, scope: !7982)
!7982 = distinct !DILexicalBlock(scope: !7973, file: !1408, line: 531, column: 6)
!7983 = !DILocation(line: 531, column: 6, scope: !7982)
!7984 = !DILocation(line: 531, column: 6, scope: !7973)
!7985 = !DILocation(line: 532, column: 34, scope: !7986)
!7986 = distinct !DILexicalBlock(scope: !7982, file: !1408, line: 531, column: 48)
!7987 = !DILocation(line: 532, column: 3, scope: !7986)
!7988 = !DILocation(line: 533, column: 2, scope: !7986)
!7989 = !DILocation(line: 539, column: 42, scope: !7990)
!7990 = distinct !DILexicalBlock(scope: !7973, file: !1408, line: 539, column: 6)
!7991 = !DILocation(line: 539, column: 7, scope: !7990)
!7992 = !DILocation(line: 539, column: 6, scope: !7973)
!7993 = !DILocation(line: 543, column: 52, scope: !7973)
!7994 = !DILocation(line: 543, column: 22, scope: !7973)
!7995 = !DILocation(line: 543, column: 5, scope: !7973)
!7996 = !DILocation(line: 545, column: 2, scope: !7973)
!7997 = !DILocation(line: 546, column: 1, scope: !7973)
!7998 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1408, file: !1408, line: 548, type: !1328, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !7999)
!7999 = !{!8000, !8001, !8002, !8003}
!8000 = !DILocalVariable(name: "dev", arg: 1, scope: !7998, file: !1408, line: 548, type: !1311)
!8001 = !DILocalVariable(name: "c", arg: 2, scope: !7998, file: !1408, line: 549, type: !161)
!8002 = !DILocalVariable(name: "config", scope: !7998, file: !1408, line: 551, type: !7978)
!8003 = !DILocalVariable(name: "key", scope: !7998, file: !1408, line: 555, type: !32)
!8004 = !DILocation(line: 0, scope: !7998)
!8005 = !DILocation(line: 551, column: 48, scope: !7998)
!8006 = !DILocation(line: 562, column: 2, scope: !7998)
!8007 = !DILocation(line: 563, column: 41, scope: !8008)
!8008 = distinct !DILexicalBlock(scope: !8009, file: !1408, line: 563, column: 7)
!8009 = distinct !DILexicalBlock(scope: !7998, file: !1408, line: 562, column: 12)
!8010 = !DILocation(line: 563, column: 7, scope: !8008)
!8011 = !DILocation(line: 563, column: 7, scope: !8009)
!8012 = !DILocation(line: 55, column: 2, scope: !8013, inlinedAt: !8017)
!8013 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4661, file: !4661, line: 42, type: !4662, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8014)
!8014 = !{!8015, !8016}
!8015 = !DILocalVariable(name: "key", scope: !8013, file: !4661, line: 44, type: !32)
!8016 = !DILocalVariable(name: "tmp", scope: !8013, file: !4661, line: 53, type: !32)
!8017 = distinct !DILocation(line: 564, column: 10, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !8008, file: !1408, line: 563, column: 49)
!8019 = !{i64 2271331}
!8020 = !DILocation(line: 0, scope: !8013, inlinedAt: !8017)
!8021 = !DILocation(line: 565, column: 42, scope: !8022)
!8022 = distinct !DILexicalBlock(scope: !8018, file: !1408, line: 565, column: 8)
!8023 = !DILocation(line: 565, column: 8, scope: !8022)
!8024 = !DILocation(line: 565, column: 8, scope: !8018)
!8025 = !DILocalVariable(name: "key", arg: 1, scope: !8026, file: !4661, line: 84, type: !32)
!8026 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4661, file: !4661, line: 84, type: !4672, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8027)
!8027 = !{!8025}
!8028 = !DILocation(line: 0, scope: !8026, inlinedAt: !8029)
!8029 = distinct !DILocation(line: 568, column: 4, scope: !8018)
!8030 = !DILocation(line: 95, column: 2, scope: !8026, inlinedAt: !8029)
!8031 = !{i64 2272148}
!8032 = !DILocation(line: 569, column: 3, scope: !8018)
!8033 = distinct !{!8033, !8006, !8034}
!8034 = !DILocation(line: 570, column: 2, scope: !7998)
!8035 = !DILocation(line: 592, column: 33, scope: !7998)
!8036 = !DILocation(line: 592, column: 2, scope: !7998)
!8037 = !DILocation(line: 0, scope: !8026, inlinedAt: !8038)
!8038 = distinct !DILocation(line: 593, column: 2, scope: !7998)
!8039 = !DILocation(line: 95, column: 2, scope: !8026, inlinedAt: !8038)
!8040 = !DILocation(line: 594, column: 1, scope: !7998)
!8041 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1408, file: !1408, line: 596, type: !1332, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8042)
!8042 = !{!8043, !8044, !8045}
!8043 = !DILocalVariable(name: "dev", arg: 1, scope: !8041, file: !1408, line: 596, type: !1311)
!8044 = !DILocalVariable(name: "config", scope: !8041, file: !1408, line: 598, type: !7978)
!8045 = !DILocalVariable(name: "err", scope: !8041, file: !1408, line: 599, type: !106)
!8046 = !DILocation(line: 0, scope: !8041)
!8047 = !DILocation(line: 598, column: 48, scope: !8041)
!8048 = !DILocation(line: 606, column: 40, scope: !8049)
!8049 = distinct !DILexicalBlock(scope: !8041, file: !1408, line: 606, column: 6)
!8050 = !DILocation(line: 606, column: 6, scope: !8049)
!8051 = !DILocation(line: 606, column: 6, scope: !8041)
!8052 = !DILocation(line: 610, column: 39, scope: !8053)
!8053 = distinct !DILexicalBlock(scope: !8041, file: !1408, line: 610, column: 6)
!8054 = !DILocation(line: 610, column: 6, scope: !8053)
!8055 = !DILocation(line: 610, column: 6, scope: !8041)
!8056 = !DILocation(line: 614, column: 39, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8041, file: !1408, line: 614, column: 6)
!8058 = !DILocation(line: 614, column: 6, scope: !8057)
!8059 = !DILocation(line: 614, column: 6, scope: !8041)
!8060 = !DILocation(line: 619, column: 40, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8041, file: !1408, line: 619, column: 6)
!8062 = !DILocation(line: 619, column: 6, scope: !8061)
!8063 = !DILocation(line: 619, column: 6, scope: !8041)
!8064 = !DILocation(line: 623, column: 10, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8041, file: !1408, line: 623, column: 6)
!8066 = !DILocation(line: 623, column: 6, scope: !8041)
!8067 = !DILocation(line: 624, column: 34, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8065, file: !1408, line: 623, column: 24)
!8069 = !DILocation(line: 624, column: 3, scope: !8068)
!8070 = !DILocation(line: 625, column: 2, scope: !8068)
!8071 = !DILocation(line: 632, column: 10, scope: !8072)
!8072 = distinct !DILexicalBlock(scope: !8041, file: !1408, line: 632, column: 6)
!8073 = !DILocation(line: 632, column: 6, scope: !8041)
!8074 = !DILocation(line: 633, column: 34, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8072, file: !1408, line: 632, column: 32)
!8076 = !DILocation(line: 633, column: 3, scope: !8075)
!8077 = !DILocation(line: 634, column: 2, scope: !8075)
!8078 = !DILocation(line: 636, column: 10, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8041, file: !1408, line: 636, column: 6)
!8080 = !DILocation(line: 636, column: 6, scope: !8041)
!8081 = !DILocation(line: 637, column: 33, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !8079, file: !1408, line: 636, column: 31)
!8083 = !DILocation(line: 637, column: 3, scope: !8082)
!8084 = !DILocation(line: 638, column: 2, scope: !8082)
!8085 = !DILocation(line: 640, column: 10, scope: !8086)
!8086 = distinct !DILexicalBlock(scope: !8041, file: !1408, line: 640, column: 6)
!8087 = !DILocation(line: 640, column: 6, scope: !8041)
!8088 = !DILocation(line: 641, column: 33, scope: !8089)
!8089 = distinct !DILexicalBlock(scope: !8086, file: !1408, line: 640, column: 32)
!8090 = !DILocation(line: 641, column: 3, scope: !8089)
!8091 = !DILocation(line: 642, column: 2, scope: !8089)
!8092 = !DILocation(line: 646, column: 32, scope: !8041)
!8093 = !DILocation(line: 646, column: 2, scope: !8041)
!8094 = !DILocation(line: 648, column: 2, scope: !8041)
!8095 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1408, file: !1408, line: 419, type: !1336, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8096)
!8096 = !{!8097, !8098, !8099, !8100, !8102, !8103, !8104, !8105}
!8097 = !DILocalVariable(name: "dev", arg: 1, scope: !8095, file: !1408, line: 419, type: !1311)
!8098 = !DILocalVariable(name: "cfg", arg: 2, scope: !8095, file: !1408, line: 420, type: !1338)
!8099 = !DILocalVariable(name: "config", scope: !8095, file: !1408, line: 422, type: !7978)
!8100 = !DILocalVariable(name: "data", scope: !8095, file: !1408, line: 423, type: !8101)
!8101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 32)
!8102 = !DILocalVariable(name: "parity", scope: !8095, file: !1408, line: 424, type: !5176)
!8103 = !DILocalVariable(name: "stopbits", scope: !8095, file: !1408, line: 425, type: !5176)
!8104 = !DILocalVariable(name: "databits", scope: !8095, file: !1408, line: 426, type: !5176)
!8105 = !DILocalVariable(name: "flowctrl", scope: !8095, file: !1408, line: 428, type: !5176)
!8106 = !DILocation(line: 0, scope: !8095)
!8107 = !DILocation(line: 422, column: 48, scope: !8095)
!8108 = !DILocation(line: 423, column: 38, scope: !8095)
!8109 = !DILocation(line: 424, column: 56, scope: !8095)
!8110 = !DILocation(line: 424, column: 51, scope: !8095)
!8111 = !DILocation(line: 424, column: 26, scope: !8095)
!8112 = !DILocation(line: 425, column: 60, scope: !8095)
!8113 = !DILocation(line: 425, column: 55, scope: !8095)
!8114 = !DILocation(line: 425, column: 28, scope: !8095)
!8115 = !DILocation(line: 426, column: 60, scope: !8095)
!8116 = !DILocation(line: 426, column: 55, scope: !8095)
!8117 = !DILocation(line: 426, column: 28, scope: !8095)
!8118 = !DILocation(line: 428, column: 58, scope: !8095)
!8119 = !DILocation(line: 428, column: 53, scope: !8095)
!8120 = !DILocation(line: 428, column: 28, scope: !8095)
!8121 = !DILocation(line: 431, column: 44, scope: !8122)
!8122 = distinct !DILexicalBlock(scope: !8095, file: !1408, line: 431, column: 6)
!8123 = !DILocation(line: 438, column: 22, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8095, file: !1408, line: 437, column: 6)
!8125 = !DILocation(line: 437, column: 6, scope: !8095)
!8126 = !DILocation(line: 448, column: 6, scope: !8095)
!8127 = !DILocation(line: 465, column: 47, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8095, file: !1408, line: 465, column: 6)
!8129 = !DILocation(line: 475, column: 21, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !8095, file: !1408, line: 475, column: 6)
!8131 = !DILocation(line: 475, column: 6, scope: !8095)
!8132 = !DILocation(line: 476, column: 8, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8134, file: !1408, line: 476, column: 7)
!8134 = distinct !DILexicalBlock(scope: !8130, file: !1408, line: 475, column: 49)
!8135 = !DILocation(line: 477, column: 34, scope: !8133)
!8136 = !DILocation(line: 476, column: 7, scope: !8134)
!8137 = !DILocation(line: 482, column: 27, scope: !8095)
!8138 = !DILocation(line: 482, column: 2, scope: !8095)
!8139 = !DILocation(line: 484, column: 16, scope: !8140)
!8140 = distinct !DILexicalBlock(scope: !8095, file: !1408, line: 484, column: 6)
!8141 = !DILocation(line: 484, column: 13, scope: !8140)
!8142 = !DILocation(line: 484, column: 6, scope: !8095)
!8143 = !DILocation(line: 485, column: 3, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8140, file: !1408, line: 484, column: 44)
!8145 = !DILocation(line: 486, column: 2, scope: !8144)
!8146 = !DILocation(line: 488, column: 18, scope: !8147)
!8147 = distinct !DILexicalBlock(scope: !8095, file: !1408, line: 488, column: 6)
!8148 = !DILocation(line: 488, column: 15, scope: !8147)
!8149 = !DILocation(line: 488, column: 6, scope: !8095)
!8150 = !DILocation(line: 489, column: 3, scope: !8151)
!8151 = distinct !DILexicalBlock(scope: !8147, file: !1408, line: 488, column: 48)
!8152 = !DILocation(line: 490, column: 2, scope: !8151)
!8153 = !DILocation(line: 492, column: 18, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8095, file: !1408, line: 492, column: 6)
!8155 = !DILocation(line: 492, column: 15, scope: !8154)
!8156 = !DILocation(line: 492, column: 6, scope: !8095)
!8157 = !DILocation(line: 493, column: 3, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8154, file: !1408, line: 492, column: 48)
!8159 = !DILocation(line: 494, column: 2, scope: !8158)
!8160 = !DILocation(line: 496, column: 18, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !8095, file: !1408, line: 496, column: 6)
!8162 = !DILocation(line: 496, column: 15, scope: !8161)
!8163 = !DILocation(line: 496, column: 6, scope: !8095)
!8164 = !DILocation(line: 497, column: 3, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8161, file: !1408, line: 496, column: 46)
!8166 = !DILocation(line: 498, column: 2, scope: !8165)
!8167 = !DILocation(line: 500, column: 11, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8095, file: !1408, line: 500, column: 6)
!8169 = !DILocation(line: 500, column: 29, scope: !8168)
!8170 = !DILocation(line: 500, column: 20, scope: !8168)
!8171 = !DILocation(line: 500, column: 6, scope: !8095)
!8172 = !DILocation(line: 501, column: 3, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8168, file: !1408, line: 500, column: 40)
!8174 = !DILocation(line: 502, column: 26, scope: !8173)
!8175 = !DILocation(line: 502, column: 19, scope: !8173)
!8176 = !DILocation(line: 503, column: 2, scope: !8173)
!8177 = !DILocation(line: 505, column: 26, scope: !8095)
!8178 = !DILocation(line: 505, column: 2, scope: !8095)
!8179 = !DILocation(line: 506, column: 2, scope: !8095)
!8180 = !DILocation(line: 507, column: 1, scope: !8095)
!8181 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1408, file: !1408, line: 509, type: !1349, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8182)
!8182 = !{!8183, !8184, !8185}
!8183 = !DILocalVariable(name: "dev", arg: 1, scope: !8181, file: !1408, line: 509, type: !1311)
!8184 = !DILocalVariable(name: "cfg", arg: 2, scope: !8181, file: !1408, line: 510, type: !1351)
!8185 = !DILocalVariable(name: "data", scope: !8181, file: !1408, line: 512, type: !8101)
!8186 = !DILocation(line: 0, scope: !8181)
!8187 = !DILocation(line: 512, column: 38, scope: !8181)
!8188 = !DILocation(line: 514, column: 24, scope: !8181)
!8189 = !DILocation(line: 514, column: 7, scope: !8181)
!8190 = !DILocation(line: 514, column: 16, scope: !8181)
!8191 = !DILocation(line: 515, column: 41, scope: !8181)
!8192 = !{i32 0, i32 1537}
!8193 = !DILocation(line: 515, column: 16, scope: !8181)
!8194 = !DILocation(line: 515, column: 7, scope: !8181)
!8195 = !DILocation(line: 515, column: 14, scope: !8181)
!8196 = !DILocation(line: 517, column: 3, scope: !8181)
!8197 = !{i32 0, i32 12289}
!8198 = !DILocation(line: 516, column: 19, scope: !8181)
!8199 = !DILocation(line: 516, column: 7, scope: !8181)
!8200 = !DILocation(line: 516, column: 17, scope: !8181)
!8201 = !DILocation(line: 519, column: 3, scope: !8181)
!8202 = !DILocation(line: 519, column: 33, scope: !8181)
!8203 = !DILocation(line: 518, column: 19, scope: !8181)
!8204 = !DILocation(line: 518, column: 7, scope: !8181)
!8205 = !DILocation(line: 518, column: 17, scope: !8181)
!8206 = !DILocation(line: 521, column: 3, scope: !8181)
!8207 = !{i32 0, i32 769}
!8208 = !DILocation(line: 520, column: 19, scope: !8181)
!8209 = !DILocation(line: 520, column: 7, scope: !8181)
!8210 = !DILocation(line: 520, column: 17, scope: !8181)
!8211 = !DILocation(line: 522, column: 2, scope: !8181)
!8212 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1408, file: !1408, line: 205, type: !8213, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8215)
!8213 = !DISubroutineType(types: !8214)
!8214 = !{!106, !1311}
!8215 = !{!8216, !8217}
!8216 = !DILocalVariable(name: "dev", arg: 1, scope: !8212, file: !1408, line: 205, type: !1311)
!8217 = !DILocalVariable(name: "config", scope: !8212, file: !1408, line: 207, type: !7978)
!8218 = !DILocation(line: 0, scope: !8212)
!8219 = !DILocation(line: 207, column: 48, scope: !8212)
!8220 = !DILocation(line: 209, column: 36, scope: !8212)
!8221 = !DILocation(line: 209, column: 9, scope: !8212)
!8222 = !DILocation(line: 209, column: 2, scope: !8212)
!8223 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1408, file: !1408, line: 270, type: !8224, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8226)
!8224 = !DISubroutineType(types: !8225)
!8225 = !{!1277, !106}
!8226 = !{!8227}
!8227 = !DILocalVariable(name: "parity", arg: 1, scope: !8223, file: !1408, line: 270, type: !106)
!8228 = !DILocation(line: 0, scope: !8223)
!8229 = !DILocation(line: 272, column: 2, scope: !8223)
!8230 = !DILocation(line: 281, column: 1, scope: !8223)
!8231 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1408, file: !1408, line: 220, type: !8213, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8232)
!8232 = !{!8233, !8234}
!8233 = !DILocalVariable(name: "dev", arg: 1, scope: !8231, file: !1408, line: 220, type: !1311)
!8234 = !DILocalVariable(name: "config", scope: !8231, file: !1408, line: 222, type: !7978)
!8235 = !DILocation(line: 0, scope: !8231)
!8236 = !DILocation(line: 222, column: 48, scope: !8231)
!8237 = !DILocation(line: 224, column: 44, scope: !8231)
!8238 = !DILocation(line: 224, column: 9, scope: !8231)
!8239 = !DILocation(line: 224, column: 2, scope: !8231)
!8240 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1408, file: !1408, line: 304, type: !8241, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8243)
!8241 = !DISubroutineType(types: !8242)
!8242 = !{!1291, !106}
!8243 = !{!8244}
!8244 = !DILocalVariable(name: "sb", arg: 1, scope: !8240, file: !1408, line: 304, type: !106)
!8245 = !DILocation(line: 0, scope: !8240)
!8246 = !DILocation(line: 306, column: 2, scope: !8240)
!8247 = !DILocation(line: 0, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8240, file: !1408, line: 306, column: 14)
!8249 = !DILocation(line: 323, column: 1, scope: !8240)
!8250 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1408, file: !1408, line: 235, type: !8213, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8251)
!8251 = !{!8252, !8253}
!8252 = !DILocalVariable(name: "dev", arg: 1, scope: !8250, file: !1408, line: 235, type: !1311)
!8253 = !DILocalVariable(name: "config", scope: !8250, file: !1408, line: 237, type: !7978)
!8254 = !DILocation(line: 0, scope: !8250)
!8255 = !DILocation(line: 237, column: 48, scope: !8250)
!8256 = !DILocation(line: 239, column: 39, scope: !8250)
!8257 = !DILocation(line: 239, column: 9, scope: !8250)
!8258 = !DILocation(line: 239, column: 2, scope: !8250)
!8259 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1408, file: !1408, line: 355, type: !8260, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8262)
!8260 = !DISubroutineType(types: !8261)
!8261 = !{!1284, !106, !106}
!8262 = !{!8263, !8264}
!8263 = !DILocalVariable(name: "db", arg: 1, scope: !8259, file: !1408, line: 355, type: !106)
!8264 = !DILocalVariable(name: "p", arg: 2, scope: !8259, file: !1408, line: 356, type: !106)
!8265 = !DILocation(line: 0, scope: !8259)
!8266 = !DILocation(line: 358, column: 2, scope: !8259)
!8267 = !DILocation(line: 384, column: 1, scope: !8259)
!8268 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1408, file: !1408, line: 250, type: !8213, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8269)
!8269 = !{!8270, !8271}
!8270 = !DILocalVariable(name: "dev", arg: 1, scope: !8268, file: !1408, line: 250, type: !1311)
!8271 = !DILocalVariable(name: "config", scope: !8268, file: !1408, line: 252, type: !7978)
!8272 = !DILocation(line: 0, scope: !8268)
!8273 = !DILocation(line: 252, column: 48, scope: !8268)
!8274 = !DILocation(line: 254, column: 40, scope: !8268)
!8275 = !DILocation(line: 254, column: 9, scope: !8268)
!8276 = !DILocation(line: 254, column: 2, scope: !8268)
!8277 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1408, file: !1408, line: 409, type: !8278, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8280)
!8278 = !DISubroutineType(types: !8279)
!8279 = !{!1297, !106}
!8280 = !{!8281}
!8281 = !DILocalVariable(name: "fc", arg: 1, scope: !8277, file: !1408, line: 409, type: !106)
!8282 = !DILocation(line: 0, scope: !8277)
!8283 = !DILocation(line: 411, column: 9, scope: !8284)
!8284 = distinct !DILexicalBlock(scope: !8277, file: !1408, line: 411, column: 6)
!8285 = !DILocation(line: 416, column: 1, scope: !8277)
!8286 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !8287, file: !8287, line: 967, type: !8288, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8290)
!8287 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8288 = !DISubroutineType(types: !8289)
!8289 = !{!106, !1352}
!8290 = !{!8291}
!8291 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8286, file: !8287, line: 967, type: !1352)
!8292 = !DILocation(line: 0, scope: !8286)
!8293 = !DILocation(line: 969, column: 21, scope: !8286)
!8294 = !DILocation(line: 969, column: 3, scope: !8286)
!8295 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !8287, file: !8287, line: 601, type: !8288, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8296)
!8296 = !{!8297}
!8297 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8295, file: !8287, line: 601, type: !1352)
!8298 = !DILocation(line: 0, scope: !8295)
!8299 = !DILocation(line: 603, column: 21, scope: !8295)
!8300 = !DILocation(line: 603, column: 3, scope: !8295)
!8301 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !8287, file: !8287, line: 820, type: !8288, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8302)
!8302 = !{!8303}
!8303 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8301, file: !8287, line: 820, type: !1352)
!8304 = !DILocation(line: 0, scope: !8301)
!8305 = !DILocation(line: 822, column: 21, scope: !8301)
!8306 = !DILocation(line: 822, column: 3, scope: !8301)
!8307 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !8287, file: !8287, line: 547, type: !8288, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8308)
!8308 = !{!8309}
!8309 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8307, file: !8287, line: 547, type: !1352)
!8310 = !DILocation(line: 0, scope: !8307)
!8311 = !DILocation(line: 549, column: 21, scope: !8307)
!8312 = !DILocation(line: 549, column: 3, scope: !8307)
!8313 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1408, file: !1408, line: 257, type: !8314, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8316)
!8314 = !DISubroutineType(types: !8315)
!8315 = !{!106, !1277}
!8316 = !{!8317}
!8317 = !DILocalVariable(name: "parity", arg: 1, scope: !8313, file: !1408, line: 257, type: !1277)
!8318 = !DILocation(line: 0, scope: !8313)
!8319 = !DILocation(line: 259, column: 2, scope: !8313)
!8320 = !DILocation(line: 268, column: 1, scope: !8313)
!8321 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1408, file: !1408, line: 283, type: !8322, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8324)
!8322 = !DISubroutineType(types: !8323)
!8323 = !{!106, !1291}
!8324 = !{!8325}
!8325 = !DILocalVariable(name: "sb", arg: 1, scope: !8321, file: !1408, line: 283, type: !1291)
!8326 = !DILocation(line: 0, scope: !8321)
!8327 = !DILocation(line: 285, column: 2, scope: !8321)
!8328 = !DILocation(line: 0, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8321, file: !1408, line: 285, column: 14)
!8330 = !DILocation(line: 302, column: 1, scope: !8321)
!8331 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1408, file: !1408, line: 325, type: !8332, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8334)
!8332 = !DISubroutineType(types: !8333)
!8333 = !{!106, !1284, !1277}
!8334 = !{!8335, !8336}
!8335 = !DILocalVariable(name: "db", arg: 1, scope: !8331, file: !1408, line: 325, type: !1284)
!8336 = !DILocalVariable(name: "p", arg: 2, scope: !8331, file: !1408, line: 326, type: !1277)
!8337 = !DILocation(line: 0, scope: !8331)
!8338 = !DILocation(line: 328, column: 2, scope: !8331)
!8339 = !DILocation(line: 353, column: 1, scope: !8331)
!8340 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1408, file: !1408, line: 393, type: !8341, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8343)
!8341 = !DISubroutineType(types: !8342)
!8342 = !{!106, !1297}
!8343 = !{!8344}
!8344 = !DILocalVariable(name: "fc", arg: 1, scope: !8340, file: !1408, line: 393, type: !1297)
!8345 = !DILocation(line: 0, scope: !8340)
!8346 = !DILocation(line: 395, column: 9, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !8340, file: !1408, line: 395, column: 6)
!8348 = !DILocation(line: 400, column: 1, scope: !8340)
!8349 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !8287, file: !8287, line: 424, type: !8350, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8352)
!8350 = !DISubroutineType(types: !8351)
!8351 = !{null, !1352}
!8352 = !{!8353}
!8353 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8349, file: !8287, line: 424, type: !1352)
!8354 = !DILocation(line: 0, scope: !8349)
!8355 = !DILocation(line: 426, column: 3, scope: !8349)
!8356 = !DILocation(line: 427, column: 1, scope: !8349)
!8357 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1408, file: !1408, line: 197, type: !8358, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8360)
!8358 = !DISubroutineType(types: !8359)
!8359 = !{null, !1311, !106}
!8360 = !{!8361, !8362, !8363}
!8361 = !DILocalVariable(name: "dev", arg: 1, scope: !8357, file: !1408, line: 197, type: !1311)
!8362 = !DILocalVariable(name: "parity", arg: 2, scope: !8357, file: !1408, line: 198, type: !106)
!8363 = !DILocalVariable(name: "config", scope: !8357, file: !1408, line: 200, type: !7978)
!8364 = !DILocation(line: 0, scope: !8357)
!8365 = !DILocation(line: 200, column: 48, scope: !8357)
!8366 = !DILocation(line: 202, column: 29, scope: !8357)
!8367 = !DILocation(line: 202, column: 2, scope: !8357)
!8368 = !DILocation(line: 203, column: 1, scope: !8357)
!8369 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1408, file: !1408, line: 212, type: !8358, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8370)
!8370 = !{!8371, !8372, !8373}
!8371 = !DILocalVariable(name: "dev", arg: 1, scope: !8369, file: !1408, line: 212, type: !1311)
!8372 = !DILocalVariable(name: "stopbits", arg: 2, scope: !8369, file: !1408, line: 213, type: !106)
!8373 = !DILocalVariable(name: "config", scope: !8369, file: !1408, line: 215, type: !7978)
!8374 = !DILocation(line: 0, scope: !8369)
!8375 = !DILocation(line: 215, column: 48, scope: !8369)
!8376 = !DILocation(line: 217, column: 37, scope: !8369)
!8377 = !DILocation(line: 217, column: 2, scope: !8369)
!8378 = !DILocation(line: 218, column: 1, scope: !8369)
!8379 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1408, file: !1408, line: 227, type: !8358, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8380)
!8380 = !{!8381, !8382, !8383}
!8381 = !DILocalVariable(name: "dev", arg: 1, scope: !8379, file: !1408, line: 227, type: !1311)
!8382 = !DILocalVariable(name: "databits", arg: 2, scope: !8379, file: !1408, line: 228, type: !106)
!8383 = !DILocalVariable(name: "config", scope: !8379, file: !1408, line: 230, type: !7978)
!8384 = !DILocation(line: 0, scope: !8379)
!8385 = !DILocation(line: 230, column: 48, scope: !8379)
!8386 = !DILocation(line: 232, column: 32, scope: !8379)
!8387 = !DILocation(line: 232, column: 2, scope: !8379)
!8388 = !DILocation(line: 233, column: 1, scope: !8379)
!8389 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1408, file: !1408, line: 242, type: !8358, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8390)
!8390 = !{!8391, !8392, !8393}
!8391 = !DILocalVariable(name: "dev", arg: 1, scope: !8389, file: !1408, line: 242, type: !1311)
!8392 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !8389, file: !1408, line: 243, type: !106)
!8393 = !DILocalVariable(name: "config", scope: !8389, file: !1408, line: 245, type: !7978)
!8394 = !DILocation(line: 0, scope: !8389)
!8395 = !DILocation(line: 245, column: 48, scope: !8389)
!8396 = !DILocation(line: 247, column: 33, scope: !8389)
!8397 = !DILocation(line: 247, column: 2, scope: !8389)
!8398 = !DILocation(line: 248, column: 1, scope: !8389)
!8399 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1408, file: !1408, line: 107, type: !8358, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8400)
!8400 = !{!8401, !8402, !8403, !8404, !8405}
!8401 = !DILocalVariable(name: "dev", arg: 1, scope: !8399, file: !1408, line: 107, type: !1311)
!8402 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !8399, file: !1408, line: 107, type: !106)
!8403 = !DILocalVariable(name: "config", scope: !8399, file: !1408, line: 109, type: !7978)
!8404 = !DILocalVariable(name: "data", scope: !8399, file: !1408, line: 110, type: !8101)
!8405 = !DILocalVariable(name: "clock_rate", scope: !8399, file: !1408, line: 112, type: !106)
!8406 = !DILocation(line: 0, scope: !8399)
!8407 = !DILocation(line: 109, column: 48, scope: !8399)
!8408 = !DILocation(line: 110, column: 38, scope: !8399)
!8409 = !DILocation(line: 112, column: 2, scope: !8399)
!8410 = !DILocation(line: 123, column: 36, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !8412, file: !1408, line: 123, column: 7)
!8412 = distinct !DILexicalBlock(scope: !8413, file: !1408, line: 122, column: 9)
!8413 = distinct !DILexicalBlock(scope: !8399, file: !1408, line: 115, column: 6)
!8414 = !DILocation(line: 124, column: 42, scope: !8411)
!8415 = !DILocation(line: 123, column: 7, scope: !8411)
!8416 = !DILocation(line: 125, column: 22, scope: !8411)
!8417 = !DILocation(line: 123, column: 7, scope: !8412)
!8418 = !DILocation(line: 176, column: 36, scope: !8399)
!8419 = !DILocation(line: 176, column: 3, scope: !8399)
!8420 = !DILocation(line: 179, column: 32, scope: !8399)
!8421 = !DILocation(line: 180, column: 10, scope: !8399)
!8422 = !DILocation(line: 179, column: 3, scope: !8399)
!8423 = !DILocation(line: 195, column: 1, scope: !8399)
!8424 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !8287, file: !8287, line: 410, type: !8350, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8425)
!8425 = !{!8426}
!8426 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8424, file: !8287, line: 410, type: !1352)
!8427 = !DILocation(line: 0, scope: !8424)
!8428 = !DILocation(line: 412, column: 3, scope: !8424)
!8429 = !DILocation(line: 413, column: 1, scope: !8424)
!8430 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !217, file: !217, line: 216, type: !1385, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8431)
!8431 = !{!8432, !8433, !8434, !8435}
!8432 = !DILocalVariable(name: "dev", arg: 1, scope: !8430, file: !217, line: 216, type: !1311)
!8433 = !DILocalVariable(name: "sys", arg: 2, scope: !8430, file: !217, line: 217, type: !225)
!8434 = !DILocalVariable(name: "rate", arg: 3, scope: !8430, file: !217, line: 218, type: !265)
!8435 = !DILocalVariable(name: "api", scope: !8430, file: !217, line: 220, type: !1363)
!8436 = !DILocation(line: 0, scope: !8430)
!8437 = !DILocation(line: 221, column: 49, scope: !8430)
!8438 = !DILocation(line: 223, column: 11, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8430, file: !217, line: 223, column: 6)
!8440 = !DILocation(line: 223, column: 20, scope: !8439)
!8441 = !DILocation(line: 223, column: 6, scope: !8430)
!8442 = !DILocation(line: 227, column: 9, scope: !8430)
!8443 = !DILocation(line: 227, column: 2, scope: !8430)
!8444 = !DILocation(line: 228, column: 1, scope: !8430)
!8445 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !8287, file: !8287, line: 615, type: !8446, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8448)
!8446 = !DISubroutineType(types: !8447)
!8447 = !{null, !1352, !106}
!8448 = !{!8449, !8450}
!8449 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8445, file: !8287, line: 615, type: !1352)
!8450 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !8445, file: !8287, line: 615, type: !106)
!8451 = !DILocation(line: 0, scope: !8445)
!8452 = !DILocation(line: 617, column: 3, scope: !8445)
!8453 = !DILocation(line: 618, column: 1, scope: !8445)
!8454 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !8287, file: !8287, line: 1020, type: !8455, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8457)
!8455 = !DISubroutineType(types: !8456)
!8456 = !{null, !1352, !106, !106, !106}
!8457 = !{!8458, !8459, !8460, !8461}
!8458 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8454, file: !8287, line: 1020, type: !1352)
!8459 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !8454, file: !8287, line: 1020, type: !106)
!8460 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !8454, file: !8287, line: 1020, type: !106)
!8461 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !8454, file: !8287, line: 1021, type: !106)
!8462 = !DILocation(line: 0, scope: !8454)
!8463 = !DILocation(line: 1029, column: 30, scope: !8464)
!8464 = distinct !DILexicalBlock(scope: !8465, file: !8287, line: 1028, column: 3)
!8465 = distinct !DILexicalBlock(scope: !8454, file: !8287, line: 1023, column: 7)
!8466 = !DILocation(line: 1029, column: 19, scope: !8464)
!8467 = !DILocation(line: 1029, column: 13, scope: !8464)
!8468 = !DILocation(line: 1029, column: 17, scope: !8464)
!8469 = !DILocation(line: 1031, column: 1, scope: !8454)
!8470 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !8287, file: !8287, line: 949, type: !8446, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8471)
!8471 = !{!8472, !8473}
!8472 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8470, file: !8287, line: 949, type: !1352)
!8473 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !8470, file: !8287, line: 949, type: !106)
!8474 = !DILocation(line: 0, scope: !8470)
!8475 = !DILocation(line: 951, column: 3, scope: !8470)
!8476 = !DILocation(line: 952, column: 1, scope: !8470)
!8477 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !8287, file: !8287, line: 588, type: !8446, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8478)
!8478 = !{!8479, !8480}
!8479 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8477, file: !8287, line: 588, type: !1352)
!8480 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !8477, file: !8287, line: 588, type: !106)
!8481 = !DILocation(line: 0, scope: !8477)
!8482 = !DILocation(line: 590, column: 3, scope: !8477)
!8483 = !DILocation(line: 591, column: 1, scope: !8477)
!8484 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !8287, file: !8287, line: 805, type: !8446, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8485)
!8485 = !{!8486, !8487}
!8486 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8484, file: !8287, line: 805, type: !1352)
!8487 = !DILocalVariable(name: "StopBits", arg: 2, scope: !8484, file: !8287, line: 805, type: !106)
!8488 = !DILocation(line: 0, scope: !8484)
!8489 = !DILocation(line: 807, column: 3, scope: !8484)
!8490 = !DILocation(line: 808, column: 1, scope: !8484)
!8491 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !8287, file: !8287, line: 532, type: !8446, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8492)
!8492 = !{!8493, !8494}
!8493 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8491, file: !8287, line: 532, type: !1352)
!8494 = !DILocalVariable(name: "Parity", arg: 2, scope: !8491, file: !8287, line: 532, type: !106)
!8495 = !DILocation(line: 0, scope: !8491)
!8496 = !DILocation(line: 534, column: 3, scope: !8491)
!8497 = !DILocation(line: 535, column: 1, scope: !8491)
!8498 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !8287, file: !8287, line: 1770, type: !8288, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8499)
!8499 = !{!8500}
!8500 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8498, file: !8287, line: 1770, type: !1352)
!8501 = !DILocation(line: 0, scope: !8498)
!8502 = !DILocation(line: 1772, column: 11, scope: !8498)
!8503 = !DILocation(line: 1772, column: 46, scope: !8498)
!8504 = !DILocation(line: 1772, column: 3, scope: !8498)
!8505 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !8287, file: !8287, line: 1737, type: !8288, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8506)
!8506 = !{!8507}
!8507 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8505, file: !8287, line: 1737, type: !1352)
!8508 = !DILocation(line: 0, scope: !8505)
!8509 = !DILocation(line: 1739, column: 11, scope: !8505)
!8510 = !DILocation(line: 1739, column: 3, scope: !8505)
!8511 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !8287, file: !8287, line: 1748, type: !8288, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8512)
!8512 = !{!8513}
!8513 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8511, file: !8287, line: 1748, type: !1352)
!8514 = !DILocation(line: 0, scope: !8511)
!8515 = !DILocation(line: 1750, column: 11, scope: !8511)
!8516 = !DILocation(line: 1750, column: 45, scope: !8511)
!8517 = !DILocation(line: 1750, column: 3, scope: !8511)
!8518 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !8287, file: !8287, line: 1827, type: !8288, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8519)
!8519 = !{!8520}
!8520 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8518, file: !8287, line: 1827, type: !1352)
!8521 = !DILocation(line: 0, scope: !8518)
!8522 = !DILocation(line: 1829, column: 11, scope: !8518)
!8523 = !DILocation(line: 1829, column: 46, scope: !8518)
!8524 = !DILocation(line: 1829, column: 3, scope: !8518)
!8525 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !8287, file: !8287, line: 1992, type: !8350, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8526)
!8526 = !{!8527}
!8527 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8525, file: !8287, line: 1992, type: !1352)
!8528 = !DILocation(line: 0, scope: !8525)
!8529 = !DILocation(line: 1994, column: 3, scope: !8525)
!8530 = !DILocation(line: 1995, column: 1, scope: !8525)
!8531 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !8287, file: !8287, line: 1934, type: !8350, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8532)
!8532 = !{!8533, !8534}
!8533 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8531, file: !8287, line: 1934, type: !1352)
!8534 = !DILocalVariable(name: "tmpreg", scope: !8531, file: !8287, line: 1936, type: !127)
!8535 = !DILocation(line: 0, scope: !8531)
!8536 = !DILocation(line: 1936, column: 3, scope: !8531)
!8537 = !DILocation(line: 1936, column: 17, scope: !8531)
!8538 = !DILocation(line: 1937, column: 20, scope: !8531)
!8539 = !DILocation(line: 1937, column: 10, scope: !8531)
!8540 = !DILocation(line: 1938, column: 10, scope: !8531)
!8541 = !DILocation(line: 1939, column: 20, scope: !8531)
!8542 = !DILocation(line: 1939, column: 10, scope: !8531)
!8543 = !DILocation(line: 1940, column: 10, scope: !8531)
!8544 = !DILocation(line: 1941, column: 1, scope: !8531)
!8545 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !8287, file: !8287, line: 1877, type: !8350, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8546)
!8546 = !{!8547, !8548}
!8547 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8545, file: !8287, line: 1877, type: !1352)
!8548 = !DILocalVariable(name: "tmpreg", scope: !8545, file: !8287, line: 1879, type: !127)
!8549 = !DILocation(line: 0, scope: !8545)
!8550 = !DILocation(line: 1879, column: 3, scope: !8545)
!8551 = !DILocation(line: 1879, column: 17, scope: !8545)
!8552 = !DILocation(line: 1880, column: 20, scope: !8545)
!8553 = !DILocation(line: 1880, column: 10, scope: !8545)
!8554 = !DILocation(line: 1881, column: 10, scope: !8545)
!8555 = !DILocation(line: 1882, column: 20, scope: !8545)
!8556 = !DILocation(line: 1882, column: 10, scope: !8545)
!8557 = !DILocation(line: 1883, column: 10, scope: !8545)
!8558 = !DILocation(line: 1884, column: 1, scope: !8545)
!8559 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !8287, file: !8287, line: 1896, type: !8350, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8560)
!8560 = !{!8561, !8562}
!8561 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8559, file: !8287, line: 1896, type: !1352)
!8562 = !DILocalVariable(name: "tmpreg", scope: !8559, file: !8287, line: 1898, type: !127)
!8563 = !DILocation(line: 0, scope: !8559)
!8564 = !DILocation(line: 1898, column: 3, scope: !8559)
!8565 = !DILocation(line: 1898, column: 17, scope: !8559)
!8566 = !DILocation(line: 1899, column: 20, scope: !8559)
!8567 = !DILocation(line: 1899, column: 10, scope: !8559)
!8568 = !DILocation(line: 1900, column: 10, scope: !8559)
!8569 = !DILocation(line: 1901, column: 20, scope: !8559)
!8570 = !DILocation(line: 1901, column: 10, scope: !8559)
!8571 = !DILocation(line: 1902, column: 10, scope: !8559)
!8572 = !DILocation(line: 1903, column: 1, scope: !8559)
!8573 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !8287, file: !8287, line: 1915, type: !8350, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8574)
!8574 = !{!8575, !8576}
!8575 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8573, file: !8287, line: 1915, type: !1352)
!8576 = !DILocalVariable(name: "tmpreg", scope: !8573, file: !8287, line: 1917, type: !127)
!8577 = !DILocation(line: 0, scope: !8573)
!8578 = !DILocation(line: 1917, column: 3, scope: !8573)
!8579 = !DILocation(line: 1917, column: 17, scope: !8573)
!8580 = !DILocation(line: 1918, column: 20, scope: !8573)
!8581 = !DILocation(line: 1918, column: 10, scope: !8573)
!8582 = !DILocation(line: 1919, column: 10, scope: !8573)
!8583 = !DILocation(line: 1920, column: 20, scope: !8573)
!8584 = !DILocation(line: 1920, column: 10, scope: !8573)
!8585 = !DILocation(line: 1921, column: 10, scope: !8573)
!8586 = !DILocation(line: 1922, column: 1, scope: !8573)
!8587 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !8287, file: !8287, line: 1814, type: !8288, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8588)
!8588 = !{!8589}
!8589 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8587, file: !8287, line: 1814, type: !1352)
!8590 = !DILocation(line: 0, scope: !8587)
!8591 = !DILocation(line: 1816, column: 11, scope: !8587)
!8592 = !DILocation(line: 1816, column: 46, scope: !8587)
!8593 = !DILocation(line: 1816, column: 3, scope: !8587)
!8594 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !8287, file: !8287, line: 2426, type: !8595, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8597)
!8595 = !DISubroutineType(types: !8596)
!8596 = !{null, !1352, !160}
!8597 = !{!8598, !8599}
!8598 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8594, file: !8287, line: 2426, type: !1352)
!8599 = !DILocalVariable(name: "Value", arg: 2, scope: !8594, file: !8287, line: 2426, type: !160)
!8600 = !DILocation(line: 0, scope: !8594)
!8601 = !DILocation(line: 2428, column: 16, scope: !8594)
!8602 = !DILocation(line: 2428, column: 11, scope: !8594)
!8603 = !DILocation(line: 2428, column: 14, scope: !8594)
!8604 = !DILocation(line: 2429, column: 1, scope: !8594)
!8605 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !8287, file: !8287, line: 1792, type: !8288, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8606)
!8606 = !{!8607}
!8607 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8605, file: !8287, line: 1792, type: !1352)
!8608 = !DILocation(line: 0, scope: !8605)
!8609 = !DILocation(line: 1794, column: 11, scope: !8605)
!8610 = !DILocation(line: 1794, column: 47, scope: !8605)
!8611 = !DILocation(line: 1794, column: 3, scope: !8605)
!8612 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !8287, file: !8287, line: 2403, type: !8613, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8615)
!8613 = !DISubroutineType(types: !8614)
!8614 = !{!160, !1352}
!8615 = !{!8616}
!8616 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8612, file: !8287, line: 2403, type: !1352)
!8617 = !DILocation(line: 0, scope: !8612)
!8618 = !DILocation(line: 2405, column: 20, scope: !8612)
!8619 = !DILocation(line: 2405, column: 10, scope: !8612)
!8620 = !DILocation(line: 2405, column: 3, scope: !8612)
!8621 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1408, file: !1408, line: 1583, type: !1332, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8622)
!8622 = !{!8623, !8624, !8625, !8626, !8627, !8628}
!8623 = !DILocalVariable(name: "dev", arg: 1, scope: !8621, file: !1408, line: 1583, type: !1311)
!8624 = !DILocalVariable(name: "config", scope: !8621, file: !1408, line: 1585, type: !7978)
!8625 = !DILocalVariable(name: "data", scope: !8621, file: !1408, line: 1586, type: !8101)
!8626 = !DILocalVariable(name: "ll_parity", scope: !8621, file: !1408, line: 1587, type: !106)
!8627 = !DILocalVariable(name: "ll_datawidth", scope: !8621, file: !1408, line: 1588, type: !106)
!8628 = !DILocalVariable(name: "err", scope: !8621, file: !1408, line: 1589, type: !103)
!8629 = !DILocation(line: 0, scope: !8621)
!8630 = !DILocation(line: 1585, column: 48, scope: !8621)
!8631 = !DILocation(line: 1586, column: 38, scope: !8621)
!8632 = !DILocation(line: 1591, column: 2, scope: !8621)
!8633 = !DILocation(line: 1593, column: 29, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8621, file: !1408, line: 1593, column: 6)
!8635 = !DILocation(line: 1593, column: 7, scope: !8634)
!8636 = !DILocation(line: 1593, column: 6, scope: !8621)
!8637 = !DILocation(line: 1599, column: 31, scope: !8621)
!8638 = !DILocation(line: 1599, column: 71, scope: !8621)
!8639 = !DILocation(line: 1599, column: 8, scope: !8621)
!8640 = !DILocation(line: 1600, column: 10, scope: !8641)
!8641 = distinct !DILexicalBlock(scope: !8621, file: !1408, line: 1600, column: 6)
!8642 = !DILocation(line: 1600, column: 6, scope: !8621)
!8643 = !DILocation(line: 1616, column: 36, scope: !8621)
!8644 = !DILocation(line: 1616, column: 8, scope: !8621)
!8645 = !DILocation(line: 1617, column: 10, scope: !8646)
!8646 = distinct !DILexicalBlock(scope: !8621, file: !1408, line: 1617, column: 6)
!8647 = !DILocation(line: 1617, column: 6, scope: !8621)
!8648 = !DILocation(line: 1621, column: 27, scope: !8621)
!8649 = !DILocation(line: 1621, column: 2, scope: !8621)
!8650 = !DILocation(line: 1624, column: 40, scope: !8621)
!8651 = !DILocation(line: 1624, column: 2, scope: !8621)
!8652 = !DILocation(line: 1630, column: 14, scope: !8653)
!8653 = distinct !DILexicalBlock(scope: !8621, file: !1408, line: 1630, column: 6)
!8654 = !DILocation(line: 1630, column: 6, scope: !8621)
!8655 = !DILocation(line: 1638, column: 2, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8657, file: !1408, line: 1634, column: 34)
!8657 = distinct !DILexicalBlock(scope: !8653, file: !1408, line: 1634, column: 13)
!8658 = !DILocation(line: 0, scope: !8653)
!8659 = !DILocation(line: 1649, column: 35, scope: !8621)
!8660 = !DILocation(line: 1649, column: 2, scope: !8621)
!8661 = !DILocation(line: 1654, column: 14, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8621, file: !1408, line: 1654, column: 6)
!8663 = !DILocation(line: 1654, column: 6, scope: !8621)
!8664 = !DILocation(line: 1655, column: 3, scope: !8665)
!8665 = distinct !DILexicalBlock(scope: !8662, file: !1408, line: 1654, column: 31)
!8666 = !DILocation(line: 1656, column: 2, scope: !8665)
!8667 = !DILocation(line: 1659, column: 37, scope: !8621)
!8668 = !DILocation(line: 1659, column: 2, scope: !8621)
!8669 = !DILocation(line: 1662, column: 14, scope: !8670)
!8670 = distinct !DILexicalBlock(scope: !8621, file: !1408, line: 1662, column: 6)
!8671 = !DILocation(line: 1662, column: 6, scope: !8621)
!8672 = !DILocation(line: 1663, column: 37, scope: !8673)
!8673 = distinct !DILexicalBlock(scope: !8670, file: !1408, line: 1662, column: 27)
!8674 = !DILocation(line: 1663, column: 3, scope: !8673)
!8675 = !DILocation(line: 1664, column: 2, scope: !8673)
!8676 = !DILocation(line: 1684, column: 26, scope: !8621)
!8677 = !DILocation(line: 1684, column: 2, scope: !8621)
!8678 = !DILocation(line: 1722, column: 2, scope: !8621)
!8679 = !DILocation(line: 1724, column: 1, scope: !8621)
!8680 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1408, file: !1408, line: 651, type: !8681, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8683)
!8681 = !DISubroutineType(types: !8682)
!8682 = !{null, !1311}
!8683 = !{!8684, !8685, !8686}
!8684 = !DILocalVariable(name: "dev", arg: 1, scope: !8680, file: !1408, line: 651, type: !1311)
!8685 = !DILocalVariable(name: "data", scope: !8680, file: !1408, line: 653, type: !8101)
!8686 = !DILocalVariable(name: "clk", scope: !8680, file: !1408, line: 654, type: !8687)
!8687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1311)
!8688 = !DILocation(line: 0, scope: !8680)
!8689 = !DILocation(line: 653, column: 38, scope: !8680)
!8690 = !DILocation(line: 656, column: 8, scope: !8680)
!8691 = !DILocation(line: 656, column: 14, scope: !8680)
!8692 = !DILocation(line: 657, column: 1, scope: !8680)
!8693 = distinct !DISubprogram(name: "device_is_ready", scope: !4719, file: !4719, line: 47, type: !8694, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8696)
!8694 = !DISubroutineType(types: !8695)
!8695 = !{!163, !1311}
!8696 = !{!8697}
!8697 = !DILocalVariable(name: "dev", arg: 1, scope: !8693, file: !4719, line: 47, type: !1311)
!8698 = !DILocation(line: 0, scope: !8693)
!8699 = !DILocation(line: 55, column: 2, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8693, file: !4719, line: 55, column: 2)
!8701 = !{i64 2155125797}
!8702 = !DILocation(line: 56, column: 9, scope: !8693)
!8703 = !DILocation(line: 56, column: 2, scope: !8693)
!8704 = distinct !DISubprogram(name: "clock_control_on", scope: !217, file: !217, line: 123, type: !1370, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8705)
!8705 = !{!8706, !8707, !8708}
!8706 = !DILocalVariable(name: "dev", arg: 1, scope: !8704, file: !217, line: 123, type: !1311)
!8707 = !DILocalVariable(name: "sys", arg: 2, scope: !8704, file: !217, line: 124, type: !225)
!8708 = !DILocalVariable(name: "api", scope: !8704, file: !217, line: 126, type: !1363)
!8709 = !DILocation(line: 0, scope: !8704)
!8710 = !DILocation(line: 127, column: 49, scope: !8704)
!8711 = !DILocation(line: 129, column: 14, scope: !8704)
!8712 = !DILocation(line: 129, column: 9, scope: !8704)
!8713 = !DILocation(line: 129, column: 2, scope: !8704)
!8714 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1435, file: !1435, line: 342, type: !8715, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8717)
!8715 = !DISubroutineType(types: !8716)
!8716 = !{!103, !1483, !160}
!8717 = !{!8718, !8719, !8720, !8721}
!8718 = !DILocalVariable(name: "config", arg: 1, scope: !8714, file: !1435, line: 342, type: !1483)
!8719 = !DILocalVariable(name: "id", arg: 2, scope: !8714, file: !1435, line: 343, type: !160)
!8720 = !DILocalVariable(name: "ret", scope: !8714, file: !1435, line: 345, type: !103)
!8721 = !DILocalVariable(name: "state", scope: !8714, file: !1435, line: 346, type: !1438)
!8722 = !DILocation(line: 0, scope: !8714)
!8723 = !DILocation(line: 346, column: 2, scope: !8714)
!8724 = !DILocation(line: 348, column: 8, scope: !8714)
!8725 = !DILocation(line: 349, column: 10, scope: !8726)
!8726 = distinct !DILexicalBlock(scope: !8714, file: !1435, line: 349, column: 6)
!8727 = !DILocation(line: 349, column: 6, scope: !8714)
!8728 = !DILocation(line: 353, column: 44, scope: !8714)
!8729 = !DILocation(line: 353, column: 9, scope: !8714)
!8730 = !DILocation(line: 353, column: 2, scope: !8714)
!8731 = !DILocation(line: 354, column: 1, scope: !8714)
!8732 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !8287, file: !8287, line: 497, type: !8446, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8733)
!8733 = !{!8734, !8735, !8736}
!8734 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8732, file: !8287, line: 497, type: !1352)
!8735 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !8732, file: !8287, line: 497, type: !106)
!8736 = !DILocalVariable(name: "val", scope: !8737, file: !8287, line: 499, type: !106)
!8737 = distinct !DILexicalBlock(scope: !8732, file: !8287, line: 499, column: 3)
!8738 = !DILocation(line: 0, scope: !8732)
!8739 = !DILocation(line: 499, column: 3, scope: !8737)
!8740 = !DILocalVariable(name: "addr", arg: 1, scope: !8741, file: !4910, line: 476, type: !1404)
!8741 = distinct !DISubprogram(name: "__LDREXW", scope: !4910, file: !4910, line: 476, type: !8742, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8744)
!8742 = !DISubroutineType(types: !8743)
!8743 = !{!106, !1404}
!8744 = !{!8740, !8745}
!8745 = !DILocalVariable(name: "result", scope: !8741, file: !4910, line: 478, type: !106)
!8746 = !DILocation(line: 0, scope: !8741, inlinedAt: !8747)
!8747 = distinct !DILocation(line: 499, column: 3, scope: !8748)
!8748 = distinct !DILexicalBlock(scope: !8737, file: !8287, line: 499, column: 3)
!8749 = !DILocation(line: 480, column: 4, scope: !8741, inlinedAt: !8747)
!8750 = !{i64 3573267}
!8751 = !DILocation(line: 499, column: 3, scope: !8748)
!8752 = !DILocation(line: 0, scope: !8737)
!8753 = !DILocalVariable(name: "value", arg: 1, scope: !8754, file: !4910, line: 527, type: !106)
!8754 = distinct !DISubprogram(name: "__STREXW", scope: !4910, file: !4910, line: 527, type: !8755, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8757)
!8755 = !DISubroutineType(types: !8756)
!8756 = !{!106, !106, !1404}
!8757 = !{!8753, !8758, !8759}
!8758 = !DILocalVariable(name: "addr", arg: 2, scope: !8754, file: !4910, line: 527, type: !1404)
!8759 = !DILocalVariable(name: "result", scope: !8754, file: !4910, line: 529, type: !106)
!8760 = !DILocation(line: 0, scope: !8754, inlinedAt: !8761)
!8761 = distinct !DILocation(line: 499, column: 3, scope: !8737)
!8762 = !DILocation(line: 531, column: 4, scope: !8754, inlinedAt: !8761)
!8763 = !{i64 3574703}
!8764 = distinct !{!8764, !8739, !8739}
!8765 = !DILocation(line: 500, column: 1, scope: !8732)
!8766 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !8287, file: !8287, line: 850, type: !8455, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8767)
!8767 = !{!8768, !8769, !8770, !8771}
!8768 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8766, file: !8287, line: 850, type: !1352)
!8769 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !8766, file: !8287, line: 850, type: !106)
!8770 = !DILocalVariable(name: "Parity", arg: 3, scope: !8766, file: !8287, line: 850, type: !106)
!8771 = !DILocalVariable(name: "StopBits", arg: 4, scope: !8766, file: !8287, line: 851, type: !106)
!8772 = !DILocation(line: 0, scope: !8766)
!8773 = !DILocation(line: 853, column: 3, scope: !8766)
!8774 = !DILocation(line: 854, column: 3, scope: !8766)
!8775 = !DILocation(line: 855, column: 1, scope: !8766)
!8776 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !8287, file: !8287, line: 1337, type: !8350, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8777)
!8777 = !{!8778}
!8778 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8776, file: !8287, line: 1337, type: !1352)
!8779 = !DILocation(line: 0, scope: !8776)
!8780 = !DILocation(line: 1339, column: 3, scope: !8776)
!8781 = !DILocation(line: 1340, column: 1, scope: !8776)
!8782 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1435, file: !1435, line: 316, type: !8783, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8785)
!8783 = !DISubroutineType(types: !8784)
!8784 = !{!103, !1483, !1438}
!8785 = !{!8786, !8787, !8788}
!8786 = !DILocalVariable(name: "config", arg: 1, scope: !8782, file: !1435, line: 317, type: !1483)
!8787 = !DILocalVariable(name: "state", arg: 2, scope: !8782, file: !1435, line: 318, type: !1438)
!8788 = !DILocalVariable(name: "reg", scope: !8782, file: !1435, line: 320, type: !22)
!8789 = !DILocation(line: 0, scope: !8782)
!8790 = !DILocation(line: 329, column: 39, scope: !8782)
!8791 = !DILocation(line: 329, column: 52, scope: !8782)
!8792 = !DILocation(line: 329, column: 9, scope: !8782)
!8793 = !DILocation(line: 329, column: 2, scope: !8782)
!8794 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !147, file: !147, line: 730, type: !8694, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !8795)
!8795 = !{!8796}
!8796 = !DILocalVariable(name: "dev", arg: 1, scope: !8794, file: !147, line: 730, type: !1311)
!8797 = !DILocation(line: 0, scope: !8794)
!8798 = !DILocation(line: 732, column: 9, scope: !8794)
!8799 = !DILocation(line: 732, column: 2, scope: !8794)
!8800 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1566, file: !1566, line: 270, type: !1572, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !8801)
!8801 = !{!8802}
!8802 = !DILocalVariable(name: "dev", arg: 1, scope: !8800, file: !1566, line: 270, type: !1574)
!8803 = !DILocation(line: 0, scope: !8800)
!8804 = !DILocation(line: 274, column: 2, scope: !8800)
!8805 = !DILocation(line: 275, column: 12, scope: !8800)
!8806 = !DILocation(line: 276, column: 15, scope: !8800)
!8807 = !DILocation(line: 277, column: 16, scope: !8800)
!8808 = !DILocation(line: 278, column: 15, scope: !8800)
!8809 = !DILocation(line: 279, column: 16, scope: !8800)
!8810 = !DILocation(line: 282, column: 2, scope: !8800)
!8811 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !508, file: !508, line: 1814, type: !4944, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !8812)
!8812 = !{!8813, !8814}
!8813 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8811, file: !508, line: 1814, type: !762)
!8814 = !DILocalVariable(name: "priority", arg: 2, scope: !8811, file: !508, line: 1814, type: !106)
!8815 = !DILocation(line: 0, scope: !8811)
!8816 = !DILocation(line: 1822, column: 46, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8818, file: !508, line: 1821, column: 3)
!8818 = distinct !DILexicalBlock(scope: !8811, file: !508, line: 1816, column: 7)
!8819 = !DILocation(line: 1824, column: 1, scope: !8811)
!8820 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1566, file: !1566, line: 118, type: !4847, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !8821)
!8821 = !{!8822, !8823}
!8822 = !DILocalVariable(name: "arg", arg: 1, scope: !8820, file: !1566, line: 118, type: !102)
!8823 = !DILocalVariable(name: "dticks", scope: !8820, file: !1566, line: 121, type: !106)
!8824 = !DILocation(line: 0, scope: !8820)
!8825 = !DILocation(line: 124, column: 2, scope: !8820)
!8826 = !DILocation(line: 129, column: 17, scope: !8820)
!8827 = !DILocation(line: 129, column: 14, scope: !8820)
!8828 = !DILocation(line: 130, column: 15, scope: !8820)
!8829 = !DILocation(line: 145, column: 27, scope: !8830)
!8830 = distinct !DILexicalBlock(scope: !8831, file: !1566, line: 132, column: 16)
!8831 = distinct !DILexicalBlock(scope: !8820, file: !1566, line: 132, column: 6)
!8832 = !DILocation(line: 145, column: 25, scope: !8830)
!8833 = !DILocation(line: 145, column: 45, scope: !8830)
!8834 = !DILocation(line: 146, column: 30, scope: !8830)
!8835 = !DILocation(line: 146, column: 20, scope: !8830)
!8836 = !DILocation(line: 147, column: 3, scope: !8830)
!8837 = !DILocation(line: 151, column: 2, scope: !8820)
!8838 = !DILocation(line: 152, column: 1, scope: !8820)
!8839 = distinct !DISubprogram(name: "elapsed", scope: !1566, file: !1566, line: 85, type: !4745, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !8840)
!8840 = !{!8841, !8842, !8843}
!8841 = !DILocalVariable(name: "val1", scope: !8839, file: !1566, line: 87, type: !106)
!8842 = !DILocalVariable(name: "ctrl", scope: !8839, file: !1566, line: 88, type: !106)
!8843 = !DILocalVariable(name: "val2", scope: !8839, file: !1566, line: 89, type: !106)
!8844 = !DILocation(line: 87, column: 27, scope: !8839)
!8845 = !DILocation(line: 0, scope: !8839)
!8846 = !DILocation(line: 88, column: 27, scope: !8839)
!8847 = !DILocation(line: 89, column: 27, scope: !8839)
!8848 = !DILocation(line: 105, column: 12, scope: !8849)
!8849 = distinct !DILexicalBlock(scope: !8839, file: !1566, line: 105, column: 6)
!8850 = !DILocation(line: 106, column: 6, scope: !8849)
!8851 = !DILocation(line: 107, column: 16, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8849, file: !1566, line: 106, column: 24)
!8853 = !DILocation(line: 111, column: 18, scope: !8852)
!8854 = !DILocation(line: 112, column: 2, scope: !8852)
!8855 = !DILocation(line: 114, column: 20, scope: !8839)
!8856 = !DILocation(line: 114, column: 30, scope: !8839)
!8857 = !DILocation(line: 114, column: 28, scope: !8839)
!8858 = !DILocation(line: 114, column: 2, scope: !8839)
!8859 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1566, file: !1566, line: 154, type: !8860, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !8862)
!8860 = !DISubroutineType(types: !8861)
!8861 = !{null, !736, !163}
!8862 = !{!8863, !8864, !8865, !8866, !8867, !8868, !8869, !8874, !8875}
!8863 = !DILocalVariable(name: "ticks", arg: 1, scope: !8859, file: !1566, line: 154, type: !736)
!8864 = !DILocalVariable(name: "idle", arg: 2, scope: !8859, file: !1566, line: 154, type: !163)
!8865 = !DILocalVariable(name: "delay", scope: !8859, file: !1566, line: 169, type: !106)
!8866 = !DILocalVariable(name: "val1", scope: !8859, file: !1566, line: 170, type: !106)
!8867 = !DILocalVariable(name: "val2", scope: !8859, file: !1566, line: 170, type: !106)
!8868 = !DILocalVariable(name: "last_load_", scope: !8859, file: !1566, line: 171, type: !106)
!8869 = !DILocalVariable(name: "key", scope: !8859, file: !1566, line: 176, type: !8870)
!8870 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !473, line: 106, baseType: !8871)
!8871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !473, line: 32, size: 32, elements: !8872)
!8872 = !{!8873}
!8873 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !8871, file: !473, line: 33, baseType: !103, size: 32)
!8874 = !DILocalVariable(name: "pending", scope: !8859, file: !1566, line: 178, type: !106)
!8875 = !DILocalVariable(name: "unannounced", scope: !8859, file: !1566, line: 185, type: !106)
!8876 = !DILocation(line: 0, scope: !8859)
!8877 = !DILocation(line: 162, column: 49, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8859, file: !1566, line: 162, column: 6)
!8879 = !DILocation(line: 163, column: 17, scope: !8880)
!8880 = distinct !DILexicalBlock(scope: !8878, file: !1566, line: 162, column: 78)
!8881 = !DILocation(line: 164, column: 13, scope: !8880)
!8882 = !DILocation(line: 165, column: 3, scope: !8880)
!8883 = !DILocation(line: 171, column: 24, scope: !8859)
!8884 = !DILocation(line: 173, column: 10, scope: !8859)
!8885 = !DILocation(line: 174, column: 10, scope: !8859)
!8886 = !DILocalVariable(name: "l", arg: 1, scope: !8887, file: !473, line: 136, type: !8890)
!8887 = distinct !DISubprogram(name: "k_spin_lock", scope: !473, file: !473, line: 136, type: !8888, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !8891)
!8888 = !DISubroutineType(types: !8889)
!8889 = !{!8870, !8890}
!8890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1592, size: 32)
!8891 = !{!8886, !8892}
!8892 = !DILocalVariable(name: "k", scope: !8887, file: !473, line: 139, type: !8870)
!8893 = !DILocation(line: 0, scope: !8887, inlinedAt: !8894)
!8894 = distinct !DILocation(line: 176, column: 25, scope: !8859)
!8895 = !DILocation(line: 55, column: 2, scope: !8896, inlinedAt: !8900)
!8896 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4661, file: !4661, line: 42, type: !4662, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !8897)
!8897 = !{!8898, !8899}
!8898 = !DILocalVariable(name: "key", scope: !8896, file: !4661, line: 44, type: !32)
!8899 = !DILocalVariable(name: "tmp", scope: !8896, file: !4661, line: 53, type: !32)
!8900 = distinct !DILocation(line: 145, column: 10, scope: !8887, inlinedAt: !8894)
!8901 = !{i64 2195719}
!8902 = !DILocation(line: 0, scope: !8896, inlinedAt: !8900)
!8903 = !DILocation(line: 178, column: 21, scope: !8859)
!8904 = !DILocation(line: 180, column: 18, scope: !8859)
!8905 = !DILocation(line: 182, column: 14, scope: !8859)
!8906 = !DILocation(line: 183, column: 15, scope: !8859)
!8907 = !DILocation(line: 185, column: 39, scope: !8859)
!8908 = !DILocation(line: 185, column: 37, scope: !8859)
!8909 = !DILocation(line: 187, column: 27, scope: !8910)
!8910 = distinct !DILexicalBlock(scope: !8859, file: !1566, line: 187, column: 6)
!8911 = !DILocation(line: 187, column: 6, scope: !8859)
!8912 = !DILocation(line: 202, column: 27, scope: !8913)
!8913 = distinct !DILexicalBlock(scope: !8910, file: !1566, line: 195, column: 9)
!8914 = !DILocation(line: 202, column: 48, scope: !8913)
!8915 = !DILocation(line: 203, column: 9, scope: !8913)
!8916 = !DILocation(line: 204, column: 11, scope: !8913)
!8917 = !DILocation(line: 205, column: 13, scope: !8918)
!8918 = distinct !DILexicalBlock(scope: !8913, file: !1566, line: 205, column: 7)
!8919 = !DILocation(line: 205, column: 7, scope: !8913)
!8920 = !DILocation(line: 0, scope: !8910)
!8921 = !DILocation(line: 212, column: 18, scope: !8859)
!8922 = !DILocation(line: 214, column: 28, scope: !8859)
!8923 = !DILocation(line: 214, column: 16, scope: !8859)
!8924 = !DILocation(line: 215, column: 15, scope: !8859)
!8925 = !DILocation(line: 227, column: 11, scope: !8926)
!8926 = distinct !DILexicalBlock(scope: !8859, file: !1566, line: 227, column: 6)
!8927 = !DILocation(line: 227, column: 6, scope: !8859)
!8928 = !DILocation(line: 228, column: 15, scope: !8929)
!8929 = distinct !DILexicalBlock(scope: !8926, file: !1566, line: 227, column: 19)
!8930 = !DILocation(line: 228, column: 38, scope: !8929)
!8931 = !DILocation(line: 228, column: 24, scope: !8929)
!8932 = !DILocation(line: 229, column: 2, scope: !8929)
!8933 = !DILocation(line: 230, column: 24, scope: !8934)
!8934 = distinct !DILexicalBlock(scope: !8926, file: !1566, line: 229, column: 9)
!8935 = !DILocation(line: 230, column: 15, scope: !8934)
!8936 = !DILocation(line: 0, scope: !8926)
!8937 = !DILocalVariable(name: "key", arg: 2, scope: !8938, file: !473, line: 190, type: !8870)
!8938 = distinct !DISubprogram(name: "k_spin_unlock", scope: !473, file: !473, line: 189, type: !8939, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !8941)
!8939 = !DISubroutineType(types: !8940)
!8940 = !{null, !8890, !8870}
!8941 = !{!8942, !8937}
!8942 = !DILocalVariable(name: "l", arg: 1, scope: !8938, file: !473, line: 189, type: !8890)
!8943 = !DILocation(line: 0, scope: !8938, inlinedAt: !8944)
!8944 = distinct !DILocation(line: 232, column: 2, scope: !8859)
!8945 = !DILocalVariable(name: "key", arg: 1, scope: !8946, file: !4661, line: 84, type: !32)
!8946 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4661, file: !4661, line: 84, type: !4672, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !8947)
!8947 = !{!8945}
!8948 = !DILocation(line: 0, scope: !8946, inlinedAt: !8949)
!8949 = distinct !DILocation(line: 215, column: 2, scope: !8938, inlinedAt: !8944)
!8950 = !DILocation(line: 95, column: 2, scope: !8946, inlinedAt: !8949)
!8951 = !{i64 2196536}
!8952 = !DILocation(line: 234, column: 1, scope: !8859)
!8953 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1566, file: !1566, line: 236, type: !4745, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !8954)
!8954 = !{!8955, !8956}
!8955 = !DILocalVariable(name: "key", scope: !8953, file: !1566, line: 242, type: !8870)
!8956 = !DILocalVariable(name: "cyc", scope: !8953, file: !1566, line: 243, type: !106)
!8957 = !DILocation(line: 0, scope: !8887, inlinedAt: !8958)
!8958 = distinct !DILocation(line: 242, column: 25, scope: !8953)
!8959 = !DILocation(line: 55, column: 2, scope: !8896, inlinedAt: !8960)
!8960 = distinct !DILocation(line: 145, column: 10, scope: !8887, inlinedAt: !8958)
!8961 = !DILocation(line: 0, scope: !8896, inlinedAt: !8960)
!8962 = !DILocation(line: 0, scope: !8953)
!8963 = !DILocation(line: 243, column: 17, scope: !8953)
!8964 = !DILocation(line: 243, column: 29, scope: !8953)
!8965 = !DILocation(line: 243, column: 27, scope: !8953)
!8966 = !DILocation(line: 243, column: 43, scope: !8953)
!8967 = !DILocation(line: 243, column: 41, scope: !8953)
!8968 = !DILocation(line: 0, scope: !8938, inlinedAt: !8969)
!8969 = distinct !DILocation(line: 245, column: 2, scope: !8953)
!8970 = !DILocation(line: 0, scope: !8946, inlinedAt: !8971)
!8971 = distinct !DILocation(line: 215, column: 2, scope: !8938, inlinedAt: !8969)
!8972 = !DILocation(line: 95, column: 2, scope: !8946, inlinedAt: !8971)
!8973 = !DILocation(line: 246, column: 13, scope: !8953)
!8974 = !DILocation(line: 246, column: 2, scope: !8953)
!8975 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1566, file: !1566, line: 249, type: !4745, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !8976)
!8976 = !{!8977, !8978}
!8977 = !DILocalVariable(name: "key", scope: !8975, file: !1566, line: 251, type: !8870)
!8978 = !DILocalVariable(name: "ret", scope: !8975, file: !1566, line: 252, type: !106)
!8979 = !DILocation(line: 0, scope: !8887, inlinedAt: !8980)
!8980 = distinct !DILocation(line: 251, column: 25, scope: !8975)
!8981 = !DILocation(line: 55, column: 2, scope: !8896, inlinedAt: !8982)
!8982 = distinct !DILocation(line: 145, column: 10, scope: !8887, inlinedAt: !8980)
!8983 = !DILocation(line: 0, scope: !8896, inlinedAt: !8982)
!8984 = !DILocation(line: 0, scope: !8975)
!8985 = !DILocation(line: 252, column: 17, scope: !8975)
!8986 = !DILocation(line: 252, column: 29, scope: !8975)
!8987 = !DILocation(line: 252, column: 27, scope: !8975)
!8988 = !DILocation(line: 0, scope: !8938, inlinedAt: !8989)
!8989 = distinct !DILocation(line: 254, column: 2, scope: !8975)
!8990 = !DILocation(line: 0, scope: !8946, inlinedAt: !8991)
!8991 = distinct !DILocation(line: 215, column: 2, scope: !8938, inlinedAt: !8989)
!8992 = !DILocation(line: 95, column: 2, scope: !8946, inlinedAt: !8991)
!8993 = !DILocation(line: 255, column: 2, scope: !8975)
!8994 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1566, file: !1566, line: 258, type: !2860, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !474)
!8995 = !DILocation(line: 260, column: 6, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8994, file: !1566, line: 260, column: 6)
!8997 = !DILocation(line: 260, column: 16, scope: !8996)
!8998 = !DILocation(line: 260, column: 6, scope: !8994)
!8999 = !DILocation(line: 261, column: 17, scope: !9000)
!9000 = distinct !DILexicalBlock(scope: !8996, file: !1566, line: 260, column: 34)
!9001 = !DILocation(line: 262, column: 2, scope: !9000)
!9002 = !DILocation(line: 263, column: 1, scope: !8994)
!9003 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1566, file: !1566, line: 265, type: !2860, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !474)
!9004 = !DILocation(line: 267, column: 16, scope: !9003)
!9005 = !DILocation(line: 268, column: 1, scope: !9003)
!9006 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !9007, file: !9007, line: 9, type: !9008, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !9031)
!9007 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9008 = !DISubroutineType(types: !9009)
!9009 = !{!103, !9010, !160, !9030}
!9010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9011, size: 32)
!9011 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9012)
!9012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1435, line: 60, size: 64, elements: !9013)
!9013 = !{!9014, !9029}
!9014 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !9012, file: !1435, line: 69, baseType: !9015, size: 32)
!9015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9016, size: 32)
!9016 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9017)
!9017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1435, line: 50, size: 64, elements: !9018)
!9018 = !{!9019, !9027, !9028}
!9019 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !9017, file: !1435, line: 52, baseType: !9020, size: 32)
!9020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9021, size: 32)
!9021 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9022)
!9022 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1446, line: 37, baseType: !9023)
!9023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1446, line: 32, size: 64, elements: !9024)
!9024 = !{!9025, !9026}
!9025 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9023, file: !1446, line: 34, baseType: !106, size: 32)
!9026 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !9023, file: !1446, line: 36, baseType: !106, size: 32, offset: 32)
!9027 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !9017, file: !1435, line: 54, baseType: !160, size: 8, offset: 32)
!9028 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9017, file: !1435, line: 56, baseType: !160, size: 8, offset: 40)
!9029 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !9012, file: !1435, line: 71, baseType: !160, size: 8, offset: 32)
!9030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9015, size: 32)
!9031 = !{!9032, !9033, !9034}
!9032 = !DILocalVariable(name: "config", arg: 1, scope: !9006, file: !9007, line: 9, type: !9010)
!9033 = !DILocalVariable(name: "id", arg: 2, scope: !9006, file: !9007, line: 9, type: !160)
!9034 = !DILocalVariable(name: "state", arg: 3, scope: !9006, file: !9007, line: 10, type: !9030)
!9035 = !DILocation(line: 0, scope: !9006)
!9036 = !DILocation(line: 12, column: 20, scope: !9006)
!9037 = !DILocation(line: 13, column: 27, scope: !9006)
!9038 = !DILocation(line: 13, column: 42, scope: !9006)
!9039 = !DILocation(line: 13, column: 19, scope: !9006)
!9040 = !DILocation(line: 13, column: 16, scope: !9006)
!9041 = !DILocation(line: 13, column: 2, scope: !9006)
!9042 = distinct !{!9042, !9041, !9043}
!9043 = !DILocation(line: 19, column: 2, scope: !9006)
!9044 = !DILocation(line: 14, column: 23, scope: !9045)
!9045 = distinct !DILexicalBlock(scope: !9046, file: !9007, line: 14, column: 7)
!9046 = distinct !DILexicalBlock(scope: !9006, file: !9007, line: 13, column: 54)
!9047 = !DILocation(line: 14, column: 10, scope: !9045)
!9048 = !DILocation(line: 18, column: 11, scope: !9046)
!9049 = !DILocation(line: 14, column: 7, scope: !9046)
!9050 = !DILocation(line: 22, column: 1, scope: !9006)
!9051 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1683, file: !1683, line: 193, type: !9052, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1601, retainedNodes: !9061)
!9052 = !DISubroutineType(types: !9053)
!9053 = !{!103, !9054, !160, !22}
!9054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9055, size: 32)
!9055 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9056)
!9056 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1446, line: 37, baseType: !9057)
!9057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1446, line: 32, size: 64, elements: !9058)
!9058 = !{!9059, !9060}
!9059 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9057, file: !1446, line: 34, baseType: !106, size: 32)
!9060 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !9057, file: !1446, line: 36, baseType: !106, size: 32, offset: 32)
!9061 = !{!9062, !9063, !9064, !9065, !9066, !9067, !9068, !9069, !9071}
!9062 = !DILocalVariable(name: "pins", arg: 1, scope: !9051, file: !1683, line: 193, type: !9054)
!9063 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !9051, file: !1683, line: 193, type: !160)
!9064 = !DILocalVariable(name: "reg", arg: 3, scope: !9051, file: !1683, line: 194, type: !22)
!9065 = !DILocalVariable(name: "pin", scope: !9051, file: !1683, line: 196, type: !106)
!9066 = !DILocalVariable(name: "mux", scope: !9051, file: !1683, line: 196, type: !106)
!9067 = !DILocalVariable(name: "pin_cgf", scope: !9051, file: !1683, line: 197, type: !106)
!9068 = !DILocalVariable(name: "ret", scope: !9051, file: !1683, line: 198, type: !103)
!9069 = !DILocalVariable(name: "i", scope: !9070, file: !1683, line: 209, type: !160)
!9070 = distinct !DILexicalBlock(scope: !9051, file: !1683, line: 209, column: 2)
!9071 = !DILocalVariable(name: "gpio_out", scope: !9072, file: !1683, line: 239, type: !106)
!9072 = distinct !DILexicalBlock(scope: !9073, file: !1683, line: 238, column: 55)
!9073 = distinct !DILexicalBlock(scope: !9074, file: !1683, line: 238, column: 14)
!9074 = distinct !DILexicalBlock(scope: !9075, file: !1683, line: 236, column: 14)
!9075 = distinct !DILexicalBlock(scope: !9076, file: !1683, line: 234, column: 7)
!9076 = distinct !DILexicalBlock(scope: !9077, file: !1683, line: 209, column: 41)
!9077 = distinct !DILexicalBlock(scope: !9070, file: !1683, line: 209, column: 2)
!9078 = !DILocation(line: 0, scope: !9051)
!9079 = !DILocation(line: 0, scope: !9070)
!9080 = !DILocation(line: 209, column: 25, scope: !9077)
!9081 = !DILocation(line: 209, column: 2, scope: !9070)
!9082 = distinct !{!9082, !9081, !9083}
!9083 = !DILocation(line: 259, column: 2, scope: !9070)
!9084 = !DILocation(line: 210, column: 17, scope: !9076)
!9085 = !DILocation(line: 234, column: 7, scope: !9075)
!9086 = !DILocation(line: 234, column: 33, scope: !9075)
!9087 = !DILocation(line: 234, column: 7, scope: !9076)
!9088 = !DILocation(line: 235, column: 22, scope: !9089)
!9089 = distinct !DILexicalBlock(scope: !9075, file: !1683, line: 234, column: 49)
!9090 = !DILocation(line: 235, column: 29, scope: !9089)
!9091 = !DILocation(line: 236, column: 3, scope: !9089)
!9092 = !DILocation(line: 236, column: 14, scope: !9075)
!9093 = !DILocation(line: 239, column: 32, scope: !9072)
!9094 = !DILocation(line: 0, scope: !9072)
!9095 = !DILocation(line: 241, column: 8, scope: !9072)
!9096 = !DILocation(line: 246, column: 3, scope: !9072)
!9097 = !DILocation(line: 252, column: 9, scope: !9076)
!9098 = !DILocation(line: 255, column: 9, scope: !9076)
!9099 = !DILocation(line: 256, column: 11, scope: !9100)
!9100 = distinct !DILexicalBlock(scope: !9076, file: !1683, line: 256, column: 7)
!9101 = !DILocation(line: 209, column: 37, scope: !9077)
!9102 = !DILocation(line: 256, column: 7, scope: !9076)
!9103 = !DILocation(line: 262, column: 1, scope: !9051)
!9104 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1683, file: !1683, line: 176, type: !9105, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1601, retainedNodes: !9107)
!9105 = !DISubroutineType(types: !9106)
!9106 = !{!103, !106, !106, !106}
!9107 = !{!9108, !9109, !9110, !9111}
!9108 = !DILocalVariable(name: "pin", arg: 1, scope: !9104, file: !1683, line: 176, type: !106)
!9109 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !9104, file: !1683, line: 176, type: !106)
!9110 = !DILocalVariable(name: "pin_func", arg: 3, scope: !9104, file: !1683, line: 176, type: !106)
!9111 = !DILocalVariable(name: "port_device", scope: !9104, file: !1683, line: 178, type: !1613)
!9112 = !DILocation(line: 0, scope: !9104)
!9113 = !DILocation(line: 180, column: 22, scope: !9114)
!9114 = distinct !DILexicalBlock(scope: !9104, file: !1683, line: 180, column: 6)
!9115 = !DILocation(line: 180, column: 6, scope: !9104)
!9116 = !DILocation(line: 180, column: 6, scope: !9114)
!9117 = !DILocation(line: 184, column: 16, scope: !9104)
!9118 = !DILocation(line: 186, column: 19, scope: !9119)
!9119 = distinct !DILexicalBlock(scope: !9104, file: !1683, line: 186, column: 6)
!9120 = !DILocation(line: 186, column: 28, scope: !9119)
!9121 = !DILocation(line: 186, column: 33, scope: !9119)
!9122 = !DILocation(line: 186, column: 6, scope: !9104)
!9123 = !DILocation(line: 190, column: 43, scope: !9104)
!9124 = !DILocation(line: 190, column: 9, scope: !9104)
!9125 = !DILocation(line: 190, column: 2, scope: !9104)
!9126 = !DILocation(line: 191, column: 1, scope: !9104)
!9127 = distinct !DISubprogram(name: "device_is_ready", scope: !4719, file: !4719, line: 47, type: !9128, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1601, retainedNodes: !9130)
!9128 = !DISubroutineType(types: !9129)
!9129 = !{!163, !1613}
!9130 = !{!9131}
!9131 = !DILocalVariable(name: "dev", arg: 1, scope: !9127, file: !4719, line: 47, type: !1613)
!9132 = !DILocation(line: 0, scope: !9127)
!9133 = !DILocation(line: 55, column: 2, scope: !9134)
!9134 = distinct !DILexicalBlock(scope: !9127, file: !4719, line: 55, column: 2)
!9135 = !{i64 2149429725}
!9136 = !DILocation(line: 56, column: 9, scope: !9127)
!9137 = !DILocation(line: 56, column: 2, scope: !9127)
!9138 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !147, file: !147, line: 730, type: !9128, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1601, retainedNodes: !9139)
!9139 = !{!9140}
!9140 = !DILocalVariable(name: "dev", arg: 1, scope: !9138, file: !147, line: 730, type: !1613)
!9141 = !DILocation(line: 0, scope: !9138)
!9142 = !DILocation(line: 732, column: 9, scope: !9138)
!9143 = !DILocation(line: 732, column: 2, scope: !9138)
!9144 = distinct !DISubprogram(name: "SystemInit", scope: !1731, file: !1731, line: 167, type: !2860, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1691, retainedNodes: !474)
!9145 = !DILocation(line: 182, column: 1, scope: !9144)
!9146 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1731, file: !1731, line: 220, type: !2860, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1691, retainedNodes: !9147)
!9147 = !{!9148, !9149, !9150, !9151, !9152}
!9148 = !DILocalVariable(name: "tmp", scope: !9146, file: !1731, line: 222, type: !106)
!9149 = !DILocalVariable(name: "pllvco", scope: !9146, file: !1731, line: 222, type: !106)
!9150 = !DILocalVariable(name: "pllp", scope: !9146, file: !1731, line: 222, type: !106)
!9151 = !DILocalVariable(name: "pllsource", scope: !9146, file: !1731, line: 222, type: !106)
!9152 = !DILocalVariable(name: "pllm", scope: !9146, file: !1731, line: 222, type: !106)
!9153 = !DILocation(line: 0, scope: !9146)
!9154 = !DILocation(line: 225, column: 14, scope: !9146)
!9155 = !DILocation(line: 225, column: 19, scope: !9146)
!9156 = !DILocation(line: 227, column: 3, scope: !9146)
!9157 = !DILocation(line: 234, column: 7, scope: !9158)
!9158 = distinct !DILexicalBlock(scope: !9146, file: !1731, line: 228, column: 3)
!9159 = !DILocation(line: 240, column: 25, scope: !9158)
!9160 = !DILocation(line: 241, column: 19, scope: !9158)
!9161 = !DILocation(line: 241, column: 27, scope: !9158)
!9162 = !DILocation(line: 243, column: 21, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9158, file: !1731, line: 243, column: 11)
!9164 = !DILocation(line: 0, scope: !9163)
!9165 = !DILocation(line: 254, column: 22, scope: !9158)
!9166 = !DILocation(line: 254, column: 62, scope: !9158)
!9167 = !DILocation(line: 255, column: 31, scope: !9158)
!9168 = !DILocation(line: 256, column: 7, scope: !9158)
!9169 = !DILocation(line: 0, scope: !9158)
!9170 = !DILocation(line: 263, column: 30, scope: !9146)
!9171 = !DILocation(line: 263, column: 52, scope: !9146)
!9172 = !DILocation(line: 263, column: 9, scope: !9146)
!9173 = !DILocation(line: 265, column: 19, scope: !9146)
!9174 = !DILocation(line: 266, column: 1, scope: !9146)
!9175 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !9176, file: !9176, line: 200, type: !9177, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !474)
!9176 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9177 = !DISubroutineType(types: !9178)
!9178 = !{!9179}
!9179 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2677, line: 44, baseType: !2676)
!9180 = !DILocation(line: 202, column: 3, scope: !9175)
!9181 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !9176, file: !9176, line: 219, type: !9182, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !9206)
!9182 = !DISubroutineType(types: !9183)
!9183 = !{!9179, !9184}
!9184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9185, size: 32)
!9185 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !9186, line: 70, baseType: !9187)
!9186 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9187 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9186, line: 49, size: 384, elements: !9188)
!9188 = !{!9189, !9190, !9191, !9192, !9193, !9194, !9195}
!9189 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !9187, file: !9186, line: 51, baseType: !106, size: 32)
!9190 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !9187, file: !9186, line: 54, baseType: !106, size: 32, offset: 32)
!9191 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !9187, file: !9186, line: 57, baseType: !106, size: 32, offset: 64)
!9192 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !9187, file: !9186, line: 60, baseType: !106, size: 32, offset: 96)
!9193 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !9187, file: !9186, line: 63, baseType: !106, size: 32, offset: 128)
!9194 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !9187, file: !9186, line: 66, baseType: !106, size: 32, offset: 160)
!9195 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !9187, file: !9186, line: 69, baseType: !9196, size: 192, offset: 192)
!9196 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !9197, line: 73, baseType: !9198)
!9197 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9198 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9197, line: 45, size: 192, elements: !9199)
!9199 = !{!9200, !9201, !9202, !9203, !9204, !9205}
!9200 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !9198, file: !9197, line: 47, baseType: !106, size: 32)
!9201 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !9198, file: !9197, line: 50, baseType: !106, size: 32, offset: 32)
!9202 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !9198, file: !9197, line: 53, baseType: !106, size: 32, offset: 64)
!9203 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !9198, file: !9197, line: 56, baseType: !106, size: 32, offset: 96)
!9204 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !9198, file: !9197, line: 60, baseType: !106, size: 32, offset: 128)
!9205 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !9198, file: !9197, line: 63, baseType: !106, size: 32, offset: 160)
!9206 = !{!9207, !9208, !9209, !9210, !9214}
!9207 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !9181, file: !9176, line: 219, type: !9184)
!9208 = !DILocalVariable(name: "tickstart", scope: !9181, file: !9176, line: 221, type: !106)
!9209 = !DILocalVariable(name: "pll_config", scope: !9181, file: !9176, line: 221, type: !106)
!9210 = !DILocalVariable(name: "pwrclkchanged", scope: !9211, file: !9176, line: 391, type: !9213)
!9211 = distinct !DILexicalBlock(scope: !9212, file: !9176, line: 390, column: 3)
!9212 = distinct !DILexicalBlock(scope: !9181, file: !9176, line: 389, column: 6)
!9213 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !769, line: 188, baseType: !2683)
!9214 = !DILocalVariable(name: "tmpreg", scope: !9215, file: !9176, line: 400, type: !127)
!9215 = distinct !DILexicalBlock(scope: !9216, file: !9176, line: 400, column: 7)
!9216 = distinct !DILexicalBlock(scope: !9217, file: !9176, line: 399, column: 5)
!9217 = distinct !DILexicalBlock(scope: !9211, file: !9176, line: 398, column: 8)
!9218 = !DILocation(line: 0, scope: !9181)
!9219 = !DILocation(line: 224, column: 24, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9181, file: !9176, line: 224, column: 6)
!9221 = !DILocation(line: 224, column: 6, scope: !9181)
!9222 = !DILocation(line: 232, column: 27, scope: !9223)
!9223 = distinct !DILexicalBlock(scope: !9181, file: !9176, line: 232, column: 6)
!9224 = !DILocation(line: 232, column: 43, scope: !9223)
!9225 = !DILocation(line: 232, column: 69, scope: !9223)
!9226 = !DILocation(line: 232, column: 6, scope: !9181)
!9227 = !DILocation(line: 237, column: 9, scope: !9228)
!9228 = distinct !DILexicalBlock(scope: !9229, file: !9176, line: 237, column: 8)
!9229 = distinct !DILexicalBlock(scope: !9223, file: !9176, line: 233, column: 3)
!9230 = !DILocation(line: 237, column: 39, scope: !9228)
!9231 = !DILocation(line: 237, column: 60, scope: !9228)
!9232 = !DILocation(line: 238, column: 9, scope: !9228)
!9233 = !DILocation(line: 238, column: 39, scope: !9228)
!9234 = !DILocation(line: 238, column: 60, scope: !9228)
!9235 = !DILocation(line: 238, column: 70, scope: !9228)
!9236 = !DILocation(line: 238, column: 78, scope: !9228)
!9237 = !DILocation(line: 238, column: 100, scope: !9228)
!9238 = !DILocation(line: 237, column: 8, scope: !9229)
!9239 = !DILocation(line: 240, column: 11, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !9241, file: !9176, line: 240, column: 10)
!9241 = distinct !DILexicalBlock(scope: !9228, file: !9176, line: 239, column: 5)
!9242 = !DILocation(line: 240, column: 57, scope: !9240)
!9243 = !DILocation(line: 240, column: 80, scope: !9240)
!9244 = !DILocation(line: 240, column: 89, scope: !9240)
!9245 = !DILocation(line: 240, column: 10, scope: !9241)
!9246 = !DILocation(line: 248, column: 7, scope: !9247)
!9247 = distinct !DILexicalBlock(scope: !9248, file: !9176, line: 248, column: 7)
!9248 = distinct !DILexicalBlock(scope: !9249, file: !9176, line: 248, column: 7)
!9249 = distinct !DILexicalBlock(scope: !9228, file: !9176, line: 246, column: 5)
!9250 = !DILocation(line: 248, column: 7, scope: !9248)
!9251 = !DILocation(line: 248, column: 7, scope: !9252)
!9252 = distinct !DILexicalBlock(scope: !9247, file: !9176, line: 248, column: 7)
!9253 = !DILocation(line: 248, column: 7, scope: !9254)
!9254 = distinct !DILexicalBlock(scope: !9255, file: !9176, line: 248, column: 7)
!9255 = distinct !DILexicalBlock(scope: !9247, file: !9176, line: 248, column: 7)
!9256 = !DILocation(line: 248, column: 7, scope: !9257)
!9257 = distinct !DILexicalBlock(scope: !9255, file: !9176, line: 248, column: 7)
!9258 = !DILocation(line: 0, scope: !9247)
!9259 = !DILocation(line: 251, column: 30, scope: !9260)
!9260 = distinct !DILexicalBlock(scope: !9249, file: !9176, line: 251, column: 10)
!9261 = !DILocation(line: 251, column: 40, scope: !9260)
!9262 = !DILocation(line: 0, scope: !9260)
!9263 = !DILocation(line: 251, column: 10, scope: !9249)
!9264 = !DILocation(line: 257, column: 15, scope: !9265)
!9265 = distinct !DILexicalBlock(scope: !9260, file: !9176, line: 252, column: 7)
!9266 = !DILocation(line: 257, column: 51, scope: !9265)
!9267 = !DILocation(line: 257, column: 9, scope: !9265)
!9268 = !DILocation(line: 259, column: 15, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !9270, file: !9176, line: 259, column: 14)
!9270 = distinct !DILexicalBlock(scope: !9265, file: !9176, line: 258, column: 9)
!9271 = !DILocation(line: 259, column: 29, scope: !9269)
!9272 = !DILocation(line: 259, column: 43, scope: !9269)
!9273 = !DILocation(line: 259, column: 14, scope: !9270)
!9274 = distinct !{!9274, !9267, !9275}
!9275 = !DILocation(line: 263, column: 9, scope: !9265)
!9276 = !DILocation(line: 271, column: 15, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !9260, file: !9176, line: 266, column: 7)
!9278 = !DILocation(line: 271, column: 9, scope: !9277)
!9279 = !DILocation(line: 273, column: 15, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9281, file: !9176, line: 273, column: 14)
!9281 = distinct !DILexicalBlock(scope: !9277, file: !9176, line: 272, column: 9)
!9282 = !DILocation(line: 273, column: 29, scope: !9280)
!9283 = !DILocation(line: 273, column: 43, scope: !9280)
!9284 = !DILocation(line: 273, column: 14, scope: !9281)
!9285 = distinct !{!9285, !9278, !9286}
!9286 = !DILocation(line: 277, column: 9, scope: !9277)
!9287 = !DILocation(line: 282, column: 27, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9181, file: !9176, line: 282, column: 6)
!9289 = !DILocation(line: 282, column: 43, scope: !9288)
!9290 = !DILocation(line: 282, column: 69, scope: !9288)
!9291 = !DILocation(line: 282, column: 6, scope: !9181)
!9292 = !DILocation(line: 289, column: 9, scope: !9293)
!9293 = distinct !DILexicalBlock(scope: !9294, file: !9176, line: 289, column: 8)
!9294 = distinct !DILexicalBlock(scope: !9288, file: !9176, line: 283, column: 3)
!9295 = !DILocation(line: 289, column: 39, scope: !9293)
!9296 = !DILocation(line: 289, column: 60, scope: !9293)
!9297 = !DILocation(line: 290, column: 9, scope: !9293)
!9298 = !DILocation(line: 290, column: 39, scope: !9293)
!9299 = !DILocation(line: 290, column: 60, scope: !9293)
!9300 = !DILocation(line: 290, column: 70, scope: !9293)
!9301 = !DILocation(line: 290, column: 78, scope: !9293)
!9302 = !DILocation(line: 290, column: 100, scope: !9293)
!9303 = !DILocation(line: 289, column: 8, scope: !9294)
!9304 = !DILocation(line: 293, column: 11, scope: !9305)
!9305 = distinct !DILexicalBlock(scope: !9306, file: !9176, line: 293, column: 10)
!9306 = distinct !DILexicalBlock(scope: !9293, file: !9176, line: 291, column: 5)
!9307 = !DILocation(line: 293, column: 57, scope: !9305)
!9308 = !DILocation(line: 293, column: 80, scope: !9305)
!9309 = !DILocation(line: 293, column: 89, scope: !9305)
!9310 = !DILocation(line: 293, column: 10, scope: !9306)
!9311 = !DILocation(line: 307, column: 30, scope: !9312)
!9312 = distinct !DILexicalBlock(scope: !9313, file: !9176, line: 307, column: 10)
!9313 = distinct !DILexicalBlock(scope: !9293, file: !9176, line: 305, column: 5)
!9314 = !DILocation(line: 307, column: 39, scope: !9312)
!9315 = !DILocation(line: 307, column: 10, scope: !9313)
!9316 = !DILocation(line: 310, column: 9, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9312, file: !9176, line: 308, column: 7)
!9318 = !DILocation(line: 313, column: 21, scope: !9317)
!9319 = !DILocation(line: 316, column: 9, scope: !9317)
!9320 = !DILocation(line: 316, column: 15, scope: !9317)
!9321 = !DILocation(line: 316, column: 51, scope: !9317)
!9322 = !DILocation(line: 318, column: 15, scope: !9323)
!9323 = distinct !DILexicalBlock(scope: !9324, file: !9176, line: 318, column: 14)
!9324 = distinct !DILexicalBlock(scope: !9317, file: !9176, line: 317, column: 9)
!9325 = !DILocation(line: 318, column: 29, scope: !9323)
!9326 = !DILocation(line: 318, column: 43, scope: !9323)
!9327 = !DILocation(line: 318, column: 14, scope: !9324)
!9328 = distinct !{!9328, !9319, !9329}
!9329 = !DILocation(line: 322, column: 9, scope: !9317)
!9330 = !DILocation(line: 330, column: 9, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9312, file: !9176, line: 328, column: 7)
!9332 = !DILocation(line: 333, column: 21, scope: !9331)
!9333 = !DILocation(line: 336, column: 9, scope: !9331)
!9334 = !DILocation(line: 336, column: 15, scope: !9331)
!9335 = !DILocation(line: 338, column: 15, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9337, file: !9176, line: 338, column: 14)
!9337 = distinct !DILexicalBlock(scope: !9331, file: !9176, line: 337, column: 9)
!9338 = !DILocation(line: 338, column: 29, scope: !9336)
!9339 = !DILocation(line: 338, column: 43, scope: !9336)
!9340 = !DILocation(line: 338, column: 14, scope: !9337)
!9341 = distinct !{!9341, !9333, !9342}
!9342 = !DILocation(line: 342, column: 9, scope: !9331)
!9343 = !DILocation(line: 0, scope: !9293)
!9344 = !DILocation(line: 347, column: 27, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !9181, file: !9176, line: 347, column: 6)
!9346 = !DILocation(line: 347, column: 43, scope: !9345)
!9347 = !DILocation(line: 347, column: 69, scope: !9345)
!9348 = !DILocation(line: 347, column: 6, scope: !9181)
!9349 = !DILocation(line: 353, column: 28, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9351, file: !9176, line: 353, column: 8)
!9351 = distinct !DILexicalBlock(scope: !9345, file: !9176, line: 348, column: 3)
!9352 = !DILocation(line: 353, column: 37, scope: !9350)
!9353 = !DILocation(line: 353, column: 8, scope: !9351)
!9354 = !DILocation(line: 356, column: 7, scope: !9355)
!9355 = distinct !DILexicalBlock(scope: !9350, file: !9176, line: 354, column: 5)
!9356 = !DILocation(line: 359, column: 19, scope: !9355)
!9357 = !DILocation(line: 362, column: 7, scope: !9355)
!9358 = !DILocation(line: 362, column: 13, scope: !9355)
!9359 = !DILocation(line: 362, column: 49, scope: !9355)
!9360 = !DILocation(line: 364, column: 13, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9362, file: !9176, line: 364, column: 12)
!9362 = distinct !DILexicalBlock(scope: !9355, file: !9176, line: 363, column: 7)
!9363 = !DILocation(line: 364, column: 27, scope: !9361)
!9364 = !DILocation(line: 364, column: 41, scope: !9361)
!9365 = !DILocation(line: 364, column: 12, scope: !9362)
!9366 = distinct !{!9366, !9357, !9367}
!9367 = !DILocation(line: 368, column: 7, scope: !9355)
!9368 = !DILocation(line: 373, column: 7, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9350, file: !9176, line: 371, column: 5)
!9370 = !DILocation(line: 376, column: 19, scope: !9369)
!9371 = !DILocation(line: 379, column: 7, scope: !9369)
!9372 = !DILocation(line: 379, column: 13, scope: !9369)
!9373 = !DILocation(line: 381, column: 13, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9375, file: !9176, line: 381, column: 12)
!9375 = distinct !DILexicalBlock(scope: !9369, file: !9176, line: 380, column: 7)
!9376 = !DILocation(line: 381, column: 27, scope: !9374)
!9377 = !DILocation(line: 381, column: 41, scope: !9374)
!9378 = !DILocation(line: 381, column: 12, scope: !9375)
!9379 = distinct !{!9379, !9371, !9380}
!9380 = !DILocation(line: 385, column: 7, scope: !9369)
!9381 = !DILocation(line: 389, column: 27, scope: !9212)
!9382 = !DILocation(line: 389, column: 43, scope: !9212)
!9383 = !DILocation(line: 389, column: 69, scope: !9212)
!9384 = !DILocation(line: 389, column: 6, scope: !9181)
!9385 = !DILocation(line: 0, scope: !9211)
!9386 = !DILocation(line: 398, column: 8, scope: !9217)
!9387 = !DILocation(line: 398, column: 8, scope: !9211)
!9388 = !DILocation(line: 400, column: 7, scope: !9215)
!9389 = !DILocation(line: 400, column: 7, scope: !9216)
!9390 = !DILocation(line: 402, column: 5, scope: !9216)
!9391 = !DILocation(line: 404, column: 8, scope: !9392)
!9392 = distinct !DILexicalBlock(scope: !9211, file: !9176, line: 404, column: 8)
!9393 = !DILocation(line: 404, column: 8, scope: !9211)
!9394 = !DILocation(line: 407, column: 7, scope: !9395)
!9395 = distinct !DILexicalBlock(scope: !9392, file: !9176, line: 405, column: 5)
!9396 = !DILocation(line: 410, column: 19, scope: !9395)
!9397 = !DILocation(line: 412, column: 7, scope: !9395)
!9398 = !DILocation(line: 412, column: 13, scope: !9395)
!9399 = !DILocation(line: 414, column: 13, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !9401, file: !9176, line: 414, column: 12)
!9401 = distinct !DILexicalBlock(scope: !9395, file: !9176, line: 413, column: 7)
!9402 = !DILocation(line: 414, column: 27, scope: !9400)
!9403 = !DILocation(line: 414, column: 40, scope: !9400)
!9404 = !DILocation(line: 414, column: 12, scope: !9401)
!9405 = distinct !{!9405, !9397, !9406}
!9406 = !DILocation(line: 418, column: 7, scope: !9395)
!9407 = !DILocation(line: 422, column: 5, scope: !9408)
!9408 = distinct !DILexicalBlock(scope: !9409, file: !9176, line: 422, column: 5)
!9409 = distinct !DILexicalBlock(scope: !9211, file: !9176, line: 422, column: 5)
!9410 = !DILocation(line: 422, column: 5, scope: !9409)
!9411 = !DILocation(line: 422, column: 5, scope: !9412)
!9412 = distinct !DILexicalBlock(scope: !9408, file: !9176, line: 422, column: 5)
!9413 = !DILocation(line: 422, column: 5, scope: !9414)
!9414 = distinct !DILexicalBlock(scope: !9415, file: !9176, line: 422, column: 5)
!9415 = distinct !DILexicalBlock(scope: !9408, file: !9176, line: 422, column: 5)
!9416 = !DILocation(line: 422, column: 5, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !9415, file: !9176, line: 422, column: 5)
!9418 = !DILocation(line: 0, scope: !9408)
!9419 = !DILocation(line: 424, column: 28, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !9211, file: !9176, line: 424, column: 8)
!9421 = !DILocation(line: 424, column: 38, scope: !9420)
!9422 = !DILocation(line: 0, scope: !9420)
!9423 = !DILocation(line: 424, column: 8, scope: !9211)
!9424 = !DILocation(line: 430, column: 13, scope: !9425)
!9425 = distinct !DILexicalBlock(scope: !9420, file: !9176, line: 425, column: 5)
!9426 = !DILocation(line: 430, column: 49, scope: !9425)
!9427 = !DILocation(line: 430, column: 7, scope: !9425)
!9428 = !DILocation(line: 432, column: 13, scope: !9429)
!9429 = distinct !DILexicalBlock(scope: !9430, file: !9176, line: 432, column: 12)
!9430 = distinct !DILexicalBlock(scope: !9425, file: !9176, line: 431, column: 7)
!9431 = !DILocation(line: 432, column: 27, scope: !9429)
!9432 = !DILocation(line: 432, column: 41, scope: !9429)
!9433 = !DILocation(line: 432, column: 12, scope: !9430)
!9434 = distinct !{!9434, !9427, !9435}
!9435 = !DILocation(line: 436, column: 7, scope: !9425)
!9436 = !DILocation(line: 444, column: 13, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9420, file: !9176, line: 439, column: 5)
!9438 = !DILocation(line: 444, column: 7, scope: !9437)
!9439 = !DILocation(line: 446, column: 13, scope: !9440)
!9440 = distinct !DILexicalBlock(scope: !9441, file: !9176, line: 446, column: 12)
!9441 = distinct !DILexicalBlock(scope: !9437, file: !9176, line: 445, column: 7)
!9442 = !DILocation(line: 446, column: 27, scope: !9440)
!9443 = !DILocation(line: 446, column: 41, scope: !9440)
!9444 = !DILocation(line: 446, column: 12, scope: !9441)
!9445 = distinct !{!9445, !9438, !9446}
!9446 = !DILocation(line: 450, column: 7, scope: !9437)
!9447 = !DILocation(line: 454, column: 8, scope: !9211)
!9448 = !DILocation(line: 456, column: 7, scope: !9449)
!9449 = distinct !DILexicalBlock(scope: !9450, file: !9176, line: 455, column: 5)
!9450 = distinct !DILexicalBlock(scope: !9211, file: !9176, line: 454, column: 8)
!9451 = !DILocation(line: 457, column: 5, scope: !9449)
!9452 = !DILocation(line: 462, column: 31, scope: !9453)
!9453 = distinct !DILexicalBlock(scope: !9181, file: !9176, line: 462, column: 7)
!9454 = !DILocation(line: 462, column: 41, scope: !9453)
!9455 = !DILocation(line: 462, column: 7, scope: !9181)
!9456 = !DILocation(line: 465, column: 8, scope: !9457)
!9457 = distinct !DILexicalBlock(scope: !9458, file: !9176, line: 465, column: 8)
!9458 = distinct !DILexicalBlock(scope: !9453, file: !9176, line: 463, column: 3)
!9459 = !DILocation(line: 465, column: 38, scope: !9457)
!9460 = !DILocation(line: 465, column: 8, scope: !9458)
!9461 = !DILocation(line: 467, column: 44, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9463, file: !9176, line: 467, column: 10)
!9463 = distinct !DILexicalBlock(scope: !9457, file: !9176, line: 466, column: 5)
!9464 = !DILocation(line: 0, scope: !9462)
!9465 = !DILocation(line: 467, column: 10, scope: !9463)
!9466 = !DILocation(line: 483, column: 15, scope: !9467)
!9467 = distinct !DILexicalBlock(scope: !9462, file: !9176, line: 468, column: 7)
!9468 = !DILocation(line: 483, column: 9, scope: !9467)
!9469 = !DILocation(line: 485, column: 15, scope: !9470)
!9470 = distinct !DILexicalBlock(scope: !9471, file: !9176, line: 485, column: 14)
!9471 = distinct !DILexicalBlock(scope: !9467, file: !9176, line: 484, column: 9)
!9472 = !DILocation(line: 485, column: 29, scope: !9470)
!9473 = !DILocation(line: 485, column: 43, scope: !9470)
!9474 = !DILocation(line: 485, column: 14, scope: !9471)
!9475 = distinct !{!9475, !9468, !9476}
!9476 = !DILocation(line: 489, column: 9, scope: !9467)
!9477 = !DILocation(line: 492, column: 9, scope: !9467)
!9478 = !DILocation(line: 498, column: 9, scope: !9467)
!9479 = !DILocation(line: 501, column: 21, scope: !9467)
!9480 = !DILocation(line: 504, column: 9, scope: !9467)
!9481 = !DILocation(line: 504, column: 15, scope: !9467)
!9482 = !DILocation(line: 504, column: 51, scope: !9467)
!9483 = !DILocation(line: 506, column: 15, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9485, file: !9176, line: 506, column: 14)
!9485 = distinct !DILexicalBlock(scope: !9467, file: !9176, line: 505, column: 9)
!9486 = !DILocation(line: 506, column: 29, scope: !9484)
!9487 = !DILocation(line: 506, column: 43, scope: !9484)
!9488 = !DILocation(line: 506, column: 14, scope: !9485)
!9489 = distinct !{!9489, !9480, !9490}
!9490 = !DILocation(line: 510, column: 9, scope: !9467)
!9491 = !DILocation(line: 521, column: 15, scope: !9492)
!9492 = distinct !DILexicalBlock(scope: !9462, file: !9176, line: 513, column: 7)
!9493 = !DILocation(line: 521, column: 9, scope: !9492)
!9494 = !DILocation(line: 523, column: 15, scope: !9495)
!9495 = distinct !DILexicalBlock(scope: !9496, file: !9176, line: 523, column: 14)
!9496 = distinct !DILexicalBlock(scope: !9492, file: !9176, line: 522, column: 9)
!9497 = !DILocation(line: 523, column: 29, scope: !9495)
!9498 = !DILocation(line: 523, column: 43, scope: !9495)
!9499 = !DILocation(line: 523, column: 14, scope: !9496)
!9500 = distinct !{!9500, !9493, !9501}
!9501 = !DILocation(line: 527, column: 9, scope: !9492)
!9502 = !DILocation(line: 533, column: 44, scope: !9503)
!9503 = distinct !DILexicalBlock(scope: !9504, file: !9176, line: 533, column: 10)
!9504 = distinct !DILexicalBlock(scope: !9457, file: !9176, line: 531, column: 5)
!9505 = !DILocation(line: 533, column: 10, scope: !9504)
!9506 = !DILocation(line: 540, column: 27, scope: !9507)
!9507 = distinct !DILexicalBlock(scope: !9503, file: !9176, line: 538, column: 7)
!9508 = !DILocation(line: 551, column: 14, scope: !9509)
!9509 = distinct !DILexicalBlock(scope: !9507, file: !9176, line: 550, column: 13)
!9510 = !DILocation(line: 551, column: 81, scope: !9509)
!9511 = !DILocation(line: 551, column: 55, scope: !9509)
!9512 = !DILocation(line: 551, column: 92, scope: !9509)
!9513 = !DILocation(line: 552, column: 14, scope: !9509)
!9514 = !DILocation(line: 552, column: 80, scope: !9509)
!9515 = !DILocation(line: 552, column: 53, scope: !9509)
!9516 = !DILocation(line: 552, column: 111, scope: !9509)
!9517 = !DILocation(line: 553, column: 14, scope: !9509)
!9518 = !DILocation(line: 553, column: 80, scope: !9509)
!9519 = !DILocation(line: 553, column: 86, scope: !9509)
!9520 = !DILocation(line: 553, column: 53, scope: !9509)
!9521 = !DILocation(line: 553, column: 111, scope: !9509)
!9522 = !DILocation(line: 554, column: 14, scope: !9509)
!9523 = !DILocation(line: 554, column: 82, scope: !9509)
!9524 = !DILocation(line: 554, column: 101, scope: !9509)
!9525 = !DILocation(line: 554, column: 53, scope: !9509)
!9526 = !DILocation(line: 554, column: 126, scope: !9509)
!9527 = !DILocation(line: 555, column: 14, scope: !9509)
!9528 = !DILocation(line: 555, column: 80, scope: !9509)
!9529 = !DILocation(line: 555, column: 85, scope: !9509)
!9530 = !DILocation(line: 555, column: 53, scope: !9509)
!9531 = !DILocation(line: 550, column: 13, scope: !9507)
!9532 = !DILocation(line: 563, column: 3, scope: !9181)
!9533 = !DILocation(line: 564, column: 1, scope: !9181)
!9534 = !DISubprogram(name: "HAL_GetTick", scope: !9535, file: !9535, line: 234, type: !4745, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !474)
!9535 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9536 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !9176, file: !9176, line: 591, type: !9537, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !9548)
!9537 = !DISubroutineType(types: !9538)
!9538 = !{!9179, !9539, !106}
!9539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9540, size: 32)
!9540 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !9186, line: 92, baseType: !9541)
!9541 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9186, line: 75, size: 160, elements: !9542)
!9542 = !{!9543, !9544, !9545, !9546, !9547}
!9543 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !9541, file: !9186, line: 77, baseType: !106, size: 32)
!9544 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !9541, file: !9186, line: 80, baseType: !106, size: 32, offset: 32)
!9545 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !9541, file: !9186, line: 83, baseType: !106, size: 32, offset: 64)
!9546 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !9541, file: !9186, line: 86, baseType: !106, size: 32, offset: 96)
!9547 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !9541, file: !9186, line: 89, baseType: !106, size: 32, offset: 128)
!9548 = !{!9549, !9550, !9551}
!9549 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !9536, file: !9176, line: 591, type: !9539)
!9550 = !DILocalVariable(name: "FLatency", arg: 2, scope: !9536, file: !9176, line: 591, type: !106)
!9551 = !DILocalVariable(name: "tickstart", scope: !9536, file: !9176, line: 593, type: !106)
!9552 = !DILocation(line: 0, scope: !9536)
!9553 = !DILocation(line: 596, column: 24, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9536, file: !9176, line: 596, column: 6)
!9555 = !DILocation(line: 596, column: 6, scope: !9536)
!9556 = !DILocation(line: 610, column: 17, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9536, file: !9176, line: 610, column: 6)
!9558 = !DILocation(line: 610, column: 15, scope: !9557)
!9559 = !DILocation(line: 610, column: 6, scope: !9536)
!9560 = !DILocation(line: 613, column: 5, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !9557, file: !9176, line: 611, column: 3)
!9562 = !DILocation(line: 617, column: 8, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9561, file: !9176, line: 617, column: 8)
!9564 = !DILocation(line: 617, column: 34, scope: !9563)
!9565 = !DILocation(line: 617, column: 8, scope: !9561)
!9566 = !DILocation(line: 624, column: 27, scope: !9567)
!9567 = distinct !DILexicalBlock(scope: !9536, file: !9176, line: 624, column: 6)
!9568 = !DILocation(line: 624, column: 38, scope: !9567)
!9569 = !DILocation(line: 624, column: 60, scope: !9567)
!9570 = !DILocation(line: 624, column: 6, scope: !9536)
!9571 = !DILocation(line: 628, column: 40, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9573, file: !9176, line: 628, column: 8)
!9573 = distinct !DILexicalBlock(scope: !9567, file: !9176, line: 625, column: 3)
!9574 = !DILocation(line: 628, column: 63, scope: !9572)
!9575 = !DILocation(line: 628, column: 8, scope: !9573)
!9576 = !DILocation(line: 630, column: 7, scope: !9577)
!9577 = distinct !DILexicalBlock(scope: !9572, file: !9176, line: 629, column: 5)
!9578 = !DILocation(line: 633, column: 29, scope: !9579)
!9579 = distinct !DILexicalBlock(scope: !9573, file: !9176, line: 633, column: 8)
!9580 = !DILocation(line: 631, column: 5, scope: !9577)
!9581 = !DILocation(line: 633, column: 40, scope: !9579)
!9582 = !DILocation(line: 633, column: 63, scope: !9579)
!9583 = !DILocation(line: 633, column: 8, scope: !9573)
!9584 = !DILocation(line: 635, column: 7, scope: !9585)
!9585 = distinct !DILexicalBlock(scope: !9579, file: !9176, line: 634, column: 5)
!9586 = !DILocation(line: 636, column: 5, scope: !9585)
!9587 = !DILocation(line: 639, column: 5, scope: !9573)
!9588 = !DILocation(line: 643, column: 27, scope: !9589)
!9589 = distinct !DILexicalBlock(scope: !9536, file: !9176, line: 643, column: 6)
!9590 = !DILocation(line: 640, column: 3, scope: !9573)
!9591 = !DILocation(line: 643, column: 38, scope: !9589)
!9592 = !DILocation(line: 643, column: 62, scope: !9589)
!9593 = !DILocation(line: 643, column: 6, scope: !9536)
!9594 = !DILocation(line: 648, column: 27, scope: !9595)
!9595 = distinct !DILexicalBlock(scope: !9596, file: !9176, line: 648, column: 8)
!9596 = distinct !DILexicalBlock(scope: !9589, file: !9176, line: 644, column: 3)
!9597 = !DILocation(line: 648, column: 8, scope: !9596)
!9598 = !DILocation(line: 651, column: 10, scope: !9599)
!9599 = distinct !DILexicalBlock(scope: !9600, file: !9176, line: 651, column: 10)
!9600 = distinct !DILexicalBlock(scope: !9595, file: !9176, line: 649, column: 5)
!9601 = !DILocation(line: 651, column: 46, scope: !9599)
!9602 = !DILocation(line: 651, column: 10, scope: !9600)
!9603 = !DILocation(line: 661, column: 10, scope: !9604)
!9604 = distinct !DILexicalBlock(scope: !9605, file: !9176, line: 661, column: 10)
!9605 = distinct !DILexicalBlock(scope: !9606, file: !9176, line: 659, column: 5)
!9606 = distinct !DILexicalBlock(scope: !9595, file: !9176, line: 657, column: 13)
!9607 = !DILocation(line: 661, column: 46, scope: !9604)
!9608 = !DILocation(line: 661, column: 10, scope: !9605)
!9609 = !DILocation(line: 670, column: 10, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9611, file: !9176, line: 670, column: 10)
!9611 = distinct !DILexicalBlock(scope: !9606, file: !9176, line: 668, column: 5)
!9612 = !DILocation(line: 670, column: 46, scope: !9610)
!9613 = !DILocation(line: 670, column: 10, scope: !9611)
!9614 = !DILocation(line: 676, column: 5, scope: !9596)
!9615 = !DILocation(line: 679, column: 17, scope: !9596)
!9616 = !DILocation(line: 681, column: 5, scope: !9596)
!9617 = !DILocation(line: 681, column: 12, scope: !9596)
!9618 = !DILocation(line: 681, column: 65, scope: !9596)
!9619 = !DILocation(line: 681, column: 78, scope: !9596)
!9620 = !DILocation(line: 681, column: 42, scope: !9596)
!9621 = !DILocation(line: 683, column: 12, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !9623, file: !9176, line: 683, column: 11)
!9623 = distinct !DILexicalBlock(scope: !9596, file: !9176, line: 682, column: 5)
!9624 = !DILocation(line: 683, column: 26, scope: !9622)
!9625 = !DILocation(line: 683, column: 39, scope: !9622)
!9626 = !DILocation(line: 683, column: 11, scope: !9623)
!9627 = distinct !{!9627, !9616, !9628}
!9628 = !DILocation(line: 687, column: 5, scope: !9596)
!9629 = !DILocation(line: 691, column: 17, scope: !9630)
!9630 = distinct !DILexicalBlock(scope: !9536, file: !9176, line: 691, column: 6)
!9631 = !DILocation(line: 691, column: 15, scope: !9630)
!9632 = !DILocation(line: 691, column: 6, scope: !9536)
!9633 = !DILocation(line: 694, column: 5, scope: !9634)
!9634 = distinct !DILexicalBlock(scope: !9630, file: !9176, line: 692, column: 3)
!9635 = !DILocation(line: 698, column: 8, scope: !9636)
!9636 = distinct !DILexicalBlock(scope: !9634, file: !9176, line: 698, column: 8)
!9637 = !DILocation(line: 698, column: 34, scope: !9636)
!9638 = !DILocation(line: 698, column: 8, scope: !9634)
!9639 = !DILocation(line: 705, column: 27, scope: !9640)
!9640 = distinct !DILexicalBlock(scope: !9536, file: !9176, line: 705, column: 6)
!9641 = !DILocation(line: 705, column: 38, scope: !9640)
!9642 = !DILocation(line: 705, column: 61, scope: !9640)
!9643 = !DILocation(line: 705, column: 6, scope: !9536)
!9644 = !DILocation(line: 708, column: 5, scope: !9645)
!9645 = distinct !DILexicalBlock(scope: !9640, file: !9176, line: 706, column: 3)
!9646 = !DILocation(line: 712, column: 27, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !9536, file: !9176, line: 712, column: 6)
!9648 = !DILocation(line: 709, column: 3, scope: !9645)
!9649 = !DILocation(line: 712, column: 38, scope: !9647)
!9650 = !DILocation(line: 712, column: 61, scope: !9647)
!9651 = !DILocation(line: 712, column: 6, scope: !9536)
!9652 = !DILocation(line: 715, column: 5, scope: !9653)
!9653 = distinct !DILexicalBlock(scope: !9647, file: !9176, line: 713, column: 3)
!9654 = !DILocation(line: 716, column: 3, scope: !9653)
!9655 = !DILocation(line: 719, column: 21, scope: !9536)
!9656 = !DILocation(line: 719, column: 70, scope: !9536)
!9657 = !DILocation(line: 719, column: 91, scope: !9536)
!9658 = !DILocation(line: 719, column: 50, scope: !9536)
!9659 = !DILocation(line: 719, column: 47, scope: !9536)
!9660 = !DILocation(line: 719, column: 19, scope: !9536)
!9661 = !DILocation(line: 722, column: 17, scope: !9536)
!9662 = !DILocation(line: 722, column: 3, scope: !9536)
!9663 = !DILocation(line: 724, column: 3, scope: !9536)
!9664 = !DILocation(line: 725, column: 1, scope: !9536)
!9665 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !9176, file: !9176, line: 885, type: !4745, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !9666)
!9666 = !{!9667, !9668, !9669, !9670}
!9667 = !DILocalVariable(name: "pllm", scope: !9665, file: !9176, line: 887, type: !106)
!9668 = !DILocalVariable(name: "pllvco", scope: !9665, file: !9176, line: 887, type: !106)
!9669 = !DILocalVariable(name: "pllp", scope: !9665, file: !9176, line: 887, type: !106)
!9670 = !DILocalVariable(name: "sysclockfreq", scope: !9665, file: !9176, line: 888, type: !106)
!9671 = !DILocation(line: 0, scope: !9665)
!9672 = !DILocation(line: 891, column: 16, scope: !9665)
!9673 = !DILocation(line: 891, column: 21, scope: !9665)
!9674 = !DILocation(line: 891, column: 3, scope: !9665)
!9675 = !DILocation(line: 901, column: 7, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9677, file: !9176, line: 899, column: 5)
!9677 = distinct !DILexicalBlock(scope: !9665, file: !9176, line: 892, column: 3)
!9678 = !DILocation(line: 907, column: 19, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !9677, file: !9176, line: 904, column: 5)
!9680 = !DILocation(line: 907, column: 27, scope: !9679)
!9681 = !DILocation(line: 908, column: 10, scope: !9682)
!9682 = distinct !DILexicalBlock(scope: !9679, file: !9176, line: 908, column: 10)
!9683 = !DILocation(line: 908, column: 40, scope: !9682)
!9684 = !DILocation(line: 0, scope: !9682)
!9685 = !DILocation(line: 918, column: 23, scope: !9679)
!9686 = !DILocation(line: 918, column: 82, scope: !9679)
!9687 = !DILocation(line: 920, column: 28, scope: !9679)
!9688 = !DILocation(line: 921, column: 7, scope: !9679)
!9689 = !DILocation(line: 0, scope: !9677)
!9690 = !DILocation(line: 929, column: 3, scope: !9665)
!9691 = !DISubprogram(name: "HAL_InitTick", scope: !9535, file: !9535, line: 223, type: !9692, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !474)
!9692 = !DISubroutineType(types: !9693)
!9693 = !{!9179, !106}
!9694 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !9176, file: !9176, line: 775, type: !9695, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !9697)
!9695 = !DISubroutineType(types: !9696)
!9696 = !{null, !106, !106, !106}
!9697 = !{!9698, !9699, !9700, !9701, !9711, !9715}
!9698 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !9694, file: !9176, line: 775, type: !106)
!9699 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !9694, file: !9176, line: 775, type: !106)
!9700 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !9694, file: !9176, line: 775, type: !106)
!9701 = !DILocalVariable(name: "GPIO_InitStruct", scope: !9694, file: !9176, line: 777, type: !9702)
!9702 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !9703, line: 62, baseType: !9704)
!9703 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9704 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9703, line: 46, size: 160, elements: !9705)
!9705 = !{!9706, !9707, !9708, !9709, !9710}
!9706 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !9704, file: !9703, line: 48, baseType: !106, size: 32)
!9707 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !9704, file: !9703, line: 51, baseType: !106, size: 32, offset: 32)
!9708 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !9704, file: !9703, line: 54, baseType: !106, size: 32, offset: 64)
!9709 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !9704, file: !9703, line: 57, baseType: !106, size: 32, offset: 96)
!9710 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !9704, file: !9703, line: 60, baseType: !106, size: 32, offset: 128)
!9711 = !DILocalVariable(name: "tmpreg", scope: !9712, file: !9176, line: 787, type: !127)
!9712 = distinct !DILexicalBlock(scope: !9713, file: !9176, line: 787, column: 5)
!9713 = distinct !DILexicalBlock(scope: !9714, file: !9176, line: 783, column: 3)
!9714 = distinct !DILexicalBlock(scope: !9694, file: !9176, line: 782, column: 6)
!9715 = !DILocalVariable(name: "tmpreg", scope: !9716, file: !9176, line: 811, type: !127)
!9716 = distinct !DILexicalBlock(scope: !9717, file: !9176, line: 811, column: 5)
!9717 = distinct !DILexicalBlock(scope: !9714, file: !9176, line: 807, column: 3)
!9718 = !DILocation(line: 0, scope: !9694)
!9719 = !DILocation(line: 777, column: 3, scope: !9694)
!9720 = !DILocation(line: 777, column: 20, scope: !9694)
!9721 = !DILocation(line: 782, column: 15, scope: !9714)
!9722 = !DILocation(line: 782, column: 6, scope: !9694)
!9723 = !DILocation(line: 787, column: 5, scope: !9712)
!9724 = !DILocation(line: 787, column: 5, scope: !9713)
!9725 = !DILocation(line: 790, column: 21, scope: !9713)
!9726 = !DILocation(line: 790, column: 25, scope: !9713)
!9727 = !DILocation(line: 791, column: 21, scope: !9713)
!9728 = !DILocation(line: 791, column: 26, scope: !9713)
!9729 = !DILocation(line: 792, column: 21, scope: !9713)
!9730 = !DILocation(line: 792, column: 27, scope: !9713)
!9731 = !DILocation(line: 793, column: 21, scope: !9713)
!9732 = !DILocation(line: 793, column: 26, scope: !9713)
!9733 = !DILocation(line: 794, column: 21, scope: !9713)
!9734 = !DILocation(line: 794, column: 31, scope: !9713)
!9735 = !DILocation(line: 795, column: 5, scope: !9713)
!9736 = !DILocation(line: 798, column: 5, scope: !9713)
!9737 = !DILocation(line: 804, column: 3, scope: !9713)
!9738 = !DILocation(line: 811, column: 5, scope: !9716)
!9739 = !DILocation(line: 811, column: 5, scope: !9717)
!9740 = !DILocation(line: 814, column: 21, scope: !9717)
!9741 = !DILocation(line: 814, column: 25, scope: !9717)
!9742 = !DILocation(line: 815, column: 21, scope: !9717)
!9743 = !DILocation(line: 815, column: 26, scope: !9717)
!9744 = !DILocation(line: 816, column: 21, scope: !9717)
!9745 = !DILocation(line: 816, column: 27, scope: !9717)
!9746 = !DILocation(line: 817, column: 21, scope: !9717)
!9747 = !DILocation(line: 817, column: 26, scope: !9717)
!9748 = !DILocation(line: 818, column: 21, scope: !9717)
!9749 = !DILocation(line: 818, column: 31, scope: !9717)
!9750 = !DILocation(line: 819, column: 5, scope: !9717)
!9751 = !DILocation(line: 822, column: 5, scope: !9717)
!9752 = !DILocation(line: 0, scope: !9714)
!9753 = !DILocation(line: 830, column: 1, scope: !9694)
!9754 = !DISubprogram(name: "HAL_GPIO_Init", scope: !9703, file: !9703, line: 224, type: !9755, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !474)
!9755 = !DISubroutineType(types: !9756)
!9756 = !{null, !2744, !9757}
!9757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9702, size: 32)
!9758 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !9176, file: !9176, line: 841, type: !2860, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !474)
!9759 = !DILocation(line: 843, column: 38, scope: !9758)
!9760 = !DILocation(line: 844, column: 1, scope: !9758)
!9761 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !9176, file: !9176, line: 850, type: !2860, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !474)
!9762 = !DILocation(line: 852, column: 38, scope: !9761)
!9763 = !DILocation(line: 853, column: 1, scope: !9761)
!9764 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !9176, file: !9176, line: 941, type: !4745, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !474)
!9765 = !DILocation(line: 943, column: 10, scope: !9764)
!9766 = !DILocation(line: 943, column: 3, scope: !9764)
!9767 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !9176, file: !9176, line: 952, type: !4745, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !474)
!9768 = !DILocation(line: 955, column: 11, scope: !9767)
!9769 = !DILocation(line: 955, column: 56, scope: !9767)
!9770 = !DILocation(line: 955, column: 78, scope: !9767)
!9771 = !DILocation(line: 955, column: 36, scope: !9767)
!9772 = !DILocation(line: 955, column: 33, scope: !9767)
!9773 = !DILocation(line: 955, column: 3, scope: !9767)
!9774 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !9176, file: !9176, line: 964, type: !4745, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !474)
!9775 = !DILocation(line: 967, column: 11, scope: !9774)
!9776 = !DILocation(line: 967, column: 55, scope: !9774)
!9777 = !DILocation(line: 967, column: 77, scope: !9774)
!9778 = !DILocation(line: 967, column: 35, scope: !9774)
!9779 = !DILocation(line: 967, column: 32, scope: !9774)
!9780 = !DILocation(line: 967, column: 3, scope: !9774)
!9781 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !9176, file: !9176, line: 977, type: !9782, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !9784)
!9782 = !DISubroutineType(types: !9783)
!9783 = !{null, !9184}
!9784 = !{!9785}
!9785 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !9781, file: !9176, line: 977, type: !9184)
!9786 = !DILocation(line: 0, scope: !9781)
!9787 = !DILocation(line: 980, column: 22, scope: !9781)
!9788 = !DILocation(line: 980, column: 37, scope: !9781)
!9789 = !DILocation(line: 983, column: 12, scope: !9790)
!9790 = distinct !DILexicalBlock(scope: !9781, file: !9176, line: 983, column: 6)
!9791 = !DILocation(line: 983, column: 15, scope: !9790)
!9792 = !DILocation(line: 983, column: 31, scope: !9790)
!9793 = !DILocation(line: 983, column: 6, scope: !9781)
!9794 = !DILocation(line: 985, column: 24, scope: !9795)
!9795 = distinct !DILexicalBlock(scope: !9790, file: !9176, line: 984, column: 3)
!9796 = !DILocation(line: 985, column: 33, scope: !9795)
!9797 = !DILocation(line: 986, column: 3, scope: !9795)
!9798 = !DILocation(line: 987, column: 17, scope: !9799)
!9799 = distinct !DILexicalBlock(scope: !9790, file: !9176, line: 987, column: 11)
!9800 = !DILocation(line: 987, column: 20, scope: !9799)
!9801 = !DILocation(line: 987, column: 35, scope: !9799)
!9802 = !DILocation(line: 0, scope: !9799)
!9803 = !DILocation(line: 987, column: 11, scope: !9790)
!9804 = !DILocation(line: 989, column: 33, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !9799, file: !9176, line: 988, column: 3)
!9806 = !DILocation(line: 990, column: 3, scope: !9805)
!9807 = !DILocation(line: 993, column: 33, scope: !9808)
!9808 = distinct !DILexicalBlock(scope: !9799, file: !9176, line: 992, column: 3)
!9809 = !DILocation(line: 997, column: 12, scope: !9810)
!9810 = distinct !DILexicalBlock(scope: !9781, file: !9176, line: 997, column: 6)
!9811 = !DILocation(line: 997, column: 15, scope: !9810)
!9812 = !DILocation(line: 1003, column: 24, scope: !9813)
!9813 = distinct !DILexicalBlock(scope: !9810, file: !9176, line: 1002, column: 3)
!9814 = !DILocation(line: 1003, column: 33, scope: !9813)
!9815 = !DILocation(line: 1006, column: 61, scope: !9781)
!9816 = !DILocation(line: 1006, column: 81, scope: !9781)
!9817 = !DILocation(line: 1006, column: 22, scope: !9781)
!9818 = !DILocation(line: 1006, column: 42, scope: !9781)
!9819 = !DILocation(line: 1009, column: 12, scope: !9820)
!9820 = distinct !DILexicalBlock(scope: !9781, file: !9176, line: 1009, column: 6)
!9821 = !DILocation(line: 1009, column: 17, scope: !9820)
!9822 = !DILocation(line: 1009, column: 35, scope: !9820)
!9823 = !DILocation(line: 1009, column: 6, scope: !9781)
!9824 = !DILocation(line: 1011, column: 24, scope: !9825)
!9825 = distinct !DILexicalBlock(scope: !9820, file: !9176, line: 1010, column: 3)
!9826 = !DILocation(line: 1011, column: 33, scope: !9825)
!9827 = !DILocation(line: 1012, column: 3, scope: !9825)
!9828 = !DILocation(line: 1013, column: 17, scope: !9829)
!9829 = distinct !DILexicalBlock(scope: !9820, file: !9176, line: 1013, column: 11)
!9830 = !DILocation(line: 1013, column: 22, scope: !9829)
!9831 = !DILocation(line: 1013, column: 39, scope: !9829)
!9832 = !DILocation(line: 0, scope: !9829)
!9833 = !DILocation(line: 1013, column: 11, scope: !9820)
!9834 = !DILocation(line: 1015, column: 33, scope: !9835)
!9835 = distinct !DILexicalBlock(scope: !9829, file: !9176, line: 1014, column: 3)
!9836 = !DILocation(line: 1016, column: 3, scope: !9835)
!9837 = !DILocation(line: 1019, column: 33, scope: !9838)
!9838 = distinct !DILexicalBlock(scope: !9829, file: !9176, line: 1018, column: 3)
!9839 = !DILocation(line: 1023, column: 12, scope: !9840)
!9840 = distinct !DILexicalBlock(scope: !9781, file: !9176, line: 1023, column: 6)
!9841 = !DILocation(line: 1023, column: 16, scope: !9840)
!9842 = !DILocation(line: 1029, column: 24, scope: !9843)
!9843 = distinct !DILexicalBlock(scope: !9840, file: !9176, line: 1028, column: 3)
!9844 = !DILocation(line: 1029, column: 33, scope: !9843)
!9845 = !DILocation(line: 1033, column: 12, scope: !9846)
!9846 = distinct !DILexicalBlock(scope: !9781, file: !9176, line: 1033, column: 6)
!9847 = !DILocation(line: 1033, column: 15, scope: !9846)
!9848 = !DILocation(line: 1033, column: 30, scope: !9846)
!9849 = !DILocation(line: 1033, column: 6, scope: !9781)
!9850 = !DILocation(line: 1039, column: 28, scope: !9851)
!9851 = distinct !DILexicalBlock(scope: !9846, file: !9176, line: 1038, column: 3)
!9852 = !DILocation(line: 1039, column: 37, scope: !9851)
!9853 = !DILocation(line: 1041, column: 54, scope: !9781)
!9854 = !DILocation(line: 1041, column: 62, scope: !9781)
!9855 = !DILocation(line: 1041, column: 26, scope: !9781)
!9856 = !DILocation(line: 1041, column: 36, scope: !9781)
!9857 = !DILocation(line: 1042, column: 49, scope: !9781)
!9858 = !DILocation(line: 1042, column: 57, scope: !9781)
!9859 = !DILocation(line: 1042, column: 26, scope: !9781)
!9860 = !DILocation(line: 1042, column: 31, scope: !9781)
!9861 = !DILocation(line: 1043, column: 50, scope: !9781)
!9862 = !DILocation(line: 1043, column: 78, scope: !9781)
!9863 = !DILocation(line: 1043, column: 26, scope: !9781)
!9864 = !DILocation(line: 1043, column: 31, scope: !9781)
!9865 = !DILocation(line: 1044, column: 52, scope: !9781)
!9866 = !DILocation(line: 1044, column: 102, scope: !9781)
!9867 = !DILocation(line: 1044, column: 109, scope: !9781)
!9868 = !DILocation(line: 1044, column: 26, scope: !9781)
!9869 = !DILocation(line: 1044, column: 31, scope: !9781)
!9870 = !DILocation(line: 1045, column: 50, scope: !9781)
!9871 = !DILocation(line: 1045, column: 78, scope: !9781)
!9872 = !DILocation(line: 1045, column: 26, scope: !9781)
!9873 = !DILocation(line: 1045, column: 31, scope: !9781)
!9874 = !DILocation(line: 1046, column: 1, scope: !9781)
!9875 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !9176, file: !9176, line: 1056, type: !9876, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !9878)
!9876 = !DISubroutineType(types: !9877)
!9877 = !{null, !9539, !265}
!9878 = !{!9879, !9880}
!9879 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !9875, file: !9176, line: 1056, type: !9539)
!9880 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !9875, file: !9176, line: 1056, type: !265)
!9881 = !DILocation(line: 0, scope: !9875)
!9882 = !DILocation(line: 1059, column: 22, scope: !9875)
!9883 = !DILocation(line: 1059, column: 32, scope: !9875)
!9884 = !DILocation(line: 1062, column: 53, scope: !9875)
!9885 = !DILocation(line: 1062, column: 58, scope: !9875)
!9886 = !DILocation(line: 1062, column: 22, scope: !9875)
!9887 = !DILocation(line: 1062, column: 35, scope: !9875)
!9888 = !DILocation(line: 1065, column: 54, scope: !9875)
!9889 = !DILocation(line: 1065, column: 59, scope: !9875)
!9890 = !DILocation(line: 1065, column: 22, scope: !9875)
!9891 = !DILocation(line: 1065, column: 36, scope: !9875)
!9892 = !DILocation(line: 1068, column: 55, scope: !9875)
!9893 = !DILocation(line: 1068, column: 60, scope: !9875)
!9894 = !DILocation(line: 1068, column: 22, scope: !9875)
!9895 = !DILocation(line: 1068, column: 37, scope: !9875)
!9896 = !DILocation(line: 1071, column: 56, scope: !9875)
!9897 = !DILocation(line: 1071, column: 79, scope: !9875)
!9898 = !DILocation(line: 1071, column: 22, scope: !9875)
!9899 = !DILocation(line: 1071, column: 37, scope: !9875)
!9900 = !DILocation(line: 1074, column: 34, scope: !9875)
!9901 = !DILocation(line: 1074, column: 38, scope: !9875)
!9902 = !DILocation(line: 1074, column: 14, scope: !9875)
!9903 = !DILocation(line: 1075, column: 1, scope: !9875)
!9904 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !9176, file: !9176, line: 1082, type: !2860, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !474)
!9905 = !DILocation(line: 1085, column: 6, scope: !9906)
!9906 = distinct !DILexicalBlock(scope: !9904, file: !9176, line: 1085, column: 6)
!9907 = !DILocation(line: 1085, column: 6, scope: !9904)
!9908 = !DILocation(line: 1088, column: 5, scope: !9909)
!9909 = distinct !DILexicalBlock(scope: !9906, file: !9176, line: 1086, column: 3)
!9910 = !DILocation(line: 1091, column: 5, scope: !9909)
!9911 = !DILocation(line: 1092, column: 3, scope: !9909)
!9912 = !DILocation(line: 1093, column: 1, scope: !9904)
!9913 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !9176, file: !9176, line: 1099, type: !2860, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2673, retainedNodes: !474)
!9914 = !DILocation(line: 1104, column: 1, scope: !9913)
!9915 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !9916, file: !9916, line: 257, type: !4999, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !9917)
!9916 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9917 = !{!9918}
!9918 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !9915, file: !9916, line: 257, type: !106)
!9919 = !DILocation(line: 0, scope: !9915)
!9920 = !DILocation(line: 260, column: 3, scope: !9915)
!9921 = !DILocation(line: 261, column: 1, scope: !9915)
!9922 = distinct !DISubprogram(name: "LL_InitTick", scope: !9923, file: !9923, line: 260, type: !7604, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !9924)
!9923 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9924 = !{!9925, !9926}
!9925 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !9922, file: !9923, line: 260, type: !106)
!9926 = !DILocalVariable(name: "Ticks", arg: 2, scope: !9922, file: !9923, line: 260, type: !106)
!9927 = !DILocation(line: 0, scope: !9922)
!9928 = !DILocation(line: 263, column: 46, scope: !9922)
!9929 = !DILocation(line: 263, column: 55, scope: !9922)
!9930 = !DILocation(line: 263, column: 18, scope: !9922)
!9931 = !DILocation(line: 264, column: 18, scope: !9922)
!9932 = !DILocation(line: 265, column: 18, scope: !9922)
!9933 = !DILocation(line: 267, column: 1, scope: !9922)
!9934 = distinct !DISubprogram(name: "LL_mDelay", scope: !9916, file: !9916, line: 273, type: !4999, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !9935)
!9935 = !{!9936, !9937}
!9936 = !DILocalVariable(name: "Delay", arg: 1, scope: !9934, file: !9916, line: 273, type: !106)
!9937 = !DILocalVariable(name: "tmp", scope: !9934, file: !9916, line: 275, type: !127)
!9938 = !DILocation(line: 0, scope: !9934)
!9939 = !DILocation(line: 275, column: 3, scope: !9934)
!9940 = !DILocation(line: 275, column: 18, scope: !9934)
!9941 = !DILocation(line: 275, column: 33, scope: !9934)
!9942 = !DILocation(line: 277, column: 10, scope: !9934)
!9943 = !DILocation(line: 280, column: 12, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !9934, file: !9916, line: 280, column: 6)
!9945 = !DILocation(line: 285, column: 3, scope: !9934)
!9946 = !DILocation(line: 287, column: 18, scope: !9947)
!9947 = distinct !DILexicalBlock(scope: !9948, file: !9916, line: 287, column: 8)
!9948 = distinct !DILexicalBlock(scope: !9934, file: !9916, line: 286, column: 3)
!9949 = !DILocation(line: 292, column: 1, scope: !9934)
!9950 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !9916, file: !9916, line: 323, type: !4999, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !9951)
!9951 = !{!9952}
!9952 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !9950, file: !9916, line: 323, type: !106)
!9953 = !DILocation(line: 0, scope: !9950)
!9954 = !DILocation(line: 326, column: 19, scope: !9950)
!9955 = !DILocation(line: 327, column: 1, scope: !9950)
!9956 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !9916, file: !9916, line: 338, type: !9957, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !9960)
!9957 = !DISubroutineType(types: !9958)
!9958 = !{!9959, !106}
!9959 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !769, line: 201, baseType: !768)
!9960 = !{!9961, !9962, !9963, !9964, !9965}
!9961 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !9956, file: !9916, line: 338, type: !106)
!9962 = !DILocalVariable(name: "timeout", scope: !9956, file: !9916, line: 340, type: !106)
!9963 = !DILocalVariable(name: "getlatency", scope: !9956, file: !9916, line: 341, type: !106)
!9964 = !DILocalVariable(name: "latency", scope: !9956, file: !9916, line: 342, type: !106)
!9965 = !DILocalVariable(name: "status", scope: !9956, file: !9916, line: 343, type: !9959)
!9966 = !DILocation(line: 0, scope: !9956)
!9967 = !DILocation(line: 347, column: 21, scope: !9968)
!9968 = distinct !DILexicalBlock(scope: !9956, file: !9916, line: 347, column: 6)
!9969 = !DILocation(line: 347, column: 6, scope: !9956)
!9970 = !DILocation(line: 353, column: 8, scope: !9971)
!9971 = distinct !DILexicalBlock(scope: !9972, file: !9916, line: 353, column: 8)
!9972 = distinct !DILexicalBlock(scope: !9968, file: !9916, line: 352, column: 3)
!9973 = !DILocation(line: 353, column: 40, scope: !9971)
!9974 = !DILocation(line: 353, column: 8, scope: !9972)
!9975 = !DILocation(line: 356, column: 26, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9977, file: !9916, line: 356, column: 10)
!9977 = distinct !DILexicalBlock(scope: !9971, file: !9916, line: 354, column: 5)
!9978 = !DILocation(line: 356, column: 55, scope: !9976)
!9979 = !DILocation(line: 362, column: 55, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9977, file: !9916, line: 362, column: 10)
!9981 = !DILocation(line: 368, column: 55, scope: !9982)
!9982 = distinct !DILexicalBlock(scope: !9977, file: !9916, line: 368, column: 10)
!9983 = !DILocation(line: 374, column: 26, scope: !9984)
!9984 = distinct !DILexicalBlock(scope: !9977, file: !9916, line: 374, column: 10)
!9985 = !DILocation(line: 374, column: 55, scope: !9984)
!9986 = !DILocation(line: 380, column: 28, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9988, file: !9916, line: 380, column: 12)
!9988 = distinct !DILexicalBlock(scope: !9984, file: !9916, line: 379, column: 7)
!9989 = !DILocation(line: 380, column: 57, scope: !9987)
!9990 = !DILocation(line: 387, column: 8, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9972, file: !9916, line: 387, column: 8)
!9992 = !DILocation(line: 387, column: 40, scope: !9991)
!9993 = !DILocation(line: 387, column: 8, scope: !9972)
!9994 = !DILocation(line: 396, column: 26, scope: !9995)
!9995 = distinct !DILexicalBlock(scope: !9996, file: !9916, line: 396, column: 10)
!9996 = distinct !DILexicalBlock(scope: !9991, file: !9916, line: 388, column: 5)
!9997 = !DILocation(line: 396, column: 55, scope: !9995)
!9998 = !DILocation(line: 402, column: 26, scope: !9999)
!9999 = distinct !DILexicalBlock(scope: !9996, file: !9916, line: 402, column: 10)
!10000 = !DILocation(line: 402, column: 55, scope: !9999)
!10001 = !DILocation(line: 407, column: 26, scope: !10002)
!10002 = distinct !DILexicalBlock(scope: !9996, file: !9916, line: 407, column: 10)
!10003 = !DILocation(line: 407, column: 55, scope: !10002)
!10004 = !DILocation(line: 413, column: 28, scope: !10005)
!10005 = distinct !DILexicalBlock(scope: !10006, file: !9916, line: 413, column: 12)
!10006 = distinct !DILexicalBlock(scope: !10002, file: !9916, line: 412, column: 7)
!10007 = !DILocation(line: 413, column: 57, scope: !10005)
!10008 = !DILocation(line: 0, scope: !9972)
!10009 = !DILocation(line: 444, column: 5, scope: !9972)
!10010 = !DILocation(line: 448, column: 5, scope: !9972)
!10011 = !DILocation(line: 451, column: 18, scope: !10012)
!10012 = distinct !DILexicalBlock(scope: !9972, file: !9916, line: 449, column: 5)
!10013 = !DILocation(line: 452, column: 12, scope: !10012)
!10014 = !DILocation(line: 453, column: 26, scope: !9972)
!10015 = !DILocation(line: 453, column: 38, scope: !9972)
!10016 = !DILocation(line: 453, column: 5, scope: !10012)
!10017 = distinct !{!10017, !10010, !10018}
!10018 = !DILocation(line: 453, column: 54, scope: !9972)
!10019 = !DILocation(line: 0, scope: !9968)
!10020 = !DILocation(line: 464, column: 3, scope: !9956)
!10021 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !4741, file: !4741, line: 519, type: !4745, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !474)
!10022 = !DILocation(line: 521, column: 21, scope: !10021)
!10023 = !DILocation(line: 521, column: 3, scope: !10021)
!10024 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !4682, file: !4682, line: 1543, type: !4999, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !10025)
!10025 = !{!10026}
!10026 = !DILocalVariable(name: "Latency", arg: 1, scope: !10024, file: !4682, line: 1543, type: !106)
!10027 = !DILocation(line: 0, scope: !10024)
!10028 = !DILocation(line: 1545, column: 3, scope: !10024)
!10029 = !DILocation(line: 1546, column: 1, scope: !10024)
!10030 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !4682, file: !4682, line: 1569, type: !4745, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !474)
!10031 = !DILocation(line: 1571, column: 21, scope: !10030)
!10032 = !DILocation(line: 1571, column: 3, scope: !10030)
!10033 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !9916, file: !9916, line: 483, type: !10034, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !10050)
!10034 = !DISubroutineType(types: !10035)
!10035 = !{!9959, !10036, !10043}
!10036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10037, size: 32)
!10037 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !9923, line: 114, baseType: !10038)
!10038 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9923, line: 94, size: 96, elements: !10039)
!10039 = !{!10040, !10041, !10042}
!10040 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !10038, file: !9923, line: 96, baseType: !106, size: 32)
!10041 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !10038, file: !9923, line: 102, baseType: !106, size: 32, offset: 32)
!10042 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !10038, file: !9923, line: 109, baseType: !106, size: 32, offset: 64)
!10043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10044, size: 32)
!10044 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !9923, line: 139, baseType: !10045)
!10045 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9923, line: 119, size: 96, elements: !10046)
!10046 = !{!10047, !10048, !10049}
!10047 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !10045, file: !9923, line: 121, baseType: !106, size: 32)
!10048 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !10045, file: !9923, line: 127, baseType: !106, size: 32, offset: 32)
!10049 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !10045, file: !9923, line: 133, baseType: !106, size: 32, offset: 64)
!10050 = !{!10051, !10052, !10053, !10054}
!10051 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !10033, file: !9916, line: 483, type: !10036)
!10052 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !10033, file: !9916, line: 484, type: !10043)
!10053 = !DILocalVariable(name: "status", scope: !10033, file: !9916, line: 486, type: !9959)
!10054 = !DILocalVariable(name: "pllfreq", scope: !10033, file: !9916, line: 487, type: !106)
!10055 = !DILocation(line: 0, scope: !10033)
!10056 = !DILocation(line: 490, column: 6, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !10033, file: !9916, line: 490, column: 6)
!10058 = !DILocation(line: 490, column: 25, scope: !10057)
!10059 = !DILocation(line: 490, column: 6, scope: !10033)
!10060 = !DILocation(line: 493, column: 15, scope: !10061)
!10061 = distinct !DILexicalBlock(scope: !10057, file: !9916, line: 491, column: 3)
!10062 = !DILocation(line: 496, column: 8, scope: !10063)
!10063 = distinct !DILexicalBlock(scope: !10061, file: !9916, line: 496, column: 8)
!10064 = !DILocation(line: 496, column: 29, scope: !10063)
!10065 = !DILocation(line: 496, column: 8, scope: !10061)
!10066 = !DILocation(line: 498, column: 7, scope: !10067)
!10067 = distinct !DILexicalBlock(scope: !10063, file: !9916, line: 497, column: 5)
!10068 = !DILocation(line: 499, column: 7, scope: !10067)
!10069 = !DILocation(line: 499, column: 14, scope: !10067)
!10070 = !DILocation(line: 499, column: 35, scope: !10067)
!10071 = distinct !{!10071, !10068, !10072}
!10072 = !DILocation(line: 502, column: 7, scope: !10067)
!10073 = !DILocation(line: 506, column: 76, scope: !10061)
!10074 = !DILocation(line: 506, column: 103, scope: !10061)
!10075 = !DILocation(line: 507, column: 54, scope: !10061)
!10076 = !DILocation(line: 506, column: 5, scope: !10061)
!10077 = !DILocation(line: 510, column: 14, scope: !10061)
!10078 = !DILocation(line: 511, column: 3, scope: !10061)
!10079 = !DILocation(line: 0, scope: !10057)
!10080 = !DILocation(line: 518, column: 3, scope: !10033)
!10081 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !9916, file: !9916, line: 642, type: !10082, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !10084)
!10082 = !DISubroutineType(types: !10083)
!10083 = !{!9959}
!10084 = !{!10085}
!10085 = !DILocalVariable(name: "status", scope: !10081, file: !9916, line: 644, type: !9959)
!10086 = !DILocation(line: 0, scope: !10081)
!10087 = !DILocation(line: 647, column: 6, scope: !10088)
!10088 = distinct !DILexicalBlock(scope: !10081, file: !9916, line: 647, column: 6)
!10089 = !DILocation(line: 647, column: 27, scope: !10088)
!10090 = !DILocation(line: 663, column: 6, scope: !10091)
!10091 = distinct !DILexicalBlock(scope: !10081, file: !9916, line: 663, column: 6)
!10092 = !DILocation(line: 663, column: 30, scope: !10091)
!10093 = !DILocation(line: 663, column: 6, scope: !10081)
!10094 = !DILocation(line: 669, column: 3, scope: !10081)
!10095 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !9916, file: !9916, line: 611, type: !10096, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !10098)
!10096 = !DISubroutineType(types: !10097)
!10097 = !{!106, !106, !10036}
!10098 = !{!10099, !10100, !10101}
!10099 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !10095, file: !9916, line: 611, type: !106)
!10100 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !10095, file: !9916, line: 611, type: !10036)
!10101 = !DILocalVariable(name: "pllfreq", scope: !10095, file: !9916, line: 613, type: !106)
!10102 = !DILocation(line: 0, scope: !10095)
!10103 = !DILocation(line: 622, column: 56, scope: !10095)
!10104 = !DILocation(line: 622, column: 61, scope: !10095)
!10105 = !DILocation(line: 622, column: 32, scope: !10095)
!10106 = !DILocation(line: 626, column: 45, scope: !10095)
!10107 = !DILocation(line: 626, column: 50, scope: !10095)
!10108 = !DILocation(line: 626, column: 21, scope: !10095)
!10109 = !DILocation(line: 630, column: 47, scope: !10095)
!10110 = !DILocation(line: 630, column: 82, scope: !10095)
!10111 = !DILocation(line: 630, column: 21, scope: !10095)
!10112 = !DILocation(line: 633, column: 3, scope: !10095)
!10113 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !6945, file: !6945, line: 3007, type: !4745, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !474)
!10114 = !DILocation(line: 3009, column: 11, scope: !10113)
!10115 = !DILocation(line: 3009, column: 44, scope: !10113)
!10116 = !DILocation(line: 3009, column: 3, scope: !10113)
!10117 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !6945, file: !6945, line: 2987, type: !2860, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !474)
!10118 = !DILocation(line: 2989, column: 3, scope: !10117)
!10119 = !DILocation(line: 2990, column: 1, scope: !10117)
!10120 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !6945, file: !6945, line: 4304, type: !7079, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !10121)
!10121 = !{!10122, !10123, !10124, !10125}
!10122 = !DILocalVariable(name: "Source", arg: 1, scope: !10120, file: !6945, line: 4304, type: !106)
!10123 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10120, file: !6945, line: 4304, type: !106)
!10124 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10120, file: !6945, line: 4304, type: !106)
!10125 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10120, file: !6945, line: 4304, type: !106)
!10126 = !DILocation(line: 0, scope: !10120)
!10127 = !DILocation(line: 4306, column: 3, scope: !10120)
!10128 = !DILocation(line: 4308, column: 3, scope: !10120)
!10129 = !DILocation(line: 4312, column: 1, scope: !10120)
!10130 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !9916, file: !9916, line: 681, type: !10131, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !10133)
!10131 = !DISubroutineType(types: !10132)
!10132 = !{!9959, !106, !10043}
!10133 = !{!10134, !10135, !10136, !10137}
!10134 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !10130, file: !9916, line: 681, type: !106)
!10135 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !10130, file: !9916, line: 681, type: !10043)
!10136 = !DILocalVariable(name: "status", scope: !10130, file: !9916, line: 683, type: !9959)
!10137 = !DILocalVariable(name: "hclk_frequency", scope: !10130, file: !9916, line: 684, type: !106)
!10138 = !DILocation(line: 0, scope: !10130)
!10139 = !DILocation(line: 691, column: 20, scope: !10130)
!10140 = !DILocation(line: 694, column: 6, scope: !10141)
!10141 = distinct !DILexicalBlock(scope: !10130, file: !9916, line: 694, column: 6)
!10142 = !DILocation(line: 694, column: 22, scope: !10141)
!10143 = !DILocation(line: 694, column: 6, scope: !10130)
!10144 = !DILocation(line: 697, column: 14, scope: !10145)
!10145 = distinct !DILexicalBlock(scope: !10141, file: !9916, line: 695, column: 3)
!10146 = !DILocation(line: 701, column: 13, scope: !10147)
!10147 = distinct !DILexicalBlock(scope: !10130, file: !9916, line: 701, column: 6)
!10148 = !DILocation(line: 701, column: 6, scope: !10130)
!10149 = !DILocation(line: 704, column: 5, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !10147, file: !9916, line: 702, column: 3)
!10151 = !DILocation(line: 705, column: 5, scope: !10150)
!10152 = !DILocation(line: 705, column: 12, scope: !10150)
!10153 = !DILocation(line: 705, column: 33, scope: !10150)
!10154 = distinct !{!10154, !10151, !10155}
!10155 = !DILocation(line: 708, column: 5, scope: !10150)
!10156 = !DILocation(line: 711, column: 49, scope: !10150)
!10157 = !DILocation(line: 711, column: 5, scope: !10150)
!10158 = !DILocation(line: 712, column: 5, scope: !10150)
!10159 = !DILocation(line: 713, column: 5, scope: !10150)
!10160 = !DILocation(line: 713, column: 12, scope: !10150)
!10161 = !DILocation(line: 713, column: 37, scope: !10150)
!10162 = distinct !{!10162, !10159, !10163}
!10163 = !DILocation(line: 716, column: 5, scope: !10150)
!10164 = !DILocation(line: 719, column: 50, scope: !10150)
!10165 = !DILocation(line: 719, column: 5, scope: !10150)
!10166 = !DILocation(line: 720, column: 50, scope: !10150)
!10167 = !DILocation(line: 720, column: 5, scope: !10150)
!10168 = !DILocation(line: 721, column: 3, scope: !10150)
!10169 = !DILocation(line: 724, column: 6, scope: !10170)
!10170 = distinct !DILexicalBlock(scope: !10130, file: !9916, line: 724, column: 6)
!10171 = !DILocation(line: 724, column: 22, scope: !10170)
!10172 = !DILocation(line: 724, column: 6, scope: !10130)
!10173 = !DILocation(line: 727, column: 14, scope: !10174)
!10174 = distinct !DILexicalBlock(scope: !10170, file: !9916, line: 725, column: 3)
!10175 = !DILocation(line: 728, column: 3, scope: !10174)
!10176 = !DILocation(line: 731, column: 13, scope: !10177)
!10177 = distinct !DILexicalBlock(scope: !10130, file: !9916, line: 731, column: 6)
!10178 = !DILocation(line: 731, column: 6, scope: !10130)
!10179 = !DILocation(line: 733, column: 5, scope: !10180)
!10180 = distinct !DILexicalBlock(scope: !10177, file: !9916, line: 732, column: 3)
!10181 = !DILocation(line: 734, column: 3, scope: !10180)
!10182 = !DILocation(line: 736, column: 3, scope: !10130)
!10183 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !6945, file: !6945, line: 4184, type: !2860, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !474)
!10184 = !DILocation(line: 4186, column: 3, scope: !10183)
!10185 = !DILocation(line: 4187, column: 1, scope: !10183)
!10186 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !6945, file: !6945, line: 4205, type: !4745, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !474)
!10187 = !DILocation(line: 4207, column: 11, scope: !10186)
!10188 = !DILocation(line: 4207, column: 44, scope: !10186)
!10189 = !DILocation(line: 4207, column: 3, scope: !10186)
!10190 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !6945, file: !6945, line: 3224, type: !4999, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !10191)
!10191 = !{!10192}
!10192 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10190, file: !6945, line: 3224, type: !106)
!10193 = !DILocation(line: 0, scope: !10190)
!10194 = !DILocation(line: 3226, column: 3, scope: !10190)
!10195 = !DILocation(line: 3227, column: 1, scope: !10190)
!10196 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !6945, file: !6945, line: 3188, type: !4999, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !10197)
!10197 = !{!10198}
!10198 = !DILocalVariable(name: "Source", arg: 1, scope: !10196, file: !6945, line: 3188, type: !106)
!10199 = !DILocation(line: 0, scope: !10196)
!10200 = !DILocation(line: 3190, column: 3, scope: !10196)
!10201 = !DILocation(line: 3191, column: 1, scope: !10196)
!10202 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !6945, file: !6945, line: 3204, type: !4745, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !474)
!10203 = !DILocation(line: 3206, column: 21, scope: !10202)
!10204 = !DILocation(line: 3206, column: 3, scope: !10202)
!10205 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !6945, file: !6945, line: 3240, type: !4999, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !10206)
!10206 = !{!10207}
!10207 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10205, file: !6945, line: 3240, type: !106)
!10208 = !DILocation(line: 0, scope: !10205)
!10209 = !DILocation(line: 3242, column: 3, scope: !10205)
!10210 = !DILocation(line: 3243, column: 1, scope: !10205)
!10211 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !6945, file: !6945, line: 3256, type: !4999, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !10212)
!10212 = !{!10213}
!10213 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10211, file: !6945, line: 3256, type: !106)
!10214 = !DILocation(line: 0, scope: !10211)
!10215 = !DILocation(line: 3258, column: 3, scope: !10211)
!10216 = !DILocation(line: 3259, column: 1, scope: !10211)
!10217 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !6945, file: !6945, line: 5153, type: !4745, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !474)
!10218 = !DILocation(line: 5155, column: 11, scope: !10217)
!10219 = !DILocation(line: 5155, column: 47, scope: !10217)
!10220 = !DILocation(line: 5155, column: 3, scope: !10217)
!10221 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !9916, file: !9916, line: 540, type: !10222, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !10224)
!10222 = !DISubroutineType(types: !10223)
!10223 = !{!9959, !106, !106, !10036, !10043}
!10224 = !{!10225, !10226, !10227, !10228, !10229, !10230}
!10225 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !10221, file: !9916, line: 540, type: !106)
!10226 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !10221, file: !9916, line: 540, type: !106)
!10227 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !10221, file: !9916, line: 541, type: !10036)
!10228 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !10221, file: !9916, line: 541, type: !10043)
!10229 = !DILocalVariable(name: "status", scope: !10221, file: !9916, line: 543, type: !9959)
!10230 = !DILocalVariable(name: "pllfreq", scope: !10221, file: !9916, line: 544, type: !106)
!10231 = !DILocation(line: 0, scope: !10221)
!10232 = !DILocation(line: 551, column: 6, scope: !10233)
!10233 = distinct !DILexicalBlock(scope: !10221, file: !9916, line: 551, column: 6)
!10234 = !DILocation(line: 551, column: 25, scope: !10233)
!10235 = !DILocation(line: 551, column: 6, scope: !10221)
!10236 = !DILocation(line: 554, column: 15, scope: !10237)
!10237 = distinct !DILexicalBlock(scope: !10233, file: !9916, line: 552, column: 3)
!10238 = !DILocation(line: 557, column: 8, scope: !10239)
!10239 = distinct !DILexicalBlock(scope: !10237, file: !9916, line: 557, column: 8)
!10240 = !DILocation(line: 557, column: 29, scope: !10239)
!10241 = !DILocation(line: 557, column: 8, scope: !10237)
!10242 = !DILocation(line: 560, column: 20, scope: !10243)
!10243 = distinct !DILexicalBlock(scope: !10244, file: !9916, line: 560, column: 10)
!10244 = distinct !DILexicalBlock(scope: !10239, file: !9916, line: 558, column: 5)
!10245 = !DILocation(line: 560, column: 10, scope: !10244)
!10246 = !DILocation(line: 562, column: 9, scope: !10247)
!10247 = distinct !DILexicalBlock(scope: !10243, file: !9916, line: 561, column: 7)
!10248 = !DILocation(line: 563, column: 7, scope: !10247)
!10249 = !DILocation(line: 566, column: 9, scope: !10250)
!10250 = distinct !DILexicalBlock(scope: !10243, file: !9916, line: 565, column: 7)
!10251 = !DILocation(line: 570, column: 7, scope: !10244)
!10252 = !DILocation(line: 571, column: 7, scope: !10244)
!10253 = !DILocation(line: 571, column: 14, scope: !10244)
!10254 = !DILocation(line: 571, column: 35, scope: !10244)
!10255 = distinct !{!10255, !10252, !10256}
!10256 = !DILocation(line: 574, column: 7, scope: !10244)
!10257 = !DILocation(line: 578, column: 76, scope: !10237)
!10258 = !DILocation(line: 578, column: 103, scope: !10237)
!10259 = !DILocation(line: 579, column: 54, scope: !10237)
!10260 = !DILocation(line: 578, column: 5, scope: !10237)
!10261 = !DILocation(line: 582, column: 14, scope: !10237)
!10262 = !DILocation(line: 583, column: 3, scope: !10237)
!10263 = !DILocation(line: 0, scope: !10233)
!10264 = !DILocation(line: 590, column: 3, scope: !10221)
!10265 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !6945, file: !6945, line: 2969, type: !4745, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !474)
!10266 = !DILocation(line: 2971, column: 11, scope: !10265)
!10267 = !DILocation(line: 2971, column: 44, scope: !10265)
!10268 = !DILocation(line: 2971, column: 3, scope: !10265)
!10269 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !6945, file: !6945, line: 2929, type: !2860, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !474)
!10270 = !DILocation(line: 2931, column: 3, scope: !10269)
!10271 = !DILocation(line: 2932, column: 1, scope: !10269)
!10272 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !6945, file: !6945, line: 2939, type: !2860, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !474)
!10273 = !DILocation(line: 2941, column: 3, scope: !10272)
!10274 = !DILocation(line: 2942, column: 1, scope: !10272)
!10275 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !6945, file: !6945, line: 2949, type: !2860, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !474)
!10276 = !DILocation(line: 2951, column: 3, scope: !10275)
!10277 = !DILocation(line: 2952, column: 1, scope: !10275)
!10278 = distinct !DISubprogram(name: "z_device_state_init", scope: !10279, file: !10279, line: 23, type: !2860, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2820, retainedNodes: !10280)
!10279 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10280 = !{!10281}
!10281 = !DILocalVariable(name: "dev", scope: !10278, file: !10279, line: 25, type: !10282)
!10282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10283, size: 32)
!10283 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10284)
!10284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !147, line: 378, size: 192, elements: !10285)
!10285 = !{!10286, !10287, !10288, !10289, !10295, !10296}
!10286 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10284, file: !147, line: 380, baseType: !150, size: 32)
!10287 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !10284, file: !147, line: 382, baseType: !13, size: 32, offset: 32)
!10288 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !10284, file: !147, line: 384, baseType: !13, size: 32, offset: 64)
!10289 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10284, file: !147, line: 386, baseType: !10290, size: 32, offset: 96)
!10290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10291, size: 32)
!10291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !147, line: 351, size: 16, elements: !10292)
!10292 = !{!10293, !10294}
!10293 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !10291, file: !147, line: 359, baseType: !160, size: 8)
!10294 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !10291, file: !147, line: 364, baseType: !163, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!10295 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10284, file: !147, line: 388, baseType: !102, size: 32, offset: 128)
!10296 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !10284, file: !147, line: 396, baseType: !166, size: 32, offset: 160)
!10297 = !DILocation(line: 0, scope: !10278)
!10298 = !DILocation(line: 31, column: 1, scope: !10278)
!10299 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !10279, file: !10279, line: 33, type: !10300, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2820, retainedNodes: !10302)
!10300 = !DISubroutineType(types: !10301)
!10301 = !{!10282, !150}
!10302 = !{!10303, !10304}
!10303 = !DILocalVariable(name: "name", arg: 1, scope: !10299, file: !10279, line: 33, type: !150)
!10304 = !DILocalVariable(name: "dev", scope: !10299, file: !10279, line: 35, type: !10282)
!10305 = !DILocation(line: 0, scope: !10299)
!10306 = !DILocation(line: 40, column: 12, scope: !10307)
!10307 = distinct !DILexicalBlock(scope: !10299, file: !10279, line: 40, column: 6)
!10308 = !DILocation(line: 40, column: 21, scope: !10307)
!10309 = !DILocation(line: 40, column: 25, scope: !10307)
!10310 = !DILocation(line: 40, column: 33, scope: !10307)
!10311 = !DILocation(line: 40, column: 6, scope: !10299)
!10312 = !DILocation(line: 55, column: 2, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !10299, file: !10279, line: 55, column: 2)
!10314 = !DILocation(line: 50, column: 7, scope: !10315)
!10315 = distinct !DILexicalBlock(scope: !10316, file: !10279, line: 50, column: 7)
!10316 = distinct !DILexicalBlock(scope: !10317, file: !10279, line: 49, column: 57)
!10317 = distinct !DILexicalBlock(scope: !10318, file: !10279, line: 49, column: 2)
!10318 = distinct !DILexicalBlock(scope: !10299, file: !10279, line: 49, column: 2)
!10319 = !DILocation(line: 50, column: 30, scope: !10315)
!10320 = !DILocation(line: 50, column: 39, scope: !10315)
!10321 = !DILocation(line: 50, column: 44, scope: !10315)
!10322 = !DILocation(line: 50, column: 7, scope: !10316)
!10323 = !DILocation(line: 49, column: 53, scope: !10317)
!10324 = !DILocation(line: 49, column: 33, scope: !10317)
!10325 = !DILocation(line: 49, column: 2, scope: !10318)
!10326 = distinct !{!10326, !10325, !10327}
!10327 = !DILocation(line: 53, column: 2, scope: !10318)
!10328 = !DILocation(line: 56, column: 7, scope: !10329)
!10329 = distinct !DILexicalBlock(scope: !10330, file: !10279, line: 56, column: 7)
!10330 = distinct !DILexicalBlock(scope: !10331, file: !10279, line: 55, column: 57)
!10331 = distinct !DILexicalBlock(scope: !10313, file: !10279, line: 55, column: 2)
!10332 = !DILocation(line: 56, column: 30, scope: !10329)
!10333 = !DILocation(line: 56, column: 52, scope: !10329)
!10334 = !DILocation(line: 56, column: 34, scope: !10329)
!10335 = !DILocation(line: 56, column: 58, scope: !10329)
!10336 = !DILocation(line: 56, column: 7, scope: !10330)
!10337 = !DILocation(line: 55, column: 53, scope: !10331)
!10338 = !DILocation(line: 55, column: 33, scope: !10331)
!10339 = distinct !{!10339, !10312, !10340}
!10340 = !DILocation(line: 59, column: 2, scope: !10313)
!10341 = !DILocation(line: 62, column: 1, scope: !10299)
!10342 = distinct !DISubprogram(name: "z_device_is_ready", scope: !10279, file: !10279, line: 93, type: !10343, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2820, retainedNodes: !10345)
!10343 = !DISubroutineType(types: !10344)
!10344 = !{!163, !10282}
!10345 = !{!10346}
!10346 = !DILocalVariable(name: "dev", arg: 1, scope: !10342, file: !10279, line: 93, type: !10282)
!10347 = !DILocation(line: 0, scope: !10342)
!10348 = !DILocation(line: 99, column: 10, scope: !10349)
!10349 = distinct !DILexicalBlock(scope: !10342, file: !10279, line: 99, column: 6)
!10350 = !DILocation(line: 99, column: 6, scope: !10342)
!10351 = !DILocation(line: 103, column: 14, scope: !10342)
!10352 = !DILocation(line: 103, column: 21, scope: !10342)
!10353 = !DILocation(line: 103, column: 33, scope: !10342)
!10354 = !DILocation(line: 103, column: 49, scope: !10342)
!10355 = !DILocation(line: 103, column: 58, scope: !10342)
!10356 = !DILocation(line: 104, column: 1, scope: !10342)
!10357 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !10279, file: !10279, line: 87, type: !10358, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2820, retainedNodes: !10361)
!10358 = !DISubroutineType(types: !10359)
!10359 = !{!352, !10360}
!10360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10282, size: 32)
!10361 = !{!10362}
!10362 = !DILocalVariable(name: "devices", arg: 1, scope: !10357, file: !10279, line: 87, type: !10360)
!10363 = !DILocation(line: 0, scope: !10357)
!10364 = !DILocation(line: 89, column: 11, scope: !10357)
!10365 = !DILocation(line: 90, column: 2, scope: !10357)
!10366 = distinct !DISubprogram(name: "device_required_foreach", scope: !10279, file: !10279, line: 125, type: !10367, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2820, retainedNodes: !10373)
!10367 = !DISubroutineType(types: !10368)
!10368 = !{!103, !10282, !10369, !102}
!10369 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !147, line: 471, baseType: !10370)
!10370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10371, size: 32)
!10371 = !DISubroutineType(types: !10372)
!10372 = !{!103, !10282, !102}
!10373 = !{!10374, !10375, !10376, !10377, !10378}
!10374 = !DILocalVariable(name: "dev", arg: 1, scope: !10366, file: !10279, line: 125, type: !10282)
!10375 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !10366, file: !10279, line: 126, type: !10369)
!10376 = !DILocalVariable(name: "context", arg: 3, scope: !10366, file: !10279, line: 127, type: !102)
!10377 = !DILocalVariable(name: "handle_count", scope: !10366, file: !10279, line: 129, type: !352)
!10378 = !DILocalVariable(name: "handles", scope: !10366, file: !10279, line: 130, type: !166)
!10379 = !DILocation(line: 0, scope: !10366)
!10380 = !DILocation(line: 129, column: 2, scope: !10366)
!10381 = !DILocation(line: 129, column: 9, scope: !10366)
!10382 = !DILocation(line: 130, column: 35, scope: !10366)
!10383 = !DILocation(line: 132, column: 33, scope: !10366)
!10384 = !DILocation(line: 132, column: 9, scope: !10366)
!10385 = !DILocation(line: 133, column: 1, scope: !10366)
!10386 = !DILocation(line: 132, column: 2, scope: !10366)
!10387 = distinct !DISubprogram(name: "device_required_handles_get", scope: !147, file: !147, line: 493, type: !10388, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2820, retainedNodes: !10390)
!10388 = !DISubroutineType(types: !10389)
!10389 = !{!166, !10282, !2321}
!10390 = !{!10391, !10392, !10393, !10394}
!10391 = !DILocalVariable(name: "dev", arg: 1, scope: !10387, file: !147, line: 493, type: !10282)
!10392 = !DILocalVariable(name: "count", arg: 2, scope: !10387, file: !147, line: 493, type: !2321)
!10393 = !DILocalVariable(name: "rv", scope: !10387, file: !147, line: 495, type: !166)
!10394 = !DILocalVariable(name: "i", scope: !10395, file: !147, line: 498, type: !352)
!10395 = distinct !DILexicalBlock(scope: !10396, file: !147, line: 497, column: 18)
!10396 = distinct !DILexicalBlock(scope: !10387, file: !147, line: 497, column: 6)
!10397 = !DILocation(line: 0, scope: !10387)
!10398 = !DILocation(line: 495, column: 35, scope: !10387)
!10399 = !DILocation(line: 497, column: 9, scope: !10396)
!10400 = !DILocation(line: 497, column: 6, scope: !10387)
!10401 = !DILocation(line: 0, scope: !10395)
!10402 = !DILocation(line: 500, column: 11, scope: !10395)
!10403 = !DILocation(line: 500, column: 40, scope: !10395)
!10404 = !DILocation(line: 502, column: 4, scope: !10405)
!10405 = distinct !DILexicalBlock(scope: !10395, file: !147, line: 501, column: 40)
!10406 = distinct !{!10406, !10407, !10408}
!10407 = !DILocation(line: 500, column: 3, scope: !10395)
!10408 = !DILocation(line: 503, column: 3, scope: !10395)
!10409 = !DILocation(line: 504, column: 10, scope: !10395)
!10410 = !DILocation(line: 505, column: 2, scope: !10395)
!10411 = !DILocation(line: 507, column: 2, scope: !10387)
!10412 = distinct !DISubprogram(name: "device_visitor", scope: !10279, file: !10279, line: 106, type: !10413, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2820, retainedNodes: !10415)
!10413 = !DISubroutineType(types: !10414)
!10414 = !{!103, !166, !352, !10369, !102}
!10415 = !{!10416, !10417, !10418, !10419, !10420, !10422, !10425, !10426}
!10416 = !DILocalVariable(name: "handles", arg: 1, scope: !10412, file: !10279, line: 106, type: !166)
!10417 = !DILocalVariable(name: "handle_count", arg: 2, scope: !10412, file: !10279, line: 107, type: !352)
!10418 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !10412, file: !10279, line: 108, type: !10369)
!10419 = !DILocalVariable(name: "context", arg: 4, scope: !10412, file: !10279, line: 109, type: !102)
!10420 = !DILocalVariable(name: "i", scope: !10421, file: !10279, line: 112, type: !352)
!10421 = distinct !DILexicalBlock(scope: !10412, file: !10279, line: 112, column: 2)
!10422 = !DILocalVariable(name: "dh", scope: !10423, file: !10279, line: 113, type: !168)
!10423 = distinct !DILexicalBlock(scope: !10424, file: !10279, line: 112, column: 44)
!10424 = distinct !DILexicalBlock(scope: !10421, file: !10279, line: 112, column: 2)
!10425 = !DILocalVariable(name: "rdev", scope: !10423, file: !10279, line: 114, type: !10282)
!10426 = !DILocalVariable(name: "rc", scope: !10423, file: !10279, line: 115, type: !103)
!10427 = !DILocation(line: 0, scope: !10412)
!10428 = !DILocation(line: 0, scope: !10421)
!10429 = !DILocation(line: 112, column: 23, scope: !10424)
!10430 = !DILocation(line: 112, column: 2, scope: !10421)
!10431 = distinct !{!10431, !10430, !10432}
!10432 = !DILocation(line: 120, column: 2, scope: !10421)
!10433 = !DILocation(line: 113, column: 24, scope: !10423)
!10434 = !DILocation(line: 0, scope: !10423)
!10435 = !DILocation(line: 114, column: 31, scope: !10423)
!10436 = !DILocation(line: 115, column: 12, scope: !10423)
!10437 = !DILocation(line: 117, column: 10, scope: !10438)
!10438 = distinct !DILexicalBlock(scope: !10423, file: !10279, line: 117, column: 7)
!10439 = !DILocation(line: 112, column: 39, scope: !10424)
!10440 = !DILocation(line: 123, column: 1, scope: !10412)
!10441 = distinct !DISubprogram(name: "device_from_handle", scope: !147, file: !147, line: 439, type: !10442, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2820, retainedNodes: !10444)
!10442 = !DISubroutineType(types: !10443)
!10443 = !{!10282, !168}
!10444 = !{!10445, !10446, !10447}
!10445 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !10441, file: !147, line: 439, type: !168)
!10446 = !DILocalVariable(name: "dev", scope: !10441, file: !147, line: 443, type: !10282)
!10447 = !DILocalVariable(name: "numdev", scope: !10441, file: !147, line: 444, type: !352)
!10448 = !DILocation(line: 0, scope: !10441)
!10449 = !DILocation(line: 446, column: 7, scope: !10450)
!10450 = distinct !DILexicalBlock(scope: !10441, file: !147, line: 446, column: 6)
!10451 = !DILocation(line: 446, column: 18, scope: !10450)
!10452 = !DILocation(line: 446, column: 23, scope: !10450)
!10453 = !DILocation(line: 450, column: 2, scope: !10441)
!10454 = distinct !DISubprogram(name: "device_supported_foreach", scope: !10279, file: !10279, line: 135, type: !10367, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2820, retainedNodes: !10455)
!10455 = !{!10456, !10457, !10458, !10459, !10460}
!10456 = !DILocalVariable(name: "dev", arg: 1, scope: !10454, file: !10279, line: 135, type: !10282)
!10457 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !10454, file: !10279, line: 136, type: !10369)
!10458 = !DILocalVariable(name: "context", arg: 3, scope: !10454, file: !10279, line: 137, type: !102)
!10459 = !DILocalVariable(name: "handle_count", scope: !10454, file: !10279, line: 139, type: !352)
!10460 = !DILocalVariable(name: "handles", scope: !10454, file: !10279, line: 140, type: !166)
!10461 = !DILocation(line: 0, scope: !10454)
!10462 = !DILocation(line: 139, column: 2, scope: !10454)
!10463 = !DILocation(line: 139, column: 9, scope: !10454)
!10464 = !DILocation(line: 140, column: 35, scope: !10454)
!10465 = !DILocation(line: 142, column: 33, scope: !10454)
!10466 = !DILocation(line: 142, column: 9, scope: !10454)
!10467 = !DILocation(line: 143, column: 1, scope: !10454)
!10468 = !DILocation(line: 142, column: 2, scope: !10454)
!10469 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !147, file: !147, line: 573, type: !10388, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2820, retainedNodes: !10470)
!10470 = !{!10471, !10472, !10473, !10474, !10475}
!10471 = !DILocalVariable(name: "dev", arg: 1, scope: !10469, file: !147, line: 573, type: !10282)
!10472 = !DILocalVariable(name: "count", arg: 2, scope: !10469, file: !147, line: 573, type: !2321)
!10473 = !DILocalVariable(name: "rv", scope: !10469, file: !147, line: 575, type: !166)
!10474 = !DILocalVariable(name: "region", scope: !10469, file: !147, line: 576, type: !352)
!10475 = !DILocalVariable(name: "i", scope: !10469, file: !147, line: 577, type: !352)
!10476 = !DILocation(line: 0, scope: !10469)
!10477 = !DILocation(line: 575, column: 35, scope: !10469)
!10478 = !DILocation(line: 579, column: 9, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10469, file: !147, line: 579, column: 6)
!10480 = !DILocation(line: 579, column: 6, scope: !10469)
!10481 = !DILocation(line: 582, column: 8, scope: !10482)
!10482 = distinct !DILexicalBlock(scope: !10483, file: !147, line: 582, column: 8)
!10483 = distinct !DILexicalBlock(scope: !10484, file: !147, line: 581, column: 23)
!10484 = distinct !DILexicalBlock(scope: !10479, file: !147, line: 579, column: 18)
!10485 = !DILocation(line: 582, column: 12, scope: !10482)
!10486 = !DILocation(line: 585, column: 6, scope: !10483)
!10487 = !DILocation(line: 0, scope: !10484)
!10488 = !DILocation(line: 581, column: 17, scope: !10484)
!10489 = !DILocation(line: 581, column: 3, scope: !10484)
!10490 = !DILocation(line: 588, column: 10, scope: !10484)
!10491 = !DILocation(line: 588, column: 16, scope: !10484)
!10492 = !DILocation(line: 589, column: 4, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10484, file: !147, line: 588, column: 39)
!10494 = !DILocation(line: 588, column: 3, scope: !10484)
!10495 = distinct !{!10495, !10494, !10496}
!10496 = !DILocation(line: 590, column: 3, scope: !10484)
!10497 = !DILocation(line: 591, column: 10, scope: !10484)
!10498 = !DILocation(line: 592, column: 2, scope: !10484)
!10499 = !DILocation(line: 575, column: 25, scope: !10469)
!10500 = !DILocation(line: 594, column: 2, scope: !10469)
!10501 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1744, file: !1744, line: 49, type: !10502, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1741, retainedNodes: !474)
!10502 = !DISubroutineType(types: !10503)
!10503 = !{!2314}
!10504 = !DILocation(line: 51, column: 10, scope: !10501)
!10505 = !DILocation(line: 51, column: 20, scope: !10501)
!10506 = !DILocation(line: 51, column: 2, scope: !10501)
!10507 = distinct !DISubprogram(name: "coredump", scope: !2827, file: !2827, line: 209, type: !10508, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2823, retainedNodes: !10654)
!10508 = !DISubroutineType(types: !10509)
!10509 = !{null, !32, !10510, !10554}
!10510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10511, size: 32)
!10511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10512)
!10512 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2446, line: 141, baseType: !10513)
!10513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2446, line: 97, size: 256, elements: !10514)
!10514 = !{!10515}
!10515 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !10513, file: !2446, line: 107, baseType: !10516, size: 256)
!10516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2446, line: 98, size: 256, elements: !10517)
!10517 = !{!10518, !10523, !10528, !10533, !10538, !10543, !10548, !10553}
!10518 = !DIDerivedType(tag: DW_TAG_member, scope: !10516, file: !2446, line: 99, baseType: !10519, size: 32)
!10519 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10516, file: !2446, line: 99, size: 32, elements: !10520)
!10520 = !{!10521, !10522}
!10521 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !10519, file: !2446, line: 99, baseType: !106, size: 32)
!10522 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !10519, file: !2446, line: 99, baseType: !106, size: 32)
!10523 = !DIDerivedType(tag: DW_TAG_member, scope: !10516, file: !2446, line: 100, baseType: !10524, size: 32, offset: 32)
!10524 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10516, file: !2446, line: 100, size: 32, elements: !10525)
!10525 = !{!10526, !10527}
!10526 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !10524, file: !2446, line: 100, baseType: !106, size: 32)
!10527 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !10524, file: !2446, line: 100, baseType: !106, size: 32)
!10528 = !DIDerivedType(tag: DW_TAG_member, scope: !10516, file: !2446, line: 101, baseType: !10529, size: 32, offset: 64)
!10529 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10516, file: !2446, line: 101, size: 32, elements: !10530)
!10530 = !{!10531, !10532}
!10531 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !10529, file: !2446, line: 101, baseType: !106, size: 32)
!10532 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !10529, file: !2446, line: 101, baseType: !106, size: 32)
!10533 = !DIDerivedType(tag: DW_TAG_member, scope: !10516, file: !2446, line: 102, baseType: !10534, size: 32, offset: 96)
!10534 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10516, file: !2446, line: 102, size: 32, elements: !10535)
!10535 = !{!10536, !10537}
!10536 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !10534, file: !2446, line: 102, baseType: !106, size: 32)
!10537 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !10534, file: !2446, line: 102, baseType: !106, size: 32)
!10538 = !DIDerivedType(tag: DW_TAG_member, scope: !10516, file: !2446, line: 103, baseType: !10539, size: 32, offset: 128)
!10539 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10516, file: !2446, line: 103, size: 32, elements: !10540)
!10540 = !{!10541, !10542}
!10541 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !10539, file: !2446, line: 103, baseType: !106, size: 32)
!10542 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !10539, file: !2446, line: 103, baseType: !106, size: 32)
!10543 = !DIDerivedType(tag: DW_TAG_member, scope: !10516, file: !2446, line: 104, baseType: !10544, size: 32, offset: 160)
!10544 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10516, file: !2446, line: 104, size: 32, elements: !10545)
!10545 = !{!10546, !10547}
!10546 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !10544, file: !2446, line: 104, baseType: !106, size: 32)
!10547 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !10544, file: !2446, line: 104, baseType: !106, size: 32)
!10548 = !DIDerivedType(tag: DW_TAG_member, scope: !10516, file: !2446, line: 105, baseType: !10549, size: 32, offset: 192)
!10549 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10516, file: !2446, line: 105, size: 32, elements: !10550)
!10550 = !{!10551, !10552}
!10551 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !10549, file: !2446, line: 105, baseType: !106, size: 32)
!10552 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !10549, file: !2446, line: 105, baseType: !106, size: 32)
!10553 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !10516, file: !2446, line: 106, baseType: !106, size: 32, offset: 224)
!10554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10555, size: 32)
!10555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !363, line: 245, size: 1024, elements: !10556)
!10556 = !{!10557, !10615, !10627, !10628, !10629, !10630, !10636, !10649}
!10557 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !10555, file: !363, line: 247, baseType: !10558, size: 384)
!10558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !363, line: 57, size: 384, elements: !10559)
!10559 = !{!10560, !10584, !10591, !10592, !10593, !10602, !10603, !10604}
!10560 = !DIDerivedType(tag: DW_TAG_member, scope: !10558, file: !363, line: 60, baseType: !10561, size: 64)
!10561 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10558, file: !363, line: 60, size: 64, elements: !10562)
!10562 = !{!10563, !10578}
!10563 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !10561, file: !363, line: 61, baseType: !10564, size: 64)
!10564 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !373, line: 49, baseType: !10565)
!10565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !373, line: 37, size: 64, elements: !10566)
!10566 = !{!10567, !10573}
!10567 = !DIDerivedType(tag: DW_TAG_member, scope: !10565, file: !373, line: 38, baseType: !10568, size: 32)
!10568 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10565, file: !373, line: 38, size: 32, elements: !10569)
!10569 = !{!10570, !10572}
!10570 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10568, file: !373, line: 39, baseType: !10571, size: 32)
!10571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10565, size: 32)
!10572 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10568, file: !373, line: 40, baseType: !10571, size: 32)
!10573 = !DIDerivedType(tag: DW_TAG_member, scope: !10565, file: !373, line: 42, baseType: !10574, size: 32, offset: 32)
!10574 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10565, file: !373, line: 42, size: 32, elements: !10575)
!10575 = !{!10576, !10577}
!10576 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10574, file: !373, line: 43, baseType: !10571, size: 32)
!10577 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10574, file: !373, line: 44, baseType: !10571, size: 32)
!10578 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !10561, file: !363, line: 62, baseType: !10579, size: 64)
!10579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !389, line: 49, size: 64, elements: !10580)
!10580 = !{!10581}
!10581 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !10579, file: !389, line: 50, baseType: !10582, size: 64)
!10582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10583, size: 64, elements: !394)
!10583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10579, size: 32)
!10584 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !10558, file: !363, line: 68, baseType: !10585, size: 32, offset: 64)
!10585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10586, size: 32)
!10586 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !399, line: 233, baseType: !10587)
!10587 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !399, line: 231, size: 64, elements: !10588)
!10588 = !{!10589}
!10589 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10587, file: !399, line: 232, baseType: !10590, size: 64)
!10590 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !373, line: 48, baseType: !10565)
!10591 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !10558, file: !363, line: 71, baseType: !160, size: 8, offset: 96)
!10592 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !10558, file: !363, line: 74, baseType: !160, size: 8, offset: 104)
!10593 = !DIDerivedType(tag: DW_TAG_member, scope: !10558, file: !363, line: 90, baseType: !10594, size: 16, offset: 112)
!10594 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10558, file: !363, line: 90, size: 16, elements: !10595)
!10595 = !{!10596, !10601}
!10596 = !DIDerivedType(tag: DW_TAG_member, scope: !10594, file: !363, line: 91, baseType: !10597, size: 16)
!10597 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10594, file: !363, line: 91, size: 16, elements: !10598)
!10598 = !{!10599, !10600}
!10599 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !10597, file: !363, line: 96, baseType: !413, size: 8)
!10600 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !10597, file: !363, line: 97, baseType: !160, size: 8, offset: 8)
!10601 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !10594, file: !363, line: 100, baseType: !417, size: 16)
!10602 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !10558, file: !363, line: 107, baseType: !106, size: 32, offset: 128)
!10603 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !10558, file: !363, line: 127, baseType: !102, size: 32, offset: 160)
!10604 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !10558, file: !363, line: 131, baseType: !10605, size: 192, offset: 192)
!10605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !399, line: 244, size: 192, elements: !10606)
!10606 = !{!10607, !10608, !10614}
!10607 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10605, file: !399, line: 245, baseType: !10564, size: 64)
!10608 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !10605, file: !399, line: 246, baseType: !10609, size: 32, offset: 64)
!10609 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !399, line: 242, baseType: !10610)
!10610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10611, size: 32)
!10611 = !DISubroutineType(types: !10612)
!10612 = !{null, !10613}
!10613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10605, size: 32)
!10614 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !10605, file: !399, line: 249, baseType: !432, size: 64, offset: 128)
!10615 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !10555, file: !363, line: 250, baseType: !10616, size: 288, offset: 384)
!10616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !10617)
!10617 = !{!10618, !10619, !10620, !10621, !10622, !10623, !10624, !10625, !10626}
!10618 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !10616, file: !436, line: 26, baseType: !106, size: 32)
!10619 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !10616, file: !436, line: 27, baseType: !106, size: 32, offset: 32)
!10620 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !10616, file: !436, line: 28, baseType: !106, size: 32, offset: 64)
!10621 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !10616, file: !436, line: 29, baseType: !106, size: 32, offset: 96)
!10622 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !10616, file: !436, line: 30, baseType: !106, size: 32, offset: 128)
!10623 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !10616, file: !436, line: 31, baseType: !106, size: 32, offset: 160)
!10624 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !10616, file: !436, line: 32, baseType: !106, size: 32, offset: 192)
!10625 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !10616, file: !436, line: 33, baseType: !106, size: 32, offset: 224)
!10626 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !10616, file: !436, line: 34, baseType: !106, size: 32, offset: 256)
!10627 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !10555, file: !363, line: 253, baseType: !102, size: 32, offset: 672)
!10628 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !10555, file: !363, line: 256, baseType: !10586, size: 64, offset: 704)
!10629 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !10555, file: !363, line: 294, baseType: !103, size: 32, offset: 768)
!10630 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !10555, file: !363, line: 300, baseType: !10631, size: 96, offset: 800)
!10631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !363, line: 149, size: 96, elements: !10632)
!10632 = !{!10633, !10634, !10635}
!10633 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !10631, file: !363, line: 153, baseType: !22, size: 32)
!10634 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !10631, file: !363, line: 162, baseType: !352, size: 32, offset: 32)
!10635 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !10631, file: !363, line: 168, baseType: !352, size: 32, offset: 64)
!10636 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !10555, file: !363, line: 325, baseType: !10637, size: 32, offset: 896)
!10637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10638, size: 32)
!10638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !459, line: 5073, size: 160, elements: !10639)
!10639 = !{!10640, !10646, !10647}
!10640 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !10638, file: !459, line: 5074, baseType: !10641, size: 96)
!10641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !463, line: 56, size: 96, elements: !10642)
!10642 = !{!10643, !10644, !10645}
!10643 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !10641, file: !463, line: 57, baseType: !466, size: 32)
!10644 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !10641, file: !463, line: 58, baseType: !102, size: 32, offset: 32)
!10645 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !10641, file: !463, line: 59, baseType: !352, size: 32, offset: 64)
!10646 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10638, file: !459, line: 5075, baseType: !10586, size: 64, offset: 96)
!10647 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10638, file: !459, line: 5076, baseType: !10648, offset: 160)
!10648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !473, line: 43, elements: !474)
!10649 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !10555, file: !363, line: 343, baseType: !10650, size: 64, offset: 928)
!10650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !10651)
!10651 = !{!10652, !10653}
!10652 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !10650, file: !436, line: 63, baseType: !106, size: 32)
!10653 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !10650, file: !436, line: 66, baseType: !106, size: 32, offset: 32)
!10654 = !{!10655, !10656, !10657}
!10655 = !DILocalVariable(name: "reason", arg: 1, scope: !10507, file: !2827, line: 209, type: !32)
!10656 = !DILocalVariable(name: "esf", arg: 2, scope: !10507, file: !2827, line: 209, type: !10510)
!10657 = !DILocalVariable(name: "thread", arg: 3, scope: !10507, file: !2827, line: 210, type: !10554)
!10658 = !DILocation(line: 0, scope: !10507)
!10659 = !DILocation(line: 212, column: 1, scope: !10507)
!10660 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2827, file: !2827, line: 214, type: !10661, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2823, retainedNodes: !10663)
!10661 = !DISubroutineType(types: !10662)
!10662 = !{null, !22, !22}
!10663 = !{!10664, !10665}
!10664 = !DILocalVariable(name: "start_addr", arg: 1, scope: !10660, file: !2827, line: 214, type: !22)
!10665 = !DILocalVariable(name: "end_addr", arg: 2, scope: !10660, file: !2827, line: 214, type: !22)
!10666 = !DILocation(line: 0, scope: !10660)
!10667 = !DILocation(line: 216, column: 1, scope: !10660)
!10668 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2827, file: !2827, line: 218, type: !10669, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2823, retainedNodes: !10671)
!10669 = !DISubroutineType(types: !10670)
!10670 = !{null, !1785, !352}
!10671 = !{!10672, !10673}
!10672 = !DILocalVariable(name: "buf", arg: 1, scope: !10668, file: !2827, line: 218, type: !1785)
!10673 = !DILocalVariable(name: "buflen", arg: 2, scope: !10668, file: !2827, line: 218, type: !352)
!10674 = !DILocation(line: 0, scope: !10668)
!10675 = !DILocation(line: 220, column: 1, scope: !10668)
!10676 = distinct !DISubprogram(name: "coredump_query", scope: !2827, file: !2827, line: 222, type: !10677, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2823, retainedNodes: !10679)
!10677 = !DISubroutineType(types: !10678)
!10678 = !{!103, !2826, !102}
!10679 = !{!10680, !10681}
!10680 = !DILocalVariable(name: "query_id", arg: 1, scope: !10676, file: !2827, line: 222, type: !2826)
!10681 = !DILocalVariable(name: "arg", arg: 2, scope: !10676, file: !2827, line: 222, type: !102)
!10682 = !DILocation(line: 0, scope: !10676)
!10683 = !DILocation(line: 224, column: 2, scope: !10676)
!10684 = distinct !DISubprogram(name: "coredump_cmd", scope: !2827, file: !2827, line: 227, type: !10685, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2823, retainedNodes: !10687)
!10685 = !DISubroutineType(types: !10686)
!10686 = !{!103, !2833, !102}
!10687 = !{!10688, !10689}
!10688 = !DILocalVariable(name: "query_id", arg: 1, scope: !10684, file: !2827, line: 227, type: !2833)
!10689 = !DILocalVariable(name: "arg", arg: 2, scope: !10684, file: !2827, line: 227, type: !102)
!10690 = !DILocation(line: 0, scope: !10684)
!10691 = !DILocation(line: 229, column: 2, scope: !10684)
!10692 = distinct !DISubprogram(name: "arch_system_halt", scope: !10693, file: !10693, line: 23, type: !4672, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2823, retainedNodes: !10694)
!10693 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10694 = !{!10695}
!10695 = !DILocalVariable(name: "reason", arg: 1, scope: !10692, file: !10693, line: 23, type: !32)
!10696 = !DILocation(line: 0, scope: !10692)
!10697 = !DILocation(line: 55, column: 2, scope: !10698, inlinedAt: !10702)
!10698 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4661, file: !4661, line: 42, type: !4662, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2823, retainedNodes: !10699)
!10699 = !{!10700, !10701}
!10700 = !DILocalVariable(name: "key", scope: !10698, file: !4661, line: 44, type: !32)
!10701 = !DILocalVariable(name: "tmp", scope: !10698, file: !4661, line: 53, type: !32)
!10702 = distinct !DILocation(line: 31, column: 8, scope: !10692)
!10703 = !{i64 2223891}
!10704 = !DILocation(line: 0, scope: !10698, inlinedAt: !10702)
!10705 = !DILocation(line: 32, column: 2, scope: !10692)
!10706 = !DILocation(line: 32, column: 2, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10708, file: !10693, line: 32, column: 2)
!10708 = distinct !DILexicalBlock(scope: !10692, file: !10693, line: 32, column: 2)
!10709 = distinct !{!10709, !10710, !10711}
!10710 = !DILocation(line: 32, column: 2, scope: !10708)
!10711 = !DILocation(line: 34, column: 2, scope: !10708)
!10712 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !10693, file: !10693, line: 39, type: !10713, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2823, retainedNodes: !10715)
!10713 = !DISubroutineType(types: !10714)
!10714 = !{null, !32, !10510}
!10715 = !{!10716, !10717}
!10716 = !DILocalVariable(name: "reason", arg: 1, scope: !10712, file: !10693, line: 39, type: !32)
!10717 = !DILocalVariable(name: "esf", arg: 2, scope: !10712, file: !10693, line: 40, type: !10510)
!10718 = !DILocation(line: 0, scope: !10712)
!10719 = !DILocation(line: 46, column: 2, scope: !10712)
!10720 = distinct !DISubprogram(name: "k_fatal_halt", scope: !10693, file: !10693, line: 81, type: !4672, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2823, retainedNodes: !10721)
!10721 = !{!10722}
!10722 = !DILocalVariable(name: "reason", arg: 1, scope: !10720, file: !10693, line: 81, type: !32)
!10723 = !DILocation(line: 0, scope: !10720)
!10724 = !DILocation(line: 83, column: 2, scope: !10720)
!10725 = distinct !DISubprogram(name: "z_fatal_error", scope: !10693, file: !10693, line: 96, type: !10713, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2823, retainedNodes: !10726)
!10726 = !{!10727, !10728, !10729, !10730}
!10727 = !DILocalVariable(name: "reason", arg: 1, scope: !10725, file: !10693, line: 96, type: !32)
!10728 = !DILocalVariable(name: "esf", arg: 2, scope: !10725, file: !10693, line: 96, type: !10510)
!10729 = !DILocalVariable(name: "key", scope: !10725, file: !10693, line: 102, type: !32)
!10730 = !DILocalVariable(name: "thread", scope: !10725, file: !10693, line: 103, type: !10554)
!10731 = !DILocation(line: 0, scope: !10725)
!10732 = !DILocation(line: 55, column: 2, scope: !10698, inlinedAt: !10733)
!10733 = distinct !DILocation(line: 102, column: 21, scope: !10725)
!10734 = !DILocation(line: 0, scope: !10698, inlinedAt: !10733)
!10735 = !DILocation(line: 119, column: 11, scope: !10736)
!10736 = distinct !DILexicalBlock(scope: !10725, file: !10693, line: 119, column: 6)
!10737 = !DILocation(line: 119, column: 20, scope: !10736)
!10738 = !DILocation(line: 131, column: 2, scope: !10725)
!10739 = !DILocation(line: 151, column: 7, scope: !10740)
!10740 = distinct !DILexicalBlock(scope: !10741, file: !10693, line: 146, column: 32)
!10741 = distinct !DILexicalBlock(scope: !10725, file: !10693, line: 146, column: 6)
!10742 = !DILocation(line: 151, column: 21, scope: !10743)
!10743 = distinct !DILexicalBlock(scope: !10740, file: !10693, line: 151, column: 7)
!10744 = !DILocation(line: 104, column: 4, scope: !10725)
!10745 = !DILocalVariable(name: "key", arg: 1, scope: !10746, file: !4661, line: 84, type: !32)
!10746 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4661, file: !4661, line: 84, type: !4672, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2823, retainedNodes: !10747)
!10747 = !{!10745}
!10748 = !DILocation(line: 0, scope: !10746, inlinedAt: !10749)
!10749 = distinct !DILocation(line: 186, column: 2, scope: !10725)
!10750 = !DILocation(line: 95, column: 2, scope: !10746, inlinedAt: !10749)
!10751 = !{i64 2224708}
!10752 = !DILocation(line: 189, column: 3, scope: !10753)
!10753 = distinct !DILexicalBlock(scope: !10754, file: !10693, line: 188, column: 41)
!10754 = distinct !DILexicalBlock(scope: !10725, file: !10693, line: 188, column: 6)
!10755 = !DILocation(line: 191, column: 1, scope: !10725)
!10756 = distinct !DISubprogram(name: "k_current_get", scope: !459, file: !459, line: 530, type: !10757, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2823, retainedNodes: !474)
!10757 = !DISubroutineType(types: !10758)
!10758 = !{!10759}
!10759 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !363, line: 347, baseType: !10554)
!10760 = !DILocation(line: 535, column: 9, scope: !10756)
!10761 = !DILocation(line: 535, column: 2, scope: !10756)
!10762 = distinct !DISubprogram(name: "k_thread_abort", scope: !3288, file: !3288, line: 188, type: !10763, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2823, retainedNodes: !10765)
!10763 = !DISubroutineType(types: !10764)
!10764 = !{null, !10759}
!10765 = !{!10766}
!10766 = !DILocalVariable(name: "thread", arg: 1, scope: !10762, file: !3288, line: 188, type: !10759)
!10767 = !DILocation(line: 0, scope: !10762)
!10768 = !DILocation(line: 197, column: 2, scope: !10769)
!10769 = distinct !DILexicalBlock(scope: !10762, file: !3288, line: 197, column: 2)
!10770 = !{i64 2154841653}
!10771 = !DILocation(line: 198, column: 2, scope: !10762)
!10772 = !DILocation(line: 199, column: 1, scope: !10762)
!10773 = distinct !DISubprogram(name: "z_current_get", scope: !3288, file: !3288, line: 173, type: !10757, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2823, retainedNodes: !474)
!10774 = !DILocation(line: 180, column: 2, scope: !10775)
!10775 = distinct !DILexicalBlock(scope: !10773, file: !3288, line: 180, column: 2)
!10776 = !{i64 2154841585}
!10777 = !DILocation(line: 181, column: 9, scope: !10773)
!10778 = !DILocation(line: 181, column: 2, scope: !10773)
!10779 = distinct !DISubprogram(name: "z_early_memset", scope: !1752, file: !1752, line: 108, type: !10780, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !10782)
!10780 = !DISubroutineType(types: !10781)
!10781 = !{null, !102, !103, !352}
!10782 = !{!10783, !10784, !10785}
!10783 = !DILocalVariable(name: "dst", arg: 1, scope: !10779, file: !1752, line: 108, type: !102)
!10784 = !DILocalVariable(name: "c", arg: 2, scope: !10779, file: !1752, line: 108, type: !103)
!10785 = !DILocalVariable(name: "n", arg: 3, scope: !10779, file: !1752, line: 108, type: !352)
!10786 = !DILocation(line: 0, scope: !10779)
!10787 = !DILocation(line: 110, column: 9, scope: !10779)
!10788 = !DILocation(line: 111, column: 1, scope: !10779)
!10789 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1752, file: !1752, line: 121, type: !10790, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !10792)
!10790 = !DISubroutineType(types: !10791)
!10791 = !{null, !102, !13, !352}
!10792 = !{!10793, !10794, !10795}
!10793 = !DILocalVariable(name: "dst", arg: 1, scope: !10789, file: !1752, line: 121, type: !102)
!10794 = !DILocalVariable(name: "src", arg: 2, scope: !10789, file: !1752, line: 121, type: !13)
!10795 = !DILocalVariable(name: "n", arg: 3, scope: !10789, file: !1752, line: 121, type: !352)
!10796 = !DILocation(line: 0, scope: !10789)
!10797 = !DILocation(line: 123, column: 9, scope: !10789)
!10798 = !DILocation(line: 124, column: 1, scope: !10789)
!10799 = distinct !DISubprogram(name: "z_bss_zero", scope: !1752, file: !1752, line: 132, type: !2860, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !474)
!10800 = !DILocation(line: 143, column: 2, scope: !10799)
!10801 = !DILocation(line: 145, column: 2, scope: !10799)
!10802 = !DILocation(line: 168, column: 1, scope: !10799)
!10803 = distinct !DISubprogram(name: "z_init_cpu", scope: !1752, file: !1752, line: 372, type: !6553, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !10804)
!10804 = !{!10805}
!10805 = !DILocalVariable(name: "id", arg: 1, scope: !10803, file: !1752, line: 372, type: !103)
!10806 = !DILocation(line: 0, scope: !10803)
!10807 = !DILocation(line: 374, column: 2, scope: !10803)
!10808 = !DILocation(line: 375, column: 34, scope: !10803)
!10809 = !DILocation(line: 375, column: 19, scope: !10803)
!10810 = !DILocation(line: 375, column: 31, scope: !10803)
!10811 = !DILocation(line: 376, column: 24, scope: !10803)
!10812 = !DILocation(line: 376, column: 19, scope: !10803)
!10813 = !DILocation(line: 376, column: 22, scope: !10803)
!10814 = !DILocation(line: 378, column: 26, scope: !10803)
!10815 = !DILocation(line: 378, column: 4, scope: !10803)
!10816 = !DILocation(line: 378, column: 50, scope: !10803)
!10817 = !DILocation(line: 377, column: 19, scope: !10803)
!10818 = !DILocation(line: 377, column: 29, scope: !10803)
!10819 = !DILocation(line: 384, column: 1, scope: !10803)
!10820 = distinct !DISubprogram(name: "init_idle_thread", scope: !1752, file: !1752, line: 343, type: !6553, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !10821)
!10821 = !{!10822, !10823, !10824, !10827}
!10822 = !DILocalVariable(name: "i", arg: 1, scope: !10820, file: !1752, line: 343, type: !103)
!10823 = !DILocalVariable(name: "thread", scope: !10820, file: !1752, line: 345, type: !1845)
!10824 = !DILocalVariable(name: "stack", scope: !10820, file: !1752, line: 346, type: !10825)
!10825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10826, size: 32)
!10826 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3167, line: 44, baseType: !1959)
!10827 = !DILocalVariable(name: "tname", scope: !10820, file: !1752, line: 358, type: !1081)
!10828 = !DILocation(line: 0, scope: !10820)
!10829 = !DILocation(line: 345, column: 29, scope: !10820)
!10830 = !DILocation(line: 346, column: 28, scope: !10820)
!10831 = !DILocation(line: 362, column: 37, scope: !10820)
!10832 = !DILocation(line: 362, column: 36, scope: !10820)
!10833 = !DILocation(line: 361, column: 2, scope: !10820)
!10834 = !DILocation(line: 365, column: 2, scope: !10820)
!10835 = !DILocation(line: 370, column: 1, scope: !10820)
!10836 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1960, file: !1960, line: 331, type: !10837, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !10839)
!10837 = !DISubroutineType(types: !10838)
!10838 = !{!1081, !10825}
!10839 = !{!10840}
!10840 = !DILocalVariable(name: "sym", arg: 1, scope: !10836, file: !1960, line: 331, type: !10825)
!10841 = !DILocation(line: 0, scope: !10836)
!10842 = !DILocation(line: 333, column: 21, scope: !10836)
!10843 = !DILocation(line: 333, column: 2, scope: !10836)
!10844 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !10845, file: !10845, line: 155, type: !10846, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !10848)
!10845 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10846 = !DISubroutineType(types: !10847)
!10847 = !{null, !1845}
!10848 = !{!10849}
!10849 = !DILocalVariable(name: "thread", arg: 1, scope: !10844, file: !10845, line: 155, type: !1845)
!10850 = !DILocation(line: 0, scope: !10844)
!10851 = !DILocation(line: 157, column: 15, scope: !10844)
!10852 = !DILocation(line: 157, column: 28, scope: !10844)
!10853 = !DILocation(line: 158, column: 1, scope: !10844)
!10854 = distinct !DISubprogram(name: "z_cstart", scope: !1752, file: !1752, line: 501, type: !2860, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !10855)
!10855 = !{!10856}
!10856 = !DILocalVariable(name: "dummy_thread", scope: !10854, file: !1752, line: 518, type: !1846)
!10857 = !DILocation(line: 507, column: 2, scope: !10854)
!10858 = !DILocation(line: 43, column: 14, scope: !10859, inlinedAt: !10863)
!10859 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !10860, file: !10860, line: 40, type: !2860, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !10861)
!10860 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10861 = !{!10862}
!10862 = !DILocalVariable(name: "msp", scope: !10859, file: !10860, line: 42, type: !106)
!10863 = distinct !DILocation(line: 44, column: 2, scope: !10864, inlinedAt: !10866)
!10864 = distinct !DISubprogram(name: "arch_kernel_init", scope: !10865, file: !10865, line: 42, type: !2860, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !474)
!10865 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10866 = distinct !DILocation(line: 510, column: 2, scope: !10854)
!10867 = !DILocation(line: 43, column: 3, scope: !10859, inlinedAt: !10863)
!10868 = !DILocation(line: 43, column: 60, scope: !10859, inlinedAt: !10863)
!10869 = !DILocation(line: 0, scope: !10859, inlinedAt: !10863)
!10870 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !10871, file: !4910, line: 1153, type: !106)
!10871 = distinct !DISubprogram(name: "__set_MSP", scope: !4910, file: !4910, line: 1153, type: !4999, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !10872)
!10872 = !{!10870}
!10873 = !DILocation(line: 0, scope: !10871, inlinedAt: !10874)
!10874 = distinct !DILocation(line: 46, column: 2, scope: !10859, inlinedAt: !10863)
!10875 = !DILocation(line: 1155, column: 3, scope: !10871, inlinedAt: !10874)
!10876 = !{i64 3561009}
!10877 = !DILocation(line: 62, column: 11, scope: !10859, inlinedAt: !10863)
!10878 = !DILocation(line: 102, column: 2, scope: !10879, inlinedAt: !10880)
!10879 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !5702, file: !5702, line: 97, type: !2860, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !474)
!10880 = distinct !DILocation(line: 45, column: 2, scope: !10864, inlinedAt: !10866)
!10881 = !DILocation(line: 108, column: 2, scope: !10879, inlinedAt: !10880)
!10882 = !DILocation(line: 112, column: 2, scope: !10879, inlinedAt: !10880)
!10883 = !DILocation(line: 113, column: 2, scope: !10879, inlinedAt: !10880)
!10884 = !DILocation(line: 114, column: 2, scope: !10879, inlinedAt: !10880)
!10885 = !DILocation(line: 116, column: 2, scope: !10879, inlinedAt: !10880)
!10886 = !DILocation(line: 123, column: 13, scope: !10879, inlinedAt: !10880)
!10887 = !DILocation(line: 46, column: 2, scope: !10864, inlinedAt: !10866)
!10888 = !DILocation(line: 47, column: 2, scope: !10864, inlinedAt: !10866)
!10889 = !DILocation(line: 174, column: 12, scope: !10890, inlinedAt: !10891)
!10890 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !5702, file: !5702, line: 169, type: !2860, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !474)
!10891 = distinct !DILocation(line: 48, column: 2, scope: !10864, inlinedAt: !10866)
!10892 = !DILocation(line: 179, column: 12, scope: !10890, inlinedAt: !10891)
!10893 = !DILocation(line: 50, column: 2, scope: !10864, inlinedAt: !10866)
!10894 = !DILocation(line: 57, column: 2, scope: !10864, inlinedAt: !10866)
!10895 = !DILocation(line: 518, column: 2, scope: !10854)
!10896 = !DILocation(line: 518, column: 18, scope: !10854)
!10897 = !DILocation(line: 520, column: 2, scope: !10854)
!10898 = !DILocation(line: 523, column: 2, scope: !10854)
!10899 = !DILocation(line: 526, column: 2, scope: !10854)
!10900 = !DILocation(line: 527, column: 2, scope: !10854)
!10901 = !DILocation(line: 543, column: 24, scope: !10854)
!10902 = !DILocation(line: 543, column: 2, scope: !10854)
!10903 = !DILocation(line: 0, scope: !1979)
!10904 = !DILocation(line: 246, column: 15, scope: !1997)
!10905 = !DILocation(line: 246, column: 36, scope: !1996)
!10906 = !DILocation(line: 246, column: 2, scope: !1997)
!10907 = !DILocation(line: 247, column: 37, scope: !1995)
!10908 = !DILocation(line: 0, scope: !1995)
!10909 = !DILocation(line: 248, column: 19, scope: !1995)
!10910 = !DILocation(line: 248, column: 12, scope: !1995)
!10911 = !DILocation(line: 250, column: 11, scope: !10912)
!10912 = distinct !DILexicalBlock(scope: !1995, file: !1752, line: 250, column: 7)
!10913 = !DILocation(line: 250, column: 7, scope: !1995)
!10914 = !DILocation(line: 254, column: 11, scope: !10915)
!10915 = distinct !DILexicalBlock(scope: !10916, file: !1752, line: 254, column: 8)
!10916 = distinct !DILexicalBlock(scope: !10912, file: !1752, line: 250, column: 20)
!10917 = !DILocation(line: 254, column: 8, scope: !10916)
!10918 = !DILocation(line: 255, column: 9, scope: !10919)
!10919 = distinct !DILexicalBlock(scope: !10915, file: !1752, line: 254, column: 17)
!10920 = !DILocation(line: 258, column: 9, scope: !10919)
!10921 = !DILocation(line: 261, column: 28, scope: !10919)
!10922 = !DILocation(line: 261, column: 10, scope: !10919)
!10923 = !DILocation(line: 261, column: 17, scope: !10919)
!10924 = !DILocation(line: 261, column: 26, scope: !10919)
!10925 = !DILocation(line: 262, column: 4, scope: !10919)
!10926 = !DILocation(line: 263, column: 9, scope: !10916)
!10927 = !DILocation(line: 263, column: 16, scope: !10916)
!10928 = !DILocation(line: 263, column: 28, scope: !10916)
!10929 = !DILocation(line: 264, column: 3, scope: !10916)
!10930 = !DILocation(line: 246, column: 60, scope: !1996)
!10931 = distinct !{!10931, !10906, !10932}
!10932 = !DILocation(line: 265, column: 2, scope: !1997)
!10933 = !DILocation(line: 266, column: 1, scope: !1979)
!10934 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !508, file: !508, line: 1814, type: !4944, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !10935)
!10935 = !{!10936, !10937}
!10936 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10934, file: !508, line: 1814, type: !762)
!10937 = !DILocalVariable(name: "priority", arg: 2, scope: !10934, file: !508, line: 1814, type: !106)
!10938 = !DILocation(line: 0, scope: !10934)
!10939 = !DILocation(line: 1822, column: 48, scope: !10940)
!10940 = distinct !DILexicalBlock(scope: !10941, file: !508, line: 1821, column: 3)
!10941 = distinct !DILexicalBlock(scope: !10934, file: !508, line: 1816, column: 7)
!10942 = !DILocation(line: 1822, column: 32, scope: !10940)
!10943 = !DILocation(line: 1822, column: 40, scope: !10940)
!10944 = !DILocation(line: 1822, column: 5, scope: !10940)
!10945 = !DILocation(line: 1822, column: 46, scope: !10940)
!10946 = !DILocation(line: 1824, column: 1, scope: !10934)
!10947 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !10865, file: !10865, line: 32, type: !2860, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !474)
!10948 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !10949, file: !10949, line: 215, type: !10846, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !10950)
!10949 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10950 = !{!10951}
!10951 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !10948, file: !10949, line: 215, type: !1845)
!10952 = !DILocation(line: 0, scope: !10948)
!10953 = !DILocation(line: 217, column: 21, scope: !10948)
!10954 = !DILocation(line: 217, column: 34, scope: !10948)
!10955 = !DILocation(line: 221, column: 21, scope: !10948)
!10956 = !DILocation(line: 221, column: 34, scope: !10948)
!10957 = !DILocation(line: 223, column: 27, scope: !10948)
!10958 = !DILocation(line: 223, column: 33, scope: !10948)
!10959 = !DILocation(line: 224, column: 27, scope: !10948)
!10960 = !DILocation(line: 224, column: 32, scope: !10948)
!10961 = !DILocation(line: 232, column: 16, scope: !10948)
!10962 = !DILocation(line: 232, column: 30, scope: !10948)
!10963 = !DILocation(line: 239, column: 24, scope: !10948)
!10964 = !DILocation(line: 240, column: 1, scope: !10948)
!10965 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1752, file: !1752, line: 399, type: !10966, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !10968)
!10966 = !DISubroutineType(types: !10967)
!10967 = !{!1081}
!10968 = !{!10969}
!10969 = !DILocalVariable(name: "stack_ptr", scope: !10965, file: !1752, line: 401, type: !1081)
!10970 = !DILocation(line: 404, column: 2, scope: !10965)
!10971 = !DILocation(line: 416, column: 24, scope: !10965)
!10972 = !DILocation(line: 418, column: 14, scope: !10965)
!10973 = !DILocation(line: 0, scope: !10965)
!10974 = !DILocation(line: 423, column: 2, scope: !10965)
!10975 = !DILocation(line: 424, column: 2, scope: !10965)
!10976 = !DILocation(line: 426, column: 2, scope: !10965)
!10977 = !DILocation(line: 428, column: 2, scope: !10965)
!10978 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1752, file: !1752, line: 432, type: !10979, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !10981)
!10979 = !DISubroutineType(types: !10980)
!10980 = !{null, !1081}
!10981 = !{!10982}
!10982 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !10978, file: !1752, line: 432, type: !1081)
!10983 = !DILocation(line: 0, scope: !10978)
!10984 = !DILocation(line: 435, column: 2, scope: !10978)
!10985 = !DILocation(line: 445, column: 2, scope: !10978)
!10986 = distinct !DISubprogram(name: "bg_thread_main", scope: !1752, file: !1752, line: 277, type: !3169, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !10987)
!10987 = !{!10988, !10989, !10990}
!10988 = !DILocalVariable(name: "unused1", arg: 1, scope: !10986, file: !1752, line: 277, type: !102)
!10989 = !DILocalVariable(name: "unused2", arg: 2, scope: !10986, file: !1752, line: 277, type: !102)
!10990 = !DILocalVariable(name: "unused3", arg: 3, scope: !10986, file: !1752, line: 277, type: !102)
!10991 = !DILocation(line: 0, scope: !10986)
!10992 = !DILocation(line: 291, column: 20, scope: !10986)
!10993 = !DILocation(line: 293, column: 2, scope: !10986)
!10994 = !DILocation(line: 297, column: 2, scope: !10986)
!10995 = !DILocation(line: 305, column: 2, scope: !10986)
!10996 = !DILocation(line: 307, column: 2, scope: !10986)
!10997 = !DILocation(line: 330, column: 8, scope: !10986)
!10998 = !DILocation(line: 333, column: 34, scope: !10986)
!10999 = !DILocation(line: 339, column: 1, scope: !10986)
!11000 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2006, file: !2006, line: 45, type: !11001, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11009)
!11001 = !DISubroutineType(types: !11002)
!11002 = !{null, !11003, !102}
!11003 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !459, line: 103, baseType: !11004)
!11004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11005, size: 32)
!11005 = !DISubroutineType(types: !11006)
!11006 = !{null, !11007, !102}
!11007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11008, size: 32)
!11008 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2011)
!11009 = !{!11010, !11011}
!11010 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11000, file: !2006, line: 45, type: !11003)
!11011 = !DILocalVariable(name: "user_data", arg: 2, scope: !11000, file: !2006, line: 45, type: !102)
!11012 = !DILocation(line: 0, scope: !11000)
!11013 = !DILocation(line: 71, column: 1, scope: !11000)
!11014 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2006, file: !2006, line: 73, type: !11001, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11015)
!11015 = !{!11016, !11017}
!11016 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11014, file: !2006, line: 73, type: !11003)
!11017 = !DILocalVariable(name: "user_data", arg: 2, scope: !11014, file: !2006, line: 73, type: !102)
!11018 = !DILocation(line: 0, scope: !11014)
!11019 = !DILocation(line: 95, column: 1, scope: !11014)
!11020 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2006, file: !2006, line: 97, type: !5703, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !474)
!11021 = !DILocation(line: 1031, column: 3, scope: !11022, inlinedAt: !11025)
!11022 = distinct !DISubprogram(name: "__get_IPSR", scope: !4910, file: !4910, line: 1027, type: !4745, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11023)
!11023 = !{!11024}
!11024 = !DILocalVariable(name: "result", scope: !11022, file: !4910, line: 1029, type: !106)
!11025 = distinct !DILocation(line: 48, column: 10, scope: !11026, inlinedAt: !11027)
!11026 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !5702, file: !5702, line: 46, type: !5703, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !474)
!11027 = distinct !DILocation(line: 99, column: 9, scope: !11020)
!11028 = !{i64 3566660}
!11029 = !DILocation(line: 0, scope: !11022, inlinedAt: !11025)
!11030 = !DILocation(line: 48, column: 9, scope: !11026, inlinedAt: !11027)
!11031 = !DILocation(line: 99, column: 2, scope: !11020)
!11032 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2006, file: !2006, line: 106, type: !2860, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !474)
!11033 = !DILocation(line: 108, column: 2, scope: !11032)
!11034 = !DILocation(line: 108, column: 17, scope: !11032)
!11035 = !DILocation(line: 108, column: 30, scope: !11032)
!11036 = !DILocation(line: 109, column: 1, scope: !11032)
!11037 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2006, file: !2006, line: 116, type: !2860, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !474)
!11038 = !DILocation(line: 118, column: 2, scope: !11037)
!11039 = !DILocation(line: 118, column: 17, scope: !11037)
!11040 = !DILocation(line: 118, column: 30, scope: !11037)
!11041 = !DILocation(line: 119, column: 1, scope: !11037)
!11042 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2006, file: !2006, line: 126, type: !5703, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !474)
!11043 = !DILocation(line: 128, column: 10, scope: !11042)
!11044 = !DILocation(line: 128, column: 25, scope: !11042)
!11045 = !DILocation(line: 128, column: 38, scope: !11042)
!11046 = !DILocation(line: 128, column: 53, scope: !11042)
!11047 = !DILocation(line: 128, column: 2, scope: !11042)
!11048 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2006, file: !2006, line: 187, type: !11049, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11051)
!11049 = !DISubroutineType(types: !11050)
!11050 = !{!103, !2010, !150}
!11051 = !{!11052, !11053}
!11052 = !DILocalVariable(name: "thread", arg: 1, scope: !11048, file: !2006, line: 187, type: !2010)
!11053 = !DILocalVariable(name: "value", arg: 2, scope: !11048, file: !2006, line: 187, type: !150)
!11054 = !DILocation(line: 0, scope: !11048)
!11055 = !DILocation(line: 206, column: 2, scope: !11048)
!11056 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2006, file: !2006, line: 238, type: !11057, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11059)
!11057 = !DISubroutineType(types: !11058)
!11058 = !{!150, !2010}
!11059 = !{!11060}
!11060 = !DILocalVariable(name: "thread", arg: 1, scope: !11056, file: !2006, line: 238, type: !2010)
!11061 = !DILocation(line: 0, scope: !11056)
!11062 = !DILocation(line: 244, column: 2, scope: !11056)
!11063 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2006, file: !2006, line: 248, type: !11064, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11066)
!11064 = !DISubroutineType(types: !11065)
!11065 = !{!103, !2009, !1081, !352}
!11066 = !{!11067, !11068, !11069}
!11067 = !DILocalVariable(name: "thread", arg: 1, scope: !11063, file: !2006, line: 248, type: !2009)
!11068 = !DILocalVariable(name: "buf", arg: 2, scope: !11063, file: !2006, line: 248, type: !1081)
!11069 = !DILocalVariable(name: "size", arg: 3, scope: !11063, file: !2006, line: 248, type: !352)
!11070 = !DILocation(line: 0, scope: !11063)
!11071 = !DILocation(line: 257, column: 2, scope: !11063)
!11072 = !DILocation(line: 0, scope: !2005)
!11073 = !DILocation(line: 281, column: 11, scope: !11074)
!11074 = distinct !DILexicalBlock(scope: !2005, file: !2006, line: 281, column: 6)
!11075 = !DILocation(line: 281, column: 20, scope: !11074)
!11076 = !DILocation(line: 275, column: 45, scope: !2005)
!11077 = !DILocation(line: 285, column: 10, scope: !2005)
!11078 = !DILocation(line: 0, scope: !2126)
!11079 = !DILocation(line: 293, column: 39, scope: !11080)
!11080 = distinct !DILexicalBlock(scope: !2126, file: !2006, line: 293, column: 2)
!11081 = !DILocation(line: 293, column: 2, scope: !2126)
!11082 = !DILocation(line: 273, column: 14, scope: !2005)
!11083 = !DILocation(line: 309, column: 2, scope: !2005)
!11084 = !DILocation(line: 309, column: 11, scope: !2005)
!11085 = !DILocation(line: 311, column: 2, scope: !2005)
!11086 = !DILocation(line: 293, column: 26, scope: !11080)
!11087 = !DILocation(line: 294, column: 9, scope: !11088)
!11088 = distinct !DILexicalBlock(scope: !11080, file: !2006, line: 293, column: 54)
!11089 = !DILocation(line: 295, column: 21, scope: !11090)
!11090 = distinct !DILexicalBlock(scope: !11088, file: !2006, line: 295, column: 7)
!11091 = !DILocation(line: 295, column: 28, scope: !11090)
!11092 = !DILocation(line: 295, column: 7, scope: !11088)
!11093 = !DILocation(line: 299, column: 25, scope: !11088)
!11094 = !DILocation(line: 299, column: 41, scope: !11088)
!11095 = !DILocation(line: 300, column: 7, scope: !11088)
!11096 = !DILocation(line: 300, column: 26, scope: !11088)
!11097 = !DILocation(line: 299, column: 10, scope: !11088)
!11098 = !DILocation(line: 299, column: 7, scope: !11088)
!11099 = !DILocation(line: 302, column: 16, scope: !11088)
!11100 = !DILocation(line: 304, column: 20, scope: !11101)
!11101 = distinct !DILexicalBlock(scope: !11088, file: !2006, line: 304, column: 7)
!11102 = !DILocation(line: 304, column: 7, scope: !11088)
!11103 = !DILocation(line: 305, column: 26, scope: !11104)
!11104 = distinct !DILexicalBlock(scope: !11101, file: !2006, line: 304, column: 26)
!11105 = !DILocation(line: 305, column: 42, scope: !11104)
!11106 = !DILocation(line: 305, column: 11, scope: !11104)
!11107 = !DILocation(line: 305, column: 8, scope: !11104)
!11108 = !DILocation(line: 306, column: 3, scope: !11104)
!11109 = !DILocation(line: 293, column: 50, scope: !11080)
!11110 = !DILocation(line: 312, column: 1, scope: !2005)
!11111 = distinct !DISubprogram(name: "copy_bytes", scope: !2006, file: !2006, line: 261, type: !11112, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11114)
!11112 = !DISubroutineType(types: !11113)
!11113 = !{!352, !1081, !352, !150, !352}
!11114 = !{!11115, !11116, !11117, !11118, !11119}
!11115 = !DILocalVariable(name: "dest", arg: 1, scope: !11111, file: !2006, line: 261, type: !1081)
!11116 = !DILocalVariable(name: "dest_size", arg: 2, scope: !11111, file: !2006, line: 261, type: !352)
!11117 = !DILocalVariable(name: "src", arg: 3, scope: !11111, file: !2006, line: 261, type: !150)
!11118 = !DILocalVariable(name: "src_size", arg: 4, scope: !11111, file: !2006, line: 261, type: !352)
!11119 = !DILocalVariable(name: "bytes_to_copy", scope: !11111, file: !2006, line: 263, type: !352)
!11120 = !DILocation(line: 0, scope: !11111)
!11121 = !DILocation(line: 265, column: 18, scope: !11111)
!11122 = !DILocation(line: 266, column: 2, scope: !11111)
!11123 = !DILocation(line: 268, column: 2, scope: !11111)
!11124 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2006, file: !2006, line: 383, type: !11125, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11127)
!11125 = !DISubroutineType(types: !11126)
!11126 = !{null, !2010}
!11127 = !{!11128}
!11128 = !DILocalVariable(name: "thread", arg: 1, scope: !11124, file: !2006, line: 383, type: !2010)
!11129 = !DILocation(line: 0, scope: !11124)
!11130 = !DILocation(line: 387, column: 2, scope: !11124)
!11131 = !DILocation(line: 388, column: 1, scope: !11124)
!11132 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2006, file: !2006, line: 528, type: !11133, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11140)
!11133 = !DISubroutineType(types: !11134)
!11134 = !{!1081, !2010, !11135, !352, !3166, !102, !102, !102, !103, !106, !150}
!11135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11136, size: 32)
!11136 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3167, line: 44, baseType: !11137)
!11137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1960, line: 47, size: 8, elements: !11138)
!11138 = !{!11139}
!11139 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11137, file: !1960, line: 48, baseType: !152, size: 8)
!11140 = !{!11141, !11142, !11143, !11144, !11145, !11146, !11147, !11148, !11149, !11150, !11151}
!11141 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11132, file: !2006, line: 528, type: !2010)
!11142 = !DILocalVariable(name: "stack", arg: 2, scope: !11132, file: !2006, line: 529, type: !11135)
!11143 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11132, file: !2006, line: 529, type: !352)
!11144 = !DILocalVariable(name: "entry", arg: 4, scope: !11132, file: !2006, line: 530, type: !3166)
!11145 = !DILocalVariable(name: "p1", arg: 5, scope: !11132, file: !2006, line: 531, type: !102)
!11146 = !DILocalVariable(name: "p2", arg: 6, scope: !11132, file: !2006, line: 531, type: !102)
!11147 = !DILocalVariable(name: "p3", arg: 7, scope: !11132, file: !2006, line: 531, type: !102)
!11148 = !DILocalVariable(name: "prio", arg: 8, scope: !11132, file: !2006, line: 532, type: !103)
!11149 = !DILocalVariable(name: "options", arg: 9, scope: !11132, file: !2006, line: 532, type: !106)
!11150 = !DILocalVariable(name: "name", arg: 10, scope: !11132, file: !2006, line: 532, type: !150)
!11151 = !DILocalVariable(name: "stack_ptr", scope: !11132, file: !2006, line: 534, type: !1081)
!11152 = !DILocation(line: 0, scope: !11132)
!11153 = !DILocation(line: 550, column: 28, scope: !11132)
!11154 = !DILocation(line: 550, column: 2, scope: !11132)
!11155 = !DILocation(line: 553, column: 34, scope: !11132)
!11156 = !DILocation(line: 553, column: 2, scope: !11132)
!11157 = !DILocation(line: 554, column: 14, scope: !11132)
!11158 = !DILocation(line: 564, column: 2, scope: !11132)
!11159 = !DILocation(line: 567, column: 14, scope: !11132)
!11160 = !DILocation(line: 567, column: 24, scope: !11132)
!11161 = !DILocation(line: 612, column: 7, scope: !11162)
!11162 = distinct !DILexicalBlock(scope: !11132, file: !2006, line: 612, column: 6)
!11163 = !DILocation(line: 612, column: 6, scope: !11132)
!11164 = !DILocation(line: 627, column: 40, scope: !11132)
!11165 = !DILocation(line: 637, column: 2, scope: !11132)
!11166 = !DILocation(line: 613, column: 15, scope: !11167)
!11167 = distinct !DILexicalBlock(scope: !11162, file: !2006, line: 612, column: 17)
!11168 = !DILocation(line: 613, column: 29, scope: !11167)
!11169 = !DILocation(line: 638, column: 1, scope: !11132)
!11170 = distinct !DISubprogram(name: "z_waitq_init", scope: !11171, file: !11171, line: 47, type: !11172, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11174)
!11171 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11172 = !DISubroutineType(types: !11173)
!11173 = !{null, !2041}
!11174 = !{!11175}
!11175 = !DILocalVariable(name: "w", arg: 1, scope: !11170, file: !11171, line: 47, type: !2041)
!11176 = !DILocation(line: 0, scope: !11170)
!11177 = !DILocation(line: 49, column: 21, scope: !11170)
!11178 = !DILocation(line: 49, column: 2, scope: !11170)
!11179 = !DILocation(line: 50, column: 1, scope: !11170)
!11180 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2006, file: !2006, line: 791, type: !11181, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11184)
!11181 = !DISubroutineType(types: !11182)
!11182 = !{null, !11183, !103, !106, !32}
!11183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 32)
!11184 = !{!11185, !11186, !11187, !11188}
!11185 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11180, file: !2006, line: 791, type: !11183)
!11186 = !DILocalVariable(name: "priority", arg: 2, scope: !11180, file: !2006, line: 791, type: !103)
!11187 = !DILocalVariable(name: "initial_state", arg: 3, scope: !11180, file: !2006, line: 792, type: !106)
!11188 = !DILocalVariable(name: "options", arg: 4, scope: !11180, file: !2006, line: 792, type: !32)
!11189 = !DILocation(line: 0, scope: !11180)
!11190 = !DILocation(line: 795, column: 15, scope: !11180)
!11191 = !DILocation(line: 795, column: 25, scope: !11180)
!11192 = !DILocation(line: 796, column: 30, scope: !11180)
!11193 = !DILocation(line: 796, column: 15, scope: !11180)
!11194 = !DILocation(line: 796, column: 28, scope: !11180)
!11195 = !DILocation(line: 797, column: 30, scope: !11180)
!11196 = !DILocation(line: 797, column: 15, scope: !11180)
!11197 = !DILocation(line: 797, column: 28, scope: !11180)
!11198 = !DILocation(line: 799, column: 22, scope: !11180)
!11199 = !DILocation(line: 799, column: 15, scope: !11180)
!11200 = !DILocation(line: 799, column: 20, scope: !11180)
!11201 = !DILocation(line: 801, column: 15, scope: !11180)
!11202 = !DILocation(line: 801, column: 28, scope: !11180)
!11203 = !DILocation(line: 814, column: 2, scope: !11180)
!11204 = !DILocation(line: 815, column: 1, scope: !11180)
!11205 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2006, file: !2006, line: 449, type: !11206, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11208)
!11206 = !DISubroutineType(types: !11207)
!11207 = !{!1081, !2010, !11135, !352}
!11208 = !{!11209, !11210, !11211, !11212, !11213, !11214, !11215, !11216}
!11209 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11205, file: !2006, line: 449, type: !2010)
!11210 = !DILocalVariable(name: "stack", arg: 2, scope: !11205, file: !2006, line: 450, type: !11135)
!11211 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11205, file: !2006, line: 450, type: !352)
!11212 = !DILocalVariable(name: "stack_obj_size", scope: !11205, file: !2006, line: 452, type: !352)
!11213 = !DILocalVariable(name: "stack_buf_size", scope: !11205, file: !2006, line: 452, type: !352)
!11214 = !DILocalVariable(name: "stack_ptr", scope: !11205, file: !2006, line: 453, type: !1081)
!11215 = !DILocalVariable(name: "stack_buf_start", scope: !11205, file: !2006, line: 453, type: !1081)
!11216 = !DILocalVariable(name: "delta", scope: !11205, file: !2006, line: 454, type: !352)
!11217 = !DILocation(line: 0, scope: !11205)
!11218 = !DILocation(line: 465, column: 20, scope: !11219)
!11219 = distinct !DILexicalBlock(scope: !11205, file: !2006, line: 463, column: 2)
!11220 = !DILocation(line: 466, column: 21, scope: !11219)
!11221 = !DILocation(line: 473, column: 28, scope: !11205)
!11222 = !DILocation(line: 514, column: 33, scope: !11205)
!11223 = !DILocation(line: 514, column: 25, scope: !11205)
!11224 = !DILocation(line: 514, column: 31, scope: !11205)
!11225 = !DILocation(line: 515, column: 25, scope: !11205)
!11226 = !DILocation(line: 515, column: 30, scope: !11205)
!11227 = !DILocation(line: 516, column: 25, scope: !11205)
!11228 = !DILocation(line: 516, column: 31, scope: !11205)
!11229 = !DILocation(line: 520, column: 2, scope: !11205)
!11230 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1960, file: !1960, line: 331, type: !11231, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11233)
!11231 = !DISubroutineType(types: !11232)
!11232 = !{!1081, !11135}
!11233 = !{!11234}
!11234 = !DILocalVariable(name: "sym", arg: 1, scope: !11230, file: !1960, line: 331, type: !11135)
!11235 = !DILocation(line: 0, scope: !11230)
!11236 = !DILocation(line: 333, column: 21, scope: !11230)
!11237 = !DILocation(line: 333, column: 2, scope: !11230)
!11238 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !11239, file: !11239, line: 40, type: !11240, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11242)
!11239 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11240 = !DISubroutineType(types: !11241)
!11241 = !{null, !11183}
!11242 = !{!11243}
!11243 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11238, file: !11239, line: 40, type: !11183)
!11244 = !DILocation(line: 0, scope: !11238)
!11245 = !DILocation(line: 42, column: 31, scope: !11238)
!11246 = !DILocation(line: 42, column: 2, scope: !11238)
!11247 = !DILocation(line: 43, column: 1, scope: !11238)
!11248 = distinct !DISubprogram(name: "z_init_timeout", scope: !11239, file: !11239, line: 25, type: !2067, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11249)
!11249 = !{!11250}
!11250 = !DILocalVariable(name: "to", arg: 1, scope: !11248, file: !11239, line: 25, type: !2069)
!11251 = !DILocation(line: 0, scope: !11248)
!11252 = !DILocation(line: 27, column: 22, scope: !11248)
!11253 = !DILocation(line: 27, column: 2, scope: !11248)
!11254 = !DILocation(line: 28, column: 1, scope: !11248)
!11255 = distinct !DISubprogram(name: "sys_dnode_init", scope: !373, file: !373, line: 211, type: !11256, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11258)
!11256 = !DISubroutineType(types: !11257)
!11257 = !{null, !2113}
!11258 = !{!11259}
!11259 = !DILocalVariable(name: "node", arg: 1, scope: !11255, file: !373, line: 211, type: !2113)
!11260 = !DILocation(line: 0, scope: !11255)
!11261 = !DILocation(line: 213, column: 8, scope: !11255)
!11262 = !DILocation(line: 213, column: 13, scope: !11255)
!11263 = !DILocation(line: 214, column: 8, scope: !11255)
!11264 = !DILocation(line: 214, column: 13, scope: !11255)
!11265 = !DILocation(line: 215, column: 1, scope: !11255)
!11266 = distinct !DISubprogram(name: "sys_dlist_init", scope: !373, file: !373, line: 197, type: !11267, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11270)
!11267 = !DISubroutineType(types: !11268)
!11268 = !{null, !11269}
!11269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2046, size: 32)
!11270 = !{!11271}
!11271 = !DILocalVariable(name: "list", arg: 1, scope: !11266, file: !373, line: 197, type: !11269)
!11272 = !DILocation(line: 0, scope: !11266)
!11273 = !DILocation(line: 199, column: 8, scope: !11266)
!11274 = !DILocation(line: 199, column: 13, scope: !11266)
!11275 = !DILocation(line: 200, column: 8, scope: !11266)
!11276 = !DILocation(line: 200, column: 13, scope: !11266)
!11277 = !DILocation(line: 201, column: 1, scope: !11266)
!11278 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2006, file: !2006, line: 641, type: !11279, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11285)
!11279 = !DISubroutineType(types: !11280)
!11280 = !{!2009, !2010, !11135, !352, !3166, !102, !102, !102, !103, !106, !11281}
!11281 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1491, line: 67, baseType: !11282)
!11282 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1491, line: 65, size: 64, elements: !11283)
!11283 = !{!11284}
!11284 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !11282, file: !1491, line: 66, baseType: !1490, size: 64)
!11285 = !{!11286, !11287, !11288, !11289, !11290, !11291, !11292, !11293, !11294, !11295}
!11286 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11278, file: !2006, line: 641, type: !2010)
!11287 = !DILocalVariable(name: "stack", arg: 2, scope: !11278, file: !2006, line: 642, type: !11135)
!11288 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11278, file: !2006, line: 643, type: !352)
!11289 = !DILocalVariable(name: "entry", arg: 4, scope: !11278, file: !2006, line: 643, type: !3166)
!11290 = !DILocalVariable(name: "p1", arg: 5, scope: !11278, file: !2006, line: 644, type: !102)
!11291 = !DILocalVariable(name: "p2", arg: 6, scope: !11278, file: !2006, line: 644, type: !102)
!11292 = !DILocalVariable(name: "p3", arg: 7, scope: !11278, file: !2006, line: 644, type: !102)
!11293 = !DILocalVariable(name: "prio", arg: 8, scope: !11278, file: !2006, line: 645, type: !103)
!11294 = !DILocalVariable(name: "options", arg: 9, scope: !11278, file: !2006, line: 645, type: !106)
!11295 = !DILocalVariable(name: "delay", arg: 10, scope: !11278, file: !2006, line: 645, type: !11281)
!11296 = !DILocation(line: 0, scope: !11278)
!11297 = !DILocation(line: 649, column: 2, scope: !11278)
!11298 = !DILocation(line: 652, column: 7, scope: !11299)
!11299 = distinct !DILexicalBlock(scope: !11278, file: !2006, line: 652, column: 6)
!11300 = !DILocation(line: 652, column: 6, scope: !11278)
!11301 = !DILocation(line: 653, column: 3, scope: !11302)
!11302 = distinct !DILexicalBlock(scope: !11299, file: !2006, line: 652, column: 39)
!11303 = !DILocation(line: 654, column: 2, scope: !11302)
!11304 = !DILocation(line: 656, column: 2, scope: !11278)
!11305 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2006, file: !2006, line: 401, type: !11306, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11308)
!11306 = !DISubroutineType(types: !11307)
!11307 = !{null, !2010, !11281}
!11308 = !{!11309, !11310}
!11309 = !DILocalVariable(name: "thread", arg: 1, scope: !11305, file: !2006, line: 401, type: !2010)
!11310 = !DILocalVariable(name: "delay", arg: 2, scope: !11305, file: !2006, line: 401, type: !11281)
!11311 = !DILocation(line: 0, scope: !11305)
!11312 = !DILocation(line: 404, column: 6, scope: !11313)
!11313 = distinct !DILexicalBlock(scope: !11305, file: !2006, line: 404, column: 6)
!11314 = !DILocation(line: 404, column: 6, scope: !11305)
!11315 = !DILocation(line: 405, column: 3, scope: !11316)
!11316 = distinct !DILexicalBlock(scope: !11313, file: !2006, line: 404, column: 38)
!11317 = !DILocation(line: 406, column: 2, scope: !11316)
!11318 = !DILocation(line: 407, column: 3, scope: !11319)
!11319 = distinct !DILexicalBlock(scope: !11313, file: !2006, line: 406, column: 9)
!11320 = !DILocation(line: 413, column: 1, scope: !11305)
!11321 = distinct !DISubprogram(name: "k_thread_start", scope: !3288, file: !3288, line: 205, type: !11322, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11324)
!11322 = !DISubroutineType(types: !11323)
!11323 = !{null, !2009}
!11324 = !{!11325}
!11325 = !DILocalVariable(name: "thread", arg: 1, scope: !11321, file: !3288, line: 205, type: !2009)
!11326 = !DILocation(line: 0, scope: !11321)
!11327 = !DILocation(line: 214, column: 2, scope: !11328)
!11328 = distinct !DILexicalBlock(scope: !11321, file: !3288, line: 214, column: 2)
!11329 = !{i64 2154866877}
!11330 = !DILocation(line: 215, column: 2, scope: !11321)
!11331 = !DILocation(line: 216, column: 1, scope: !11321)
!11332 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11239, file: !11239, line: 47, type: !11306, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11333)
!11333 = !{!11334, !11335}
!11334 = !DILocalVariable(name: "thread", arg: 1, scope: !11332, file: !11239, line: 47, type: !2010)
!11335 = !DILocalVariable(name: "ticks", arg: 2, scope: !11332, file: !11239, line: 47, type: !11281)
!11336 = !DILocation(line: 0, scope: !11332)
!11337 = !DILocation(line: 49, column: 30, scope: !11332)
!11338 = !DILocation(line: 49, column: 2, scope: !11332)
!11339 = !DILocation(line: 50, column: 1, scope: !11332)
!11340 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2006, file: !2006, line: 748, type: !2860, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11341)
!11341 = !{!11342, !11360}
!11342 = !DILocalVariable(name: "thread_data", scope: !11343, file: !2006, line: 750, type: !11344)
!11343 = distinct !DILexicalBlock(scope: !11340, file: !2006, line: 750, column: 2)
!11344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11345, size: 32)
!11345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !459, line: 620, size: 384, elements: !11346)
!11346 = !{!11347, !11348, !11349, !11350, !11351, !11352, !11353, !11354, !11355, !11356, !11357, !11359}
!11347 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !11345, file: !459, line: 621, baseType: !2010, size: 32)
!11348 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !11345, file: !459, line: 622, baseType: !11135, size: 32, offset: 32)
!11349 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !11345, file: !459, line: 623, baseType: !32, size: 32, offset: 64)
!11350 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !11345, file: !459, line: 624, baseType: !3166, size: 32, offset: 96)
!11351 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !11345, file: !459, line: 625, baseType: !102, size: 32, offset: 128)
!11352 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !11345, file: !459, line: 626, baseType: !102, size: 32, offset: 160)
!11353 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !11345, file: !459, line: 627, baseType: !102, size: 32, offset: 192)
!11354 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !11345, file: !459, line: 628, baseType: !103, size: 32, offset: 224)
!11355 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !11345, file: !459, line: 629, baseType: !106, size: 32, offset: 256)
!11356 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !11345, file: !459, line: 630, baseType: !736, size: 32, offset: 288)
!11357 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !11345, file: !459, line: 631, baseType: !11358, size: 32, offset: 320)
!11358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2860, size: 32)
!11359 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !11345, file: !459, line: 632, baseType: !150, size: 32, offset: 352)
!11360 = !DILocalVariable(name: "thread_data", scope: !11361, file: !2006, line: 781, type: !11344)
!11361 = distinct !DILexicalBlock(scope: !11340, file: !2006, line: 781, column: 2)
!11362 = !DILocation(line: 0, scope: !11343)
!11363 = !DILocation(line: 750, column: 2, scope: !11343)
!11364 = !DILocation(line: 780, column: 2, scope: !11340)
!11365 = !DILocation(line: 0, scope: !11361)
!11366 = !DILocation(line: 781, column: 2, scope: !11361)
!11367 = !DILocation(line: 752, column: 17, scope: !11368)
!11368 = distinct !DILexicalBlock(scope: !11369, file: !2006, line: 750, column: 38)
!11369 = distinct !DILexicalBlock(scope: !11343, file: !2006, line: 750, column: 2)
!11370 = !DILocation(line: 753, column: 17, scope: !11368)
!11371 = !DILocation(line: 754, column: 17, scope: !11368)
!11372 = !DILocation(line: 755, column: 17, scope: !11368)
!11373 = !DILocation(line: 756, column: 17, scope: !11368)
!11374 = !DILocation(line: 757, column: 17, scope: !11368)
!11375 = !DILocation(line: 758, column: 17, scope: !11368)
!11376 = !DILocation(line: 759, column: 17, scope: !11368)
!11377 = !DILocation(line: 760, column: 17, scope: !11368)
!11378 = !DILocation(line: 751, column: 3, scope: !11368)
!11379 = !DILocation(line: 763, column: 16, scope: !11368)
!11380 = !DILocation(line: 763, column: 29, scope: !11368)
!11381 = !DILocation(line: 763, column: 39, scope: !11368)
!11382 = !DILocation(line: 750, column: 2, scope: !11369)
!11383 = !DILocation(line: 750, column: 2, scope: !11384)
!11384 = distinct !DILexicalBlock(scope: !11369, file: !2006, line: 750, column: 2)
!11385 = distinct !{!11385, !11363, !11386}
!11386 = !DILocation(line: 764, column: 2, scope: !11343)
!11387 = !DILocation(line: 787, column: 2, scope: !11340)
!11388 = !DILocation(line: 788, column: 1, scope: !11340)
!11389 = !DILocation(line: 782, column: 20, scope: !11390)
!11390 = distinct !DILexicalBlock(scope: !11391, file: !2006, line: 782, column: 7)
!11391 = distinct !DILexicalBlock(scope: !11392, file: !2006, line: 781, column: 38)
!11392 = distinct !DILexicalBlock(scope: !11361, file: !2006, line: 781, column: 2)
!11393 = !DILocation(line: 782, column: 31, scope: !11390)
!11394 = !DILocation(line: 782, column: 7, scope: !11391)
!11395 = !DILocation(line: 783, column: 37, scope: !11396)
!11396 = distinct !DILexicalBlock(scope: !11390, file: !2006, line: 782, column: 51)
!11397 = !DILocation(line: 784, column: 10, scope: !11396)
!11398 = !DILocation(line: 783, column: 4, scope: !11396)
!11399 = !DILocation(line: 785, column: 3, scope: !11396)
!11400 = !DILocation(line: 781, column: 2, scope: !11392)
!11401 = !DILocation(line: 781, column: 2, scope: !11402)
!11402 = distinct !DILexicalBlock(scope: !11392, file: !2006, line: 781, column: 2)
!11403 = distinct !{!11403, !11366, !11404}
!11404 = !DILocation(line: 786, column: 2, scope: !11361)
!11405 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !11406, file: !11406, line: 403, type: !11407, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11409)
!11406 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11407 = !DISubroutineType(types: !11408)
!11408 = !{!1402, !1402}
!11409 = !{!11410}
!11410 = !DILocalVariable(name: "t", arg: 1, scope: !11405, file: !11406, line: 403, type: !1402)
!11411 = !DILocation(line: 0, scope: !11405)
!11412 = !DILocalVariable(name: "t", arg: 1, scope: !11413, file: !11406, line: 102, type: !1402)
!11413 = distinct !DISubprogram(name: "z_tmcvt", scope: !11406, file: !11406, line: 102, type: !11414, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11416)
!11414 = !DISubroutineType(types: !11415)
!11415 = !{!1402, !1402, !106, !106, !163, !163, !163, !163}
!11416 = !{!11412, !11417, !11418, !11419, !11420, !11421, !11422, !11423, !11424, !11425, !11426}
!11417 = !DILocalVariable(name: "from_hz", arg: 2, scope: !11413, file: !11406, line: 102, type: !106)
!11418 = !DILocalVariable(name: "to_hz", arg: 3, scope: !11413, file: !11406, line: 103, type: !106)
!11419 = !DILocalVariable(name: "const_hz", arg: 4, scope: !11413, file: !11406, line: 103, type: !163)
!11420 = !DILocalVariable(name: "result32", arg: 5, scope: !11413, file: !11406, line: 104, type: !163)
!11421 = !DILocalVariable(name: "round_up", arg: 6, scope: !11413, file: !11406, line: 104, type: !163)
!11422 = !DILocalVariable(name: "round_off", arg: 7, scope: !11413, file: !11406, line: 105, type: !163)
!11423 = !DILocalVariable(name: "mul_ratio", scope: !11413, file: !11406, line: 107, type: !163)
!11424 = !DILocalVariable(name: "div_ratio", scope: !11413, file: !11406, line: 109, type: !163)
!11425 = !DILocalVariable(name: "off", scope: !11413, file: !11406, line: 116, type: !1402)
!11426 = !DILocalVariable(name: "rdivisor", scope: !11427, file: !11406, line: 119, type: !106)
!11427 = distinct !DILexicalBlock(scope: !11428, file: !11406, line: 118, column: 18)
!11428 = distinct !DILexicalBlock(scope: !11413, file: !11406, line: 118, column: 6)
!11429 = !DILocation(line: 0, scope: !11413, inlinedAt: !11430)
!11430 = distinct !DILocation(line: 406, column: 9, scope: !11405)
!11431 = !DILocation(line: 145, column: 13, scope: !11432, inlinedAt: !11430)
!11432 = distinct !DILexicalBlock(scope: !11433, file: !11406, line: 144, column: 10)
!11433 = distinct !DILexicalBlock(scope: !11434, file: !11406, line: 142, column: 7)
!11434 = distinct !DILexicalBlock(scope: !11435, file: !11406, line: 141, column: 24)
!11435 = distinct !DILexicalBlock(scope: !11436, file: !11406, line: 141, column: 13)
!11436 = distinct !DILexicalBlock(scope: !11413, file: !11406, line: 134, column: 6)
!11437 = !DILocation(line: 406, column: 2, scope: !11405)
!11438 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2006, file: !2006, line: 817, type: !3164, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11439)
!11439 = !{!11440, !11441, !11442, !11443}
!11440 = !DILocalVariable(name: "entry", arg: 1, scope: !11438, file: !2006, line: 817, type: !3166)
!11441 = !DILocalVariable(name: "p1", arg: 2, scope: !11438, file: !2006, line: 818, type: !102)
!11442 = !DILocalVariable(name: "p2", arg: 3, scope: !11438, file: !2006, line: 818, type: !102)
!11443 = !DILocalVariable(name: "p3", arg: 4, scope: !11438, file: !2006, line: 818, type: !102)
!11444 = !DILocation(line: 0, scope: !11438)
!11445 = !DILocation(line: 822, column: 2, scope: !11438)
!11446 = !DILocation(line: 822, column: 17, scope: !11438)
!11447 = !DILocation(line: 822, column: 30, scope: !11438)
!11448 = !DILocation(line: 823, column: 2, scope: !11438)
!11449 = !DILocation(line: 845, column: 2, scope: !11438)
!11450 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2006, file: !2006, line: 888, type: !11451, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11453)
!11451 = !DISubroutineType(types: !11452)
!11452 = !{!103, !2010}
!11453 = !{!11454}
!11454 = !DILocalVariable(name: "thread", arg: 1, scope: !11450, file: !2006, line: 888, type: !2010)
!11455 = !DILocation(line: 0, scope: !11450)
!11456 = !DILocation(line: 893, column: 2, scope: !11450)
!11457 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2006, file: !2006, line: 897, type: !11458, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11460)
!11458 = !DISubroutineType(types: !11459)
!11459 = !{!103, !2010, !32}
!11460 = !{!11461, !11462}
!11461 = !DILocalVariable(name: "thread", arg: 1, scope: !11457, file: !2006, line: 897, type: !2010)
!11462 = !DILocalVariable(name: "options", arg: 2, scope: !11457, file: !2006, line: 897, type: !32)
!11463 = !DILocation(line: 0, scope: !11457)
!11464 = !DILocation(line: 902, column: 2, scope: !11457)
!11465 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2006, file: !2006, line: 1072, type: !11466, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11471)
!11466 = !DISubroutineType(types: !11467)
!11467 = !{!103, !2009, !11468}
!11468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11469, size: 32)
!11469 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !363, line: 234, baseType: !11470)
!11470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !363, line: 192, elements: !474)
!11471 = !{!11472, !11473}
!11472 = !DILocalVariable(name: "thread", arg: 1, scope: !11465, file: !2006, line: 1072, type: !2009)
!11473 = !DILocalVariable(name: "stats", arg: 2, scope: !11465, file: !2006, line: 1073, type: !11468)
!11474 = !DILocation(line: 0, scope: !11465)
!11475 = !DILocation(line: 1075, column: 14, scope: !11476)
!11476 = distinct !DILexicalBlock(scope: !11465, file: !2006, line: 1075, column: 6)
!11477 = !DILocation(line: 1075, column: 23, scope: !11476)
!11478 = !DILocation(line: 1086, column: 1, scope: !11465)
!11479 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2006, file: !2006, line: 1088, type: !11480, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11482)
!11480 = !DISubroutineType(types: !11481)
!11481 = !{!103, !11468}
!11482 = !{!11483}
!11483 = !DILocalVariable(name: "stats", arg: 1, scope: !11479, file: !2006, line: 1088, type: !11468)
!11484 = !DILocation(line: 0, scope: !11479)
!11485 = !DILocation(line: 1094, column: 12, scope: !11486)
!11486 = distinct !DILexicalBlock(scope: !11479, file: !2006, line: 1094, column: 6)
!11487 = !DILocation(line: 1120, column: 1, scope: !11479)
!11488 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !11489, file: !11489, line: 20, type: !2860, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2841, retainedNodes: !474)
!11489 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11490 = !DILocation(line: 30, column: 2, scope: !11488)
!11491 = !DILocation(line: 31, column: 1, scope: !11488)
!11492 = distinct !DISubprogram(name: "idle", scope: !11489, file: !11489, line: 33, type: !3169, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2841, retainedNodes: !11493)
!11493 = !{!11494, !11495, !11496}
!11494 = !DILocalVariable(name: "unused1", arg: 1, scope: !11492, file: !11489, line: 33, type: !102)
!11495 = !DILocalVariable(name: "unused2", arg: 2, scope: !11492, file: !11489, line: 33, type: !102)
!11496 = !DILocalVariable(name: "unused3", arg: 3, scope: !11492, file: !11489, line: 33, type: !102)
!11497 = !DILocation(line: 0, scope: !11492)
!11498 = !DILocation(line: 41, column: 2, scope: !11492)
!11499 = !DILocation(line: 55, column: 2, scope: !11500, inlinedAt: !11504)
!11500 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4661, file: !4661, line: 42, type: !4662, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2841, retainedNodes: !11501)
!11501 = !{!11502, !11503}
!11502 = !DILocalVariable(name: "key", scope: !11500, file: !4661, line: 44, type: !32)
!11503 = !DILocalVariable(name: "tmp", scope: !11500, file: !4661, line: 53, type: !32)
!11504 = distinct !DILocation(line: 62, column: 10, scope: !11505)
!11505 = distinct !DILexicalBlock(scope: !11492, file: !11489, line: 41, column: 15)
!11506 = !{i64 2222233}
!11507 = !DILocation(line: 0, scope: !11500, inlinedAt: !11504)
!11508 = !DILocation(line: 86, column: 3, scope: !11505)
!11509 = distinct !{!11509, !11498, !11510}
!11510 = !DILocation(line: 105, column: 2, scope: !11492)
!11511 = distinct !DISubprogram(name: "k_cpu_idle", scope: !459, file: !459, line: 5627, type: !2860, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2841, retainedNodes: !474)
!11512 = !DILocation(line: 5629, column: 2, scope: !11511)
!11513 = !DILocation(line: 5630, column: 1, scope: !11511)
!11514 = !DISubprogram(name: "arch_cpu_idle", scope: !3167, file: !3167, line: 167, type: !2860, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !474)
!11515 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2238, file: !2238, line: 93, type: !11516, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11518)
!11516 = !DISubroutineType(types: !11517)
!11517 = !{!736, !2133, !2133}
!11518 = !{!11519, !11520, !11521, !11522}
!11519 = !DILocalVariable(name: "thread_1", arg: 1, scope: !11515, file: !2238, line: 93, type: !2133)
!11520 = !DILocalVariable(name: "thread_2", arg: 2, scope: !11515, file: !2238, line: 94, type: !2133)
!11521 = !DILocalVariable(name: "b1", scope: !11515, file: !2238, line: 97, type: !736)
!11522 = !DILocalVariable(name: "b2", scope: !11515, file: !2238, line: 98, type: !736)
!11523 = !DILocation(line: 0, scope: !11515)
!11524 = !DILocation(line: 97, column: 30, scope: !11515)
!11525 = !DILocation(line: 98, column: 30, scope: !11515)
!11526 = !DILocation(line: 100, column: 9, scope: !11527)
!11527 = distinct !DILexicalBlock(scope: !11515, file: !2238, line: 100, column: 6)
!11528 = !DILocation(line: 100, column: 6, scope: !11515)
!11529 = !DILocation(line: 125, column: 1, scope: !11515)
!11530 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2238, file: !2238, line: 428, type: !11531, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11533)
!11531 = !DISubroutineType(types: !11532)
!11532 = !{null, !2133}
!11533 = !{!11534}
!11534 = !DILocalVariable(name: "curr", arg: 1, scope: !11530, file: !2238, line: 428, type: !2133)
!11535 = !DILocation(line: 0, scope: !11530)
!11536 = !DILocation(line: 434, column: 6, scope: !11537)
!11537 = distinct !DILexicalBlock(scope: !11530, file: !2238, line: 434, column: 6)
!11538 = !DILocation(line: 434, column: 23, scope: !11537)
!11539 = !DILocation(line: 434, column: 6, scope: !11530)
!11540 = !DILocation(line: 435, column: 50, scope: !11541)
!11541 = distinct !DILexicalBlock(scope: !11537, file: !2238, line: 434, column: 29)
!11542 = !DILocation(line: 435, column: 48, scope: !11541)
!11543 = !DILocation(line: 435, column: 29, scope: !11541)
!11544 = !DILocation(line: 436, column: 24, scope: !11541)
!11545 = !DILocation(line: 436, column: 3, scope: !11541)
!11546 = !DILocation(line: 437, column: 2, scope: !11541)
!11547 = !DILocation(line: 438, column: 1, scope: !11530)
!11548 = distinct !DISubprogram(name: "slice_time", scope: !2238, file: !2238, line: 407, type: !11549, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11551)
!11549 = !DISubroutineType(types: !11550)
!11550 = !{!103, !2133}
!11551 = !{!11552, !11553}
!11552 = !DILocalVariable(name: "curr", arg: 1, scope: !11548, file: !2238, line: 407, type: !2133)
!11553 = !DILocalVariable(name: "ret", scope: !11548, file: !2238, line: 409, type: !103)
!11554 = !DILocation(line: 0, scope: !11548)
!11555 = !DILocation(line: 409, column: 12, scope: !11548)
!11556 = !DILocation(line: 416, column: 2, scope: !11548)
!11557 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2238, file: !2238, line: 440, type: !11558, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11560)
!11558 = !DISubroutineType(types: !11559)
!11559 = !{null, !736, !103}
!11560 = !{!11561, !11562, !11563, !11569}
!11561 = !DILocalVariable(name: "slice", arg: 1, scope: !11557, file: !2238, line: 440, type: !736)
!11562 = !DILocalVariable(name: "prio", arg: 2, scope: !11557, file: !2238, line: 440, type: !103)
!11563 = !DILocalVariable(name: "__i", scope: !11564, file: !2238, line: 442, type: !11565)
!11564 = distinct !DILexicalBlock(scope: !11557, file: !2238, line: 442, column: 2)
!11565 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !473, line: 106, baseType: !11566)
!11566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !473, line: 32, size: 32, elements: !11567)
!11567 = !{!11568}
!11568 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11566, file: !473, line: 33, baseType: !103, size: 32)
!11569 = !DILocalVariable(name: "__key", scope: !11564, file: !2238, line: 442, type: !11565)
!11570 = !DILocation(line: 0, scope: !11557)
!11571 = !DILocation(line: 0, scope: !11564)
!11572 = !DILocalVariable(name: "l", arg: 1, scope: !11573, file: !473, line: 136, type: !11576)
!11573 = distinct !DISubprogram(name: "k_spin_lock", scope: !473, file: !473, line: 136, type: !11574, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11577)
!11574 = !DISubroutineType(types: !11575)
!11575 = !{!11565, !11576}
!11576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 32)
!11577 = !{!11572, !11578}
!11578 = !DILocalVariable(name: "k", scope: !11573, file: !473, line: 139, type: !11565)
!11579 = !DILocation(line: 0, scope: !11573, inlinedAt: !11580)
!11580 = distinct !DILocation(line: 442, column: 2, scope: !11564)
!11581 = !DILocation(line: 55, column: 2, scope: !11582, inlinedAt: !11586)
!11582 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4661, file: !4661, line: 42, type: !4662, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11583)
!11583 = !{!11584, !11585}
!11584 = !DILocalVariable(name: "key", scope: !11582, file: !4661, line: 44, type: !32)
!11585 = !DILocalVariable(name: "tmp", scope: !11582, file: !4661, line: 53, type: !32)
!11586 = distinct !DILocation(line: 145, column: 10, scope: !11573, inlinedAt: !11580)
!11587 = !{i64 2266204}
!11588 = !DILocation(line: 0, scope: !11582, inlinedAt: !11586)
!11589 = !DILocation(line: 443, column: 29, scope: !11590)
!11590 = distinct !DILexicalBlock(scope: !11591, file: !2238, line: 442, column: 26)
!11591 = distinct !DILexicalBlock(scope: !11564, file: !2238, line: 442, column: 2)
!11592 = !DILocation(line: 444, column: 17, scope: !11590)
!11593 = !DILocation(line: 445, column: 51, scope: !11594)
!11594 = distinct !DILexicalBlock(scope: !11590, file: !2238, line: 445, column: 7)
!11595 = !DILocation(line: 445, column: 7, scope: !11590)
!11596 = !DILocation(line: 0, scope: !11590)
!11597 = !DILocation(line: 451, column: 18, scope: !11590)
!11598 = !DILocation(line: 452, column: 3, scope: !11590)
!11599 = !DILocalVariable(name: "key", arg: 2, scope: !11600, file: !473, line: 190, type: !11565)
!11600 = distinct !DISubprogram(name: "k_spin_unlock", scope: !473, file: !473, line: 189, type: !11601, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11603)
!11601 = !DISubroutineType(types: !11602)
!11602 = !{null, !11576, !11565}
!11603 = !{!11604, !11599}
!11604 = !DILocalVariable(name: "l", arg: 1, scope: !11600, file: !473, line: 189, type: !11576)
!11605 = !DILocation(line: 0, scope: !11600, inlinedAt: !11606)
!11606 = distinct !DILocation(line: 442, column: 2, scope: !11591)
!11607 = !DILocalVariable(name: "key", arg: 1, scope: !11608, file: !4661, line: 84, type: !32)
!11608 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4661, file: !4661, line: 84, type: !4672, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11609)
!11609 = !{!11607}
!11610 = !DILocation(line: 0, scope: !11608, inlinedAt: !11611)
!11611 = distinct !DILocation(line: 215, column: 2, scope: !11600, inlinedAt: !11606)
!11612 = !DILocation(line: 95, column: 2, scope: !11608, inlinedAt: !11611)
!11613 = !{i64 2267021}
!11614 = !DILocation(line: 454, column: 1, scope: !11557)
!11615 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !11406, file: !11406, line: 389, type: !5916, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11616)
!11616 = !{!11617}
!11617 = !DILocalVariable(name: "t", arg: 1, scope: !11615, file: !11406, line: 389, type: !106)
!11618 = !DILocation(line: 0, scope: !11615)
!11619 = !DILocalVariable(name: "t", arg: 1, scope: !11620, file: !11406, line: 102, type: !1402)
!11620 = distinct !DISubprogram(name: "z_tmcvt", scope: !11406, file: !11406, line: 102, type: !11414, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11621)
!11621 = !{!11619, !11622, !11623, !11624, !11625, !11626, !11627, !11628, !11629, !11630, !11631}
!11622 = !DILocalVariable(name: "from_hz", arg: 2, scope: !11620, file: !11406, line: 102, type: !106)
!11623 = !DILocalVariable(name: "to_hz", arg: 3, scope: !11620, file: !11406, line: 103, type: !106)
!11624 = !DILocalVariable(name: "const_hz", arg: 4, scope: !11620, file: !11406, line: 103, type: !163)
!11625 = !DILocalVariable(name: "result32", arg: 5, scope: !11620, file: !11406, line: 104, type: !163)
!11626 = !DILocalVariable(name: "round_up", arg: 6, scope: !11620, file: !11406, line: 104, type: !163)
!11627 = !DILocalVariable(name: "round_off", arg: 7, scope: !11620, file: !11406, line: 105, type: !163)
!11628 = !DILocalVariable(name: "mul_ratio", scope: !11620, file: !11406, line: 107, type: !163)
!11629 = !DILocalVariable(name: "div_ratio", scope: !11620, file: !11406, line: 109, type: !163)
!11630 = !DILocalVariable(name: "off", scope: !11620, file: !11406, line: 116, type: !1402)
!11631 = !DILocalVariable(name: "rdivisor", scope: !11632, file: !11406, line: 119, type: !106)
!11632 = distinct !DILexicalBlock(scope: !11633, file: !11406, line: 118, column: 18)
!11633 = distinct !DILexicalBlock(scope: !11620, file: !11406, line: 118, column: 6)
!11634 = !DILocation(line: 0, scope: !11620, inlinedAt: !11635)
!11635 = distinct !DILocation(line: 392, column: 9, scope: !11615)
!11636 = !DILocation(line: 143, column: 25, scope: !11637, inlinedAt: !11635)
!11637 = distinct !DILexicalBlock(scope: !11638, file: !11406, line: 142, column: 17)
!11638 = distinct !DILexicalBlock(scope: !11639, file: !11406, line: 142, column: 7)
!11639 = distinct !DILexicalBlock(scope: !11640, file: !11406, line: 141, column: 24)
!11640 = distinct !DILexicalBlock(scope: !11641, file: !11406, line: 141, column: 13)
!11641 = distinct !DILexicalBlock(scope: !11620, file: !11406, line: 134, column: 6)
!11642 = !DILocation(line: 392, column: 2, scope: !11615)
!11643 = distinct !DISubprogram(name: "z_time_slice", scope: !2238, file: !2238, line: 502, type: !6553, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11644)
!11644 = !{!11645, !11646}
!11645 = !DILocalVariable(name: "ticks", arg: 1, scope: !11643, file: !2238, line: 502, type: !103)
!11646 = !DILocalVariable(name: "key", scope: !11643, file: !2238, line: 511, type: !11565)
!11647 = !DILocation(line: 0, scope: !11643)
!11648 = !DILocation(line: 0, scope: !11573, inlinedAt: !11649)
!11649 = distinct !DILocation(line: 511, column: 25, scope: !11643)
!11650 = !DILocation(line: 55, column: 2, scope: !11582, inlinedAt: !11651)
!11651 = distinct !DILocation(line: 145, column: 10, scope: !11573, inlinedAt: !11649)
!11652 = !DILocation(line: 0, scope: !11582, inlinedAt: !11651)
!11653 = !DILocation(line: 514, column: 6, scope: !11654)
!11654 = distinct !DILexicalBlock(scope: !11643, file: !2238, line: 514, column: 6)
!11655 = !DILocation(line: 514, column: 25, scope: !11654)
!11656 = !DILocation(line: 514, column: 22, scope: !11654)
!11657 = !DILocation(line: 514, column: 6, scope: !11643)
!11658 = !DILocation(line: 515, column: 3, scope: !11659)
!11659 = distinct !DILexicalBlock(scope: !11654, file: !2238, line: 514, column: 35)
!11660 = !DILocation(line: 0, scope: !11600, inlinedAt: !11661)
!11661 = distinct !DILocation(line: 516, column: 3, scope: !11659)
!11662 = !DILocation(line: 0, scope: !11608, inlinedAt: !11663)
!11663 = distinct !DILocation(line: 215, column: 2, scope: !11600, inlinedAt: !11661)
!11664 = !DILocation(line: 95, column: 2, scope: !11608, inlinedAt: !11663)
!11665 = !DILocation(line: 517, column: 3, scope: !11659)
!11666 = !DILocation(line: 519, column: 18, scope: !11643)
!11667 = !DILocation(line: 522, column: 6, scope: !11668)
!11668 = distinct !DILexicalBlock(scope: !11643, file: !2238, line: 522, column: 6)
!11669 = !DILocation(line: 522, column: 27, scope: !11668)
!11670 = !DILocation(line: 522, column: 30, scope: !11668)
!11671 = !DILocation(line: 522, column: 6, scope: !11643)
!11672 = !DILocation(line: 523, column: 30, scope: !11673)
!11673 = distinct !DILexicalBlock(scope: !11674, file: !2238, line: 523, column: 7)
!11674 = distinct !DILexicalBlock(scope: !11668, file: !2238, line: 522, column: 51)
!11675 = !DILocation(line: 523, column: 13, scope: !11673)
!11676 = !DILocation(line: 523, column: 7, scope: !11674)
!11677 = !DILocation(line: 530, column: 10, scope: !11678)
!11678 = distinct !DILexicalBlock(scope: !11673, file: !2238, line: 523, column: 43)
!11679 = !DILocation(line: 531, column: 3, scope: !11678)
!11680 = !DILocation(line: 532, column: 30, scope: !11681)
!11681 = distinct !DILexicalBlock(scope: !11673, file: !2238, line: 531, column: 10)
!11682 = !DILocation(line: 535, column: 29, scope: !11683)
!11683 = distinct !DILexicalBlock(scope: !11668, file: !2238, line: 534, column: 9)
!11684 = !DILocation(line: 0, scope: !11600, inlinedAt: !11685)
!11685 = distinct !DILocation(line: 537, column: 2, scope: !11643)
!11686 = !DILocation(line: 0, scope: !11608, inlinedAt: !11687)
!11687 = distinct !DILocation(line: 215, column: 2, scope: !11600, inlinedAt: !11685)
!11688 = !DILocation(line: 95, column: 2, scope: !11608, inlinedAt: !11687)
!11689 = !DILocation(line: 538, column: 1, scope: !11643)
!11690 = distinct !DISubprogram(name: "sliceable", scope: !2238, file: !2238, line: 468, type: !11691, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11693)
!11691 = !DISubroutineType(types: !11692)
!11692 = !{!163, !2133}
!11693 = !{!11694, !11695}
!11694 = !DILocalVariable(name: "thread", arg: 1, scope: !11690, file: !2238, line: 468, type: !2133)
!11695 = !DILocalVariable(name: "ret", scope: !11690, file: !2238, line: 470, type: !163)
!11696 = !DILocation(line: 0, scope: !11690)
!11697 = !DILocation(line: 470, column: 13, scope: !11690)
!11698 = !DILocation(line: 471, column: 3, scope: !11690)
!11699 = !DILocation(line: 471, column: 7, scope: !11690)
!11700 = !DILocation(line: 472, column: 3, scope: !11690)
!11701 = !DILocation(line: 472, column: 37, scope: !11690)
!11702 = !DILocation(line: 472, column: 24, scope: !11690)
!11703 = !DILocation(line: 472, column: 43, scope: !11690)
!11704 = !DILocation(line: 472, column: 7, scope: !11690)
!11705 = !DILocation(line: 473, column: 3, scope: !11690)
!11706 = !DILocation(line: 473, column: 7, scope: !11690)
!11707 = !DILocation(line: 473, column: 6, scope: !11690)
!11708 = !DILocation(line: 479, column: 2, scope: !11690)
!11709 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2238, file: !2238, line: 482, type: !11710, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11712)
!11710 = !DISubroutineType(types: !11711)
!11711 = !{!11565, !11565}
!11712 = !{!11713, !11714}
!11713 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !11709, file: !2238, line: 482, type: !11565)
!11714 = !DILocalVariable(name: "curr", scope: !11709, file: !2238, line: 484, type: !2133)
!11715 = !DILocation(line: 0, scope: !11709)
!11716 = !DILocation(line: 484, column: 26, scope: !11709)
!11717 = !DILocation(line: 493, column: 7, scope: !11718)
!11718 = distinct !DILexicalBlock(scope: !11709, file: !2238, line: 493, column: 6)
!11719 = !DILocation(line: 493, column: 6, scope: !11709)
!11720 = !DILocation(line: 494, column: 3, scope: !11721)
!11721 = distinct !DILexicalBlock(scope: !11718, file: !2238, line: 493, column: 49)
!11722 = !DILocation(line: 495, column: 2, scope: !11721)
!11723 = !DILocation(line: 496, column: 2, scope: !11709)
!11724 = !DILocation(line: 499, column: 1, scope: !11709)
!11725 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !10845, file: !10845, line: 106, type: !11691, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11726)
!11726 = !{!11727, !11728}
!11727 = !DILocalVariable(name: "thread", arg: 1, scope: !11725, file: !10845, line: 106, type: !2133)
!11728 = !DILocalVariable(name: "state", scope: !11725, file: !10845, line: 108, type: !160)
!11729 = !DILocation(line: 0, scope: !11725)
!11730 = !DILocation(line: 108, column: 31, scope: !11725)
!11731 = !DILocation(line: 110, column: 16, scope: !11725)
!11732 = !DILocation(line: 111, column: 41, scope: !11725)
!11733 = !DILocation(line: 110, column: 2, scope: !11725)
!11734 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2238, file: !2238, line: 393, type: !11531, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11735)
!11735 = !{!11736}
!11736 = !DILocalVariable(name: "thread", arg: 1, scope: !11734, file: !2238, line: 393, type: !2133)
!11737 = !DILocation(line: 0, scope: !11734)
!11738 = !DILocation(line: 395, column: 6, scope: !11739)
!11739 = distinct !DILexicalBlock(scope: !11734, file: !2238, line: 395, column: 6)
!11740 = !DILocation(line: 395, column: 6, scope: !11734)
!11741 = !DILocalVariable(name: "thread", arg: 1, scope: !11742, file: !2238, line: 264, type: !2133)
!11742 = distinct !DISubprogram(name: "dequeue_thread", scope: !2238, file: !2238, line: 264, type: !11531, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11743)
!11743 = !{!11741}
!11744 = !DILocation(line: 0, scope: !11742, inlinedAt: !11745)
!11745 = distinct !DILocation(line: 396, column: 3, scope: !11746)
!11746 = distinct !DILexicalBlock(scope: !11739, file: !2238, line: 395, column: 34)
!11747 = !DILocation(line: 266, column: 15, scope: !11742, inlinedAt: !11745)
!11748 = !DILocation(line: 266, column: 28, scope: !11742, inlinedAt: !11745)
!11749 = !DILocalVariable(name: "thread", arg: 1, scope: !11750, file: !2238, line: 232, type: !2133)
!11750 = distinct !DISubprogram(name: "runq_remove", scope: !2238, file: !2238, line: 232, type: !11531, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11751)
!11751 = !{!11749}
!11752 = !DILocation(line: 0, scope: !11750, inlinedAt: !11753)
!11753 = distinct !DILocation(line: 268, column: 3, scope: !11754, inlinedAt: !11745)
!11754 = distinct !DILexicalBlock(scope: !11755, file: !2238, line: 267, column: 35)
!11755 = distinct !DILexicalBlock(scope: !11742, file: !2238, line: 267, column: 6)
!11756 = !DILocation(line: 234, column: 2, scope: !11750, inlinedAt: !11753)
!11757 = !DILocation(line: 397, column: 2, scope: !11746)
!11758 = !DILocalVariable(name: "thread", arg: 1, scope: !11759, file: !2238, line: 250, type: !2133)
!11759 = distinct !DISubprogram(name: "queue_thread", scope: !2238, file: !2238, line: 250, type: !11531, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11760)
!11760 = !{!11758}
!11761 = !DILocation(line: 0, scope: !11759, inlinedAt: !11762)
!11762 = distinct !DILocation(line: 398, column: 2, scope: !11734)
!11763 = !DILocation(line: 252, column: 15, scope: !11759, inlinedAt: !11762)
!11764 = !DILocation(line: 252, column: 28, scope: !11759, inlinedAt: !11762)
!11765 = !DILocalVariable(name: "thread", arg: 1, scope: !11766, file: !2238, line: 227, type: !2133)
!11766 = distinct !DISubprogram(name: "runq_add", scope: !2238, file: !2238, line: 227, type: !11531, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11767)
!11767 = !{!11765}
!11768 = !DILocation(line: 0, scope: !11766, inlinedAt: !11769)
!11769 = distinct !DILocation(line: 254, column: 3, scope: !11770, inlinedAt: !11762)
!11770 = distinct !DILexicalBlock(scope: !11771, file: !2238, line: 253, column: 35)
!11771 = distinct !DILexicalBlock(scope: !11759, file: !2238, line: 253, column: 6)
!11772 = !DILocalVariable(name: "pq", arg: 1, scope: !11773, file: !2238, line: 181, type: !11776)
!11773 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2238, file: !2238, line: 181, type: !11774, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11777)
!11774 = !DISubroutineType(types: !11775)
!11775 = !{null, !11776, !2133}
!11776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2169, size: 32)
!11777 = !{!11772, !11778, !11779}
!11778 = !DILocalVariable(name: "thread", arg: 2, scope: !11773, file: !2238, line: 182, type: !2133)
!11779 = !DILocalVariable(name: "t", scope: !11773, file: !2238, line: 184, type: !2133)
!11780 = !DILocation(line: 0, scope: !11773, inlinedAt: !11781)
!11781 = distinct !DILocation(line: 229, column: 2, scope: !11766, inlinedAt: !11769)
!11782 = !DILocation(line: 188, column: 2, scope: !11783, inlinedAt: !11781)
!11783 = distinct !DILexicalBlock(scope: !11773, file: !2238, line: 188, column: 2)
!11784 = !DILocation(line: 188, column: 2, scope: !11785, inlinedAt: !11781)
!11785 = distinct !DILexicalBlock(scope: !11783, file: !2238, line: 188, column: 2)
!11786 = !DILocation(line: 0, scope: !11783, inlinedAt: !11781)
!11787 = !DILocation(line: 189, column: 7, scope: !11788, inlinedAt: !11781)
!11788 = distinct !DILexicalBlock(scope: !11789, file: !2238, line: 189, column: 7)
!11789 = distinct !DILexicalBlock(scope: !11785, file: !2238, line: 188, column: 56)
!11790 = !DILocation(line: 189, column: 35, scope: !11788, inlinedAt: !11781)
!11791 = !DILocation(line: 189, column: 7, scope: !11789, inlinedAt: !11781)
!11792 = !DILocation(line: 191, column: 21, scope: !11793, inlinedAt: !11781)
!11793 = distinct !DILexicalBlock(scope: !11788, file: !2238, line: 189, column: 40)
!11794 = !DILocation(line: 190, column: 4, scope: !11793, inlinedAt: !11781)
!11795 = !DILocation(line: 192, column: 4, scope: !11793, inlinedAt: !11781)
!11796 = distinct !{!11796, !11782, !11797}
!11797 = !DILocation(line: 194, column: 2, scope: !11783, inlinedAt: !11781)
!11798 = !DILocation(line: 196, column: 37, scope: !11773, inlinedAt: !11781)
!11799 = !DILocation(line: 196, column: 2, scope: !11773, inlinedAt: !11781)
!11800 = !DILocation(line: 197, column: 1, scope: !11773, inlinedAt: !11781)
!11801 = !DILocation(line: 399, column: 25, scope: !11734)
!11802 = !DILocation(line: 399, column: 22, scope: !11734)
!11803 = !DILocation(line: 399, column: 2, scope: !11734)
!11804 = !DILocation(line: 400, column: 1, scope: !11734)
!11805 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !10845, file: !10845, line: 136, type: !11691, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11806)
!11806 = !{!11807}
!11807 = !DILocalVariable(name: "thread", arg: 1, scope: !11805, file: !10845, line: 136, type: !2133)
!11808 = !DILocation(line: 0, scope: !11805)
!11809 = !DILocation(line: 138, column: 9, scope: !11805)
!11810 = !DILocation(line: 138, column: 2, scope: !11805)
!11811 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2238, file: !2238, line: 1137, type: !11774, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11812)
!11812 = !{!11813, !11814}
!11813 = !DILocalVariable(name: "pq", arg: 1, scope: !11811, file: !2238, line: 1137, type: !11776)
!11814 = !DILocalVariable(name: "thread", arg: 2, scope: !11811, file: !2238, line: 1137, type: !2133)
!11815 = !DILocation(line: 0, scope: !11811)
!11816 = !DILocation(line: 1141, column: 33, scope: !11811)
!11817 = !DILocation(line: 1141, column: 2, scope: !11811)
!11818 = !DILocation(line: 1142, column: 1, scope: !11811)
!11819 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !373, file: !373, line: 294, type: !11820, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11822)
!11820 = !DISubroutineType(types: !11821)
!11821 = !{!2234, !11776}
!11822 = !{!11823}
!11823 = !DILocalVariable(name: "list", arg: 1, scope: !11819, file: !373, line: 294, type: !11776)
!11824 = !DILocation(line: 0, scope: !11819)
!11825 = !DILocation(line: 296, column: 9, scope: !11819)
!11826 = !DILocation(line: 296, column: 49, scope: !11819)
!11827 = !DILocation(line: 296, column: 2, scope: !11819)
!11828 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !373, file: !373, line: 443, type: !11829, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11831)
!11829 = !DISubroutineType(types: !11830)
!11830 = !{null, !2234, !2234}
!11831 = !{!11832, !11833, !11834}
!11832 = !DILocalVariable(name: "successor", arg: 1, scope: !11828, file: !373, line: 443, type: !2234)
!11833 = !DILocalVariable(name: "node", arg: 2, scope: !11828, file: !373, line: 443, type: !2234)
!11834 = !DILocalVariable(name: "prev", scope: !11828, file: !373, line: 445, type: !11835)
!11835 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2234)
!11836 = !DILocation(line: 0, scope: !11828)
!11837 = !DILocation(line: 445, column: 39, scope: !11828)
!11838 = !DILocation(line: 447, column: 8, scope: !11828)
!11839 = !DILocation(line: 447, column: 13, scope: !11828)
!11840 = !DILocation(line: 448, column: 8, scope: !11828)
!11841 = !DILocation(line: 448, column: 13, scope: !11828)
!11842 = !DILocation(line: 449, column: 8, scope: !11828)
!11843 = !DILocation(line: 449, column: 13, scope: !11828)
!11844 = !DILocation(line: 450, column: 18, scope: !11828)
!11845 = !DILocation(line: 451, column: 1, scope: !11828)
!11846 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !373, file: !373, line: 341, type: !11847, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11849)
!11847 = !DISubroutineType(types: !11848)
!11848 = !{!2234, !11776, !2234}
!11849 = !{!11850, !11851}
!11850 = !DILocalVariable(name: "list", arg: 1, scope: !11846, file: !373, line: 341, type: !11776)
!11851 = !DILocalVariable(name: "node", arg: 2, scope: !11846, file: !373, line: 342, type: !2234)
!11852 = !DILocation(line: 0, scope: !11846)
!11853 = !DILocation(line: 344, column: 15, scope: !11846)
!11854 = !DILocation(line: 344, column: 9, scope: !11846)
!11855 = !DILocation(line: 344, column: 26, scope: !11846)
!11856 = !DILocation(line: 344, column: 2, scope: !11846)
!11857 = distinct !DISubprogram(name: "sys_dlist_append", scope: !373, file: !373, line: 404, type: !11858, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11860)
!11858 = !DISubroutineType(types: !11859)
!11859 = !{null, !11776, !2234}
!11860 = !{!11861, !11862, !11863}
!11861 = !DILocalVariable(name: "list", arg: 1, scope: !11857, file: !373, line: 404, type: !11776)
!11862 = !DILocalVariable(name: "node", arg: 2, scope: !11857, file: !373, line: 404, type: !2234)
!11863 = !DILocalVariable(name: "tail", scope: !11857, file: !373, line: 406, type: !11835)
!11864 = !DILocation(line: 0, scope: !11857)
!11865 = !DILocation(line: 406, column: 34, scope: !11857)
!11866 = !DILocation(line: 408, column: 8, scope: !11857)
!11867 = !DILocation(line: 408, column: 13, scope: !11857)
!11868 = !DILocation(line: 409, column: 8, scope: !11857)
!11869 = !DILocation(line: 409, column: 13, scope: !11857)
!11870 = !DILocation(line: 411, column: 8, scope: !11857)
!11871 = !DILocation(line: 411, column: 13, scope: !11857)
!11872 = !DILocation(line: 412, column: 13, scope: !11857)
!11873 = !DILocation(line: 413, column: 1, scope: !11857)
!11874 = distinct !DISubprogram(name: "update_cache", scope: !2238, file: !2238, line: 559, type: !6553, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11875)
!11875 = !{!11876, !11877}
!11876 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !11874, file: !2238, line: 559, type: !103)
!11877 = !DILocalVariable(name: "thread", scope: !11874, file: !2238, line: 562, type: !2133)
!11878 = !DILocation(line: 0, scope: !11874)
!11879 = !DILocation(line: 239, column: 9, scope: !11880, inlinedAt: !11883)
!11880 = distinct !DISubprogram(name: "runq_best", scope: !2238, file: !2238, line: 237, type: !11881, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !474)
!11881 = !DISubroutineType(types: !11882)
!11882 = !{!2133}
!11883 = distinct !DILocation(line: 314, column: 28, scope: !11884, inlinedAt: !11887)
!11884 = distinct !DISubprogram(name: "next_up", scope: !2238, file: !2238, line: 312, type: !11881, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11885)
!11885 = !{!11886}
!11886 = !DILocalVariable(name: "thread", scope: !11884, file: !2238, line: 314, type: !2133)
!11887 = distinct !DILocation(line: 562, column: 28, scope: !11874)
!11888 = !DILocation(line: 0, scope: !11884, inlinedAt: !11887)
!11889 = !DILocation(line: 340, column: 17, scope: !11884, inlinedAt: !11887)
!11890 = !DILocation(line: 340, column: 9, scope: !11884, inlinedAt: !11887)
!11891 = !DILocalVariable(name: "thread", arg: 1, scope: !11892, file: !2238, line: 127, type: !2133)
!11892 = distinct !DISubprogram(name: "should_preempt", scope: !2238, file: !2238, line: 127, type: !11893, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11895)
!11893 = !DISubroutineType(types: !11894)
!11894 = !{!163, !2133, !103}
!11895 = !{!11891, !11896}
!11896 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !11892, file: !2238, line: 128, type: !103)
!11897 = !DILocation(line: 0, scope: !11892, inlinedAt: !11898)
!11898 = distinct !DILocation(line: 564, column: 6, scope: !11899)
!11899 = distinct !DILexicalBlock(scope: !11874, file: !2238, line: 564, column: 6)
!11900 = !DILocation(line: 133, column: 17, scope: !11901, inlinedAt: !11898)
!11901 = distinct !DILexicalBlock(scope: !11892, file: !2238, line: 133, column: 6)
!11902 = !DILocation(line: 0, scope: !11899)
!11903 = !DILocation(line: 133, column: 6, scope: !11892, inlinedAt: !11898)
!11904 = !DILocation(line: 140, column: 6, scope: !11905, inlinedAt: !11898)
!11905 = distinct !DILexicalBlock(scope: !11892, file: !2238, line: 140, column: 6)
!11906 = !DILocation(line: 140, column: 6, scope: !11892, inlinedAt: !11898)
!11907 = !DILocation(line: 150, column: 9, scope: !11908, inlinedAt: !11898)
!11908 = distinct !DILexicalBlock(scope: !11892, file: !2238, line: 149, column: 6)
!11909 = !DILocation(line: 149, column: 6, scope: !11892, inlinedAt: !11898)
!11910 = !DILocation(line: 157, column: 6, scope: !11911, inlinedAt: !11898)
!11911 = distinct !DILexicalBlock(scope: !11892, file: !2238, line: 157, column: 6)
!11912 = !DILocation(line: 564, column: 6, scope: !11874)
!11913 = !DILocation(line: 566, column: 14, scope: !11914)
!11914 = distinct !DILexicalBlock(scope: !11915, file: !2238, line: 566, column: 7)
!11915 = distinct !DILexicalBlock(scope: !11899, file: !2238, line: 564, column: 42)
!11916 = !DILocation(line: 566, column: 7, scope: !11915)
!11917 = !DILocation(line: 567, column: 4, scope: !11918)
!11918 = distinct !DILexicalBlock(scope: !11914, file: !2238, line: 566, column: 27)
!11919 = !DILocation(line: 568, column: 3, scope: !11918)
!11920 = !DILocation(line: 585, column: 1, scope: !11874)
!11921 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2238, file: !2238, line: 1144, type: !11922, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11924)
!11922 = !DISubroutineType(types: !11923)
!11923 = !{!2133, !11776}
!11924 = !{!11925, !11926, !11927}
!11925 = !DILocalVariable(name: "pq", arg: 1, scope: !11921, file: !2238, line: 1144, type: !11776)
!11926 = !DILocalVariable(name: "thread", scope: !11921, file: !2238, line: 1146, type: !2133)
!11927 = !DILocalVariable(name: "n", scope: !11921, file: !2238, line: 1147, type: !2234)
!11928 = !DILocation(line: 0, scope: !11921)
!11929 = !DILocation(line: 1147, column: 19, scope: !11921)
!11930 = !DILocation(line: 1152, column: 2, scope: !11921)
!11931 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !10845, file: !10845, line: 115, type: !11691, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11932)
!11932 = !{!11933}
!11933 = !DILocalVariable(name: "thread", arg: 1, scope: !11931, file: !10845, line: 115, type: !2133)
!11934 = !DILocation(line: 0, scope: !11931)
!11935 = !DILocation(line: 117, column: 46, scope: !11931)
!11936 = !DILocation(line: 117, column: 10, scope: !11931)
!11937 = !DILocation(line: 117, column: 9, scope: !11931)
!11938 = !DILocation(line: 117, column: 2, scope: !11931)
!11939 = distinct !DISubprogram(name: "is_preempt", scope: !2238, file: !2238, line: 62, type: !11549, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11940)
!11940 = !{!11941}
!11941 = !DILocalVariable(name: "thread", arg: 1, scope: !11939, file: !2238, line: 62, type: !2133)
!11942 = !DILocation(line: 0, scope: !11939)
!11943 = !DILocation(line: 65, column: 22, scope: !11939)
!11944 = !DILocation(line: 65, column: 30, scope: !11939)
!11945 = !DILocation(line: 65, column: 2, scope: !11939)
!11946 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11239, file: !11239, line: 35, type: !11947, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11951)
!11947 = !DISubroutineType(types: !11948)
!11948 = !{!163, !11949}
!11949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11950, size: 32)
!11950 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2184)
!11951 = !{!11952}
!11952 = !DILocalVariable(name: "to", arg: 1, scope: !11946, file: !11239, line: 35, type: !11949)
!11953 = !DILocation(line: 0, scope: !11946)
!11954 = !DILocation(line: 37, column: 35, scope: !11946)
!11955 = !DILocation(line: 37, column: 10, scope: !11946)
!11956 = !DILocation(line: 37, column: 9, scope: !11946)
!11957 = !DILocation(line: 37, column: 2, scope: !11946)
!11958 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !373, file: !373, line: 225, type: !11959, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11963)
!11959 = !DISubroutineType(types: !11960)
!11960 = !{!163, !11961}
!11961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11962, size: 32)
!11962 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2143)
!11963 = !{!11964}
!11964 = !DILocalVariable(name: "node", arg: 1, scope: !11958, file: !373, line: 225, type: !11961)
!11965 = !DILocation(line: 0, scope: !11958)
!11966 = !DILocation(line: 227, column: 15, scope: !11958)
!11967 = !DILocation(line: 227, column: 20, scope: !11958)
!11968 = !DILocation(line: 227, column: 2, scope: !11958)
!11969 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !373, file: !373, line: 325, type: !11847, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11970)
!11970 = !{!11971, !11972}
!11971 = !DILocalVariable(name: "list", arg: 1, scope: !11969, file: !373, line: 325, type: !11776)
!11972 = !DILocalVariable(name: "node", arg: 2, scope: !11969, file: !373, line: 326, type: !2234)
!11973 = !DILocation(line: 0, scope: !11969)
!11974 = !DILocation(line: 328, column: 24, scope: !11969)
!11975 = !DILocation(line: 328, column: 15, scope: !11969)
!11976 = !DILocation(line: 328, column: 9, scope: !11969)
!11977 = !DILocation(line: 328, column: 45, scope: !11969)
!11978 = !DILocation(line: 328, column: 2, scope: !11969)
!11979 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !373, file: !373, line: 266, type: !11980, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11982)
!11980 = !DISubroutineType(types: !11981)
!11981 = !{!163, !11776}
!11982 = !{!11983}
!11983 = !DILocalVariable(name: "list", arg: 1, scope: !11979, file: !373, line: 266, type: !11776)
!11984 = !DILocation(line: 0, scope: !11979)
!11985 = !DILocation(line: 268, column: 15, scope: !11979)
!11986 = !DILocation(line: 268, column: 20, scope: !11979)
!11987 = !DILocation(line: 268, column: 2, scope: !11979)
!11988 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !373, file: !373, line: 496, type: !11989, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !11991)
!11989 = !DISubroutineType(types: !11990)
!11990 = !{null, !2234}
!11991 = !{!11992, !11993, !11994}
!11992 = !DILocalVariable(name: "node", arg: 1, scope: !11988, file: !373, line: 496, type: !2234)
!11993 = !DILocalVariable(name: "prev", scope: !11988, file: !373, line: 498, type: !11835)
!11994 = !DILocalVariable(name: "next", scope: !11988, file: !373, line: 499, type: !11835)
!11995 = !DILocation(line: 0, scope: !11988)
!11996 = !DILocation(line: 498, column: 34, scope: !11988)
!11997 = !DILocation(line: 499, column: 34, scope: !11988)
!11998 = !DILocation(line: 501, column: 8, scope: !11988)
!11999 = !DILocation(line: 501, column: 13, scope: !11988)
!12000 = !DILocation(line: 502, column: 8, scope: !11988)
!12001 = !DILocation(line: 502, column: 13, scope: !11988)
!12002 = !DILocation(line: 503, column: 2, scope: !11988)
!12003 = !DILocation(line: 504, column: 1, scope: !11988)
!12004 = distinct !DISubprogram(name: "sys_dnode_init", scope: !373, file: !373, line: 211, type: !11989, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12005)
!12005 = !{!12006}
!12006 = !DILocalVariable(name: "node", arg: 1, scope: !12004, file: !373, line: 211, type: !2234)
!12007 = !DILocation(line: 0, scope: !12004)
!12008 = !DILocation(line: 213, column: 8, scope: !12004)
!12009 = !DILocation(line: 213, column: 13, scope: !12004)
!12010 = !DILocation(line: 214, column: 8, scope: !12004)
!12011 = !DILocation(line: 214, column: 13, scope: !12004)
!12012 = !DILocation(line: 215, column: 1, scope: !12004)
!12013 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !10845, file: !10845, line: 131, type: !12014, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12016)
!12014 = !DISubroutineType(types: !12015)
!12015 = !{!163, !2133, !106}
!12016 = !{!12017, !12018}
!12017 = !DILocalVariable(name: "thread", arg: 1, scope: !12013, file: !10845, line: 131, type: !2133)
!12018 = !DILocalVariable(name: "state", arg: 2, scope: !12013, file: !10845, line: 131, type: !106)
!12019 = !DILocation(line: 0, scope: !12013)
!12020 = !DILocation(line: 133, column: 23, scope: !12013)
!12021 = !DILocation(line: 133, column: 45, scope: !12013)
!12022 = !DILocation(line: 133, column: 2, scope: !12013)
!12023 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !10845, file: !10845, line: 211, type: !12024, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12026)
!12024 = !DISubroutineType(types: !12025)
!12025 = !{!163, !103, !103}
!12026 = !{!12027, !12028}
!12027 = !DILocalVariable(name: "prio", arg: 1, scope: !12023, file: !10845, line: 211, type: !103)
!12028 = !DILocalVariable(name: "test_prio", arg: 2, scope: !12023, file: !10845, line: 211, type: !103)
!12029 = !DILocation(line: 0, scope: !12023)
!12030 = !DILocation(line: 213, column: 9, scope: !12023)
!12031 = !DILocation(line: 213, column: 2, scope: !12023)
!12032 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !10845, file: !10845, line: 83, type: !11691, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12033)
!12033 = !{!12034}
!12034 = !DILocalVariable(name: "thread", arg: 1, scope: !12032, file: !10845, line: 83, type: !2133)
!12035 = !DILocation(line: 0, scope: !12032)
!12036 = !DILocation(line: 89, column: 16, scope: !12032)
!12037 = !DILocation(line: 89, column: 2, scope: !12032)
!12038 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !10845, file: !10845, line: 206, type: !12024, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12039)
!12039 = !{!12040, !12041}
!12040 = !DILocalVariable(name: "prio1", arg: 1, scope: !12038, file: !10845, line: 206, type: !103)
!12041 = !DILocalVariable(name: "prio2", arg: 2, scope: !12038, file: !10845, line: 206, type: !103)
!12042 = !DILocation(line: 0, scope: !12038)
!12043 = !DILocation(line: 208, column: 15, scope: !12038)
!12044 = !DILocation(line: 208, column: 2, scope: !12038)
!12045 = distinct !DISubprogram(name: "z_ready_thread", scope: !2238, file: !2238, line: 635, type: !11531, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12046)
!12046 = !{!12047, !12048, !12050}
!12047 = !DILocalVariable(name: "thread", arg: 1, scope: !12045, file: !2238, line: 635, type: !2133)
!12048 = !DILocalVariable(name: "__i", scope: !12049, file: !2238, line: 637, type: !11565)
!12049 = distinct !DILexicalBlock(scope: !12045, file: !2238, line: 637, column: 2)
!12050 = !DILocalVariable(name: "__key", scope: !12049, file: !2238, line: 637, type: !11565)
!12051 = !DILocation(line: 0, scope: !12045)
!12052 = !DILocation(line: 0, scope: !12049)
!12053 = !DILocation(line: 0, scope: !11573, inlinedAt: !12054)
!12054 = distinct !DILocation(line: 637, column: 2, scope: !12049)
!12055 = !DILocation(line: 55, column: 2, scope: !11582, inlinedAt: !12056)
!12056 = distinct !DILocation(line: 145, column: 10, scope: !11573, inlinedAt: !12054)
!12057 = !DILocation(line: 0, scope: !11582, inlinedAt: !12056)
!12058 = !DILocation(line: 639, column: 4, scope: !12059)
!12059 = distinct !DILexicalBlock(scope: !12060, file: !2238, line: 638, column: 41)
!12060 = distinct !DILexicalBlock(scope: !12061, file: !2238, line: 638, column: 7)
!12061 = distinct !DILexicalBlock(scope: !12062, file: !2238, line: 637, column: 26)
!12062 = distinct !DILexicalBlock(scope: !12049, file: !2238, line: 637, column: 2)
!12063 = !DILocation(line: 0, scope: !11600, inlinedAt: !12064)
!12064 = distinct !DILocation(line: 637, column: 2, scope: !12062)
!12065 = !DILocation(line: 0, scope: !11608, inlinedAt: !12066)
!12066 = distinct !DILocation(line: 215, column: 2, scope: !11600, inlinedAt: !12064)
!12067 = !DILocation(line: 95, column: 2, scope: !11608, inlinedAt: !12066)
!12068 = !DILocation(line: 642, column: 1, scope: !12045)
!12069 = distinct !DISubprogram(name: "ready_thread", scope: !2238, file: !2238, line: 617, type: !11531, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12070)
!12070 = !{!12071}
!12071 = !DILocalVariable(name: "thread", arg: 1, scope: !12069, file: !2238, line: 617, type: !2133)
!12072 = !DILocation(line: 0, scope: !12069)
!12073 = !DILocation(line: 626, column: 7, scope: !12074)
!12074 = distinct !DILexicalBlock(scope: !12069, file: !2238, line: 626, column: 6)
!12075 = !DILocation(line: 626, column: 34, scope: !12074)
!12076 = !DILocation(line: 626, column: 37, scope: !12074)
!12077 = !DILocation(line: 626, column: 6, scope: !12069)
!12078 = !DILocation(line: 0, scope: !11759, inlinedAt: !12079)
!12079 = distinct !DILocation(line: 629, column: 3, scope: !12080)
!12080 = distinct !DILexicalBlock(scope: !12074, file: !2238, line: 626, column: 64)
!12081 = !DILocation(line: 252, column: 15, scope: !11759, inlinedAt: !12079)
!12082 = !DILocation(line: 252, column: 28, scope: !11759, inlinedAt: !12079)
!12083 = !DILocation(line: 0, scope: !11766, inlinedAt: !12084)
!12084 = distinct !DILocation(line: 254, column: 3, scope: !11770, inlinedAt: !12079)
!12085 = !DILocation(line: 0, scope: !11773, inlinedAt: !12086)
!12086 = distinct !DILocation(line: 229, column: 2, scope: !11766, inlinedAt: !12084)
!12087 = !DILocation(line: 188, column: 2, scope: !11783, inlinedAt: !12086)
!12088 = !DILocation(line: 188, column: 2, scope: !11785, inlinedAt: !12086)
!12089 = !DILocation(line: 0, scope: !11783, inlinedAt: !12086)
!12090 = !DILocation(line: 189, column: 7, scope: !11788, inlinedAt: !12086)
!12091 = !DILocation(line: 189, column: 35, scope: !11788, inlinedAt: !12086)
!12092 = !DILocation(line: 189, column: 7, scope: !11789, inlinedAt: !12086)
!12093 = !DILocation(line: 191, column: 21, scope: !11793, inlinedAt: !12086)
!12094 = !DILocation(line: 190, column: 4, scope: !11793, inlinedAt: !12086)
!12095 = !DILocation(line: 192, column: 4, scope: !11793, inlinedAt: !12086)
!12096 = distinct !{!12096, !12087, !12097}
!12097 = !DILocation(line: 194, column: 2, scope: !11783, inlinedAt: !12086)
!12098 = !DILocation(line: 196, column: 37, scope: !11773, inlinedAt: !12086)
!12099 = !DILocation(line: 196, column: 2, scope: !11773, inlinedAt: !12086)
!12100 = !DILocation(line: 197, column: 1, scope: !11773, inlinedAt: !12086)
!12101 = !DILocation(line: 630, column: 3, scope: !12080)
!12102 = !DILocation(line: 632, column: 2, scope: !12080)
!12103 = !DILocation(line: 633, column: 1, scope: !12069)
!12104 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !10845, file: !10845, line: 120, type: !11691, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12105)
!12105 = !{!12106}
!12106 = !DILocalVariable(name: "thread", arg: 1, scope: !12104, file: !10845, line: 120, type: !2133)
!12107 = !DILocation(line: 0, scope: !12104)
!12108 = !DILocation(line: 122, column: 12, scope: !12104)
!12109 = !DILocation(line: 122, column: 62, scope: !12104)
!12110 = !DILocation(line: 123, column: 4, scope: !12104)
!12111 = !DILocation(line: 122, column: 2, scope: !12104)
!12112 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2238, file: !2238, line: 644, type: !11531, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12113)
!12113 = !{!12114, !12115, !12117}
!12114 = !DILocalVariable(name: "thread", arg: 1, scope: !12112, file: !2238, line: 644, type: !2133)
!12115 = !DILocalVariable(name: "__i", scope: !12116, file: !2238, line: 646, type: !11565)
!12116 = distinct !DILexicalBlock(scope: !12112, file: !2238, line: 646, column: 2)
!12117 = !DILocalVariable(name: "__key", scope: !12116, file: !2238, line: 646, type: !11565)
!12118 = !DILocation(line: 0, scope: !12112)
!12119 = !DILocation(line: 0, scope: !12116)
!12120 = !DILocation(line: 0, scope: !11573, inlinedAt: !12121)
!12121 = distinct !DILocation(line: 646, column: 2, scope: !12116)
!12122 = !DILocation(line: 55, column: 2, scope: !11582, inlinedAt: !12123)
!12123 = distinct !DILocation(line: 145, column: 10, scope: !11573, inlinedAt: !12121)
!12124 = !DILocation(line: 0, scope: !11582, inlinedAt: !12123)
!12125 = !DILocation(line: 647, column: 3, scope: !12126)
!12126 = distinct !DILexicalBlock(scope: !12127, file: !2238, line: 646, column: 26)
!12127 = distinct !DILexicalBlock(scope: !12116, file: !2238, line: 646, column: 2)
!12128 = !DILocation(line: 0, scope: !11600, inlinedAt: !12129)
!12129 = distinct !DILocation(line: 646, column: 2, scope: !12127)
!12130 = !DILocation(line: 0, scope: !11608, inlinedAt: !12131)
!12131 = distinct !DILocation(line: 215, column: 2, scope: !11600, inlinedAt: !12129)
!12132 = !DILocation(line: 95, column: 2, scope: !11608, inlinedAt: !12131)
!12133 = !DILocation(line: 649, column: 1, scope: !12112)
!12134 = distinct !DISubprogram(name: "z_sched_start", scope: !2238, file: !2238, line: 651, type: !11531, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12135)
!12135 = !{!12136, !12137}
!12136 = !DILocalVariable(name: "thread", arg: 1, scope: !12134, file: !2238, line: 651, type: !2133)
!12137 = !DILocalVariable(name: "key", scope: !12134, file: !2238, line: 653, type: !11565)
!12138 = !DILocation(line: 0, scope: !12134)
!12139 = !DILocation(line: 0, scope: !11573, inlinedAt: !12140)
!12140 = distinct !DILocation(line: 653, column: 25, scope: !12134)
!12141 = !DILocation(line: 55, column: 2, scope: !11582, inlinedAt: !12142)
!12142 = distinct !DILocation(line: 145, column: 10, scope: !11573, inlinedAt: !12140)
!12143 = !DILocation(line: 0, scope: !11582, inlinedAt: !12142)
!12144 = !DILocation(line: 655, column: 6, scope: !12145)
!12145 = distinct !DILexicalBlock(scope: !12134, file: !2238, line: 655, column: 6)
!12146 = !DILocation(line: 655, column: 6, scope: !12134)
!12147 = !DILocation(line: 0, scope: !11600, inlinedAt: !12148)
!12148 = distinct !DILocation(line: 656, column: 3, scope: !12149)
!12149 = distinct !DILexicalBlock(scope: !12145, file: !2238, line: 655, column: 36)
!12150 = !DILocation(line: 0, scope: !11608, inlinedAt: !12151)
!12151 = distinct !DILocation(line: 215, column: 2, scope: !11600, inlinedAt: !12148)
!12152 = !DILocation(line: 95, column: 2, scope: !11608, inlinedAt: !12151)
!12153 = !DILocation(line: 657, column: 3, scope: !12149)
!12154 = !DILocation(line: 660, column: 2, scope: !12134)
!12155 = !DILocation(line: 661, column: 2, scope: !12134)
!12156 = !DILocation(line: 662, column: 2, scope: !12134)
!12157 = !DILocation(line: 663, column: 1, scope: !12134)
!12158 = distinct !DISubprogram(name: "z_has_thread_started", scope: !10845, file: !10845, line: 126, type: !11691, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12159)
!12159 = !{!12160}
!12160 = !DILocalVariable(name: "thread", arg: 1, scope: !12158, file: !10845, line: 126, type: !2133)
!12161 = !DILocation(line: 0, scope: !12158)
!12162 = !DILocation(line: 128, column: 23, scope: !12158)
!12163 = !DILocation(line: 128, column: 36, scope: !12158)
!12164 = !DILocation(line: 128, column: 56, scope: !12158)
!12165 = !DILocation(line: 128, column: 2, scope: !12158)
!12166 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !10845, file: !10845, line: 155, type: !11531, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12167)
!12167 = !{!12168}
!12168 = !DILocalVariable(name: "thread", arg: 1, scope: !12166, file: !10845, line: 155, type: !2133)
!12169 = !DILocation(line: 0, scope: !12166)
!12170 = !DILocation(line: 157, column: 15, scope: !12166)
!12171 = !DILocation(line: 157, column: 28, scope: !12166)
!12172 = !DILocation(line: 158, column: 1, scope: !12166)
!12173 = distinct !DISubprogram(name: "z_reschedule", scope: !2238, file: !2238, line: 967, type: !11601, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12174)
!12174 = !{!12175, !12176}
!12175 = !DILocalVariable(name: "lock", arg: 1, scope: !12173, file: !2238, line: 967, type: !11576)
!12176 = !DILocalVariable(name: "key", arg: 2, scope: !12173, file: !2238, line: 967, type: !11565)
!12177 = !DILocation(line: 0, scope: !12173)
!12178 = !DILocation(line: 969, column: 6, scope: !12179)
!12179 = distinct !DILexicalBlock(scope: !12173, file: !2238, line: 969, column: 6)
!12180 = !DILocation(line: 969, column: 23, scope: !12179)
!12181 = !DILocation(line: 969, column: 26, scope: !12179)
!12182 = !DILocation(line: 969, column: 6, scope: !12173)
!12183 = !DILocalVariable(name: "key", arg: 2, scope: !12184, file: !10949, line: 193, type: !11565)
!12184 = distinct !DISubprogram(name: "z_swap", scope: !10949, file: !10949, line: 193, type: !12185, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12187)
!12185 = !DISubroutineType(types: !12186)
!12186 = !{!103, !11576, !11565}
!12187 = !{!12188, !12183}
!12188 = !DILocalVariable(name: "lock", arg: 1, scope: !12184, file: !10949, line: 193, type: !11576)
!12189 = !DILocation(line: 0, scope: !12184, inlinedAt: !12190)
!12190 = distinct !DILocation(line: 970, column: 3, scope: !12191)
!12191 = distinct !DILexicalBlock(scope: !12179, file: !2238, line: 969, column: 39)
!12192 = !DILocation(line: 196, column: 9, scope: !12184, inlinedAt: !12190)
!12193 = !DILocation(line: 971, column: 2, scope: !12191)
!12194 = !DILocation(line: 0, scope: !11600, inlinedAt: !12195)
!12195 = distinct !DILocation(line: 972, column: 3, scope: !12196)
!12196 = distinct !DILexicalBlock(scope: !12179, file: !2238, line: 971, column: 9)
!12197 = !DILocation(line: 0, scope: !11608, inlinedAt: !12198)
!12198 = distinct !DILocation(line: 215, column: 2, scope: !11600, inlinedAt: !12195)
!12199 = !DILocation(line: 95, column: 2, scope: !11608, inlinedAt: !12198)
!12200 = !DILocation(line: 975, column: 1, scope: !12173)
!12201 = distinct !DISubprogram(name: "resched", scope: !2238, file: !2238, line: 940, type: !12202, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12204)
!12202 = !DISubroutineType(types: !12203)
!12203 = !{!163, !106}
!12204 = !{!12205}
!12205 = !DILocalVariable(name: "key", arg: 1, scope: !12201, file: !2238, line: 940, type: !106)
!12206 = !DILocation(line: 0, scope: !12201)
!12207 = !DILocalVariable(name: "key", arg: 1, scope: !12208, file: !4661, line: 112, type: !32)
!12208 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !4661, file: !4661, line: 112, type: !12209, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12211)
!12209 = !DISubroutineType(types: !12210)
!12210 = !{!163, !32}
!12211 = !{!12207}
!12212 = !DILocation(line: 0, scope: !12208, inlinedAt: !12213)
!12213 = distinct !DILocation(line: 946, column: 9, scope: !12201)
!12214 = !DILocation(line: 115, column: 13, scope: !12208, inlinedAt: !12213)
!12215 = !DILocation(line: 946, column: 32, scope: !12201)
!12216 = !DILocation(line: 1031, column: 3, scope: !12217, inlinedAt: !12220)
!12217 = distinct !DISubprogram(name: "__get_IPSR", scope: !4910, file: !4910, line: 1027, type: !4745, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12218)
!12218 = !{!12219}
!12219 = !DILocalVariable(name: "result", scope: !12217, file: !4910, line: 1029, type: !106)
!12220 = distinct !DILocation(line: 48, column: 10, scope: !12221, inlinedAt: !12222)
!12221 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !5702, file: !5702, line: 46, type: !5703, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !474)
!12222 = distinct !DILocation(line: 946, column: 36, scope: !12201)
!12223 = !{i64 3583817}
!12224 = !DILocation(line: 0, scope: !12217, inlinedAt: !12220)
!12225 = !DILocation(line: 48, column: 9, scope: !12221, inlinedAt: !12222)
!12226 = !DILocation(line: 946, column: 2, scope: !12201)
!12227 = distinct !DISubprogram(name: "need_swap", scope: !2238, file: !2238, line: 953, type: !5703, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12228)
!12228 = !{!12229}
!12229 = !DILocalVariable(name: "new_thread", scope: !12227, file: !2238, line: 959, type: !2133)
!12230 = !DILocation(line: 962, column: 31, scope: !12227)
!12231 = !DILocation(line: 0, scope: !12227)
!12232 = !DILocation(line: 963, column: 23, scope: !12227)
!12233 = !DILocation(line: 963, column: 20, scope: !12227)
!12234 = !DILocation(line: 963, column: 2, scope: !12227)
!12235 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !10949, file: !10949, line: 181, type: !4920, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12236)
!12236 = !{!12237, !12238}
!12237 = !DILocalVariable(name: "key", arg: 1, scope: !12235, file: !10949, line: 181, type: !32)
!12238 = !DILocalVariable(name: "ret", scope: !12235, file: !10949, line: 183, type: !103)
!12239 = !DILocation(line: 0, scope: !12235)
!12240 = !DILocation(line: 185, column: 8, scope: !12235)
!12241 = !DILocation(line: 186, column: 2, scope: !12235)
!12242 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2238, file: !2238, line: 665, type: !11531, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12243)
!12243 = !{!12244, !12245, !12247}
!12244 = !DILocalVariable(name: "thread", arg: 1, scope: !12242, file: !2238, line: 665, type: !2133)
!12245 = !DILocalVariable(name: "__i", scope: !12246, file: !2238, line: 671, type: !11565)
!12246 = distinct !DILexicalBlock(scope: !12242, file: !2238, line: 671, column: 2)
!12247 = !DILocalVariable(name: "__key", scope: !12246, file: !2238, line: 671, type: !11565)
!12248 = !DILocation(line: 0, scope: !12242)
!12249 = !DILocation(line: 669, column: 8, scope: !12242)
!12250 = !DILocation(line: 0, scope: !12246)
!12251 = !DILocation(line: 0, scope: !11573, inlinedAt: !12252)
!12252 = distinct !DILocation(line: 671, column: 2, scope: !12246)
!12253 = !DILocation(line: 55, column: 2, scope: !11582, inlinedAt: !12254)
!12254 = distinct !DILocation(line: 145, column: 10, scope: !11573, inlinedAt: !12252)
!12255 = !DILocation(line: 0, scope: !11582, inlinedAt: !12254)
!12256 = !DILocation(line: 672, column: 7, scope: !12257)
!12257 = distinct !DILexicalBlock(scope: !12258, file: !2238, line: 672, column: 7)
!12258 = distinct !DILexicalBlock(scope: !12259, file: !2238, line: 671, column: 26)
!12259 = distinct !DILexicalBlock(scope: !12246, file: !2238, line: 671, column: 2)
!12260 = !DILocation(line: 672, column: 7, scope: !12258)
!12261 = !DILocation(line: 0, scope: !11742, inlinedAt: !12262)
!12262 = distinct !DILocation(line: 673, column: 4, scope: !12263)
!12263 = distinct !DILexicalBlock(scope: !12257, file: !2238, line: 672, column: 35)
!12264 = !DILocation(line: 266, column: 15, scope: !11742, inlinedAt: !12262)
!12265 = !DILocation(line: 266, column: 28, scope: !11742, inlinedAt: !12262)
!12266 = !DILocation(line: 0, scope: !11750, inlinedAt: !12267)
!12267 = distinct !DILocation(line: 268, column: 3, scope: !11754, inlinedAt: !12262)
!12268 = !DILocation(line: 234, column: 2, scope: !11750, inlinedAt: !12267)
!12269 = !DILocation(line: 674, column: 3, scope: !12263)
!12270 = !DILocation(line: 675, column: 3, scope: !12258)
!12271 = !DILocation(line: 676, column: 26, scope: !12258)
!12272 = !DILocation(line: 676, column: 23, scope: !12258)
!12273 = !DILocation(line: 676, column: 3, scope: !12258)
!12274 = !DILocation(line: 0, scope: !11600, inlinedAt: !12275)
!12275 = distinct !DILocation(line: 671, column: 2, scope: !12259)
!12276 = !DILocation(line: 0, scope: !11608, inlinedAt: !12277)
!12277 = distinct !DILocation(line: 215, column: 2, scope: !11600, inlinedAt: !12275)
!12278 = !DILocation(line: 95, column: 2, scope: !11608, inlinedAt: !12277)
!12279 = !DILocation(line: 679, column: 16, scope: !12280)
!12280 = distinct !DILexicalBlock(scope: !12242, file: !2238, line: 679, column: 6)
!12281 = !DILocation(line: 679, column: 13, scope: !12280)
!12282 = !DILocation(line: 679, column: 6, scope: !12242)
!12283 = !DILocation(line: 680, column: 3, scope: !12284)
!12284 = distinct !DILexicalBlock(scope: !12280, file: !2238, line: 679, column: 26)
!12285 = !DILocation(line: 681, column: 2, scope: !12284)
!12286 = !DILocation(line: 684, column: 1, scope: !12242)
!12287 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !11239, file: !11239, line: 52, type: !11549, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12288)
!12288 = !{!12289}
!12289 = !DILocalVariable(name: "thread", arg: 1, scope: !12287, file: !11239, line: 52, type: !2133)
!12290 = !DILocation(line: 0, scope: !12287)
!12291 = !DILocation(line: 54, column: 39, scope: !12287)
!12292 = !DILocation(line: 54, column: 9, scope: !12287)
!12293 = !DILocation(line: 54, column: 2, scope: !12287)
!12294 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !10845, file: !10845, line: 141, type: !11531, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12295)
!12295 = !{!12296}
!12296 = !DILocalVariable(name: "thread", arg: 1, scope: !12294, file: !10845, line: 141, type: !2133)
!12297 = !DILocation(line: 0, scope: !12294)
!12298 = !DILocation(line: 143, column: 15, scope: !12294)
!12299 = !DILocation(line: 143, column: 28, scope: !12294)
!12300 = !DILocation(line: 146, column: 1, scope: !12294)
!12301 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !10845, file: !10845, line: 73, type: !2860, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !474)
!12302 = !DILocation(line: 55, column: 2, scope: !11582, inlinedAt: !12303)
!12303 = distinct !DILocation(line: 75, column: 30, scope: !12301)
!12304 = !DILocation(line: 0, scope: !11582, inlinedAt: !12303)
!12305 = !DILocation(line: 75, column: 9, scope: !12301)
!12306 = !DILocation(line: 76, column: 1, scope: !12301)
!12307 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2238, file: !2238, line: 977, type: !4999, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12308)
!12308 = !{!12309}
!12309 = !DILocalVariable(name: "key", arg: 1, scope: !12307, file: !2238, line: 977, type: !106)
!12310 = !DILocation(line: 0, scope: !12307)
!12311 = !DILocation(line: 979, column: 6, scope: !12312)
!12312 = distinct !DILexicalBlock(scope: !12307, file: !2238, line: 979, column: 6)
!12313 = !DILocation(line: 979, column: 6, scope: !12307)
!12314 = !DILocation(line: 980, column: 3, scope: !12315)
!12315 = distinct !DILexicalBlock(scope: !12312, file: !2238, line: 979, column: 20)
!12316 = !DILocation(line: 981, column: 2, scope: !12315)
!12317 = !DILocation(line: 0, scope: !11608, inlinedAt: !12318)
!12318 = distinct !DILocation(line: 982, column: 3, scope: !12319)
!12319 = distinct !DILexicalBlock(scope: !12312, file: !2238, line: 981, column: 9)
!12320 = !DILocation(line: 95, column: 2, scope: !11608, inlinedAt: !12318)
!12321 = !DILocation(line: 985, column: 1, scope: !12307)
!12322 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2238, file: !2238, line: 695, type: !11531, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12323)
!12323 = !{!12324, !12325}
!12324 = !DILocalVariable(name: "thread", arg: 1, scope: !12322, file: !2238, line: 695, type: !2133)
!12325 = !DILocalVariable(name: "key", scope: !12322, file: !2238, line: 699, type: !11565)
!12326 = !DILocation(line: 0, scope: !12322)
!12327 = !DILocation(line: 0, scope: !11573, inlinedAt: !12328)
!12328 = distinct !DILocation(line: 699, column: 25, scope: !12322)
!12329 = !DILocation(line: 55, column: 2, scope: !11582, inlinedAt: !12330)
!12330 = distinct !DILocation(line: 145, column: 10, scope: !11573, inlinedAt: !12328)
!12331 = !DILocation(line: 0, scope: !11582, inlinedAt: !12330)
!12332 = !DILocation(line: 702, column: 7, scope: !12333)
!12333 = distinct !DILexicalBlock(scope: !12322, file: !2238, line: 702, column: 6)
!12334 = !DILocation(line: 702, column: 6, scope: !12322)
!12335 = !DILocation(line: 0, scope: !11600, inlinedAt: !12336)
!12336 = distinct !DILocation(line: 703, column: 3, scope: !12337)
!12337 = distinct !DILexicalBlock(scope: !12333, file: !2238, line: 702, column: 38)
!12338 = !DILocation(line: 0, scope: !11608, inlinedAt: !12339)
!12339 = distinct !DILocation(line: 215, column: 2, scope: !11600, inlinedAt: !12336)
!12340 = !DILocation(line: 95, column: 2, scope: !11608, inlinedAt: !12339)
!12341 = !DILocation(line: 704, column: 3, scope: !12337)
!12342 = !DILocation(line: 707, column: 2, scope: !12322)
!12343 = !DILocation(line: 708, column: 2, scope: !12322)
!12344 = !DILocation(line: 710, column: 2, scope: !12322)
!12345 = !DILocation(line: 713, column: 1, scope: !12322)
!12346 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !10845, file: !10845, line: 96, type: !11691, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12347)
!12347 = !{!12348}
!12348 = !DILocalVariable(name: "thread", arg: 1, scope: !12346, file: !10845, line: 96, type: !2133)
!12349 = !DILocation(line: 0, scope: !12346)
!12350 = !DILocation(line: 98, column: 23, scope: !12346)
!12351 = !DILocation(line: 98, column: 36, scope: !12346)
!12352 = !DILocation(line: 98, column: 57, scope: !12346)
!12353 = !DILocation(line: 98, column: 2, scope: !12346)
!12354 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !10845, file: !10845, line: 148, type: !11531, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12355)
!12355 = !{!12356}
!12356 = !DILocalVariable(name: "thread", arg: 1, scope: !12354, file: !10845, line: 148, type: !2133)
!12357 = !DILocation(line: 0, scope: !12354)
!12358 = !DILocation(line: 150, column: 15, scope: !12354)
!12359 = !DILocation(line: 150, column: 28, scope: !12354)
!12360 = !DILocation(line: 153, column: 1, scope: !12354)
!12361 = distinct !DISubprogram(name: "z_pend_thread", scope: !2238, file: !2238, line: 770, type: !12362, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12368)
!12362 = !DISubroutineType(types: !12363)
!12363 = !{null, !2133, !2164, !12364}
!12364 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1491, line: 67, baseType: !12365)
!12365 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1491, line: 65, size: 64, elements: !12366)
!12366 = !{!12367}
!12367 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12365, file: !1491, line: 66, baseType: !1490, size: 64)
!12368 = !{!12369, !12370, !12371, !12372, !12374}
!12369 = !DILocalVariable(name: "thread", arg: 1, scope: !12361, file: !2238, line: 770, type: !2133)
!12370 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12361, file: !2238, line: 770, type: !2164)
!12371 = !DILocalVariable(name: "timeout", arg: 3, scope: !12361, file: !2238, line: 771, type: !12364)
!12372 = !DILocalVariable(name: "__i", scope: !12373, file: !2238, line: 774, type: !11565)
!12373 = distinct !DILexicalBlock(scope: !12361, file: !2238, line: 774, column: 2)
!12374 = !DILocalVariable(name: "__key", scope: !12373, file: !2238, line: 774, type: !11565)
!12375 = !DILocation(line: 0, scope: !12361)
!12376 = !DILocation(line: 0, scope: !12373)
!12377 = !DILocation(line: 0, scope: !11573, inlinedAt: !12378)
!12378 = distinct !DILocation(line: 774, column: 2, scope: !12373)
!12379 = !DILocation(line: 55, column: 2, scope: !11582, inlinedAt: !12380)
!12380 = distinct !DILocation(line: 145, column: 10, scope: !11573, inlinedAt: !12378)
!12381 = !DILocation(line: 0, scope: !11582, inlinedAt: !12380)
!12382 = !DILocation(line: 775, column: 3, scope: !12383)
!12383 = distinct !DILexicalBlock(scope: !12384, file: !2238, line: 774, column: 26)
!12384 = distinct !DILexicalBlock(scope: !12373, file: !2238, line: 774, column: 2)
!12385 = !DILocation(line: 0, scope: !11600, inlinedAt: !12386)
!12386 = distinct !DILocation(line: 774, column: 2, scope: !12384)
!12387 = !DILocation(line: 0, scope: !11608, inlinedAt: !12388)
!12388 = distinct !DILocation(line: 215, column: 2, scope: !11600, inlinedAt: !12386)
!12389 = !DILocation(line: 95, column: 2, scope: !11608, inlinedAt: !12388)
!12390 = !DILocation(line: 777, column: 1, scope: !12361)
!12391 = distinct !DISubprogram(name: "pend_locked", scope: !2238, file: !2238, line: 760, type: !12362, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12392)
!12392 = !{!12393, !12394, !12395}
!12393 = !DILocalVariable(name: "thread", arg: 1, scope: !12391, file: !2238, line: 760, type: !2133)
!12394 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12391, file: !2238, line: 760, type: !2164)
!12395 = !DILocalVariable(name: "timeout", arg: 3, scope: !12391, file: !2238, line: 761, type: !12364)
!12396 = !DILocation(line: 0, scope: !12391)
!12397 = !DILocation(line: 766, column: 2, scope: !12391)
!12398 = !DILocation(line: 767, column: 2, scope: !12391)
!12399 = !DILocation(line: 768, column: 1, scope: !12391)
!12400 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2238, file: !2238, line: 740, type: !12401, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12403)
!12401 = !DISubroutineType(types: !12402)
!12402 = !{null, !2133, !2164}
!12403 = !{!12404, !12405}
!12404 = !DILocalVariable(name: "thread", arg: 1, scope: !12400, file: !2238, line: 740, type: !2133)
!12405 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12400, file: !2238, line: 740, type: !2164)
!12406 = !DILocation(line: 0, scope: !12400)
!12407 = !DILocation(line: 742, column: 2, scope: !12400)
!12408 = !DILocation(line: 743, column: 2, scope: !12400)
!12409 = !DILocation(line: 747, column: 13, scope: !12410)
!12410 = distinct !DILexicalBlock(scope: !12400, file: !2238, line: 747, column: 6)
!12411 = !DILocation(line: 747, column: 6, scope: !12400)
!12412 = !DILocation(line: 748, column: 16, scope: !12413)
!12413 = distinct !DILexicalBlock(scope: !12410, file: !2238, line: 747, column: 22)
!12414 = !DILocation(line: 748, column: 26, scope: !12413)
!12415 = !DILocation(line: 749, column: 28, scope: !12413)
!12416 = !DILocation(line: 0, scope: !11773, inlinedAt: !12417)
!12417 = distinct !DILocation(line: 749, column: 3, scope: !12413)
!12418 = !DILocation(line: 188, column: 2, scope: !11783, inlinedAt: !12417)
!12419 = !DILocation(line: 188, column: 2, scope: !11785, inlinedAt: !12417)
!12420 = !DILocation(line: 0, scope: !11783, inlinedAt: !12417)
!12421 = !DILocation(line: 189, column: 7, scope: !11788, inlinedAt: !12417)
!12422 = !DILocation(line: 189, column: 35, scope: !11788, inlinedAt: !12417)
!12423 = !DILocation(line: 189, column: 7, scope: !11789, inlinedAt: !12417)
!12424 = !DILocation(line: 191, column: 21, scope: !11793, inlinedAt: !12417)
!12425 = !DILocation(line: 190, column: 4, scope: !11793, inlinedAt: !12417)
!12426 = !DILocation(line: 192, column: 4, scope: !11793, inlinedAt: !12417)
!12427 = distinct !{!12427, !12418, !12428}
!12428 = !DILocation(line: 194, column: 2, scope: !11783, inlinedAt: !12417)
!12429 = !DILocation(line: 196, column: 37, scope: !11773, inlinedAt: !12417)
!12430 = !DILocation(line: 196, column: 2, scope: !11773, inlinedAt: !12417)
!12431 = !DILocation(line: 197, column: 1, scope: !11773, inlinedAt: !12417)
!12432 = !DILocation(line: 751, column: 1, scope: !12400)
!12433 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2238, file: !2238, line: 753, type: !12434, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12436)
!12434 = !DISubroutineType(types: !12435)
!12435 = !{null, !2133, !12364}
!12436 = !{!12437, !12438}
!12437 = !DILocalVariable(name: "thread", arg: 1, scope: !12433, file: !2238, line: 753, type: !2133)
!12438 = !DILocalVariable(name: "timeout", arg: 2, scope: !12433, file: !2238, line: 753, type: !12364)
!12439 = !DILocation(line: 0, scope: !12433)
!12440 = !DILocation(line: 755, column: 7, scope: !12441)
!12441 = distinct !DILexicalBlock(scope: !12433, file: !2238, line: 755, column: 6)
!12442 = !DILocation(line: 755, column: 6, scope: !12433)
!12443 = !DILocation(line: 756, column: 3, scope: !12444)
!12444 = distinct !DILexicalBlock(scope: !12441, file: !2238, line: 755, column: 41)
!12445 = !DILocation(line: 757, column: 2, scope: !12444)
!12446 = !DILocation(line: 758, column: 1, scope: !12433)
!12447 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11239, file: !11239, line: 47, type: !12434, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12448)
!12448 = !{!12449, !12450}
!12449 = !DILocalVariable(name: "thread", arg: 1, scope: !12447, file: !11239, line: 47, type: !2133)
!12450 = !DILocalVariable(name: "ticks", arg: 2, scope: !12447, file: !11239, line: 47, type: !12364)
!12451 = !DILocation(line: 0, scope: !12447)
!12452 = !DILocation(line: 49, column: 30, scope: !12447)
!12453 = !DILocation(line: 49, column: 2, scope: !12447)
!12454 = !DILocation(line: 50, column: 1, scope: !12447)
!12455 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2238, file: !2238, line: 795, type: !2190, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12456)
!12456 = !{!12457, !12458, !12459, !12461, !12462}
!12457 = !DILocalVariable(name: "timeout", arg: 1, scope: !12455, file: !2238, line: 795, type: !2192)
!12458 = !DILocalVariable(name: "thread", scope: !12455, file: !2238, line: 797, type: !2133)
!12459 = !DILocalVariable(name: "__i", scope: !12460, file: !2238, line: 800, type: !11565)
!12460 = distinct !DILexicalBlock(scope: !12455, file: !2238, line: 800, column: 2)
!12461 = !DILocalVariable(name: "__key", scope: !12460, file: !2238, line: 800, type: !11565)
!12462 = !DILocalVariable(name: "killed", scope: !12463, file: !2238, line: 801, type: !163)
!12463 = distinct !DILexicalBlock(scope: !12464, file: !2238, line: 800, column: 26)
!12464 = distinct !DILexicalBlock(scope: !12460, file: !2238, line: 800, column: 2)
!12465 = !DILocation(line: 0, scope: !12455)
!12466 = !DILocation(line: 797, column: 28, scope: !12455)
!12467 = !DILocation(line: 0, scope: !12460)
!12468 = !DILocation(line: 0, scope: !11573, inlinedAt: !12469)
!12469 = distinct !DILocation(line: 800, column: 2, scope: !12460)
!12470 = !DILocation(line: 55, column: 2, scope: !11582, inlinedAt: !12471)
!12471 = distinct !DILocation(line: 145, column: 10, scope: !11573, inlinedAt: !12469)
!12472 = !DILocation(line: 0, scope: !11582, inlinedAt: !12471)
!12473 = !DILocation(line: 801, column: 27, scope: !12463)
!12474 = !DILocation(line: 801, column: 32, scope: !12463)
!12475 = !DILocation(line: 801, column: 61, scope: !12463)
!12476 = !DILocation(line: 0, scope: !12463)
!12477 = !DILocation(line: 804, column: 7, scope: !12463)
!12478 = !DILocation(line: 805, column: 21, scope: !12479)
!12479 = distinct !DILexicalBlock(scope: !12480, file: !2238, line: 805, column: 8)
!12480 = distinct !DILexicalBlock(scope: !12481, file: !2238, line: 804, column: 16)
!12481 = distinct !DILexicalBlock(scope: !12463, file: !2238, line: 804, column: 7)
!12482 = !DILocation(line: 805, column: 31, scope: !12479)
!12483 = !DILocation(line: 805, column: 8, scope: !12480)
!12484 = !DILocation(line: 806, column: 5, scope: !12485)
!12485 = distinct !DILexicalBlock(scope: !12479, file: !2238, line: 805, column: 40)
!12486 = !DILocation(line: 807, column: 4, scope: !12485)
!12487 = !DILocation(line: 808, column: 4, scope: !12480)
!12488 = !DILocation(line: 809, column: 4, scope: !12480)
!12489 = !DILocation(line: 810, column: 4, scope: !12480)
!12490 = !DILocation(line: 811, column: 3, scope: !12480)
!12491 = !DILocation(line: 0, scope: !11600, inlinedAt: !12492)
!12492 = distinct !DILocation(line: 800, column: 2, scope: !12464)
!12493 = !DILocation(line: 0, scope: !11608, inlinedAt: !12494)
!12494 = distinct !DILocation(line: 215, column: 2, scope: !11600, inlinedAt: !12492)
!12495 = !DILocation(line: 95, column: 2, scope: !11608, inlinedAt: !12494)
!12496 = !DILocation(line: 813, column: 1, scope: !12455)
!12497 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2238, file: !2238, line: 779, type: !11531, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12498)
!12498 = !{!12499}
!12499 = !DILocalVariable(name: "thread", arg: 1, scope: !12497, file: !2238, line: 779, type: !2133)
!12500 = !DILocation(line: 0, scope: !12497)
!12501 = !DILocation(line: 781, column: 2, scope: !12497)
!12502 = !DILocation(line: 782, column: 2, scope: !12497)
!12503 = !DILocation(line: 783, column: 15, scope: !12497)
!12504 = !DILocation(line: 783, column: 25, scope: !12497)
!12505 = !DILocation(line: 784, column: 1, scope: !12497)
!12506 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !10845, file: !10845, line: 165, type: !11531, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12507)
!12507 = !{!12508}
!12508 = !DILocalVariable(name: "thread", arg: 1, scope: !12506, file: !10845, line: 165, type: !2133)
!12509 = !DILocation(line: 0, scope: !12506)
!12510 = !DILocation(line: 167, column: 15, scope: !12506)
!12511 = !DILocation(line: 167, column: 28, scope: !12506)
!12512 = !DILocation(line: 168, column: 1, scope: !12506)
!12513 = distinct !DISubprogram(name: "unready_thread", scope: !2238, file: !2238, line: 731, type: !11531, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12514)
!12514 = !{!12515}
!12515 = !DILocalVariable(name: "thread", arg: 1, scope: !12513, file: !2238, line: 731, type: !2133)
!12516 = !DILocation(line: 0, scope: !12513)
!12517 = !DILocation(line: 733, column: 6, scope: !12518)
!12518 = distinct !DILexicalBlock(scope: !12513, file: !2238, line: 733, column: 6)
!12519 = !DILocation(line: 733, column: 6, scope: !12513)
!12520 = !DILocation(line: 0, scope: !11742, inlinedAt: !12521)
!12521 = distinct !DILocation(line: 734, column: 3, scope: !12522)
!12522 = distinct !DILexicalBlock(scope: !12518, file: !2238, line: 733, column: 34)
!12523 = !DILocation(line: 266, column: 15, scope: !11742, inlinedAt: !12521)
!12524 = !DILocation(line: 266, column: 28, scope: !11742, inlinedAt: !12521)
!12525 = !DILocation(line: 0, scope: !11750, inlinedAt: !12526)
!12526 = distinct !DILocation(line: 268, column: 3, scope: !11754, inlinedAt: !12521)
!12527 = !DILocation(line: 234, column: 2, scope: !11750, inlinedAt: !12526)
!12528 = !DILocation(line: 735, column: 2, scope: !12522)
!12529 = !DILocation(line: 736, column: 25, scope: !12513)
!12530 = !DILocation(line: 736, column: 22, scope: !12513)
!12531 = !DILocation(line: 736, column: 2, scope: !12513)
!12532 = !DILocation(line: 737, column: 1, scope: !12513)
!12533 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !10845, file: !10845, line: 160, type: !11531, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12534)
!12534 = !{!12535}
!12535 = !DILocalVariable(name: "thread", arg: 1, scope: !12533, file: !10845, line: 160, type: !2133)
!12536 = !DILocation(line: 0, scope: !12533)
!12537 = !DILocation(line: 162, column: 15, scope: !12533)
!12538 = !DILocation(line: 162, column: 28, scope: !12533)
!12539 = !DILocation(line: 163, column: 1, scope: !12533)
!12540 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2238, file: !2238, line: 786, type: !11531, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12541)
!12541 = !{!12542, !12543, !12545}
!12542 = !DILocalVariable(name: "thread", arg: 1, scope: !12540, file: !2238, line: 786, type: !2133)
!12543 = !DILocalVariable(name: "__i", scope: !12544, file: !2238, line: 788, type: !11565)
!12544 = distinct !DILexicalBlock(scope: !12540, file: !2238, line: 788, column: 2)
!12545 = !DILocalVariable(name: "__key", scope: !12544, file: !2238, line: 788, type: !11565)
!12546 = !DILocation(line: 0, scope: !12540)
!12547 = !DILocation(line: 0, scope: !12544)
!12548 = !DILocation(line: 0, scope: !11573, inlinedAt: !12549)
!12549 = distinct !DILocation(line: 788, column: 2, scope: !12544)
!12550 = !DILocation(line: 55, column: 2, scope: !11582, inlinedAt: !12551)
!12551 = distinct !DILocation(line: 145, column: 10, scope: !11573, inlinedAt: !12549)
!12552 = !DILocation(line: 0, scope: !11582, inlinedAt: !12551)
!12553 = !DILocation(line: 789, column: 3, scope: !12554)
!12554 = distinct !DILexicalBlock(scope: !12555, file: !2238, line: 788, column: 26)
!12555 = distinct !DILexicalBlock(scope: !12544, file: !2238, line: 788, column: 2)
!12556 = !DILocation(line: 0, scope: !11600, inlinedAt: !12557)
!12557 = distinct !DILocation(line: 788, column: 2, scope: !12555)
!12558 = !DILocation(line: 0, scope: !11608, inlinedAt: !12559)
!12559 = distinct !DILocation(line: 215, column: 2, scope: !11600, inlinedAt: !12557)
!12560 = !DILocation(line: 95, column: 2, scope: !11608, inlinedAt: !12559)
!12561 = !DILocation(line: 791, column: 1, scope: !12540)
!12562 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2238, file: !2238, line: 816, type: !12563, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12565)
!12563 = !DISubroutineType(types: !12564)
!12564 = !{!103, !106, !2164, !12364}
!12565 = !{!12566, !12567, !12568, !12569, !12570, !12572}
!12566 = !DILocalVariable(name: "key", arg: 1, scope: !12562, file: !2238, line: 816, type: !106)
!12567 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12562, file: !2238, line: 816, type: !2164)
!12568 = !DILocalVariable(name: "timeout", arg: 3, scope: !12562, file: !2238, line: 816, type: !12364)
!12569 = !DILocalVariable(name: "ret", scope: !12562, file: !2238, line: 828, type: !103)
!12570 = !DILocalVariable(name: "__i", scope: !12571, file: !2238, line: 829, type: !11565)
!12571 = distinct !DILexicalBlock(scope: !12562, file: !2238, line: 829, column: 2)
!12572 = !DILocalVariable(name: "__key", scope: !12571, file: !2238, line: 829, type: !11565)
!12573 = !DILocation(line: 0, scope: !12562)
!12574 = !DILocation(line: 823, column: 14, scope: !12562)
!12575 = !DILocation(line: 823, column: 2, scope: !12562)
!12576 = !DILocation(line: 826, column: 20, scope: !12562)
!12577 = !DILocation(line: 826, column: 18, scope: !12562)
!12578 = !DILocation(line: 828, column: 12, scope: !12562)
!12579 = !DILocation(line: 0, scope: !12571)
!12580 = !DILocation(line: 0, scope: !11573, inlinedAt: !12581)
!12581 = distinct !DILocation(line: 829, column: 2, scope: !12571)
!12582 = !DILocation(line: 55, column: 2, scope: !11582, inlinedAt: !12583)
!12583 = distinct !DILocation(line: 145, column: 10, scope: !11573, inlinedAt: !12581)
!12584 = !DILocation(line: 0, scope: !11582, inlinedAt: !12583)
!12585 = !DILocation(line: 830, column: 7, scope: !12586)
!12586 = distinct !DILexicalBlock(scope: !12587, file: !2238, line: 830, column: 7)
!12587 = distinct !DILexicalBlock(scope: !12588, file: !2238, line: 829, column: 26)
!12588 = distinct !DILexicalBlock(scope: !12571, file: !2238, line: 829, column: 2)
!12589 = !DILocation(line: 830, column: 26, scope: !12586)
!12590 = !DILocation(line: 830, column: 23, scope: !12586)
!12591 = !DILocation(line: 830, column: 7, scope: !12587)
!12592 = !DILocation(line: 831, column: 20, scope: !12593)
!12593 = distinct !DILexicalBlock(scope: !12586, file: !2238, line: 830, column: 36)
!12594 = !DILocation(line: 832, column: 3, scope: !12593)
!12595 = !DILocation(line: 0, scope: !11600, inlinedAt: !12596)
!12596 = distinct !DILocation(line: 829, column: 2, scope: !12588)
!12597 = !DILocation(line: 0, scope: !11608, inlinedAt: !12598)
!12598 = distinct !DILocation(line: 215, column: 2, scope: !11600, inlinedAt: !12596)
!12599 = !DILocation(line: 95, column: 2, scope: !11608, inlinedAt: !12598)
!12600 = !DILocation(line: 834, column: 2, scope: !12562)
!12601 = distinct !DISubprogram(name: "z_pend_curr", scope: !2238, file: !2238, line: 840, type: !12602, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12604)
!12602 = !DISubroutineType(types: !12603)
!12603 = !{!103, !11576, !11565, !2164, !12364}
!12604 = !{!12605, !12606, !12607, !12608}
!12605 = !DILocalVariable(name: "lock", arg: 1, scope: !12601, file: !2238, line: 840, type: !11576)
!12606 = !DILocalVariable(name: "key", arg: 2, scope: !12601, file: !2238, line: 840, type: !11565)
!12607 = !DILocalVariable(name: "wait_q", arg: 3, scope: !12601, file: !2238, line: 841, type: !2164)
!12608 = !DILocalVariable(name: "timeout", arg: 4, scope: !12601, file: !2238, line: 841, type: !12364)
!12609 = !DILocation(line: 0, scope: !12601)
!12610 = !DILocation(line: 844, column: 20, scope: !12601)
!12611 = !DILocation(line: 844, column: 18, scope: !12601)
!12612 = !DILocation(line: 0, scope: !11573, inlinedAt: !12613)
!12613 = distinct !DILocation(line: 856, column: 9, scope: !12601)
!12614 = !DILocation(line: 55, column: 2, scope: !11582, inlinedAt: !12615)
!12615 = distinct !DILocation(line: 145, column: 10, scope: !11573, inlinedAt: !12613)
!12616 = !DILocation(line: 0, scope: !11582, inlinedAt: !12615)
!12617 = !DILocation(line: 857, column: 14, scope: !12601)
!12618 = !DILocation(line: 857, column: 2, scope: !12601)
!12619 = !DILocation(line: 0, scope: !12184, inlinedAt: !12620)
!12620 = distinct !DILocation(line: 859, column: 9, scope: !12601)
!12621 = !DILocation(line: 196, column: 9, scope: !12184, inlinedAt: !12620)
!12622 = !DILocation(line: 859, column: 2, scope: !12601)
!12623 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2238, file: !2238, line: 862, type: !12624, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12626)
!12624 = !DISubroutineType(types: !12625)
!12625 = !{!2133, !2164}
!12626 = !{!12627, !12628, !12629, !12631}
!12627 = !DILocalVariable(name: "wait_q", arg: 1, scope: !12623, file: !2238, line: 862, type: !2164)
!12628 = !DILocalVariable(name: "thread", scope: !12623, file: !2238, line: 864, type: !2133)
!12629 = !DILocalVariable(name: "__i", scope: !12630, file: !2238, line: 866, type: !11565)
!12630 = distinct !DILexicalBlock(scope: !12623, file: !2238, line: 866, column: 2)
!12631 = !DILocalVariable(name: "__key", scope: !12630, file: !2238, line: 866, type: !11565)
!12632 = !DILocation(line: 0, scope: !12623)
!12633 = !DILocation(line: 0, scope: !12630)
!12634 = !DILocation(line: 0, scope: !11573, inlinedAt: !12635)
!12635 = distinct !DILocation(line: 866, column: 2, scope: !12630)
!12636 = !DILocation(line: 55, column: 2, scope: !11582, inlinedAt: !12637)
!12637 = distinct !DILocation(line: 145, column: 10, scope: !11573, inlinedAt: !12635)
!12638 = !DILocation(line: 0, scope: !11582, inlinedAt: !12637)
!12639 = !DILocation(line: 867, column: 12, scope: !12640)
!12640 = distinct !DILexicalBlock(scope: !12641, file: !2238, line: 866, column: 26)
!12641 = distinct !DILexicalBlock(scope: !12630, file: !2238, line: 866, column: 2)
!12642 = !DILocation(line: 869, column: 14, scope: !12643)
!12643 = distinct !DILexicalBlock(scope: !12640, file: !2238, line: 869, column: 7)
!12644 = !DILocation(line: 869, column: 7, scope: !12640)
!12645 = !DILocation(line: 870, column: 4, scope: !12646)
!12646 = distinct !DILexicalBlock(scope: !12643, file: !2238, line: 869, column: 23)
!12647 = !DILocation(line: 871, column: 3, scope: !12646)
!12648 = !DILocation(line: 0, scope: !11600, inlinedAt: !12649)
!12649 = distinct !DILocation(line: 866, column: 2, scope: !12641)
!12650 = !DILocation(line: 0, scope: !11608, inlinedAt: !12651)
!12651 = distinct !DILocation(line: 215, column: 2, scope: !11600, inlinedAt: !12649)
!12652 = !DILocation(line: 95, column: 2, scope: !11608, inlinedAt: !12651)
!12653 = !DILocation(line: 874, column: 2, scope: !12623)
!12654 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2238, file: !2238, line: 877, type: !12624, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12655)
!12655 = !{!12656, !12657, !12658, !12660}
!12656 = !DILocalVariable(name: "wait_q", arg: 1, scope: !12654, file: !2238, line: 877, type: !2164)
!12657 = !DILocalVariable(name: "thread", scope: !12654, file: !2238, line: 879, type: !2133)
!12658 = !DILocalVariable(name: "__i", scope: !12659, file: !2238, line: 881, type: !11565)
!12659 = distinct !DILexicalBlock(scope: !12654, file: !2238, line: 881, column: 2)
!12660 = !DILocalVariable(name: "__key", scope: !12659, file: !2238, line: 881, type: !11565)
!12661 = !DILocation(line: 0, scope: !12654)
!12662 = !DILocation(line: 0, scope: !12659)
!12663 = !DILocation(line: 0, scope: !11573, inlinedAt: !12664)
!12664 = distinct !DILocation(line: 881, column: 2, scope: !12659)
!12665 = !DILocation(line: 55, column: 2, scope: !11582, inlinedAt: !12666)
!12666 = distinct !DILocation(line: 145, column: 10, scope: !11573, inlinedAt: !12664)
!12667 = !DILocation(line: 0, scope: !11582, inlinedAt: !12666)
!12668 = !DILocation(line: 882, column: 12, scope: !12669)
!12669 = distinct !DILexicalBlock(scope: !12670, file: !2238, line: 881, column: 26)
!12670 = distinct !DILexicalBlock(scope: !12659, file: !2238, line: 881, column: 2)
!12671 = !DILocation(line: 884, column: 14, scope: !12672)
!12672 = distinct !DILexicalBlock(scope: !12669, file: !2238, line: 884, column: 7)
!12673 = !DILocation(line: 884, column: 7, scope: !12669)
!12674 = !DILocation(line: 885, column: 4, scope: !12675)
!12675 = distinct !DILexicalBlock(scope: !12672, file: !2238, line: 884, column: 23)
!12676 = !DILocation(line: 886, column: 10, scope: !12675)
!12677 = !DILocation(line: 887, column: 3, scope: !12675)
!12678 = !DILocation(line: 0, scope: !11600, inlinedAt: !12679)
!12679 = distinct !DILocation(line: 881, column: 2, scope: !12670)
!12680 = !DILocation(line: 0, scope: !11608, inlinedAt: !12681)
!12681 = distinct !DILocation(line: 215, column: 2, scope: !11600, inlinedAt: !12679)
!12682 = !DILocation(line: 95, column: 2, scope: !11608, inlinedAt: !12681)
!12683 = !DILocation(line: 890, column: 2, scope: !12654)
!12684 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2238, file: !2238, line: 893, type: !11531, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12685)
!12685 = !{!12686}
!12686 = !DILocalVariable(name: "thread", arg: 1, scope: !12684, file: !2238, line: 893, type: !2133)
!12687 = !DILocation(line: 0, scope: !12684)
!12688 = !DILocation(line: 0, scope: !12540, inlinedAt: !12689)
!12689 = distinct !DILocation(line: 895, column: 2, scope: !12684)
!12690 = !DILocation(line: 0, scope: !12544, inlinedAt: !12689)
!12691 = !DILocation(line: 0, scope: !11573, inlinedAt: !12692)
!12692 = distinct !DILocation(line: 788, column: 2, scope: !12544, inlinedAt: !12689)
!12693 = !DILocation(line: 55, column: 2, scope: !11582, inlinedAt: !12694)
!12694 = distinct !DILocation(line: 145, column: 10, scope: !11573, inlinedAt: !12692)
!12695 = !DILocation(line: 0, scope: !11582, inlinedAt: !12694)
!12696 = !DILocation(line: 789, column: 3, scope: !12554, inlinedAt: !12689)
!12697 = !DILocation(line: 0, scope: !11600, inlinedAt: !12698)
!12698 = distinct !DILocation(line: 788, column: 2, scope: !12555, inlinedAt: !12689)
!12699 = !DILocation(line: 0, scope: !11608, inlinedAt: !12700)
!12700 = distinct !DILocation(line: 215, column: 2, scope: !11600, inlinedAt: !12698)
!12701 = !DILocation(line: 95, column: 2, scope: !11608, inlinedAt: !12700)
!12702 = !DILocation(line: 896, column: 8, scope: !12684)
!12703 = !DILocation(line: 897, column: 1, scope: !12684)
!12704 = distinct !DISubprogram(name: "z_set_prio", scope: !2238, file: !2238, line: 902, type: !11893, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12705)
!12705 = !{!12706, !12707, !12708, !12709, !12711}
!12706 = !DILocalVariable(name: "thread", arg: 1, scope: !12704, file: !2238, line: 902, type: !2133)
!12707 = !DILocalVariable(name: "prio", arg: 2, scope: !12704, file: !2238, line: 902, type: !103)
!12708 = !DILocalVariable(name: "need_sched", scope: !12704, file: !2238, line: 904, type: !163)
!12709 = !DILocalVariable(name: "__i", scope: !12710, file: !2238, line: 906, type: !11565)
!12710 = distinct !DILexicalBlock(scope: !12704, file: !2238, line: 906, column: 2)
!12711 = !DILocalVariable(name: "__key", scope: !12710, file: !2238, line: 906, type: !11565)
!12712 = !DILocation(line: 0, scope: !12704)
!12713 = !DILocation(line: 0, scope: !12710)
!12714 = !DILocation(line: 0, scope: !11573, inlinedAt: !12715)
!12715 = distinct !DILocation(line: 906, column: 2, scope: !12710)
!12716 = !DILocation(line: 55, column: 2, scope: !11582, inlinedAt: !12717)
!12717 = distinct !DILocation(line: 145, column: 10, scope: !11573, inlinedAt: !12715)
!12718 = !DILocation(line: 0, scope: !11582, inlinedAt: !12717)
!12719 = !DILocation(line: 907, column: 16, scope: !12720)
!12720 = distinct !DILexicalBlock(scope: !12721, file: !2238, line: 906, column: 26)
!12721 = distinct !DILexicalBlock(scope: !12710, file: !2238, line: 906, column: 2)
!12722 = !DILocation(line: 909, column: 7, scope: !12720)
!12723 = !DILocation(line: 0, scope: !11742, inlinedAt: !12724)
!12724 = distinct !DILocation(line: 912, column: 5, scope: !12725)
!12725 = distinct !DILexicalBlock(scope: !12726, file: !2238, line: 911, column: 63)
!12726 = distinct !DILexicalBlock(scope: !12727, file: !2238, line: 911, column: 8)
!12727 = distinct !DILexicalBlock(scope: !12728, file: !2238, line: 909, column: 19)
!12728 = distinct !DILexicalBlock(scope: !12720, file: !2238, line: 909, column: 7)
!12729 = !DILocation(line: 266, column: 28, scope: !11742, inlinedAt: !12724)
!12730 = !DILocation(line: 0, scope: !11750, inlinedAt: !12731)
!12731 = distinct !DILocation(line: 268, column: 3, scope: !11754, inlinedAt: !12724)
!12732 = !DILocation(line: 234, column: 2, scope: !11750, inlinedAt: !12731)
!12733 = !DILocation(line: 913, column: 23, scope: !12725)
!12734 = !DILocation(line: 0, scope: !11759, inlinedAt: !12735)
!12735 = distinct !DILocation(line: 914, column: 5, scope: !12725)
!12736 = !DILocation(line: 252, column: 28, scope: !11759, inlinedAt: !12735)
!12737 = !DILocation(line: 0, scope: !11766, inlinedAt: !12738)
!12738 = distinct !DILocation(line: 254, column: 3, scope: !11770, inlinedAt: !12735)
!12739 = !DILocation(line: 0, scope: !11773, inlinedAt: !12740)
!12740 = distinct !DILocation(line: 229, column: 2, scope: !11766, inlinedAt: !12738)
!12741 = !DILocation(line: 188, column: 2, scope: !11783, inlinedAt: !12740)
!12742 = !DILocation(line: 188, column: 2, scope: !11785, inlinedAt: !12740)
!12743 = !DILocation(line: 0, scope: !11783, inlinedAt: !12740)
!12744 = !DILocation(line: 189, column: 7, scope: !11788, inlinedAt: !12740)
!12745 = !DILocation(line: 189, column: 35, scope: !11788, inlinedAt: !12740)
!12746 = !DILocation(line: 189, column: 7, scope: !11789, inlinedAt: !12740)
!12747 = !DILocation(line: 190, column: 4, scope: !11793, inlinedAt: !12740)
!12748 = !DILocation(line: 192, column: 4, scope: !11793, inlinedAt: !12740)
!12749 = distinct !{!12749, !12741, !12750}
!12750 = !DILocation(line: 194, column: 2, scope: !11783, inlinedAt: !12740)
!12751 = !DILocation(line: 196, column: 2, scope: !11773, inlinedAt: !12740)
!12752 = !DILocation(line: 197, column: 1, scope: !11773, inlinedAt: !12740)
!12753 = !DILocation(line: 918, column: 4, scope: !12727)
!12754 = !DILocation(line: 919, column: 3, scope: !12727)
!12755 = !DILocation(line: 920, column: 22, scope: !12756)
!12756 = distinct !DILexicalBlock(scope: !12728, file: !2238, line: 919, column: 10)
!12757 = !DILocation(line: 0, scope: !11600, inlinedAt: !12758)
!12758 = distinct !DILocation(line: 906, column: 2, scope: !12721)
!12759 = !DILocation(line: 0, scope: !11608, inlinedAt: !12760)
!12760 = distinct !DILocation(line: 215, column: 2, scope: !11600, inlinedAt: !12758)
!12761 = !DILocation(line: 95, column: 2, scope: !11608, inlinedAt: !12760)
!12762 = !DILocation(line: 926, column: 2, scope: !12704)
!12763 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2238, file: !2238, line: 929, type: !12764, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12766)
!12764 = !DISubroutineType(types: !12765)
!12765 = !{null, !2133, !103}
!12766 = !{!12767, !12768, !12769}
!12767 = !DILocalVariable(name: "thread", arg: 1, scope: !12763, file: !2238, line: 929, type: !2133)
!12768 = !DILocalVariable(name: "prio", arg: 2, scope: !12763, file: !2238, line: 929, type: !103)
!12769 = !DILocalVariable(name: "need_sched", scope: !12763, file: !2238, line: 931, type: !163)
!12770 = !DILocation(line: 0, scope: !12763)
!12771 = !DILocation(line: 931, column: 20, scope: !12763)
!12772 = !DILocation(line: 935, column: 17, scope: !12773)
!12773 = distinct !DILexicalBlock(scope: !12763, file: !2238, line: 935, column: 6)
!12774 = !DILocation(line: 935, column: 20, scope: !12773)
!12775 = !DILocation(line: 935, column: 35, scope: !12773)
!12776 = !DILocation(line: 935, column: 48, scope: !12773)
!12777 = !DILocation(line: 935, column: 6, scope: !12763)
!12778 = !DILocation(line: 936, column: 3, scope: !12779)
!12779 = distinct !DILexicalBlock(scope: !12773, file: !2238, line: 935, column: 55)
!12780 = !DILocation(line: 937, column: 2, scope: !12779)
!12781 = !DILocation(line: 938, column: 1, scope: !12763)
!12782 = distinct !DISubprogram(name: "k_sched_lock", scope: !2238, file: !2238, line: 987, type: !2860, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12783)
!12783 = !{!12784, !12786}
!12784 = !DILocalVariable(name: "__i", scope: !12785, file: !2238, line: 989, type: !11565)
!12785 = distinct !DILexicalBlock(scope: !12782, file: !2238, line: 989, column: 2)
!12786 = !DILocalVariable(name: "__key", scope: !12785, file: !2238, line: 989, type: !11565)
!12787 = !DILocation(line: 0, scope: !12785)
!12788 = !DILocation(line: 0, scope: !11573, inlinedAt: !12789)
!12789 = distinct !DILocation(line: 989, column: 2, scope: !12785)
!12790 = !DILocation(line: 55, column: 2, scope: !11582, inlinedAt: !12791)
!12791 = distinct !DILocation(line: 145, column: 10, scope: !11573, inlinedAt: !12789)
!12792 = !DILocation(line: 0, scope: !11582, inlinedAt: !12791)
!12793 = !DILocation(line: 992, column: 3, scope: !12794)
!12794 = distinct !DILexicalBlock(scope: !12795, file: !2238, line: 989, column: 26)
!12795 = distinct !DILexicalBlock(scope: !12785, file: !2238, line: 989, column: 2)
!12796 = !DILocation(line: 0, scope: !11600, inlinedAt: !12797)
!12797 = distinct !DILocation(line: 989, column: 2, scope: !12795)
!12798 = !DILocation(line: 0, scope: !11608, inlinedAt: !12799)
!12799 = distinct !DILocation(line: 215, column: 2, scope: !11600, inlinedAt: !12797)
!12800 = !DILocation(line: 95, column: 2, scope: !11608, inlinedAt: !12799)
!12801 = !DILocation(line: 994, column: 1, scope: !12782)
!12802 = distinct !DISubprogram(name: "z_sched_lock", scope: !10845, file: !10845, line: 251, type: !2860, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !474)
!12803 = !DILocation(line: 256, column: 4, scope: !12802)
!12804 = !DILocation(line: 256, column: 19, scope: !12802)
!12805 = !DILocation(line: 256, column: 2, scope: !12802)
!12806 = !DILocation(line: 258, column: 2, scope: !12807)
!12807 = distinct !DILexicalBlock(scope: !12802, file: !10845, line: 258, column: 2)
!12808 = !{i64 2154966053}
!12809 = !DILocation(line: 259, column: 1, scope: !12802)
!12810 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2238, file: !2238, line: 996, type: !2860, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12811)
!12811 = !{!12812, !12814}
!12812 = !DILocalVariable(name: "__i", scope: !12813, file: !2238, line: 998, type: !11565)
!12813 = distinct !DILexicalBlock(scope: !12810, file: !2238, line: 998, column: 2)
!12814 = !DILocalVariable(name: "__key", scope: !12813, file: !2238, line: 998, type: !11565)
!12815 = !DILocation(line: 0, scope: !12813)
!12816 = !DILocation(line: 0, scope: !11573, inlinedAt: !12817)
!12817 = distinct !DILocation(line: 998, column: 2, scope: !12813)
!12818 = !DILocation(line: 55, column: 2, scope: !11582, inlinedAt: !12819)
!12819 = distinct !DILocation(line: 145, column: 10, scope: !11573, inlinedAt: !12817)
!12820 = !DILocation(line: 0, scope: !11582, inlinedAt: !12819)
!12821 = !DILocation(line: 1002, column: 5, scope: !12822)
!12822 = distinct !DILexicalBlock(scope: !12823, file: !2238, line: 998, column: 26)
!12823 = distinct !DILexicalBlock(scope: !12813, file: !2238, line: 998, column: 2)
!12824 = !DILocation(line: 1002, column: 20, scope: !12822)
!12825 = !DILocation(line: 1002, column: 3, scope: !12822)
!12826 = !DILocation(line: 1003, column: 3, scope: !12822)
!12827 = !DILocation(line: 0, scope: !11600, inlinedAt: !12828)
!12828 = distinct !DILocation(line: 998, column: 2, scope: !12823)
!12829 = !DILocation(line: 0, scope: !11608, inlinedAt: !12830)
!12830 = distinct !DILocation(line: 215, column: 2, scope: !11600, inlinedAt: !12828)
!12831 = !DILocation(line: 95, column: 2, scope: !11608, inlinedAt: !12830)
!12832 = !DILocation(line: 1011, column: 2, scope: !12810)
!12833 = !DILocation(line: 1012, column: 1, scope: !12810)
!12834 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2238, file: !2238, line: 1014, type: !11881, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !474)
!12835 = !DILocation(line: 1028, column: 25, scope: !12834)
!12836 = !DILocation(line: 1028, column: 2, scope: !12834)
!12837 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2238, file: !2238, line: 1155, type: !12838, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12840)
!12838 = !DISubroutineType(types: !12839)
!12839 = !{!163, !2162, !2162}
!12840 = !{!12841, !12842, !12843, !12844, !12845}
!12841 = !DILocalVariable(name: "a", arg: 1, scope: !12837, file: !2238, line: 1155, type: !2162)
!12842 = !DILocalVariable(name: "b", arg: 2, scope: !12837, file: !2238, line: 1155, type: !2162)
!12843 = !DILocalVariable(name: "thread_a", scope: !12837, file: !2238, line: 1157, type: !2133)
!12844 = !DILocalVariable(name: "thread_b", scope: !12837, file: !2238, line: 1157, type: !2133)
!12845 = !DILocalVariable(name: "cmp", scope: !12837, file: !2238, line: 1158, type: !736)
!12846 = !DILocation(line: 0, scope: !12837)
!12847 = !DILocation(line: 1160, column: 13, scope: !12837)
!12848 = !DILocation(line: 1161, column: 13, scope: !12837)
!12849 = !DILocation(line: 1163, column: 8, scope: !12837)
!12850 = !DILocation(line: 1165, column: 10, scope: !12851)
!12851 = distinct !DILexicalBlock(scope: !12837, file: !2238, line: 1165, column: 6)
!12852 = !DILocation(line: 1165, column: 6, scope: !12837)
!12853 = !DILocation(line: 1167, column: 17, scope: !12854)
!12854 = distinct !DILexicalBlock(scope: !12851, file: !2238, line: 1167, column: 13)
!12855 = !DILocation(line: 1167, column: 13, scope: !12851)
!12856 = !DILocation(line: 1170, column: 25, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12854, file: !2238, line: 1169, column: 9)
!12858 = !DILocation(line: 1170, column: 52, scope: !12857)
!12859 = !DILocation(line: 1170, column: 35, scope: !12857)
!12860 = !DILocation(line: 1170, column: 3, scope: !12857)
!12861 = !DILocation(line: 0, scope: !12851)
!12862 = !DILocation(line: 1173, column: 1, scope: !12837)
!12863 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2238, file: !2238, line: 1175, type: !12864, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12879)
!12864 = !DISubroutineType(types: !12865)
!12865 = !{null, !12866, !2133}
!12866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12867, size: 32)
!12867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !12868, line: 37, size: 128, elements: !12869)
!12868 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12869 = !{!12870, !12878}
!12870 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !12867, file: !12868, line: 38, baseType: !12871, size: 96)
!12871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !389, line: 83, size: 96, elements: !12872)
!12872 = !{!12873, !12874, !12877}
!12873 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !12871, file: !389, line: 84, baseType: !2162, size: 32)
!12874 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !12871, file: !389, line: 85, baseType: !12875, size: 32, offset: 32)
!12875 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !389, line: 81, baseType: !12876)
!12876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12838, size: 32)
!12877 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !12871, file: !389, line: 86, baseType: !103, size: 32, offset: 64)
!12878 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !12867, file: !12868, line: 39, baseType: !103, size: 32, offset: 96)
!12879 = !{!12880, !12881, !12882, !12883, !12892}
!12880 = !DILocalVariable(name: "pq", arg: 1, scope: !12863, file: !2238, line: 1175, type: !12866)
!12881 = !DILocalVariable(name: "thread", arg: 2, scope: !12863, file: !2238, line: 1175, type: !2133)
!12882 = !DILocalVariable(name: "t", scope: !12863, file: !2238, line: 1177, type: !2133)
!12883 = !DILocalVariable(name: "__f", scope: !12884, file: !2238, line: 1190, type: !12887)
!12884 = distinct !DILexicalBlock(scope: !12885, file: !2238, line: 1190, column: 3)
!12885 = distinct !DILexicalBlock(scope: !12886, file: !2238, line: 1189, column: 27)
!12886 = distinct !DILexicalBlock(scope: !12863, file: !2238, line: 1189, column: 6)
!12887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !389, line: 155, size: 96, elements: !12888)
!12888 = !{!12889, !12890, !12891}
!12889 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !12887, file: !389, line: 156, baseType: !2233, size: 32)
!12890 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !12887, file: !389, line: 157, baseType: !1785, size: 32, offset: 32)
!12891 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !12887, file: !389, line: 158, baseType: !736, size: 32, offset: 64)
!12892 = !DILocalVariable(name: "n", scope: !12893, file: !2238, line: 1190, type: !2162)
!12893 = distinct !DILexicalBlock(scope: !12894, file: !2238, line: 1190, column: 3)
!12894 = distinct !DILexicalBlock(scope: !12884, file: !2238, line: 1190, column: 3)
!12895 = !DILocation(line: 0, scope: !12863)
!12896 = !DILocation(line: 1181, column: 31, scope: !12863)
!12897 = !DILocation(line: 1181, column: 45, scope: !12863)
!12898 = !DILocation(line: 1181, column: 15, scope: !12863)
!12899 = !DILocation(line: 1181, column: 25, scope: !12863)
!12900 = !DILocation(line: 1189, column: 11, scope: !12886)
!12901 = !DILocation(line: 1189, column: 7, scope: !12886)
!12902 = !DILocation(line: 1189, column: 6, scope: !12863)
!12903 = !DILocation(line: 1190, column: 3, scope: !12884)
!12904 = !DILocation(line: 1190, column: 3, scope: !12893)
!12905 = !DILocation(line: 0, scope: !12893)
!12906 = !DILocation(line: 1190, column: 3, scope: !12894)
!12907 = !DILocation(line: 1193, column: 2, scope: !12885)
!12908 = !DILocation(line: 1191, column: 42, scope: !12909)
!12909 = distinct !DILexicalBlock(scope: !12894, file: !2238, line: 1190, column: 54)
!12910 = !DILocation(line: 1191, column: 12, scope: !12909)
!12911 = !DILocation(line: 1191, column: 22, scope: !12909)
!12912 = distinct !{!12912, !12903, !12913}
!12913 = !DILocation(line: 1192, column: 3, scope: !12884)
!12914 = !DILocation(line: 1195, column: 17, scope: !12863)
!12915 = !DILocation(line: 1195, column: 37, scope: !12863)
!12916 = !DILocation(line: 1195, column: 2, scope: !12863)
!12917 = !DILocation(line: 1196, column: 1, scope: !12863)
!12918 = !DISubprogram(name: "z_rb_foreach_next", scope: !389, file: !389, line: 176, type: !12919, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !474)
!12919 = !DISubroutineType(types: !12920)
!12920 = !{!2162, !12921, !12922}
!12921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12871, size: 32)
!12922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12887, size: 32)
!12923 = !DISubprogram(name: "rb_insert", scope: !389, file: !389, line: 105, type: !12924, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !474)
!12924 = !DISubroutineType(types: !12925)
!12925 = !{null, !12921, !2162}
!12926 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2238, file: !2238, line: 1198, type: !12864, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12927)
!12927 = !{!12928, !12929}
!12928 = !DILocalVariable(name: "pq", arg: 1, scope: !12926, file: !2238, line: 1198, type: !12866)
!12929 = !DILocalVariable(name: "thread", arg: 2, scope: !12926, file: !2238, line: 1198, type: !2133)
!12930 = !DILocation(line: 0, scope: !12926)
!12931 = !DILocation(line: 1202, column: 17, scope: !12926)
!12932 = !DILocation(line: 1202, column: 37, scope: !12926)
!12933 = !DILocation(line: 1202, column: 2, scope: !12926)
!12934 = !DILocation(line: 1204, column: 16, scope: !12935)
!12935 = distinct !DILexicalBlock(scope: !12926, file: !2238, line: 1204, column: 6)
!12936 = !DILocation(line: 1204, column: 7, scope: !12935)
!12937 = !DILocation(line: 1204, column: 6, scope: !12926)
!12938 = !DILocation(line: 1205, column: 7, scope: !12939)
!12939 = distinct !DILexicalBlock(scope: !12935, file: !2238, line: 1204, column: 22)
!12940 = !DILocation(line: 1205, column: 22, scope: !12939)
!12941 = !DILocation(line: 1206, column: 2, scope: !12939)
!12942 = !DILocation(line: 1207, column: 1, scope: !12926)
!12943 = !DISubprogram(name: "rb_remove", scope: !389, file: !389, line: 110, type: !12924, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !474)
!12944 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2238, file: !2238, line: 1209, type: !12945, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12947)
!12945 = !DISubroutineType(types: !12946)
!12946 = !{!2133, !12866}
!12947 = !{!12948, !12949, !12950}
!12948 = !DILocalVariable(name: "pq", arg: 1, scope: !12944, file: !2238, line: 1209, type: !12866)
!12949 = !DILocalVariable(name: "thread", scope: !12944, file: !2238, line: 1211, type: !2133)
!12950 = !DILocalVariable(name: "n", scope: !12944, file: !2238, line: 1212, type: !2162)
!12951 = !DILocation(line: 0, scope: !12944)
!12952 = !DILocation(line: 1212, column: 37, scope: !12944)
!12953 = !DILocation(line: 1212, column: 21, scope: !12944)
!12954 = !DILocation(line: 1217, column: 2, scope: !12944)
!12955 = distinct !DISubprogram(name: "rb_get_min", scope: !389, file: !389, line: 115, type: !12956, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12958)
!12956 = !DISubroutineType(types: !12957)
!12957 = !{!2162, !12921}
!12958 = !{!12959}
!12959 = !DILocalVariable(name: "tree", arg: 1, scope: !12955, file: !389, line: 115, type: !12921)
!12960 = !DILocation(line: 0, scope: !12955)
!12961 = !DILocation(line: 117, column: 9, scope: !12955)
!12962 = !DILocation(line: 117, column: 2, scope: !12955)
!12963 = !DISubprogram(name: "z_rb_get_minmax", scope: !389, file: !389, line: 100, type: !12964, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !474)
!12964 = !DISubroutineType(types: !12965)
!12965 = !{!2162, !12921, !160}
!12966 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2238, file: !2238, line: 1246, type: !12967, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12977)
!12967 = !DISubroutineType(types: !12968)
!12968 = !{!2133, !12969}
!12969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12970, size: 32)
!12970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !12868, line: 53, size: 2080, elements: !12971)
!12971 = !{!12972, !12976}
!12972 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !12970, file: !12868, line: 54, baseType: !12973, size: 2048)
!12973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2169, size: 2048, elements: !12974)
!12974 = !{!12975}
!12975 = !DISubrange(count: 32)
!12976 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !12970, file: !12868, line: 55, baseType: !32, size: 32, offset: 2048)
!12977 = !{!12978, !12979, !12980, !12981}
!12978 = !DILocalVariable(name: "pq", arg: 1, scope: !12966, file: !2238, line: 1246, type: !12969)
!12979 = !DILocalVariable(name: "thread", scope: !12966, file: !2238, line: 1252, type: !2133)
!12980 = !DILocalVariable(name: "l", scope: !12966, file: !2238, line: 1253, type: !11776)
!12981 = !DILocalVariable(name: "n", scope: !12966, file: !2238, line: 1254, type: !2234)
!12982 = !DILocation(line: 0, scope: !12966)
!12983 = !DILocation(line: 1248, column: 11, scope: !12984)
!12984 = distinct !DILexicalBlock(scope: !12966, file: !2238, line: 1248, column: 6)
!12985 = !DILocation(line: 1248, column: 7, scope: !12984)
!12986 = !DILocation(line: 1248, column: 6, scope: !12966)
!12987 = !DILocation(line: 1253, column: 31, scope: !12966)
!12988 = !DILocation(line: 1253, column: 20, scope: !12966)
!12989 = !DILocation(line: 1254, column: 19, scope: !12966)
!12990 = !DILocation(line: 1260, column: 1, scope: !12966)
!12991 = distinct !DISubprogram(name: "z_unpend_all", scope: !2238, file: !2238, line: 1262, type: !12992, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !12994)
!12992 = !DISubroutineType(types: !12993)
!12993 = !{!103, !2164}
!12994 = !{!12995, !12996, !12997}
!12995 = !DILocalVariable(name: "wait_q", arg: 1, scope: !12991, file: !2238, line: 1262, type: !2164)
!12996 = !DILocalVariable(name: "need_sched", scope: !12991, file: !2238, line: 1264, type: !103)
!12997 = !DILocalVariable(name: "thread", scope: !12991, file: !2238, line: 1265, type: !2133)
!12998 = !DILocation(line: 0, scope: !12991)
!12999 = !DILocation(line: 1267, column: 19, scope: !12991)
!13000 = !DILocation(line: 1267, column: 41, scope: !12991)
!13001 = !DILocation(line: 1267, column: 2, scope: !12991)
!13002 = !DILocation(line: 1268, column: 3, scope: !13003)
!13003 = distinct !DILexicalBlock(scope: !12991, file: !2238, line: 1267, column: 50)
!13004 = !DILocation(line: 1269, column: 3, scope: !13003)
!13005 = distinct !{!13005, !13001, !13006}
!13006 = !DILocation(line: 1271, column: 2, scope: !12991)
!13007 = !DILocation(line: 1273, column: 2, scope: !12991)
!13008 = distinct !DISubprogram(name: "z_waitq_head", scope: !11171, file: !11171, line: 52, type: !12624, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !13009)
!13009 = !{!13010}
!13010 = !DILocalVariable(name: "w", arg: 1, scope: !13008, file: !11171, line: 52, type: !2164)
!13011 = !DILocation(line: 0, scope: !13008)
!13012 = !DILocation(line: 54, column: 52, scope: !13008)
!13013 = !DILocation(line: 54, column: 28, scope: !13008)
!13014 = !DILocation(line: 54, column: 9, scope: !13008)
!13015 = !DILocation(line: 54, column: 2, scope: !13008)
!13016 = distinct !DISubprogram(name: "init_ready_q", scope: !2238, file: !2238, line: 1276, type: !13017, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !13024)
!13017 = !DISubroutineType(types: !13018)
!13018 = !{null, !13019}
!13019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13020, size: 32)
!13020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !399, line: 83, size: 96, elements: !13021)
!13021 = !{!13022, !13023}
!13022 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !13020, file: !399, line: 86, baseType: !2133, size: 32)
!13023 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !13020, file: !399, line: 90, baseType: !2169, size: 64, offset: 32)
!13024 = !{!13025}
!13025 = !DILocalVariable(name: "rq", arg: 1, scope: !13016, file: !2238, line: 1276, type: !13019)
!13026 = !DILocation(line: 0, scope: !13016)
!13027 = !DILocation(line: 1289, column: 22, scope: !13016)
!13028 = !DILocation(line: 1289, column: 2, scope: !13016)
!13029 = !DILocation(line: 1291, column: 1, scope: !13016)
!13030 = distinct !DISubprogram(name: "sys_dlist_init", scope: !373, file: !373, line: 197, type: !13031, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !13033)
!13031 = !DISubroutineType(types: !13032)
!13032 = !{null, !11776}
!13033 = !{!13034}
!13034 = !DILocalVariable(name: "list", arg: 1, scope: !13030, file: !373, line: 197, type: !11776)
!13035 = !DILocation(line: 0, scope: !13030)
!13036 = !DILocation(line: 199, column: 8, scope: !13030)
!13037 = !DILocation(line: 199, column: 13, scope: !13030)
!13038 = !DILocation(line: 200, column: 8, scope: !13030)
!13039 = !DILocation(line: 200, column: 13, scope: !13030)
!13040 = !DILocation(line: 201, column: 1, scope: !13030)
!13041 = distinct !DISubprogram(name: "z_sched_init", scope: !2238, file: !2238, line: 1293, type: !2860, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !474)
!13042 = !DILocation(line: 1302, column: 2, scope: !13041)
!13043 = !DILocation(line: 1306, column: 2, scope: !13041)
!13044 = !DILocation(line: 1309, column: 1, scope: !13041)
!13045 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2238, file: !2238, line: 1311, type: !13046, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !13049)
!13046 = !DISubroutineType(types: !13047)
!13047 = !{!103, !13048}
!13048 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !363, line: 347, baseType: !2133)
!13049 = !{!13050}
!13050 = !DILocalVariable(name: "thread", arg: 1, scope: !13045, file: !2238, line: 1311, type: !13048)
!13051 = !DILocation(line: 0, scope: !13045)
!13052 = !DILocation(line: 1313, column: 22, scope: !13045)
!13053 = !DILocation(line: 1313, column: 9, scope: !13045)
!13054 = !DILocation(line: 1313, column: 2, scope: !13045)
!13055 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2238, file: !2238, line: 1325, type: !13056, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !13058)
!13056 = !DISubroutineType(types: !13057)
!13057 = !{null, !13048, !103}
!13058 = !{!13059, !13060, !13061}
!13059 = !DILocalVariable(name: "thread", arg: 1, scope: !13055, file: !2238, line: 1325, type: !13048)
!13060 = !DILocalVariable(name: "prio", arg: 2, scope: !13055, file: !2238, line: 1325, type: !103)
!13061 = !DILocalVariable(name: "th", scope: !13055, file: !2238, line: 1334, type: !2133)
!13062 = !DILocation(line: 0, scope: !13055)
!13063 = !DILocation(line: 1336, column: 2, scope: !13055)
!13064 = !DILocation(line: 1337, column: 1, scope: !13055)
!13065 = distinct !DISubprogram(name: "k_can_yield", scope: !2238, file: !2238, line: 1384, type: !5703, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !474)
!13066 = !DILocation(line: 1386, column: 11, scope: !13065)
!13067 = !DILocation(line: 1386, column: 29, scope: !13065)
!13068 = !DILocation(line: 1386, column: 32, scope: !13065)
!13069 = !DILocation(line: 1386, column: 46, scope: !13065)
!13070 = !DILocation(line: 1387, column: 28, scope: !13065)
!13071 = !DILocation(line: 1387, column: 4, scope: !13065)
!13072 = !DILocation(line: 1386, column: 2, scope: !13065)
!13073 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !459, file: !459, line: 989, type: !5703, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !474)
!13074 = !DILocation(line: 993, column: 10, scope: !13073)
!13075 = !DILocation(line: 993, column: 2, scope: !13073)
!13076 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2238, file: !2238, line: 1390, type: !2860, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !13077)
!13077 = !{!13078}
!13078 = !DILocalVariable(name: "key", scope: !13076, file: !2238, line: 1396, type: !11565)
!13079 = !DILocation(line: 0, scope: !11573, inlinedAt: !13080)
!13080 = distinct !DILocation(line: 1396, column: 25, scope: !13076)
!13081 = !DILocation(line: 55, column: 2, scope: !11582, inlinedAt: !13082)
!13082 = distinct !DILocation(line: 145, column: 10, scope: !11573, inlinedAt: !13080)
!13083 = !DILocation(line: 0, scope: !11582, inlinedAt: !13082)
!13084 = !DILocation(line: 0, scope: !13076)
!13085 = !DILocation(line: 1400, column: 18, scope: !13086)
!13086 = distinct !DILexicalBlock(scope: !13087, file: !2238, line: 1399, column: 36)
!13087 = distinct !DILexicalBlock(scope: !13076, file: !2238, line: 1398, column: 6)
!13088 = !DILocation(line: 0, scope: !11742, inlinedAt: !13089)
!13089 = distinct !DILocation(line: 1400, column: 3, scope: !13086)
!13090 = !DILocation(line: 266, column: 15, scope: !11742, inlinedAt: !13089)
!13091 = !DILocation(line: 266, column: 28, scope: !11742, inlinedAt: !13089)
!13092 = !DILocation(line: 0, scope: !11750, inlinedAt: !13093)
!13093 = distinct !DILocation(line: 268, column: 3, scope: !11754, inlinedAt: !13089)
!13094 = !DILocation(line: 234, column: 2, scope: !11750, inlinedAt: !13093)
!13095 = !DILocation(line: 1402, column: 15, scope: !13076)
!13096 = !DILocation(line: 0, scope: !11759, inlinedAt: !13097)
!13097 = distinct !DILocation(line: 1402, column: 2, scope: !13076)
!13098 = !DILocation(line: 252, column: 15, scope: !11759, inlinedAt: !13097)
!13099 = !DILocation(line: 252, column: 28, scope: !11759, inlinedAt: !13097)
!13100 = !DILocation(line: 0, scope: !11766, inlinedAt: !13101)
!13101 = distinct !DILocation(line: 254, column: 3, scope: !11770, inlinedAt: !13097)
!13102 = !DILocation(line: 0, scope: !11773, inlinedAt: !13103)
!13103 = distinct !DILocation(line: 229, column: 2, scope: !11766, inlinedAt: !13101)
!13104 = !DILocation(line: 188, column: 2, scope: !11783, inlinedAt: !13103)
!13105 = !DILocation(line: 188, column: 2, scope: !11785, inlinedAt: !13103)
!13106 = !DILocation(line: 0, scope: !11783, inlinedAt: !13103)
!13107 = !DILocation(line: 189, column: 7, scope: !11788, inlinedAt: !13103)
!13108 = !DILocation(line: 189, column: 35, scope: !11788, inlinedAt: !13103)
!13109 = !DILocation(line: 189, column: 7, scope: !11789, inlinedAt: !13103)
!13110 = !DILocation(line: 191, column: 21, scope: !11793, inlinedAt: !13103)
!13111 = !DILocation(line: 190, column: 4, scope: !11793, inlinedAt: !13103)
!13112 = !DILocation(line: 192, column: 4, scope: !11793, inlinedAt: !13103)
!13113 = distinct !{!13113, !13104, !13114}
!13114 = !DILocation(line: 194, column: 2, scope: !11783, inlinedAt: !13103)
!13115 = !DILocation(line: 196, column: 37, scope: !11773, inlinedAt: !13103)
!13116 = !DILocation(line: 196, column: 2, scope: !11773, inlinedAt: !13103)
!13117 = !DILocation(line: 197, column: 1, scope: !11773, inlinedAt: !13103)
!13118 = !DILocation(line: 1403, column: 2, scope: !13076)
!13119 = !DILocation(line: 0, scope: !12184, inlinedAt: !13120)
!13120 = distinct !DILocation(line: 1404, column: 2, scope: !13076)
!13121 = !DILocation(line: 196, column: 9, scope: !12184, inlinedAt: !13120)
!13122 = !DILocation(line: 1405, column: 1, scope: !13076)
!13123 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2238, file: !2238, line: 1459, type: !13124, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !13126)
!13124 = !DISubroutineType(types: !13125)
!13125 = !{!736, !12364}
!13126 = !{!13127, !13128, !13129}
!13127 = !DILocalVariable(name: "timeout", arg: 1, scope: !13123, file: !2238, line: 1459, type: !12364)
!13128 = !DILocalVariable(name: "ticks", scope: !13123, file: !2238, line: 1461, type: !1490)
!13129 = !DILocalVariable(name: "ret", scope: !13123, file: !2238, line: 1480, type: !736)
!13130 = !DILocation(line: 0, scope: !13123)
!13131 = !DILocation(line: 1468, column: 6, scope: !13132)
!13132 = distinct !DILexicalBlock(scope: !13123, file: !2238, line: 1468, column: 6)
!13133 = !DILocation(line: 1468, column: 6, scope: !13123)
!13134 = !DILocation(line: 1469, column: 20, scope: !13135)
!13135 = distinct !DILexicalBlock(scope: !13132, file: !2238, line: 1468, column: 40)
!13136 = !DILocation(line: 1469, column: 3, scope: !13135)
!13137 = !DILocation(line: 1473, column: 3, scope: !13135)
!13138 = !DILocation(line: 1478, column: 10, scope: !13123)
!13139 = !DILocation(line: 1480, column: 16, scope: !13123)
!13140 = !DILocation(line: 1485, column: 1, scope: !13123)
!13141 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3288, file: !3288, line: 310, type: !13142, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !13144)
!13142 = !DISubroutineType(types: !13143)
!13143 = !{null, !13048}
!13144 = !{!13145}
!13145 = !DILocalVariable(name: "thread", arg: 1, scope: !13141, file: !3288, line: 310, type: !13048)
!13146 = !DILocation(line: 0, scope: !13141)
!13147 = !DILocation(line: 319, column: 2, scope: !13148)
!13148 = distinct !DILexicalBlock(scope: !13141, file: !3288, line: 319, column: 2)
!13149 = !{i64 2154884442}
!13150 = !DILocation(line: 320, column: 2, scope: !13141)
!13151 = !DILocation(line: 321, column: 1, scope: !13141)
!13152 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2238, file: !2238, line: 1415, type: !13153, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !13155)
!13153 = !DISubroutineType(types: !13154)
!13154 = !{!736, !1490}
!13155 = !{!13156, !13157, !13158, !13159}
!13156 = !DILocalVariable(name: "ticks", arg: 1, scope: !13152, file: !2238, line: 1415, type: !1490)
!13157 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !13152, file: !2238, line: 1418, type: !106)
!13158 = !DILocalVariable(name: "timeout", scope: !13152, file: !2238, line: 1430, type: !12364)
!13159 = !DILocalVariable(name: "key", scope: !13152, file: !2238, line: 1437, type: !11565)
!13160 = !DILocation(line: 0, scope: !13152)
!13161 = !DILocation(line: 1425, column: 12, scope: !13162)
!13162 = distinct !DILexicalBlock(scope: !13152, file: !2238, line: 1425, column: 6)
!13163 = !DILocation(line: 1425, column: 6, scope: !13152)
!13164 = !DILocation(line: 1426, column: 3, scope: !13165)
!13165 = distinct !DILexicalBlock(scope: !13162, file: !2238, line: 1425, column: 18)
!13166 = !DILocation(line: 1427, column: 3, scope: !13165)
!13167 = !DILocation(line: 1431, column: 24, scope: !13168)
!13168 = distinct !DILexicalBlock(scope: !13152, file: !2238, line: 1431, column: 6)
!13169 = !DILocation(line: 1431, column: 6, scope: !13152)
!13170 = !DILocation(line: 1432, column: 35, scope: !13171)
!13171 = distinct !DILexicalBlock(scope: !13168, file: !2238, line: 1431, column: 30)
!13172 = !DILocation(line: 1432, column: 27, scope: !13171)
!13173 = !DILocation(line: 1433, column: 2, scope: !13171)
!13174 = !DILocation(line: 1434, column: 27, scope: !13175)
!13175 = distinct !DILexicalBlock(scope: !13168, file: !2238, line: 1433, column: 9)
!13176 = !DILocation(line: 0, scope: !13168)
!13177 = !DILocation(line: 0, scope: !11573, inlinedAt: !13178)
!13178 = distinct !DILocation(line: 1437, column: 25, scope: !13152)
!13179 = !DILocation(line: 55, column: 2, scope: !11582, inlinedAt: !13180)
!13180 = distinct !DILocation(line: 145, column: 10, scope: !11573, inlinedAt: !13178)
!13181 = !DILocation(line: 0, scope: !11582, inlinedAt: !13180)
!13182 = !DILocation(line: 1440, column: 20, scope: !13152)
!13183 = !DILocation(line: 1440, column: 18, scope: !13152)
!13184 = !DILocation(line: 1442, column: 2, scope: !13152)
!13185 = !DILocation(line: 1443, column: 23, scope: !13152)
!13186 = !DILocation(line: 1443, column: 2, scope: !13152)
!13187 = !DILocation(line: 1444, column: 29, scope: !13152)
!13188 = !DILocation(line: 1444, column: 2, scope: !13152)
!13189 = !DILocation(line: 0, scope: !12184, inlinedAt: !13190)
!13190 = distinct !DILocation(line: 1446, column: 8, scope: !13152)
!13191 = !DILocation(line: 196, column: 9, scope: !12184, inlinedAt: !13190)
!13192 = !DILocation(line: 1450, column: 10, scope: !13152)
!13193 = !DILocation(line: 1450, column: 45, scope: !13152)
!13194 = !DILocation(line: 1450, column: 43, scope: !13152)
!13195 = !DILocation(line: 1451, column: 6, scope: !13152)
!13196 = !DILocation(line: 1457, column: 1, scope: !13152)
!13197 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !11406, file: !11406, line: 1103, type: !11407, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !13198)
!13198 = !{!13199}
!13199 = !DILocalVariable(name: "t", arg: 1, scope: !13197, file: !11406, line: 1103, type: !1402)
!13200 = !DILocation(line: 0, scope: !13197)
!13201 = !DILocation(line: 0, scope: !11620, inlinedAt: !13202)
!13202 = distinct !DILocation(line: 1106, column: 9, scope: !13197)
!13203 = !DILocation(line: 139, column: 13, scope: !13204, inlinedAt: !13202)
!13204 = distinct !DILexicalBlock(scope: !13205, file: !11406, line: 138, column: 10)
!13205 = distinct !DILexicalBlock(scope: !13206, file: !11406, line: 136, column: 7)
!13206 = distinct !DILexicalBlock(scope: !11641, file: !11406, line: 134, column: 17)
!13207 = !DILocation(line: 1106, column: 2, scope: !13197)
!13208 = distinct !DISubprogram(name: "k_yield", scope: !3288, file: !3288, line: 140, type: !2860, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !474)
!13209 = !DILocation(line: 148, column: 2, scope: !13210)
!13210 = distinct !DILexicalBlock(scope: !13208, file: !3288, line: 148, column: 2)
!13211 = !{i64 2154883762}
!13212 = !DILocation(line: 149, column: 2, scope: !13208)
!13213 = !DILocation(line: 150, column: 1, scope: !13208)
!13214 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2238, file: !2238, line: 1495, type: !13215, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !13217)
!13215 = !DISubroutineType(types: !13216)
!13216 = !{!736, !103}
!13217 = !{!13218, !13219}
!13218 = !DILocalVariable(name: "us", arg: 1, scope: !13214, file: !2238, line: 1495, type: !103)
!13219 = !DILocalVariable(name: "ticks", scope: !13214, file: !2238, line: 1497, type: !736)
!13220 = !DILocation(line: 0, scope: !13214)
!13221 = !DILocation(line: 1501, column: 31, scope: !13214)
!13222 = !DILocation(line: 1501, column: 10, scope: !13214)
!13223 = !DILocation(line: 1502, column: 23, scope: !13214)
!13224 = !DILocation(line: 1502, column: 10, scope: !13214)
!13225 = !DILocation(line: 1506, column: 31, scope: !13214)
!13226 = !DILocation(line: 1506, column: 9, scope: !13214)
!13227 = !DILocation(line: 1506, column: 2, scope: !13214)
!13228 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !11406, file: !11406, line: 571, type: !11407, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !13229)
!13229 = !{!13230}
!13230 = !DILocalVariable(name: "t", arg: 1, scope: !13228, file: !11406, line: 571, type: !1402)
!13231 = !DILocation(line: 0, scope: !13228)
!13232 = !DILocation(line: 0, scope: !11620, inlinedAt: !13233)
!13233 = distinct !DILocation(line: 574, column: 9, scope: !13228)
!13234 = !DILocation(line: 135, column: 5, scope: !13206, inlinedAt: !13233)
!13235 = !DILocation(line: 139, column: 13, scope: !13204, inlinedAt: !13233)
!13236 = !DILocation(line: 574, column: 2, scope: !13228)
!13237 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !11406, file: !11406, line: 1187, type: !11407, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !13238)
!13238 = !{!13239}
!13239 = !DILocalVariable(name: "t", arg: 1, scope: !13237, file: !11406, line: 1187, type: !1402)
!13240 = !DILocation(line: 0, scope: !13237)
!13241 = !DILocation(line: 0, scope: !11620, inlinedAt: !13242)
!13242 = distinct !DILocation(line: 1190, column: 9, scope: !13237)
!13243 = !DILocation(line: 145, column: 13, scope: !13244, inlinedAt: !13242)
!13244 = distinct !DILexicalBlock(scope: !11638, file: !11406, line: 144, column: 10)
!13245 = !DILocation(line: 1190, column: 2, scope: !13237)
!13246 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2238, file: !2238, line: 1517, type: !13142, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !13247)
!13247 = !{!13248}
!13248 = !DILocalVariable(name: "thread", arg: 1, scope: !13246, file: !2238, line: 1517, type: !13048)
!13249 = !DILocation(line: 0, scope: !13246)
!13250 = !DILocation(line: 1521, column: 6, scope: !13251)
!13251 = distinct !DILexicalBlock(scope: !13246, file: !2238, line: 1521, column: 6)
!13252 = !DILocation(line: 1521, column: 6, scope: !13246)
!13253 = !DILocation(line: 1525, column: 6, scope: !13254)
!13254 = distinct !DILexicalBlock(scope: !13246, file: !2238, line: 1525, column: 6)
!13255 = !DILocation(line: 1525, column: 37, scope: !13254)
!13256 = !DILocation(line: 1525, column: 6, scope: !13246)
!13257 = !DILocation(line: 1527, column: 20, scope: !13258)
!13258 = distinct !DILexicalBlock(scope: !13259, file: !2238, line: 1527, column: 7)
!13259 = distinct !DILexicalBlock(scope: !13254, file: !2238, line: 1525, column: 42)
!13260 = !DILocation(line: 1527, column: 33, scope: !13258)
!13261 = !DILocation(line: 1527, column: 7, scope: !13259)
!13262 = !DILocation(line: 1532, column: 2, scope: !13246)
!13263 = !DILocation(line: 1533, column: 2, scope: !13246)
!13264 = !DILocation(line: 1031, column: 3, scope: !12217, inlinedAt: !13265)
!13265 = distinct !DILocation(line: 48, column: 10, scope: !12221, inlinedAt: !13266)
!13266 = distinct !DILocation(line: 1537, column: 7, scope: !13267)
!13267 = distinct !DILexicalBlock(scope: !13246, file: !2238, line: 1537, column: 6)
!13268 = !DILocation(line: 0, scope: !12217, inlinedAt: !13265)
!13269 = !DILocation(line: 48, column: 9, scope: !12221, inlinedAt: !13266)
!13270 = !DILocation(line: 1537, column: 6, scope: !13246)
!13271 = !DILocation(line: 1538, column: 3, scope: !13272)
!13272 = distinct !DILexicalBlock(scope: !13267, file: !2238, line: 1537, column: 25)
!13273 = !DILocation(line: 1539, column: 2, scope: !13272)
!13274 = !DILocation(line: 1540, column: 1, scope: !13246)
!13275 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !10845, file: !10845, line: 101, type: !11691, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !13276)
!13276 = !{!13277}
!13277 = !DILocalVariable(name: "thread", arg: 1, scope: !13275, file: !10845, line: 101, type: !2133)
!13278 = !DILocation(line: 0, scope: !13275)
!13279 = !DILocation(line: 103, column: 23, scope: !13275)
!13280 = !DILocation(line: 103, column: 36, scope: !13275)
!13281 = !DILocation(line: 103, column: 55, scope: !13275)
!13282 = !DILocation(line: 103, column: 2, scope: !13275)
!13283 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2238, file: !2238, line: 1567, type: !13284, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !13286)
!13284 = !DISubroutineType(types: !13285)
!13285 = !{!13048}
!13286 = !{!13287}
!13287 = !DILocalVariable(name: "ret", scope: !13283, file: !2238, line: 1577, type: !13048)
!13288 = !DILocation(line: 1577, column: 30, scope: !13283)
!13289 = !DILocation(line: 0, scope: !13283)
!13290 = !DILocation(line: 1582, column: 2, scope: !13283)
!13291 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2238, file: !2238, line: 1593, type: !5978, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !474)
!13292 = !DILocation(line: 1031, column: 3, scope: !12217, inlinedAt: !13293)
!13293 = distinct !DILocation(line: 48, column: 10, scope: !12221, inlinedAt: !13294)
!13294 = distinct !DILocation(line: 1595, column: 10, scope: !13291)
!13295 = !DILocation(line: 0, scope: !12217, inlinedAt: !13293)
!13296 = !DILocation(line: 48, column: 9, scope: !12221, inlinedAt: !13294)
!13297 = !DILocation(line: 1595, column: 27, scope: !13291)
!13298 = !DILocation(line: 1595, column: 41, scope: !13291)
!13299 = !DILocation(line: 1595, column: 30, scope: !13291)
!13300 = !DILocation(line: 1595, column: 2, scope: !13291)
!13301 = distinct !DISubprogram(name: "z_thread_abort", scope: !2238, file: !2238, line: 1725, type: !11531, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !13302)
!13302 = !{!13303, !13304}
!13303 = !DILocalVariable(name: "thread", arg: 1, scope: !13301, file: !2238, line: 1725, type: !2133)
!13304 = !DILocalVariable(name: "key", scope: !13301, file: !2238, line: 1727, type: !11565)
!13305 = !DILocation(line: 0, scope: !13301)
!13306 = !DILocation(line: 0, scope: !11573, inlinedAt: !13307)
!13307 = distinct !DILocation(line: 1727, column: 25, scope: !13301)
!13308 = !DILocation(line: 55, column: 2, scope: !11582, inlinedAt: !13309)
!13309 = distinct !DILocation(line: 145, column: 10, scope: !11573, inlinedAt: !13307)
!13310 = !DILocation(line: 0, scope: !11582, inlinedAt: !13309)
!13311 = !DILocation(line: 1729, column: 20, scope: !13312)
!13312 = distinct !DILexicalBlock(scope: !13301, file: !2238, line: 1729, column: 6)
!13313 = !DILocation(line: 1729, column: 33, scope: !13312)
!13314 = !DILocation(line: 1729, column: 48, scope: !13312)
!13315 = !DILocation(line: 1729, column: 6, scope: !13301)
!13316 = !DILocation(line: 0, scope: !11600, inlinedAt: !13317)
!13317 = distinct !DILocation(line: 1730, column: 3, scope: !13318)
!13318 = distinct !DILexicalBlock(scope: !13312, file: !2238, line: 1729, column: 54)
!13319 = !DILocation(line: 0, scope: !11608, inlinedAt: !13320)
!13320 = distinct !DILocation(line: 215, column: 2, scope: !11600, inlinedAt: !13317)
!13321 = !DILocation(line: 95, column: 2, scope: !11608, inlinedAt: !13320)
!13322 = !DILocation(line: 1732, column: 3, scope: !13323)
!13323 = distinct !DILexicalBlock(scope: !13318, file: !2238, line: 1732, column: 3)
!13324 = !{i64 2155621172, i64 2155621188, i64 2155621214, i64 2155621242, i64 2155621262}
!13325 = !DILocation(line: 1733, column: 3, scope: !13318)
!13326 = !DILocation(line: 1736, column: 20, scope: !13327)
!13327 = distinct !DILexicalBlock(scope: !13301, file: !2238, line: 1736, column: 6)
!13328 = !DILocation(line: 1736, column: 33, scope: !13327)
!13329 = !DILocation(line: 1736, column: 49, scope: !13327)
!13330 = !DILocation(line: 1736, column: 6, scope: !13301)
!13331 = !DILocation(line: 0, scope: !11600, inlinedAt: !13332)
!13332 = distinct !DILocation(line: 1737, column: 3, scope: !13333)
!13333 = distinct !DILexicalBlock(scope: !13327, file: !2238, line: 1736, column: 56)
!13334 = !DILocation(line: 0, scope: !11608, inlinedAt: !13335)
!13335 = distinct !DILocation(line: 215, column: 2, scope: !11600, inlinedAt: !13332)
!13336 = !DILocation(line: 95, column: 2, scope: !11608, inlinedAt: !13335)
!13337 = !DILocation(line: 1738, column: 3, scope: !13333)
!13338 = !DILocation(line: 1775, column: 2, scope: !13301)
!13339 = !DILocation(line: 1776, column: 16, scope: !13340)
!13340 = distinct !DILexicalBlock(scope: !13301, file: !2238, line: 1776, column: 6)
!13341 = !DILocation(line: 1776, column: 13, scope: !13340)
!13342 = !DILocation(line: 1776, column: 25, scope: !13340)
!13343 = !DILocation(line: 1031, column: 3, scope: !12217, inlinedAt: !13344)
!13344 = distinct !DILocation(line: 48, column: 10, scope: !12221, inlinedAt: !13345)
!13345 = distinct !DILocation(line: 1776, column: 29, scope: !13340)
!13346 = !DILocation(line: 0, scope: !12217, inlinedAt: !13344)
!13347 = !DILocation(line: 48, column: 9, scope: !12221, inlinedAt: !13345)
!13348 = !DILocation(line: 1776, column: 6, scope: !13301)
!13349 = !DILocation(line: 0, scope: !12184, inlinedAt: !13350)
!13350 = distinct !DILocation(line: 1777, column: 3, scope: !13351)
!13351 = distinct !DILexicalBlock(scope: !13340, file: !2238, line: 1776, column: 47)
!13352 = !DILocation(line: 196, column: 9, scope: !12184, inlinedAt: !13350)
!13353 = !DILocation(line: 1779, column: 2, scope: !13351)
!13354 = !DILocation(line: 0, scope: !11600, inlinedAt: !13355)
!13355 = distinct !DILocation(line: 1780, column: 2, scope: !13301)
!13356 = !DILocation(line: 0, scope: !11608, inlinedAt: !13357)
!13357 = distinct !DILocation(line: 215, column: 2, scope: !11600, inlinedAt: !13355)
!13358 = !DILocation(line: 95, column: 2, scope: !11608, inlinedAt: !13357)
!13359 = !DILocation(line: 1781, column: 1, scope: !13301)
!13360 = distinct !DISubprogram(name: "end_thread", scope: !2238, file: !2238, line: 1690, type: !11531, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !13361)
!13361 = !{!13362}
!13362 = !DILocalVariable(name: "thread", arg: 1, scope: !13360, file: !2238, line: 1690, type: !2133)
!13363 = !DILocation(line: 0, scope: !13360)
!13364 = !DILocation(line: 1695, column: 20, scope: !13365)
!13365 = distinct !DILexicalBlock(scope: !13360, file: !2238, line: 1695, column: 6)
!13366 = !DILocation(line: 1695, column: 33, scope: !13365)
!13367 = !DILocation(line: 1695, column: 49, scope: !13365)
!13368 = !DILocation(line: 1695, column: 6, scope: !13360)
!13369 = !DILocation(line: 1697, column: 29, scope: !13370)
!13370 = distinct !DILexicalBlock(scope: !13365, file: !2238, line: 1695, column: 56)
!13371 = !DILocation(line: 1698, column: 7, scope: !13372)
!13372 = distinct !DILexicalBlock(scope: !13370, file: !2238, line: 1698, column: 7)
!13373 = !DILocation(line: 1698, column: 7, scope: !13370)
!13374 = !DILocation(line: 0, scope: !11742, inlinedAt: !13375)
!13375 = distinct !DILocation(line: 1699, column: 4, scope: !13376)
!13376 = distinct !DILexicalBlock(scope: !13372, file: !2238, line: 1698, column: 35)
!13377 = !DILocation(line: 266, column: 28, scope: !11742, inlinedAt: !13375)
!13378 = !DILocation(line: 0, scope: !11750, inlinedAt: !13379)
!13379 = distinct !DILocation(line: 268, column: 3, scope: !11754, inlinedAt: !13375)
!13380 = !DILocation(line: 234, column: 2, scope: !11750, inlinedAt: !13379)
!13381 = !DILocation(line: 1700, column: 3, scope: !13376)
!13382 = !DILocation(line: 1701, column: 20, scope: !13383)
!13383 = distinct !DILexicalBlock(scope: !13370, file: !2238, line: 1701, column: 7)
!13384 = !DILocation(line: 1701, column: 30, scope: !13383)
!13385 = !DILocation(line: 1701, column: 7, scope: !13370)
!13386 = !DILocation(line: 1702, column: 4, scope: !13387)
!13387 = distinct !DILexicalBlock(scope: !13383, file: !2238, line: 1701, column: 39)
!13388 = !DILocation(line: 1703, column: 3, scope: !13387)
!13389 = !DILocation(line: 1704, column: 9, scope: !13370)
!13390 = !DILocation(line: 1705, column: 23, scope: !13370)
!13391 = !DILocation(line: 1705, column: 3, scope: !13370)
!13392 = !DILocation(line: 1706, column: 3, scope: !13370)
!13393 = !DILocation(line: 1722, column: 2, scope: !13370)
!13394 = !DILocation(line: 1723, column: 1, scope: !13360)
!13395 = distinct !DISubprogram(name: "unpend_all", scope: !2238, file: !2238, line: 1674, type: !13396, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !13398)
!13396 = !DISubroutineType(types: !13397)
!13397 = !{null, !2164}
!13398 = !{!13399, !13400}
!13399 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13395, file: !2238, line: 1674, type: !2164)
!13400 = !DILocalVariable(name: "thread", scope: !13395, file: !2238, line: 1676, type: !2133)
!13401 = !DILocation(line: 0, scope: !13395)
!13402 = !DILocation(line: 1678, column: 19, scope: !13395)
!13403 = !DILocation(line: 1678, column: 41, scope: !13395)
!13404 = !DILocation(line: 1678, column: 2, scope: !13395)
!13405 = !DILocation(line: 1679, column: 3, scope: !13406)
!13406 = distinct !DILexicalBlock(scope: !13395, file: !2238, line: 1678, column: 50)
!13407 = !DILocation(line: 1680, column: 9, scope: !13406)
!13408 = !DILocalVariable(name: "thread", arg: 1, scope: !13409, file: !10865, line: 65, type: !2133)
!13409 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !10865, file: !10865, line: 65, type: !13410, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !13412)
!13410 = !DISubroutineType(types: !13411)
!13411 = !{null, !2133, !32}
!13412 = !{!13408, !13413}
!13413 = !DILocalVariable(name: "value", arg: 2, scope: !13409, file: !10865, line: 65, type: !32)
!13414 = !DILocation(line: 0, scope: !13409, inlinedAt: !13415)
!13415 = distinct !DILocation(line: 1681, column: 3, scope: !13406)
!13416 = !DILocation(line: 67, column: 15, scope: !13409, inlinedAt: !13415)
!13417 = !DILocation(line: 67, column: 33, scope: !13409, inlinedAt: !13415)
!13418 = !DILocation(line: 1682, column: 3, scope: !13406)
!13419 = distinct !{!13419, !13404, !13420}
!13420 = !DILocation(line: 1683, column: 2, scope: !13395)
!13421 = !DILocation(line: 1684, column: 1, scope: !13395)
!13422 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2238, file: !2238, line: 1794, type: !13423, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !13425)
!13423 = !DISubroutineType(types: !13424)
!13424 = !{!103, !2133, !12364}
!13425 = !{!13426, !13427, !13428, !13429}
!13426 = !DILocalVariable(name: "thread", arg: 1, scope: !13422, file: !2238, line: 1794, type: !2133)
!13427 = !DILocalVariable(name: "timeout", arg: 2, scope: !13422, file: !2238, line: 1794, type: !12364)
!13428 = !DILocalVariable(name: "key", scope: !13422, file: !2238, line: 1796, type: !11565)
!13429 = !DILocalVariable(name: "ret", scope: !13422, file: !2238, line: 1797, type: !103)
!13430 = !DILocation(line: 0, scope: !13422)
!13431 = !DILocation(line: 0, scope: !11573, inlinedAt: !13432)
!13432 = distinct !DILocation(line: 1796, column: 25, scope: !13422)
!13433 = !DILocation(line: 55, column: 2, scope: !11582, inlinedAt: !13434)
!13434 = distinct !DILocation(line: 145, column: 10, scope: !11573, inlinedAt: !13432)
!13435 = !DILocation(line: 0, scope: !11582, inlinedAt: !13434)
!13436 = !DILocation(line: 1801, column: 20, scope: !13437)
!13437 = distinct !DILexicalBlock(scope: !13422, file: !2238, line: 1801, column: 6)
!13438 = !DILocation(line: 1801, column: 33, scope: !13437)
!13439 = !DILocation(line: 1801, column: 49, scope: !13437)
!13440 = !DILocation(line: 1801, column: 6, scope: !13422)
!13441 = !DILocation(line: 1803, column: 13, scope: !13442)
!13442 = distinct !DILexicalBlock(scope: !13437, file: !2238, line: 1803, column: 13)
!13443 = !DILocation(line: 1803, column: 13, scope: !13437)
!13444 = !DILocation(line: 1805, column: 24, scope: !13445)
!13445 = distinct !DILexicalBlock(scope: !13442, file: !2238, line: 1805, column: 13)
!13446 = !DILocation(line: 1805, column: 21, scope: !13445)
!13447 = !DILocation(line: 1805, column: 34, scope: !13445)
!13448 = !DILocation(line: 1806, column: 20, scope: !13445)
!13449 = !DILocation(line: 1806, column: 44, scope: !13445)
!13450 = !DILocation(line: 1806, column: 30, scope: !13445)
!13451 = !DILocation(line: 1805, column: 13, scope: !13442)
!13452 = !DILocation(line: 1810, column: 42, scope: !13453)
!13453 = distinct !DILexicalBlock(scope: !13445, file: !2238, line: 1808, column: 9)
!13454 = !DILocation(line: 1810, column: 3, scope: !13453)
!13455 = !DILocation(line: 1811, column: 22, scope: !13453)
!13456 = !DILocation(line: 1811, column: 3, scope: !13453)
!13457 = !DILocation(line: 0, scope: !12184, inlinedAt: !13458)
!13458 = distinct !DILocation(line: 1814, column: 9, scope: !13453)
!13459 = !DILocation(line: 196, column: 9, scope: !12184, inlinedAt: !13458)
!13460 = !DILocation(line: 1817, column: 3, scope: !13453)
!13461 = !DILocation(line: 0, scope: !13437)
!13462 = !DILocation(line: 0, scope: !11600, inlinedAt: !13463)
!13463 = distinct !DILocation(line: 1822, column: 2, scope: !13422)
!13464 = !DILocation(line: 0, scope: !11608, inlinedAt: !13465)
!13465 = distinct !DILocation(line: 215, column: 2, scope: !11600, inlinedAt: !13463)
!13466 = !DILocation(line: 95, column: 2, scope: !11608, inlinedAt: !13465)
!13467 = !DILocation(line: 1823, column: 2, scope: !13422)
!13468 = !DILocation(line: 1824, column: 1, scope: !13422)
!13469 = distinct !DISubprogram(name: "z_sched_wake", scope: !2238, file: !2238, line: 1882, type: !13470, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !13472)
!13470 = !DISubroutineType(types: !13471)
!13471 = !{!163, !2164, !103, !102}
!13472 = !{!13473, !13474, !13475, !13476, !13477, !13478, !13480}
!13473 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13469, file: !2238, line: 1882, type: !2164)
!13474 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !13469, file: !2238, line: 1882, type: !103)
!13475 = !DILocalVariable(name: "swap_data", arg: 3, scope: !13469, file: !2238, line: 1882, type: !102)
!13476 = !DILocalVariable(name: "thread", scope: !13469, file: !2238, line: 1884, type: !2133)
!13477 = !DILocalVariable(name: "ret", scope: !13469, file: !2238, line: 1885, type: !163)
!13478 = !DILocalVariable(name: "__i", scope: !13479, file: !2238, line: 1887, type: !11565)
!13479 = distinct !DILexicalBlock(scope: !13469, file: !2238, line: 1887, column: 2)
!13480 = !DILocalVariable(name: "__key", scope: !13479, file: !2238, line: 1887, type: !11565)
!13481 = !DILocation(line: 0, scope: !13469)
!13482 = !DILocation(line: 0, scope: !13479)
!13483 = !DILocation(line: 0, scope: !11573, inlinedAt: !13484)
!13484 = distinct !DILocation(line: 1887, column: 2, scope: !13479)
!13485 = !DILocation(line: 55, column: 2, scope: !11582, inlinedAt: !13486)
!13486 = distinct !DILocation(line: 145, column: 10, scope: !11573, inlinedAt: !13484)
!13487 = !DILocation(line: 0, scope: !11582, inlinedAt: !13486)
!13488 = !DILocation(line: 1888, column: 12, scope: !13489)
!13489 = distinct !DILexicalBlock(scope: !13490, file: !2238, line: 1887, column: 26)
!13490 = distinct !DILexicalBlock(scope: !13479, file: !2238, line: 1887, column: 2)
!13491 = !DILocation(line: 1890, column: 14, scope: !13492)
!13492 = distinct !DILexicalBlock(scope: !13489, file: !2238, line: 1890, column: 7)
!13493 = !DILocation(line: 1890, column: 7, scope: !13489)
!13494 = !DILocalVariable(name: "thread", arg: 1, scope: !13495, file: !13496, line: 134, type: !2133)
!13495 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13496, file: !13496, line: 134, type: !13497, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !13499)
!13496 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13497 = !DISubroutineType(types: !13498)
!13498 = !{null, !2133, !32, !102}
!13499 = !{!13494, !13500, !13501}
!13500 = !DILocalVariable(name: "value", arg: 2, scope: !13495, file: !13496, line: 135, type: !32)
!13501 = !DILocalVariable(name: "data", arg: 3, scope: !13495, file: !13496, line: 136, type: !102)
!13502 = !DILocation(line: 0, scope: !13495, inlinedAt: !13503)
!13503 = distinct !DILocation(line: 1891, column: 4, scope: !13504)
!13504 = distinct !DILexicalBlock(scope: !13492, file: !2238, line: 1890, column: 23)
!13505 = !DILocation(line: 0, scope: !13409, inlinedAt: !13506)
!13506 = distinct !DILocation(line: 138, column: 2, scope: !13495, inlinedAt: !13503)
!13507 = !DILocation(line: 67, column: 15, scope: !13409, inlinedAt: !13506)
!13508 = !DILocation(line: 67, column: 33, scope: !13409, inlinedAt: !13506)
!13509 = !DILocation(line: 139, column: 15, scope: !13495, inlinedAt: !13503)
!13510 = !DILocation(line: 139, column: 25, scope: !13495, inlinedAt: !13503)
!13511 = !DILocation(line: 1894, column: 4, scope: !13504)
!13512 = !DILocation(line: 1895, column: 10, scope: !13504)
!13513 = !DILocation(line: 1896, column: 4, scope: !13504)
!13514 = !DILocation(line: 1898, column: 3, scope: !13504)
!13515 = !DILocation(line: 0, scope: !11600, inlinedAt: !13516)
!13516 = distinct !DILocation(line: 1887, column: 2, scope: !13490)
!13517 = !DILocation(line: 0, scope: !11608, inlinedAt: !13518)
!13518 = distinct !DILocation(line: 215, column: 2, scope: !11600, inlinedAt: !13516)
!13519 = !DILocation(line: 95, column: 2, scope: !11608, inlinedAt: !13518)
!13520 = !DILocation(line: 1901, column: 2, scope: !13469)
!13521 = distinct !DISubprogram(name: "z_sched_wait", scope: !2238, file: !2238, line: 1904, type: !13522, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2130, retainedNodes: !13525)
!13522 = !DISubroutineType(types: !13523)
!13523 = !{!103, !11576, !11565, !2164, !12364, !13524}
!13524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!13525 = !{!13526, !13527, !13528, !13529, !13530, !13531}
!13526 = !DILocalVariable(name: "lock", arg: 1, scope: !13521, file: !2238, line: 1904, type: !11576)
!13527 = !DILocalVariable(name: "key", arg: 2, scope: !13521, file: !2238, line: 1904, type: !11565)
!13528 = !DILocalVariable(name: "wait_q", arg: 3, scope: !13521, file: !2238, line: 1905, type: !2164)
!13529 = !DILocalVariable(name: "timeout", arg: 4, scope: !13521, file: !2238, line: 1905, type: !12364)
!13530 = !DILocalVariable(name: "data", arg: 5, scope: !13521, file: !2238, line: 1905, type: !13524)
!13531 = !DILocalVariable(name: "ret", scope: !13521, file: !2238, line: 1907, type: !103)
!13532 = !DILocation(line: 0, scope: !13521)
!13533 = !DILocation(line: 1907, column: 12, scope: !13521)
!13534 = !DILocation(line: 1909, column: 11, scope: !13535)
!13535 = distinct !DILexicalBlock(scope: !13521, file: !2238, line: 1909, column: 6)
!13536 = !DILocation(line: 1909, column: 6, scope: !13521)
!13537 = !DILocation(line: 1910, column: 11, scope: !13538)
!13538 = distinct !DILexicalBlock(scope: !13535, file: !2238, line: 1909, column: 20)
!13539 = !DILocation(line: 1910, column: 26, scope: !13538)
!13540 = !DILocation(line: 1910, column: 9, scope: !13538)
!13541 = !DILocation(line: 1911, column: 2, scope: !13538)
!13542 = !DILocation(line: 1912, column: 2, scope: !13521)
!13543 = distinct !DISubprogram(name: "z_data_copy", scope: !13544, file: !13544, line: 22, type: !2860, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2843, retainedNodes: !474)
!13544 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13545 = !DILocation(line: 24, column: 2, scope: !13543)
!13546 = !DILocation(line: 27, column: 2, scope: !13543)
!13547 = !DILocation(line: 31, column: 2, scope: !13543)
!13548 = !DILocation(line: 71, column: 1, scope: !13543)
!13549 = distinct !DISubprogram(name: "z_add_timeout", scope: !2275, file: !2275, line: 88, type: !13550, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !13556)
!13550 = !DISubroutineType(types: !13551)
!13551 = !{null, !2248, !2267, !13552}
!13552 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1491, line: 67, baseType: !13553)
!13553 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1491, line: 65, size: 64, elements: !13554)
!13554 = !{!13555}
!13555 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13553, file: !1491, line: 66, baseType: !1490, size: 64)
!13556 = !{!13557, !13558, !13559, !13560, !13566, !13567, !13570, !13573}
!13557 = !DILocalVariable(name: "to", arg: 1, scope: !13549, file: !2275, line: 88, type: !2248)
!13558 = !DILocalVariable(name: "fn", arg: 2, scope: !13549, file: !2275, line: 88, type: !2267)
!13559 = !DILocalVariable(name: "timeout", arg: 3, scope: !13549, file: !2275, line: 89, type: !13552)
!13560 = !DILocalVariable(name: "__i", scope: !13561, file: !2275, line: 102, type: !13562)
!13561 = distinct !DILexicalBlock(scope: !13549, file: !2275, line: 102, column: 2)
!13562 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !473, line: 106, baseType: !13563)
!13563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !473, line: 32, size: 32, elements: !13564)
!13564 = !{!13565}
!13565 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13563, file: !473, line: 33, baseType: !103, size: 32)
!13566 = !DILocalVariable(name: "__key", scope: !13561, file: !2275, line: 102, type: !13562)
!13567 = !DILocalVariable(name: "t", scope: !13568, file: !2275, line: 103, type: !2248)
!13568 = distinct !DILexicalBlock(scope: !13569, file: !2275, line: 102, column: 24)
!13569 = distinct !DILexicalBlock(scope: !13561, file: !2275, line: 102, column: 2)
!13570 = !DILocalVariable(name: "ticks", scope: !13571, file: !2275, line: 107, type: !1490)
!13571 = distinct !DILexicalBlock(scope: !13572, file: !2275, line: 106, column: 39)
!13572 = distinct !DILexicalBlock(scope: !13568, file: !2275, line: 105, column: 7)
!13573 = !DILocalVariable(name: "next_time", scope: !13574, file: !2275, line: 137, type: !736)
!13574 = distinct !DILexicalBlock(scope: !13575, file: !2275, line: 127, column: 22)
!13575 = distinct !DILexicalBlock(scope: !13568, file: !2275, line: 127, column: 7)
!13576 = !DILocation(line: 0, scope: !13549)
!13577 = !DILocation(line: 91, column: 6, scope: !13578)
!13578 = distinct !DILexicalBlock(scope: !13549, file: !2275, line: 91, column: 6)
!13579 = !DILocation(line: 91, column: 6, scope: !13549)
!13580 = !DILocation(line: 100, column: 6, scope: !13549)
!13581 = !DILocation(line: 100, column: 9, scope: !13549)
!13582 = !DILocation(line: 0, scope: !13561)
!13583 = !DILocalVariable(name: "l", arg: 1, scope: !13584, file: !473, line: 136, type: !13587)
!13584 = distinct !DISubprogram(name: "k_spin_lock", scope: !473, file: !473, line: 136, type: !13585, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !13588)
!13585 = !DISubroutineType(types: !13586)
!13586 = !{!13562, !13587}
!13587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2276, size: 32)
!13588 = !{!13583, !13589}
!13589 = !DILocalVariable(name: "k", scope: !13584, file: !473, line: 139, type: !13562)
!13590 = !DILocation(line: 0, scope: !13584, inlinedAt: !13591)
!13591 = distinct !DILocation(line: 102, column: 2, scope: !13561)
!13592 = !DILocation(line: 55, column: 2, scope: !13593, inlinedAt: !13597)
!13593 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4661, file: !4661, line: 42, type: !4662, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !13594)
!13594 = !{!13595, !13596}
!13595 = !DILocalVariable(name: "key", scope: !13593, file: !4661, line: 44, type: !32)
!13596 = !DILocalVariable(name: "tmp", scope: !13593, file: !4661, line: 53, type: !32)
!13597 = distinct !DILocation(line: 145, column: 10, scope: !13584, inlinedAt: !13591)
!13598 = !{i64 2227746}
!13599 = !DILocation(line: 0, scope: !13593, inlinedAt: !13597)
!13600 = !DILocation(line: 106, column: 33, scope: !13572)
!13601 = !DILocation(line: 105, column: 7, scope: !13568)
!13602 = !DILocation(line: 107, column: 50, scope: !13571)
!13603 = !DILocation(line: 107, column: 48, scope: !13571)
!13604 = !DILocation(line: 0, scope: !13571)
!13605 = !DILocation(line: 109, column: 17, scope: !13571)
!13606 = !DILocation(line: 110, column: 3, scope: !13571)
!13607 = !DILocation(line: 111, column: 31, scope: !13608)
!13608 = distinct !DILexicalBlock(scope: !13572, file: !2275, line: 110, column: 10)
!13609 = !DILocation(line: 111, column: 37, scope: !13608)
!13610 = !DILocation(line: 111, column: 35, scope: !13608)
!13611 = !DILocation(line: 0, scope: !13572)
!13612 = !DILocation(line: 109, column: 8, scope: !13571)
!13613 = !DILocation(line: 109, column: 15, scope: !13571)
!13614 = !DILocation(line: 114, column: 12, scope: !13615)
!13615 = distinct !DILexicalBlock(scope: !13568, file: !2275, line: 114, column: 3)
!13616 = !DILocation(line: 0, scope: !13568)
!13617 = !DILocation(line: 114, column: 3, scope: !13615)
!13618 = !DILocation(line: 115, column: 24, scope: !13619)
!13619 = distinct !DILexicalBlock(scope: !13620, file: !2275, line: 115, column: 8)
!13620 = distinct !DILexicalBlock(scope: !13621, file: !2275, line: 114, column: 45)
!13621 = distinct !DILexicalBlock(scope: !13615, file: !2275, line: 114, column: 3)
!13622 = !DILocation(line: 115, column: 11, scope: !13619)
!13623 = !DILocation(line: 115, column: 18, scope: !13619)
!13624 = !DILocation(line: 115, column: 8, scope: !13620)
!13625 = !DILocation(line: 116, column: 15, scope: !13626)
!13626 = distinct !DILexicalBlock(scope: !13619, file: !2275, line: 115, column: 32)
!13627 = !DILocation(line: 117, column: 26, scope: !13626)
!13628 = !DILocation(line: 117, column: 37, scope: !13626)
!13629 = !DILocation(line: 117, column: 5, scope: !13626)
!13630 = !DILocation(line: 123, column: 7, scope: !13568)
!13631 = !DILocation(line: 120, column: 15, scope: !13620)
!13632 = !DILocation(line: 114, column: 36, scope: !13621)
!13633 = distinct !{!13633, !13617, !13634}
!13634 = !DILocation(line: 121, column: 3, scope: !13615)
!13635 = !DILocation(line: 124, column: 41, scope: !13636)
!13636 = distinct !DILexicalBlock(scope: !13637, file: !2275, line: 123, column: 18)
!13637 = distinct !DILexicalBlock(scope: !13568, file: !2275, line: 123, column: 7)
!13638 = !DILocation(line: 124, column: 4, scope: !13636)
!13639 = !DILocation(line: 125, column: 3, scope: !13636)
!13640 = !DILocation(line: 127, column: 13, scope: !13575)
!13641 = !DILocation(line: 127, column: 10, scope: !13575)
!13642 = !DILocation(line: 127, column: 7, scope: !13568)
!13643 = !DILocation(line: 137, column: 24, scope: !13574)
!13644 = !DILocation(line: 0, scope: !13574)
!13645 = !DILocation(line: 139, column: 18, scope: !13646)
!13646 = distinct !DILexicalBlock(scope: !13574, file: !2275, line: 139, column: 8)
!13647 = !DILocation(line: 139, column: 23, scope: !13646)
!13648 = !DILocation(line: 141, column: 5, scope: !13649)
!13649 = distinct !DILexicalBlock(scope: !13646, file: !2275, line: 140, column: 48)
!13650 = !DILocation(line: 142, column: 4, scope: !13649)
!13651 = !DILocalVariable(name: "key", arg: 2, scope: !13652, file: !473, line: 190, type: !13562)
!13652 = distinct !DISubprogram(name: "k_spin_unlock", scope: !473, file: !473, line: 189, type: !13653, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !13655)
!13653 = !DISubroutineType(types: !13654)
!13654 = !{null, !13587, !13562}
!13655 = !{!13656, !13651}
!13656 = !DILocalVariable(name: "l", arg: 1, scope: !13652, file: !473, line: 189, type: !13587)
!13657 = !DILocation(line: 0, scope: !13652, inlinedAt: !13658)
!13658 = distinct !DILocation(line: 102, column: 2, scope: !13569)
!13659 = !DILocalVariable(name: "key", arg: 1, scope: !13660, file: !4661, line: 84, type: !32)
!13660 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4661, file: !4661, line: 84, type: !4672, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !13661)
!13661 = !{!13659}
!13662 = !DILocation(line: 0, scope: !13660, inlinedAt: !13663)
!13663 = distinct !DILocation(line: 215, column: 2, scope: !13652, inlinedAt: !13658)
!13664 = !DILocation(line: 95, column: 2, scope: !13660, inlinedAt: !13663)
!13665 = !{i64 2228563}
!13666 = !DILocation(line: 148, column: 1, scope: !13549)
!13667 = distinct !DISubprogram(name: "elapsed", scope: !2275, file: !2275, line: 62, type: !13668, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !474)
!13668 = !DISubroutineType(types: !13669)
!13669 = !{!736}
!13670 = !DILocation(line: 64, column: 9, scope: !13667)
!13671 = !DILocation(line: 64, column: 28, scope: !13667)
!13672 = !DILocation(line: 64, column: 35, scope: !13667)
!13673 = !DILocation(line: 64, column: 2, scope: !13667)
!13674 = distinct !DISubprogram(name: "first", scope: !2275, file: !2275, line: 39, type: !13675, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !13677)
!13675 = !DISubroutineType(types: !13676)
!13676 = !{!2248}
!13677 = !{!13678}
!13678 = !DILocalVariable(name: "t", scope: !13674, file: !2275, line: 41, type: !13679)
!13679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2252, size: 32)
!13680 = !DILocation(line: 41, column: 19, scope: !13674)
!13681 = !DILocation(line: 0, scope: !13674)
!13682 = !DILocation(line: 43, column: 9, scope: !13674)
!13683 = !DILocation(line: 43, column: 2, scope: !13674)
!13684 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !373, file: !373, line: 443, type: !13685, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !13687)
!13685 = !DISubroutineType(types: !13686)
!13686 = !{null, !13679, !13679}
!13687 = !{!13688, !13689, !13690}
!13688 = !DILocalVariable(name: "successor", arg: 1, scope: !13684, file: !373, line: 443, type: !13679)
!13689 = !DILocalVariable(name: "node", arg: 2, scope: !13684, file: !373, line: 443, type: !13679)
!13690 = !DILocalVariable(name: "prev", scope: !13684, file: !373, line: 445, type: !13691)
!13691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13679)
!13692 = !DILocation(line: 0, scope: !13684)
!13693 = !DILocation(line: 445, column: 39, scope: !13684)
!13694 = !DILocation(line: 447, column: 8, scope: !13684)
!13695 = !DILocation(line: 447, column: 13, scope: !13684)
!13696 = !DILocation(line: 448, column: 8, scope: !13684)
!13697 = !DILocation(line: 448, column: 13, scope: !13684)
!13698 = !DILocation(line: 449, column: 8, scope: !13684)
!13699 = !DILocation(line: 449, column: 13, scope: !13684)
!13700 = !DILocation(line: 450, column: 18, scope: !13684)
!13701 = !DILocation(line: 451, column: 1, scope: !13684)
!13702 = distinct !DISubprogram(name: "next", scope: !2275, file: !2275, line: 46, type: !13703, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !13705)
!13703 = !DISubroutineType(types: !13704)
!13704 = !{!2248, !2248}
!13705 = !{!13706, !13707}
!13706 = !DILocalVariable(name: "t", arg: 1, scope: !13702, file: !2275, line: 46, type: !2248)
!13707 = !DILocalVariable(name: "n", scope: !13702, file: !2275, line: 48, type: !13679)
!13708 = !DILocation(line: 0, scope: !13702)
!13709 = !DILocation(line: 48, column: 58, scope: !13702)
!13710 = !DILocation(line: 48, column: 19, scope: !13702)
!13711 = !DILocation(line: 50, column: 9, scope: !13702)
!13712 = !DILocation(line: 50, column: 2, scope: !13702)
!13713 = distinct !DISubprogram(name: "sys_dlist_append", scope: !373, file: !373, line: 404, type: !13714, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !13717)
!13714 = !DISubroutineType(types: !13715)
!13715 = !{null, !13716, !13679}
!13716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2281, size: 32)
!13717 = !{!13718, !13719, !13720}
!13718 = !DILocalVariable(name: "list", arg: 1, scope: !13713, file: !373, line: 404, type: !13716)
!13719 = !DILocalVariable(name: "node", arg: 2, scope: !13713, file: !373, line: 404, type: !13679)
!13720 = !DILocalVariable(name: "tail", scope: !13713, file: !373, line: 406, type: !13691)
!13721 = !DILocation(line: 0, scope: !13713)
!13722 = !DILocation(line: 406, column: 34, scope: !13713)
!13723 = !DILocation(line: 408, column: 8, scope: !13713)
!13724 = !DILocation(line: 408, column: 13, scope: !13713)
!13725 = !DILocation(line: 409, column: 8, scope: !13713)
!13726 = !DILocation(line: 409, column: 13, scope: !13713)
!13727 = !DILocation(line: 411, column: 8, scope: !13713)
!13728 = !DILocation(line: 411, column: 13, scope: !13713)
!13729 = !DILocation(line: 412, column: 13, scope: !13713)
!13730 = !DILocation(line: 413, column: 1, scope: !13713)
!13731 = distinct !DISubprogram(name: "next_timeout", scope: !2275, file: !2275, line: 67, type: !13668, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !13732)
!13732 = !{!13733, !13734, !13735}
!13733 = !DILocalVariable(name: "to", scope: !13731, file: !2275, line: 69, type: !2248)
!13734 = !DILocalVariable(name: "ticks_elapsed", scope: !13731, file: !2275, line: 70, type: !736)
!13735 = !DILocalVariable(name: "ret", scope: !13731, file: !2275, line: 71, type: !736)
!13736 = !DILocation(line: 69, column: 24, scope: !13731)
!13737 = !DILocation(line: 0, scope: !13731)
!13738 = !DILocation(line: 70, column: 26, scope: !13731)
!13739 = !DILocation(line: 73, column: 10, scope: !13740)
!13740 = distinct !DILexicalBlock(scope: !13731, file: !2275, line: 73, column: 6)
!13741 = !DILocation(line: 73, column: 19, scope: !13740)
!13742 = !DILocation(line: 74, column: 21, scope: !13740)
!13743 = !DILocation(line: 74, column: 30, scope: !13740)
!13744 = !DILocation(line: 74, column: 28, scope: !13740)
!13745 = !DILocation(line: 74, column: 45, scope: !13740)
!13746 = !DILocation(line: 73, column: 6, scope: !13731)
!13747 = !DILocation(line: 77, column: 9, scope: !13748)
!13748 = distinct !DILexicalBlock(scope: !13740, file: !2275, line: 76, column: 9)
!13749 = !DILocation(line: 0, scope: !13740)
!13750 = !DILocation(line: 81, column: 20, scope: !13751)
!13751 = distinct !DILexicalBlock(scope: !13731, file: !2275, line: 81, column: 6)
!13752 = !DILocation(line: 81, column: 6, scope: !13751)
!13753 = !DILocation(line: 81, column: 32, scope: !13751)
!13754 = !DILocation(line: 85, column: 2, scope: !13731)
!13755 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !373, file: !373, line: 341, type: !13756, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !13758)
!13756 = !DISubroutineType(types: !13757)
!13757 = !{!13679, !13716, !13679}
!13758 = !{!13759, !13760}
!13759 = !DILocalVariable(name: "list", arg: 1, scope: !13755, file: !373, line: 341, type: !13716)
!13760 = !DILocalVariable(name: "node", arg: 2, scope: !13755, file: !373, line: 342, type: !13679)
!13761 = !DILocation(line: 0, scope: !13755)
!13762 = !DILocation(line: 344, column: 15, scope: !13755)
!13763 = !DILocation(line: 344, column: 9, scope: !13755)
!13764 = !DILocation(line: 344, column: 26, scope: !13755)
!13765 = !DILocation(line: 344, column: 2, scope: !13755)
!13766 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !373, file: !373, line: 325, type: !13756, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !13767)
!13767 = !{!13768, !13769}
!13768 = !DILocalVariable(name: "list", arg: 1, scope: !13766, file: !373, line: 325, type: !13716)
!13769 = !DILocalVariable(name: "node", arg: 2, scope: !13766, file: !373, line: 326, type: !13679)
!13770 = !DILocation(line: 0, scope: !13766)
!13771 = !DILocation(line: 328, column: 24, scope: !13766)
!13772 = !DILocation(line: 328, column: 15, scope: !13766)
!13773 = !DILocation(line: 328, column: 9, scope: !13766)
!13774 = !DILocation(line: 328, column: 45, scope: !13766)
!13775 = !DILocation(line: 328, column: 2, scope: !13766)
!13776 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !373, file: !373, line: 294, type: !13777, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !13779)
!13777 = !DISubroutineType(types: !13778)
!13778 = !{!13679, !13716}
!13779 = !{!13780}
!13780 = !DILocalVariable(name: "list", arg: 1, scope: !13776, file: !373, line: 294, type: !13716)
!13781 = !DILocation(line: 0, scope: !13776)
!13782 = !DILocation(line: 296, column: 9, scope: !13776)
!13783 = !DILocation(line: 296, column: 2, scope: !13776)
!13784 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !373, file: !373, line: 266, type: !13785, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !13787)
!13785 = !DISubroutineType(types: !13786)
!13786 = !{!163, !13716}
!13787 = !{!13788}
!13788 = !DILocalVariable(name: "list", arg: 1, scope: !13784, file: !373, line: 266, type: !13716)
!13789 = !DILocation(line: 0, scope: !13784)
!13790 = !DILocation(line: 268, column: 15, scope: !13784)
!13791 = !DILocation(line: 268, column: 20, scope: !13784)
!13792 = !DILocation(line: 268, column: 2, scope: !13784)
!13793 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2275, file: !2275, line: 150, type: !13794, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !13796)
!13794 = !DISubroutineType(types: !13795)
!13795 = !{!103, !2248}
!13796 = !{!13797, !13798, !13799, !13801}
!13797 = !DILocalVariable(name: "to", arg: 1, scope: !13793, file: !2275, line: 150, type: !2248)
!13798 = !DILocalVariable(name: "ret", scope: !13793, file: !2275, line: 152, type: !103)
!13799 = !DILocalVariable(name: "__i", scope: !13800, file: !2275, line: 154, type: !13562)
!13800 = distinct !DILexicalBlock(scope: !13793, file: !2275, line: 154, column: 2)
!13801 = !DILocalVariable(name: "__key", scope: !13800, file: !2275, line: 154, type: !13562)
!13802 = !DILocation(line: 0, scope: !13793)
!13803 = !DILocation(line: 0, scope: !13800)
!13804 = !DILocation(line: 0, scope: !13584, inlinedAt: !13805)
!13805 = distinct !DILocation(line: 154, column: 2, scope: !13800)
!13806 = !DILocation(line: 55, column: 2, scope: !13593, inlinedAt: !13807)
!13807 = distinct !DILocation(line: 145, column: 10, scope: !13584, inlinedAt: !13805)
!13808 = !DILocation(line: 0, scope: !13593, inlinedAt: !13807)
!13809 = !DILocation(line: 155, column: 7, scope: !13810)
!13810 = distinct !DILexicalBlock(scope: !13811, file: !2275, line: 155, column: 7)
!13811 = distinct !DILexicalBlock(scope: !13812, file: !2275, line: 154, column: 24)
!13812 = distinct !DILexicalBlock(scope: !13800, file: !2275, line: 154, column: 2)
!13813 = !DILocation(line: 155, column: 7, scope: !13811)
!13814 = !DILocation(line: 156, column: 4, scope: !13815)
!13815 = distinct !DILexicalBlock(scope: !13810, file: !2275, line: 155, column: 39)
!13816 = !DILocation(line: 158, column: 3, scope: !13815)
!13817 = !DILocation(line: 0, scope: !13652, inlinedAt: !13818)
!13818 = distinct !DILocation(line: 154, column: 2, scope: !13812)
!13819 = !DILocation(line: 0, scope: !13660, inlinedAt: !13820)
!13820 = distinct !DILocation(line: 215, column: 2, scope: !13652, inlinedAt: !13818)
!13821 = !DILocation(line: 95, column: 2, scope: !13660, inlinedAt: !13820)
!13822 = !DILocation(line: 161, column: 2, scope: !13793)
!13823 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !373, file: !373, line: 225, type: !13824, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !13828)
!13824 = !DISubroutineType(types: !13825)
!13825 = !{!163, !13826}
!13826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13827, size: 32)
!13827 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2252)
!13828 = !{!13829}
!13829 = !DILocalVariable(name: "node", arg: 1, scope: !13823, file: !373, line: 225, type: !13826)
!13830 = !DILocation(line: 0, scope: !13823)
!13831 = !DILocation(line: 227, column: 15, scope: !13823)
!13832 = !DILocation(line: 227, column: 20, scope: !13823)
!13833 = !DILocation(line: 227, column: 2, scope: !13823)
!13834 = distinct !DISubprogram(name: "remove_timeout", scope: !2275, file: !2275, line: 53, type: !2269, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !13835)
!13835 = !{!13836}
!13836 = !DILocalVariable(name: "t", arg: 1, scope: !13834, file: !2275, line: 53, type: !2248)
!13837 = !DILocation(line: 0, scope: !13834)
!13838 = !DILocation(line: 55, column: 6, scope: !13839)
!13839 = distinct !DILexicalBlock(scope: !13834, file: !2275, line: 55, column: 6)
!13840 = !DILocation(line: 55, column: 14, scope: !13839)
!13841 = !DILocation(line: 55, column: 6, scope: !13834)
!13842 = !DILocation(line: 56, column: 25, scope: !13843)
!13843 = distinct !DILexicalBlock(scope: !13839, file: !2275, line: 55, column: 23)
!13844 = !DILocation(line: 56, column: 12, scope: !13843)
!13845 = !DILocation(line: 56, column: 19, scope: !13843)
!13846 = !DILocation(line: 57, column: 2, scope: !13843)
!13847 = !DILocation(line: 59, column: 23, scope: !13834)
!13848 = !DILocation(line: 59, column: 2, scope: !13834)
!13849 = !DILocation(line: 60, column: 1, scope: !13834)
!13850 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !373, file: !373, line: 496, type: !13851, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !13853)
!13851 = !DISubroutineType(types: !13852)
!13852 = !{null, !13679}
!13853 = !{!13854, !13855, !13856}
!13854 = !DILocalVariable(name: "node", arg: 1, scope: !13850, file: !373, line: 496, type: !13679)
!13855 = !DILocalVariable(name: "prev", scope: !13850, file: !373, line: 498, type: !13691)
!13856 = !DILocalVariable(name: "next", scope: !13850, file: !373, line: 499, type: !13691)
!13857 = !DILocation(line: 0, scope: !13850)
!13858 = !DILocation(line: 498, column: 34, scope: !13850)
!13859 = !DILocation(line: 499, column: 34, scope: !13850)
!13860 = !DILocation(line: 501, column: 8, scope: !13850)
!13861 = !DILocation(line: 501, column: 13, scope: !13850)
!13862 = !DILocation(line: 502, column: 8, scope: !13850)
!13863 = !DILocation(line: 502, column: 13, scope: !13850)
!13864 = !DILocation(line: 503, column: 2, scope: !13850)
!13865 = !DILocation(line: 504, column: 1, scope: !13850)
!13866 = distinct !DISubprogram(name: "sys_dnode_init", scope: !373, file: !373, line: 211, type: !13851, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !13867)
!13867 = !{!13868}
!13868 = !DILocalVariable(name: "node", arg: 1, scope: !13866, file: !373, line: 211, type: !13679)
!13869 = !DILocation(line: 0, scope: !13866)
!13870 = !DILocation(line: 213, column: 8, scope: !13866)
!13871 = !DILocation(line: 213, column: 13, scope: !13866)
!13872 = !DILocation(line: 214, column: 8, scope: !13866)
!13873 = !DILocation(line: 214, column: 13, scope: !13866)
!13874 = !DILocation(line: 215, column: 1, scope: !13866)
!13875 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2275, file: !2275, line: 183, type: !13876, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !13880)
!13876 = !DISubroutineType(types: !13877)
!13877 = !{!1490, !13878}
!13878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13879, size: 32)
!13879 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2249)
!13880 = !{!13881, !13882, !13883, !13885}
!13881 = !DILocalVariable(name: "timeout", arg: 1, scope: !13875, file: !2275, line: 183, type: !13878)
!13882 = !DILocalVariable(name: "ticks", scope: !13875, file: !2275, line: 185, type: !1490)
!13883 = !DILocalVariable(name: "__i", scope: !13884, file: !2275, line: 187, type: !13562)
!13884 = distinct !DILexicalBlock(scope: !13875, file: !2275, line: 187, column: 2)
!13885 = !DILocalVariable(name: "__key", scope: !13884, file: !2275, line: 187, type: !13562)
!13886 = !DILocation(line: 0, scope: !13875)
!13887 = !DILocation(line: 0, scope: !13884)
!13888 = !DILocation(line: 0, scope: !13584, inlinedAt: !13889)
!13889 = distinct !DILocation(line: 187, column: 2, scope: !13884)
!13890 = !DILocation(line: 55, column: 2, scope: !13593, inlinedAt: !13891)
!13891 = distinct !DILocation(line: 145, column: 10, scope: !13584, inlinedAt: !13889)
!13892 = !DILocation(line: 0, scope: !13593, inlinedAt: !13891)
!13893 = !DILocation(line: 188, column: 11, scope: !13894)
!13894 = distinct !DILexicalBlock(scope: !13895, file: !2275, line: 187, column: 24)
!13895 = distinct !DILexicalBlock(scope: !13884, file: !2275, line: 187, column: 2)
!13896 = !DILocation(line: 0, scope: !13652, inlinedAt: !13897)
!13897 = distinct !DILocation(line: 187, column: 2, scope: !13895)
!13898 = !DILocation(line: 0, scope: !13660, inlinedAt: !13899)
!13899 = distinct !DILocation(line: 215, column: 2, scope: !13652, inlinedAt: !13897)
!13900 = !DILocation(line: 95, column: 2, scope: !13660, inlinedAt: !13899)
!13901 = !DILocation(line: 191, column: 2, scope: !13875)
!13902 = distinct !DISubprogram(name: "timeout_rem", scope: !2275, file: !2275, line: 165, type: !13876, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !13903)
!13903 = !{!13904, !13905, !13906}
!13904 = !DILocalVariable(name: "timeout", arg: 1, scope: !13902, file: !2275, line: 165, type: !13878)
!13905 = !DILocalVariable(name: "ticks", scope: !13902, file: !2275, line: 167, type: !1490)
!13906 = !DILocalVariable(name: "t", scope: !13907, file: !2275, line: 173, type: !2248)
!13907 = distinct !DILexicalBlock(scope: !13902, file: !2275, line: 173, column: 2)
!13908 = !DILocation(line: 0, scope: !13902)
!13909 = !DILocation(line: 169, column: 6, scope: !13910)
!13910 = distinct !DILexicalBlock(scope: !13902, file: !2275, line: 169, column: 6)
!13911 = !DILocation(line: 169, column: 6, scope: !13902)
!13912 = !DILocation(line: 173, column: 28, scope: !13907)
!13913 = !DILocation(line: 0, scope: !13907)
!13914 = !DILocation(line: 173, column: 39, scope: !13915)
!13915 = distinct !DILexicalBlock(scope: !13907, file: !2275, line: 173, column: 2)
!13916 = !DILocation(line: 173, column: 2, scope: !13907)
!13917 = !DILocation(line: 174, column: 15, scope: !13918)
!13918 = distinct !DILexicalBlock(scope: !13915, file: !2275, line: 173, column: 61)
!13919 = !DILocation(line: 174, column: 9, scope: !13918)
!13920 = !DILocation(line: 175, column: 15, scope: !13921)
!13921 = distinct !DILexicalBlock(scope: !13918, file: !2275, line: 175, column: 7)
!13922 = !DILocation(line: 175, column: 7, scope: !13918)
!13923 = !DILocation(line: 173, column: 52, scope: !13915)
!13924 = distinct !{!13924, !13916, !13925}
!13925 = !DILocation(line: 178, column: 2, scope: !13907)
!13926 = !DILocation(line: 180, column: 17, scope: !13902)
!13927 = !DILocation(line: 180, column: 15, scope: !13902)
!13928 = !DILocation(line: 180, column: 2, scope: !13902)
!13929 = !DILocation(line: 181, column: 1, scope: !13902)
!13930 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11239, file: !11239, line: 35, type: !13931, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !13933)
!13931 = !DISubroutineType(types: !13932)
!13932 = !{!163, !13878}
!13933 = !{!13934}
!13934 = !DILocalVariable(name: "to", arg: 1, scope: !13930, file: !11239, line: 35, type: !13878)
!13935 = !DILocation(line: 0, scope: !13930)
!13936 = !DILocation(line: 37, column: 35, scope: !13930)
!13937 = !DILocation(line: 37, column: 10, scope: !13930)
!13938 = !DILocation(line: 37, column: 9, scope: !13930)
!13939 = !DILocation(line: 37, column: 2, scope: !13930)
!13940 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2275, file: !2275, line: 194, type: !13876, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !13941)
!13941 = !{!13942, !13943, !13944, !13946}
!13942 = !DILocalVariable(name: "timeout", arg: 1, scope: !13940, file: !2275, line: 194, type: !13878)
!13943 = !DILocalVariable(name: "ticks", scope: !13940, file: !2275, line: 196, type: !1490)
!13944 = !DILocalVariable(name: "__i", scope: !13945, file: !2275, line: 198, type: !13562)
!13945 = distinct !DILexicalBlock(scope: !13940, file: !2275, line: 198, column: 2)
!13946 = !DILocalVariable(name: "__key", scope: !13945, file: !2275, line: 198, type: !13562)
!13947 = !DILocation(line: 0, scope: !13940)
!13948 = !DILocation(line: 0, scope: !13945)
!13949 = !DILocation(line: 0, scope: !13584, inlinedAt: !13950)
!13950 = distinct !DILocation(line: 198, column: 2, scope: !13945)
!13951 = !DILocation(line: 55, column: 2, scope: !13593, inlinedAt: !13952)
!13952 = distinct !DILocation(line: 145, column: 10, scope: !13584, inlinedAt: !13950)
!13953 = !DILocation(line: 0, scope: !13593, inlinedAt: !13952)
!13954 = !DILocation(line: 199, column: 11, scope: !13955)
!13955 = distinct !DILexicalBlock(scope: !13956, file: !2275, line: 198, column: 24)
!13956 = distinct !DILexicalBlock(scope: !13945, file: !2275, line: 198, column: 2)
!13957 = !DILocation(line: 199, column: 23, scope: !13955)
!13958 = !DILocation(line: 0, scope: !13652, inlinedAt: !13959)
!13959 = distinct !DILocation(line: 198, column: 2, scope: !13956)
!13960 = !DILocation(line: 0, scope: !13660, inlinedAt: !13961)
!13961 = distinct !DILocation(line: 215, column: 2, scope: !13652, inlinedAt: !13959)
!13962 = !DILocation(line: 95, column: 2, scope: !13660, inlinedAt: !13961)
!13963 = !DILocation(line: 199, column: 21, scope: !13955)
!13964 = !DILocation(line: 202, column: 2, scope: !13940)
!13965 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2275, file: !2275, line: 205, type: !13668, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !13966)
!13966 = !{!13967, !13968, !13970}
!13967 = !DILocalVariable(name: "ret", scope: !13965, file: !2275, line: 207, type: !736)
!13968 = !DILocalVariable(name: "__i", scope: !13969, file: !2275, line: 209, type: !13562)
!13969 = distinct !DILexicalBlock(scope: !13965, file: !2275, line: 209, column: 2)
!13970 = !DILocalVariable(name: "__key", scope: !13969, file: !2275, line: 209, type: !13562)
!13971 = !DILocation(line: 0, scope: !13965)
!13972 = !DILocation(line: 0, scope: !13969)
!13973 = !DILocation(line: 0, scope: !13584, inlinedAt: !13974)
!13974 = distinct !DILocation(line: 209, column: 2, scope: !13969)
!13975 = !DILocation(line: 55, column: 2, scope: !13593, inlinedAt: !13976)
!13976 = distinct !DILocation(line: 145, column: 10, scope: !13584, inlinedAt: !13974)
!13977 = !DILocation(line: 0, scope: !13593, inlinedAt: !13976)
!13978 = !DILocation(line: 210, column: 9, scope: !13979)
!13979 = distinct !DILexicalBlock(scope: !13980, file: !2275, line: 209, column: 24)
!13980 = distinct !DILexicalBlock(scope: !13969, file: !2275, line: 209, column: 2)
!13981 = !DILocation(line: 0, scope: !13652, inlinedAt: !13982)
!13982 = distinct !DILocation(line: 209, column: 2, scope: !13980)
!13983 = !DILocation(line: 0, scope: !13660, inlinedAt: !13984)
!13984 = distinct !DILocation(line: 215, column: 2, scope: !13652, inlinedAt: !13982)
!13985 = !DILocation(line: 95, column: 2, scope: !13660, inlinedAt: !13984)
!13986 = !DILocation(line: 212, column: 2, scope: !13965)
!13987 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2275, file: !2275, line: 215, type: !8860, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !13988)
!13988 = !{!13989, !13990, !13991, !13993, !13994, !13997, !13998}
!13989 = !DILocalVariable(name: "ticks", arg: 1, scope: !13987, file: !2275, line: 215, type: !736)
!13990 = !DILocalVariable(name: "is_idle", arg: 2, scope: !13987, file: !2275, line: 215, type: !163)
!13991 = !DILocalVariable(name: "__i", scope: !13992, file: !2275, line: 217, type: !13562)
!13992 = distinct !DILexicalBlock(scope: !13987, file: !2275, line: 217, column: 2)
!13993 = !DILocalVariable(name: "__key", scope: !13992, file: !2275, line: 217, type: !13562)
!13994 = !DILocalVariable(name: "next_to", scope: !13995, file: !2275, line: 218, type: !103)
!13995 = distinct !DILexicalBlock(scope: !13996, file: !2275, line: 217, column: 24)
!13996 = distinct !DILexicalBlock(scope: !13992, file: !2275, line: 217, column: 2)
!13997 = !DILocalVariable(name: "sooner", scope: !13995, file: !2275, line: 219, type: !163)
!13998 = !DILocalVariable(name: "imminent", scope: !13995, file: !2275, line: 221, type: !163)
!13999 = !DILocation(line: 0, scope: !13987)
!14000 = !DILocation(line: 0, scope: !13992)
!14001 = !DILocation(line: 0, scope: !13584, inlinedAt: !14002)
!14002 = distinct !DILocation(line: 217, column: 2, scope: !13992)
!14003 = !DILocation(line: 55, column: 2, scope: !13593, inlinedAt: !14004)
!14004 = distinct !DILocation(line: 145, column: 10, scope: !13584, inlinedAt: !14002)
!14005 = !DILocation(line: 0, scope: !13593, inlinedAt: !14004)
!14006 = !DILocation(line: 218, column: 17, scope: !13995)
!14007 = !DILocation(line: 0, scope: !13995)
!14008 = !DILocation(line: 221, column: 27, scope: !13995)
!14009 = !DILocation(line: 233, column: 17, scope: !14010)
!14010 = distinct !DILexicalBlock(scope: !13995, file: !2275, line: 233, column: 7)
!14011 = !DILocation(line: 234, column: 26, scope: !14012)
!14012 = distinct !DILexicalBlock(scope: !14010, file: !2275, line: 233, column: 56)
!14013 = !DILocation(line: 234, column: 4, scope: !14012)
!14014 = !DILocation(line: 235, column: 3, scope: !14012)
!14015 = !DILocation(line: 0, scope: !13652, inlinedAt: !14016)
!14016 = distinct !DILocation(line: 217, column: 2, scope: !13996)
!14017 = !DILocation(line: 0, scope: !13660, inlinedAt: !14018)
!14018 = distinct !DILocation(line: 215, column: 2, scope: !13652, inlinedAt: !14016)
!14019 = !DILocation(line: 95, column: 2, scope: !13660, inlinedAt: !14018)
!14020 = !DILocation(line: 237, column: 1, scope: !13987)
!14021 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2275, file: !2275, line: 239, type: !14022, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !14024)
!14022 = !DISubroutineType(types: !14023)
!14023 = !{null, !736}
!14024 = !{!14025, !14026, !14027, !14029}
!14025 = !DILocalVariable(name: "ticks", arg: 1, scope: !14021, file: !2275, line: 239, type: !736)
!14026 = !DILocalVariable(name: "key", scope: !14021, file: !2275, line: 245, type: !13562)
!14027 = !DILocalVariable(name: "t", scope: !14028, file: !2275, line: 262, type: !2248)
!14028 = distinct !DILexicalBlock(scope: !14021, file: !2275, line: 261, column: 67)
!14029 = !DILocalVariable(name: "dt", scope: !14028, file: !2275, line: 263, type: !103)
!14030 = !DILocation(line: 0, scope: !14021)
!14031 = !DILocation(line: 242, column: 2, scope: !14021)
!14032 = !DILocation(line: 0, scope: !13584, inlinedAt: !14033)
!14033 = distinct !DILocation(line: 245, column: 25, scope: !14021)
!14034 = !DILocation(line: 55, column: 2, scope: !13593, inlinedAt: !14035)
!14035 = distinct !DILocation(line: 145, column: 10, scope: !13584, inlinedAt: !14033)
!14036 = !DILocation(line: 0, scope: !13593, inlinedAt: !14035)
!14037 = !DILocation(line: 261, column: 9, scope: !14021)
!14038 = !DILocation(line: 261, column: 17, scope: !14021)
!14039 = !DILocation(line: 261, column: 25, scope: !14021)
!14040 = !DILocation(line: 261, column: 37, scope: !14021)
!14041 = !DILocation(line: 261, column: 47, scope: !14021)
!14042 = !DILocation(line: 261, column: 44, scope: !14021)
!14043 = !DILocation(line: 261, column: 2, scope: !14021)
!14044 = !DILocation(line: 0, scope: !14028)
!14045 = !DILocation(line: 263, column: 12, scope: !14028)
!14046 = !DILocation(line: 265, column: 16, scope: !14028)
!14047 = !DILocation(line: 265, column: 13, scope: !14028)
!14048 = !DILocation(line: 266, column: 13, scope: !14028)
!14049 = !DILocation(line: 267, column: 3, scope: !14028)
!14050 = !DILocation(line: 0, scope: !13652, inlinedAt: !14051)
!14051 = distinct !DILocation(line: 269, column: 3, scope: !14028)
!14052 = !DILocation(line: 0, scope: !13660, inlinedAt: !14053)
!14053 = distinct !DILocation(line: 215, column: 2, scope: !13652, inlinedAt: !14051)
!14054 = !DILocation(line: 95, column: 2, scope: !13660, inlinedAt: !14053)
!14055 = !DILocation(line: 270, column: 6, scope: !14028)
!14056 = !DILocation(line: 270, column: 3, scope: !14028)
!14057 = !DILocation(line: 0, scope: !13584, inlinedAt: !14058)
!14058 = distinct !DILocation(line: 271, column: 9, scope: !14028)
!14059 = !DILocation(line: 55, column: 2, scope: !13593, inlinedAt: !14060)
!14060 = distinct !DILocation(line: 145, column: 10, scope: !13584, inlinedAt: !14058)
!14061 = !DILocation(line: 0, scope: !13593, inlinedAt: !14060)
!14062 = !DILocation(line: 272, column: 22, scope: !14028)
!14063 = distinct !{!14063, !14043, !14064}
!14064 = !DILocation(line: 273, column: 2, scope: !14021)
!14065 = !DILocation(line: 276, column: 19, scope: !14066)
!14066 = distinct !DILexicalBlock(scope: !14067, file: !2275, line: 275, column: 23)
!14067 = distinct !DILexicalBlock(scope: !14021, file: !2275, line: 275, column: 6)
!14068 = !DILocation(line: 277, column: 2, scope: !14066)
!14069 = !DILocation(line: 279, column: 15, scope: !14021)
!14070 = !DILocation(line: 279, column: 12, scope: !14021)
!14071 = !DILocation(line: 280, column: 21, scope: !14021)
!14072 = !DILocation(line: 282, column: 24, scope: !14021)
!14073 = !DILocation(line: 282, column: 2, scope: !14021)
!14074 = !DILocation(line: 0, scope: !13652, inlinedAt: !14075)
!14075 = distinct !DILocation(line: 284, column: 2, scope: !14021)
!14076 = !DILocation(line: 0, scope: !13660, inlinedAt: !14077)
!14077 = distinct !DILocation(line: 215, column: 2, scope: !13652, inlinedAt: !14075)
!14078 = !DILocation(line: 95, column: 2, scope: !13660, inlinedAt: !14077)
!14079 = !DILocation(line: 285, column: 1, scope: !14021)
!14080 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2275, file: !2275, line: 287, type: !14081, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !14083)
!14081 = !DISubroutineType(types: !14082)
!14082 = !{!432}
!14083 = !{!14084, !14085, !14087}
!14084 = !DILocalVariable(name: "t", scope: !14080, file: !2275, line: 289, type: !1402)
!14085 = !DILocalVariable(name: "__i", scope: !14086, file: !2275, line: 291, type: !13562)
!14086 = distinct !DILexicalBlock(scope: !14080, file: !2275, line: 291, column: 2)
!14087 = !DILocalVariable(name: "__key", scope: !14086, file: !2275, line: 291, type: !13562)
!14088 = !DILocation(line: 0, scope: !14080)
!14089 = !DILocation(line: 0, scope: !14086)
!14090 = !DILocation(line: 0, scope: !13584, inlinedAt: !14091)
!14091 = distinct !DILocation(line: 291, column: 2, scope: !14086)
!14092 = !DILocation(line: 55, column: 2, scope: !13593, inlinedAt: !14093)
!14093 = distinct !DILocation(line: 145, column: 10, scope: !13584, inlinedAt: !14091)
!14094 = !DILocation(line: 0, scope: !13593, inlinedAt: !14093)
!14095 = !DILocation(line: 292, column: 7, scope: !14096)
!14096 = distinct !DILexicalBlock(scope: !14097, file: !2275, line: 291, column: 24)
!14097 = distinct !DILexicalBlock(scope: !14086, file: !2275, line: 291, column: 2)
!14098 = !DILocation(line: 292, column: 19, scope: !14096)
!14099 = !DILocation(line: 0, scope: !13652, inlinedAt: !14100)
!14100 = distinct !DILocation(line: 291, column: 2, scope: !14097)
!14101 = !DILocation(line: 0, scope: !13660, inlinedAt: !14102)
!14102 = distinct !DILocation(line: 215, column: 2, scope: !13652, inlinedAt: !14100)
!14103 = !DILocation(line: 95, column: 2, scope: !13660, inlinedAt: !14102)
!14104 = !DILocation(line: 292, column: 17, scope: !14096)
!14105 = !DILocation(line: 294, column: 2, scope: !14080)
!14106 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2275, file: !2275, line: 297, type: !4745, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !474)
!14107 = !DILocation(line: 300, column: 19, scope: !14106)
!14108 = !DILocation(line: 300, column: 9, scope: !14106)
!14109 = !DILocation(line: 300, column: 2, scope: !14106)
!14110 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2275, file: !2275, line: 306, type: !14081, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !474)
!14111 = !DILocation(line: 308, column: 9, scope: !14110)
!14112 = !DILocation(line: 308, column: 2, scope: !14110)
!14113 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2275, file: !2275, line: 319, type: !4999, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !14114)
!14114 = !{!14115, !14116, !14117, !14118}
!14115 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !14113, file: !2275, line: 319, type: !106)
!14116 = !DILocalVariable(name: "start_cycles", scope: !14113, file: !2275, line: 328, type: !106)
!14117 = !DILocalVariable(name: "cycles_to_wait", scope: !14113, file: !2275, line: 331, type: !106)
!14118 = !DILocalVariable(name: "current_cycles", scope: !14119, file: !2275, line: 338, type: !106)
!14119 = distinct !DILexicalBlock(scope: !14120, file: !2275, line: 337, column: 11)
!14120 = distinct !DILexicalBlock(scope: !14121, file: !2275, line: 337, column: 2)
!14121 = distinct !DILexicalBlock(scope: !14113, file: !2275, line: 337, column: 2)
!14122 = !DILocation(line: 0, scope: !14113)
!14123 = !DILocation(line: 322, column: 19, scope: !14124)
!14124 = distinct !DILexicalBlock(scope: !14113, file: !2275, line: 322, column: 6)
!14125 = !DILocation(line: 322, column: 6, scope: !14113)
!14126 = !DILocation(line: 328, column: 26, scope: !14113)
!14127 = !DILocation(line: 333, column: 43, scope: !14113)
!14128 = !DILocation(line: 337, column: 2, scope: !14113)
!14129 = !DILocation(line: 338, column: 29, scope: !14119)
!14130 = !DILocation(line: 0, scope: !14119)
!14131 = !DILocation(line: 341, column: 23, scope: !14132)
!14132 = distinct !DILexicalBlock(scope: !14119, file: !2275, line: 341, column: 7)
!14133 = !DILocation(line: 341, column: 39, scope: !14132)
!14134 = !DILocation(line: 349, column: 1, scope: !14113)
!14135 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !459, file: !459, line: 1675, type: !4745, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !474)
!14136 = !DILocation(line: 1677, column: 9, scope: !14135)
!14137 = !DILocation(line: 1677, column: 2, scope: !14135)
!14138 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !14139, file: !14139, line: 24, type: !4745, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !474)
!14139 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14140 = !DILocation(line: 26, column: 9, scope: !14138)
!14141 = !DILocation(line: 26, column: 2, scope: !14138)
!14142 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2275, file: !2275, line: 364, type: !14143, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2245, retainedNodes: !14145)
!14143 = !DISubroutineType(types: !14144)
!14144 = !{!1402, !13552}
!14145 = !{!14146, !14147}
!14146 = !DILocalVariable(name: "timeout", arg: 1, scope: !14142, file: !2275, line: 364, type: !13552)
!14147 = !DILocalVariable(name: "dt", scope: !14142, file: !2275, line: 366, type: !1490)
!14148 = !DILocation(line: 0, scope: !14142)
!14149 = !DILocation(line: 368, column: 6, scope: !14142)
!14150 = !DILocation(line: 371, column: 10, scope: !14151)
!14151 = distinct !DILexicalBlock(scope: !14152, file: !2275, line: 370, column: 47)
!14152 = distinct !DILexicalBlock(scope: !14153, file: !2275, line: 370, column: 13)
!14153 = distinct !DILexicalBlock(scope: !14142, file: !2275, line: 368, column: 6)
!14154 = !DILocation(line: 371, column: 3, scope: !14151)
!14155 = !DILocation(line: 376, column: 58, scope: !14156)
!14156 = distinct !DILexicalBlock(scope: !14157, file: !2275, line: 376, column: 7)
!14157 = distinct !DILexicalBlock(scope: !14152, file: !2275, line: 372, column: 9)
!14158 = !DILocation(line: 376, column: 7, scope: !14157)
!14159 = !DILocation(line: 376, column: 43, scope: !14156)
!14160 = !DILocation(line: 377, column: 4, scope: !14161)
!14161 = distinct !DILexicalBlock(scope: !14156, file: !2275, line: 376, column: 64)
!14162 = !DILocation(line: 379, column: 10, scope: !14157)
!14163 = !DILocation(line: 379, column: 33, scope: !14157)
!14164 = !DILocation(line: 379, column: 31, scope: !14157)
!14165 = !DILocation(line: 379, column: 3, scope: !14157)
!14166 = !DILocation(line: 0, scope: !14153)
!14167 = !DILocation(line: 381, column: 1, scope: !14142)
!14168 = distinct !DISubprogram(name: "boot_banner", scope: !14169, file: !14169, line: 26, type: !2860, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2846, retainedNodes: !474)
!14169 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14170 = !DILocation(line: 34, column: 2, scope: !14168)
!14171 = !DILocation(line: 36, column: 1, scope: !14168)
