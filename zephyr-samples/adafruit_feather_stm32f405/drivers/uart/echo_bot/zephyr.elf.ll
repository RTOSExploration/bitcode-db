; ModuleID = 'build/adafruit_feather_stm32f405/drivers/uart/echo_bot/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_msgq = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_spinlock = type {}
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.z_heap_bucket = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device*, void (%struct.device*, i8*)*, i8* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [82 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [82 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231664 to i8*), void (i8*)* inttoptr (i32 134229287 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231664 to i8*), void (i8*)* inttoptr (i32 134229267 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231664 to i8*), void (i8*)* inttoptr (i32 134229257 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231664 to i8*), void (i8*)* inttoptr (i32 134229357 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231664 to i8*), void (i8*)* inttoptr (i32 134229347 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231664 to i8*), void (i8*)* inttoptr (i32 134229337 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231664 to i8*), void (i8*)* inttoptr (i32 134229327 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231664 to i8*), void (i8*)* inttoptr (i32 134229317 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231664 to i8*), void (i8*)* inttoptr (i32 134229307 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231904 to i8*), void (i8*)* inttoptr (i32 134230633 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231664 to i8*), void (i8*)* inttoptr (i32 134229297 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231664 to i8*), void (i8*)* inttoptr (i32 134229277 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [42 x i8*] [i8* bitcast (%struct.k_msgq* @uart_msgq to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_37 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_74 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_21 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_74 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@uart_msgq = dso_local global %struct.k_msgq { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @uart_msgq, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @uart_msgq, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 32, i32 10, i8* getelementptr inbounds ([320 x i8], [320 x i8]* @_k_fifo_buf_uart_msgq, i32 0, i32 0), i8* getelementptr inbounds ([320 x i8], [320 x i8]* @_k_fifo_buf_uart_msgq, i64 1, i64 0), i8* getelementptr inbounds ([320 x i8], [320 x i8]* @_k_fifo_buf_uart_msgq, i32 0, i32 0), i8* getelementptr inbounds ([320 x i8], [320 x i8]* @_k_fifo_buf_uart_msgq, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static.uart_msgq", align 4, !dbg !25
@_k_fifo_buf_uart_msgq = internal global [320 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 4, !dbg !211
@rx_buf_pos = internal unnamed_addr global i32 0, align 4, !dbg !221
@rx_buf = internal global [32 x i8] zeroinitializer, align 1, !dbg !216
@.str = private unnamed_addr constant [23 x i8] c"UART device not found!\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"Hello! I'm your echo bot.\0D\0A\00", align 1
@.str.2 = private unnamed_addr constant [37 x i8] c"Tell me something and press enter:\0D\0A\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"Echo: \00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !262
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !272
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !316
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !345
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !351
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !490
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !526
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i32 0, i32 0), %struct.z_heap_bucket { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.30, i32 0, i32 0), %struct.z_heap_bucket { i32 285933600 } }], align 4, !dbg !536
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !541
@.str.29 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.30 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !561
@__devicehdl_dts_ord_37 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !755
@.str.31 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_37 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !716
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !699
@__device_dts_ord_37 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.31, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_37, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_37, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !672
@__init___device_dts_ord_37 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_37 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !688
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !718
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !732
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !734
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !736
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !738
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !740
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !742
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !744
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !746
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !748
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !750
@__devicehdl_dts_ord_9 = dso_local constant [13 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 32767], section ".__device_handles_pass2", align 2, !dbg !760
@.str.33 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !789
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !883
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !872
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !924
@__devicehdl_dts_ord_74 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !782
@.str.46 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1018
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1304
@__devstate_dts_ord_74 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1270
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1256
@__init___device_dts_ord_74 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_74 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1195
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !780
@.str.1.47 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1306
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1274
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1272
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1212
@__devicehdl_dts_ord_21 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !778
@.str.2.48 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1319
@__devstate_dts_ord_21 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1278
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1276
@__init___device_dts_ord_21 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_21 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1218
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !776
@.str.3.49 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1321
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1282
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1280
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1224
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !774
@.str.4.50 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1323
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1286
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1284
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1230
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !772
@.str.5.51 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1325
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1290
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1288
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1236
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !770
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1327
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1294
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1292
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1242
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !768
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1329
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1298
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1296
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1248
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !766
@.str.8 = private unnamed_addr constant [14 x i8] c"gpio@40022000\00", align 1
@gpio_stm32_cfg_i = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073881088 to i32*), i32 8, %struct._thread_arch { i32 48, i32 256 } }, align 4, !dbg !1331
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1302
@gpio_stm32_data_i = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1300
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1254
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !784
@.str.57 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45, void (%struct.device*)* @uart_stm32_irq_config_func_0 }, align 4, !dbg !1333
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_read, void (%struct.device*)* @uart_stm32_irq_tx_enable, void (%struct.device*)* @uart_stm32_irq_tx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_ready, void (%struct.device*)* @uart_stm32_irq_rx_enable, void (%struct.device*)* @uart_stm32_irq_rx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_complete, i32 (%struct.device*)* @uart_stm32_irq_rx_ready, void (%struct.device*)* @uart_stm32_irq_err_enable, void (%struct.device*)* @uart_stm32_irq_err_disable, i32 (%struct.device*)* @uart_stm32_irq_is_pending, i32 (%struct.device*)* @uart_stm32_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_stm32_irq_callback_set }, align 4, !dbg !1569
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1519
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1571
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.57, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1510
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1512
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1521
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1529
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1552
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 839, i32 512 }, %struct._thread_arch { i32 871, i32 0 }], align 4, !dbg !1555
@uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 = internal global %struct._isr_list { i32 39, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*) }, section ".intList", align 4, !dbg !1558
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([13 x i16], [13 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !856
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1597
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1706
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1708
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1704
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1675
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_74, %struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_21, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null], align 4, !dbg !1710
@__device_dts_ord_74 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.46, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_74, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_74, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1193
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.47, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1210
@__device_dts_ord_21 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.48, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_21, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_21, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1216
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.49, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1222
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.50, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1228
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.51, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1234
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1240
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1246
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_i to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_i to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1252
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1800
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1840
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1843
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1849
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@__ccm_bss_start = external dso_local global [0 x i8], align 1
@__ccm_bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1855
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2064
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2073
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2080
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2085
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.107 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.111, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.112, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.113, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.114, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.115, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.109, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.116, i32 0, i32 0)], align 4, !dbg !2111
@.str.110 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.111 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.112 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.113 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.114 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.115 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.109 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.116 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2223
@.str.8.108 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2236
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2344
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2347
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2349
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2078
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2075
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@__ccm_data_start = external dso_local global [0 x i8], align 1
@__ccm_data_rom_start = external dso_local global [0 x i8], align 1
@__ccm_data_end = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2351
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2387
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1942
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2385
@.str.184 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2390
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3135 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !3139, !srcloc !3140
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !3141, !srcloc !3142
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !3143, !srcloc !3144
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !3145, !srcloc !3146
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3147, !srcloc !3148
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !3149, !srcloc !3150
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !3151, !srcloc !3152
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !3153, !srcloc !3154
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !3155, !srcloc !3156
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !3157, !srcloc !3158
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !3159, !srcloc !3160
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !3161, !srcloc !3162
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !3163, !srcloc !3164
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !3165, !srcloc !3166
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !3167, !srcloc !3168
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !3169, !srcloc !3170
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !3171, !srcloc !3172
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !3173, !srcloc !3174
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3175, !srcloc !3176
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !3177, !srcloc !3178
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !3179, !srcloc !3180
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3181, !srcloc !3182
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !3183, !srcloc !3184
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3185, !srcloc !3186
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !3187, !srcloc !3188
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !3189, !srcloc !3190
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !3191, !srcloc !3192
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !3193, !srcloc !3196
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !3197, !srcloc !3198
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3199, !srcloc !3200
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3201, !srcloc !3202
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3203, !srcloc !3204
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3205, !srcloc !3206
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !3207, !srcloc !3208
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !3209, !srcloc !3210
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !3211, !srcloc !3212
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !3213, !srcloc !3214
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3215, !srcloc !3216
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3217, !srcloc !3218
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3219, !srcloc !3220
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3221, !srcloc !3222
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3223, !srcloc !3224
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3225, !srcloc !3226
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !3227, !srcloc !3228
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !3229, !srcloc !3230
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !3231, !srcloc !3232
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !3233, !srcloc !3234
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !3235, !srcloc !3236
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !3237, !srcloc !3238
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3239, !srcloc !3240
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !3241, !srcloc !3242
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3243, !srcloc !3244
  ret void, !dbg !3245
}

; Function Attrs: noinline nounwind optsize
define dso_local void @serial_cb(%struct.device* nocapture readnone %0, i8* nocapture readnone %1) #1 !dbg !3248 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !3250, metadata !DIExpression()), !dbg !3253
  call void @llvm.dbg.value(metadata i8* undef, metadata !3251, metadata !DIExpression()), !dbg !3253
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #25, !dbg !3254
  %4 = tail call fastcc i32 @uart_irq_update() #26, !dbg !3255
  %5 = icmp eq i32 %4, 0, !dbg !3255
  br i1 %5, label %27, label %6, !dbg !3257

6:                                                ; preds = %2
  %7 = call fastcc i32 @uart_irq_rx_ready() #26, !dbg !3258
  %8 = icmp eq i32 %7, 0, !dbg !3259
  br i1 %8, label %27, label %9, !dbg !3259

9:                                                ; preds = %6, %24
  call void @llvm.dbg.value(metadata i8* %3, metadata !3252, metadata !DIExpression(DW_OP_deref)), !dbg !3253
  call fastcc void @uart_fifo_read(i8* noundef nonnull %3) #26, !dbg !3260
  %10 = load i8, i8* %3, align 1, !dbg !3262
  call void @llvm.dbg.value(metadata i8 %10, metadata !3252, metadata !DIExpression()), !dbg !3253
  %11 = icmp eq i8 %10, 10, !dbg !3264
  %12 = icmp eq i8 %10, 13
  %13 = or i1 %11, %12, !dbg !3265
  %14 = load i32, i32* @rx_buf_pos, align 4
  %15 = icmp sgt i32 %14, 0
  %16 = select i1 %13, i1 %15, i1 false, !dbg !3265
  br i1 %16, label %17, label %19, !dbg !3265

17:                                               ; preds = %9
  %18 = getelementptr inbounds [32 x i8], [32 x i8]* @rx_buf, i32 0, i32 %14, !dbg !3266
  store i8 0, i8* %18, align 1, !dbg !3268
  call fastcc void @k_msgq_put() #26, !dbg !3269
  store i32 0, i32* @rx_buf_pos, align 4, !dbg !3270
  br label %24, !dbg !3271

19:                                               ; preds = %9
  %20 = icmp ult i32 %14, 31, !dbg !3272
  br i1 %20, label %21, label %24, !dbg !3274

21:                                               ; preds = %19
  %22 = add nuw nsw i32 %14, 1, !dbg !3275
  store i32 %22, i32* @rx_buf_pos, align 4, !dbg !3275
  %23 = getelementptr inbounds [32 x i8], [32 x i8]* @rx_buf, i32 0, i32 %14, !dbg !3277
  store i8 %10, i8* %23, align 1, !dbg !3278
  br label %24, !dbg !3279

24:                                               ; preds = %19, %21, %17
  %25 = call fastcc i32 @uart_irq_rx_ready() #26, !dbg !3258
  %26 = icmp eq i32 %25, 0, !dbg !3259
  br i1 %26, label %27, label %9, !dbg !3259, !llvm.loop !3280

27:                                               ; preds = %24, %6, %2
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #25, !dbg !3282
  ret void, !dbg !3282
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_update() unnamed_addr #1 !dbg !3283 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !3286, metadata !DIExpression()), !dbg !3287
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3288, !srcloc !3290
  %1 = tail call fastcc i32 @z_impl_uart_irq_update() #26, !dbg !3291
  ret i32 %1, !dbg !3292
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready() unnamed_addr #1 !dbg !3293 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !3295, metadata !DIExpression()), !dbg !3297
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3298
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !3296, metadata !DIExpression()), !dbg !3297
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 13, !dbg !3299
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !3299
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !3301
  br i1 %4, label %7, label %5, !dbg !3302

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_45) #27, !dbg !3303
  br label %7, !dbg !3304

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !3297
  ret i32 %8, !dbg !3305
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_fifo_read(i8* noundef %0) unnamed_addr #1 !dbg !3306 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !3308, metadata !DIExpression()), !dbg !3312
  call void @llvm.dbg.value(metadata i8* %0, metadata !3309, metadata !DIExpression()), !dbg !3312
  call void @llvm.dbg.value(metadata i32 1, metadata !3310, metadata !DIExpression()), !dbg !3312
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3313
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !3311, metadata !DIExpression()), !dbg !3312
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 6, !dbg !3314
  %4 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %3, align 4, !dbg !3314
  %5 = icmp eq i32 (%struct.device*, i8*, i32)* %4, null, !dbg !3316
  br i1 %5, label %8, label %6, !dbg !3317

6:                                                ; preds = %1
  %7 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8* noundef %0, i32 noundef 1) #27, !dbg !3318
  br label %8, !dbg !3319

8:                                                ; preds = %1, %6
  ret void, !dbg !3320
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msgq_put() unnamed_addr #1 !dbg !3321 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3333, metadata !DIExpression()), !dbg !3334
  call void @llvm.dbg.value(metadata %struct.k_msgq* @uart_msgq, metadata !3331, metadata !DIExpression()), !dbg !3334
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([32 x i8], [32 x i8]* @rx_buf, i32 0, i32 0), metadata !3332, metadata !DIExpression()), !dbg !3334
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3335, !srcloc !3337
  %1 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef nonnull @uart_msgq, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @rx_buf, i32 0, i32 0), [1 x i64] zeroinitializer) #27, !dbg !3338
  ret void, !dbg !3339
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_update() unnamed_addr #1 !dbg !3340 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !3342, metadata !DIExpression()), !dbg !3344
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3345
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !3343, metadata !DIExpression()), !dbg !3344
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 17, !dbg !3346
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !3346
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !3348
  br i1 %4, label %7, label %5, !dbg !3349

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_45) #27, !dbg !3350
  br label %7, !dbg !3351

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !3344
  ret i32 %8, !dbg !3352
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_uart(i8* noundef %0) local_unnamed_addr #1 !dbg !3353 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3357, metadata !DIExpression()), !dbg !3361
  %2 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !3362
  call void @llvm.dbg.value(metadata i32 %2, metadata !3358, metadata !DIExpression()), !dbg !3361
  call void @llvm.dbg.value(metadata i32 0, metadata !3359, metadata !DIExpression()), !dbg !3363
  %3 = icmp sgt i32 %2, 0, !dbg !3364
  br i1 %3, label %5, label %4, !dbg !3366

4:                                                ; preds = %5, %1
  ret void, !dbg !3367

5:                                                ; preds = %1, %5
  %6 = phi i32 [ %9, %5 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !3359, metadata !DIExpression()), !dbg !3363
  %7 = getelementptr inbounds i8, i8* %0, i32 %6, !dbg !3368
  %8 = load i8, i8* %7, align 1, !dbg !3368
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %8) #26, !dbg !3370
  %9 = add nuw nsw i32 %6, 1, !dbg !3371
  call void @llvm.dbg.value(metadata i32 %9, metadata !3359, metadata !DIExpression()), !dbg !3363
  %10 = icmp eq i32 %9, %2, !dbg !3364
  br i1 %10, label %4, label %5, !dbg !3366, !llvm.loop !3372
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !3374 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !3376, metadata !DIExpression()), !dbg !3378
  call void @llvm.dbg.value(metadata i8 %0, metadata !3377, metadata !DIExpression()), !dbg !3378
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3379, !srcloc !3381
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #26, !dbg !3382
  ret void, !dbg !3383
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !3384 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !3386, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8 %0, metadata !3387, metadata !DIExpression()), !dbg !3389
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3390
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !3388, metadata !DIExpression()), !dbg !3389
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !3391
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !3391
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #27, !dbg !3392
  ret void, !dbg !3393
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3394 {
  %1 = alloca [32 x i8], align 1
  %2 = getelementptr inbounds [32 x i8], [32 x i8]* %1, i32 0, i32 0, !dbg !3397
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #25, !dbg !3397
  call void @llvm.dbg.declare(metadata [32 x i8]* %1, metadata !3396, metadata !DIExpression()), !dbg !3398
  %3 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !3399
  br i1 %3, label %5, label %4, !dbg !3401

4:                                                ; preds = %0
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i32 0, i32 0)) #27, !dbg !3402
  br label %11, !dbg !3404

5:                                                ; preds = %0
  tail call fastcc void @uart_irq_callback_user_data_set() #26, !dbg !3405
  tail call fastcc void @uart_irq_rx_enable() #26, !dbg !3406
  tail call void @print_uart(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i32 0, i32 0)) #26, !dbg !3407
  tail call void @print_uart(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2, i32 0, i32 0)) #26, !dbg !3408
  %6 = call fastcc i32 @k_msgq_get(i8* noundef nonnull %2) #26, !dbg !3409
  %7 = icmp eq i32 %6, 0, !dbg !3410
  br i1 %7, label %8, label %11, !dbg !3411

8:                                                ; preds = %5, %8
  call void @print_uart(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0)) #26, !dbg !3412
  call void @print_uart(i8* noundef nonnull %2) #26, !dbg !3414
  call void @print_uart(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i32 0, i32 0)) #26, !dbg !3415
  %9 = call fastcc i32 @k_msgq_get(i8* noundef nonnull %2) #26, !dbg !3409
  %10 = icmp eq i32 %9, 0, !dbg !3410
  br i1 %10, label %8, label %11, !dbg !3411, !llvm.loop !3416

11:                                               ; preds = %8, %5, %4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #25, !dbg !3418
  ret void, !dbg !3418
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !3419 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !3424, metadata !DIExpression()), !dbg !3425
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3426, !srcloc !3428
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !3429
  ret i1 %1, !dbg !3430
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set() unnamed_addr #1 !dbg !3431 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !3433, metadata !DIExpression()), !dbg !3437
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @serial_cb, metadata !3434, metadata !DIExpression()), !dbg !3437
  call void @llvm.dbg.value(metadata i8* null, metadata !3435, metadata !DIExpression()), !dbg !3437
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3438
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !3436, metadata !DIExpression()), !dbg !3437
  %2 = icmp eq %struct.uart_driver_api* %1, null, !dbg !3439
  br i1 %2, label %8, label %3, !dbg !3441

3:                                                ; preds = %0
  %4 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 18, !dbg !3442
  %5 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %4, align 4, !dbg !3442
  %6 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %5, null, !dbg !3443
  br i1 %6, label %8, label %7, !dbg !3444

7:                                                ; preds = %3
  tail call void %5(%struct.device* noundef nonnull @__device_dts_ord_45, void (%struct.device*, i8*)* noundef nonnull @serial_cb, i8* noundef null) #27, !dbg !3445
  br label %8, !dbg !3447

8:                                                ; preds = %7, %3, %0
  ret void, !dbg !3448
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable() unnamed_addr #1 !dbg !3449 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !3451, metadata !DIExpression()), !dbg !3452
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3453, !srcloc !3455
  tail call fastcc void @z_impl_uart_irq_rx_enable() #26, !dbg !3456
  ret void, !dbg !3457
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get(i8* noundef %0) unnamed_addr #1 !dbg !3458 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3464, metadata !DIExpression()), !dbg !3465
  call void @llvm.dbg.value(metadata %struct.k_msgq* @uart_msgq, metadata !3462, metadata !DIExpression()), !dbg !3465
  call void @llvm.dbg.value(metadata i8* %0, metadata !3463, metadata !DIExpression()), !dbg !3465
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3466, !srcloc !3468
  %2 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef nonnull @uart_msgq, i8* noundef %0, [1 x i64] [i64 -1]) #27, !dbg !3469
  ret i32 %2, !dbg !3470
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable() unnamed_addr #1 !dbg !3471 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !3473, metadata !DIExpression()), !dbg !3475
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3476
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !3474, metadata !DIExpression()), !dbg !3475
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 10, !dbg !3477
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !3477
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !3479
  br i1 %4, label %6, label %5, !dbg !3480

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_45) #27, !dbg !3481
  br label %6, !dbg !3483

6:                                                ; preds = %5, %0
  ret void, !dbg !3484
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !3485 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !3487, metadata !DIExpression()), !dbg !3488
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #27, !dbg !3489
  ret i1 %1, !dbg !3490
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3491 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3493, metadata !DIExpression()), !dbg !3494
  ret i32 0, !dbg !3495
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !3496 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3500, metadata !DIExpression()), !dbg !3501
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3502
  ret void, !dbg !3503
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !3504 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3507
  ret i8* %1, !dbg !3508
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3509 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3521, metadata !DIExpression()), !dbg !3530
  call void @llvm.dbg.value(metadata i8* %0, metadata !3520, metadata !DIExpression()), !dbg !3530
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !3531
  ret void, !dbg !3533
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3534 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3538, metadata !DIExpression()), !dbg !3540
  call void @llvm.dbg.value(metadata i8* %1, metadata !3539, metadata !DIExpression()), !dbg !3540
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3541
  %4 = tail call i32 %3(i32 noundef %0) #27, !dbg !3541
  ret i32 %4, !dbg !3542
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3543 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3555, metadata !DIExpression()), !dbg !3556
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3552, metadata !DIExpression()), !dbg !3556
  call void @llvm.dbg.value(metadata i8* %1, metadata !3553, metadata !DIExpression()), !dbg !3556
  call void @llvm.dbg.value(metadata i8* %2, metadata !3554, metadata !DIExpression()), !dbg !3556
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #27, !dbg !3557
  ret void, !dbg !3558
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3559 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3563, metadata !DIExpression()), !dbg !3566
  call void @llvm.dbg.value(metadata i32 %1, metadata !3564, metadata !DIExpression()), !dbg !3566
  call void @llvm.dbg.value(metadata i32 0, metadata !3565, metadata !DIExpression()), !dbg !3566
  %3 = icmp eq i32 %1, 0, !dbg !3567
  br i1 %3, label %13, label %4, !dbg !3570

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3565, metadata !DIExpression()), !dbg !3566
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3571
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3573
  %8 = load i8, i8* %7, align 1, !dbg !3573
  %9 = zext i8 %8 to i32, !dbg !3573
  %10 = tail call i32 %6(i32 noundef %9) #27, !dbg !3571
  %11 = add nuw i32 %5, 1, !dbg !3574
  call void @llvm.dbg.value(metadata i32 %11, metadata !3565, metadata !DIExpression()), !dbg !3566
  %12 = icmp eq i32 %11, %1, !dbg !3567
  br i1 %12, label %13, label %4, !dbg !3570, !llvm.loop !3575

13:                                               ; preds = %4, %2
  ret void, !dbg !3577
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3578 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3582, metadata !DIExpression()), !dbg !3584
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3585
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3585
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3583, metadata !DIExpression()), !dbg !3586
  call void @llvm.va_start(i8* nonnull %3), !dbg !3587
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3588
  %5 = load i32, i32* %4, align 4, !dbg !3588
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3588
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !3588
  call void @llvm.va_end(i8* nonnull %3), !dbg !3589
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3590
  ret void, !dbg !3590
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3591 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3595, metadata !DIExpression()), !dbg !3600
  call void @llvm.dbg.value(metadata i32 %1, metadata !3596, metadata !DIExpression()), !dbg !3600
  call void @llvm.dbg.value(metadata i8* %2, metadata !3597, metadata !DIExpression()), !dbg !3600
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3601
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3601
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3598, metadata !DIExpression()), !dbg !3602
  call void @llvm.va_start(i8* nonnull %5), !dbg !3603
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3604
  %7 = load i32, i32* %6, align 4, !dbg !3604
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3604
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !3604
  call void @llvm.dbg.value(metadata i32 %9, metadata !3599, metadata !DIExpression()), !dbg !3600
  call void @llvm.va_end(i8* nonnull %5), !dbg !3605
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3606
  ret i32 %9, !dbg !3607
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3608 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3615, metadata !DIExpression()), !dbg !3622
  call void @llvm.dbg.value(metadata i8* %0, metadata !3612, metadata !DIExpression()), !dbg !3622
  call void @llvm.dbg.value(metadata i32 %1, metadata !3613, metadata !DIExpression()), !dbg !3622
  call void @llvm.dbg.value(metadata i8* %2, metadata !3614, metadata !DIExpression()), !dbg !3622
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3623
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3623
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3616, metadata !DIExpression()), !dbg !3624
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3625
  store i8* %0, i8** %7, align 4, !dbg !3625
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3625
  store i32 %1, i32* %8, align 4, !dbg !3625
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3625
  store i32 0, i32* %9, align 4, !dbg !3625
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !3626
  %10 = load i32, i32* %9, align 4, !dbg !3627
  %11 = load i32, i32* %8, align 4, !dbg !3629
  %12 = icmp slt i32 %10, %11, !dbg !3630
  br i1 %12, label %13, label %15, !dbg !3631

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3632
  store i8 0, i8* %14, align 1, !dbg !3634
  br label %15, !dbg !3635

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3636
  ret i32 %10, !dbg !3637
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #7 !dbg !3638 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3643, metadata !DIExpression()), !dbg !3645
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3644, metadata !DIExpression()), !dbg !3645
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3646
  %4 = load i8*, i8** %3, align 4, !dbg !3646
  %5 = icmp eq i8* %4, null, !dbg !3648
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3649
  br i1 %5, label %12, label %8, !dbg !3650

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3651
  %10 = load i32, i32* %9, align 4, !dbg !3651
  %11 = icmp slt i32 %7, %10, !dbg !3652
  br i1 %11, label %15, label %12, !dbg !3653

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3654
  %14 = add nsw i32 %7, 1, !dbg !3656
  store i32 %14, i32* %13, align 4, !dbg !3656
  br label %25, !dbg !3657

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3658
  %17 = icmp eq i32 %7, %16, !dbg !3660
  br i1 %17, label %18, label %21, !dbg !3661

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3662
  store i32 %19, i32* %6, align 4, !dbg !3662
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3664
  store i8 0, i8* %20, align 1, !dbg !3665
  br label %25, !dbg !3666

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3667
  %23 = add nsw i32 %7, 1, !dbg !3669
  store i32 %23, i32* %6, align 4, !dbg !3669
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3670
  store i8 %22, i8* %24, align 1, !dbg !3671
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3672
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #8 !dbg !3673 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3683, metadata !DIExpression()), !dbg !3687
  call void @llvm.dbg.value(metadata i8* %1, metadata !3684, metadata !DIExpression()), !dbg !3687
  call void @llvm.dbg.value(metadata i8* %2, metadata !3685, metadata !DIExpression()), !dbg !3687
  call void @llvm.dbg.value(metadata i8* %3, metadata !3686, metadata !DIExpression()), !dbg !3687
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !3688
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !3689
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !3690
  unreachable, !dbg !3691
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3692 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !3796
  ret %struct.k_thread* %1, !dbg !3797
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3798 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3802, metadata !DIExpression()), !dbg !3803
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3804, !srcloc !3806
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !3807
  ret void, !dbg !3808
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3809 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3810, !srcloc !3812
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !3813
  ret %struct.k_thread* %1, !dbg !3814
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !3815 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3826, metadata !DIExpression()), !dbg !3830
  call void @llvm.dbg.value(metadata i8* %1, metadata !3827, metadata !DIExpression()), !dbg !3830
  %3 = icmp eq i8* %1, null, !dbg !3831
  br i1 %3, label %8, label %4, !dbg !3833

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3834
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3834
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3828, metadata !DIExpression()), !dbg !3830
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !3835, !range !3836
  call void @llvm.dbg.value(metadata i32 %7, metadata !3829, metadata !DIExpression()), !dbg !3830
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !3837
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !3838
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !3839
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3840 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3844, metadata !DIExpression()), !dbg !3848
  call void @llvm.dbg.value(metadata i8* %1, metadata !3845, metadata !DIExpression()), !dbg !3848
  call void @llvm.dbg.value(metadata i8* %1, metadata !3846, metadata !DIExpression()), !dbg !3848
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3849
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3847, metadata !DIExpression()), !dbg !3848
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3850
  %5 = ptrtoint i8* %4 to i32, !dbg !3851
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3851
  %7 = sub i32 %5, %6, !dbg !3851
  %8 = lshr i32 %7, 3, !dbg !3852
  ret i32 %8, !dbg !3853
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #7 !dbg !3854 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3858, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.value(metadata i32 %1, metadata !3859, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.value(metadata i1 %2, metadata !3860, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3863
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3864
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3861, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3862, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3863
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3865
  %6 = bitcast i8* %5 to i16*, !dbg !3865
  %7 = load i16, i16* %6, align 2, !dbg !3865
  %8 = and i16 %7, -2, !dbg !3869
  %9 = zext i1 %2 to i16, !dbg !3869
  %10 = or i16 %8, %9, !dbg !3869
  store i16 %10, i16* %6, align 2, !dbg !3865
  ret void, !dbg !3870
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3871 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3875, metadata !DIExpression()), !dbg !3877
  call void @llvm.dbg.value(metadata i32 %1, metadata !3876, metadata !DIExpression()), !dbg !3877
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3878
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3880
  br i1 %4, label %7, label %5, !dbg !3881

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3882
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3884
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3885
  br label %7, !dbg !3886

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3887, !range !3889
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3890
  br i1 %9, label %13, label %10, !dbg !3891

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3892
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3894, !range !3889
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !3895
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3896
  call void @llvm.dbg.value(metadata i32 %12, metadata !3876, metadata !DIExpression()), !dbg !3877
  br label %13, !dbg !3897

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3876, metadata !DIExpression()), !dbg !3877
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !3898
  ret void, !dbg !3899
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3900 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3904, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.value(metadata i32 %1, metadata !3905, metadata !DIExpression()), !dbg !3906
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3907
  %4 = add i32 %3, %1, !dbg !3908
  ret i32 %4, !dbg !3909
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3910 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3914, metadata !DIExpression()), !dbg !3916
  call void @llvm.dbg.value(metadata i32 %1, metadata !3915, metadata !DIExpression()), !dbg !3916
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3917
  %4 = and i32 %3, 1, !dbg !3918
  %5 = icmp ne i32 %4, 0, !dbg !3917
  ret i1 %5, !dbg !3919
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3920 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3922, metadata !DIExpression()), !dbg !3927
  call void @llvm.dbg.value(metadata i32 %1, metadata !3923, metadata !DIExpression()), !dbg !3927
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3928, !range !3929
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3930
  call void @llvm.dbg.value(metadata i32 %4, metadata !3924, metadata !DIExpression()), !dbg !3931
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3932
  ret void, !dbg !3933
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3934 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3938, metadata !DIExpression()), !dbg !3943
  call void @llvm.dbg.value(metadata i32 %1, metadata !3939, metadata !DIExpression()), !dbg !3943
  call void @llvm.dbg.value(metadata i32 %2, metadata !3940, metadata !DIExpression()), !dbg !3943
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3944
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3945
  %6 = add i32 %5, %4, !dbg !3946
  call void @llvm.dbg.value(metadata i32 %6, metadata !3941, metadata !DIExpression()), !dbg !3943
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3947
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3948
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !3949
  ret void, !dbg !3950
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3951 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3953, metadata !DIExpression()), !dbg !3955
  call void @llvm.dbg.value(metadata i32 %1, metadata !3954, metadata !DIExpression()), !dbg !3955
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !3956
  %4 = sub i32 %1, %3, !dbg !3957
  ret i32 %4, !dbg !3958
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3959 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3961, metadata !DIExpression()), !dbg !3966
  call void @llvm.dbg.value(metadata i32 %1, metadata !3962, metadata !DIExpression()), !dbg !3966
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3967, !range !3929
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3968
  call void @llvm.dbg.value(metadata i32 %4, metadata !3963, metadata !DIExpression()), !dbg !3969
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3970
  ret void, !dbg !3971
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3972 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3976, metadata !DIExpression()), !dbg !3978
  call void @llvm.dbg.value(metadata i32 %1, metadata !3977, metadata !DIExpression()), !dbg !3978
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3979
  %4 = lshr i32 %3, 1, !dbg !3980
  ret i32 %4, !dbg !3981
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !3982 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3986, metadata !DIExpression()), !dbg !3989
  call void @llvm.dbg.value(metadata i32 %1, metadata !3987, metadata !DIExpression()), !dbg !3989
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !3990
  %4 = add i32 %1, 1, !dbg !3991
  %5 = sub i32 %4, %3, !dbg !3992
  call void @llvm.dbg.value(metadata i32 %5, metadata !3988, metadata !DIExpression()), !dbg !3989
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !3993, !range !3994
  %7 = sub nsw i32 31, %6, !dbg !3995
  ret i32 %7, !dbg !3996
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3997 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4001, metadata !DIExpression()), !dbg !4010
  call void @llvm.dbg.value(metadata i32 %1, metadata !4002, metadata !DIExpression()), !dbg !4010
  call void @llvm.dbg.value(metadata i32 %2, metadata !4003, metadata !DIExpression()), !dbg !4010
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !4004, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4010
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !4011
  %5 = load i32, i32* %4, align 4, !dbg !4011
  %6 = icmp eq i32 %5, 0, !dbg !4012
  br i1 %6, label %7, label %12, !dbg !4013

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4014
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4016
  %10 = load i32, i32* %9, align 4, !dbg !4017
  %11 = or i32 %10, %8, !dbg !4017
  store i32 %11, i32* %9, align 4, !dbg !4017
  store i32 %1, i32* %4, align 4, !dbg !4018
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !4019
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !4020
  br label %14, !dbg !4021

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !4006, metadata !DIExpression()), !dbg !4022
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !4023, !range !4024
  call void @llvm.dbg.value(metadata i32 %13, metadata !4009, metadata !DIExpression()), !dbg !4022
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !4025
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !4026
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !4027
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !4028
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !4029
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4030 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4032, metadata !DIExpression()), !dbg !4035
  call void @llvm.dbg.value(metadata i32 %1, metadata !4033, metadata !DIExpression()), !dbg !4035
  call void @llvm.dbg.value(metadata i32 %2, metadata !4034, metadata !DIExpression()), !dbg !4035
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !4036
  ret void, !dbg !4037
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4038 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4040, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i32 %1, metadata !4041, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i32 %2, metadata !4042, metadata !DIExpression()), !dbg !4043
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !4044
  ret void, !dbg !4045
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4046 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4048, metadata !DIExpression()), !dbg !4050
  call void @llvm.dbg.value(metadata i32 %1, metadata !4049, metadata !DIExpression()), !dbg !4050
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !4051
  ret i32 %3, !dbg !4052
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !4053 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4057, metadata !DIExpression()), !dbg !4062
  call void @llvm.dbg.value(metadata i32 %1, metadata !4058, metadata !DIExpression()), !dbg !4062
  call void @llvm.dbg.value(metadata i32 %2, metadata !4059, metadata !DIExpression()), !dbg !4062
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4063
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4060, metadata !DIExpression()), !dbg !4062
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4061, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4062
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4061, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4062
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !4064
  call void @llvm.dbg.value(metadata i8* %5, metadata !4061, metadata !DIExpression()), !dbg !4062
  %6 = bitcast i8* %5 to i16*, !dbg !4065
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !4068
  %8 = load i16, i16* %7, align 2, !dbg !4068
  %9 = zext i16 %8 to i32, !dbg !4068
  ret i32 %9, !dbg !4069
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !4070 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4074, metadata !DIExpression()), !dbg !4075
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !4076
  ret %struct.chunk_unit_t* %2, !dbg !4077
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !4078 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4082, metadata !DIExpression()), !dbg !4088
  call void @llvm.dbg.value(metadata i32 %1, metadata !4083, metadata !DIExpression()), !dbg !4088
  call void @llvm.dbg.value(metadata i32 %2, metadata !4084, metadata !DIExpression()), !dbg !4088
  call void @llvm.dbg.value(metadata i32 %3, metadata !4085, metadata !DIExpression()), !dbg !4088
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4089
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !4086, metadata !DIExpression()), !dbg !4088
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !4087, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4088
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !4090
  call void @llvm.dbg.value(metadata i8* %6, metadata !4087, metadata !DIExpression()), !dbg !4088
  %7 = trunc i32 %3 to i16, !dbg !4091
  %8 = bitcast i8* %6 to i16*, !dbg !4094
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !4095
  store i16 %7, i16* %9, align 2, !dbg !4096
  ret void, !dbg !4097
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !4098 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4102, metadata !DIExpression()), !dbg !4103
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !4104
  ret i32 %2, !dbg !4105
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4106 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4110, metadata !DIExpression()), !dbg !4112
  call void @llvm.dbg.value(metadata i32 %1, metadata !4111, metadata !DIExpression()), !dbg !4112
  %3 = add i32 %1, 4, !dbg !4113
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !4114
  ret i32 %4, !dbg !4115
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !4116 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4120, metadata !DIExpression()), !dbg !4121
  %2 = add i32 %0, 7, !dbg !4122
  %3 = lshr i32 %2, 3, !dbg !4123
  ret i32 %3, !dbg !4124
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4125 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4129, metadata !DIExpression()), !dbg !4132
  call void @llvm.dbg.value(metadata i32 %1, metadata !4130, metadata !DIExpression()), !dbg !4132
  call void @llvm.dbg.value(metadata i32 %2, metadata !4131, metadata !DIExpression()), !dbg !4132
  %4 = shl i32 %2, 1, !dbg !4133
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !4134
  ret void, !dbg !4135
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4136 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4138, metadata !DIExpression()), !dbg !4141
  call void @llvm.dbg.value(metadata i32 %1, metadata !4139, metadata !DIExpression()), !dbg !4141
  call void @llvm.dbg.value(metadata i32 %2, metadata !4140, metadata !DIExpression()), !dbg !4141
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !4142
  ret void, !dbg !4143
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !4144 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4146, metadata !DIExpression()), !dbg !4154
  call void @llvm.dbg.value(metadata i32 %1, metadata !4147, metadata !DIExpression()), !dbg !4154
  call void @llvm.dbg.value(metadata i32 %2, metadata !4148, metadata !DIExpression()), !dbg !4154
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !4155
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !4149, metadata !DIExpression()), !dbg !4154
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4156
  %6 = icmp eq i32 %5, %1, !dbg !4157
  br i1 %6, label %7, label %14, !dbg !4158

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4159
  %9 = xor i32 %8, -1, !dbg !4161
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4162
  %11 = load i32, i32* %10, align 4, !dbg !4163
  %12 = and i32 %11, %9, !dbg !4163
  store i32 %12, i32* %10, align 4, !dbg !4163
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4164
  store i32 0, i32* %13, align 4, !dbg !4165
  br label %17, !dbg !4166

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4167
  call void @llvm.dbg.value(metadata i32 %15, metadata !4150, metadata !DIExpression()), !dbg !4168
  call void @llvm.dbg.value(metadata i32 %5, metadata !4153, metadata !DIExpression()), !dbg !4168
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4169
  store i32 %5, i32* %16, align 4, !dbg !4170
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !4171
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !4172
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !4173
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4174 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4176, metadata !DIExpression()), !dbg !4178
  call void @llvm.dbg.value(metadata i32 %1, metadata !4177, metadata !DIExpression()), !dbg !4178
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !4179
  ret i32 %3, !dbg !4180
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !4181 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4185, metadata !DIExpression()), !dbg !4192
  call void @llvm.dbg.value(metadata i8* %1, metadata !4186, metadata !DIExpression()), !dbg !4192
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4193
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4193
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4187, metadata !DIExpression()), !dbg !4192
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !4194
  call void @llvm.dbg.value(metadata i32 %5, metadata !4188, metadata !DIExpression()), !dbg !4192
  %6 = ptrtoint i8* %1 to i32, !dbg !4195
  call void @llvm.dbg.value(metadata i32 %6, metadata !4189, metadata !DIExpression()), !dbg !4192
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !4196
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !4196
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !4197
  call void @llvm.dbg.value(metadata i32 %9, metadata !4190, metadata !DIExpression()), !dbg !4192
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !4198
  %11 = shl i32 %10, 3, !dbg !4199
  call void @llvm.dbg.value(metadata i32 %11, metadata !4191, metadata !DIExpression()), !dbg !4192
  %12 = sub i32 %9, %6, !dbg !4200
  %13 = add i32 %12, %11, !dbg !4201
  ret i32 %13, !dbg !4202
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !4203 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4207, metadata !DIExpression()), !dbg !4213
  call void @llvm.dbg.value(metadata i32 %1, metadata !4208, metadata !DIExpression()), !dbg !4213
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4214
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4214
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4209, metadata !DIExpression()), !dbg !4213
  %5 = icmp eq i32 %1, 0, !dbg !4215
  br i1 %5, label %19, label %6, !dbg !4217

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4218
  br i1 %7, label %19, label %8, !dbg !4219

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4220, !range !3836
  call void @llvm.dbg.value(metadata i32 %9, metadata !4211, metadata !DIExpression()), !dbg !4213
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !4221
  call void @llvm.dbg.value(metadata i32 %10, metadata !4212, metadata !DIExpression()), !dbg !4213
  %11 = icmp eq i32 %10, 0, !dbg !4222
  br i1 %11, label %19, label %12, !dbg !4224

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4225
  %14 = icmp ugt i32 %13, %9, !dbg !4227
  br i1 %14, label %15, label %17, !dbg !4228

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !4229
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !4231
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !4232
  br label %17, !dbg !4233

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !4234
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4235
  call void @llvm.dbg.value(metadata i8* %18, metadata !4210, metadata !DIExpression()), !dbg !4213
  br label %19, !dbg !4236

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !4213
  ret i8* %20, !dbg !4237
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4238 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4242, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %1, metadata !4243, metadata !DIExpression()), !dbg !4244
  %3 = lshr i32 %1, 3, !dbg !4245
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4246
  %5 = load i32, i32* %4, align 4, !dbg !4246
  %6 = icmp uge i32 %3, %5, !dbg !4247
  ret i1 %6, !dbg !4248
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4249 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4253, metadata !DIExpression()), !dbg !4268
  call void @llvm.dbg.value(metadata i32 %1, metadata !4254, metadata !DIExpression()), !dbg !4268
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4269
  call void @llvm.dbg.value(metadata i32 %3, metadata !4255, metadata !DIExpression()), !dbg !4268
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !4256, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4268
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !4270
  %5 = load i32, i32* %4, align 4, !dbg !4270
  %6 = icmp eq i32 %5, 0, !dbg !4271
  br i1 %6, label %19, label %7, !dbg !4272

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !4273
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !4274
  call void @llvm.dbg.value(metadata i32 %9, metadata !4260, metadata !DIExpression()), !dbg !4274
  call void @llvm.dbg.value(metadata i32 %8, metadata !4261, metadata !DIExpression()), !dbg !4275
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4276
  %11 = icmp ult i32 %10, %1, !dbg !4278
  br i1 %11, label %13, label %12, !dbg !4279

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !4280
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4282
  store i32 %14, i32* %4, align 4, !dbg !4283
  %15 = add nsw i32 %9, -1, !dbg !4284
  call void @llvm.dbg.value(metadata i32 %15, metadata !4260, metadata !DIExpression()), !dbg !4274
  %16 = icmp eq i32 %15, 0, !dbg !4284
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !4285
  br i1 %18, label %19, label %7, !dbg !4285, !llvm.loop !4286

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4289
  %21 = load i32, i32* %20, align 4, !dbg !4289
  %22 = add nsw i32 %3, 1, !dbg !4290
  %23 = shl nsw i32 -1, %22, !dbg !4290
  %24 = and i32 %21, %23, !dbg !4291
  call void @llvm.dbg.value(metadata i32 %24, metadata !4263, metadata !DIExpression()), !dbg !4268
  %25 = icmp eq i32 %24, 0, !dbg !4292
  br i1 %25, label %30, label %26, !dbg !4293

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !4294, !range !3994
  call void @llvm.dbg.value(metadata i32 %27, metadata !4264, metadata !DIExpression()), !dbg !4295
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !4296
  %29 = load i32, i32* %28, align 4, !dbg !4296
  call void @llvm.dbg.value(metadata i32 %29, metadata !4267, metadata !DIExpression()), !dbg !4295
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !4297
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !4268
  ret i32 %31, !dbg !4298
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !4299 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4301, metadata !DIExpression()), !dbg !4307
  call void @llvm.dbg.value(metadata i32 %1, metadata !4302, metadata !DIExpression()), !dbg !4307
  call void @llvm.dbg.value(metadata i32 %2, metadata !4303, metadata !DIExpression()), !dbg !4307
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4308
  call void @llvm.dbg.value(metadata i32 %4, metadata !4304, metadata !DIExpression()), !dbg !4307
  %5 = sub i32 %2, %1, !dbg !4309
  call void @llvm.dbg.value(metadata i32 %5, metadata !4305, metadata !DIExpression()), !dbg !4307
  %6 = sub i32 %4, %5, !dbg !4310
  call void @llvm.dbg.value(metadata i32 %6, metadata !4306, metadata !DIExpression()), !dbg !4307
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !4311
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !4312
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !4313
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4314
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !4315
  ret void, !dbg !4316
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4317 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4321, metadata !DIExpression()), !dbg !4325
  call void @llvm.dbg.value(metadata i32 %1, metadata !4322, metadata !DIExpression()), !dbg !4325
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4326
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4323, metadata !DIExpression()), !dbg !4325
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !4327
  call void @llvm.dbg.value(metadata i8* %4, metadata !4324, metadata !DIExpression()), !dbg !4325
  ret i8* %4, !dbg !4328
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4329 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4333, metadata !DIExpression()), !dbg !4345
  call void @llvm.dbg.value(metadata i32 %1, metadata !4334, metadata !DIExpression()), !dbg !4345
  call void @llvm.dbg.value(metadata i32 %2, metadata !4335, metadata !DIExpression()), !dbg !4345
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4346
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4346
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !4336, metadata !DIExpression()), !dbg !4345
  %6 = sub i32 0, %1, !dbg !4347
  %7 = and i32 %6, %1, !dbg !4348
  call void @llvm.dbg.value(metadata i32 %7, metadata !4338, metadata !DIExpression()), !dbg !4345
  %8 = icmp eq i32 %7, %1, !dbg !4349
  br i1 %8, label %13, label %9, !dbg !4351

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !4352
  call void @llvm.dbg.value(metadata i32 %10, metadata !4334, metadata !DIExpression()), !dbg !4345
  %11 = icmp ult i32 %7, 4, !dbg !4354
  %12 = select i1 %11, i32 %7, i32 4, !dbg !4354
  br label %17, !dbg !4354

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !4355
  br i1 %14, label %15, label %17, !dbg !4358

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !4359
  br label %57, !dbg !4361

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !4345
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !4362
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4334, metadata !DIExpression()), !dbg !4345
  call void @llvm.dbg.value(metadata i32 %19, metadata !4337, metadata !DIExpression()), !dbg !4345
  call void @llvm.dbg.value(metadata i32 %18, metadata !4338, metadata !DIExpression()), !dbg !4345
  %21 = icmp eq i32 %2, 0, !dbg !4363
  br i1 %21, label %57, label %22, !dbg !4365

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !4366
  br i1 %23, label %57, label %24, !dbg !4367

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !4368
  %26 = add i32 %25, %20, !dbg !4369
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #26, !dbg !4370, !range !3836
  call void @llvm.dbg.value(metadata i32 %27, metadata !4339, metadata !DIExpression()), !dbg !4345
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #26, !dbg !4371
  call void @llvm.dbg.value(metadata i32 %28, metadata !4340, metadata !DIExpression()), !dbg !4345
  %29 = icmp eq i32 %28, 0, !dbg !4372
  br i1 %29, label %57, label %30, !dbg !4374

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4375
  call void @llvm.dbg.value(metadata i8* %31, metadata !4341, metadata !DIExpression()), !dbg !4345
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !4376
  %33 = ptrtoint i8* %32 to i32, !dbg !4376
  %34 = add i32 %20, -1, !dbg !4376
  %35 = add i32 %34, %33, !dbg !4376
  %36 = sub i32 0, %20, !dbg !4376
  %37 = and i32 %35, %36, !dbg !4376
  %38 = inttoptr i32 %37 to i8*, !dbg !4377
  %39 = sub i32 0, %18, !dbg !4378
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !4378
  call void @llvm.dbg.value(metadata i8* %40, metadata !4341, metadata !DIExpression()), !dbg !4345
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !4379
  %42 = ptrtoint i8* %41 to i32, !dbg !4379
  %43 = add i32 %42, 7, !dbg !4379
  %44 = and i32 %43, -8, !dbg !4379
  call void @llvm.dbg.value(metadata i32 %44, metadata !4342, metadata !DIExpression()), !dbg !4345
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #26, !dbg !4380
  call void @llvm.dbg.value(metadata i32 %45, metadata !4343, metadata !DIExpression()), !dbg !4345
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !4381
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !4382
  %48 = sub i32 %44, %47, !dbg !4382
  %49 = ashr exact i32 %48, 3, !dbg !4382
  call void @llvm.dbg.value(metadata i32 %49, metadata !4344, metadata !DIExpression()), !dbg !4345
  %50 = icmp ugt i32 %45, %28, !dbg !4383
  br i1 %50, label %51, label %52, !dbg !4385

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #26, !dbg !4386
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4388
  br label %52, !dbg !4389

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !4390
  %54 = icmp ugt i32 %53, %49, !dbg !4392
  br i1 %54, label %55, label %56, !dbg !4393

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #26, !dbg !4394
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !4396
  br label %56, !dbg !4397

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #26, !dbg !4398
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !4345
  ret i8* %58, !dbg !4399
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !4400 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4404, metadata !DIExpression()), !dbg !4423
  call void @llvm.dbg.value(metadata i8* %1, metadata !4405, metadata !DIExpression()), !dbg !4423
  call void @llvm.dbg.value(metadata i32 %2, metadata !4406, metadata !DIExpression()), !dbg !4423
  call void @llvm.dbg.value(metadata i32 %3, metadata !4407, metadata !DIExpression()), !dbg !4423
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4424
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4424
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4408, metadata !DIExpression()), !dbg !4423
  %7 = icmp eq i8* %1, null, !dbg !4425
  br i1 %7, label %8, label %10, !dbg !4427

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4428
  br label %59, !dbg !4430

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !4431
  br i1 %11, label %12, label %13, !dbg !4433

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4434
  br label %59, !dbg !4436

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !4437
  br i1 %14, label %59, label %15, !dbg !4439

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !4440, !range !3836
  call void @llvm.dbg.value(metadata i32 %16, metadata !4409, metadata !DIExpression()), !dbg !4423
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4441
  call void @llvm.dbg.value(metadata i32 %17, metadata !4410, metadata !DIExpression()), !dbg !4423
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4442
  %19 = ptrtoint i8* %1 to i32, !dbg !4443
  %20 = ptrtoint i8* %18 to i32, !dbg !4443
  %21 = sub i32 %19, %20, !dbg !4443
  call void @llvm.dbg.value(metadata i32 %21, metadata !4411, metadata !DIExpression()), !dbg !4423
  %22 = add i32 %21, %3, !dbg !4444
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4445
  call void @llvm.dbg.value(metadata i32 %23, metadata !4412, metadata !DIExpression()), !dbg !4423
  %24 = icmp eq i32 %2, 0, !dbg !4446
  br i1 %24, label %29, label %25, !dbg !4447

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !4448
  %27 = and i32 %26, %19, !dbg !4449
  %28 = icmp eq i32 %27, 0, !dbg !4449
  br i1 %28, label %29, label %49, !dbg !4450

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4451
  %31 = icmp eq i32 %23, %30, !dbg !4452
  br i1 %31, label %59, label %32, !dbg !4453

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !4454
  br i1 %33, label %34, label %36, !dbg !4455

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !4456
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #26, !dbg !4458
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4459
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #26, !dbg !4460
  br label %59, !dbg !4461

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4462
  br i1 %37, label %49, label %38, !dbg !4463

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4464
  %40 = add i32 %39, %30, !dbg !4465
  %41 = icmp ult i32 %40, %23, !dbg !4466
  br i1 %41, label %49, label %42, !dbg !4467

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !4468
  call void @llvm.dbg.value(metadata i32 %43, metadata !4413, metadata !DIExpression()), !dbg !4469
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4470
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4471
  %45 = icmp ult i32 %43, %44, !dbg !4473
  br i1 %45, label %46, label %48, !dbg !4474

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !4475
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #26, !dbg !4477
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #26, !dbg !4478
  br label %48, !dbg !4479

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #26, !dbg !4480
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4481
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4482
  call void @llvm.dbg.value(metadata i8* %50, metadata !4419, metadata !DIExpression()), !dbg !4423
  %51 = icmp eq i8* %50, null, !dbg !4483
  br i1 %51, label %59, label %52, !dbg !4484

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4485, !range !3929
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #26, !dbg !4486
  %55 = sub i32 %54, %21, !dbg !4487
  call void @llvm.dbg.value(metadata i32 %55, metadata !4420, metadata !DIExpression()), !dbg !4488
  %56 = icmp ult i32 %55, %3, !dbg !4489
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !4489
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #27, !dbg !4490
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4491
  br label %59, !dbg !4492

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !4423
  ret i8* %60, !dbg !4493
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4494 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4498, metadata !DIExpression()), !dbg !4500
  call void @llvm.dbg.value(metadata i32 %1, metadata !4499, metadata !DIExpression()), !dbg !4500
  %3 = shl i32 %1, 3, !dbg !4501
  %4 = add i32 %3, -4, !dbg !4502
  ret i32 %4, !dbg !4503
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4504 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4508, metadata !DIExpression()), !dbg !4519
  call void @llvm.dbg.value(metadata i8* %1, metadata !4509, metadata !DIExpression()), !dbg !4519
  call void @llvm.dbg.value(metadata i32 %2, metadata !4510, metadata !DIExpression()), !dbg !4519
  %4 = add i32 %2, -4, !dbg !4520
  call void @llvm.dbg.value(metadata i32 %4, metadata !4510, metadata !DIExpression()), !dbg !4519
  %5 = ptrtoint i8* %1 to i32, !dbg !4521
  %6 = add i32 %5, 7, !dbg !4521
  %7 = and i32 %6, -8, !dbg !4521
  call void @llvm.dbg.value(metadata i32 %7, metadata !4511, metadata !DIExpression()), !dbg !4519
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4522
  %9 = ptrtoint i8* %8 to i32, !dbg !4522
  %10 = and i32 %9, -8, !dbg !4522
  call void @llvm.dbg.value(metadata i32 %10, metadata !4512, metadata !DIExpression()), !dbg !4519
  %11 = sub i32 %10, %7, !dbg !4523
  %12 = lshr exact i32 %11, 3, !dbg !4524
  call void @llvm.dbg.value(metadata i32 %12, metadata !4513, metadata !DIExpression()), !dbg !4519
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4525
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !4514, metadata !DIExpression()), !dbg !4519
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4526
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4527
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4528
  store i32 %12, i32* %15, align 8, !dbg !4529
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4530
  store i32 0, i32* %16, align 4, !dbg !4531
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #26, !dbg !4532
  call void @llvm.dbg.value(metadata i32 %17, metadata !4515, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4519
  %18 = shl i32 %17, 2, !dbg !4533
  %19 = add i32 %18, 20, !dbg !4534
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #26, !dbg !4535
  call void @llvm.dbg.value(metadata i32 %20, metadata !4516, metadata !DIExpression()), !dbg !4519
  call void @llvm.dbg.value(metadata i32 0, metadata !4517, metadata !DIExpression()), !dbg !4536
  %21 = icmp slt i32 %17, 0, !dbg !4537
  br i1 %21, label %22, label %24, !dbg !4539

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #26, !dbg !4540
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #26, !dbg !4541
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !4542
  %23 = sub i32 %12, %20, !dbg !4543
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #26, !dbg !4544
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #26, !dbg !4545
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #26, !dbg !4546
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #26, !dbg !4547
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #26, !dbg !4548
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #26, !dbg !4549
  ret void, !dbg !4550

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !4517, metadata !DIExpression()), !dbg !4536
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !4551
  store i32 0, i32* %26, align 4, !dbg !4553
  %27 = add nuw i32 %25, 1, !dbg !4554
  call void @llvm.dbg.value(metadata i32 %27, metadata !4517, metadata !DIExpression()), !dbg !4536
  %28 = icmp eq i32 %25, %17, !dbg !4537
  br i1 %28, label %22, label %24, !dbg !4539, !llvm.loop !4555
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4557 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4570, metadata !DIExpression()), !dbg !4698
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4567, metadata !DIExpression()), !dbg !4698
  call void @llvm.dbg.value(metadata i8* %1, metadata !4568, metadata !DIExpression()), !dbg !4698
  call void @llvm.dbg.value(metadata i8* %2, metadata !4569, metadata !DIExpression()), !dbg !4698
  call void @llvm.dbg.value(metadata i32 %4, metadata !4571, metadata !DIExpression()), !dbg !4698
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4699
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !4699
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4572, metadata !DIExpression()), !dbg !4700
  call void @llvm.dbg.value(metadata i32 0, metadata !4576, metadata !DIExpression()), !dbg !4698
  call void @llvm.dbg.value(metadata i1 undef, metadata !4578, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4698
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4701

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4701

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4702
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4570, metadata !DIExpression()), !dbg !4698
  call void @llvm.dbg.value(metadata i8* %30, metadata !4569, metadata !DIExpression()), !dbg !4698
  call void @llvm.dbg.value(metadata i32 %29, metadata !4576, metadata !DIExpression()), !dbg !4698
  %31 = load i8, i8* %30, align 1, !dbg !4703
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4701

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4703
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4704
  call void @llvm.dbg.value(metadata i8* %34, metadata !4569, metadata !DIExpression()), !dbg !4698
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #27, !dbg !4704
  call void @llvm.dbg.value(metadata i32 %35, metadata !4580, metadata !DIExpression()), !dbg !4705
  %36 = icmp slt i32 %35, 0, !dbg !4706
  %37 = add i32 %29, 1, !dbg !4704
  call void @llvm.dbg.value(metadata i32 undef, metadata !4576, metadata !DIExpression()), !dbg !4698
  br i1 %36, label %365, label %28, !llvm.loop !4708

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4710
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4585, metadata !DIExpression()), !dbg !4711
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4711
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4630, metadata !DIExpression()), !dbg !4712
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4633, metadata !DIExpression()), !dbg !4712
  call void @llvm.dbg.value(metadata i8* %30, metadata !4636, metadata !DIExpression()), !dbg !4712
  call void @llvm.dbg.value(metadata i32 -1, metadata !4637, metadata !DIExpression()), !dbg !4712
  call void @llvm.dbg.value(metadata i32 -1, metadata !4638, metadata !DIExpression()), !dbg !4712
  call void @llvm.dbg.value(metadata i8* null, metadata !4639, metadata !DIExpression()), !dbg !4712
  call void @llvm.dbg.value(metadata i8* %14, metadata !4640, metadata !DIExpression()), !dbg !4712
  call void @llvm.dbg.value(metadata i8 0, metadata !4641, metadata !DIExpression()), !dbg !4712
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !4713
  call void @llvm.dbg.value(metadata i8* %39, metadata !4569, metadata !DIExpression()), !dbg !4698
  %40 = load i24, i24* %15, align 8, !dbg !4714
  %41 = and i24 %40, 256, !dbg !4714
  %42 = icmp eq i24 %41, 0, !dbg !4714
  br i1 %42, label %51, label %43, !dbg !4716

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4717
  call void @llvm.dbg.value(metadata i8* %44, metadata !4570, metadata !DIExpression()), !dbg !4698
  %45 = bitcast i8* %27 to i32*, !dbg !4717
  %46 = load i32, i32* %45, align 4, !dbg !4717
  call void @llvm.dbg.value(metadata i32 %46, metadata !4637, metadata !DIExpression()), !dbg !4712
  %47 = icmp slt i32 %46, 0, !dbg !4719
  br i1 %47, label %48, label %56, !dbg !4721

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4722
  store i24 %49, i24* %15, align 8, !dbg !4722
  %50 = sub nsw i32 0, %46, !dbg !4724
  call void @llvm.dbg.value(metadata i32 %50, metadata !4637, metadata !DIExpression()), !dbg !4712
  br label %56, !dbg !4725

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4726
  %53 = icmp eq i24 %52, 0, !dbg !4726
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4728
  br label %56, !dbg !4728

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4729
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4712
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4570, metadata !DIExpression()), !dbg !4698
  call void @llvm.dbg.value(metadata i32 %58, metadata !4637, metadata !DIExpression()), !dbg !4712
  %60 = and i24 %57, 1024, !dbg !4729
  %61 = icmp eq i24 %60, 0, !dbg !4729
  br i1 %61, label %69, label %62, !dbg !4730

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4731
  call void @llvm.dbg.value(metadata i8* %63, metadata !4570, metadata !DIExpression()), !dbg !4698
  %64 = bitcast i8* %59 to i32*, !dbg !4731
  %65 = load i32, i32* %64, align 4, !dbg !4731
  call void @llvm.dbg.value(metadata i32 %65, metadata !4642, metadata !DIExpression()), !dbg !4732
  %66 = icmp slt i32 %65, 0, !dbg !4733
  br i1 %66, label %67, label %74, !dbg !4735

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4736
  store i24 %68, i24* %15, align 8, !dbg !4736
  br label %74, !dbg !4738

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4739
  %71 = icmp eq i24 %70, 0, !dbg !4739
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4741
  br label %74, !dbg !4741

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4742
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4712
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4712
  call void @llvm.dbg.value(metadata i8* %77, metadata !4570, metadata !DIExpression()), !dbg !4698
  call void @llvm.dbg.value(metadata i32 %76, metadata !4638, metadata !DIExpression()), !dbg !4712
  store i32 0, i32* %16, align 4, !dbg !4743
  store i32 0, i32* %17, align 8, !dbg !4744
  %78 = lshr i24 %75, 16, !dbg !4742
  call void @llvm.dbg.value(metadata i24 %78, metadata !4645, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4712
  %79 = lshr i24 %75, 11, !dbg !4745
  %80 = and i24 %79, 15, !dbg !4745
  %81 = zext i24 %80 to i32, !dbg !4745
  call void @llvm.dbg.value(metadata i32 %81, metadata !4646, metadata !DIExpression()), !dbg !4712
  %82 = trunc i24 %78 to i3, !dbg !4746
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4746

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4747

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4750
  call void @llvm.dbg.value(metadata i8* %85, metadata !4570, metadata !DIExpression()), !dbg !4698
  %86 = bitcast i8* %77 to i32*, !dbg !4750
  %87 = load i32, i32* %86, align 4, !dbg !4750
  %88 = sext i32 %87 to i64, !dbg !4750
  store i64 %88, i64* %20, align 8, !dbg !4752
  br label %115, !dbg !4753

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4754
  call void @llvm.dbg.value(metadata i8* %90, metadata !4570, metadata !DIExpression()), !dbg !4698
  %91 = bitcast i8* %77 to i32*, !dbg !4754
  %92 = load i32, i32* %91, align 4, !dbg !4754
  %93 = sext i32 %92 to i64, !dbg !4754
  store i64 %93, i64* %20, align 8, !dbg !4757
  br label %115, !dbg !4758

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4759
  %96 = add i32 %95, 7, !dbg !4759
  %97 = and i32 %96, -8, !dbg !4759
  %98 = inttoptr i32 %97 to i8*, !dbg !4759
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4759
  call void @llvm.dbg.value(metadata i8* %99, metadata !4570, metadata !DIExpression()), !dbg !4698
  %100 = inttoptr i32 %97 to i64*, !dbg !4759
  %101 = load i64, i64* %100, align 8, !dbg !4759
  store i64 %101, i64* %20, align 8, !dbg !4760
  br label %115, !dbg !4761

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4762
  %104 = add i32 %103, 7, !dbg !4762
  %105 = and i32 %104, -8, !dbg !4762
  %106 = inttoptr i32 %105 to i8*, !dbg !4762
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4762
  call void @llvm.dbg.value(metadata i8* %107, metadata !4570, metadata !DIExpression()), !dbg !4698
  %108 = inttoptr i32 %105 to i64*, !dbg !4762
  %109 = load i64, i64* %108, align 8, !dbg !4762
  store i64 %109, i64* %20, align 8, !dbg !4763
  br label %115, !dbg !4764

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4765
  call void @llvm.dbg.value(metadata i8* %111, metadata !4570, metadata !DIExpression()), !dbg !4698
  %112 = bitcast i8* %77 to i32*, !dbg !4765
  %113 = load i32, i32* %112, align 4, !dbg !4765
  %114 = sext i32 %113 to i64, !dbg !4766
  store i64 %114, i64* %20, align 8, !dbg !4767
  br label %115, !dbg !4768

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4769
  call void @llvm.dbg.value(metadata i8* %117, metadata !4570, metadata !DIExpression()), !dbg !4698
  %118 = trunc i24 %79 to i4, !dbg !4770
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4770

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4771
  %121 = ashr exact i64 %120, 56, !dbg !4771
  store i64 %121, i64* %20, align 8, !dbg !4774
  br label %177, !dbg !4775

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4776
  %124 = ashr exact i64 %123, 48, !dbg !4776
  store i64 %124, i64* %20, align 8, !dbg !4779
  br label %177, !dbg !4780

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4781

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4784
  call void @llvm.dbg.value(metadata i8* %127, metadata !4570, metadata !DIExpression()), !dbg !4698
  %128 = bitcast i8* %77 to i32*, !dbg !4784
  %129 = load i32, i32* %128, align 4, !dbg !4784
  %130 = zext i32 %129 to i64, !dbg !4784
  store i64 %130, i64* %20, align 8, !dbg !4786
  br label %157, !dbg !4787

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4788
  call void @llvm.dbg.value(metadata i8* %132, metadata !4570, metadata !DIExpression()), !dbg !4698
  call void @llvm.dbg.value(metadata i8* %132, metadata !4570, metadata !DIExpression()), !dbg !4698
  %133 = bitcast i8* %77 to i32*, !dbg !4788
  %134 = load i32, i32* %133, align 4, !dbg !4788
  %135 = zext i32 %134 to i64, !dbg !4788
  store i64 %135, i64* %20, align 8, !dbg !4788
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4790
  %138 = add i32 %137, 7, !dbg !4790
  %139 = and i32 %138, -8, !dbg !4790
  %140 = inttoptr i32 %139 to i8*, !dbg !4790
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4790
  call void @llvm.dbg.value(metadata i8* %141, metadata !4570, metadata !DIExpression()), !dbg !4698
  %142 = inttoptr i32 %139 to i64*, !dbg !4790
  %143 = load i64, i64* %142, align 8, !dbg !4790
  store i64 %143, i64* %20, align 8, !dbg !4791
  br label %157, !dbg !4792

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4793
  %146 = add i32 %145, 7, !dbg !4793
  %147 = and i32 %146, -8, !dbg !4793
  %148 = inttoptr i32 %147 to i8*, !dbg !4793
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4793
  call void @llvm.dbg.value(metadata i8* %149, metadata !4570, metadata !DIExpression()), !dbg !4698
  %150 = inttoptr i32 %147 to i64*, !dbg !4793
  %151 = load i64, i64* %150, align 8, !dbg !4793
  store i64 %151, i64* %20, align 8, !dbg !4794
  br label %157, !dbg !4795

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4796
  call void @llvm.dbg.value(metadata i8* %153, metadata !4570, metadata !DIExpression()), !dbg !4698
  %154 = bitcast i8* %77 to i32*, !dbg !4796
  %155 = load i32, i32* %154, align 4, !dbg !4796
  %156 = zext i32 %155 to i64, !dbg !4797
  store i64 %156, i64* %20, align 8, !dbg !4798
  br label %157, !dbg !4799

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4800
  call void @llvm.dbg.value(metadata i8* %159, metadata !4570, metadata !DIExpression()), !dbg !4698
  %160 = trunc i24 %79 to i4, !dbg !4801
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4801

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4802
  store i64 %162, i64* %20, align 8, !dbg !4805
  br label %177, !dbg !4806

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4807
  store i64 %164, i64* %20, align 8, !dbg !4810
  br label %177, !dbg !4811

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4812
  %167 = add i32 %166, 7, !dbg !4812
  %168 = and i32 %167, -8, !dbg !4812
  %169 = inttoptr i32 %168 to i8*, !dbg !4812
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4812
  call void @llvm.dbg.value(metadata i8* %170, metadata !4570, metadata !DIExpression()), !dbg !4698
  call void @llvm.dbg.value(metadata i8* %170, metadata !4570, metadata !DIExpression()), !dbg !4698
  %171 = inttoptr i32 %168 to double*, !dbg !4812
  %172 = load double, double* %171, align 8, !dbg !4812
  store double %172, double* %19, align 8, !dbg !4812
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4816
  call void @llvm.dbg.value(metadata i8* %174, metadata !4570, metadata !DIExpression()), !dbg !4698
  %175 = bitcast i8* %77 to i8**, !dbg !4816
  %176 = load i8*, i8** %175, align 4, !dbg !4816
  store i8* %176, i8** %18, align 8, !dbg !4819
  br label %177, !dbg !4820

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4712
  call void @llvm.dbg.value(metadata i8* %178, metadata !4570, metadata !DIExpression()), !dbg !4698
  %179 = and i24 %75, 3, !dbg !4821
  %180 = icmp eq i24 %179, 0, !dbg !4821
  br i1 %180, label %185, label %181, !dbg !4821

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !4822
  call void @llvm.dbg.value(metadata i32 %182, metadata !4647, metadata !DIExpression()), !dbg !4823
  %183 = icmp slt i32 %182, 0, !dbg !4824
  %184 = add i32 %182, %29, !dbg !4822
  call void @llvm.dbg.value(metadata i32 undef, metadata !4576, metadata !DIExpression()), !dbg !4698
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4826
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4827

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #27, !dbg !4828
  call void @llvm.dbg.value(metadata i32 %188, metadata !4651, metadata !DIExpression()), !dbg !4829
  %189 = icmp slt i32 %188, 0, !dbg !4830
  %190 = add i32 %29, 1, !dbg !4828
  call void @llvm.dbg.value(metadata i32 undef, metadata !4576, metadata !DIExpression()), !dbg !4698
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4832
  call void @llvm.dbg.value(metadata i8* %192, metadata !4639, metadata !DIExpression()), !dbg !4712
  %193 = icmp sgt i32 %76, -1, !dbg !4833
  br i1 %193, label %194, label %196, !dbg !4835

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #27, !dbg !4836
  call void @llvm.dbg.value(metadata i32 %195, metadata !4654, metadata !DIExpression()), !dbg !4838
  br label %241, !dbg !4839

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #27, !dbg !4840
  call void @llvm.dbg.value(metadata i32 %197, metadata !4654, metadata !DIExpression()), !dbg !4838
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4639, metadata !DIExpression()), !dbg !4712
  %199 = load i64, i64* %20, align 8, !dbg !4842
  %200 = trunc i64 %199 to i8, !dbg !4843
  store i8 %200, i8* %10, align 1, !dbg !4844
  call void @llvm.dbg.value(metadata i8* %23, metadata !4640, metadata !DIExpression()), !dbg !4712
  br label %245, !dbg !4845

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4846
  %203 = icmp eq i24 %202, 0, !dbg !4846
  %204 = trunc i24 %75 to i8, !dbg !4848
  %205 = shl i8 %204, 1, !dbg !4848
  %206 = and i8 %205, 32, !dbg !4848
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4848
  call void @llvm.dbg.value(metadata i8 %207, metadata !4641, metadata !DIExpression()), !dbg !4712
  %208 = load i64, i64* %20, align 8, !dbg !4849
  call void @llvm.dbg.value(metadata i64 %208, metadata !4577, metadata !DIExpression()), !dbg !4698
  %209 = icmp slt i64 %208, 0, !dbg !4850
  br i1 %209, label %210, label %212, !dbg !4852

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4641, metadata !DIExpression()), !dbg !4712
  %211 = sub nsw i64 0, %208, !dbg !4853
  store i64 %211, i64* %20, align 8, !dbg !4855
  br label %212, !dbg !4856

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4712
  call void @llvm.dbg.value(metadata i8 %213, metadata !4641, metadata !DIExpression()), !dbg !4712
  %214 = load i64, i64* %20, align 8, !dbg !4857
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !4858
  call void @llvm.dbg.value(metadata i8* %215, metadata !4639, metadata !DIExpression()), !dbg !4712
  br label %216, !dbg !4859

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4860
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4861
  call void @llvm.dbg.value(metadata i8* %218, metadata !4639, metadata !DIExpression()), !dbg !4712
  call void @llvm.dbg.value(metadata i8 %217, metadata !4641, metadata !DIExpression()), !dbg !4712
  call void @llvm.dbg.label(metadata !4697), !dbg !4862
  %219 = icmp sgt i32 %76, -1, !dbg !4863
  br i1 %219, label %222, label %220, !dbg !4864

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4865
  br label %245, !dbg !4864

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4867
  %224 = sub i32 %22, %223, !dbg !4867
  call void @llvm.dbg.value(metadata i32 %224, metadata !4656, metadata !DIExpression()), !dbg !4868
  %225 = load i24, i24* %15, align 8, !dbg !4869
  %226 = and i24 %225, -65, !dbg !4869
  store i24 %226, i24* %15, align 8, !dbg !4869
  %227 = icmp ugt i32 %76, %224, !dbg !4870
  br i1 %227, label %228, label %245, !dbg !4872

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4873
  store i32 %229, i32* %16, align 4, !dbg !4875
  br label %245, !dbg !4876

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4877
  %232 = icmp eq i8* %231, null, !dbg !4879
  br i1 %232, label %245, label %233, !dbg !4880

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4881
  %235 = zext i32 %234 to i64, !dbg !4881
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !4883
  call void @llvm.dbg.value(metadata i8* %236, metadata !4639, metadata !DIExpression()), !dbg !4712
  %237 = load i24, i24* %15, align 8, !dbg !4884
  %238 = or i24 %237, 1048576, !dbg !4884
  store i24 %238, i24* %15, align 8, !dbg !4884
  store i8 120, i8* %21, align 1, !dbg !4885
  br label %216, !dbg !4886

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4887
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !4890
  br label %363, !dbg !4891

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4892
  call void @llvm.dbg.value(metadata i32 %242, metadata !4654, metadata !DIExpression()), !dbg !4838
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4893
  call void @llvm.dbg.value(metadata i32 -1, metadata !4638, metadata !DIExpression()), !dbg !4712
  call void @llvm.dbg.value(metadata i32 %29, metadata !4576, metadata !DIExpression()), !dbg !4698
  call void @llvm.dbg.value(metadata i8* %192, metadata !4639, metadata !DIExpression()), !dbg !4712
  call void @llvm.dbg.value(metadata i8* %243, metadata !4640, metadata !DIExpression()), !dbg !4712
  call void @llvm.dbg.value(metadata i8 0, metadata !4641, metadata !DIExpression()), !dbg !4712
  %244 = icmp eq i8* %192, null, !dbg !4894
  br i1 %244, label %363, label %245, !dbg !4896, !llvm.loop !4708

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4865
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4659, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4712
  call void @llvm.dbg.value(metadata i32 0, metadata !4660, metadata !DIExpression()), !dbg !4712
  %250 = zext i8 %249 to i32, !dbg !4897
  %251 = icmp eq i8 %249, 0, !dbg !4899
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4659, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4712
  call void @llvm.dbg.value(metadata i32 undef, metadata !4659, metadata !DIExpression()), !dbg !4712
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4659, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4712
  call void @llvm.dbg.value(metadata i32 undef, metadata !4659, metadata !DIExpression()), !dbg !4712
  %252 = icmp sgt i32 %58, 0, !dbg !4900
  br i1 %252, label %253, label %302, !dbg !4901

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4865
  %255 = icmp eq i24 %254, 0, !dbg !4865
  %256 = ptrtoint i8* %248 to i32, !dbg !4902
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4659, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4712
  %257 = ptrtoint i8* %247 to i32, !dbg !4902
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4659, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4712
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4659, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4712
  %258 = xor i1 %251, true, !dbg !4903
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4659, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4712
  %259 = sext i1 %258 to i32, !dbg !4903
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4659, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4712
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4659, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4712
  %260 = lshr i24 %246, 19, !dbg !4904
  %261 = and i24 %260, 1, !dbg !4904
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4904
  %263 = zext i24 %262 to i32, !dbg !4904
  %264 = add i32 %257, %259, !dbg !4904
  %265 = add i32 %256, %263, !dbg !4904
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4659, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4712
  %266 = and i24 %246, 4194304, !dbg !4905
  %267 = icmp eq i24 %266, 0, !dbg !4905
  %268 = load i32, i32* %16, align 4, !dbg !4907
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4659, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4712
  call void @llvm.dbg.value(metadata i32 undef, metadata !4659, metadata !DIExpression()), !dbg !4712
  %269 = load i32, i32* %17, align 8, !dbg !4908
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4908
  call void @llvm.dbg.value(metadata i32 undef, metadata !4659, metadata !DIExpression()), !dbg !4712
  %271 = add i32 %264, %58, !dbg !4908
  %272 = add i32 %265, %268, !dbg !4908
  %273 = add i32 %272, %270, !dbg !4909
  %274 = sub i32 %271, %273, !dbg !4909
  call void @llvm.dbg.value(metadata i32 %274, metadata !4637, metadata !DIExpression()), !dbg !4712
  %275 = and i24 %246, 4, !dbg !4910
  %276 = icmp eq i24 %275, 0, !dbg !4910
  br i1 %276, label %277, label %302, !dbg !4911

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4661, metadata !DIExpression()), !dbg !4912
  %278 = and i24 %246, 64, !dbg !4913
  %279 = icmp eq i24 %278, 0, !dbg !4913
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4914
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4914
  %282 = select i1 %279, i32 32, i32 48, !dbg !4914
  br i1 %280, label %287, label %283, !dbg !4914

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #27, !dbg !4915
  call void @llvm.dbg.value(metadata i32 %284, metadata !4666, metadata !DIExpression()), !dbg !4916
  %285 = icmp slt i32 %284, 0, !dbg !4917
  %286 = add i32 %29, 1, !dbg !4915
  call void @llvm.dbg.value(metadata i32 undef, metadata !4576, metadata !DIExpression()), !dbg !4698
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4712
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4702
  call void @llvm.dbg.value(metadata i32 %290, metadata !4576, metadata !DIExpression()), !dbg !4698
  call void @llvm.dbg.value(metadata i8 undef, metadata !4661, metadata !DIExpression()), !dbg !4912
  call void @llvm.dbg.value(metadata i8 %288, metadata !4641, metadata !DIExpression()), !dbg !4712
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4919
  %292 = add i32 %291, -1, !dbg !4919
  br label %293, !dbg !4919

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4920
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4702
  call void @llvm.dbg.value(metadata i32 %295, metadata !4576, metadata !DIExpression()), !dbg !4698
  call void @llvm.dbg.value(metadata i32 %294, metadata !4637, metadata !DIExpression()), !dbg !4712
  call void @llvm.dbg.value(metadata i32 %294, metadata !4637, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4712
  %296 = icmp sgt i32 %294, 0, !dbg !4921
  br i1 %296, label %297, label %302, !dbg !4919

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4922
  call void @llvm.dbg.value(metadata i32 %298, metadata !4637, metadata !DIExpression()), !dbg !4712
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #27, !dbg !4923
  call void @llvm.dbg.value(metadata i32 %299, metadata !4672, metadata !DIExpression()), !dbg !4924
  %300 = icmp slt i32 %299, 0, !dbg !4925
  %301 = add i32 %295, 1, !dbg !4923
  call void @llvm.dbg.value(metadata i32 undef, metadata !4576, metadata !DIExpression()), !dbg !4698
  br i1 %300, label %361, label %293, !llvm.loop !4927

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4712
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4712
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4702
  call void @llvm.dbg.value(metadata i32 %305, metadata !4576, metadata !DIExpression()), !dbg !4698
  call void @llvm.dbg.value(metadata i32 %304, metadata !4637, metadata !DIExpression()), !dbg !4712
  call void @llvm.dbg.value(metadata i8 %303, metadata !4641, metadata !DIExpression()), !dbg !4712
  %306 = icmp eq i8 %303, 0, !dbg !4929
  br i1 %306, label %312, label %307, !dbg !4930

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4931
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #27, !dbg !4932
  call void @llvm.dbg.value(metadata i32 %309, metadata !4675, metadata !DIExpression()), !dbg !4933
  %310 = icmp slt i32 %309, 0, !dbg !4934
  %311 = add i32 %305, 1, !dbg !4932
  call void @llvm.dbg.value(metadata i32 undef, metadata !4576, metadata !DIExpression()), !dbg !4698
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4702
  call void @llvm.dbg.value(metadata i32 %313, metadata !4576, metadata !DIExpression()), !dbg !4698
  %314 = lshr i24 %246, 20, !dbg !4936
  %315 = lshr i24 %246, 19, !dbg !4937
  %316 = or i24 %314, %315, !dbg !4938
  %317 = and i24 %316, 1, !dbg !4938
  %318 = icmp eq i24 %317, 0, !dbg !4938
  br i1 %318, label %323, label %319, !dbg !4939

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !4940
  call void @llvm.dbg.value(metadata i32 %320, metadata !4679, metadata !DIExpression()), !dbg !4941
  %321 = icmp slt i32 %320, 0, !dbg !4942
  %322 = add i32 %313, 1, !dbg !4940
  call void @llvm.dbg.value(metadata i32 undef, metadata !4576, metadata !DIExpression()), !dbg !4698
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4702
  call void @llvm.dbg.value(metadata i32 %324, metadata !4576, metadata !DIExpression()), !dbg !4698
  %325 = and i24 %246, 1048576, !dbg !4944
  %326 = icmp eq i24 %325, 0, !dbg !4944
  br i1 %326, label %333, label %327, !dbg !4945

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4946
  %329 = zext i8 %328 to i32, !dbg !4946
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #27, !dbg !4946
  call void @llvm.dbg.value(metadata i32 %330, metadata !4685, metadata !DIExpression()), !dbg !4947
  %331 = icmp slt i32 %330, 0, !dbg !4948
  %332 = add i32 %324, 1, !dbg !4946
  call void @llvm.dbg.value(metadata i32 undef, metadata !4576, metadata !DIExpression()), !dbg !4698
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4702
  call void @llvm.dbg.value(metadata i32 %334, metadata !4576, metadata !DIExpression()), !dbg !4698
  %335 = load i32, i32* %16, align 4, !dbg !4950
  call void @llvm.dbg.value(metadata i32 %335, metadata !4660, metadata !DIExpression()), !dbg !4712
  br label %336, !dbg !4951

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4952
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4702
  call void @llvm.dbg.value(metadata i32 %338, metadata !4576, metadata !DIExpression()), !dbg !4698
  call void @llvm.dbg.value(metadata i32 %337, metadata !4660, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4712
  %339 = icmp sgt i32 %337, 0, !dbg !4953
  br i1 %339, label %340, label %345, !dbg !4951

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4954
  call void @llvm.dbg.value(metadata i32 %341, metadata !4660, metadata !DIExpression()), !dbg !4712
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !4955
  call void @llvm.dbg.value(metadata i32 %342, metadata !4689, metadata !DIExpression()), !dbg !4956
  %343 = icmp slt i32 %342, 0, !dbg !4957
  %344 = add i32 %338, 1, !dbg !4955
  call void @llvm.dbg.value(metadata i32 undef, metadata !4576, metadata !DIExpression()), !dbg !4698
  br i1 %343, label %361, label %336, !llvm.loop !4959

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !4961
  call void @llvm.dbg.value(metadata i32 %346, metadata !4692, metadata !DIExpression()), !dbg !4962
  %347 = icmp slt i32 %346, 0, !dbg !4963
  call void @llvm.dbg.value(metadata i32 undef, metadata !4576, metadata !DIExpression()), !dbg !4698
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4961
  call void @llvm.dbg.value(metadata i32 %349, metadata !4576, metadata !DIExpression()), !dbg !4698
  call void @llvm.dbg.value(metadata i32 %304, metadata !4637, metadata !DIExpression()), !dbg !4712
  %350 = icmp sgt i32 %304, 0, !dbg !4965
  br i1 %350, label %351, label %363, !dbg !4966

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4966
  %353 = add i32 %352, %338, !dbg !4966
  br label %354, !dbg !4966

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4576, metadata !DIExpression()), !dbg !4698
  call void @llvm.dbg.value(metadata i32 %355, metadata !4637, metadata !DIExpression()), !dbg !4712
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #27, !dbg !4967
  call void @llvm.dbg.value(metadata i32 %356, metadata !4694, metadata !DIExpression()), !dbg !4968
  %357 = icmp slt i32 %356, 0, !dbg !4969
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4971
  call void @llvm.dbg.value(metadata i32 undef, metadata !4576, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4698
  call void @llvm.dbg.value(metadata i32 %359, metadata !4637, metadata !DIExpression()), !dbg !4712
  %360 = icmp sgt i32 %355, 1, !dbg !4965
  br i1 %360, label %354, label %363, !dbg !4966, !llvm.loop !4972

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4576, metadata !DIExpression()), !dbg !4698
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4709
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4702
  call void @llvm.dbg.value(metadata i32 %364, metadata !4576, metadata !DIExpression()), !dbg !4698
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4709
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4698
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !4974
  ret i32 %366, !dbg !4974
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4975 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4979, metadata !DIExpression()), !dbg !4981
  call void @llvm.dbg.value(metadata i8* %1, metadata !4980, metadata !DIExpression()), !dbg !4981
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4982
  store i24 0, i24* %3, align 4, !dbg !4982
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4982
  store i8 0, i8* %4, align 1, !dbg !4982
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4982
  store i32 0, i32* %5, align 4, !dbg !4982
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4982
  store i32 0, i32* %6, align 4, !dbg !4982
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4983
  call void @llvm.dbg.value(metadata i8* %7, metadata !4980, metadata !DIExpression()), !dbg !4981
  %8 = load i8, i8* %7, align 1, !dbg !4984
  %9 = icmp eq i8 %8, 37, !dbg !4986
  br i1 %9, label %10, label %12, !dbg !4987

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4988
  call void @llvm.dbg.value(metadata i8* %11, metadata !4980, metadata !DIExpression()), !dbg !4981
  store i8 37, i8* %4, align 1, !dbg !4990
  br label %18, !dbg !4991

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !4992
  call void @llvm.dbg.value(metadata i8* %13, metadata !4980, metadata !DIExpression()), !dbg !4981
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !4993
  call void @llvm.dbg.value(metadata i8* %14, metadata !4980, metadata !DIExpression()), !dbg !4981
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !4994
  call void @llvm.dbg.value(metadata i8* %15, metadata !4980, metadata !DIExpression()), !dbg !4981
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !4995
  call void @llvm.dbg.value(metadata i8* %16, metadata !4980, metadata !DIExpression()), !dbg !4981
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !4996
  call void @llvm.dbg.value(metadata i8* %17, metadata !4980, metadata !DIExpression()), !dbg !4981
  br label %18, !dbg !4997

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4981
  ret i8* %19, !dbg !4998
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4999 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5003, metadata !DIExpression()), !dbg !5010
  call void @llvm.dbg.value(metadata i8* %1, metadata !5004, metadata !DIExpression()), !dbg !5010
  call void @llvm.dbg.value(metadata i8* %2, metadata !5005, metadata !DIExpression()), !dbg !5010
  call void @llvm.dbg.value(metadata i8* %3, metadata !5006, metadata !DIExpression()), !dbg !5010
  call void @llvm.dbg.value(metadata i32 0, metadata !5007, metadata !DIExpression()), !dbg !5010
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5011

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5012
  call void @llvm.dbg.value(metadata i32 %9, metadata !5007, metadata !DIExpression()), !dbg !5010
  call void @llvm.dbg.value(metadata i8* %8, metadata !5005, metadata !DIExpression()), !dbg !5010
  %10 = icmp ult i8* %8, %3, !dbg !5013
  br i1 %10, label %11, label %13, !dbg !5014

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5015
  br label %17, !dbg !5014

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5016

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5017
  %16 = icmp eq i8 %15, 0, !dbg !5016
  br i1 %16, label %24, label %17, !dbg !5011

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5015
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5018
  call void @llvm.dbg.value(metadata i8* %19, metadata !5005, metadata !DIExpression()), !dbg !5010
  %20 = zext i8 %18 to i32, !dbg !5019
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #27, !dbg !5020
  call void @llvm.dbg.value(metadata i32 %21, metadata !5008, metadata !DIExpression()), !dbg !5021
  %22 = icmp slt i32 %21, 0, !dbg !5022
  %23 = add i32 %9, 1, !dbg !5024
  call void @llvm.dbg.value(metadata i32 undef, metadata !5007, metadata !DIExpression()), !dbg !5010
  br i1 %22, label %24, label %7, !llvm.loop !5025

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5010
  ret i32 %25, !dbg !5027
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !5028 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5032, metadata !DIExpression()), !dbg !5042
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5033, metadata !DIExpression()), !dbg !5042
  call void @llvm.dbg.value(metadata i8* %2, metadata !5034, metadata !DIExpression()), !dbg !5042
  call void @llvm.dbg.value(metadata i8* %3, metadata !5035, metadata !DIExpression()), !dbg !5042
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5043
  %6 = load i8, i8* %5, align 1, !dbg !5043
  %7 = zext i8 %6 to i32, !dbg !5044
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !5045
  %9 = icmp eq i32 %8, 0, !dbg !5045
  call void @llvm.dbg.value(metadata i1 %9, metadata !5036, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5042
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !5046
  call void @llvm.dbg.value(metadata i32 %10, metadata !5037, metadata !DIExpression()), !dbg !5042
  %11 = ptrtoint i8* %3 to i32, !dbg !5047
  %12 = ptrtoint i8* %2 to i32, !dbg !5047
  %13 = sub i32 %11, %12, !dbg !5047
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5048
  call void @llvm.dbg.value(metadata i8* %14, metadata !5039, metadata !DIExpression()), !dbg !5042
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5049

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5042
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5032, metadata !DIExpression()), !dbg !5042
  call void @llvm.dbg.value(metadata i8* %18, metadata !5039, metadata !DIExpression()), !dbg !5042
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5050
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5051
  call void @llvm.dbg.value(metadata i32 %25, metadata !5040, metadata !DIExpression()), !dbg !5052
  %26 = icmp ult i32 %25, 10, !dbg !5053
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5054
  %28 = add i32 %27, %25, !dbg !5052
  %29 = trunc i32 %28 to i8, !dbg !5054
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5055
  call void @llvm.dbg.value(metadata i8* %30, metadata !5039, metadata !DIExpression()), !dbg !5042
  store i8 %29, i8* %30, align 1, !dbg !5056
  call void @llvm.dbg.value(metadata i64 %22, metadata !5032, metadata !DIExpression()), !dbg !5042
  %31 = icmp uge i64 %19, %15, !dbg !5057
  %32 = icmp ugt i8* %30, %2, !dbg !5058
  %33 = and i1 %31, %32, !dbg !5058
  br i1 %33, label %17, label %34, !dbg !5059, !llvm.loop !5060

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5062
  %36 = load i24, i24* %35, align 4, !dbg !5062
  %37 = and i24 %36, 32, !dbg !5062
  %38 = icmp eq i24 %37, 0, !dbg !5062
  br i1 %38, label %44, label %39, !dbg !5064

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5065

40:                                               ; preds = %39
  br label %41, !dbg !5067

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5071
  store i24 %43, i24* %35, align 4, !dbg !5071
  br label %44, !dbg !5072

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5072
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #7 !dbg !5073 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5079, metadata !DIExpression()), !dbg !5082
  call void @llvm.dbg.value(metadata i8* %1, metadata !5080, metadata !DIExpression()), !dbg !5082
  call void @llvm.dbg.value(metadata i32 %2, metadata !5081, metadata !DIExpression()), !dbg !5082
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5083
  %5 = load i24, i24* %4, align 4, !dbg !5083
  %6 = lshr i24 %5, 11, !dbg !5083
  %7 = and i24 %6, 15, !dbg !5083
  %8 = zext i24 %7 to i32, !dbg !5083
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5084

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5085
  store i32 %2, i32* %10, align 4, !dbg !5087
  br label %28, !dbg !5088

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5089
  store i8 %12, i8* %1, align 1, !dbg !5090
  br label %28, !dbg !5091

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5092
  %15 = bitcast i8* %1 to i16*, !dbg !5093
  store i16 %14, i16* %15, align 2, !dbg !5094
  br label %28, !dbg !5095

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5096
  store i32 %2, i32* %17, align 4, !dbg !5097
  br label %28, !dbg !5098

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5099
  %20 = bitcast i8* %1 to i64*, !dbg !5100
  store i64 %19, i64* %20, align 8, !dbg !5101
  br label %28, !dbg !5102

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5103
  %23 = bitcast i8* %1 to i64*, !dbg !5104
  store i64 %22, i64* %23, align 8, !dbg !5105
  br label %28, !dbg !5106

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5107
  store i32 %2, i32* %25, align 4, !dbg !5108
  br label %28, !dbg !5109

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5110
  store i32 %2, i32* %27, align 4, !dbg !5111
  br label %28, !dbg !5112

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5113
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !5114 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5117, metadata !DIExpression()), !dbg !5118
  %2 = add i32 %0, -65, !dbg !5119
  %3 = icmp ult i32 %2, 26, !dbg !5120
  %4 = zext i1 %3 to i32, !dbg !5120
  ret i32 %4, !dbg !5121
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !5122 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5126, metadata !DIExpression()), !dbg !5127
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5128

2:                                                ; preds = %1
  br label %4, !dbg !5129

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5131

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5132
  ret i32 %5, !dbg !5133
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5134 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5136, metadata !DIExpression()), !dbg !5139
  call void @llvm.dbg.value(metadata i8* %1, metadata !5137, metadata !DIExpression()), !dbg !5139
  call void @llvm.dbg.value(metadata i8 1, metadata !5138, metadata !DIExpression()), !dbg !5139
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5140

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5138, metadata !DIExpression()), !dbg !5139
  call void @llvm.dbg.value(metadata i8* %5, metadata !5137, metadata !DIExpression()), !dbg !5139
  %6 = load i8, i8* %5, align 1, !dbg !5141
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5143

7:                                                ; preds = %4
  br label %11, !dbg !5144

8:                                                ; preds = %4
  br label %11, !dbg !5146

9:                                                ; preds = %4
  br label %11, !dbg !5147

10:                                               ; preds = %4
  br label %11, !dbg !5148

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5149
  %14 = or i24 %13, %12, !dbg !5149
  store i24 %14, i24* %3, align 4, !dbg !5149
  call void @llvm.dbg.value(metadata i8 poison, metadata !5138, metadata !DIExpression()), !dbg !5139
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5137, metadata !DIExpression()), !dbg !5139
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5138, metadata !DIExpression()), !dbg !5139
  call void @llvm.dbg.value(metadata i8* %15, metadata !5137, metadata !DIExpression()), !dbg !5139
  %17 = load i24, i24* %3, align 4, !dbg !5150
  %18 = and i24 %17, 68, !dbg !5152
  %19 = icmp eq i24 %18, 68, !dbg !5152
  br i1 %19, label %20, label %22, !dbg !5152

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5153
  store i24 %21, i24* %3, align 4, !dbg !5153
  br label %22, !dbg !5155

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5156
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5157 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5159, metadata !DIExpression()), !dbg !5163
  call void @llvm.dbg.value(metadata i8* %1, metadata !5160, metadata !DIExpression()), !dbg !5163
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5164
  %5 = load i24, i24* %4, align 4, !dbg !5165
  %6 = or i24 %5, 128, !dbg !5165
  store i24 %6, i24* %4, align 4, !dbg !5165
  call void @llvm.dbg.value(metadata i8* %1, metadata !5160, metadata !DIExpression()), !dbg !5163
  %7 = load i8, i8* %1, align 1, !dbg !5166
  %8 = icmp eq i8 %7, 42, !dbg !5168
  br i1 %8, label %9, label %12, !dbg !5169

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5170
  store i24 %10, i24* %4, align 4, !dbg !5170
  call void @llvm.dbg.value(metadata i8* %1, metadata !5160, metadata !DIExpression()), !dbg !5163
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5172
  call void @llvm.dbg.value(metadata i8* %11, metadata !5160, metadata !DIExpression()), !dbg !5163
  store i8* %11, i8** %3, align 4, !dbg !5172
  br label %29, !dbg !5173

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5161, metadata !DIExpression()), !dbg !5163
  call void @llvm.dbg.value(metadata i8** %3, metadata !5160, metadata !DIExpression(DW_OP_deref)), !dbg !5163
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5174
  call void @llvm.dbg.value(metadata i32 %13, metadata !5162, metadata !DIExpression()), !dbg !5163
  %14 = load i8*, i8** %3, align 4, !dbg !5175
  call void @llvm.dbg.value(metadata i8* %14, metadata !5160, metadata !DIExpression()), !dbg !5163
  %15 = icmp eq i8* %14, %1, !dbg !5177
  br i1 %15, label %29, label %16, !dbg !5178

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5179
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5181
  store i32 %13, i32* %18, align 4, !dbg !5182
  %19 = lshr i32 %13, 31, !dbg !5183
  %20 = lshr i24 %17, 1, !dbg !5184
  %21 = and i24 %20, 1, !dbg !5184
  %22 = zext i24 %21 to i32, !dbg !5184
  %23 = or i32 %19, %22, !dbg !5184
  %24 = trunc i32 %23 to i24, !dbg !5184
  %25 = shl nuw nsw i24 %24, 1, !dbg !5184
  %26 = and i24 %17, -131, !dbg !5184
  %27 = or i24 %26, 128, !dbg !5184
  %28 = or i24 %25, %27, !dbg !5184
  store i24 %28, i24* %4, align 4, !dbg !5184
  br label %29, !dbg !5185

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5163
  ret i8* %30, !dbg !5186
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5187 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5189, metadata !DIExpression()), !dbg !5192
  call void @llvm.dbg.value(metadata i8* %1, metadata !5190, metadata !DIExpression()), !dbg !5192
  %4 = load i8, i8* %1, align 1, !dbg !5193
  %5 = icmp eq i8 %4, 46, !dbg !5194
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5195
  %7 = load i24, i24* %6, align 4, !dbg !5196
  %8 = select i1 %5, i24 512, i24 0, !dbg !5196
  %9 = and i24 %7, -513, !dbg !5196
  %10 = or i24 %9, %8, !dbg !5196
  store i24 %10, i24* %6, align 4, !dbg !5196
  br i1 %5, label %11, label %32, !dbg !5197

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5190, metadata !DIExpression()), !dbg !5192
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5198
  call void @llvm.dbg.value(metadata i8* %12, metadata !5190, metadata !DIExpression()), !dbg !5192
  store i8* %12, i8** %3, align 4, !dbg !5198
  %13 = load i8, i8* %12, align 1, !dbg !5199
  %14 = icmp eq i8 %13, 42, !dbg !5201
  br i1 %14, label %15, label %18, !dbg !5202

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5203
  store i24 %16, i24* %6, align 4, !dbg !5203
  call void @llvm.dbg.value(metadata i8* %12, metadata !5190, metadata !DIExpression()), !dbg !5192
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5205
  call void @llvm.dbg.value(metadata i8* %17, metadata !5190, metadata !DIExpression()), !dbg !5192
  store i8* %17, i8** %3, align 4, !dbg !5205
  br label %32, !dbg !5206

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5190, metadata !DIExpression(DW_OP_deref)), !dbg !5192
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5207
  call void @llvm.dbg.value(metadata i32 %19, metadata !5191, metadata !DIExpression()), !dbg !5192
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5208
  store i32 %19, i32* %20, align 4, !dbg !5209
  %21 = lshr i32 %19, 31, !dbg !5210
  %22 = load i24, i24* %6, align 4, !dbg !5211
  %23 = lshr i24 %22, 1, !dbg !5211
  %24 = and i24 %23, 1, !dbg !5211
  %25 = zext i24 %24 to i32, !dbg !5211
  %26 = or i32 %21, %25, !dbg !5211
  %27 = trunc i32 %26 to i24, !dbg !5211
  %28 = shl nuw nsw i24 %27, 1, !dbg !5211
  %29 = and i24 %22, -3, !dbg !5211
  %30 = or i24 %28, %29, !dbg !5211
  store i24 %30, i24* %6, align 4, !dbg !5211
  %31 = load i8*, i8** %3, align 4, !dbg !5212
  call void @llvm.dbg.value(metadata i8* %31, metadata !5190, metadata !DIExpression()), !dbg !5192
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5192
  ret i8* %33, !dbg !5213
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !5214 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5216, metadata !DIExpression()), !dbg !5218
  call void @llvm.dbg.value(metadata i8* %1, metadata !5217, metadata !DIExpression()), !dbg !5218
  %3 = load i8, i8* %1, align 1, !dbg !5219
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5220

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5221
  call void @llvm.dbg.value(metadata i8* %5, metadata !5217, metadata !DIExpression()), !dbg !5218
  %6 = load i8, i8* %5, align 1, !dbg !5224
  %7 = icmp eq i8 %6, 104, !dbg !5225
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5226
  %9 = load i24, i24* %8, align 4, !dbg !5226
  %10 = and i24 %9, -30721, !dbg !5226
  br i1 %7, label %11, label %14, !dbg !5227

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5228
  store i24 %12, i24* %8, align 4, !dbg !5228
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5230
  call void @llvm.dbg.value(metadata i8* %13, metadata !5217, metadata !DIExpression()), !dbg !5218
  br label %56, !dbg !5231

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5232
  store i24 %15, i24* %8, align 4, !dbg !5232
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5234
  call void @llvm.dbg.value(metadata i8* %17, metadata !5217, metadata !DIExpression()), !dbg !5218
  %18 = load i8, i8* %17, align 1, !dbg !5236
  %19 = icmp eq i8 %18, 108, !dbg !5237
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5238
  %21 = load i24, i24* %20, align 4, !dbg !5238
  %22 = and i24 %21, -30721, !dbg !5238
  br i1 %19, label %23, label %26, !dbg !5239

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5240
  store i24 %24, i24* %20, align 4, !dbg !5240
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5242
  call void @llvm.dbg.value(metadata i8* %25, metadata !5217, metadata !DIExpression()), !dbg !5218
  br label %56, !dbg !5243

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5244
  store i24 %27, i24* %20, align 4, !dbg !5244
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5246
  %30 = load i24, i24* %29, align 4, !dbg !5247
  %31 = and i24 %30, -30721, !dbg !5247
  %32 = or i24 %31, 10240, !dbg !5247
  store i24 %32, i24* %29, align 4, !dbg !5247
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5248
  call void @llvm.dbg.value(metadata i8* %33, metadata !5217, metadata !DIExpression()), !dbg !5218
  br label %56, !dbg !5249

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5250
  %36 = load i24, i24* %35, align 4, !dbg !5251
  %37 = and i24 %36, -30721, !dbg !5251
  %38 = or i24 %37, 12288, !dbg !5251
  store i24 %38, i24* %35, align 4, !dbg !5251
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5252
  call void @llvm.dbg.value(metadata i8* %39, metadata !5217, metadata !DIExpression()), !dbg !5218
  br label %56, !dbg !5253

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5254
  %42 = load i24, i24* %41, align 4, !dbg !5255
  %43 = and i24 %42, -30721, !dbg !5255
  %44 = or i24 %43, 14336, !dbg !5255
  store i24 %44, i24* %41, align 4, !dbg !5255
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5256
  call void @llvm.dbg.value(metadata i8* %45, metadata !5217, metadata !DIExpression()), !dbg !5218
  br label %56, !dbg !5257

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5258
  %48 = load i24, i24* %47, align 4, !dbg !5259
  %49 = and i24 %48, -30723, !dbg !5259
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5260
  call void @llvm.dbg.value(metadata i8* %50, metadata !5217, metadata !DIExpression()), !dbg !5218
  %51 = or i24 %49, 16386, !dbg !5261
  store i24 %51, i24* %47, align 4, !dbg !5261
  br label %56, !dbg !5262

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5263
  %54 = load i24, i24* %53, align 4, !dbg !5264
  %55 = and i24 %54, -30721, !dbg !5264
  store i24 %55, i24* %53, align 4, !dbg !5264
  br label %56, !dbg !5265

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5217, metadata !DIExpression()), !dbg !5218
  ret i8* %57, !dbg !5266
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !5267 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5269, metadata !DIExpression()), !dbg !5274
  call void @llvm.dbg.value(metadata i8* %1, metadata !5270, metadata !DIExpression()), !dbg !5274
  call void @llvm.dbg.value(metadata i8 0, metadata !5271, metadata !DIExpression()), !dbg !5274
  call void @llvm.dbg.value(metadata i8* %1, metadata !5270, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5274
  %3 = load i8, i8* %1, align 1, !dbg !5275
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5276
  store i8 %3, i8* %4, align 1, !dbg !5277
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5278

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5279

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5280
  %9 = load i24, i24* %8, align 4, !dbg !5280
  %10 = and i24 %9, -458753, !dbg !5280
  %11 = or i24 %10, %7, !dbg !5280
  call void @llvm.dbg.label(metadata !5272), !dbg !5281
  %12 = and i24 %9, 30720, !dbg !5282
  %13 = icmp eq i24 %12, 16384, !dbg !5282
  %14 = zext i1 %13 to i24, !dbg !5284
  %15 = or i24 %11, %14, !dbg !5284
  %16 = icmp eq i8 %3, 99, !dbg !5285
  br i1 %16, label %17, label %43, !dbg !5287

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5288
  %19 = icmp ne i24 %18, 0, !dbg !5288
  call void @llvm.dbg.value(metadata i1 %19, metadata !5271, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5274
  br label %43, !dbg !5290

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5291
  %22 = load i24, i24* %21, align 4, !dbg !5292
  %23 = and i24 %22, -458753, !dbg !5292
  %24 = or i24 %23, 262144, !dbg !5292
  call void @llvm.dbg.value(metadata i8 1, metadata !5271, metadata !DIExpression()), !dbg !5274
  br label %43, !dbg !5293

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5296
  %27 = load i24, i24* %26, align 4, !dbg !5297
  %28 = and i24 %27, -458753, !dbg !5297
  %29 = or i24 %28, 196608, !dbg !5297
  %30 = and i24 %27, 30720, !dbg !5298
  %31 = icmp eq i24 %30, 16384, !dbg !5298
  br label %43, !dbg !5300

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5301
  %34 = load i24, i24* %33, align 4, !dbg !5302
  %35 = and i24 %34, -458753, !dbg !5302
  %36 = or i24 %35, 196608, !dbg !5302
  %37 = and i24 %34, 30720, !dbg !5303
  %38 = icmp ne i24 %37, 0, !dbg !5303
  br label %43, !dbg !5305

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5306
  %41 = load i24, i24* %40, align 4, !dbg !5307
  %42 = or i24 %41, 1, !dbg !5307
  br label %43, !dbg !5308

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5309
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5310
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5311
  call void @llvm.dbg.value(metadata i8* %48, metadata !5270, metadata !DIExpression()), !dbg !5274
  call void @llvm.dbg.value(metadata i8 poison, metadata !5271, metadata !DIExpression()), !dbg !5274
  %49 = lshr i24 %44, 1, !dbg !5309
  %50 = and i24 %49, 1, !dbg !5309
  %51 = zext i24 %50 to i32, !dbg !5309
  %52 = or i32 %51, %47, !dbg !5309
  %53 = trunc i32 %52 to i24, !dbg !5309
  %54 = shl nuw nsw i24 %53, 1, !dbg !5309
  %55 = and i24 %44, -3, !dbg !5309
  %56 = or i24 %54, %55, !dbg !5309
  store i24 %56, i24* %46, align 4, !dbg !5309
  ret i8* %48, !dbg !5312
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5313 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5318, metadata !DIExpression()), !dbg !5321
  %2 = load i8*, i8** %0, align 4, !dbg !5322
  call void @llvm.dbg.value(metadata i8* %2, metadata !5319, metadata !DIExpression()), !dbg !5321
  call void @llvm.dbg.value(metadata i32 0, metadata !5320, metadata !DIExpression()), !dbg !5321
  %3 = load i8, i8* %2, align 1, !dbg !5323
  %4 = zext i8 %3 to i32, !dbg !5324
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !5325
  %6 = icmp eq i32 %5, 0, !dbg !5326
  br i1 %6, label %19, label %7, !dbg !5326

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5320, metadata !DIExpression()), !dbg !5321
  call void @llvm.dbg.value(metadata i8* %10, metadata !5319, metadata !DIExpression()), !dbg !5321
  %11 = mul i32 %9, 10, !dbg !5327
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5329
  call void @llvm.dbg.value(metadata i8* %12, metadata !5319, metadata !DIExpression()), !dbg !5321
  %13 = add i32 %11, -48, !dbg !5330
  %14 = add i32 %13, %8, !dbg !5331
  call void @llvm.dbg.value(metadata i32 %14, metadata !5320, metadata !DIExpression()), !dbg !5321
  %15 = load i8, i8* %12, align 1, !dbg !5323
  %16 = zext i8 %15 to i32, !dbg !5324
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !5325
  %18 = icmp eq i32 %17, 0, !dbg !5326
  br i1 %18, label %19, label %7, !dbg !5326, !llvm.loop !5332

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5321
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5321
  store i8* %20, i8** %0, align 4, !dbg !5334
  ret i32 %21, !dbg !5335
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !5336 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5338, metadata !DIExpression()), !dbg !5339
  %2 = add i32 %0, -48, !dbg !5340
  %3 = icmp ult i32 %2, 10, !dbg !5341
  %4 = zext i1 %3 to i32, !dbg !5341
  ret i32 %4, !dbg !5342
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5343 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !5345, !srcloc !5346
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !5347, !srcloc !5348
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #25, !dbg !5349, !srcloc !5350
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !5351, !srcloc !5352
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !5353, !srcloc !5354
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !5355, !srcloc !5356
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,82\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !5357, !srcloc !5358
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,168000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !5359, !srcloc !5360
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !5361, !srcloc !5362
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !5363, !srcloc !5364
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !5365, !srcloc !5366
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !5367, !srcloc !5368
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !5369, !srcloc !5370
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !5371, !srcloc !5372
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !5373, !srcloc !5374
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !5375, !srcloc !5376
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !5377, !srcloc !5378
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !5379, !srcloc !5380
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !5381, !srcloc !5382
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !5383, !srcloc !5384
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !5385, !srcloc !5386
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !5387, !srcloc !5388
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !5389, !srcloc !5390
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !5391, !srcloc !5392
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !5393, !srcloc !5394
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !5395, !srcloc !5396
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,%object", ""() #25, !dbg !5397, !srcloc !5398
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !5399, !srcloc !5400
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #25, !dbg !5401, !srcloc !5402
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !5403, !srcloc !5404
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #25, !dbg !5405, !srcloc !5406
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !5407, !srcloc !5408
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED\0A\09.equ\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,%object", ""() #25, !dbg !5409, !srcloc !5410
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !5411, !srcloc !5412
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5413, !srcloc !5414
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,%object", ""() #25, !dbg !5415, !srcloc !5416
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !5417, !srcloc !5418
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5419, !srcloc !5420
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !5421, !srcloc !5422
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #25, !dbg !5423, !srcloc !5424
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !5425, !srcloc !5426
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5427, !srcloc !5428
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #25, !dbg !5429, !srcloc !5430
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !5431, !srcloc !5432
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !5433, !srcloc !5434
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #25, !dbg !5435, !srcloc !5436
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !5437, !srcloc !5438
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !5439, !srcloc !5440
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !5441, !srcloc !5442
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5443, !srcloc !5444
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !5445, !srcloc !5446
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #25, !dbg !5447, !srcloc !5448
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,%object", ""() #25, !dbg !5449, !srcloc !5450
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !5451, !srcloc !5452
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !5453, !srcloc !5454
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !5455, !srcloc !5456
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !5457, !srcloc !5458
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !5459, !srcloc !5460
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !5461, !srcloc !5462
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !5463, !srcloc !5464
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !5465, !srcloc !5466
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !5467, !srcloc !5468
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !5469, !srcloc !5470
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !5471, !srcloc !5472
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !5473, !srcloc !5474
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !5475, !srcloc !5476
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !5477, !srcloc !5478
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !5479, !srcloc !5480
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !5481, !srcloc !5482
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !5483, !srcloc !5484
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !5485, !srcloc !5486
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !5487, !srcloc !5488
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !5489, !srcloc !5490
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !5491, !srcloc !5492
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !5493, !srcloc !5494
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !5495, !srcloc !5496
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !5497, !srcloc !5498
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !5499, !srcloc !5500
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !5501, !srcloc !5502
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !5503, !srcloc !5504
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !5505, !srcloc !5506
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !5507, !srcloc !5508
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !5509, !srcloc !5510
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !5511, !srcloc !5512
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !5513, !srcloc !5514
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !5515, !srcloc !5516
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405\0A\09.equ\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,1\0A\09.type\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,%object", ""() #25, !dbg !5517, !srcloc !5518
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #25, !dbg !5519, !srcloc !5520
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !5521, !srcloc !5522
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !5523, !srcloc !5524
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !5525, !srcloc !5526
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !5527, !srcloc !5528
  tail call void asm sideeffect ".globl\09CONFIG_STM32_CCM\0A\09.equ\09CONFIG_STM32_CCM,1\0A\09.type\09CONFIG_STM32_CCM,%object", ""() #25, !dbg !5529, !srcloc !5530
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F405XG\0A\09.equ\09CONFIG_SOC_STM32F405XG,1\0A\09.type\09CONFIG_SOC_STM32F405XG,%object", ""() #25, !dbg !5531, !srcloc !5532
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !5533, !srcloc !5534
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !5535, !srcloc !5536
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !5537, !srcloc !5538
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !5539, !srcloc !5540
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !5541, !srcloc !5542
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !5543, !srcloc !5544
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !5545, !srcloc !5546
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !5547, !srcloc !5548
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !5549, !srcloc !5550
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !5551, !srcloc !5552
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !5553, !srcloc !5554
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #25, !dbg !5555, !srcloc !5556
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !5557, !srcloc !5558
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !5559, !srcloc !5560
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !5561, !srcloc !5562
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !5563, !srcloc !5564
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !5565, !srcloc !5566
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !5567, !srcloc !5568
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #25, !dbg !5569, !srcloc !5570
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !5571, !srcloc !5572
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !5573, !srcloc !5574
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !5575, !srcloc !5576
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !5577, !srcloc !5578
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !5579, !srcloc !5580
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !5581, !srcloc !5582
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !5583, !srcloc !5584
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !5585, !srcloc !5586
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !5587, !srcloc !5588
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !5589, !srcloc !5590
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !5591, !srcloc !5592
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !5593, !srcloc !5594
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !5595, !srcloc !5596
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !5597, !srcloc !5598
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !5599, !srcloc !5600
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !5601, !srcloc !5602
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !5603, !srcloc !5604
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !5605, !srcloc !5606
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !5607, !srcloc !5608
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !5609, !srcloc !5610
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !5611, !srcloc !5612
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !5613, !srcloc !5614
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !5615, !srcloc !5616
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !5617, !srcloc !5618
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #25, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #25, !dbg !5685, !srcloc !5686
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !5687, !srcloc !5688
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !5689, !srcloc !5690
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !5691, !srcloc !5692
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !5693, !srcloc !5694
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !5695, !srcloc !5696
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !5697, !srcloc !5698
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !5699, !srcloc !5700
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !5701, !srcloc !5702
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !5703, !srcloc !5704
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !5705, !srcloc !5706
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !5707, !srcloc !5708
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !5709, !srcloc !5710
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !5711, !srcloc !5712
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !5713, !srcloc !5714
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !5715, !srcloc !5716
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !5717, !srcloc !5718
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !5719, !srcloc !5720
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !5721, !srcloc !5722
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !5723, !srcloc !5724
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !5725, !srcloc !5726
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !5727, !srcloc !5728
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5729, !srcloc !5730
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !5731, !srcloc !5732
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !5733, !srcloc !5734
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !5735, !srcloc !5736
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !5737, !srcloc !5738
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !5739, !srcloc !5740
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !5741, !srcloc !5742
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !5743, !srcloc !5744
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !5745, !srcloc !5746
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !5747, !srcloc !5748
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !5749, !srcloc !5750
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !5751, !srcloc !5752
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !5753, !srcloc !5754
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !5755, !srcloc !5756
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !5757, !srcloc !5758
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !5759, !srcloc !5760
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !5761, !srcloc !5762
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !5763, !srcloc !5764
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !5765, !srcloc !5766
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !5767, !srcloc !5768
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !5769, !srcloc !5770
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #25, !dbg !5771, !srcloc !5772
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #25, !dbg !5773, !srcloc !5774
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #25, !dbg !5775, !srcloc !5776
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #25, !dbg !5777, !srcloc !5778
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !5779, !srcloc !5780
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !5781, !srcloc !5782
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !5783, !srcloc !5784
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !5785, !srcloc !5786
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !5787, !srcloc !5788
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,12000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !5789, !srcloc !5790
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !5791, !srcloc !5792
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !5793, !srcloc !5794
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !5795, !srcloc !5796
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !5797, !srcloc !5798
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !5799, !srcloc !5800
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !5801, !srcloc !5802
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !5803, !srcloc !5804
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !5805, !srcloc !5806
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !5807, !srcloc !5808
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !5809, !srcloc !5810
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !5811, !srcloc !5812
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !5813, !srcloc !5814
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !5815, !srcloc !5816
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !5817, !srcloc !5818
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !5819, !srcloc !5820
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !5821, !srcloc !5822
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !5823, !srcloc !5824
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !5825, !srcloc !5826
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !5827, !srcloc !5828
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !5829, !srcloc !5830
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !5831, !srcloc !5832
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !5833, !srcloc !5834
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !5835, !srcloc !5836
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !5837, !srcloc !5838
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !5839, !srcloc !5840
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !5841, !srcloc !5842
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #25, !dbg !5843, !srcloc !5844
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !5845, !srcloc !5846
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !5847, !srcloc !5848
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !5849, !srcloc !5850
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5851, !srcloc !5852
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !5853, !srcloc !5854
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !5855, !srcloc !5856
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !5857, !srcloc !5858
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !5859, !srcloc !5860
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !5861, !srcloc !5862
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !5863, !srcloc !5864
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !5865, !srcloc !5866
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !5867, !srcloc !5868
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !5869, !srcloc !5870
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !5871, !srcloc !5872
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !5873, !srcloc !5874
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !5875, !srcloc !5876
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !5877, !srcloc !5878
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !5879, !srcloc !5880
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !5881, !srcloc !5882
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !5883, !srcloc !5884
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !5885, !srcloc !5886
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !5887, !srcloc !5888
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !5889, !srcloc !5890
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !5891, !srcloc !5892
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !5893, !srcloc !5894
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !5895, !srcloc !5896
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !5897, !srcloc !5898
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !5899, !srcloc !5900
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !5901, !srcloc !5902
  ret void, !dbg !5903
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5904 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5906, metadata !DIExpression()), !dbg !5908
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !5909
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !5910
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !5911, !srcloc !5920
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5911
  call void @llvm.dbg.value(metadata i32 %3, metadata !5917, metadata !DIExpression()) #25, !dbg !5921
  call void @llvm.dbg.value(metadata i32 undef, metadata !5918, metadata !DIExpression()) #25, !dbg !5921
  call void @llvm.dbg.value(metadata i32 %3, metadata !5907, metadata !DIExpression()), !dbg !5908
  call void @llvm.dbg.value(metadata i32 %3, metadata !5922, metadata !DIExpression()) #25, !dbg !5927
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !5929, !srcloc !5930
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !5931
  ret i32 0, !dbg !5932
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !5933 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5935
  %2 = or i32 %1, 512, !dbg !5935
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5935
  ret void, !dbg !5936
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !5937 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5938
  %2 = or i32 %1, 1024, !dbg !5938
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5938
  ret void, !dbg !5939
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #11 !dbg !5940 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5942, metadata !DIExpression()), !dbg !5943
  ret i32 0, !dbg !5944
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !5945 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5994, metadata !DIExpression()), !dbg !5996
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !5995, metadata !DIExpression()), !dbg !5996
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !5997
  ret void, !dbg !5998
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !5999 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6016, metadata !DIExpression()), !dbg !6019
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6017, metadata !DIExpression()), !dbg !6019
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6020
  %4 = load i32, i32* %3, align 4, !dbg !6020
  call void @llvm.dbg.value(metadata i32 %4, metadata !6018, metadata !DIExpression()), !dbg !6019
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !6021
  ret void, !dbg !6022
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !6023 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6027, metadata !DIExpression()), !dbg !6030
  call void @llvm.dbg.value(metadata i8* %0, metadata !6028, metadata !DIExpression()), !dbg !6030
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6031
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !6031
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6029, metadata !DIExpression()), !dbg !6032
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6032
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6033
  %5 = bitcast i8* %4 to i32*, !dbg !6033
  %6 = load i32, i32* %5, align 4, !dbg !6033
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6034
  store i32 %6, i32* %7, align 4, !dbg !6035
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !6036
  unreachable, !dbg !6037
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6038 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6041, metadata !DIExpression()), !dbg !6042
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !6043
  ret void, !dbg !6044
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6045 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6049, metadata !DIExpression()), !dbg !6050
  %2 = icmp sgt i32 %0, -1, !dbg !6051
  br i1 %2, label %3, label %8, !dbg !6053

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !6054, !srcloc !6056
  %4 = and i32 %0, 31, !dbg !6057
  %5 = shl nuw i32 1, %4, !dbg !6058
  %6 = lshr i32 %0, 5, !dbg !6059
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6060
  store volatile i32 %5, i32* %7, align 4, !dbg !6061
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !6062, !srcloc !6063
  br label %8, !dbg !6064

8:                                                ; preds = %3, %1
  ret void, !dbg !6065
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6066 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6068, metadata !DIExpression()), !dbg !6069
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !6070
  ret void, !dbg !6071
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6072 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6074, metadata !DIExpression()), !dbg !6075
  %2 = icmp sgt i32 %0, -1, !dbg !6076
  br i1 %2, label %3, label %8, !dbg !6078

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6079
  %5 = shl nuw i32 1, %4, !dbg !6081
  %6 = lshr i32 %0, 5, !dbg !6082
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6083
  store volatile i32 %5, i32* %7, align 4, !dbg !6084
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6085, !srcloc !6089
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6090, !srcloc !6093
  br label %8, !dbg !6094

8:                                                ; preds = %3, %1
  ret void, !dbg !6095
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !6096 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6100, metadata !DIExpression()), !dbg !6101
  %2 = lshr i32 %0, 5, !dbg !6102
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6103
  %4 = load volatile i32, i32* %3, align 4, !dbg !6103
  %5 = and i32 %0, 31, !dbg !6104
  %6 = shl nuw i32 1, %5, !dbg !6104
  %7 = and i32 %4, %6, !dbg !6105
  ret i32 %7, !dbg !6106
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !6107 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6111, metadata !DIExpression()), !dbg !6114
  call void @llvm.dbg.value(metadata i32 %1, metadata !6112, metadata !DIExpression()), !dbg !6114
  call void @llvm.dbg.value(metadata i32 %2, metadata !6113, metadata !DIExpression()), !dbg !6114
  %4 = add i32 %1, 1, !dbg !6115
  call void @llvm.dbg.value(metadata i32 %4, metadata !6112, metadata !DIExpression()), !dbg !6114
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !6118
  ret void, !dbg !6119
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6120 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6124, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.value(metadata i32 %1, metadata !6125, metadata !DIExpression()), !dbg !6126
  %3 = trunc i32 %1 to i8, !dbg !6127
  %4 = shl i8 %3, 4, !dbg !6127
  %5 = and i32 %0, 15, !dbg !6129
  %6 = add nsw i32 %5, -4, !dbg !6129
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6129
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6129
  %9 = icmp slt i32 %0, 0, !dbg !6129
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6129
  store volatile i8 %4, i8* %10, align 1, !dbg !6127
  ret void, !dbg !6130
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6131 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6133, metadata !DIExpression()), !dbg !6134
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #27, !dbg !6135
  ret void, !dbg !6136
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6137 {
  tail call void @z_SysNmiOnReset() #27, !dbg !6139
  tail call void @z_arm_int_exit() #27, !dbg !6140
  ret void, !dbg !6141
}

; Function Attrs: optsize
declare !dbg !6142 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6143 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #8 !dbg !6145 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !6147
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !6148
  tail call void @z_bss_zero() #27, !dbg !6149
  tail call void @z_data_copy() #27, !dbg !6150
  tail call void @z_arm_interrupt_init() #27, !dbg !6151
  tail call void @z_cstart() #29, !dbg !6152
  unreachable, !dbg !6152
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6153 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6154
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6155, !srcloc !6158
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6159, !srcloc !6162
  ret void, !dbg !6163
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6164 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6165
  %2 = and i32 %1, -15728641, !dbg !6165
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6165
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #25, !dbg !6166, !srcloc !6173
  call void @llvm.dbg.value(metadata i32 %3, metadata !6171, metadata !DIExpression()) #25, !dbg !6174
  %4 = and i32 %3, -5, !dbg !6175
  call void @llvm.dbg.value(metadata i32 %4, metadata !6176, metadata !DIExpression()) #25, !dbg !6181
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #25, !dbg !6183, !srcloc !6184
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6185, !srcloc !6162
  ret void, !dbg !6187
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6188 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6191, metadata !DIExpression()), !dbg !6192
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6193
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6194
  store i32 %0, i32* %3, align 4, !dbg !6195
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6196
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6197
  store i32 %4, i32* %5, align 4, !dbg !6198
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6199
  %7 = or i32 %6, 268435456, !dbg !6199
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6199
  call void @llvm.dbg.value(metadata i32 0, metadata !6200, metadata !DIExpression()) #25, !dbg !6203
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6205, !srcloc !6206
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6207
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6208
  %10 = load i32, i32* %9, align 4, !dbg !6208
  ret i32 %10, !dbg !6209
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !6210 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6320, metadata !DIExpression()), !dbg !6328
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6321, metadata !DIExpression()), !dbg !6328
  call void @llvm.dbg.value(metadata i8* %2, metadata !6322, metadata !DIExpression()), !dbg !6328
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6323, metadata !DIExpression()), !dbg !6328
  call void @llvm.dbg.value(metadata i8* %4, metadata !6324, metadata !DIExpression()), !dbg !6328
  call void @llvm.dbg.value(metadata i8* %5, metadata !6325, metadata !DIExpression()), !dbg !6328
  call void @llvm.dbg.value(metadata i8* %6, metadata !6326, metadata !DIExpression()), !dbg !6328
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6329
  call void @llvm.dbg.value(metadata i8* %8, metadata !6327, metadata !DIExpression()), !dbg !6328
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6330
  %10 = bitcast i8* %9 to i32*, !dbg !6330
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6331
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6332
  %12 = bitcast i8* %8 to i32*, !dbg !6333
  store i32 %11, i32* %12, align 4, !dbg !6334
  %13 = ptrtoint i8* %4 to i32, !dbg !6335
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6336
  %15 = bitcast i8* %14 to i32*, !dbg !6336
  store i32 %13, i32* %15, align 4, !dbg !6337
  %16 = ptrtoint i8* %5 to i32, !dbg !6338
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6339
  %18 = bitcast i8* %17 to i32*, !dbg !6339
  store i32 %16, i32* %18, align 4, !dbg !6340
  %19 = ptrtoint i8* %6 to i32, !dbg !6341
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6342
  %21 = bitcast i8* %20 to i32*, !dbg !6342
  store i32 %19, i32* %21, align 4, !dbg !6343
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6344
  %23 = bitcast i8* %22 to i32*, !dbg !6344
  store i32 16777216, i32* %23, align 4, !dbg !6345
  %24 = ptrtoint i8* %8 to i32, !dbg !6346
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6347
  store i32 %24, i32* %25, align 8, !dbg !6348
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !6349
  store i32 0, i32* %26, align 4, !dbg !6350
  ret void, !dbg !6351
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !6352 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6357, metadata !DIExpression()), !dbg !6363
  call void @llvm.dbg.value(metadata i32 %1, metadata !6358, metadata !DIExpression()), !dbg !6363
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6364
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6359, metadata !DIExpression()), !dbg !6363
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6365
  br i1 %4, label %19, label %5, !dbg !6367

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6362, metadata !DIExpression()), !dbg !6363
  %6 = icmp eq i32 %0, -22, !dbg !6368
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !6368
  %8 = load i32, i32* %7, align 4, !dbg !6368
  br i1 %6, label %16, label %9, !dbg !6370

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6368
  %11 = icmp ule i32 %10, %0, !dbg !6368
  %12 = icmp ugt i32 %8, %0, !dbg !6368
  %13 = and i1 %12, %11, !dbg !6368
  %14 = icmp ugt i32 %8, %1, !dbg !6368
  %15 = and i1 %14, %13, !dbg !6368
  br i1 %15, label %18, label %19, !dbg !6368

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6368
  br i1 %17, label %18, label %19, !dbg !6370

18:                                               ; preds = %9, %16
  br label %19, !dbg !6371

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6363
  ret i32 %20, !dbg !6373
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #8 !dbg !6374 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6378, metadata !DIExpression()), !dbg !6381
  call void @llvm.dbg.value(metadata i8* %1, metadata !6379, metadata !DIExpression()), !dbg !6381
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6380, metadata !DIExpression()), !dbg !6381
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6382
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #27, !dbg !6383
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !6384, !srcloc !6385
  unreachable, !dbg !6386
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6387 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6405, metadata !DIExpression()), !dbg !6415
  call void @llvm.dbg.value(metadata i32 %1, metadata !6406, metadata !DIExpression()), !dbg !6415
  call void @llvm.dbg.value(metadata i32 %2, metadata !6407, metadata !DIExpression()), !dbg !6415
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6408, metadata !DIExpression()), !dbg !6415
  call void @llvm.dbg.value(metadata i32 0, metadata !6409, metadata !DIExpression()), !dbg !6415
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6416
  %9 = and i32 %8, 511, !dbg !6417
  call void @llvm.dbg.value(metadata i32 %9, metadata !6410, metadata !DIExpression()), !dbg !6415
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6418
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6418
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !6419
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !6419
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6414, metadata !DIExpression()), !dbg !6420
  call void @llvm.dbg.value(metadata i32 0, metadata !6421, metadata !DIExpression()) #25, !dbg !6424
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6426, !srcloc !6427
  call void @llvm.dbg.value(metadata i8* %6, metadata !6412, metadata !DIExpression(DW_OP_deref)), !dbg !6415
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !6428
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !6413, metadata !DIExpression()), !dbg !6415
  call void @llvm.dbg.value(metadata i8* %5, metadata !6411, metadata !DIExpression(DW_OP_deref)), !dbg !6415
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !6429
  call void @llvm.dbg.value(metadata i32 %12, metadata !6409, metadata !DIExpression()), !dbg !6415
  %13 = load i8, i8* %5, align 1, !dbg !6430, !range !6432
  call void @llvm.dbg.value(metadata i8 %13, metadata !6411, metadata !DIExpression()), !dbg !6415
  %14 = icmp eq i8 %13, 0, !dbg !6430
  br i1 %14, label %15, label %32, !dbg !6433

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !6434
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #27, !dbg !6435
  %18 = load i8, i8* %6, align 1, !dbg !6436, !range !6432
  call void @llvm.dbg.value(metadata i8 %18, metadata !6412, metadata !DIExpression()), !dbg !6415
  %19 = icmp eq i8 %18, 0, !dbg !6436
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6438
  %21 = load i32, i32* %20, align 4, !dbg !6438
  br i1 %19, label %27, label %22, !dbg !6439

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !6440
  %24 = icmp eq i32 %23, 0, !dbg !6443
  br i1 %24, label %25, label %31, !dbg !6444

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !6445
  br label %29, !dbg !6447

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !6448
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !6438
  br label %31, !dbg !6450

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #27, !dbg !6450
  br label %32, !dbg !6451

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !6451
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6451
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6451
  ret void, !dbg !6451
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !6452 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6457, metadata !DIExpression()), !dbg !6463
  call void @llvm.dbg.value(metadata i32 %1, metadata !6458, metadata !DIExpression()), !dbg !6463
  call void @llvm.dbg.value(metadata i32 %2, metadata !6459, metadata !DIExpression()), !dbg !6463
  call void @llvm.dbg.value(metadata i8* %3, metadata !6460, metadata !DIExpression()), !dbg !6463
  call void @llvm.dbg.value(metadata i8 0, metadata !6461, metadata !DIExpression()), !dbg !6463
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6462, metadata !DIExpression()), !dbg !6463
  store i8 0, i8* %3, align 1, !dbg !6464
  %5 = icmp ult i32 %2, -16777216, !dbg !6465
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6467
  br i1 %8, label %16, label %9, !dbg !6467

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6468
  %11 = icmp eq i32 %10, 0, !dbg !6468
  br i1 %11, label %12, label %13, !dbg !6470

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6462, metadata !DIExpression()), !dbg !6463
  store i8 1, i8* %3, align 1, !dbg !6473
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6463
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6462, metadata !DIExpression()), !dbg !6463
  br label %16, !dbg !6476

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6463
  ret %struct.__esf* %17, !dbg !6477
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6478 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6482, metadata !DIExpression()), !dbg !6486
  call void @llvm.dbg.value(metadata i32 %1, metadata !6483, metadata !DIExpression()), !dbg !6486
  call void @llvm.dbg.value(metadata i8* %2, metadata !6484, metadata !DIExpression()), !dbg !6486
  call void @llvm.dbg.value(metadata i32 0, metadata !6485, metadata !DIExpression()), !dbg !6486
  store i8 0, i8* %2, align 1, !dbg !6487
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6488

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !6489
  call void @llvm.dbg.value(metadata i32 %5, metadata !6485, metadata !DIExpression()), !dbg !6486
  br label %11, !dbg !6491

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6492
  call void @llvm.dbg.value(metadata i32 %7, metadata !6485, metadata !DIExpression()), !dbg !6486
  br label %11, !dbg !6493

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6494
  call void @llvm.dbg.value(metadata i32 0, metadata !6485, metadata !DIExpression()), !dbg !6486
  br label %11, !dbg !6495

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !6496
  call void @llvm.dbg.value(metadata i32 0, metadata !6485, metadata !DIExpression()), !dbg !6486
  br label %11, !dbg !6497

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !6498
  br label %11, !dbg !6499

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !6500
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6501 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6505, metadata !DIExpression()), !dbg !6508
  call void @llvm.dbg.value(metadata i8* %1, metadata !6506, metadata !DIExpression()), !dbg !6508
  call void @llvm.dbg.value(metadata i32 0, metadata !6507, metadata !DIExpression()), !dbg !6508
  store i8 0, i8* %1, align 1, !dbg !6509
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6510
  %4 = and i32 %3, 2, !dbg !6512
  %5 = icmp eq i32 %4, 0, !dbg !6513
  br i1 %5, label %6, label %33, !dbg !6514

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6515
  %8 = icmp sgt i32 %7, -1, !dbg !6517
  br i1 %8, label %9, label %33, !dbg !6518

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6519
  %11 = and i32 %10, 1073741824, !dbg !6521
  %12 = icmp eq i32 %11, 0, !dbg !6522
  br i1 %12, label %33, label %13, !dbg !6523

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !6524
  br i1 %14, label %15, label %18, !dbg !6527

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6528
  %17 = load i32, i32* %16, align 4, !dbg !6528
  call void @llvm.dbg.value(metadata i32 %17, metadata !6507, metadata !DIExpression()), !dbg !6508
  br label %33, !dbg !6530

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6531
  %20 = and i32 %19, 255, !dbg !6533
  %21 = icmp eq i32 %20, 0, !dbg !6534
  br i1 %21, label %24, label %22, !dbg !6535

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6536
  call void @llvm.dbg.value(metadata i32 %23, metadata !6507, metadata !DIExpression()), !dbg !6508
  br label %33, !dbg !6538

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6539
  %26 = and i32 %25, 65280, !dbg !6541
  %27 = icmp eq i32 %26, 0, !dbg !6542
  br i1 %27, label %29, label %28, !dbg !6543

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6544
  call void @llvm.dbg.value(metadata i32 0, metadata !6507, metadata !DIExpression()), !dbg !6508
  br label %33, !dbg !6546

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6547
  %31 = icmp ult i32 %30, 65536, !dbg !6549
  br i1 %31, label %33, label %32, !dbg !6550

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #26, !dbg !6551
  call void @llvm.dbg.value(metadata i32 0, metadata !6507, metadata !DIExpression()), !dbg !6508
  br label %33, !dbg !6553

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !6508
  call void @llvm.dbg.value(metadata i32 %34, metadata !6507, metadata !DIExpression()), !dbg !6508
  ret i32 %34, !dbg !6554
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6555 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6557, metadata !DIExpression()), !dbg !6570
  call void @llvm.dbg.value(metadata i32 %1, metadata !6558, metadata !DIExpression()), !dbg !6570
  call void @llvm.dbg.value(metadata i8* %2, metadata !6559, metadata !DIExpression()), !dbg !6570
  call void @llvm.dbg.value(metadata i32 0, metadata !6560, metadata !DIExpression()), !dbg !6570
  call void @llvm.dbg.value(metadata i32 -22, metadata !6561, metadata !DIExpression()), !dbg !6570
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6571
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6573
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6575
  %7 = and i32 %6, 2, !dbg !6576
  %8 = icmp eq i32 %7, 0, !dbg !6577
  br i1 %8, label %19, label %9, !dbg !6578

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6579
  call void @llvm.dbg.value(metadata i32 %10, metadata !6562, metadata !DIExpression()), !dbg !6580
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6581
  %12 = and i32 %11, 128, !dbg !6583
  %13 = icmp eq i32 %12, 0, !dbg !6584
  br i1 %13, label %19, label %14, !dbg !6585

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !6561, metadata !DIExpression()), !dbg !6570
  %15 = icmp eq i32 %1, 0, !dbg !6586
  br i1 %15, label %19, label %16, !dbg !6589

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6590
  %18 = and i32 %17, -129, !dbg !6590
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6590
  br label %19, !dbg !6592

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !6570
  call void @llvm.dbg.value(metadata i32 %20, metadata !6561, metadata !DIExpression()), !dbg !6570
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6593
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6595
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6597
  %24 = and i32 %23, 16, !dbg !6598
  %25 = icmp eq i32 %24, 0, !dbg !6598
  br i1 %25, label %26, label %30, !dbg !6599

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6600
  %28 = and i32 %27, 2, !dbg !6601
  %29 = icmp eq i32 %28, 0, !dbg !6601
  br i1 %29, label %39, label %30, !dbg !6602

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6603
  %32 = and i32 %31, 2048, !dbg !6604
  %33 = icmp eq i32 %32, 0, !dbg !6604
  br i1 %33, label %39, label %34, !dbg !6605

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !6606
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #27, !dbg !6607
  call void @llvm.dbg.value(metadata i32 %36, metadata !6565, metadata !DIExpression()), !dbg !6608
  %37 = icmp eq i32 %36, 0, !dbg !6609
  br i1 %37, label %39, label %38, !dbg !6611

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !6612, metadata !DIExpression()) #25, !dbg !6615
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #25, !dbg !6618, !srcloc !6619
  call void @llvm.dbg.value(metadata i32 2, metadata !6560, metadata !DIExpression()), !dbg !6570
  br label %39, !dbg !6620

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !6570
  call void @llvm.dbg.value(metadata i32 %40, metadata !6560, metadata !DIExpression()), !dbg !6570
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6621
  %42 = and i32 %41, 32, !dbg !6623
  %43 = icmp eq i32 %42, 0, !dbg !6624
  br i1 %43, label %47, label %44, !dbg !6625

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6626
  %46 = and i32 %45, -8193, !dbg !6626
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6626
  br label %47, !dbg !6628

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6629
  %49 = or i32 %48, 255, !dbg !6629
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6629
  store i8 0, i8* %2, align 1, !dbg !6630
  ret i32 %40, !dbg !6631
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !6632 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6636, metadata !DIExpression()), !dbg !6643
  call void @llvm.dbg.value(metadata i32 %0, metadata !6637, metadata !DIExpression()), !dbg !6643
  call void @llvm.dbg.value(metadata i8* %1, metadata !6638, metadata !DIExpression()), !dbg !6643
  call void @llvm.dbg.value(metadata i32 0, metadata !6639, metadata !DIExpression()), !dbg !6643
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6644
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6646
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6648
  %6 = and i32 %5, 512, !dbg !6649
  %7 = icmp eq i32 %6, 0, !dbg !6649
  br i1 %7, label %18, label %8, !dbg !6650

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6651
  call void @llvm.dbg.value(metadata i32 %9, metadata !6640, metadata !DIExpression()), !dbg !6652
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6653
  %11 = and i32 %10, 32768, !dbg !6655
  %12 = icmp ne i32 %11, 0, !dbg !6656
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !6657
  br i1 %14, label %15, label %18, !dbg !6657

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6658
  %17 = and i32 %16, -32769, !dbg !6658
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6658
  br label %18, !dbg !6662

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6663
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6665
  %21 = and i32 %20, 256, !dbg !6667
  %22 = icmp eq i32 %21, 0, !dbg !6668
  br i1 %22, label %23, label %25, !dbg !6669

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6670
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6672
  %27 = or i32 %26, 65280, !dbg !6672
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6672
  store i8 0, i8* %1, align 1, !dbg !6673
  ret void, !dbg !6674
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !6675 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6681, metadata !DIExpression()), !dbg !6683
  call void @llvm.dbg.value(metadata i32 0, metadata !6682, metadata !DIExpression()), !dbg !6683
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6684
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6686
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6688
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6690
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6692
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6694
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6696
  %8 = or i32 %7, -65536, !dbg !6696
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6696
  ret void, !dbg !6697
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !6698 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6702, metadata !DIExpression()), !dbg !6704
  call void @llvm.dbg.value(metadata i8* %0, metadata !6703, metadata !DIExpression()), !dbg !6704
  store i8 0, i8* %0, align 1, !dbg !6705
  ret void, !dbg !6706
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6707 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6711, metadata !DIExpression()), !dbg !6714
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6715
  %3 = load i32, i32* %2, align 4, !dbg !6715
  %4 = inttoptr i32 %3 to i16*, !dbg !6716
  call void @llvm.dbg.value(metadata i16* %4, metadata !6712, metadata !DIExpression()), !dbg !6714
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6717
  %6 = or i32 %5, 256, !dbg !6717
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6717
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6718, !srcloc !6721
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6722, !srcloc !6725
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6726
  %8 = load i16, i16* %7, align 2, !dbg !6727
  call void @llvm.dbg.value(metadata i16 %8, metadata !6713, metadata !DIExpression()), !dbg !6714
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6728
  %10 = and i32 %9, -257, !dbg !6728
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6728
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6729, !srcloc !6721
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6731, !srcloc !6725
  %11 = icmp eq i16 %8, -8446, !dbg !6733
  ret i1 %11, !dbg !6735
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !6736 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6737
  %2 = or i32 %1, 16, !dbg !6737
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6737
  ret void, !dbg !6738
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !6739 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6742, metadata !DIExpression()), !dbg !6743
  br label %1, !dbg !6744

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6742, metadata !DIExpression()), !dbg !6743
  tail call fastcc void @__NVIC_SetPriority.12(i32 noundef %2) #26, !dbg !6746
  %3 = add nuw nsw i32 %2, 1, !dbg !6749
  call void @llvm.dbg.value(metadata i32 %3, metadata !6742, metadata !DIExpression()), !dbg !6743
  %4 = icmp eq i32 %3, 82, !dbg !6750
  br i1 %4, label %5, label %1, !dbg !6744, !llvm.loop !6751

5:                                                ; preds = %1
  ret void, !dbg !6753
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.12(i32 noundef %0) unnamed_addr #15 !dbg !6754 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6756, metadata !DIExpression()), !dbg !6758
  call void @llvm.dbg.value(metadata i32 1, metadata !6757, metadata !DIExpression()), !dbg !6758
  %2 = and i32 %0, 15, !dbg !6759
  %3 = add nsw i32 %2, -4, !dbg !6759
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !6759
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6759
  %6 = icmp slt i32 %0, 0, !dbg !6759
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !6759
  store volatile i8 16, i8* %7, align 1, !dbg !6760
  ret void, !dbg !6762
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !6763 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6869, metadata !DIExpression()), !dbg !6870
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6871
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !6873
  br i1 %3, label %4, label %12, !dbg !6874

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !6875, !srcloc !6887
  call void @llvm.dbg.value(metadata i32 %5, metadata !6878, metadata !DIExpression()) #25, !dbg !6888
  %6 = icmp eq i32 %5, 0, !dbg !6889
  br i1 %6, label %12, label %7, !dbg !6890

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6891
  %9 = or i32 %8, 268435456, !dbg !6891
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6891
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6893
  %11 = and i32 %10, -32769, !dbg !6893
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6893
  br label %12, !dbg !6894

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !6895
  ret void, !dbg !6896
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !6897 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #27, !dbg !6898
  ret void, !dbg !6899
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !353 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !470, metadata !DIExpression()), !dbg !6900
  call void @llvm.dbg.value(metadata i8 0, metadata !471, metadata !DIExpression()), !dbg !6900
  call void @llvm.dbg.value(metadata i32 64, metadata !473, metadata !DIExpression()), !dbg !6900
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !6901
  %3 = load i32, i32* %2, align 4, !dbg !6901
  %4 = add i32 %3, -64, !dbg !6903
  call void @llvm.dbg.value(metadata i32 %4, metadata !472, metadata !DIExpression()), !dbg !6900
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !6904
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !6905
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !6906
  call void @llvm.dbg.value(metadata i8 1, metadata !471, metadata !DIExpression()), !dbg !6900
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #27, !dbg !6907
  ret void, !dbg !6908
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !6909 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6910
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6911, !srcloc !6914
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6915, !srcloc !6918
  ret void, !dbg !6919
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !6920 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !6921, !srcloc !6924
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6925
  ret void, !dbg !6926
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #17 !dbg !6927 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6942, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata i8 %1, metadata !6943, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata i32 %2, metadata !6944, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata i32 %3, metadata !6945, metadata !DIExpression()), !dbg !6946
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !6947
  ret void, !dbg !6949
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !6950 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6955, metadata !DIExpression()), !dbg !6960
  call void @llvm.dbg.value(metadata i8 %1, metadata !6956, metadata !DIExpression()), !dbg !6960
  call void @llvm.dbg.value(metadata i32 undef, metadata !6957, metadata !DIExpression()), !dbg !6960
  call void @llvm.dbg.value(metadata i32 undef, metadata !6958, metadata !DIExpression()), !dbg !6960
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !6961
  call void @llvm.dbg.value(metadata i8 %3, metadata !6959, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6960
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !6962
  call void @llvm.dbg.value(metadata i32 %4, metadata !6959, metadata !DIExpression()), !dbg !6960
  %5 = trunc i32 %4 to i8, !dbg !6963
  store i8 %5, i8* @static_regions_num, align 1, !dbg !6964
  ret void, !dbg !6965
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #17 !dbg !6966 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6970, metadata !DIExpression()), !dbg !6976
  call void @llvm.dbg.value(metadata i8 %1, metadata !6971, metadata !DIExpression()), !dbg !6976
  call void @llvm.dbg.value(metadata i8 %2, metadata !6972, metadata !DIExpression()), !dbg !6976
  call void @llvm.dbg.value(metadata i1 %3, metadata !6973, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6976
  %5 = zext i8 %2 to i32, !dbg !6977
  call void @llvm.dbg.value(metadata i32 %5, metadata !6975, metadata !DIExpression()), !dbg !6976
  call void @llvm.dbg.value(metadata i32 0, metadata !6974, metadata !DIExpression()), !dbg !6976
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !6975, metadata !DIExpression()), !dbg !6976
  call void @llvm.dbg.value(metadata i32 0, metadata !6974, metadata !DIExpression()), !dbg !6976
  %7 = icmp eq i8 %1, 0, !dbg !6978
  br i1 %7, label %29, label %8, !dbg !6981

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6975, metadata !DIExpression()), !dbg !6976
  call void @llvm.dbg.value(metadata i32 %10, metadata !6974, metadata !DIExpression()), !dbg !6976
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !6982
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !6985
  %13 = load i32, i32* %12, align 4, !dbg !6985
  %14 = icmp eq i32 %13, 0, !dbg !6986
  br i1 %14, label %25, label %15, !dbg !6987

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !6988

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !6990
  %18 = icmp eq i32 %17, 0, !dbg !6990
  br i1 %18, label %29, label %19, !dbg !6991

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !6992
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !6993
  call void @llvm.dbg.value(metadata i32 %21, metadata !6975, metadata !DIExpression()), !dbg !6976
  %22 = icmp eq i32 %21, -22, !dbg !6994
  br i1 %22, label %29, label %23, !dbg !6996

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !6997
  call void @llvm.dbg.value(metadata i32 %24, metadata !6975, metadata !DIExpression()), !dbg !6976
  br label %25, !dbg !6998

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !6976
  call void @llvm.dbg.value(metadata i32 %26, metadata !6975, metadata !DIExpression()), !dbg !6976
  %27 = add nuw nsw i32 %10, 1, !dbg !6999
  call void @llvm.dbg.value(metadata i32 %27, metadata !6974, metadata !DIExpression()), !dbg !6976
  %28 = icmp eq i32 %27, %6, !dbg !6978
  br i1 %28, label %29, label %8, !dbg !6981, !llvm.loop !7000

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !6976
  ret i32 %30, !dbg !7002
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !7003 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7007, metadata !DIExpression()), !dbg !7009
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7010
  %3 = load i32, i32* %2, align 4, !dbg !7010
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7011, !range !3994
  %5 = icmp ult i32 %4, 2, !dbg !7011
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7012
  br i1 %7, label %8, label %15, !dbg !7012

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7013
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7014
  %11 = load i32, i32* %10, align 4, !dbg !7014
  %12 = and i32 %11, %9, !dbg !7015
  %13 = icmp eq i32 %12, 0, !dbg !7016
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7008, metadata !DIExpression()), !dbg !7009
  ret i32 %16, !dbg !7017
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #17 !dbg !7018 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7022, metadata !DIExpression()), !dbg !7025
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7023, metadata !DIExpression()), !dbg !7025
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7026
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !7026
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7024, metadata !DIExpression()), !dbg !7027
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7028
  %6 = load i32, i32* %5, align 4, !dbg !7028
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7029
  store i32 %6, i32* %7, align 4, !dbg !7030
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7031
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7032
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7033
  %11 = load i32, i32* %10, align 4, !dbg !7033
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #26, !dbg !7034
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !7035
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !7036
  ret i32 %12, !dbg !7037
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #10 !dbg !7038 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !7045, metadata !DIExpression()), !dbg !7049
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !7046, metadata !DIExpression()), !dbg !7049
  call void @llvm.dbg.value(metadata i32 undef, metadata !7047, metadata !DIExpression()), !dbg !7049
  call void @llvm.dbg.value(metadata i32 %2, metadata !7048, metadata !DIExpression()), !dbg !7049
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !7050
  %5 = load i32, i32* %4, align 4, !dbg !7050
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !7051
  %7 = or i32 %6, %5, !dbg !7052
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !7053
  store i32 %7, i32* %8, align 4, !dbg !7054
  ret void, !dbg !7055
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7056 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7060, metadata !DIExpression()), !dbg !7062
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7061, metadata !DIExpression()), !dbg !7062
  %3 = zext i8 %0 to i32, !dbg !7063
  %4 = icmp ugt i8 %0, 7, !dbg !7065
  br i1 %4, label %6, label %5, !dbg !7066

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !7067
  br label %6, !dbg !7068

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !7062
  ret i32 %7, !dbg !7069
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7070 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7074, metadata !DIExpression()), !dbg !7076
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7075, metadata !DIExpression()), !dbg !7076
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !7077
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7078
  %4 = load i32, i32* %3, align 4, !dbg !7078
  %5 = and i32 %4, -32, !dbg !7079
  %6 = or i32 %5, %0, !dbg !7080
  %7 = or i32 %6, 16, !dbg !7080
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7081
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7082
  %9 = load i32, i32* %8, align 4, !dbg !7082
  %10 = or i32 %9, 1, !dbg !7083
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7084
  ret void, !dbg !7085
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7086 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7089, metadata !DIExpression()), !dbg !7090
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7091
  ret void, !dbg !7092
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !7093 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7097, metadata !DIExpression()), !dbg !7098
  %2 = icmp ult i32 %0, 33, !dbg !7099
  br i1 %2, label %11, label %3, !dbg !7101

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7102
  br i1 %4, label %11, label %5, !dbg !7104

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7105
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7106, !range !3994
  %8 = mul nsw i32 %7, -2, !dbg !7107
  %9 = add nsw i32 %8, 62, !dbg !7107
  %10 = and i32 %9, 62, !dbg !7108
  br label %11, !dbg !7109

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7098
  ret i32 %12, !dbg !7110
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #17 !dbg !7111 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7115, metadata !DIExpression()), !dbg !7117
  call void @llvm.dbg.value(metadata i8 %1, metadata !7116, metadata !DIExpression()), !dbg !7117
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7118
  ret void, !dbg !7120
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7121 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7125, metadata !DIExpression()), !dbg !7132
  call void @llvm.dbg.value(metadata i8 %1, metadata !7126, metadata !DIExpression()), !dbg !7132
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7133
  call void @llvm.dbg.value(metadata i8 %3, metadata !7127, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7132
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !7134
  call void @llvm.dbg.value(metadata i32 %4, metadata !7127, metadata !DIExpression()), !dbg !7132
  %5 = icmp ne i32 %4, -22, !dbg !7135
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7136
  call void @llvm.dbg.value(metadata i32 %4, metadata !7128, metadata !DIExpression()), !dbg !7137
  br i1 %7, label %8, label %12, !dbg !7136

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7128, metadata !DIExpression()), !dbg !7137
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !7138
  %10 = add i32 %9, 1, !dbg !7141
  call void @llvm.dbg.value(metadata i32 %10, metadata !7128, metadata !DIExpression()), !dbg !7137
  %11 = icmp eq i32 %10, 8, !dbg !7142
  br i1 %11, label %12, label %8, !dbg !7143, !llvm.loop !7144

12:                                               ; preds = %8, %2
  ret void, !dbg !7146
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7147 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7150, metadata !DIExpression()), !dbg !7151
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7152
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7153
  ret void, !dbg !7154
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7155 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7160
  %2 = icmp ugt i32 %1, 8, !dbg !7162
  br i1 %2, label %14, label %3, !dbg !7163

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !7164
  call void @llvm.dbg.value(metadata i32 0, metadata !7159, metadata !DIExpression()), !dbg !7165
  %4 = icmp eq i32 %1, 0, !dbg !7166
  br i1 %4, label %12, label %5, !dbg !7169

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !7169

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7159, metadata !DIExpression()), !dbg !7165
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !7170
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !7172
  %10 = add nuw i32 %8, 1, !dbg !7173
  call void @llvm.dbg.value(metadata i32 %10, metadata !7159, metadata !DIExpression()), !dbg !7165
  %11 = icmp eq i32 %10, %1, !dbg !7166
  br i1 %11, label %12, label %7, !dbg !7169, !llvm.loop !7174

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !7176
  store i8 %13, i8* @static_regions_num, align 1, !dbg !7177
  tail call void @arm_core_mpu_enable() #26, !dbg !7178
  br label %14, !dbg !7179

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !7165
  ret i32 %15, !dbg !7180
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7181 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7188, metadata !DIExpression()), !dbg !7191
  call void @llvm.dbg.value(metadata i8* %1, metadata !7189, metadata !DIExpression()), !dbg !7191
  call void @llvm.dbg.value(metadata i8* %0, metadata !7190, metadata !DIExpression()), !dbg !7191
  %3 = load i8, i8* %1, align 1, !dbg !7192
  %4 = icmp eq i8 %3, 0, !dbg !7193
  br i1 %4, label %13, label %5, !dbg !7194

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7188, metadata !DIExpression()), !dbg !7191
  call void @llvm.dbg.value(metadata i8* %8, metadata !7189, metadata !DIExpression()), !dbg !7191
  store i8 %6, i8* %7, align 1, !dbg !7195
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7197
  call void @llvm.dbg.value(metadata i8* %9, metadata !7188, metadata !DIExpression()), !dbg !7191
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7198
  call void @llvm.dbg.value(metadata i8* %10, metadata !7189, metadata !DIExpression()), !dbg !7191
  %11 = load i8, i8* %10, align 1, !dbg !7192
  %12 = icmp eq i8 %11, 0, !dbg !7193
  br i1 %12, label %13, label %5, !dbg !7194, !llvm.loop !7199

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7201
  ret i8* %0, !dbg !7202
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7203 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7207, metadata !DIExpression()), !dbg !7211
  call void @llvm.dbg.value(metadata i8* %1, metadata !7208, metadata !DIExpression()), !dbg !7211
  call void @llvm.dbg.value(metadata i32 %2, metadata !7209, metadata !DIExpression()), !dbg !7211
  call void @llvm.dbg.value(metadata i8* %0, metadata !7210, metadata !DIExpression()), !dbg !7211
  %4 = icmp eq i32 %2, 0, !dbg !7212
  br i1 %4, label %22, label %5, !dbg !7213

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7207, metadata !DIExpression()), !dbg !7211
  call void @llvm.dbg.value(metadata i32 %7, metadata !7209, metadata !DIExpression()), !dbg !7211
  call void @llvm.dbg.value(metadata i8* %8, metadata !7208, metadata !DIExpression()), !dbg !7211
  %9 = load i8, i8* %8, align 1, !dbg !7214
  %10 = icmp eq i8 %9, 0, !dbg !7215
  br i1 %10, label %16, label %11, !dbg !7216

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7217
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7219
  call void @llvm.dbg.value(metadata i8* %12, metadata !7208, metadata !DIExpression()), !dbg !7211
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7220
  call void @llvm.dbg.value(metadata i8* %13, metadata !7207, metadata !DIExpression()), !dbg !7211
  %14 = add i32 %7, -1, !dbg !7221
  call void @llvm.dbg.value(metadata i32 %14, metadata !7209, metadata !DIExpression()), !dbg !7211
  %15 = icmp eq i32 %14, 0, !dbg !7212
  br i1 %15, label %22, label %5, !dbg !7213, !llvm.loop !7222

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7207, metadata !DIExpression()), !dbg !7211
  call void @llvm.dbg.value(metadata i32 %18, metadata !7209, metadata !DIExpression()), !dbg !7211
  store i8 0, i8* %17, align 1, !dbg !7224
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7226
  call void @llvm.dbg.value(metadata i8* %19, metadata !7207, metadata !DIExpression()), !dbg !7211
  %20 = add i32 %18, -1, !dbg !7227
  call void @llvm.dbg.value(metadata i32 %20, metadata !7209, metadata !DIExpression()), !dbg !7211
  %21 = icmp eq i32 %20, 0, !dbg !7228
  br i1 %21, label %22, label %16, !dbg !7229, !llvm.loop !7230

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7232
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7233 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7237, metadata !DIExpression()), !dbg !7240
  call void @llvm.dbg.value(metadata i32 %1, metadata !7238, metadata !DIExpression()), !dbg !7240
  call void @llvm.dbg.value(metadata i32 %1, metadata !7239, metadata !DIExpression()), !dbg !7240
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7241

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7237, metadata !DIExpression()), !dbg !7240
  %6 = load i8, i8* %5, align 1, !dbg !7242
  %7 = icmp eq i8 %6, %3, !dbg !7243
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7244
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7245
  call void @llvm.dbg.value(metadata i8* %10, metadata !7237, metadata !DIExpression()), !dbg !7240
  br i1 %9, label %11, label %4, !dbg !7244, !llvm.loop !7247

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7249
  ret i8* %12, !dbg !7250
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7251 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7253, metadata !DIExpression()), !dbg !7256
  call void @llvm.dbg.value(metadata i32 %1, metadata !7254, metadata !DIExpression()), !dbg !7256
  call void @llvm.dbg.value(metadata i8* null, metadata !7255, metadata !DIExpression()), !dbg !7256
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7257

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7256
  call void @llvm.dbg.value(metadata i8* %6, metadata !7255, metadata !DIExpression()), !dbg !7256
  call void @llvm.dbg.value(metadata i8* %5, metadata !7253, metadata !DIExpression()), !dbg !7256
  %7 = load i8, i8* %5, align 1, !dbg !7258
  %8 = icmp eq i8 %7, %3, !dbg !7261
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7262
  call void @llvm.dbg.value(metadata i8* %9, metadata !7255, metadata !DIExpression()), !dbg !7256
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7263
  call void @llvm.dbg.value(metadata i8* %10, metadata !7253, metadata !DIExpression()), !dbg !7256
  %11 = icmp eq i8 %7, 0, !dbg !7264
  br i1 %11, label %12, label %4, !dbg !7264, !llvm.loop !7265

12:                                               ; preds = %4
  ret i8* %9, !dbg !7267
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !7268 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7272, metadata !DIExpression()), !dbg !7274
  call void @llvm.dbg.value(metadata i32 0, metadata !7273, metadata !DIExpression()), !dbg !7274
  %2 = load i8, i8* %0, align 1, !dbg !7275
  %3 = icmp eq i8 %2, 0, !dbg !7276
  br i1 %3, label %11, label %4, !dbg !7277

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7273, metadata !DIExpression()), !dbg !7274
  call void @llvm.dbg.value(metadata i8* %6, metadata !7272, metadata !DIExpression()), !dbg !7274
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7278
  call void @llvm.dbg.value(metadata i8* %7, metadata !7272, metadata !DIExpression()), !dbg !7274
  %8 = add i32 %5, 1, !dbg !7280
  call void @llvm.dbg.value(metadata i32 %8, metadata !7273, metadata !DIExpression()), !dbg !7274
  %9 = load i8, i8* %7, align 1, !dbg !7275
  %10 = icmp eq i8 %9, 0, !dbg !7276
  br i1 %10, label %11, label %4, !dbg !7277, !llvm.loop !7281

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7274
  ret i32 %12, !dbg !7283
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7284 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7288, metadata !DIExpression()), !dbg !7291
  call void @llvm.dbg.value(metadata i32 %1, metadata !7289, metadata !DIExpression()), !dbg !7291
  call void @llvm.dbg.value(metadata i32 0, metadata !7290, metadata !DIExpression()), !dbg !7291
  %3 = load i8, i8* %0, align 1, !dbg !7292
  %4 = icmp ne i8 %3, 0, !dbg !7293
  %5 = icmp ne i32 %1, 0, !dbg !7294
  %6 = and i1 %4, %5, !dbg !7294
  br i1 %6, label %7, label %16, !dbg !7295

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7290, metadata !DIExpression()), !dbg !7291
  call void @llvm.dbg.value(metadata i8* %9, metadata !7288, metadata !DIExpression()), !dbg !7291
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7296
  call void @llvm.dbg.value(metadata i8* %10, metadata !7288, metadata !DIExpression()), !dbg !7291
  %11 = add nuw i32 %8, 1, !dbg !7298
  call void @llvm.dbg.value(metadata i32 %11, metadata !7290, metadata !DIExpression()), !dbg !7291
  %12 = load i8, i8* %10, align 1, !dbg !7292
  %13 = icmp ne i8 %12, 0, !dbg !7293
  %14 = icmp ult i32 %11, %1, !dbg !7294
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7294
  br i1 %15, label %7, label %16, !dbg !7295, !llvm.loop !7299

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7291
  ret i32 %17, !dbg !7301
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !7302 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7306, metadata !DIExpression()), !dbg !7308
  call void @llvm.dbg.value(metadata i8* %1, metadata !7307, metadata !DIExpression()), !dbg !7308
  %3 = load i8, i8* %0, align 1, !dbg !7309
  %4 = load i8, i8* %1, align 1, !dbg !7310
  %5 = icmp ne i8 %3, %4, !dbg !7311
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7312
  br i1 %7, label %18, label %8, !dbg !7312

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7307, metadata !DIExpression()), !dbg !7308
  call void @llvm.dbg.value(metadata i8* %10, metadata !7306, metadata !DIExpression()), !dbg !7308
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7313
  call void @llvm.dbg.value(metadata i8* %11, metadata !7306, metadata !DIExpression()), !dbg !7308
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7315
  call void @llvm.dbg.value(metadata i8* %12, metadata !7307, metadata !DIExpression()), !dbg !7308
  %13 = load i8, i8* %11, align 1, !dbg !7309
  %14 = load i8, i8* %12, align 1, !dbg !7310
  %15 = icmp ne i8 %13, %14, !dbg !7311
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7312
  br i1 %17, label %18, label %8, !dbg !7312, !llvm.loop !7316

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7309
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7310
  %21 = zext i8 %19 to i32, !dbg !7319
  %22 = zext i8 %20 to i32, !dbg !7320
  %23 = sub nsw i32 %21, %22, !dbg !7321
  ret i32 %23, !dbg !7322
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7323 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7327, metadata !DIExpression()), !dbg !7330
  call void @llvm.dbg.value(metadata i8* %1, metadata !7328, metadata !DIExpression()), !dbg !7330
  call void @llvm.dbg.value(metadata i32 %2, metadata !7329, metadata !DIExpression()), !dbg !7330
  %4 = icmp eq i32 %2, 0, !dbg !7331
  br i1 %4, label %23, label %5, !dbg !7331

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7329, metadata !DIExpression()), !dbg !7330
  call void @llvm.dbg.value(metadata i8* %7, metadata !7328, metadata !DIExpression()), !dbg !7330
  call void @llvm.dbg.value(metadata i8* %8, metadata !7327, metadata !DIExpression()), !dbg !7330
  %9 = load i8, i8* %8, align 1, !dbg !7332
  %10 = load i8, i8* %7, align 1, !dbg !7333
  %11 = icmp ne i8 %9, %10, !dbg !7334
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7335
  br i1 %13, label %19, label %14, !dbg !7335

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7336
  call void @llvm.dbg.value(metadata i8* %15, metadata !7327, metadata !DIExpression()), !dbg !7330
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7338
  call void @llvm.dbg.value(metadata i8* %16, metadata !7328, metadata !DIExpression()), !dbg !7330
  %17 = add i32 %6, -1, !dbg !7339
  call void @llvm.dbg.value(metadata i32 %17, metadata !7329, metadata !DIExpression()), !dbg !7330
  %18 = icmp eq i32 %17, 0, !dbg !7331
  br i1 %18, label %23, label %5, !dbg !7331, !llvm.loop !7340

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7343
  %21 = zext i8 %10 to i32, !dbg !7344
  %22 = sub nsw i32 %20, %21, !dbg !7345
  br label %23, !dbg !7346

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7346
  ret i32 %24, !dbg !7347
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !7348 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7353, metadata !DIExpression()), !dbg !7358
  call void @llvm.dbg.value(metadata i8* %1, metadata !7354, metadata !DIExpression()), !dbg !7358
  call void @llvm.dbg.value(metadata i8** %2, metadata !7355, metadata !DIExpression()), !dbg !7358
  %4 = icmp eq i8* %0, null, !dbg !7359
  br i1 %4, label %5, label %7, !dbg !7359

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7360
  br label %7, !dbg !7359

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7359
  call void @llvm.dbg.value(metadata i8* %8, metadata !7356, metadata !DIExpression()), !dbg !7358
  %9 = load i8, i8* %8, align 1, !dbg !7361
  %10 = icmp eq i8 %9, 0, !dbg !7361
  br i1 %10, label %33, label %11, !dbg !7362

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7356, metadata !DIExpression()), !dbg !7358
  %14 = zext i8 %12 to i32, !dbg !7361
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !7363
  %16 = icmp eq i8* %15, null, !dbg !7362
  br i1 %16, label %21, label %17, !dbg !7364

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7365
  call void @llvm.dbg.value(metadata i8* %18, metadata !7356, metadata !DIExpression()), !dbg !7358
  %19 = load i8, i8* %18, align 1, !dbg !7361
  %20 = icmp eq i8 %19, 0, !dbg !7361
  br i1 %20, label %33, label %11, !dbg !7362, !llvm.loop !7367

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7357, metadata !DIExpression()), !dbg !7358
  %24 = zext i8 %22 to i32, !dbg !7369
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !7370
  %26 = icmp eq i8* %25, null, !dbg !7371
  br i1 %26, label %27, label %31, !dbg !7372

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7373
  call void @llvm.dbg.value(metadata i8* %28, metadata !7357, metadata !DIExpression()), !dbg !7358
  %29 = load i8, i8* %28, align 1, !dbg !7369
  %30 = icmp eq i8 %29, 0, !dbg !7369
  br i1 %30, label %33, label %21, !dbg !7375, !llvm.loop !7376

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7378
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7381
  br label %33, !dbg !7382

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7358
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7358
  store i8* %34, i8** %2, align 4, !dbg !7358
  ret i8* %35, !dbg !7383
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7384 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7386, metadata !DIExpression()), !dbg !7388
  call void @llvm.dbg.value(metadata i8* %1, metadata !7387, metadata !DIExpression()), !dbg !7388
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7389
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7390
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !7391
  ret i8* %0, !dbg !7392
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7393 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7395, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata i8* %1, metadata !7396, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata i32 %2, metadata !7397, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata i8* %0, metadata !7398, metadata !DIExpression()), !dbg !7400
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7401
  call void @llvm.dbg.value(metadata i32 %4, metadata !7399, metadata !DIExpression()), !dbg !7400
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7402
  call void @llvm.dbg.value(metadata i8* %5, metadata !7395, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata i8* %1, metadata !7396, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata i32 %2, metadata !7397, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata i32 %2, metadata !7397, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7400
  %6 = icmp eq i32 %2, 0, !dbg !7403
  br i1 %6, label %18, label %7, !dbg !7404

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7405
  call void @llvm.dbg.value(metadata i8* %9, metadata !7395, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata i8* %10, metadata !7396, metadata !DIExpression()), !dbg !7400
  %12 = load i8, i8* %10, align 1, !dbg !7406
  %13 = icmp eq i8 %12, 0, !dbg !7407
  br i1 %13, label %18, label %14, !dbg !7408

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7409
  call void @llvm.dbg.value(metadata i8* %15, metadata !7396, metadata !DIExpression()), !dbg !7400
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7411
  call void @llvm.dbg.value(metadata i8* %16, metadata !7395, metadata !DIExpression()), !dbg !7400
  store i8 %12, i8* %9, align 1, !dbg !7412
  call void @llvm.dbg.value(metadata i32 %11, metadata !7397, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata i32 %11, metadata !7397, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7400
  %17 = icmp eq i32 %11, 0, !dbg !7403
  br i1 %17, label %18, label %7, !dbg !7404, !llvm.loop !7413

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7400
  store i8 0, i8* %19, align 1, !dbg !7415
  ret i8* %0, !dbg !7416
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7417 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7421, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.value(metadata i8* %1, metadata !7422, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.value(metadata i32 %2, metadata !7423, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.value(metadata i8* %0, metadata !7424, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.value(metadata i8* %1, metadata !7425, metadata !DIExpression()), !dbg !7426
  %4 = icmp eq i32 %2, 0, !dbg !7427
  br i1 %4, label %31, label %5, !dbg !7429

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7425, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.value(metadata i8* %0, metadata !7424, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.value(metadata i32 %2, metadata !7423, metadata !DIExpression()), !dbg !7426
  %6 = add i32 %2, -1, !dbg !7430
  call void @llvm.dbg.value(metadata i32 %6, metadata !7423, metadata !DIExpression()), !dbg !7426
  %7 = icmp eq i32 %6, 0, !dbg !7431
  br i1 %7, label %23, label %8, !dbg !7432

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7433
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7433
  br label %11, !dbg !7433

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7425, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.value(metadata i8* %14, metadata !7424, metadata !DIExpression()), !dbg !7426
  %15 = load i8, i8* %14, align 1, !dbg !7434
  %16 = load i8, i8* %13, align 1, !dbg !7435
  %17 = icmp eq i8 %15, %16, !dbg !7436
  br i1 %17, label %18, label %23, !dbg !7433

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7437
  call void @llvm.dbg.value(metadata i8* %19, metadata !7424, metadata !DIExpression()), !dbg !7426
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7439
  call void @llvm.dbg.value(metadata i8* %20, metadata !7425, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.value(metadata i32 %12, metadata !7423, metadata !DIExpression()), !dbg !7426
  %21 = add i32 %12, -1, !dbg !7430
  call void @llvm.dbg.value(metadata i32 %21, metadata !7423, metadata !DIExpression()), !dbg !7426
  %22 = icmp eq i32 %21, 0, !dbg !7431
  br i1 %22, label %23, label %11, !dbg !7432, !llvm.loop !7440

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7426
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7426
  %26 = load i8, i8* %24, align 1, !dbg !7442
  %27 = zext i8 %26 to i32, !dbg !7442
  %28 = load i8, i8* %25, align 1, !dbg !7443
  %29 = zext i8 %28 to i32, !dbg !7443
  %30 = sub nsw i32 %27, %29, !dbg !7444
  br label %31, !dbg !7445

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7426
  ret i32 %32, !dbg !7446
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7447 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7451, metadata !DIExpression()), !dbg !7456
  call void @llvm.dbg.value(metadata i8* %1, metadata !7452, metadata !DIExpression()), !dbg !7456
  call void @llvm.dbg.value(metadata i32 %2, metadata !7453, metadata !DIExpression()), !dbg !7456
  call void @llvm.dbg.value(metadata i8* %0, metadata !7454, metadata !DIExpression()), !dbg !7456
  call void @llvm.dbg.value(metadata i8* %1, metadata !7455, metadata !DIExpression()), !dbg !7456
  %4 = ptrtoint i8* %0 to i32, !dbg !7457
  %5 = ptrtoint i8* %1 to i32, !dbg !7457
  %6 = sub i32 %4, %5, !dbg !7457
  %7 = icmp ult i32 %6, %2, !dbg !7459
  br i1 %7, label %10, label %8, !dbg !7460

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7455, metadata !DIExpression()), !dbg !7456
  call void @llvm.dbg.value(metadata i8* %0, metadata !7454, metadata !DIExpression()), !dbg !7456
  call void @llvm.dbg.value(metadata i32 %2, metadata !7453, metadata !DIExpression()), !dbg !7456
  %9 = icmp eq i32 %2, 0, !dbg !7461
  br i1 %9, label %26, label %17, !dbg !7463

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7453, metadata !DIExpression()), !dbg !7456
  %12 = add i32 %11, -1, !dbg !7464
  call void @llvm.dbg.value(metadata i32 %12, metadata !7453, metadata !DIExpression()), !dbg !7456
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7467
  %14 = load i8, i8* %13, align 1, !dbg !7467
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7468
  store i8 %14, i8* %15, align 1, !dbg !7469
  %16 = icmp eq i32 %12, 0, !dbg !7470
  br i1 %16, label %26, label %10, !dbg !7471, !llvm.loop !7472

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7455, metadata !DIExpression()), !dbg !7456
  call void @llvm.dbg.value(metadata i8* %19, metadata !7454, metadata !DIExpression()), !dbg !7456
  call void @llvm.dbg.value(metadata i32 %20, metadata !7453, metadata !DIExpression()), !dbg !7456
  %21 = load i8, i8* %18, align 1, !dbg !7474
  store i8 %21, i8* %19, align 1, !dbg !7476
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7477
  call void @llvm.dbg.value(metadata i8* %22, metadata !7454, metadata !DIExpression()), !dbg !7456
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7478
  call void @llvm.dbg.value(metadata i8* %23, metadata !7455, metadata !DIExpression()), !dbg !7456
  %24 = add i32 %20, -1, !dbg !7479
  call void @llvm.dbg.value(metadata i32 %24, metadata !7453, metadata !DIExpression()), !dbg !7456
  %25 = icmp eq i32 %24, 0, !dbg !7461
  br i1 %25, label %26, label %17, !dbg !7463, !llvm.loop !7480

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7482
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7483 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7489, metadata !DIExpression()), !dbg !7494
  call void @llvm.dbg.value(metadata i8* %1, metadata !7490, metadata !DIExpression()), !dbg !7494
  call void @llvm.dbg.value(metadata i32 %2, metadata !7491, metadata !DIExpression()), !dbg !7494
  call void @llvm.dbg.value(metadata i8* %0, metadata !7492, metadata !DIExpression()), !dbg !7494
  call void @llvm.dbg.value(metadata i8* %1, metadata !7493, metadata !DIExpression()), !dbg !7494
  %4 = icmp eq i32 %2, 0, !dbg !7495
  br i1 %4, label %14, label %5, !dbg !7496

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7493, metadata !DIExpression()), !dbg !7494
  call void @llvm.dbg.value(metadata i8* %7, metadata !7492, metadata !DIExpression()), !dbg !7494
  call void @llvm.dbg.value(metadata i32 %8, metadata !7491, metadata !DIExpression()), !dbg !7494
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7497
  call void @llvm.dbg.value(metadata i8* %9, metadata !7493, metadata !DIExpression()), !dbg !7494
  %10 = load i8, i8* %6, align 1, !dbg !7499
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7500
  call void @llvm.dbg.value(metadata i8* %11, metadata !7492, metadata !DIExpression()), !dbg !7494
  store i8 %10, i8* %7, align 1, !dbg !7501
  %12 = add i32 %8, -1, !dbg !7502
  call void @llvm.dbg.value(metadata i32 %12, metadata !7491, metadata !DIExpression()), !dbg !7494
  %13 = icmp eq i32 %12, 0, !dbg !7495
  br i1 %13, label %14, label %5, !dbg !7496, !llvm.loop !7503

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7505
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !7506 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7510, metadata !DIExpression()), !dbg !7515
  call void @llvm.dbg.value(metadata i32 %1, metadata !7511, metadata !DIExpression()), !dbg !7515
  call void @llvm.dbg.value(metadata i32 %2, metadata !7512, metadata !DIExpression()), !dbg !7515
  call void @llvm.dbg.value(metadata i8* %0, metadata !7513, metadata !DIExpression()), !dbg !7515
  %4 = trunc i32 %1 to i8, !dbg !7516
  call void @llvm.dbg.value(metadata i8 %4, metadata !7514, metadata !DIExpression()), !dbg !7515
  call void @llvm.dbg.value(metadata i32 %2, metadata !7512, metadata !DIExpression()), !dbg !7515
  call void @llvm.dbg.value(metadata i8* %0, metadata !7513, metadata !DIExpression()), !dbg !7515
  %5 = icmp eq i32 %2, 0, !dbg !7517
  br i1 %5, label %12, label %6, !dbg !7518

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7512, metadata !DIExpression()), !dbg !7515
  call void @llvm.dbg.value(metadata i8* %8, metadata !7513, metadata !DIExpression()), !dbg !7515
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7519
  call void @llvm.dbg.value(metadata i8* %9, metadata !7513, metadata !DIExpression()), !dbg !7515
  store i8 %4, i8* %8, align 1, !dbg !7521
  %10 = add i32 %7, -1, !dbg !7522
  call void @llvm.dbg.value(metadata i32 %10, metadata !7512, metadata !DIExpression()), !dbg !7515
  %11 = icmp eq i32 %10, 0, !dbg !7517
  br i1 %11, label %12, label %6, !dbg !7518, !llvm.loop !7523

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7525
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7526 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7530, metadata !DIExpression()), !dbg !7536
  call void @llvm.dbg.value(metadata i32 %1, metadata !7531, metadata !DIExpression()), !dbg !7536
  call void @llvm.dbg.value(metadata i32 %2, metadata !7532, metadata !DIExpression()), !dbg !7536
  %4 = icmp eq i32 %2, 0, !dbg !7537
  br i1 %4, label %17, label %5, !dbg !7538

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7539

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7540
  call void @llvm.dbg.value(metadata i8* %9, metadata !7533, metadata !DIExpression()), !dbg !7540
  call void @llvm.dbg.value(metadata i32 %8, metadata !7532, metadata !DIExpression()), !dbg !7536
  call void @llvm.dbg.value(metadata i8* %9, metadata !7533, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7540
  %10 = load i8, i8* %9, align 1, !dbg !7541
  %11 = icmp eq i8 %10, %6, !dbg !7544
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7545
  call void @llvm.dbg.value(metadata i8* %12, metadata !7533, metadata !DIExpression()), !dbg !7540
  call void @llvm.dbg.value(metadata i32 %13, metadata !7532, metadata !DIExpression()), !dbg !7536
  br i1 %15, label %16, label %7, !dbg !7545, !llvm.loop !7546

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7548

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7536
  ret i8* %19, !dbg !7549
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !7550 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7552, metadata !DIExpression()), !dbg !7553
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7554
  ret void, !dbg !7555
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !7556 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7558, metadata !DIExpression()), !dbg !7559
  ret i32 -1, !dbg !7560
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7561 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7565, metadata !DIExpression()), !dbg !7567
  call void @llvm.dbg.value(metadata i32* %1, metadata !7566, metadata !DIExpression()), !dbg !7567
  %3 = ptrtoint i32* %1 to i32, !dbg !7568
  %4 = and i32 %3, -2, !dbg !7568
  %5 = icmp eq i32 %4, 2, !dbg !7568
  br i1 %5, label %6, label %9, !dbg !7568

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7569
  %8 = tail call i32 %7(i32 noundef %0) #27, !dbg !7569
  br label %9, !dbg !7570

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !7570
  ret i32 %10, !dbg !7571
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7572 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7574, metadata !DIExpression()), !dbg !7576
  call void @llvm.dbg.value(metadata i32* %1, metadata !7575, metadata !DIExpression()), !dbg !7576
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7577
  ret i32 %3, !dbg !7578
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !7579 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7582, metadata !DIExpression()), !dbg !7584
  call void @llvm.dbg.value(metadata i32* %1, metadata !7583, metadata !DIExpression()), !dbg !7584
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7585, !srcloc !7587
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7588
  ret i32 %3, !dbg !7589
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !7590 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7595, metadata !DIExpression()), !dbg !7599
  call void @llvm.dbg.value(metadata i32* %1, metadata !7596, metadata !DIExpression()), !dbg !7599
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !7600
  call void @llvm.dbg.value(metadata i32 %3, metadata !7597, metadata !DIExpression()), !dbg !7599
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !7601
  call void @llvm.dbg.value(metadata i32 %4, metadata !7598, metadata !DIExpression()), !dbg !7599
  %5 = icmp ne i32 %3, %4, !dbg !7602
  %6 = sext i1 %5 to i32, !dbg !7603
  ret i32 %6, !dbg !7604
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !7605 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7609, metadata !DIExpression()), !dbg !7613
  call void @llvm.dbg.value(metadata i32 %1, metadata !7610, metadata !DIExpression()), !dbg !7613
  call void @llvm.dbg.value(metadata i32 %2, metadata !7611, metadata !DIExpression()), !dbg !7613
  call void @llvm.dbg.value(metadata i32* %3, metadata !7612, metadata !DIExpression()), !dbg !7613
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !7614
  ret i32 %5, !dbg !7615
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !7616 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7618, metadata !DIExpression()), !dbg !7622
  call void @llvm.dbg.value(metadata i32 %1, metadata !7619, metadata !DIExpression()), !dbg !7622
  call void @llvm.dbg.value(metadata i32 %2, metadata !7620, metadata !DIExpression()), !dbg !7622
  call void @llvm.dbg.value(metadata i32* %3, metadata !7621, metadata !DIExpression()), !dbg !7622
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7623, !srcloc !7625
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !7626
  ret i32 %5, !dbg !7627
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !7628 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7630, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.value(metadata i32 %1, metadata !7631, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.value(metadata i32 %2, metadata !7632, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.value(metadata i32* %3, metadata !7633, metadata !DIExpression()), !dbg !7638
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !7639
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !7641
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !7641
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !7641
  br i1 %11, label %33, label %12, !dbg !7641

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !7638
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !7638
  call void @llvm.dbg.value(metadata i8* %14, metadata !7636, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.value(metadata i32 %13, metadata !7634, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.value(metadata i32 %1, metadata !7635, metadata !DIExpression()), !dbg !7638
  br label %15, !dbg !7642

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !7644
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !7638
  call void @llvm.dbg.value(metadata i8* %17, metadata !7636, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.value(metadata i32 %16, metadata !7635, metadata !DIExpression()), !dbg !7638
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7645
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7648
  call void @llvm.dbg.value(metadata i8* %19, metadata !7636, metadata !DIExpression()), !dbg !7638
  %20 = load i8, i8* %17, align 1, !dbg !7649
  %21 = zext i8 %20 to i32, !dbg !7650
  %22 = tail call i32 %18(i32 noundef %21) #27, !dbg !7645
  %23 = icmp eq i32 %22, -1, !dbg !7651
  br i1 %23, label %30, label %24, !dbg !7652

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !7653
  call void @llvm.dbg.value(metadata i32 %25, metadata !7635, metadata !DIExpression()), !dbg !7638
  %26 = icmp eq i32 %25, 0, !dbg !7654
  br i1 %26, label %27, label %15, !dbg !7655, !llvm.loop !7656

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !7658
  call void @llvm.dbg.value(metadata i32 %28, metadata !7634, metadata !DIExpression()), !dbg !7638
  %29 = icmp eq i32 %28, 0, !dbg !7659
  br i1 %29, label %30, label %12, !dbg !7660, !llvm.loop !7661

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !7638
  call void @llvm.dbg.value(metadata i32 %31, metadata !7634, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.label(metadata !7637), !dbg !7664
  %32 = sub i32 %2, %31, !dbg !7665
  br label %33, !dbg !7666

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !7638
  ret i32 %34, !dbg !7667
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !7668 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7672, metadata !DIExpression()), !dbg !7673
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !7674
  %3 = icmp eq i32 %2, -1, !dbg !7676
  br i1 %3, label %8, label %4, !dbg !7677

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !7678
  %6 = icmp eq i32 %5, -1, !dbg !7679
  %7 = sext i1 %6 to i32, !dbg !7678
  br label %8, !dbg !7680

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !7673
  ret i32 %9, !dbg !7681
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !7682 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7684, metadata !DIExpression()), !dbg !7685
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !7686
  ret void, !dbg !7687
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !7688 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7692, metadata !DIExpression()), !dbg !7698
  call void @llvm.dbg.value(metadata i32 %1, metadata !7693, metadata !DIExpression()), !dbg !7698
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !7694, metadata !DIExpression()), !dbg !7698
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !7699
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !7699
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !7699
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !7695, metadata !DIExpression()), !dbg !7698
  call void @llvm.dbg.value(metadata i32 %0, metadata !7697, metadata !DIExpression()), !dbg !7698
  %7 = icmp slt i32 %0, %1, !dbg !7700
  br i1 %7, label %8, label %22, !dbg !7703

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7697, metadata !DIExpression()), !dbg !7698
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !7704
  %11 = icmp eq i32 %10, 0, !dbg !7704
  br i1 %11, label %19, label %12, !dbg !7707

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !7708
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !7710
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !7710
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !7712
  br i1 %15, label %19, label %16, !dbg !7713

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !7714
  %18 = load i8*, i8** %17, align 4, !dbg !7714
  tail call void %14(i32 noundef %9, i8* noundef %18) #27, !dbg !7715
  br label %19, !dbg !7716

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !7717
  call void @llvm.dbg.value(metadata i32 %20, metadata !7697, metadata !DIExpression()), !dbg !7698
  %21 = icmp eq i32 %20, %1, !dbg !7700
  br i1 %21, label %22, label %8, !dbg !7703, !llvm.loop !7718

22:                                               ; preds = %19, %3
  ret void, !dbg !7720
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !7721 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7723, metadata !DIExpression()), !dbg !7724
  %2 = shl nuw i32 1, %0, !dbg !7725
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !7728
  ret i32 %3, !dbg !7729
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !7730 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7734, metadata !DIExpression()), !dbg !7735
  %2 = shl nuw i32 1, %0, !dbg !7736
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !7739
  ret void, !dbg !7740
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7741 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7744, metadata !DIExpression()), !dbg !7745
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7746
  ret void, !dbg !7747
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !7748 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7750, metadata !DIExpression()), !dbg !7751
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7752
  %3 = and i32 %2, %0, !dbg !7752
  %4 = icmp eq i32 %3, %0, !dbg !7753
  %5 = zext i1 %4 to i32, !dbg !7753
  ret i32 %5, !dbg !7754
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !7755 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7757, metadata !DIExpression()), !dbg !7758
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !7759
  ret void, !dbg !7760
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !7761 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7763, metadata !DIExpression()), !dbg !7764
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !7765
  ret void, !dbg !7766
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !7767 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7769, metadata !DIExpression()), !dbg !7770
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !7771
  ret void, !dbg !7772
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !7773 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7775, metadata !DIExpression()), !dbg !7776
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !7777
  ret void, !dbg !7778
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !7779 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7781, metadata !DIExpression()), !dbg !7782
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !7783
  ret void, !dbg !7784
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !7785 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7787, metadata !DIExpression()), !dbg !7788
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !7789
  ret void, !dbg !7790
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !7791 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7793, metadata !DIExpression()), !dbg !7794
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !7795
  ret void, !dbg !7796
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !7797 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7799, metadata !DIExpression()), !dbg !7800
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !7801
  ret void, !dbg !7802
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !7803 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7805, metadata !DIExpression()), !dbg !7806
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !7807
  ret void, !dbg !7808
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !7809 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7811, metadata !DIExpression()), !dbg !7812
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !7813
  ret void, !dbg !7814
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7815 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7817, metadata !DIExpression()), !dbg !7818
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !7819
  ret i32 0, !dbg !7820
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !720 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !724, metadata !DIExpression()), !dbg !7821
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #27, !dbg !7822
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #27, !dbg !7824
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #27, !dbg !7826
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #27, !dbg !7828
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #27, !dbg !7830
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #27, !dbg !7832
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #27, !dbg !7834
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #27, !dbg !7836
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #27, !dbg !7838
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #27, !dbg !7840
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #27, !dbg !7842
  ret void, !dbg !7844
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7845 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7847, metadata !DIExpression()), !dbg !7849
  call void @llvm.dbg.value(metadata i32 0, metadata !7848, metadata !DIExpression()), !dbg !7849
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !7850
  %3 = load i32, i32* %2, align 4, !dbg !7850
  call void @llvm.dbg.value(metadata i32 %3, metadata !7848, metadata !DIExpression()), !dbg !7849
  %4 = shl nuw i32 1, %0, !dbg !7851
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !7852
  tail call void @arch_irq_enable(i32 noundef %3) #27, !dbg !7853
  ret void, !dbg !7854
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7855 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7857, metadata !DIExpression()), !dbg !7858
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7859
  %3 = or i32 %2, %0, !dbg !7859
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7859
  ret void, !dbg !7860
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !7861 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7863, metadata !DIExpression()), !dbg !7864
  %2 = icmp slt i32 %0, 32, !dbg !7865
  br i1 %2, label %3, label %5, !dbg !7867

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !7868
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !7870
  br label %5, !dbg !7871

5:                                                ; preds = %1, %3
  ret void, !dbg !7872
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7873 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7875, metadata !DIExpression()), !dbg !7876
  %2 = xor i32 %0, -1, !dbg !7877
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7877
  %4 = and i32 %3, %2, !dbg !7877
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7877
  ret void, !dbg !7878
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !7879 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7883, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata i32 %1, metadata !7884, metadata !DIExpression()), !dbg !7885
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !7886

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !7887
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !7889
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !7890
  br label %11, !dbg !7891

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !7892
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !7893
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !7894
  br label %11, !dbg !7895

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !7896
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !7897
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !7898
  br label %11, !dbg !7899

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !7900
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !7901
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !7902
  br label %11, !dbg !7903

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !7904
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7905 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7907, metadata !DIExpression()), !dbg !7908
  %2 = xor i32 %0, -1, !dbg !7909
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7909
  %4 = and i32 %3, %2, !dbg !7909
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7909
  ret void, !dbg !7910
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7911 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7913, metadata !DIExpression()), !dbg !7914
  %2 = xor i32 %0, -1, !dbg !7915
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7915
  %4 = and i32 %3, %2, !dbg !7915
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7915
  ret void, !dbg !7916
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7917 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7919, metadata !DIExpression()), !dbg !7920
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7921
  %3 = or i32 %2, %0, !dbg !7921
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7921
  ret void, !dbg !7922
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7923 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7925, metadata !DIExpression()), !dbg !7926
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7927
  %3 = or i32 %2, %0, !dbg !7927
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7927
  ret void, !dbg !7928
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !7929 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7933, metadata !DIExpression()), !dbg !7939
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !7934, metadata !DIExpression()), !dbg !7939
  call void @llvm.dbg.value(metadata i8* %2, metadata !7935, metadata !DIExpression()), !dbg !7939
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !7936, metadata !DIExpression()), !dbg !7939
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7938, metadata !DIExpression()), !dbg !7939
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7940
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !7940
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !7942
  br i1 %6, label %7, label %9, !dbg !7943

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !7944
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7945
  store i8* %2, i8** %8, align 4, !dbg !7946
  br label %9, !dbg !7947

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !7939
  ret i32 %10, !dbg !7948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !7949 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7951, metadata !DIExpression()), !dbg !7954
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !7952, metadata !DIExpression()), !dbg !7954
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7953, metadata !DIExpression()), !dbg !7954
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7955
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !7956
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7957
  store i8* null, i8** %3, align 4, !dbg !7958
  ret void, !dbg !7959
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !7960 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7962, metadata !DIExpression()), !dbg !7967
  call void @llvm.dbg.value(metadata i8* %1, metadata !7963, metadata !DIExpression()), !dbg !7967
  call void @llvm.dbg.value(metadata i8* %1, metadata !7964, metadata !DIExpression()), !dbg !7967
  %3 = bitcast i8* %1 to i32*, !dbg !7968
  %4 = load i32, i32* %3, align 4, !dbg !7968
  %5 = add i32 %4, -169, !dbg !7968
  %6 = icmp ult i32 %5, -121, !dbg !7968
  br i1 %6, label %15, label %7, !dbg !7970

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !7971
  %9 = inttoptr i32 %8 to i32*, !dbg !7972
  call void @llvm.dbg.value(metadata i32* %9, metadata !7965, metadata !DIExpression()), !dbg !7967
  %10 = load volatile i32, i32* %9, align 4, !dbg !7973
  call void @llvm.dbg.value(metadata i32 %10, metadata !7966, metadata !DIExpression()), !dbg !7967
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7974
  %12 = bitcast i8* %11 to i32*, !dbg !7974
  %13 = load i32, i32* %12, align 4, !dbg !7974
  %14 = or i32 %13, %10, !dbg !7975
  call void @llvm.dbg.value(metadata i32 %14, metadata !7966, metadata !DIExpression()), !dbg !7967
  store volatile i32 %14, i32* %9, align 4, !dbg !7976
  br label %15, !dbg !7977

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7967
  ret i32 %16, !dbg !7978
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !7979 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7981, metadata !DIExpression()), !dbg !7986
  call void @llvm.dbg.value(metadata i8* %1, metadata !7982, metadata !DIExpression()), !dbg !7986
  call void @llvm.dbg.value(metadata i8* %1, metadata !7983, metadata !DIExpression()), !dbg !7986
  %3 = bitcast i8* %1 to i32*, !dbg !7987
  %4 = load i32, i32* %3, align 4, !dbg !7987
  %5 = add i32 %4, -169, !dbg !7987
  %6 = icmp ult i32 %5, -121, !dbg !7987
  br i1 %6, label %16, label %7, !dbg !7989

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !7990
  %9 = inttoptr i32 %8 to i32*, !dbg !7991
  call void @llvm.dbg.value(metadata i32* %9, metadata !7984, metadata !DIExpression()), !dbg !7986
  %10 = load volatile i32, i32* %9, align 4, !dbg !7992
  call void @llvm.dbg.value(metadata i32 %10, metadata !7985, metadata !DIExpression()), !dbg !7986
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7993
  %12 = bitcast i8* %11 to i32*, !dbg !7993
  %13 = load i32, i32* %12, align 4, !dbg !7993
  %14 = xor i32 %13, -1, !dbg !7994
  %15 = and i32 %10, %14, !dbg !7995
  call void @llvm.dbg.value(metadata i32 %15, metadata !7985, metadata !DIExpression()), !dbg !7986
  store volatile i32 %15, i32* %9, align 4, !dbg !7996
  br label %16, !dbg !7997

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7986
  ret i32 %17, !dbg !7998
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !7999 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8001, metadata !DIExpression()), !dbg !8009
  call void @llvm.dbg.value(metadata i8* %1, metadata !8002, metadata !DIExpression()), !dbg !8009
  call void @llvm.dbg.value(metadata i32* %2, metadata !8003, metadata !DIExpression()), !dbg !8009
  call void @llvm.dbg.value(metadata i8* %1, metadata !8004, metadata !DIExpression()), !dbg !8009
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8010
  call void @llvm.dbg.value(metadata i32 %4, metadata !8005, metadata !DIExpression()), !dbg !8009
  call void @llvm.dbg.value(metadata i32 undef, metadata !8006, metadata !DIExpression()), !dbg !8009
  call void @llvm.dbg.value(metadata i32 undef, metadata !8007, metadata !DIExpression()), !dbg !8009
  call void @llvm.dbg.value(metadata i32 %4, metadata !8008, metadata !DIExpression()), !dbg !8009
  %5 = bitcast i8* %1 to i32*, !dbg !8011
  %6 = load i32, i32* %5, align 4, !dbg !8011
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !8012

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 4) #26, !dbg !8013
  call void @llvm.dbg.value(metadata i32 %8, metadata !8006, metadata !DIExpression()), !dbg !8009
  br label %19, !dbg !8014

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #26, !dbg !8016
  call void @llvm.dbg.value(metadata i32 %10, metadata !8007, metadata !DIExpression()), !dbg !8009
  br label %19, !dbg !8017

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #27, !dbg !8018
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #26, !dbg !8019
  br label %19, !dbg !8020

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #27, !dbg !8021
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #26, !dbg !8022
  br label %19, !dbg !8023

17:                                               ; preds = %3
  br label %19, !dbg !8024

18:                                               ; preds = %3
  br label %19, !dbg !8025

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !8026
  br label %21, !dbg !8027

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !8009
  ret i32 %22, !dbg !8027
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !8028 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8030, metadata !DIExpression()), !dbg !8038
  call void @llvm.dbg.value(metadata i8* %1, metadata !8031, metadata !DIExpression()), !dbg !8038
  call void @llvm.dbg.value(metadata i8* %2, metadata !8032, metadata !DIExpression()), !dbg !8038
  call void @llvm.dbg.value(metadata i8* %1, metadata !8033, metadata !DIExpression()), !dbg !8038
  %4 = bitcast i8* %1 to i32*, !dbg !8039
  %5 = load i32, i32* %4, align 4, !dbg !8039
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !8040
  call void @llvm.dbg.value(metadata i32 %6, metadata !8037, metadata !DIExpression()), !dbg !8038
  %7 = icmp slt i32 %6, 0, !dbg !8041
  br i1 %7, label %22, label %8, !dbg !8043

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8033, metadata !DIExpression()), !dbg !8038
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8044
  %10 = bitcast i8* %9 to i32*, !dbg !8044
  %11 = load i32, i32* %10, align 4, !dbg !8044
  %12 = lshr i32 %11, 16, !dbg !8044
  %13 = and i32 %12, 7, !dbg !8044
  %14 = lshr i32 %11, 8, !dbg !8045
  %15 = and i32 %14, 31, !dbg !8045
  %16 = shl i32 %13, %15, !dbg !8046
  call void @llvm.dbg.value(metadata i32 %16, metadata !8036, metadata !DIExpression()), !dbg !8038
  %17 = and i32 %11, 255, !dbg !8047
  %18 = or i32 %17, 1073887232, !dbg !8048
  %19 = inttoptr i32 %18 to i32*, !dbg !8049
  call void @llvm.dbg.value(metadata i32* %19, metadata !8034, metadata !DIExpression()), !dbg !8038
  %20 = load volatile i32, i32* %19, align 4, !dbg !8050
  call void @llvm.dbg.value(metadata i32 %20, metadata !8035, metadata !DIExpression()), !dbg !8038
  %21 = or i32 %16, %20, !dbg !8051
  call void @llvm.dbg.value(metadata i32 %21, metadata !8035, metadata !DIExpression()), !dbg !8038
  store volatile i32 %21, i32* %19, align 4, !dbg !8052
  br label %22, !dbg !8053

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8038
  ret i32 %23, !dbg !8054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #11 !dbg !8055 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8059, metadata !DIExpression()), !dbg !8061
  call void @llvm.dbg.value(metadata i32 0, metadata !8060, metadata !DIExpression()), !dbg !8061
  %2 = add i32 %0, -1, !dbg !8062
  %3 = icmp ult i32 %2, 6, !dbg !8062
  br i1 %3, label %4, label %7, !dbg !8062

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8062
  %6 = load i32, i32* %5, align 4, !dbg !8062
  call void @llvm.dbg.value(metadata i32 %6, metadata !8060, metadata !DIExpression()), !dbg !8061
  br label %7, !dbg !8063

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8061
  ret i32 %8, !dbg !8064
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8065 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8069, metadata !DIExpression()), !dbg !8071
  call void @llvm.dbg.value(metadata i32 %1, metadata !8070, metadata !DIExpression()), !dbg !8071
  %3 = udiv i32 %0, %1, !dbg !8072
  ret i32 %3, !dbg !8073
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8074 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8078, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i32 12, metadata !8079, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i32 336, metadata !8080, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i32 %1, metadata !8081, metadata !DIExpression()), !dbg !8082
  %3 = mul i32 %0, 336, !dbg !8083
  %4 = mul nsw i32 %1, 12, !dbg !8084
  %5 = udiv i32 %3, %4, !dbg !8085
  ret i32 %5, !dbg !8086
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8087 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8089, metadata !DIExpression()), !dbg !8092
  tail call void @config_enable_default_clocks() #27, !dbg !8093
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !8094
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !8094
  %4 = lshr i32 %3, 4, !dbg !8094
  %5 = and i32 %4, 15, !dbg !8094
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8094
  %7 = load i8, i8* %6, align 1, !dbg !8094
  %8 = zext i8 %7 to i32, !dbg !8094
  %9 = lshr i32 %2, %8, !dbg !8094
  call void @llvm.dbg.value(metadata i32 %9, metadata !8090, metadata !DIExpression()), !dbg !8092
  call void @llvm.dbg.value(metadata !DIArgList(i32 168000000, i8 undef), metadata !8091, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8092
  %10 = icmp ult i32 %9, 168000000, !dbg !8095
  br i1 %10, label %11, label %13, !dbg !8097

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #27, !dbg !8098
  br label %13, !dbg !8100

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !8101
  tail call fastcc void @set_up_plls() #26, !dbg !8102
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8103
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !8106
  br label %14, !dbg !8107

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8108
  %16 = icmp eq i32 %15, 8, !dbg !8109
  br i1 %16, label %17, label %14, !dbg !8107, !llvm.loop !8110

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 167999999, !dbg !8112
  br i1 %18, label %19, label %21, !dbg !8114

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #27, !dbg !8115
  br label %21, !dbg !8117

21:                                               ; preds = %19, %17
  store i32 168000000, i32* @SystemCoreClock, align 4, !dbg !8118
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !8119
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !8120
  ret i32 0, !dbg !8121
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !8122 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8124
  %2 = and i32 %1, 240, !dbg !8124
  ret i32 %2, !dbg !8125
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8126 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !8127
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !8132
  br label %1, !dbg !8133

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !8134
  %3 = icmp eq i32 %2, 1, !dbg !8135
  br i1 %3, label %4, label %1, !dbg !8133, !llvm.loop !8136

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !8138
  br label %5, !dbg !8141

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !8142
  %7 = icmp eq i32 %6, 1, !dbg !8143
  br i1 %7, label %8, label %5, !dbg !8141, !llvm.loop !8144

8:                                                ; preds = %5
  ret void, !dbg !8146
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8147 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8148
  %2 = icmp eq i32 %1, 8, !dbg !8150
  br i1 %2, label %3, label %4, !dbg !8151

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8152
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !8154
  br label %4, !dbg !8155

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !8156
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8157
  %6 = and i32 %5, -196609, !dbg !8157
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8157
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8158
  %8 = and i32 %7, -251658241, !dbg !8158
  %9 = or i32 %8, 117440512, !dbg !8158
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8158
  tail call void @config_pll_sysclock() #27, !dbg !8159
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !8160
  br label %10, !dbg !8161

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !8162
  %12 = icmp eq i32 %11, 1, !dbg !8163
  br i1 %12, label %13, label %10, !dbg !8161, !llvm.loop !8164

13:                                               ; preds = %10
  ret void, !dbg !8166
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8167 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8169, metadata !DIExpression()), !dbg !8170
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8171
  %2 = and i32 %1, -241, !dbg !8171
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8171
  ret void, !dbg !8172
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8173 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8175, metadata !DIExpression()), !dbg !8176
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8177
  %3 = and i32 %2, -4, !dbg !8177
  %4 = or i32 %3, %0, !dbg !8177
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8177
  ret void, !dbg !8178
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !8179 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8180
  %2 = and i32 %1, 12, !dbg !8180
  ret i32 %2, !dbg !8181
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8182 {
  call void @llvm.dbg.value(metadata i32 5120, metadata !8184, metadata !DIExpression()), !dbg !8185
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8186
  %2 = and i32 %1, -7169, !dbg !8186
  %3 = or i32 %2, 5120, !dbg !8186
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8186
  ret void, !dbg !8187
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8188 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !8190, metadata !DIExpression()), !dbg !8191
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8192
  %2 = and i32 %1, -57345, !dbg !8192
  %3 = or i32 %2, 32768, !dbg !8192
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8192
  ret void, !dbg !8193
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8194 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8195
  %2 = icmp eq i32 %1, 1, !dbg !8197
  br i1 %2, label %7, label %3, !dbg !8198

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8199
  br label %4, !dbg !8201

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8202
  %6 = icmp eq i32 %5, 1, !dbg !8203
  br i1 %6, label %7, label %4, !dbg !8201, !llvm.loop !8204

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !8206
  br label %8, !dbg !8207

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8208
  %10 = icmp eq i32 %9, 0, !dbg !8209
  br i1 %10, label %11, label %8, !dbg !8207, !llvm.loop !8210

11:                                               ; preds = %8
  ret void, !dbg !8212
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8213 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8214
  %2 = and i32 %1, -16777217, !dbg !8214
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8214
  ret void, !dbg !8215
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8216 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8217
  %2 = or i32 %1, 16777216, !dbg !8217
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8217
  ret void, !dbg !8218
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !8219 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8220
  %2 = lshr i32 %1, 25, !dbg !8221
  %3 = and i32 %2, 1, !dbg !8221
  ret i32 %3, !dbg !8222
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !8223 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8224
  %2 = lshr i32 %1, 1, !dbg !8225
  %3 = and i32 %2, 1, !dbg !8225
  ret i32 %3, !dbg !8226
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8227 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8228
  %2 = or i32 %1, 1, !dbg !8228
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8228
  ret void, !dbg !8229
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !8230 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8231
  %2 = and i32 %1, -262145, !dbg !8231
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8231
  ret void, !dbg !8232
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !8233 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8234
  %2 = or i32 %1, 65536, !dbg !8234
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8234
  ret void, !dbg !8235
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !8236 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8237
  %2 = lshr i32 %1, 17, !dbg !8238
  %3 = and i32 %2, 1, !dbg !8238
  ret i32 %3, !dbg !8239
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !8240 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8241
  %2 = or i32 %1, 1, !dbg !8241
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8241
  ret void, !dbg !8242
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #16 !dbg !8243 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8244
  %2 = lshr i32 %1, 1, !dbg !8245
  %3 = and i32 %2, 1, !dbg !8245
  ret i32 %3, !dbg !8246
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #11 !dbg !8247 {
  ret i32 12000000, !dbg !8249
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !8253 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !8254
  ret void, !dbg !8255
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !8256 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8260, metadata !DIExpression()), !dbg !8264
  call void @llvm.dbg.value(metadata i32 12, metadata !8261, metadata !DIExpression()), !dbg !8264
  call void @llvm.dbg.value(metadata i32 336, metadata !8262, metadata !DIExpression()), !dbg !8264
  call void @llvm.dbg.value(metadata i32 0, metadata !8263, metadata !DIExpression()), !dbg !8264
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8265
  %2 = and i32 %1, -4227072, !dbg !8265
  %3 = or i32 %2, 4215820, !dbg !8265
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8265
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8266
  %5 = and i32 %4, -196609, !dbg !8266
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8266
  ret void, !dbg !8267
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #17 !dbg !8268 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !8269
  ret void, !dbg !8270
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #17 !dbg !8271 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8274, metadata !DIExpression()), !dbg !8276
  %2 = bitcast i32* %1 to i8*, !dbg !8277
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8277
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8275, metadata !DIExpression()), !dbg !8278
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8279
  %4 = or i32 %3, 268435456, !dbg !8279
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8279
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8280
  %6 = and i32 %5, 268435456, !dbg !8280
  store volatile i32 %6, i32* %1, align 4, !dbg !8281
  %7 = load volatile i32, i32* %1, align 4, !dbg !8282
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8283
  ret void, !dbg !8283
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8284 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8286, metadata !DIExpression()), !dbg !8287
  %2 = tail call fastcc zeroext i1 @device_is_ready.42() #26, !dbg !8288
  br i1 %2, label %3, label %4, !dbg !8290

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !8291
  br label %4, !dbg !8292

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8287
  ret i32 %5, !dbg !8293
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.42() unnamed_addr #1 !dbg !8294 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8298, metadata !DIExpression()), !dbg !8299
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8300, !srcloc !8302
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.45() #26, !dbg !8303
  ret i1 %1, !dbg !8304
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8305 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !8306
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !8307
  ret void, !dbg !8308
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8309 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8311, metadata !DIExpression()), !dbg !8312
  %2 = icmp eq i32 %0, 10, !dbg !8313
  br i1 %2, label %3, label %4, !dbg !8315

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out.43(i8 noundef zeroext 13) #26, !dbg !8316
  br label %4, !dbg !8318

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8319
  tail call fastcc void @uart_poll_out.43(i8 noundef zeroext %5) #26, !dbg !8320
  ret i32 %0, !dbg !8321
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out.43(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8322 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8324, metadata !DIExpression()), !dbg !8326
  call void @llvm.dbg.value(metadata i8 %0, metadata !8325, metadata !DIExpression()), !dbg !8326
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8327, !srcloc !8329
  tail call fastcc void @z_impl_uart_poll_out.44(i8 noundef zeroext %0) #26, !dbg !8330
  ret void, !dbg !8331
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out.44(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8332 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8334, metadata !DIExpression()), !dbg !8337
  call void @llvm.dbg.value(metadata i8 %0, metadata !8335, metadata !DIExpression()), !dbg !8337
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8338
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8336, metadata !DIExpression()), !dbg !8337
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8339
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8339
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #27, !dbg !8340
  ret void, !dbg !8341
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.45() unnamed_addr #1 !dbg !8342 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8344, metadata !DIExpression()), !dbg !8345
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #27, !dbg !8346
  ret i1 %1, !dbg !8347
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #11 !dbg !8348 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !8395, metadata !DIExpression()), !dbg !8398
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !8396, metadata !DIExpression()), !dbg !8398
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !8397, metadata !DIExpression()), !dbg !8398
  ret void, !dbg !8399
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8400 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8402, metadata !DIExpression()), !dbg !8407
  call void @llvm.dbg.value(metadata i8 %1, metadata !8403, metadata !DIExpression()), !dbg !8407
  call void @llvm.dbg.value(metadata i32 %2, metadata !8404, metadata !DIExpression()), !dbg !8407
  %5 = bitcast i32* %4 to i8*, !dbg !8408
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !8408
  call void @llvm.dbg.value(metadata i32* %4, metadata !8406, metadata !DIExpression(DW_OP_deref)), !dbg !8407
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !8409
  call void @llvm.dbg.value(metadata i32 %6, metadata !8405, metadata !DIExpression()), !dbg !8407
  %7 = icmp eq i32 %6, 0, !dbg !8410
  br i1 %7, label %8, label %31, !dbg !8412

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !8405, metadata !DIExpression()), !dbg !8407
  %9 = and i32 %2, 131072, !dbg !8413
  %10 = icmp eq i32 %9, 0, !dbg !8415
  br i1 %10, label %28, label %11, !dbg !8416

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !8417
  %13 = icmp eq i32 %12, 0, !dbg !8420
  br i1 %13, label %18, label %14, !dbg !8421

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !8422
  %16 = shl nuw i32 1, %15, !dbg !8422
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !8424
  br label %25, !dbg !8425

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !8426
  %20 = icmp eq i32 %19, 0, !dbg !8428
  %21 = zext i8 %1 to i32, !dbg !8407
  br i1 %20, label %25, label %22, !dbg !8429

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !8430
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !8432
  br label %25, !dbg !8433

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !8434
  %27 = load i32, i32* %4, align 4, !dbg !8435
  call void @llvm.dbg.value(metadata i32 %30, metadata !8406, metadata !DIExpression()), !dbg !8407
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !8436
  br label %31, !dbg !8437

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !8434
  %30 = load i32, i32* %4, align 4, !dbg !8435
  call void @llvm.dbg.value(metadata i32 %30, metadata !8406, metadata !DIExpression()), !dbg !8407
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !8436
  call void @llvm.dbg.value(metadata i32 0, metadata !8405, metadata !DIExpression()), !dbg !8407
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !8438
  ret i32 %6, !dbg !8438
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !8439 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8443, metadata !DIExpression()), !dbg !8448
  call void @llvm.dbg.value(metadata i32* %1, metadata !8444, metadata !DIExpression()), !dbg !8448
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8449
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8449
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8449
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8445, metadata !DIExpression()), !dbg !8448
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8450
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8450
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8450
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8447, metadata !DIExpression()), !dbg !8448
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !8451
  store i32 %9, i32* %1, align 4, !dbg !8452
  ret i32 0, !dbg !8453
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !8454 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8456, metadata !DIExpression()), !dbg !8462
  call void @llvm.dbg.value(metadata i32 %1, metadata !8457, metadata !DIExpression()), !dbg !8462
  call void @llvm.dbg.value(metadata i32 %2, metadata !8458, metadata !DIExpression()), !dbg !8462
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8463
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !8463
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !8463
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !8459, metadata !DIExpression()), !dbg !8462
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !8464
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !8464
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !8464
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !8460, metadata !DIExpression()), !dbg !8462
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !8465
  call void @llvm.dbg.value(metadata i32 %10, metadata !8461, metadata !DIExpression()), !dbg !8462
  %11 = xor i32 %1, -1, !dbg !8466
  %12 = and i32 %10, %11, !dbg !8467
  %13 = and i32 %2, %1, !dbg !8468
  %14 = or i32 %12, %13, !dbg !8469
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !8470
  ret i32 0, !dbg !8471
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8472 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8474, metadata !DIExpression()), !dbg !8478
  call void @llvm.dbg.value(metadata i32 %1, metadata !8475, metadata !DIExpression()), !dbg !8478
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8479
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8479
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8479
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8476, metadata !DIExpression()), !dbg !8478
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8480
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8480
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8480
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8477, metadata !DIExpression()), !dbg !8478
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !8481
  store volatile i32 %1, i32* %9, align 4, !dbg !8481
  ret i32 0, !dbg !8482
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8483 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8485, metadata !DIExpression()), !dbg !8489
  call void @llvm.dbg.value(metadata i32 %1, metadata !8486, metadata !DIExpression()), !dbg !8489
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8490
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8490
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8490
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8487, metadata !DIExpression()), !dbg !8489
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8491
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8491
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8491
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8488, metadata !DIExpression()), !dbg !8489
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !8492
  ret i32 0, !dbg !8493
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8494 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8496, metadata !DIExpression()), !dbg !8500
  call void @llvm.dbg.value(metadata i32 %1, metadata !8497, metadata !DIExpression()), !dbg !8500
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8501
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8501
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8501
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8498, metadata !DIExpression()), !dbg !8500
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8502
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8502
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8502
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8499, metadata !DIExpression()), !dbg !8500
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !8503
  %10 = load volatile i32, i32* %9, align 4, !dbg !8503
  %11 = xor i32 %10, %1, !dbg !8503
  store volatile i32 %11, i32* %9, align 4, !dbg !8503
  ret i32 0, !dbg !8504
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !8505 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8507, metadata !DIExpression()), !dbg !8517
  call void @llvm.dbg.value(metadata i8 %1, metadata !8508, metadata !DIExpression()), !dbg !8517
  call void @llvm.dbg.value(metadata i32 %2, metadata !8509, metadata !DIExpression()), !dbg !8517
  call void @llvm.dbg.value(metadata i32 %3, metadata !8510, metadata !DIExpression()), !dbg !8517
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8518
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8518
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8518
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8511, metadata !DIExpression()), !dbg !8517
  call void @llvm.dbg.value(metadata i8* undef, metadata !8512, metadata !DIExpression()), !dbg !8517
  call void @llvm.dbg.value(metadata i32 0, metadata !8514, metadata !DIExpression()), !dbg !8517
  call void @llvm.dbg.value(metadata i32 0, metadata !8515, metadata !DIExpression()), !dbg !8517
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !8519

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !8520
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !8524
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8525
  %12 = load i32, i32* %11, align 4, !dbg !8525
  %13 = icmp eq i32 %10, %12, !dbg !8526
  br i1 %13, label %14, label %29, !dbg !8527

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #27, !dbg !8528
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #27, !dbg !8530
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #27, !dbg !8531
  br label %29, !dbg !8532

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8533
  %17 = load i8*, i8** %16, align 4, !dbg !8533
  call void @llvm.dbg.value(metadata i8* %17, metadata !8512, metadata !DIExpression()), !dbg !8517
  %18 = zext i8 %1 to i32, !dbg !8534
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #27, !dbg !8536
  %20 = icmp eq i32 %19, 0, !dbg !8537
  br i1 %20, label %21, label %29, !dbg !8538

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8539
  %23 = load i32, i32* %22, align 4, !dbg !8539
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !8540
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !8541

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !8514, metadata !DIExpression()), !dbg !8517
  br label %27, !dbg !8542

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !8514, metadata !DIExpression()), !dbg !8517
  br label %27, !dbg !8544

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !8514, metadata !DIExpression()), !dbg !8517
  br label %27, !dbg !8545

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !8517
  call void @llvm.dbg.value(metadata i32 %28, metadata !8514, metadata !DIExpression()), !dbg !8517
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #27, !dbg !8546
  tail call void @stm32_exti_enable(i32 noundef %18) #27, !dbg !8547
  br label %29, !dbg !8547

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !8517
  call void @llvm.dbg.value(metadata i32 %30, metadata !8515, metadata !DIExpression()), !dbg !8517
  call void @llvm.dbg.label(metadata !8516), !dbg !8548
  ret i32 %30, !dbg !8549
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !8550 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8552, metadata !DIExpression()), !dbg !8556
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8553, metadata !DIExpression()), !dbg !8556
  call void @llvm.dbg.value(metadata i1 %2, metadata !8554, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8556
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8557
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !8557
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !8557
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !8555, metadata !DIExpression()), !dbg !8556
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !8558
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !8559
  ret i32 %8, !dbg !8560
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !8561 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8567, metadata !DIExpression()), !dbg !8570
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8568, metadata !DIExpression()), !dbg !8570
  call void @llvm.dbg.value(metadata i1 %2, metadata !8569, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8570
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !8571
  br i1 %4, label %10, label %5, !dbg !8573

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8574
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !8577
  %8 = or i1 %7, %2, !dbg !8578
  %9 = select i1 %8, i32 0, i32 -22, !dbg !8578
  br i1 %2, label %11, label %13, !dbg !8578

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !8579

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8580
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !8583
  br label %13, !dbg !8584

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !8570
  ret i32 %14, !dbg !8585
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8586 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8590, metadata !DIExpression()), !dbg !8591
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8592
  %3 = icmp eq %struct._snode* %2, null, !dbg !8592
  ret i1 %3, !dbg !8592
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !8593 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8597, metadata !DIExpression()), !dbg !8601
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8598, metadata !DIExpression()), !dbg !8601
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8599, metadata !DIExpression()), !dbg !8601
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8602
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8600, metadata !DIExpression()), !dbg !8601
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8599, metadata !DIExpression()), !dbg !8601
  %4 = icmp eq %struct._snode* %3, null, !dbg !8604
  br i1 %4, label %15, label %5, !dbg !8602

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8600, metadata !DIExpression()), !dbg !8601
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8599, metadata !DIExpression()), !dbg !8601
  %6 = icmp eq %struct._snode* %3, %1, !dbg !8606
  br i1 %6, label %9, label %11, !dbg !8609

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8600, metadata !DIExpression()), !dbg !8601
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8599, metadata !DIExpression()), !dbg !8601
  %8 = icmp eq %struct._snode* %13, %1, !dbg !8606
  br i1 %8, label %9, label %11, !dbg !8609, !llvm.loop !8610

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !8611
  br label %15, !dbg !8611

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8600, metadata !DIExpression()), !dbg !8601
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8599, metadata !DIExpression()), !dbg !8601
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !8604
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8600, metadata !DIExpression()), !dbg !8601
  %14 = icmp eq %struct._snode* %13, null, !dbg !8604
  br i1 %14, label %15, label %7, !dbg !8602, !llvm.loop !8610

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !8613
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !8614 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8618, metadata !DIExpression()), !dbg !8620
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8619, metadata !DIExpression()), !dbg !8620
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8621
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !8621
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !8621
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8622
  %5 = icmp eq %struct._snode* %4, null, !dbg !8622
  br i1 %5, label %6, label %8, !dbg !8621

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8624
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !8624
  br label %8, !dbg !8624

8:                                                ; preds = %6, %2
  ret void, !dbg !8621
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8626 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8630, metadata !DIExpression()), !dbg !8631
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8632
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8632
  ret %struct._snode* %3, !dbg !8633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8634 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8638, metadata !DIExpression()), !dbg !8640
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8639, metadata !DIExpression()), !dbg !8640
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8641
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8642
  ret void, !dbg !8643
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8644 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8646, metadata !DIExpression()), !dbg !8648
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8647, metadata !DIExpression()), !dbg !8648
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8649
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8650
  ret void, !dbg !8651
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8652 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8654, metadata !DIExpression()), !dbg !8655
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8656
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8656
  ret %struct._snode* %3, !dbg !8657
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8658 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8660, metadata !DIExpression()), !dbg !8662
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8661, metadata !DIExpression()), !dbg !8662
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8663
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8664
  ret void, !dbg !8665
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #7 !dbg !8666 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8670, metadata !DIExpression()), !dbg !8673
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8671, metadata !DIExpression()), !dbg !8673
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !8672, metadata !DIExpression()), !dbg !8673
  %4 = icmp eq %struct._snode* %1, null, !dbg !8674
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !8676
  br i1 %4, label %6, label %11, !dbg !8677

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !8678
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8680
  %8 = icmp eq %struct._snode* %7, %2, !dbg !8680
  br i1 %8, label %9, label %15, !dbg !8678

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8682
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !8682
  br label %15, !dbg !8682

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !8684
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8686
  %13 = icmp eq %struct._snode* %12, %2, !dbg !8686
  br i1 %13, label %14, label %15, !dbg !8684

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !8688
  br label %15, !dbg !8688

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !8677
  ret void, !dbg !8677
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !8690 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8694, metadata !DIExpression()), !dbg !8695
  %2 = icmp eq %struct._snode* %0, null, !dbg !8696
  br i1 %2, label %5, label %3, !dbg !8696

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !8696
  br label %5, !dbg !8696

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !8696
  ret %struct._snode* %6, !dbg !8696
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8697 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8699, metadata !DIExpression()), !dbg !8700
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !8701
  ret %struct._snode* %2, !dbg !8701
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8702 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8704, metadata !DIExpression()), !dbg !8705
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8706
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8706
  ret %struct._snode* %3, !dbg !8707
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !8708 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8710, metadata !DIExpression()), !dbg !8713
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !8714, !range !8715
  call void @llvm.dbg.value(metadata i32 %2, metadata !8711, metadata !DIExpression()), !dbg !8713
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !8716
  call void @llvm.dbg.value(metadata i32 %3, metadata !8712, metadata !DIExpression()), !dbg !8713
  ret i32 %3, !dbg !8717
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !8718 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8720, metadata !DIExpression()), !dbg !8723
  call void @llvm.dbg.value(metadata i8* %1, metadata !8721, metadata !DIExpression()), !dbg !8723
  call void @llvm.dbg.value(metadata i8* %1, metadata !8722, metadata !DIExpression()), !dbg !8723
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !8724
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !8724
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8725
  %6 = bitcast i8* %5 to %struct.device**, !dbg !8725
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !8725
  %8 = shl nuw i32 1, %0, !dbg !8726
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !8727
  ret void, !dbg !8728
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8729 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !8733, metadata !DIExpression()), !dbg !8739
  call void @llvm.dbg.value(metadata i32 %1, metadata !8734, metadata !DIExpression()), !dbg !8739
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !8735, metadata !DIExpression()), !dbg !8739
  %4 = bitcast i64* %3 to i8*, !dbg !8740
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !8740
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !8737, metadata !DIExpression()), !dbg !8739
  store i64 70368744177732, i64* %3, align 8, !dbg !8741
  call void @llvm.dbg.value(metadata i64* %3, metadata !8737, metadata !DIExpression(DW_OP_deref)), !dbg !8739
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !8742
  call void @llvm.dbg.value(metadata i32 %5, metadata !8738, metadata !DIExpression()), !dbg !8739
  %6 = icmp eq i32 %5, 0, !dbg !8743
  br i1 %6, label %7, label %8, !dbg !8745

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !8746
  br label %8, !dbg !8747

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !8748
  ret void, !dbg !8748
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !8749 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !8751, metadata !DIExpression()), !dbg !8754
  call void @llvm.dbg.value(metadata i8* %0, metadata !8752, metadata !DIExpression()), !dbg !8754
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !8755
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !8753, metadata !DIExpression()), !dbg !8754
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !8756
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !8756
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #27, !dbg !8757
  ret i32 %5, !dbg !8758
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8759 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8761, metadata !DIExpression()), !dbg !8764
  call void @llvm.dbg.value(metadata i32 %1, metadata !8762, metadata !DIExpression()), !dbg !8764
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !8765
  call void @llvm.dbg.value(metadata i32 %3, metadata !8763, metadata !DIExpression()), !dbg !8764
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !8766
  ret void, !dbg !8767
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #11 !dbg !8768 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8772, metadata !DIExpression()), !dbg !8773
  %2 = sdiv i32 %0, 4, !dbg !8774
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !8775
  %6 = add nsw i32 %5, 16, !dbg !8776
  %7 = shl i32 15, %6, !dbg !8777
  %8 = or i32 %7, %2, !dbg !8778
  ret i32 %8, !dbg !8779
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8780 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8784, metadata !DIExpression()), !dbg !8786
  call void @llvm.dbg.value(metadata i32 %1, metadata !8785, metadata !DIExpression()), !dbg !8786
  %3 = and i32 %1, 255, !dbg !8787
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !8787
  %5 = load volatile i32, i32* %4, align 4, !dbg !8787
  %6 = lshr i32 %1, 16, !dbg !8787
  %7 = xor i32 %6, -1, !dbg !8787
  %8 = and i32 %5, %7, !dbg !8787
  call void @llvm.dbg.value(metadata i32 %6, metadata !8788, metadata !DIExpression()) #25, !dbg !8792
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !8794, !srcloc !8795
  call void @llvm.dbg.value(metadata i32 %9, metadata !8791, metadata !DIExpression()) #25, !dbg !8792
  call void @llvm.dbg.value(metadata i32 %9, metadata !8796, metadata !DIExpression()) #25, !dbg !8801
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !8803, !range !3994
  %11 = shl i32 %0, %10, !dbg !8787
  %12 = or i32 %11, %8, !dbg !8787
  store volatile i32 %12, i32* %4, align 4, !dbg !8787
  ret void, !dbg !8804
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8805 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8809, metadata !DIExpression()), !dbg !8814
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !8810, metadata !DIExpression()), !dbg !8814
  call void @llvm.dbg.value(metadata i32 %2, metadata !8811, metadata !DIExpression()), !dbg !8814
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8815
  %5 = icmp eq %struct._snode* %4, null, !dbg !8815
  br i1 %5, label %21, label %6, !dbg !8815

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !8817
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8813, metadata !DIExpression()), !dbg !8814
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !8812, metadata !DIExpression()), !dbg !8814
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !8818
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !8818
  %11 = load i32, i32* %10, align 4, !dbg !8818
  %12 = and i32 %11, %2, !dbg !8822
  %13 = icmp eq i32 %12, 0, !dbg !8822
  br i1 %13, label %19, label %14, !dbg !8823

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !8812, metadata !DIExpression()), !dbg !8814
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !8824
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !8824
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !8824
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #27, !dbg !8826
  br label %19, !dbg !8827

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8812, metadata !DIExpression()), !dbg !8814
  %20 = icmp eq %struct._snode* %8, null, !dbg !8828
  br i1 %20, label %21, label %6, !dbg !8828

21:                                               ; preds = %19, %3
  ret void, !dbg !8829
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !8830 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8832, metadata !DIExpression()), !dbg !8833
  %2 = and i32 %0, 255, !dbg !8834
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !8834
  %4 = load volatile i32, i32* %3, align 4, !dbg !8834
  %5 = lshr i32 %0, 16, !dbg !8834
  %6 = and i32 %4, %5, !dbg !8834
  call void @llvm.dbg.value(metadata i32 %5, metadata !8788, metadata !DIExpression()) #25, !dbg !8835
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !8837, !srcloc !8795
  call void @llvm.dbg.value(metadata i32 %7, metadata !8791, metadata !DIExpression()) #25, !dbg !8835
  call void @llvm.dbg.value(metadata i32 %7, metadata !8796, metadata !DIExpression()) #25, !dbg !8838
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !8840, !range !3994
  %9 = lshr i32 %6, %8, !dbg !8841
  ret i32 %9, !dbg !8842
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !8843 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8848, metadata !DIExpression()), !dbg !8850
  call void @llvm.dbg.value(metadata i32 %1, metadata !8849, metadata !DIExpression()), !dbg !8850
  %3 = shl i32 %1, 16, !dbg !8851
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !8851
  store volatile i32 %3, i32* %4, align 4, !dbg !8851
  ret void, !dbg !8852
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !8853 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8857, metadata !DIExpression()), !dbg !8858
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !8859
  %3 = load volatile i32, i32* %2, align 4, !dbg !8859
  ret i32 %3, !dbg !8860
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !8861 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8863, metadata !DIExpression()), !dbg !8865
  call void @llvm.dbg.value(metadata i32 %1, metadata !8864, metadata !DIExpression()), !dbg !8865
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !8866
  store volatile i32 %1, i32* %3, align 4, !dbg !8866
  ret void, !dbg !8867
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !8868 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8870, metadata !DIExpression()), !dbg !8871
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !8872
  %3 = load volatile i32, i32* %2, align 4, !dbg !8872
  ret i32 %3, !dbg !8873
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #7 !dbg !8874 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8878, metadata !DIExpression()), !dbg !8880
  call void @llvm.dbg.value(metadata i32* %1, metadata !8879, metadata !DIExpression()), !dbg !8880
  %3 = and i32 %0, 131072, !dbg !8881
  %4 = icmp eq i32 %3, 0, !dbg !8883
  br i1 %4, label %22, label %5, !dbg !8884

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !8885
  %6 = and i32 %0, 2, !dbg !8887
  %7 = icmp eq i32 %6, 0, !dbg !8889
  br i1 %7, label %11, label %8, !dbg !8890

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !8891
  %10 = icmp eq i32 %9, 0, !dbg !8891
  br i1 %10, label %33, label %11, !dbg !8894

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !8895
  store i32 %12, i32* %1, align 4, !dbg !8895
  %13 = and i32 %0, 16, !dbg !8896
  %14 = icmp eq i32 %13, 0, !dbg !8898
  br i1 %14, label %17, label %15, !dbg !8899

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !8900
  br label %31, !dbg !8902

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !8903
  %19 = icmp eq i32 %18, 0, !dbg !8905
  br i1 %19, label %33, label %20, !dbg !8906

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !8907
  br label %31, !dbg !8909

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !8910
  %24 = icmp eq i32 %23, 0, !dbg !8912
  br i1 %24, label %31, label %25, !dbg !8913

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !8914
  %27 = icmp eq i32 %26, 0, !dbg !8917
  br i1 %27, label %28, label %31, !dbg !8918

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !8919
  br label %33, !dbg !8920

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !8880
  ret i32 %34, !dbg !8920
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !8921 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8925, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.value(metadata i32 %1, metadata !8926, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.value(metadata i32 %2, metadata !8927, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.value(metadata i32 %3, metadata !8928, metadata !DIExpression()), !dbg !8936
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8937
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8937
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8937
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8929, metadata !DIExpression()), !dbg !8936
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !8938
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !8938
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !8938
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !8930, metadata !DIExpression()), !dbg !8936
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !8939
  call void @llvm.dbg.value(metadata i32 %11, metadata !8931, metadata !DIExpression()), !dbg !8936
  %12 = and i32 %2, 48, !dbg !8940
  call void @llvm.dbg.value(metadata i32 %12, metadata !8932, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.value(metadata i32 %2, metadata !8933, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !8936
  call void @llvm.dbg.value(metadata i32 %2, metadata !8934, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !8936
  call void @llvm.dbg.value(metadata i32 %2, metadata !8935, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !8936
  %13 = lshr i32 %2, 6, !dbg !8941
  %14 = and i32 %13, 1, !dbg !8941
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !8942
  %15 = lshr i32 %2, 7, !dbg !8943
  %16 = and i32 %15, 3, !dbg !8943
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !8944
  %17 = lshr i32 %2, 9, !dbg !8945
  %18 = and i32 %17, 3, !dbg !8945
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !8946
  %19 = icmp eq i32 %12, 32, !dbg !8947
  br i1 %19, label %20, label %24, !dbg !8949

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !8950
  br i1 %21, label %22, label %23, !dbg !8953

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !8954
  br label %24, !dbg !8956

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !8957
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !8959
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !8960
  ret void, !dbg !8961
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #11 !dbg !8962 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8964, metadata !DIExpression()), !dbg !8966
  %2 = shl nuw i32 1, %0, !dbg !8967
  call void @llvm.dbg.value(metadata i32 %2, metadata !8965, metadata !DIExpression()), !dbg !8966
  ret i32 %2, !dbg !8968
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !8969 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8973, metadata !DIExpression()), !dbg !8976
  call void @llvm.dbg.value(metadata i32 %1, metadata !8974, metadata !DIExpression()), !dbg !8976
  call void @llvm.dbg.value(metadata i32 %2, metadata !8975, metadata !DIExpression()), !dbg !8976
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !8977
  %5 = load volatile i32, i32* %4, align 4, !dbg !8977
  %6 = xor i32 %1, -1, !dbg !8977
  %7 = and i32 %5, %6, !dbg !8977
  %8 = mul i32 %2, %1, !dbg !8977
  %9 = or i32 %7, %8, !dbg !8977
  store volatile i32 %9, i32* %4, align 4, !dbg !8977
  ret void, !dbg !8978
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8979 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8981, metadata !DIExpression()), !dbg !8984
  call void @llvm.dbg.value(metadata i32 %1, metadata !8982, metadata !DIExpression()), !dbg !8984
  call void @llvm.dbg.value(metadata i32 %2, metadata !8983, metadata !DIExpression()), !dbg !8984
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !8985
  %5 = load volatile i32, i32* %4, align 4, !dbg !8985
  call void @llvm.dbg.value(metadata i32 %1, metadata !8788, metadata !DIExpression()) #25, !dbg !8986
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !8988, !srcloc !8795
  call void @llvm.dbg.value(metadata i32 %6, metadata !8791, metadata !DIExpression()) #25, !dbg !8986
  call void @llvm.dbg.value(metadata i32 %6, metadata !8796, metadata !DIExpression()) #25, !dbg !8989
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !8991, !range !3994
  %8 = shl nuw nsw i32 %7, 1, !dbg !8985
  %9 = shl i32 3, %8, !dbg !8985
  %10 = xor i32 %9, -1, !dbg !8985
  %11 = and i32 %5, %10, !dbg !8985
  call void @llvm.dbg.value(metadata i32 %1, metadata !8788, metadata !DIExpression()) #25, !dbg !8992
  call void @llvm.dbg.value(metadata i32 %6, metadata !8791, metadata !DIExpression()) #25, !dbg !8992
  call void @llvm.dbg.value(metadata i32 %6, metadata !8796, metadata !DIExpression()) #25, !dbg !8994
  %12 = shl i32 %2, %8, !dbg !8985
  %13 = or i32 %11, %12, !dbg !8985
  store volatile i32 %13, i32* %4, align 4, !dbg !8985
  ret void, !dbg !8996
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8997 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8999, metadata !DIExpression()), !dbg !9002
  call void @llvm.dbg.value(metadata i32 %1, metadata !9000, metadata !DIExpression()), !dbg !9002
  call void @llvm.dbg.value(metadata i32 %2, metadata !9001, metadata !DIExpression()), !dbg !9002
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9003
  %5 = load volatile i32, i32* %4, align 4, !dbg !9003
  call void @llvm.dbg.value(metadata i32 %1, metadata !8788, metadata !DIExpression()) #25, !dbg !9004
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9006, !srcloc !8795
  call void @llvm.dbg.value(metadata i32 %6, metadata !8791, metadata !DIExpression()) #25, !dbg !9004
  call void @llvm.dbg.value(metadata i32 %6, metadata !8796, metadata !DIExpression()) #25, !dbg !9007
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9009, !range !3994
  %8 = shl nuw nsw i32 %7, 1, !dbg !9003
  %9 = shl i32 3, %8, !dbg !9003
  %10 = xor i32 %9, -1, !dbg !9003
  %11 = and i32 %5, %10, !dbg !9003
  call void @llvm.dbg.value(metadata i32 %1, metadata !8788, metadata !DIExpression()) #25, !dbg !9010
  call void @llvm.dbg.value(metadata i32 %6, metadata !8791, metadata !DIExpression()) #25, !dbg !9010
  call void @llvm.dbg.value(metadata i32 %6, metadata !8796, metadata !DIExpression()) #25, !dbg !9012
  %12 = shl i32 %2, %8, !dbg !9003
  %13 = or i32 %11, %12, !dbg !9003
  store volatile i32 %13, i32* %4, align 4, !dbg !9003
  ret void, !dbg !9014
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9015 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9017, metadata !DIExpression()), !dbg !9020
  call void @llvm.dbg.value(metadata i32 %1, metadata !9018, metadata !DIExpression()), !dbg !9020
  call void @llvm.dbg.value(metadata i32 %2, metadata !9019, metadata !DIExpression()), !dbg !9020
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9021
  %5 = load volatile i32, i32* %4, align 4, !dbg !9021
  call void @llvm.dbg.value(metadata i32 %1, metadata !8788, metadata !DIExpression()) #25, !dbg !9022
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9024, !srcloc !8795
  call void @llvm.dbg.value(metadata i32 %6, metadata !8791, metadata !DIExpression()) #25, !dbg !9022
  call void @llvm.dbg.value(metadata i32 %6, metadata !8796, metadata !DIExpression()) #25, !dbg !9025
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9027, !range !3994
  %8 = shl nuw nsw i32 %7, 2, !dbg !9021
  %9 = shl i32 15, %8, !dbg !9021
  %10 = xor i32 %9, -1, !dbg !9021
  %11 = and i32 %5, %10, !dbg !9021
  call void @llvm.dbg.value(metadata i32 %1, metadata !8788, metadata !DIExpression()) #25, !dbg !9028
  call void @llvm.dbg.value(metadata i32 %6, metadata !8791, metadata !DIExpression()) #25, !dbg !9028
  call void @llvm.dbg.value(metadata i32 %6, metadata !8796, metadata !DIExpression()) #25, !dbg !9030
  %12 = shl i32 %2, %8, !dbg !9021
  %13 = or i32 %11, %12, !dbg !9021
  store volatile i32 %13, i32* %4, align 4, !dbg !9021
  ret void, !dbg !9032
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9033 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9035, metadata !DIExpression()), !dbg !9038
  call void @llvm.dbg.value(metadata i32 %1, metadata !9036, metadata !DIExpression()), !dbg !9038
  call void @llvm.dbg.value(metadata i32 %2, metadata !9037, metadata !DIExpression()), !dbg !9038
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9039
  %5 = load volatile i32, i32* %4, align 4, !dbg !9039
  %6 = lshr i32 %1, 8, !dbg !9039
  call void @llvm.dbg.value(metadata i32 %6, metadata !8788, metadata !DIExpression()) #25, !dbg !9040
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !9042, !srcloc !8795
  call void @llvm.dbg.value(metadata i32 %7, metadata !8791, metadata !DIExpression()) #25, !dbg !9040
  call void @llvm.dbg.value(metadata i32 %7, metadata !8796, metadata !DIExpression()) #25, !dbg !9043
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !9045, !range !3994
  %9 = shl nuw nsw i32 %8, 2, !dbg !9039
  %10 = shl i32 15, %9, !dbg !9039
  %11 = xor i32 %10, -1, !dbg !9039
  %12 = and i32 %5, %11, !dbg !9039
  call void @llvm.dbg.value(metadata i32 %6, metadata !8788, metadata !DIExpression()) #25, !dbg !9046
  call void @llvm.dbg.value(metadata i32 %7, metadata !8791, metadata !DIExpression()) #25, !dbg !9046
  call void @llvm.dbg.value(metadata i32 %7, metadata !8796, metadata !DIExpression()) #25, !dbg !9048
  %13 = shl i32 %2, %9, !dbg !9039
  %14 = or i32 %12, %13, !dbg !9039
  store volatile i32 %14, i32* %4, align 4, !dbg !9039
  ret void, !dbg !9050
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9051 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9053, metadata !DIExpression()), !dbg !9056
  call void @llvm.dbg.value(metadata i32 %1, metadata !9054, metadata !DIExpression()), !dbg !9056
  call void @llvm.dbg.value(metadata i32 %2, metadata !9055, metadata !DIExpression()), !dbg !9056
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9057
  %5 = load volatile i32, i32* %4, align 4, !dbg !9057
  call void @llvm.dbg.value(metadata i32 %1, metadata !8788, metadata !DIExpression()) #25, !dbg !9058
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9060, !srcloc !8795
  call void @llvm.dbg.value(metadata i32 %6, metadata !8791, metadata !DIExpression()) #25, !dbg !9058
  call void @llvm.dbg.value(metadata i32 %6, metadata !8796, metadata !DIExpression()) #25, !dbg !9061
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9063, !range !3994
  %8 = shl nuw nsw i32 %7, 1, !dbg !9057
  %9 = shl i32 3, %8, !dbg !9057
  %10 = xor i32 %9, -1, !dbg !9057
  %11 = and i32 %5, %10, !dbg !9057
  call void @llvm.dbg.value(metadata i32 %1, metadata !8788, metadata !DIExpression()) #25, !dbg !9064
  call void @llvm.dbg.value(metadata i32 %6, metadata !8791, metadata !DIExpression()) #25, !dbg !9064
  call void @llvm.dbg.value(metadata i32 %6, metadata !8796, metadata !DIExpression()) #25, !dbg !9066
  %12 = shl i32 %2, %8, !dbg !9057
  %13 = or i32 %11, %12, !dbg !9057
  store volatile i32 %13, i32* %4, align 4, !dbg !9057
  ret void, !dbg !9068
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9069 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9071, metadata !DIExpression()), !dbg !9074
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9075
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9075
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9075
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9072, metadata !DIExpression()), !dbg !9074
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9076
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9077
  %6 = tail call fastcc zeroext i1 @device_is_ready.53() #26, !dbg !9078
  br i1 %6, label %7, label %11, !dbg !9080

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !9081
  call void @llvm.dbg.value(metadata i32 %8, metadata !9073, metadata !DIExpression()), !dbg !9074
  %9 = icmp slt i32 %8, 0, !dbg !9082
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9084
  br label %11, !dbg !9084

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9074
  ret i32 %12, !dbg !9085
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.53() unnamed_addr #1 !dbg !9086 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9090, metadata !DIExpression()), !dbg !9091
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9092, !srcloc !9094
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.54() #26, !dbg !9095
  ret i1 %1, !dbg !9096
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9097 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9101, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.value(metadata i8 1, metadata !9102, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !9103, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.value(metadata i32 0, metadata !9104, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9105, metadata !DIExpression()), !dbg !9106
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9107
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9107
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9107
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9103, metadata !DIExpression()), !dbg !9106
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9108
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9111
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !9112
  call void @llvm.dbg.value(metadata i32 %7, metadata !9104, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.value(metadata i32 %7, metadata !9104, metadata !DIExpression()), !dbg !9106
  ret i32 %7, !dbg !9113
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.54() unnamed_addr #1 !dbg !9114 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9116, metadata !DIExpression()), !dbg !9117
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #27, !dbg !9118
  ret i1 %1, !dbg !9119
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9120 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9124, metadata !DIExpression()), !dbg !9132
  call void @llvm.dbg.value(metadata i32 %1, metadata !9125, metadata !DIExpression()), !dbg !9132
  call void @llvm.dbg.value(metadata i32 %2, metadata !9126, metadata !DIExpression()), !dbg !9132
  call void @llvm.dbg.value(metadata i32 %3, metadata !9127, metadata !DIExpression()), !dbg !9132
  call void @llvm.dbg.value(metadata i32 0, metadata !9128, metadata !DIExpression()), !dbg !9132
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !9133
  %5 = icmp eq i32 %3, 17, !dbg !9134
  br i1 %5, label %6, label %14, !dbg !9135

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9136
  call void @llvm.dbg.value(metadata i32 %7, metadata !9129, metadata !DIExpression()), !dbg !9137
  %8 = icmp eq i32 %7, 0, !dbg !9138
  %9 = shl nuw i32 1, %1, !dbg !9140
  br i1 %8, label %12, label %10, !dbg !9141

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9142
  br label %14, !dbg !9144

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9145
  br label %14, !dbg !9148

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9149
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #17 !dbg !9150 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9152, metadata !DIExpression()), !dbg !9156
  call void @llvm.dbg.value(metadata i8* %1, metadata !9153, metadata !DIExpression()), !dbg !9156
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9157
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9157
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9157
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9154, metadata !DIExpression()), !dbg !9156
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9158
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9158
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !9160
  %9 = icmp eq i32 %8, 0, !dbg !9160
  br i1 %9, label %12, label %10, !dbg !9161

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9162
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !9164
  br label %12, !dbg !9165

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9166
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9168
  %15 = icmp eq i32 %14, 0, !dbg !9168
  br i1 %15, label %19, label %16, !dbg !9169

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9170
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !9171
  store i8 %18, i8* %1, align 1, !dbg !9172
  br label %19, !dbg !9173

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9156
  ret i32 %20, !dbg !9174
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9175 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9177, metadata !DIExpression()), !dbg !9181
  call void @llvm.dbg.value(metadata i8 %1, metadata !9178, metadata !DIExpression()), !dbg !9181
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9182
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9182
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9182
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9179, metadata !DIExpression()), !dbg !9181
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9183

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9184
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !9187
  %10 = icmp eq i32 %9, 0, !dbg !9187
  br i1 %10, label %18, label %11, !dbg !9188

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !9189, !srcloc !9196
  call void @llvm.dbg.value(metadata i32 undef, metadata !9192, metadata !DIExpression()) #25, !dbg !9197
  call void @llvm.dbg.value(metadata i32 undef, metadata !9193, metadata !DIExpression()) #25, !dbg !9197
  call void @llvm.dbg.value(metadata i32 undef, metadata !9180, metadata !DIExpression()), !dbg !9181
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9198
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9200
  %15 = icmp eq i32 %14, 0, !dbg !9200
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9189
  br i1 %15, label %17, label %19, !dbg !9201

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9192, metadata !DIExpression()) #25, !dbg !9197
  call void @llvm.dbg.value(metadata i32 %16, metadata !9180, metadata !DIExpression()), !dbg !9181
  call void @llvm.dbg.value(metadata i32 undef, metadata !9202, metadata !DIExpression()) #25, !dbg !9205
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !9207, !srcloc !9208
  br label %18, !dbg !9209

18:                                               ; preds = %17, %7
  br label %7, !dbg !9184, !llvm.loop !9210

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9189
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9212
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !9213
  call void @llvm.dbg.value(metadata i32 %20, metadata !9202, metadata !DIExpression()) #25, !dbg !9214
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !9216, !srcloc !9208
  ret void, !dbg !9217
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #17 !dbg !9218 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9220, metadata !DIExpression()), !dbg !9223
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9224
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9224
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9224
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9221, metadata !DIExpression()), !dbg !9223
  call void @llvm.dbg.value(metadata i32 0, metadata !9222, metadata !DIExpression()), !dbg !9223
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9225
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9225
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9227
  %8 = icmp ne i32 %7, 0, !dbg !9227
  %9 = zext i1 %8 to i32, !dbg !9228
  call void @llvm.dbg.value(metadata i32 %9, metadata !9222, metadata !DIExpression()), !dbg !9223
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9229
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !9231
  %12 = icmp eq i32 %11, 0, !dbg !9231
  %13 = or i32 %9, 2, !dbg !9232
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9232
  call void @llvm.dbg.value(metadata i32 %14, metadata !9222, metadata !DIExpression()), !dbg !9223
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9233
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !9235
  %17 = icmp eq i32 %16, 0, !dbg !9235
  %18 = or i32 %14, 4, !dbg !9236
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9236
  call void @llvm.dbg.value(metadata i32 %19, metadata !9222, metadata !DIExpression()), !dbg !9223
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9237
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !9239
  %22 = icmp eq i32 %21, 0, !dbg !9239
  %23 = or i32 %19, 8, !dbg !9240
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9240
  call void @llvm.dbg.value(metadata i32 %24, metadata !9222, metadata !DIExpression()), !dbg !9223
  %25 = and i32 %24, 8, !dbg !9241
  %26 = icmp eq i32 %25, 0, !dbg !9241
  br i1 %26, label %29, label %27, !dbg !9243

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9244
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !9246
  br label %29, !dbg !9247

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9248
  %31 = icmp eq i32 %30, 0, !dbg !9248
  br i1 %31, label %34, label %32, !dbg !9250

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9251
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !9253
  br label %34, !dbg !9254

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9255
  %36 = icmp eq i32 %35, 0, !dbg !9255
  br i1 %36, label %39, label %37, !dbg !9257

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9258
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !9260
  br label %39, !dbg !9261

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9262
  %41 = icmp eq i32 %40, 0, !dbg !9262
  br i1 %41, label %44, label %42, !dbg !9264

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9265
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !9267
  br label %44, !dbg !9268

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9269
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !9270
  ret i32 %24, !dbg !9271
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9272 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9274, metadata !DIExpression()), !dbg !9283
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9275, metadata !DIExpression()), !dbg !9283
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9284
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9284
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9284
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9276, metadata !DIExpression()), !dbg !9283
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9285
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9285
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9285
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9277, metadata !DIExpression()), !dbg !9283
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9286
  %10 = load i8, i8* %9, align 4, !dbg !9286
  %11 = zext i8 %10 to i32, !dbg !9287
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !9288
  call void @llvm.dbg.value(metadata i32 %12, metadata !9279, metadata !DIExpression()), !dbg !9283
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9289
  %14 = load i8, i8* %13, align 1, !dbg !9289
  %15 = zext i8 %14 to i32, !dbg !9290
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !9291
  call void @llvm.dbg.value(metadata i32 %16, metadata !9280, metadata !DIExpression()), !dbg !9283
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9292
  %18 = load i8, i8* %17, align 2, !dbg !9292
  %19 = zext i8 %18 to i32, !dbg !9293
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !9294
  call void @llvm.dbg.value(metadata i32 %20, metadata !9281, metadata !DIExpression()), !dbg !9283
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9295
  %22 = load i8, i8* %21, align 1, !dbg !9295
  %23 = zext i8 %22 to i32, !dbg !9296
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !9297
  call void @llvm.dbg.value(metadata i32 %24, metadata !9282, metadata !DIExpression()), !dbg !9283
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9298

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9300
  br i1 %26, label %69, label %27, !dbg !9302

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9303

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9304
  br i1 %29, label %65, label %30, !dbg !9304

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9306
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9283
  br i1 %31, label %38, label %34, !dbg !9308

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9309
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073812480, label %36
  ], !dbg !9309

36:                                               ; preds = %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9312
  br i1 %37, label %38, label %69, !dbg !9313

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9314
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !9315
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !9316
  %41 = icmp eq i32 %12, %40, !dbg !9318
  br i1 %41, label %43, label %42, !dbg !9319

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !9320
  br label %43, !dbg !9322

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !9323
  %45 = icmp eq i32 %16, %44, !dbg !9325
  br i1 %45, label %47, label %46, !dbg !9326

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !9327
  br label %47, !dbg !9329

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !9330
  %49 = icmp eq i32 %20, %48, !dbg !9332
  br i1 %49, label %51, label %50, !dbg !9333

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !9334
  br label %51, !dbg !9336

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !9337
  %53 = icmp eq i32 %24, %52, !dbg !9339
  br i1 %53, label %55, label %54, !dbg !9340

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !9341
  br label %55, !dbg !9343

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9344
  %57 = load i32, i32* %56, align 4, !dbg !9344
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9346
  %59 = load i32, i32* %58, align 4, !dbg !9346
  %60 = icmp eq i32 %57, %59, !dbg !9347
  br i1 %60, label %63, label %61, !dbg !9348

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !9349
  %62 = load i32, i32* %56, align 4, !dbg !9351
  store i32 %62, i32* %58, align 4, !dbg !9352
  br label %63, !dbg !9353

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !9354
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !9355
  br label %69, !dbg !9356

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9304
  %67 = and i8 %66, 1, !dbg !9304
  %68 = icmp eq i8 %67, 0, !dbg !9304
  br i1 %68, label %30, label %69, !dbg !9304

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9283
  ret i32 %70, !dbg !9357
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !9358 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9360, metadata !DIExpression()), !dbg !9363
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9361, metadata !DIExpression()), !dbg !9363
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9364
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !9364
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !9364
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !9362, metadata !DIExpression()), !dbg !9363
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !9365
  %7 = load i32, i32* %6, align 4, !dbg !9365
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9366
  store i32 %7, i32* %8, align 4, !dbg !9367
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9368, !range !9369
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !9370
  %11 = trunc i32 %10 to i8, !dbg !9370
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9371
  store i8 %11, i8* %12, align 4, !dbg !9372
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !9373, !range !9374
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !9375
  %15 = trunc i32 %14 to i8, !dbg !9375
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9376
  store i8 %15, i8* %16, align 1, !dbg !9377
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !9378
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9379, !range !9369
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !9380
  %20 = trunc i32 %19 to i8, !dbg !9380
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9381
  store i8 %20, i8* %21, align 2, !dbg !9382
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !9383, !range !9384
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !9385
  %24 = trunc i32 %23 to i8, !dbg !9385
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9386
  store i8 %24, i8* %25, align 1, !dbg !9387
  ret i32 0, !dbg !9388
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !9389 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9391, metadata !DIExpression()), !dbg !9397
  call void @llvm.dbg.value(metadata i8* %1, metadata !9392, metadata !DIExpression()), !dbg !9397
  call void @llvm.dbg.value(metadata i32 %2, metadata !9393, metadata !DIExpression()), !dbg !9397
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9398
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9398
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9398
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9394, metadata !DIExpression()), !dbg !9397
  call void @llvm.dbg.value(metadata i8 0, metadata !9395, metadata !DIExpression()), !dbg !9397
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9399
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9399
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !9401
  %10 = icmp eq i32 %9, 0, !dbg !9401
  br i1 %10, label %30, label %11, !dbg !9402

11:                                               ; preds = %3
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !9403, !srcloc !9196
  %13 = extractvalue { i32, i32 } %12, 0, !dbg !9403
  call void @llvm.dbg.value(metadata i32 %13, metadata !9192, metadata !DIExpression()) #25, !dbg !9405
  call void @llvm.dbg.value(metadata i32 undef, metadata !9193, metadata !DIExpression()) #25, !dbg !9405
  call void @llvm.dbg.value(metadata i32 %13, metadata !9396, metadata !DIExpression()), !dbg !9397
  call void @llvm.dbg.value(metadata i8 0, metadata !9395, metadata !DIExpression()), !dbg !9397
  %14 = icmp sgt i32 %2, 0, !dbg !9406
  br i1 %14, label %15, label %28, !dbg !9407

15:                                               ; preds = %11, %21
  %16 = phi i32 [ %26, %21 ], [ 0, %11 ]
  %17 = phi i8 [ %23, %21 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8 %17, metadata !9395, metadata !DIExpression()), !dbg !9397
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9408
  %19 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %18) #26, !dbg !9409
  %20 = icmp eq i32 %19, 0, !dbg !9407
  br i1 %20, label %28, label %21, !dbg !9410

21:                                               ; preds = %15
  %22 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9411
  %23 = add i8 %17, 1, !dbg !9413
  call void @llvm.dbg.value(metadata i8 %23, metadata !9395, metadata !DIExpression()), !dbg !9397
  %24 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !9414
  %25 = load i8, i8* %24, align 1, !dbg !9414
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %22, i8 noundef zeroext %25) #26, !dbg !9415
  %26 = zext i8 %23 to i32, !dbg !9416
  %27 = icmp slt i32 %26, %2, !dbg !9406
  br i1 %27, label %15, label %28, !dbg !9407, !llvm.loop !9417

28:                                               ; preds = %15, %21, %11
  %29 = phi i32 [ 0, %11 ], [ %26, %21 ], [ %16, %15 ], !dbg !9416
  call void @llvm.dbg.value(metadata i32 %13, metadata !9202, metadata !DIExpression()) #25, !dbg !9419
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !9421, !srcloc !9208
  br label %30, !dbg !9422

30:                                               ; preds = %3, %28
  %31 = phi i32 [ %29, %28 ], [ 0, %3 ], !dbg !9397
  ret i32 %31, !dbg !9423
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #17 !dbg !9424 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9426, metadata !DIExpression()), !dbg !9431
  call void @llvm.dbg.value(metadata i8* %1, metadata !9427, metadata !DIExpression()), !dbg !9431
  call void @llvm.dbg.value(metadata i32 %2, metadata !9428, metadata !DIExpression()), !dbg !9431
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9432
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9432
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9432
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9429, metadata !DIExpression()), !dbg !9431
  call void @llvm.dbg.value(metadata i8 0, metadata !9430, metadata !DIExpression()), !dbg !9431
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9433
  call void @llvm.dbg.value(metadata i8 0, metadata !9430, metadata !DIExpression()), !dbg !9431
  %8 = icmp sgt i32 %2, 0, !dbg !9434
  br i1 %8, label %9, label %28, !dbg !9435

9:                                                ; preds = %3, %25
  %10 = phi i32 [ %26, %25 ], [ 0, %3 ]
  %11 = phi i8 [ %18, %25 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i8 %11, metadata !9430, metadata !DIExpression()), !dbg !9431
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9433
  %13 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %12) #26, !dbg !9436
  %14 = icmp eq i32 %13, 0, !dbg !9435
  br i1 %14, label %28, label %15, !dbg !9437

15:                                               ; preds = %9
  %16 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9438
  %17 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %16) #26, !dbg !9440
  %18 = add i8 %11, 1, !dbg !9441
  call void @llvm.dbg.value(metadata i8 %18, metadata !9430, metadata !DIExpression()), !dbg !9431
  %19 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !9442
  store i8 %17, i8* %19, align 1, !dbg !9443
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9444
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %20) #26, !dbg !9446
  %22 = icmp eq i32 %21, 0, !dbg !9446
  br i1 %22, label %25, label %23, !dbg !9447

23:                                               ; preds = %15
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9448
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %24) #26, !dbg !9450
  br label %25, !dbg !9451

25:                                               ; preds = %23, %15
  call void @llvm.dbg.value(metadata i8 %18, metadata !9430, metadata !DIExpression()), !dbg !9431
  %26 = zext i8 %18 to i32, !dbg !9452
  %27 = icmp slt i32 %26, %2, !dbg !9434
  br i1 %27, label %9, label %28, !dbg !9435, !llvm.loop !9453

28:                                               ; preds = %9, %25, %3
  %29 = phi i32 [ 0, %3 ], [ %26, %25 ], [ %10, %9 ], !dbg !9452
  ret i32 %29, !dbg !9455
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9456 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9458, metadata !DIExpression()), !dbg !9460
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9461
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9461
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9461
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9459, metadata !DIExpression()), !dbg !9460
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9462
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9462
  tail call fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !9463
  ret void, !dbg !9464
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9465 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9467, metadata !DIExpression()), !dbg !9469
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9470
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9470
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9470
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9468, metadata !DIExpression()), !dbg !9469
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9471
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9471
  tail call fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !9472
  ret void, !dbg !9473
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !9474 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9476, metadata !DIExpression()), !dbg !9478
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9479
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9479
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9479
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9477, metadata !DIExpression()), !dbg !9478
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9480
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9480
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9481
  %8 = icmp eq i32 %7, 0, !dbg !9481
  br i1 %8, label %14, label %9, !dbg !9482

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9483
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %10) #26, !dbg !9484
  %12 = icmp ne i32 %11, 0, !dbg !9482
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %9, %1
  %15 = phi i32 [ 0, %1 ], [ %13, %9 ]
  ret i32 %15, !dbg !9485
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9486 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9488, metadata !DIExpression()), !dbg !9490
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9491
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9491
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9491
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9489, metadata !DIExpression()), !dbg !9490
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9492
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9492
  tail call fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9493
  ret void, !dbg !9494
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9495 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9497, metadata !DIExpression()), !dbg !9499
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9500
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9500
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9500
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9498, metadata !DIExpression()), !dbg !9499
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9501
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9501
  tail call fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9502
  ret void, !dbg !9503
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_complete(%struct.device* nocapture noundef readonly %0) #16 !dbg !9504 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9506, metadata !DIExpression()), !dbg !9508
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9509
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9509
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9509
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9507, metadata !DIExpression()), !dbg !9508
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9510
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9510
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !9511
  ret i32 %7, !dbg !9512
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !9513 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9515, metadata !DIExpression()), !dbg !9517
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9518
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9518
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9518
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9516, metadata !DIExpression()), !dbg !9517
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9519
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9519
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9520
  ret i32 %7, !dbg !9521
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9522 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9524, metadata !DIExpression()), !dbg !9526
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9527
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9527
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9527
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9525, metadata !DIExpression()), !dbg !9526
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9528
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9528
  tail call fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %6) #26, !dbg !9529
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9530
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !9530
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
    i32 1073761280, label %9
    i32 1073762304, label %9
    i32 1073812480, label %9
  ], !dbg !9530

9:                                                ; preds = %1, %1, %1, %1, %1, %1
  tail call fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %7) #26, !dbg !9532
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9534
  br label %11, !dbg !9535

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !9534
  tail call fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %12) #26, !dbg !9536
  ret void, !dbg !9537
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9538 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9540, metadata !DIExpression()), !dbg !9542
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9543
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9543
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9543
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9541, metadata !DIExpression()), !dbg !9542
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9544
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9544
  tail call fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %6) #26, !dbg !9545
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9546
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !9546
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
    i32 1073761280, label %9
    i32 1073762304, label %9
    i32 1073812480, label %9
  ], !dbg !9546

9:                                                ; preds = %1, %1, %1, %1, %1, %1
  tail call fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %7) #26, !dbg !9548
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9550
  br label %11, !dbg !9551

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !9550
  tail call fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %12) #26, !dbg !9552
  ret void, !dbg !9553
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_is_pending(%struct.device* nocapture noundef readonly %0) #16 !dbg !9554 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9556, metadata !DIExpression()), !dbg !9558
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9559
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9559
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9559
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9557, metadata !DIExpression()), !dbg !9558
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9560
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9560
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9561
  %8 = icmp eq i32 %7, 0, !dbg !9561
  br i1 %8, label %13, label %9, !dbg !9562

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9563
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %10) #26, !dbg !9564
  %12 = icmp eq i32 %11, 0, !dbg !9564
  br i1 %12, label %13, label %22, !dbg !9565

13:                                               ; preds = %9, %1
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9566
  %15 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %14) #26, !dbg !9567
  %16 = icmp eq i32 %15, 0, !dbg !9567
  br i1 %16, label %22, label %17, !dbg !9568

17:                                               ; preds = %13
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9569
  %19 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %18) #26, !dbg !9570
  %20 = icmp ne i32 %19, 0, !dbg !9568
  %21 = zext i1 %20 to i32
  br label %22

22:                                               ; preds = %13, %17, %9
  %23 = phi i32 [ 1, %9 ], [ 0, %13 ], [ %21, %17 ]
  ret i32 %23, !dbg !9571
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_stm32_irq_update(%struct.device* nocapture noundef readnone %0) #11 !dbg !9572 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9574, metadata !DIExpression()), !dbg !9575
  ret i32 1, !dbg !9576
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_stm32_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #7 !dbg !9577 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9579, metadata !DIExpression()), !dbg !9583
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !9580, metadata !DIExpression()), !dbg !9583
  call void @llvm.dbg.value(metadata i8* %2, metadata !9581, metadata !DIExpression()), !dbg !9583
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9584
  %5 = bitcast i8** %4 to %struct.uart_stm32_data**, !dbg !9584
  %6 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %5, align 4, !dbg !9584
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %6, metadata !9582, metadata !DIExpression()), !dbg !9583
  %7 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 2, !dbg !9585
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !9586
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 3, !dbg !9587
  store i8* %2, i8** %8, align 4, !dbg !9588
  ret void, !dbg !9589
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9590 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9595, metadata !DIExpression()), !dbg !9596
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9597
  %3 = load volatile i32, i32* %2, align 4, !dbg !9597
  %4 = lshr i32 %3, 5, !dbg !9598
  %5 = and i32 %4, 1, !dbg !9598
  ret i32 %5, !dbg !9599
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9600 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9602, metadata !DIExpression()), !dbg !9603
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9604
  %3 = load volatile i32, i32* %2, align 4, !dbg !9604
  %4 = lshr i32 %3, 5, !dbg !9605
  %5 = and i32 %4, 1, !dbg !9605
  ret i32 %5, !dbg !9606
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9607 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9609, metadata !DIExpression()), !dbg !9610
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9611
  %3 = load volatile i32, i32* %2, align 4, !dbg !9611
  %4 = lshr i32 %3, 6, !dbg !9612
  %5 = and i32 %4, 1, !dbg !9612
  ret i32 %5, !dbg !9613
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9614 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9616, metadata !DIExpression()), !dbg !9617
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9618
  %3 = load volatile i32, i32* %2, align 4, !dbg !9618
  %4 = lshr i32 %3, 6, !dbg !9619
  %5 = and i32 %4, 1, !dbg !9619
  ret i32 %5, !dbg !9620
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9621 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9625, metadata !DIExpression()), !dbg !9628
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !9629

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9630, metadata !DIExpression()) #25, !dbg !9636
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9639, !srcloc !9640
  call void @llvm.dbg.value(metadata i32 %4, metadata !9635, metadata !DIExpression()) #25, !dbg !9636
  %5 = and i32 %4, -2, !dbg !9641
  call void @llvm.dbg.value(metadata i32 %5, metadata !9626, metadata !DIExpression()), !dbg !9642
  call void @llvm.dbg.value(metadata i32 %5, metadata !9643, metadata !DIExpression()) #25, !dbg !9650
  call void @llvm.dbg.value(metadata i32* %2, metadata !9648, metadata !DIExpression()) #25, !dbg !9650
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9652, !srcloc !9653
  call void @llvm.dbg.value(metadata i32 %6, metadata !9649, metadata !DIExpression()) #25, !dbg !9650
  %7 = icmp eq i32 %6, 0, !dbg !9629
  br i1 %7, label %8, label %3, !dbg !9641, !llvm.loop !9654

8:                                                ; preds = %3
  ret void, !dbg !9655
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9656 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9658, metadata !DIExpression()), !dbg !9659
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9660
  %3 = load volatile i32, i32* %2, align 4, !dbg !9660
  %4 = and i32 %3, -65, !dbg !9660
  store volatile i32 %4, i32* %2, align 4, !dbg !9660
  ret void, !dbg !9661
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9662 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9664, metadata !DIExpression()), !dbg !9667
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9668

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9630, metadata !DIExpression()) #25, !dbg !9669
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9672, !srcloc !9640
  call void @llvm.dbg.value(metadata i32 %4, metadata !9635, metadata !DIExpression()) #25, !dbg !9669
  %5 = and i32 %4, -257, !dbg !9673
  call void @llvm.dbg.value(metadata i32 %5, metadata !9665, metadata !DIExpression()), !dbg !9674
  call void @llvm.dbg.value(metadata i32 %5, metadata !9643, metadata !DIExpression()) #25, !dbg !9675
  call void @llvm.dbg.value(metadata i32* %2, metadata !9648, metadata !DIExpression()) #25, !dbg !9675
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9677, !srcloc !9653
  call void @llvm.dbg.value(metadata i32 %6, metadata !9649, metadata !DIExpression()) #25, !dbg !9675
  %7 = icmp eq i32 %6, 0, !dbg !9668
  br i1 %7, label %8, label %3, !dbg !9673, !llvm.loop !9678

8:                                                ; preds = %3
  ret void, !dbg !9679
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9680 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9682, metadata !DIExpression()), !dbg !9685
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !9686

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9630, metadata !DIExpression()) #25, !dbg !9687
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9690, !srcloc !9640
  call void @llvm.dbg.value(metadata i32 %4, metadata !9635, metadata !DIExpression()) #25, !dbg !9687
  %5 = or i32 %4, 1, !dbg !9691
  call void @llvm.dbg.value(metadata i32 %5, metadata !9683, metadata !DIExpression()), !dbg !9692
  call void @llvm.dbg.value(metadata i32 %5, metadata !9643, metadata !DIExpression()) #25, !dbg !9693
  call void @llvm.dbg.value(metadata i32* %2, metadata !9648, metadata !DIExpression()) #25, !dbg !9693
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9695, !srcloc !9653
  call void @llvm.dbg.value(metadata i32 %6, metadata !9649, metadata !DIExpression()) #25, !dbg !9693
  %7 = icmp eq i32 %6, 0, !dbg !9686
  br i1 %7, label %8, label %3, !dbg !9691, !llvm.loop !9696

8:                                                ; preds = %3
  ret void, !dbg !9697
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9698 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9700, metadata !DIExpression()), !dbg !9701
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9702
  %3 = load volatile i32, i32* %2, align 4, !dbg !9702
  %4 = or i32 %3, 64, !dbg !9702
  store volatile i32 %4, i32* %2, align 4, !dbg !9702
  ret void, !dbg !9703
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9704 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9706, metadata !DIExpression()), !dbg !9709
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9710

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9630, metadata !DIExpression()) #25, !dbg !9711
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9714, !srcloc !9640
  call void @llvm.dbg.value(metadata i32 %4, metadata !9635, metadata !DIExpression()) #25, !dbg !9711
  %5 = or i32 %4, 256, !dbg !9715
  call void @llvm.dbg.value(metadata i32 %5, metadata !9707, metadata !DIExpression()), !dbg !9716
  call void @llvm.dbg.value(metadata i32 %5, metadata !9643, metadata !DIExpression()) #25, !dbg !9717
  call void @llvm.dbg.value(metadata i32* %2, metadata !9648, metadata !DIExpression()) #25, !dbg !9717
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9719, !srcloc !9653
  call void @llvm.dbg.value(metadata i32 %6, metadata !9649, metadata !DIExpression()) #25, !dbg !9717
  %7 = icmp eq i32 %6, 0, !dbg !9710
  br i1 %7, label %8, label %3, !dbg !9715, !llvm.loop !9720

8:                                                ; preds = %3
  ret void, !dbg !9721
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9722 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9724, metadata !DIExpression()), !dbg !9727
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9728

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9630, metadata !DIExpression()) #25, !dbg !9729
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9732, !srcloc !9640
  call void @llvm.dbg.value(metadata i32 %4, metadata !9635, metadata !DIExpression()) #25, !dbg !9729
  %5 = and i32 %4, -33, !dbg !9733
  call void @llvm.dbg.value(metadata i32 %5, metadata !9725, metadata !DIExpression()), !dbg !9734
  call void @llvm.dbg.value(metadata i32 %5, metadata !9643, metadata !DIExpression()) #25, !dbg !9735
  call void @llvm.dbg.value(metadata i32* %2, metadata !9648, metadata !DIExpression()) #25, !dbg !9735
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9737, !srcloc !9653
  call void @llvm.dbg.value(metadata i32 %6, metadata !9649, metadata !DIExpression()) #25, !dbg !9735
  %7 = icmp eq i32 %6, 0, !dbg !9728
  br i1 %7, label %8, label %3, !dbg !9733, !llvm.loop !9738

8:                                                ; preds = %3
  ret void, !dbg !9739
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9740 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9742, metadata !DIExpression()), !dbg !9745
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9746

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9630, metadata !DIExpression()) #25, !dbg !9747
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9750, !srcloc !9640
  call void @llvm.dbg.value(metadata i32 %4, metadata !9635, metadata !DIExpression()) #25, !dbg !9747
  %5 = or i32 %4, 32, !dbg !9751
  call void @llvm.dbg.value(metadata i32 %5, metadata !9743, metadata !DIExpression()), !dbg !9752
  call void @llvm.dbg.value(metadata i32 %5, metadata !9643, metadata !DIExpression()) #25, !dbg !9753
  call void @llvm.dbg.value(metadata i32* %2, metadata !9648, metadata !DIExpression()) #25, !dbg !9753
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9755, !srcloc !9653
  call void @llvm.dbg.value(metadata i32 %6, metadata !9649, metadata !DIExpression()) #25, !dbg !9753
  %7 = icmp eq i32 %6, 0, !dbg !9746
  br i1 %7, label %8, label %3, !dbg !9751, !llvm.loop !9756

8:                                                ; preds = %3
  ret void, !dbg !9757
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9758 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9760, metadata !DIExpression()), !dbg !9761
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9762
  %3 = load volatile i32, i32* %2, align 4, !dbg !9762
  %4 = lshr i32 %3, 7, !dbg !9763
  %5 = and i32 %4, 1, !dbg !9763
  ret i32 %5, !dbg !9764
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9765 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9767, metadata !DIExpression()), !dbg !9770
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9771

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9630, metadata !DIExpression()) #25, !dbg !9772
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9775, !srcloc !9640
  call void @llvm.dbg.value(metadata i32 %4, metadata !9635, metadata !DIExpression()) #25, !dbg !9772
  %5 = and i32 %4, -65, !dbg !9776
  call void @llvm.dbg.value(metadata i32 %5, metadata !9768, metadata !DIExpression()), !dbg !9777
  call void @llvm.dbg.value(metadata i32 %5, metadata !9643, metadata !DIExpression()) #25, !dbg !9778
  call void @llvm.dbg.value(metadata i32* %2, metadata !9648, metadata !DIExpression()) #25, !dbg !9778
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9780, !srcloc !9653
  call void @llvm.dbg.value(metadata i32 %6, metadata !9649, metadata !DIExpression()) #25, !dbg !9778
  %7 = icmp eq i32 %6, 0, !dbg !9771
  br i1 %7, label %8, label %3, !dbg !9776, !llvm.loop !9781

8:                                                ; preds = %3
  ret void, !dbg !9782
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9783 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9785, metadata !DIExpression()), !dbg !9788
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9789

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9630, metadata !DIExpression()) #25, !dbg !9790
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9793, !srcloc !9640
  call void @llvm.dbg.value(metadata i32 %4, metadata !9635, metadata !DIExpression()) #25, !dbg !9790
  %5 = or i32 %4, 64, !dbg !9794
  call void @llvm.dbg.value(metadata i32 %5, metadata !9786, metadata !DIExpression()), !dbg !9795
  call void @llvm.dbg.value(metadata i32 %5, metadata !9643, metadata !DIExpression()) #25, !dbg !9796
  call void @llvm.dbg.value(metadata i32* %2, metadata !9648, metadata !DIExpression()) #25, !dbg !9796
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9798, !srcloc !9653
  call void @llvm.dbg.value(metadata i32 %6, metadata !9649, metadata !DIExpression()) #25, !dbg !9796
  %7 = icmp eq i32 %6, 0, !dbg !9789
  br i1 %7, label %8, label %3, !dbg !9794, !llvm.loop !9799

8:                                                ; preds = %3
  ret void, !dbg !9800
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9801 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9805, metadata !DIExpression()), !dbg !9806
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9807
  %3 = load volatile i32, i32* %2, align 4, !dbg !9807
  %4 = trunc i32 %3 to i8, !dbg !9808
  ret i8 %4, !dbg !9809
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9810 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9812, metadata !DIExpression()), !dbg !9813
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9814
  %3 = load volatile i32, i32* %2, align 4, !dbg !9814
  %4 = lshr i32 %3, 3, !dbg !9815
  %5 = and i32 %4, 1, !dbg !9815
  ret i32 %5, !dbg !9816
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9817 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9819, metadata !DIExpression()), !dbg !9821
  %3 = bitcast i32* %2 to i8*, !dbg !9822
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9822
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9820, metadata !DIExpression()), !dbg !9823
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9824
  %5 = load volatile i32, i32* %4, align 4, !dbg !9824
  store volatile i32 %5, i32* %2, align 4, !dbg !9825
  %6 = load volatile i32, i32* %2, align 4, !dbg !9826
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9827
  %8 = load volatile i32, i32* %7, align 4, !dbg !9827
  store volatile i32 %8, i32* %2, align 4, !dbg !9828
  %9 = load volatile i32, i32* %2, align 4, !dbg !9829
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9830
  ret void, !dbg !9830
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !9831 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9835, metadata !DIExpression()), !dbg !9837
  call void @llvm.dbg.value(metadata i8 %1, metadata !9836, metadata !DIExpression()), !dbg !9837
  %3 = zext i8 %1 to i32, !dbg !9838
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9839
  store volatile i32 %3, i32* %4, align 4, !dbg !9840
  ret void, !dbg !9841
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9842 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9846, metadata !DIExpression()), !dbg !9848
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9849
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9849
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9849
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9847, metadata !DIExpression()), !dbg !9848
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9850
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9850
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !9851
  ret i32 %7, !dbg !9852
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #11 !dbg !9853 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9857, metadata !DIExpression()), !dbg !9858
  %2 = icmp eq i32 %0, 1024, !dbg !9859
  %3 = select i1 %2, i32 2, i32 0, !dbg !9859
  %4 = icmp eq i32 %0, 1536, !dbg !9859
  %5 = select i1 %4, i32 1, i32 %3, !dbg !9859
  ret i32 %5, !dbg !9860
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9861 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9863, metadata !DIExpression()), !dbg !9865
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9866
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9866
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9866
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9864, metadata !DIExpression()), !dbg !9865
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9867
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9867
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !9868
  ret i32 %7, !dbg !9869
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !9870 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9874, metadata !DIExpression()), !dbg !9875
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !9876
  %3 = icmp ult i32 %2, 4, !dbg !9876
  br i1 %3, label %4, label %7, !dbg !9876

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !9876
  %6 = load i32, i32* %5, align 4, !dbg !9876
  br label %7, !dbg !9876

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !9877
  ret i32 %8, !dbg !9879
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9880 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9882, metadata !DIExpression()), !dbg !9884
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9885
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9885
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9885
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9883, metadata !DIExpression()), !dbg !9884
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9886
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9886
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !9887
  ret i32 %7, !dbg !9888
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !9889 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9893, metadata !DIExpression()), !dbg !9895
  call void @llvm.dbg.value(metadata i32 %1, metadata !9894, metadata !DIExpression()), !dbg !9895
  %3 = icmp eq i32 %0, 4096, !dbg !9896
  %4 = icmp eq i32 %1, 0, !dbg !9896
  %5 = select i1 %4, i32 4, i32 3, !dbg !9896
  %6 = select i1 %4, i32 3, i32 2, !dbg !9896
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !9896
  ret i32 %7, !dbg !9897
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9898 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9900, metadata !DIExpression()), !dbg !9902
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9903
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9903
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9903
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9901, metadata !DIExpression()), !dbg !9902
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9904
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9904
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !9905
  ret i32 %7, !dbg !9906
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !9907 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9911, metadata !DIExpression()), !dbg !9912
  %2 = icmp eq i32 %0, 768, !dbg !9913
  %3 = zext i1 %2 to i32, !dbg !9912
  ret i32 %3, !dbg !9915
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9916 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9918, metadata !DIExpression()), !dbg !9919
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9920
  %3 = load volatile i32, i32* %2, align 4, !dbg !9920
  %4 = and i32 %3, 768, !dbg !9920
  ret i32 %4, !dbg !9921
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9922 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9924, metadata !DIExpression()), !dbg !9925
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9926
  %3 = load volatile i32, i32* %2, align 4, !dbg !9926
  %4 = and i32 %3, 4096, !dbg !9926
  ret i32 %4, !dbg !9927
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9928 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9930, metadata !DIExpression()), !dbg !9931
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9932
  %3 = load volatile i32, i32* %2, align 4, !dbg !9932
  %4 = and i32 %3, 12288, !dbg !9932
  ret i32 %4, !dbg !9933
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9934 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9936, metadata !DIExpression()), !dbg !9937
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9938
  %3 = load volatile i32, i32* %2, align 4, !dbg !9938
  %4 = and i32 %3, 1536, !dbg !9938
  ret i32 %4, !dbg !9939
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #11 !dbg !9940 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9944, metadata !DIExpression()), !dbg !9945
  %2 = icmp eq i32 %0, 2, !dbg !9946
  %3 = select i1 %2, i32 1024, i32 0, !dbg !9946
  %4 = icmp eq i32 %0, 1, !dbg !9946
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !9946
  ret i32 %5, !dbg !9947
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !9948 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9952, metadata !DIExpression()), !dbg !9953
  %2 = icmp ult i32 %0, 3, !dbg !9954
  br i1 %2, label %3, label %6, !dbg !9954

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !9954
  %5 = load i32, i32* %4, align 4, !dbg !9954
  br label %6, !dbg !9954

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !9955
  ret i32 %7, !dbg !9957
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !9958 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9962, metadata !DIExpression()), !dbg !9964
  call void @llvm.dbg.value(metadata i32 %1, metadata !9963, metadata !DIExpression()), !dbg !9964
  %3 = icmp eq i32 %0, 4, !dbg !9965
  %4 = icmp eq i32 %1, 0, !dbg !9965
  %5 = select i1 %4, i32 0, i32 4096, !dbg !9965
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !9965
  ret i32 %6, !dbg !9966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !9967 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9971, metadata !DIExpression()), !dbg !9972
  %2 = icmp eq i32 %0, 1, !dbg !9973
  %3 = select i1 %2, i32 768, i32 0, !dbg !9972
  ret i32 %3, !dbg !9975
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9976 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9978, metadata !DIExpression()), !dbg !9979
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9980
  %3 = load volatile i32, i32* %2, align 4, !dbg !9980
  %4 = and i32 %3, -8193, !dbg !9980
  store volatile i32 %4, i32* %2, align 4, !dbg !9980
  ret void, !dbg !9981
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9982 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9986, metadata !DIExpression()), !dbg !9989
  call void @llvm.dbg.value(metadata i32 %1, metadata !9987, metadata !DIExpression()), !dbg !9989
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9990
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9990
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9990
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9988, metadata !DIExpression()), !dbg !9989
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9991
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9991
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9992
  ret void, !dbg !9993
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9994 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9996, metadata !DIExpression()), !dbg !9999
  call void @llvm.dbg.value(metadata i32 %1, metadata !9997, metadata !DIExpression()), !dbg !9999
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10000
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10000
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10000
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9998, metadata !DIExpression()), !dbg !9999
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10001
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10001
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !10002
  ret void, !dbg !10003
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10004 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10006, metadata !DIExpression()), !dbg !10009
  call void @llvm.dbg.value(metadata i32 %1, metadata !10007, metadata !DIExpression()), !dbg !10009
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10010
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10010
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10010
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10008, metadata !DIExpression()), !dbg !10009
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10011
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10011
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !10012
  ret void, !dbg !10013
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10014 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10016, metadata !DIExpression()), !dbg !10019
  call void @llvm.dbg.value(metadata i32 %1, metadata !10017, metadata !DIExpression()), !dbg !10019
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10020
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10020
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10020
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10018, metadata !DIExpression()), !dbg !10019
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10021
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10021
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !10022
  ret void, !dbg !10023
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !10024 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10026, metadata !DIExpression()), !dbg !10031
  call void @llvm.dbg.value(metadata i32 %1, metadata !10027, metadata !DIExpression()), !dbg !10031
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10032
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10032
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10032
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10028, metadata !DIExpression()), !dbg !10031
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10033
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !10033
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !10033
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !10029, metadata !DIExpression()), !dbg !10031
  %10 = bitcast i32* %3 to i8*, !dbg !10034
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !10034
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !10035
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !10035
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !10039
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10039
  %15 = load i8*, i8** %14, align 4, !dbg !10039
  call void @llvm.dbg.value(metadata i32* %3, metadata !10030, metadata !DIExpression(DW_OP_deref)), !dbg !10031
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !10040
  %17 = icmp slt i32 %16, 0, !dbg !10041
  br i1 %17, label %23, label %18, !dbg !10042

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10043
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !10043
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #26, !dbg !10044
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !10045
  %22 = load i32, i32* %3, align 4, !dbg !10046
  call void @llvm.dbg.value(metadata i32 %22, metadata !10030, metadata !DIExpression()), !dbg !10031
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #26, !dbg !10047
  br label %23, !dbg !10048

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !10048
  ret void, !dbg !10048
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10049 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10051, metadata !DIExpression()), !dbg !10052
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10053
  %3 = load volatile i32, i32* %2, align 4, !dbg !10053
  %4 = or i32 %3, 8192, !dbg !10053
  store volatile i32 %4, i32* %2, align 4, !dbg !10053
  ret void, !dbg !10054
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !10055 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10057, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.value(metadata i8* %1, metadata !10058, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.value(metadata i32* %2, metadata !10059, metadata !DIExpression()), !dbg !10061
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10062
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !10062
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !10062
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !10060, metadata !DIExpression()), !dbg !10061
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !10063
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !10063
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !10065
  br i1 %9, label %12, label %10, !dbg !10066

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #27, !dbg !10067
  br label %12, !dbg !10068

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !10061
  ret i32 %13, !dbg !10069
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10070 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10074, metadata !DIExpression()), !dbg !10076
  call void @llvm.dbg.value(metadata i32 0, metadata !10075, metadata !DIExpression()), !dbg !10076
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10077
  %3 = load volatile i32, i32* %2, align 4, !dbg !10077
  %4 = and i32 %3, -32769, !dbg !10077
  store volatile i32 %4, i32* %2, align 4, !dbg !10077
  ret void, !dbg !10078
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10079 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10083, metadata !DIExpression()), !dbg !10087
  call void @llvm.dbg.value(metadata i32 %1, metadata !10084, metadata !DIExpression()), !dbg !10087
  call void @llvm.dbg.value(metadata i32 0, metadata !10085, metadata !DIExpression()), !dbg !10087
  call void @llvm.dbg.value(metadata i32 %2, metadata !10086, metadata !DIExpression()), !dbg !10087
  %4 = zext i32 %1 to i64, !dbg !10088
  %5 = mul nuw nsw i64 %4, 25, !dbg !10088
  %6 = zext i32 %2 to i64, !dbg !10088
  %7 = shl nuw nsw i64 %6, 2, !dbg !10088
  %8 = udiv i64 %5, %7, !dbg !10088
  %9 = trunc i64 %8 to i32, !dbg !10088
  %10 = udiv i32 %9, 100, !dbg !10088
  %11 = shl nuw nsw i32 %10, 4, !dbg !10088
  %12 = mul i32 %10, -100, !dbg !10088
  %13 = add i32 %12, %9, !dbg !10088
  %14 = shl i32 %13, 4, !dbg !10088
  %15 = add i32 %14, 50, !dbg !10088
  %16 = udiv i32 %15, 100, !dbg !10088
  %17 = and i32 %16, 240, !dbg !10088
  %18 = add nuw nsw i32 %17, %11, !dbg !10088
  %19 = and i32 %16, 15, !dbg !10088
  %20 = and i32 %18, 65520, !dbg !10091
  %21 = or i32 %20, %19, !dbg !10091
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !10092
  store volatile i32 %21, i32* %22, align 4, !dbg !10093
  ret void, !dbg !10094
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10095 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10097, metadata !DIExpression()), !dbg !10099
  call void @llvm.dbg.value(metadata i32 %1, metadata !10098, metadata !DIExpression()), !dbg !10099
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10100
  %4 = load volatile i32, i32* %3, align 4, !dbg !10100
  %5 = and i32 %4, -769, !dbg !10100
  %6 = or i32 %5, %1, !dbg !10100
  store volatile i32 %6, i32* %3, align 4, !dbg !10100
  ret void, !dbg !10101
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10102 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10104, metadata !DIExpression()), !dbg !10106
  call void @llvm.dbg.value(metadata i32 %1, metadata !10105, metadata !DIExpression()), !dbg !10106
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10107
  %4 = load volatile i32, i32* %3, align 4, !dbg !10107
  %5 = and i32 %4, -4097, !dbg !10107
  %6 = or i32 %5, %1, !dbg !10107
  store volatile i32 %6, i32* %3, align 4, !dbg !10107
  ret void, !dbg !10108
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10109 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10111, metadata !DIExpression()), !dbg !10113
  call void @llvm.dbg.value(metadata i32 %1, metadata !10112, metadata !DIExpression()), !dbg !10113
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10114
  %4 = load volatile i32, i32* %3, align 4, !dbg !10114
  %5 = and i32 %4, -12289, !dbg !10114
  %6 = or i32 %5, %1, !dbg !10114
  store volatile i32 %6, i32* %3, align 4, !dbg !10114
  ret void, !dbg !10115
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10116 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10118, metadata !DIExpression()), !dbg !10120
  call void @llvm.dbg.value(metadata i32 %1, metadata !10119, metadata !DIExpression()), !dbg !10120
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10121
  %4 = load volatile i32, i32* %3, align 4, !dbg !10121
  %5 = and i32 %4, -1537, !dbg !10121
  %6 = or i32 %5, %1, !dbg !10121
  store volatile i32 %6, i32* %3, align 4, !dbg !10121
  ret void, !dbg !10122
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10123 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10125, metadata !DIExpression()), !dbg !10126
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10127
  %3 = load volatile i32, i32* %2, align 4, !dbg !10127
  %4 = and i32 %3, 1, !dbg !10127
  ret i32 %4, !dbg !10128
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10129 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10131, metadata !DIExpression()), !dbg !10132
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10133
  %3 = load volatile i32, i32* %2, align 4, !dbg !10133
  %4 = lshr i32 %3, 1, !dbg !10134
  %5 = and i32 %4, 1, !dbg !10134
  ret i32 %5, !dbg !10135
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10136 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10138, metadata !DIExpression()), !dbg !10139
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10140
  %3 = load volatile i32, i32* %2, align 4, !dbg !10140
  %4 = lshr i32 %3, 8, !dbg !10141
  %5 = and i32 %4, 1, !dbg !10141
  ret i32 %5, !dbg !10142
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10143 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10145, metadata !DIExpression()), !dbg !10146
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10147
  store volatile i32 -257, i32* %2, align 4, !dbg !10147
  ret void, !dbg !10148
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10149 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10151, metadata !DIExpression()), !dbg !10153
  %3 = bitcast i32* %2 to i8*, !dbg !10154
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10154
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10152, metadata !DIExpression()), !dbg !10155
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10156
  %5 = load volatile i32, i32* %4, align 4, !dbg !10156
  store volatile i32 %5, i32* %2, align 4, !dbg !10157
  %6 = load volatile i32, i32* %2, align 4, !dbg !10158
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10159
  %8 = load volatile i32, i32* %7, align 4, !dbg !10159
  store volatile i32 %8, i32* %2, align 4, !dbg !10160
  %9 = load volatile i32, i32* %2, align 4, !dbg !10161
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10162
  ret void, !dbg !10162
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10163 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10165, metadata !DIExpression()), !dbg !10167
  %3 = bitcast i32* %2 to i8*, !dbg !10168
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10168
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10166, metadata !DIExpression()), !dbg !10169
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10170
  %5 = load volatile i32, i32* %4, align 4, !dbg !10170
  store volatile i32 %5, i32* %2, align 4, !dbg !10171
  %6 = load volatile i32, i32* %2, align 4, !dbg !10172
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10173
  %8 = load volatile i32, i32* %7, align 4, !dbg !10173
  store volatile i32 %8, i32* %2, align 4, !dbg !10174
  %9 = load volatile i32, i32* %2, align 4, !dbg !10175
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10176
  ret void, !dbg !10176
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10177 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10179, metadata !DIExpression()), !dbg !10181
  %3 = bitcast i32* %2 to i8*, !dbg !10182
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10182
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10180, metadata !DIExpression()), !dbg !10183
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10184
  %5 = load volatile i32, i32* %4, align 4, !dbg !10184
  store volatile i32 %5, i32* %2, align 4, !dbg !10185
  %6 = load volatile i32, i32* %2, align 4, !dbg !10186
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10187
  %8 = load volatile i32, i32* %7, align 4, !dbg !10187
  store volatile i32 %8, i32* %2, align 4, !dbg !10188
  %9 = load volatile i32, i32* %2, align 4, !dbg !10189
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10190
  ret void, !dbg !10190
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1560 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1562, metadata !DIExpression()), !dbg !10191
  tail call void @z_arm_irq_priority_set(i32 noundef 39, i32 noundef 0, i32 noundef 0) #27, !dbg !10192
  tail call void @arch_irq_enable(i32 noundef 39) #27, !dbg !10194
  ret void, !dbg !10194
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_isr(%struct.device* noundef %0) #1 !dbg !10195 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10197, metadata !DIExpression()), !dbg !10199
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10200
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10200
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10200
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10198, metadata !DIExpression()), !dbg !10199
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 2, !dbg !10201
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !10201
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !10203
  br i1 %7, label %11, label %8, !dbg !10204

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 3, !dbg !10205
  %10 = load i8*, i8** %9, align 4, !dbg !10205
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #27, !dbg !10207
  br label %11, !dbg !10208

11:                                               ; preds = %8, %1
  ret void, !dbg !10209
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* noundef %0) #1 !dbg !10210 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10212, metadata !DIExpression()), !dbg !10218
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10219
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10219
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10219
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10213, metadata !DIExpression()), !dbg !10218
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10220
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10220
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10220
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10214, metadata !DIExpression()), !dbg !10218
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !10221
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10222
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10222
  %10 = tail call fastcc zeroext i1 @device_is_ready.59(%struct.device* noundef %9) #26, !dbg !10224
  br i1 %10, label %11, label %51, !dbg !10225

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !10226
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10227
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10227
  %15 = load i8*, i8** %14, align 4, !dbg !10227
  %16 = tail call fastcc i32 @clock_control_on.60(%struct.device* noundef %12, i8* noundef %15) #26, !dbg !10228
  call void @llvm.dbg.value(metadata i32 %16, metadata !10217, metadata !DIExpression()), !dbg !10218
  %17 = icmp eq i32 %16, 0, !dbg !10229
  br i1 %17, label %18, label %51, !dbg !10231

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10232
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !10232
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #26, !dbg !10233
  call void @llvm.dbg.value(metadata i32 %21, metadata !10217, metadata !DIExpression()), !dbg !10218
  %22 = icmp slt i32 %21, 0, !dbg !10234
  br i1 %22, label %51, label %23, !dbg !10236

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10237
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10237
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #26, !dbg !10238
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10239
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #26, !dbg !10240
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10241
  %28 = load i32, i32* %27, align 4, !dbg !10241
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !10243

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !10215, metadata !DIExpression()), !dbg !10218
  call void @llvm.dbg.value(metadata i32 4096, metadata !10216, metadata !DIExpression()), !dbg !10218
  br label %31, !dbg !10244

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !10215, metadata !DIExpression()), !dbg !10218
  call void @llvm.dbg.value(metadata i32 0, metadata !10216, metadata !DIExpression()), !dbg !10218
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !10247
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !10247
  call void @llvm.dbg.value(metadata i32 %33, metadata !10216, metadata !DIExpression()), !dbg !10218
  call void @llvm.dbg.value(metadata i32 %32, metadata !10215, metadata !DIExpression()), !dbg !10218
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10248
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #26, !dbg !10249
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10250
  %36 = load i8, i8* %35, align 4, !dbg !10250, !range !6432
  %37 = icmp eq i8 %36, 0, !dbg !10250
  br i1 %37, label %39, label %38, !dbg !10252

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !10253
  br label %39, !dbg !10255

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10256
  %41 = load i32, i32* %40, align 4, !dbg !10256
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #26, !dbg !10257
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10258
  %43 = load i8, i8* %42, align 4, !dbg !10258, !range !6432
  %44 = icmp eq i8 %43, 0, !dbg !10258
  br i1 %44, label %47, label %45, !dbg !10260

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10261
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #26, !dbg !10263
  br label %47, !dbg !10264

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10265
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #26, !dbg !10266
  %49 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 10, !dbg !10267
  %50 = load void (%struct.device*)*, void (%struct.device*)** %49, align 4, !dbg !10267
  tail call void %50(%struct.device* noundef nonnull %0) #27, !dbg !10268
  br label %51, !dbg !10269

51:                                               ; preds = %18, %11, %1, %47
  %52 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !10218
  ret i32 %52, !dbg !10270
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !10271 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10273, metadata !DIExpression()), !dbg !10277
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10278
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10278
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10278
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10274, metadata !DIExpression()), !dbg !10277
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10275, metadata !DIExpression()), !dbg !10277
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10279
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !10280
  ret void, !dbg !10281
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.59(%struct.device* noundef %0) unnamed_addr #1 !dbg !10282 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10286, metadata !DIExpression()), !dbg !10287
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10288, !srcloc !10290
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.61(%struct.device* noundef %0) #26, !dbg !10291
  ret i1 %2, !dbg !10292
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.60(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10293 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10295, metadata !DIExpression()), !dbg !10298
  call void @llvm.dbg.value(metadata i8* %1, metadata !10296, metadata !DIExpression()), !dbg !10298
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10299
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10299
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10299
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10297, metadata !DIExpression()), !dbg !10298
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10300
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10300
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #27, !dbg !10301
  ret i32 %8, !dbg !10302
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10303 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10307, metadata !DIExpression()), !dbg !10311
  call void @llvm.dbg.value(metadata i8 0, metadata !10308, metadata !DIExpression()), !dbg !10311
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10312
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10312
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10310, metadata !DIExpression(DW_OP_deref)), !dbg !10311
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #27, !dbg !10313
  call void @llvm.dbg.value(metadata i32 %4, metadata !10309, metadata !DIExpression()), !dbg !10311
  %5 = icmp slt i32 %4, 0, !dbg !10314
  br i1 %5, label %9, label %6, !dbg !10316

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10317
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10310, metadata !DIExpression()), !dbg !10311
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !10318
  br label %9, !dbg !10319

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10311
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10320
  ret i32 %10, !dbg !10320
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10321 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10323, metadata !DIExpression()), !dbg !10327
  call void @llvm.dbg.value(metadata i32 12, metadata !10324, metadata !DIExpression()), !dbg !10327
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10328

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9630, metadata !DIExpression()) #25, !dbg !10329
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10332, !srcloc !9640
  call void @llvm.dbg.value(metadata i32 %4, metadata !9635, metadata !DIExpression()) #25, !dbg !10329
  %5 = or i32 %4, 12, !dbg !10333
  call void @llvm.dbg.value(metadata i32 %5, metadata !10325, metadata !DIExpression()), !dbg !10334
  call void @llvm.dbg.value(metadata i32 %5, metadata !9643, metadata !DIExpression()) #25, !dbg !10335
  call void @llvm.dbg.value(metadata i32* %2, metadata !9648, metadata !DIExpression()) #25, !dbg !10335
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10337, !srcloc !9653
  call void @llvm.dbg.value(metadata i32 %6, metadata !9649, metadata !DIExpression()) #25, !dbg !10335
  %7 = icmp eq i32 %6, 0, !dbg !10328
  br i1 %7, label %8, label %3, !dbg !10333, !llvm.loop !10338

8:                                                ; preds = %3
  ret void, !dbg !10339
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10340 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10342, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.value(metadata i32 %1, metadata !10343, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.value(metadata i32 %2, metadata !10344, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.value(metadata i32 0, metadata !10345, metadata !DIExpression()), !dbg !10346
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10347
  %5 = load volatile i32, i32* %4, align 4, !dbg !10347
  %6 = and i32 %5, -5633, !dbg !10347
  %7 = or i32 %2, %1, !dbg !10347
  %8 = or i32 %7, %6, !dbg !10347
  store volatile i32 %8, i32* %4, align 4, !dbg !10347
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10348
  %10 = load volatile i32, i32* %9, align 4, !dbg !10348
  %11 = and i32 %10, -12289, !dbg !10348
  store volatile i32 %11, i32* %9, align 4, !dbg !10348
  ret void, !dbg !10349
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10350 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10352, metadata !DIExpression()), !dbg !10353
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10354
  %3 = load volatile i32, i32* %2, align 4, !dbg !10354
  %4 = or i32 %3, 8, !dbg !10354
  store volatile i32 %4, i32* %2, align 4, !dbg !10354
  ret void, !dbg !10355
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10356 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10360, metadata !DIExpression()), !dbg !10363
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10361, metadata !DIExpression()), !dbg !10363
  call void @llvm.dbg.value(metadata i32 0, metadata !10362, metadata !DIExpression()), !dbg !10363
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10364
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10364
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10365
  %5 = load i8, i8* %4, align 4, !dbg !10365
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #27, !dbg !10366
  ret i32 %6, !dbg !10367
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.61(%struct.device* noundef %0) unnamed_addr #1 !dbg !10368 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10370, metadata !DIExpression()), !dbg !10371
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !10372
  ret i1 %2, !dbg !10373
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !10374 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10376, metadata !DIExpression()), !dbg !10377
  tail call fastcc void @__NVIC_SetPriority.63() #26, !dbg !10378
  store i32 16799, i32* @last_load, align 4, !dbg !10379
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10380
  store volatile i32 16799, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10381
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10382
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10383
  %3 = or i32 %2, 7, !dbg !10383
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10383
  ret i32 0, !dbg !10384
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.63() unnamed_addr #15 !dbg !10385 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10387, metadata !DIExpression()), !dbg !10389
  call void @llvm.dbg.value(metadata i32 1, metadata !10388, metadata !DIExpression()), !dbg !10389
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10390
  ret void, !dbg !10393
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10394 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10396, metadata !DIExpression()), !dbg !10398
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !10399
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10400
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10401
  %5 = add i32 %4, %3, !dbg !10401
  store i32 %5, i32* @cycle_count, align 4, !dbg !10401
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10402
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10403
  %7 = sub i32 %5, %6, !dbg !10406
  %8 = udiv i32 %7, 16800, !dbg !10407
  call void @llvm.dbg.value(metadata i32 %8, metadata !10397, metadata !DIExpression()), !dbg !10398
  %9 = mul nuw i32 %8, 16800, !dbg !10408
  %10 = add i32 %9, %6, !dbg !10409
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10409
  tail call void @sys_clock_announce(i32 noundef %8) #27, !dbg !10410
  tail call void @z_arm_int_exit() #27, !dbg !10411
  ret void, !dbg !10412
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !10413 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10418
  call void @llvm.dbg.value(metadata i32 %1, metadata !10415, metadata !DIExpression()), !dbg !10419
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10420
  call void @llvm.dbg.value(metadata i32 %2, metadata !10416, metadata !DIExpression()), !dbg !10419
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10421
  call void @llvm.dbg.value(metadata i32 %3, metadata !10417, metadata !DIExpression()), !dbg !10419
  %4 = and i32 %2, 65536, !dbg !10422
  %5 = icmp ne i32 %4, 0, !dbg !10422
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10424
  %8 = load i32, i32* @last_load, align 4, !dbg !10419
  br i1 %7, label %9, label %13, !dbg !10424

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10425
  %11 = add i32 %10, %8, !dbg !10425
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10425
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10427
  br label %13, !dbg !10428

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10429
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10430
  %16 = add i32 %14, %15, !dbg !10431
  ret i32 %16, !dbg !10432
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10433 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10437, metadata !DIExpression()), !dbg !10450
  call void @llvm.dbg.value(metadata i1 %1, metadata !10438, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10450
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10451
  br i1 %4, label %5, label %8, !dbg !10451

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10453
  %7 = and i32 %6, -2, !dbg !10453
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10453
  store i32 -16777216, i32* @last_load, align 4, !dbg !10455
  br label %54, !dbg !10456

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10457
  call void @llvm.dbg.value(metadata i32 %9, metadata !10442, metadata !DIExpression()), !dbg !10450
  br i1 %3, label %18, label %10, !dbg !10458

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10458
  call void @llvm.dbg.value(metadata i32 undef, metadata !10437, metadata !DIExpression()), !dbg !10450
  %12 = icmp slt i32 %11, 1, !dbg !10459
  br i1 %12, label %18, label %13, !dbg !10459

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 997, !dbg !10459
  %15 = select i1 %14, i32 %11, i32 997, !dbg !10459
  %16 = mul nuw nsw i32 %15, 16800, !dbg !10459
  %17 = add nuw nsw i32 %16, 16799, !dbg !10459
  br label %18, !dbg !10459

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 16799, %10 ], [ 16749599, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10437, metadata !DIExpression()), !dbg !10450
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10460, metadata !DIExpression()) #25, !dbg !10467
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10469, !srcloc !10475
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !10469
  call void @llvm.dbg.value(metadata i32 %21, metadata !10472, metadata !DIExpression()) #25, !dbg !10476
  call void @llvm.dbg.value(metadata i32 undef, metadata !10473, metadata !DIExpression()) #25, !dbg !10476
  call void @llvm.dbg.value(metadata i32 %21, metadata !10466, metadata !DIExpression()) #25, !dbg !10467
  call void @llvm.dbg.value(metadata i32 %21, metadata !10443, metadata !DIExpression()), !dbg !10450
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !10477
  call void @llvm.dbg.value(metadata i32 %22, metadata !10448, metadata !DIExpression()), !dbg !10450
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10478
  call void @llvm.dbg.value(metadata i32 %23, metadata !10440, metadata !DIExpression()), !dbg !10450
  %24 = load i32, i32* @cycle_count, align 4, !dbg !10479
  %25 = add i32 %24, %22, !dbg !10479
  store i32 %25, i32* @cycle_count, align 4, !dbg !10479
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10480
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !10481
  %27 = sub i32 %25, %26, !dbg !10482
  call void @llvm.dbg.value(metadata i32 %27, metadata !10449, metadata !DIExpression()), !dbg !10450
  %28 = icmp slt i32 %27, 0, !dbg !10483
  br i1 %28, label %38, label %29, !dbg !10485

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !10439, metadata !DIExpression()), !dbg !10450
  call void @llvm.dbg.value(metadata i32 undef, metadata !10439, metadata !DIExpression()), !dbg !10450
  %30 = add nuw i32 %19, %27, !dbg !10486
  %31 = urem i32 %30, 16800, !dbg !10488
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !10439, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10450
  %32 = sub nuw nsw i32 %19, %31, !dbg !10489
  call void @llvm.dbg.value(metadata i32 %32, metadata !10439, metadata !DIExpression()), !dbg !10450
  %33 = icmp ugt i32 %32, 1050, !dbg !10490
  br i1 %33, label %34, label %36, !dbg !10490

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !10439, metadata !DIExpression()), !dbg !10450
  %35 = icmp ugt i32 %32, 16749600, !dbg !10491
  br i1 %35, label %38, label %36, !dbg !10493

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1050, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1050, %18 ], [ 16749600, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !10494
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10495
  call void @llvm.dbg.value(metadata i32 %40, metadata !10441, metadata !DIExpression()), !dbg !10450
  %41 = add nsw i32 %39, -1, !dbg !10496
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10497
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10498
  %42 = icmp ult i32 %23, %40, !dbg !10499
  br i1 %42, label %43, label %48, !dbg !10501

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !10502
  %45 = add i32 %23, %9, !dbg !10504
  %46 = sub i32 %45, %40, !dbg !10505
  %47 = add i32 %46, %44, !dbg !10502
  br label %52, !dbg !10506

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !10507
  %50 = load i32, i32* @cycle_count, align 4, !dbg !10509
  %51 = add i32 %49, %50, !dbg !10509
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !10510
  store i32 %53, i32* @cycle_count, align 4, !dbg !10510
  call void @llvm.dbg.value(metadata i32 %21, metadata !10511, metadata !DIExpression()) #25, !dbg !10517
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10516, metadata !DIExpression()) #25, !dbg !10517
  call void @llvm.dbg.value(metadata i32 %21, metadata !10519, metadata !DIExpression()) #25, !dbg !10522
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #25, !dbg !10524, !srcloc !10525
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !10526
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10527 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10460, metadata !DIExpression()) #25, !dbg !10531
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10533, !srcloc !10475
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10533
  call void @llvm.dbg.value(metadata i32 %2, metadata !10472, metadata !DIExpression()) #25, !dbg !10535
  call void @llvm.dbg.value(metadata i32 undef, metadata !10473, metadata !DIExpression()) #25, !dbg !10535
  call void @llvm.dbg.value(metadata i32 %2, metadata !10466, metadata !DIExpression()) #25, !dbg !10531
  call void @llvm.dbg.value(metadata i32 %2, metadata !10529, metadata !DIExpression()), !dbg !10536
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !10537
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10538
  %5 = add i32 %4, %3, !dbg !10539
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10540
  %7 = sub i32 %5, %6, !dbg !10541
  call void @llvm.dbg.value(metadata i32 %7, metadata !10530, metadata !DIExpression()), !dbg !10536
  call void @llvm.dbg.value(metadata i32 %2, metadata !10511, metadata !DIExpression()) #25, !dbg !10542
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10516, metadata !DIExpression()) #25, !dbg !10542
  call void @llvm.dbg.value(metadata i32 %2, metadata !10519, metadata !DIExpression()) #25, !dbg !10544
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !10546, !srcloc !10525
  %8 = udiv i32 %7, 16800, !dbg !10547
  ret i32 %8, !dbg !10548
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10549 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10460, metadata !DIExpression()) #25, !dbg !10553
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10555, !srcloc !10475
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10555
  call void @llvm.dbg.value(metadata i32 %2, metadata !10472, metadata !DIExpression()) #25, !dbg !10557
  call void @llvm.dbg.value(metadata i32 undef, metadata !10473, metadata !DIExpression()) #25, !dbg !10557
  call void @llvm.dbg.value(metadata i32 %2, metadata !10466, metadata !DIExpression()) #25, !dbg !10553
  call void @llvm.dbg.value(metadata i32 %2, metadata !10551, metadata !DIExpression()), !dbg !10558
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !10559
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10560
  %5 = add i32 %4, %3, !dbg !10561
  call void @llvm.dbg.value(metadata i32 %5, metadata !10552, metadata !DIExpression()), !dbg !10558
  call void @llvm.dbg.value(metadata i32 %2, metadata !10511, metadata !DIExpression()) #25, !dbg !10562
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10516, metadata !DIExpression()) #25, !dbg !10562
  call void @llvm.dbg.value(metadata i32 %2, metadata !10519, metadata !DIExpression()) #25, !dbg !10564
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !10566, !srcloc !10525
  ret i32 %5, !dbg !10567
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !10568 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10569
  %2 = icmp eq i32 %1, -16777216, !dbg !10571
  br i1 %2, label %3, label %6, !dbg !10572

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10573
  %5 = or i32 %4, 1, !dbg !10573
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10573
  br label %6, !dbg !10575

6:                                                ; preds = %3, %0
  ret void, !dbg !10576
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !10577 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10578
  %2 = and i32 %1, -2, !dbg !10578
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10578
  ret void, !dbg !10579
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !10580 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10606, metadata !DIExpression()), !dbg !10609
  call void @llvm.dbg.value(metadata i8 %1, metadata !10607, metadata !DIExpression()), !dbg !10609
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10608, metadata !DIExpression()), !dbg !10609
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10610
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10610
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10609
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10611
  %8 = load i8, i8* %6, align 4, !dbg !10612
  %9 = zext i8 %8 to i32, !dbg !10613
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10613
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10614
  br i1 %11, label %18, label %24, !dbg !10615

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10609
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10611
  %14 = load i8, i8* %6, align 4, !dbg !10612
  %15 = zext i8 %14 to i32, !dbg !10613
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10613
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10614
  br i1 %17, label %18, label %24, !dbg !10615, !llvm.loop !10616

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10618
  %21 = load i8, i8* %20, align 1, !dbg !10618
  %22 = icmp eq i8 %21, %1, !dbg !10621
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10622
  br i1 %22, label %24, label %12, !dbg !10623

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10609
  ret i32 %25, !dbg !10624
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10625 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10636, metadata !DIExpression()), !dbg !10652
  call void @llvm.dbg.value(metadata i8 %1, metadata !10637, metadata !DIExpression()), !dbg !10652
  call void @llvm.dbg.value(metadata i32 %2, metadata !10638, metadata !DIExpression()), !dbg !10652
  call void @llvm.dbg.value(metadata i32 0, metadata !10641, metadata !DIExpression()), !dbg !10652
  call void @llvm.dbg.value(metadata i32 0, metadata !10642, metadata !DIExpression()), !dbg !10652
  call void @llvm.dbg.value(metadata i8 0, metadata !10643, metadata !DIExpression()), !dbg !10653
  %4 = icmp eq i8 %1, 0, !dbg !10654
  br i1 %4, label %35, label %5, !dbg !10655

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10654
  br label %9, !dbg !10655

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !10643, metadata !DIExpression()), !dbg !10653
  call void @llvm.dbg.value(metadata i32 %29, metadata !10641, metadata !DIExpression()), !dbg !10652
  %8 = icmp eq i32 %34, %6, !dbg !10654
  br i1 %8, label %35, label %9, !dbg !10655, !llvm.loop !10656

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10643, metadata !DIExpression()), !dbg !10653
  call void @llvm.dbg.value(metadata i32 %11, metadata !10641, metadata !DIExpression()), !dbg !10652
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !10658
  %13 = load i32, i32* %12, align 4, !dbg !10658
  call void @llvm.dbg.value(metadata i32 %13, metadata !10640, metadata !DIExpression()), !dbg !10652
  %14 = and i32 %13, 31, !dbg !10659
  %15 = icmp ult i32 %14, 16, !dbg !10660
  br i1 %15, label %16, label %20, !dbg !10661

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10662
  %18 = load i32, i32* %17, align 4, !dbg !10662
  %19 = or i32 %18, 32, !dbg !10664
  call void @llvm.dbg.value(metadata i32 %19, metadata !10641, metadata !DIExpression()), !dbg !10652
  br label %28, !dbg !10665

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !10666

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10667
  %23 = load i32, i32* %22, align 4, !dbg !10667
  call void @llvm.dbg.value(metadata i32 %23, metadata !10645, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !10668
  %24 = lshr i32 %23, 7, !dbg !10669
  %25 = and i32 %24, 16, !dbg !10669
  %26 = or i32 %25, %23, !dbg !10669
  call void @llvm.dbg.value(metadata i32 %26, metadata !10641, metadata !DIExpression()), !dbg !10652
  br label %28, !dbg !10670

27:                                               ; preds = %20
  br label %28, !dbg !10671

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !10652
  call void @llvm.dbg.value(metadata i32 %29, metadata !10641, metadata !DIExpression()), !dbg !10652
  %30 = lshr i32 %13, 5, !dbg !10671
  %31 = and i32 %30, 255, !dbg !10671
  call void @llvm.dbg.value(metadata i32 %31, metadata !10639, metadata !DIExpression()), !dbg !10652
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !10672
  call void @llvm.dbg.value(metadata i32 %32, metadata !10642, metadata !DIExpression()), !dbg !10652
  %33 = icmp slt i32 %32, 0, !dbg !10673
  %34 = add nuw nsw i32 %10, 1, !dbg !10675
  call void @llvm.dbg.value(metadata i32 %34, metadata !10643, metadata !DIExpression()), !dbg !10653
  br i1 %33, label %35, label %7, !dbg !10676

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !10677
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10678 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10682, metadata !DIExpression()), !dbg !10686
  call void @llvm.dbg.value(metadata i32 %1, metadata !10683, metadata !DIExpression()), !dbg !10686
  call void @llvm.dbg.value(metadata i32 %2, metadata !10684, metadata !DIExpression()), !dbg !10686
  %4 = icmp ugt i32 %0, 175, !dbg !10687
  br i1 %4, label %16, label %5, !dbg !10689

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !10690
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !10691
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !10691
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10685, metadata !DIExpression()), !dbg !10686
  %9 = add nsw i32 %6, -9, !dbg !10692
  %10 = icmp ult i32 %9, 2, !dbg !10692
  br i1 %10, label %16, label %11, !dbg !10694

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.68(%struct.device* noundef %8) #26, !dbg !10695
  br i1 %12, label %13, label %16, !dbg !10696

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !10697
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #27, !dbg !10698
  br label %16, !dbg !10699

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !10686
  ret i32 %17, !dbg !10700
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.68(%struct.device* noundef %0) unnamed_addr #1 !dbg !10701 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10705, metadata !DIExpression()), !dbg !10706
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10707, !srcloc !10709
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.69(%struct.device* noundef %0) #26, !dbg !10710
  ret i1 %2, !dbg !10711
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.69(%struct.device* noundef %0) unnamed_addr #1 !dbg !10712 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10714, metadata !DIExpression()), !dbg !10715
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !10716
  ret i1 %2, !dbg !10717
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #11 !dbg !10718 {
  ret void, !dbg !10719
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !10720 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10722, metadata !DIExpression()), !dbg !10727
  call void @llvm.dbg.value(metadata i32 0, metadata !10723, metadata !DIExpression()), !dbg !10727
  call void @llvm.dbg.value(metadata i32 2, metadata !10724, metadata !DIExpression()), !dbg !10727
  call void @llvm.dbg.value(metadata i32 0, metadata !10725, metadata !DIExpression()), !dbg !10727
  call void @llvm.dbg.value(metadata i32 2, metadata !10726, metadata !DIExpression()), !dbg !10727
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10728
  %2 = and i32 %1, 12, !dbg !10729
  call void @llvm.dbg.value(metadata i32 %2, metadata !10722, metadata !DIExpression()), !dbg !10727
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !10730

3:                                                ; preds = %0
  br label %21, !dbg !10731

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10733
  call void @llvm.dbg.value(metadata i32 %5, metadata !10725, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !10727
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10734
  %7 = and i32 %6, 63, !dbg !10735
  call void @llvm.dbg.value(metadata i32 %7, metadata !10726, metadata !DIExpression()), !dbg !10727
  %8 = and i32 %5, 4194304, !dbg !10736
  %9 = icmp eq i32 %8, 0, !dbg !10736
  %10 = select i1 %9, i32 16000000, i32 12000000
  %11 = udiv i32 %10, %7, !dbg !10738
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10738
  %13 = lshr i32 %12, 6, !dbg !10738
  %14 = and i32 %13, 511, !dbg !10738
  %15 = mul i32 %14, %11, !dbg !10738
  call void @llvm.dbg.value(metadata i32 %15, metadata !10723, metadata !DIExpression()), !dbg !10727
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10739
  %17 = lshr i32 %16, 15, !dbg !10740
  %18 = and i32 %17, 6, !dbg !10740
  %19 = add nuw nsw i32 %18, 2, !dbg !10740
  call void @llvm.dbg.value(metadata i32 %19, metadata !10724, metadata !DIExpression()), !dbg !10727
  %20 = udiv i32 %15, %19, !dbg !10741
  br label %21, !dbg !10742

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 12000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !10743
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10744
  %24 = lshr i32 %23, 4, !dbg !10745
  %25 = and i32 %24, 15, !dbg !10745
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !10746
  %27 = load i8, i8* %26, align 1, !dbg !10746
  %28 = zext i8 %27 to i32, !dbg !10746
  call void @llvm.dbg.value(metadata i32 %28, metadata !10722, metadata !DIExpression()), !dbg !10727
  %29 = lshr i32 %22, %28, !dbg !10747
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !10747
  ret void, !dbg !10748
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !10749 {
  ret i32 0, !dbg !10754
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !10755 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !10781, metadata !DIExpression()), !dbg !10792
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !10793
  br i1 %3, label %311, label %4, !dbg !10795

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !10796
  %6 = load i32, i32* %5, align 4, !dbg !10796
  %7 = and i32 %6, 1, !dbg !10798
  %8 = icmp eq i32 %7, 0, !dbg !10799
  br i1 %8, label %66, label %9, !dbg !10800

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10801
  %11 = and i32 %10, 12, !dbg !10801
  %12 = icmp eq i32 %11, 4, !dbg !10804
  br i1 %12, label %21, label %13, !dbg !10805

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10806
  %15 = and i32 %14, 12, !dbg !10806
  %16 = icmp eq i32 %15, 8, !dbg !10807
  br i1 %16, label %17, label %29, !dbg !10808

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10809
  %19 = and i32 %18, 4194304, !dbg !10810
  %20 = icmp eq i32 %19, 0, !dbg !10811
  br i1 %20, label %29, label %21, !dbg !10812

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10813
  %23 = and i32 %22, 131072, !dbg !10813
  %24 = icmp eq i32 %23, 0, !dbg !10813
  br i1 %24, label %66, label %25, !dbg !10816

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10817
  %27 = load i32, i32* %26, align 4, !dbg !10817
  %28 = icmp eq i32 %27, 0, !dbg !10818
  br i1 %28, label %311, label %66, !dbg !10819

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10820
  %31 = load i32, i32* %30, align 4, !dbg !10820
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !10824

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10825
  %34 = or i32 %33, 65536, !dbg !10825
  br label %45, !dbg !10825

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10827
  %37 = or i32 %36, 262144, !dbg !10827
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10827
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10827
  %39 = or i32 %38, 65536, !dbg !10827
  br label %45, !dbg !10827

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10830
  %42 = and i32 %41, -65537, !dbg !10830
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10830
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10830
  %44 = and i32 %43, -262145, !dbg !10830
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10832
  %47 = load i32, i32* %30, align 4, !dbg !10833
  %48 = icmp eq i32 %47, 0, !dbg !10835
  %49 = tail call i32 @HAL_GetTick() #27, !dbg !10836
  call void @llvm.dbg.value(metadata i32 %49, metadata !10782, metadata !DIExpression()), !dbg !10792
  call void @llvm.dbg.value(metadata i32 %49, metadata !10782, metadata !DIExpression()), !dbg !10792
  br i1 %48, label %58, label %50, !dbg !10837

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10838
  %52 = and i32 %51, 131072, !dbg !10840
  %53 = icmp eq i32 %52, 0, !dbg !10840
  br i1 %53, label %54, label %66, !dbg !10841

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #27, !dbg !10842
  %56 = sub i32 %55, %49, !dbg !10845
  %57 = icmp ugt i32 %56, 100, !dbg !10846
  br i1 %57, label %311, label %50, !dbg !10847, !llvm.loop !10848

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10850
  %60 = and i32 %59, 131072, !dbg !10850
  %61 = icmp eq i32 %60, 0, !dbg !10850
  br i1 %61, label %66, label %62, !dbg !10852

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #27, !dbg !10853
  %64 = sub i32 %63, %49, !dbg !10856
  %65 = icmp ugt i32 %64, 100, !dbg !10857
  br i1 %65, label %311, label %58, !dbg !10858, !llvm.loop !10859

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !10861
  %68 = and i32 %67, 2, !dbg !10863
  %69 = icmp eq i32 %68, 0, !dbg !10864
  br i1 %69, label %121, label %70, !dbg !10865

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10866
  %72 = and i32 %71, 12, !dbg !10866
  %73 = icmp eq i32 %72, 0, !dbg !10869
  br i1 %73, label %82, label %74, !dbg !10870

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10871
  %76 = and i32 %75, 12, !dbg !10871
  %77 = icmp eq i32 %76, 8, !dbg !10872
  br i1 %77, label %78, label %90, !dbg !10873

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10874
  %80 = and i32 %79, 4194304, !dbg !10875
  %81 = icmp eq i32 %80, 0, !dbg !10876
  br i1 %81, label %82, label %90, !dbg !10877

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10878
  %84 = and i32 %83, 2, !dbg !10878
  %85 = icmp eq i32 %84, 0, !dbg !10878
  br i1 %85, label %114, label %86, !dbg !10881

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10882
  %88 = load i32, i32* %87, align 4, !dbg !10882
  %89 = icmp eq i32 %88, 1, !dbg !10883
  br i1 %89, label %114, label %311, !dbg !10884

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10885
  %92 = load i32, i32* %91, align 4, !dbg !10885
  %93 = icmp eq i32 %92, 0, !dbg !10888
  br i1 %93, label %104, label %94, !dbg !10889

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10890
  %95 = tail call i32 @HAL_GetTick() #27, !dbg !10892
  call void @llvm.dbg.value(metadata i32 %95, metadata !10782, metadata !DIExpression()), !dbg !10792
  br label %96, !dbg !10893

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10894
  %98 = and i32 %97, 2, !dbg !10895
  %99 = icmp eq i32 %98, 0, !dbg !10895
  br i1 %99, label %100, label %114, !dbg !10893

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #27, !dbg !10896
  %102 = sub i32 %101, %95, !dbg !10899
  %103 = icmp ugt i32 %102, 2, !dbg !10900
  br i1 %103, label %311, label %96, !dbg !10901, !llvm.loop !10902

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10904
  %105 = tail call i32 @HAL_GetTick() #27, !dbg !10906
  call void @llvm.dbg.value(metadata i32 %105, metadata !10782, metadata !DIExpression()), !dbg !10792
  br label %106, !dbg !10907

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10908
  %108 = and i32 %107, 2, !dbg !10908
  %109 = icmp eq i32 %108, 0, !dbg !10908
  br i1 %109, label %121, label %110, !dbg !10907

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #27, !dbg !10909
  %112 = sub i32 %111, %105, !dbg !10912
  %113 = icmp ugt i32 %112, 2, !dbg !10913
  br i1 %113, label %311, label %106, !dbg !10914, !llvm.loop !10915

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10917
  %116 = and i32 %115, -249, !dbg !10917
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10917
  %118 = load i32, i32* %117, align 4, !dbg !10917
  %119 = shl i32 %118, 3, !dbg !10917
  %120 = or i32 %119, %116, !dbg !10917
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10917
  br label %121, !dbg !10918

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !10918
  %123 = and i32 %122, 8, !dbg !10920
  %124 = icmp eq i32 %123, 0, !dbg !10921
  br i1 %124, label %149, label %125, !dbg !10922

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10923
  %127 = load i32, i32* %126, align 4, !dbg !10923
  %128 = icmp eq i32 %127, 0, !dbg !10926
  br i1 %128, label %139, label %129, !dbg !10927

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10928
  %130 = tail call i32 @HAL_GetTick() #27, !dbg !10930
  call void @llvm.dbg.value(metadata i32 %130, metadata !10782, metadata !DIExpression()), !dbg !10792
  br label %131, !dbg !10931

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10932
  %133 = and i32 %132, 2, !dbg !10933
  %134 = icmp eq i32 %133, 0, !dbg !10933
  br i1 %134, label %135, label %149, !dbg !10931

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #27, !dbg !10934
  %137 = sub i32 %136, %130, !dbg !10937
  %138 = icmp ugt i32 %137, 2, !dbg !10938
  br i1 %138, label %311, label %131, !dbg !10939, !llvm.loop !10940

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10942
  %140 = tail call i32 @HAL_GetTick() #27, !dbg !10944
  call void @llvm.dbg.value(metadata i32 %140, metadata !10782, metadata !DIExpression()), !dbg !10792
  br label %141, !dbg !10945

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10946
  %143 = and i32 %142, 2, !dbg !10946
  %144 = icmp eq i32 %143, 0, !dbg !10946
  br i1 %144, label %149, label %145, !dbg !10945

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #27, !dbg !10947
  %147 = sub i32 %146, %140, !dbg !10950
  %148 = icmp ugt i32 %147, 2, !dbg !10951
  br i1 %148, label %311, label %141, !dbg !10952, !llvm.loop !10953

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !10955
  %151 = and i32 %150, 4, !dbg !10956
  %152 = icmp eq i32 %151, 0, !dbg !10957
  br i1 %152, label %221, label %153, !dbg !10958

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !10784, metadata !DIExpression()), !dbg !10959
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10960
  %155 = and i32 %154, 268435456, !dbg !10960
  %156 = icmp eq i32 %155, 0, !dbg !10960
  br i1 %156, label %157, label %164, !dbg !10961

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !10962
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !10962
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10788, metadata !DIExpression()), !dbg !10962
  store volatile i32 0, i32* %2, align 4, !dbg !10962
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10962
  %160 = or i32 %159, 268435456, !dbg !10962
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10962
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10962
  %162 = and i32 %161, 268435456, !dbg !10962
  store volatile i32 %162, i32* %2, align 4, !dbg !10962
  %163 = load volatile i32, i32* %2, align 4, !dbg !10962
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !10963
  call void @llvm.dbg.value(metadata i32 1, metadata !10784, metadata !DIExpression()), !dbg !10959
  br label %164, !dbg !10964

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !10784, metadata !DIExpression()), !dbg !10959
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10965
  %166 = and i32 %165, 256, !dbg !10965
  %167 = icmp eq i32 %166, 0, !dbg !10965
  br i1 %167, label %168, label %180, !dbg !10967

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10968
  %170 = or i32 %169, 256, !dbg !10968
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10968
  %171 = tail call i32 @HAL_GetTick() #27, !dbg !10970
  call void @llvm.dbg.value(metadata i32 %171, metadata !10782, metadata !DIExpression()), !dbg !10792
  br label %172, !dbg !10971

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10972
  %174 = and i32 %173, 256, !dbg !10972
  %175 = icmp eq i32 %174, 0, !dbg !10972
  br i1 %175, label %176, label %180, !dbg !10971

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #27, !dbg !10973
  %178 = sub i32 %177, %171, !dbg !10976
  %179 = icmp ugt i32 %178, 2, !dbg !10977
  br i1 %179, label %311, label %172, !dbg !10978, !llvm.loop !10979

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10981
  %182 = load i32, i32* %181, align 4, !dbg !10981
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !10984

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10985
  %185 = or i32 %184, 1, !dbg !10985
  br label %196, !dbg !10985

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10987
  %188 = or i32 %187, 4, !dbg !10987
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10987
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10987
  %190 = or i32 %189, 1, !dbg !10987
  br label %196, !dbg !10987

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10990
  %193 = and i32 %192, -2, !dbg !10990
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10990
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10990
  %195 = and i32 %194, -5, !dbg !10990
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10992
  %198 = load i32, i32* %181, align 4, !dbg !10993
  %199 = icmp eq i32 %198, 0, !dbg !10995
  %200 = tail call i32 @HAL_GetTick() #27, !dbg !10996
  call void @llvm.dbg.value(metadata i32 %200, metadata !10782, metadata !DIExpression()), !dbg !10792
  call void @llvm.dbg.value(metadata i32 %200, metadata !10782, metadata !DIExpression()), !dbg !10792
  br i1 %199, label %209, label %201, !dbg !10997

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10998
  %203 = and i32 %202, 2, !dbg !11000
  %204 = icmp eq i32 %203, 0, !dbg !11000
  br i1 %204, label %205, label %217, !dbg !11001

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #27, !dbg !11002
  %207 = sub i32 %206, %200, !dbg !11005
  %208 = icmp ugt i32 %207, 5000, !dbg !11006
  br i1 %208, label %311, label %201, !dbg !11007, !llvm.loop !11008

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11010
  %211 = and i32 %210, 2, !dbg !11010
  %212 = icmp eq i32 %211, 0, !dbg !11010
  br i1 %212, label %217, label %213, !dbg !11012

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #27, !dbg !11013
  %215 = sub i32 %214, %200, !dbg !11016
  %216 = icmp ugt i32 %215, 5000, !dbg !11017
  br i1 %216, label %311, label %209, !dbg !11018, !llvm.loop !11019

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !11021

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11022
  %220 = and i32 %219, -268435457, !dbg !11022
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11022
  br label %221, !dbg !11025

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11026
  %223 = load i32, i32* %222, align 4, !dbg !11026
  %224 = icmp eq i32 %223, 0, !dbg !11028
  br i1 %224, label %310, label %225, !dbg !11029

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11030
  %227 = and i32 %226, 12, !dbg !11030
  %228 = icmp eq i32 %227, 8, !dbg !11033
  br i1 %228, label %277, label %229, !dbg !11034

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !11035
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11038
  %231 = tail call i32 @HAL_GetTick() #27, !dbg !11038
  call void @llvm.dbg.value(metadata i32 %231, metadata !10782, metadata !DIExpression()), !dbg !10792
  call void @llvm.dbg.value(metadata i32 %231, metadata !10782, metadata !DIExpression()), !dbg !10792
  br i1 %230, label %232, label %269, !dbg !11039

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11040
  %234 = and i32 %233, 33554432, !dbg !11040
  %235 = icmp eq i32 %234, 0, !dbg !11040
  br i1 %235, label %240, label %236, !dbg !11042

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #27, !dbg !11043
  %238 = sub i32 %237, %231, !dbg !11046
  %239 = icmp ugt i32 %238, 2, !dbg !11047
  br i1 %239, label %311, label %232, !dbg !11048, !llvm.loop !11049

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11051
  %242 = load i32, i32* %241, align 4, !dbg !11051
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11051
  %244 = load i32, i32* %243, align 4, !dbg !11051
  %245 = or i32 %244, %242, !dbg !11051
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11051
  %247 = load i32, i32* %246, align 4, !dbg !11051
  %248 = shl i32 %247, 6, !dbg !11051
  %249 = or i32 %245, %248, !dbg !11051
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11051
  %251 = load i32, i32* %250, align 4, !dbg !11051
  %252 = shl i32 %251, 15, !dbg !11051
  %253 = add i32 %252, -65536, !dbg !11051
  %254 = and i32 %253, -65536, !dbg !11051
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11051
  %256 = load i32, i32* %255, align 4, !dbg !11051
  %257 = shl i32 %256, 24, !dbg !11051
  %258 = or i32 %249, %257, !dbg !11051
  %259 = or i32 %258, %254, !dbg !11051
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11051
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11052
  %260 = tail call i32 @HAL_GetTick() #27, !dbg !11053
  call void @llvm.dbg.value(metadata i32 %260, metadata !10782, metadata !DIExpression()), !dbg !10792
  br label %261, !dbg !11054

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11055
  %263 = and i32 %262, 33554432, !dbg !11056
  %264 = icmp eq i32 %263, 0, !dbg !11056
  br i1 %264, label %265, label %310, !dbg !11054

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #27, !dbg !11057
  %267 = sub i32 %266, %260, !dbg !11060
  %268 = icmp ugt i32 %267, 2, !dbg !11061
  br i1 %268, label %311, label %261, !dbg !11062, !llvm.loop !11063

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11065
  %271 = and i32 %270, 33554432, !dbg !11065
  %272 = icmp eq i32 %271, 0, !dbg !11065
  br i1 %272, label %310, label %273, !dbg !11067

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #27, !dbg !11068
  %275 = sub i32 %274, %231, !dbg !11071
  %276 = icmp ugt i32 %275, 2, !dbg !11072
  br i1 %276, label %311, label %269, !dbg !11073, !llvm.loop !11074

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !11076
  br i1 %278, label %311, label %279, !dbg !11079

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11080
  call void @llvm.dbg.value(metadata i32 %280, metadata !10783, metadata !DIExpression()), !dbg !10792
  %281 = and i32 %280, 4194304, !dbg !11082
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11084
  %283 = load i32, i32* %282, align 4, !dbg !11084
  %284 = icmp eq i32 %281, %283, !dbg !11085
  br i1 %284, label %285, label %311, !dbg !11086

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !11087
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11088
  %288 = load i32, i32* %287, align 4, !dbg !11088
  %289 = icmp eq i32 %286, %288, !dbg !11089
  br i1 %289, label %290, label %311, !dbg !11090

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !11091
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11092
  %293 = load i32, i32* %292, align 4, !dbg !11092
  %294 = shl i32 %293, 6, !dbg !11093
  %295 = icmp eq i32 %291, %294, !dbg !11094
  br i1 %295, label %296, label %311, !dbg !11095

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !11096
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11097
  %299 = load i32, i32* %298, align 4, !dbg !11097
  %300 = shl i32 %299, 15, !dbg !11098
  %301 = add i32 %300, -65536, !dbg !11098
  %302 = and i32 %301, -65536, !dbg !11098
  %303 = icmp eq i32 %297, %302, !dbg !11099
  br i1 %303, label %304, label %311, !dbg !11100

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !11101
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11102
  %307 = load i32, i32* %306, align 4, !dbg !11102
  %308 = shl i32 %307, 24, !dbg !11103
  %309 = icmp eq i32 %305, %308, !dbg !11104
  br i1 %309, label %310, label %311, !dbg !11105

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !11106

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !10792
  ret i32 %312, !dbg !11107
}

; Function Attrs: optsize
declare !dbg !11108 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11110 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11123, metadata !DIExpression()), !dbg !11126
  call void @llvm.dbg.value(metadata i32 %1, metadata !11124, metadata !DIExpression()), !dbg !11126
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !11127
  br i1 %3, label %115, label %4, !dbg !11129

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11130
  %6 = and i32 %5, 7, !dbg !11130
  %7 = icmp ult i32 %6, %1, !dbg !11132
  br i1 %7, label %8, label %13, !dbg !11133

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !11134
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11134
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11136
  %11 = and i32 %10, 7, !dbg !11136
  %12 = icmp eq i32 %11, %1, !dbg !11138
  br i1 %12, label %13, label %115, !dbg !11139

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11140
  %15 = load i32, i32* %14, align 4, !dbg !11140
  %16 = and i32 %15, 2, !dbg !11142
  %17 = icmp eq i32 %16, 0, !dbg !11143
  br i1 %17, label %39, label %18, !dbg !11144

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !11145
  %20 = icmp eq i32 %19, 0, !dbg !11148
  br i1 %20, label %25, label %21, !dbg !11149

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11150
  %23 = or i32 %22, 7168, !dbg !11150
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11150
  %24 = load i32, i32* %14, align 4, !dbg !11152
  br label %25, !dbg !11154

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !11152
  %27 = and i32 %26, 8, !dbg !11155
  %28 = icmp eq i32 %27, 0, !dbg !11156
  br i1 %28, label %32, label %29, !dbg !11157

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11158
  %31 = or i32 %30, 57344, !dbg !11158
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11158
  br label %32, !dbg !11160

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11161
  %34 = and i32 %33, -241, !dbg !11161
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11161
  %36 = load i32, i32* %35, align 4, !dbg !11161
  %37 = or i32 %34, %36, !dbg !11161
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11161
  %38 = load i32, i32* %14, align 4, !dbg !11162
  br label %39, !dbg !11164

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !11162
  %41 = and i32 %40, 1, !dbg !11165
  %42 = icmp eq i32 %41, 0, !dbg !11166
  br i1 %42, label %73, label %43, !dbg !11167

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11168
  %45 = load i32, i32* %44, align 4, !dbg !11168
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !11171

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11172
  %48 = and i32 %47, 131072, !dbg !11175
  %49 = icmp eq i32 %48, 0, !dbg !11175
  br i1 %49, label %115, label %58, !dbg !11176

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11177
  %52 = and i32 %51, 33554432, !dbg !11181
  %53 = icmp eq i32 %52, 0, !dbg !11181
  br i1 %53, label %115, label %58, !dbg !11182

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11183
  %56 = and i32 %55, 2, !dbg !11186
  %57 = icmp eq i32 %56, 0, !dbg !11186
  br i1 %57, label %115, label %58, !dbg !11187

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11188
  %60 = and i32 %59, -4, !dbg !11188
  %61 = or i32 %60, %45, !dbg !11188
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11188
  %62 = tail call i32 @HAL_GetTick() #27, !dbg !11189
  call void @llvm.dbg.value(metadata i32 %62, metadata !11125, metadata !DIExpression()), !dbg !11126
  br label %63, !dbg !11190

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11191
  %65 = and i32 %64, 12, !dbg !11191
  %66 = load i32, i32* %44, align 4, !dbg !11192
  %67 = shl i32 %66, 2, !dbg !11193
  %68 = icmp eq i32 %65, %67, !dbg !11194
  br i1 %68, label %73, label %69, !dbg !11190

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #27, !dbg !11195
  %71 = sub i32 %70, %62, !dbg !11198
  %72 = icmp ugt i32 %71, 5000, !dbg !11199
  br i1 %72, label %115, label %63, !dbg !11200, !llvm.loop !11201

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11203
  %75 = and i32 %74, 7, !dbg !11203
  %76 = icmp ugt i32 %75, %1, !dbg !11205
  br i1 %76, label %77, label %82, !dbg !11206

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !11207
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11207
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11209
  %80 = and i32 %79, 7, !dbg !11209
  %81 = icmp eq i32 %80, %1, !dbg !11211
  br i1 %81, label %82, label %115, !dbg !11212

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !11213
  %84 = and i32 %83, 4, !dbg !11215
  %85 = icmp eq i32 %84, 0, !dbg !11216
  br i1 %85, label %93, label %86, !dbg !11217

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11218
  %88 = and i32 %87, -7169, !dbg !11218
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11218
  %90 = load i32, i32* %89, align 4, !dbg !11218
  %91 = or i32 %88, %90, !dbg !11218
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11218
  %92 = load i32, i32* %14, align 4, !dbg !11220
  br label %93, !dbg !11222

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !11220
  %95 = and i32 %94, 8, !dbg !11223
  %96 = icmp eq i32 %95, 0, !dbg !11224
  br i1 %96, label %104, label %97, !dbg !11225

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11226
  %99 = and i32 %98, -57345, !dbg !11226
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11226
  %101 = load i32, i32* %100, align 4, !dbg !11226
  %102 = shl i32 %101, 3, !dbg !11226
  %103 = or i32 %102, %99, !dbg !11226
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11226
  br label %104, !dbg !11228

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !11229
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11230
  %107 = lshr i32 %106, 4, !dbg !11231
  %108 = and i32 %107, 15, !dbg !11231
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !11232
  %110 = load i8, i8* %109, align 1, !dbg !11232
  %111 = zext i8 %110 to i32, !dbg !11232
  %112 = lshr i32 %105, %111, !dbg !11233
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !11234
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !11235
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #27, !dbg !11236
  br label %115, !dbg !11237

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !11126
  ret i32 %116, !dbg !11238
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !11239 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11241, metadata !DIExpression()), !dbg !11245
  call void @llvm.dbg.value(metadata i32 0, metadata !11242, metadata !DIExpression()), !dbg !11245
  call void @llvm.dbg.value(metadata i32 0, metadata !11243, metadata !DIExpression()), !dbg !11245
  call void @llvm.dbg.value(metadata i32 0, metadata !11244, metadata !DIExpression()), !dbg !11245
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11246
  %2 = and i32 %1, 12, !dbg !11247
  switch i32 %2, label %24 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !11248

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 12000000, metadata !11244, metadata !DIExpression()), !dbg !11245
  br label %24, !dbg !11249

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11252
  %6 = and i32 %5, 63, !dbg !11254
  call void @llvm.dbg.value(metadata i32 %6, metadata !11241, metadata !DIExpression()), !dbg !11245
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11255
  %8 = and i32 %7, 4194304, !dbg !11255
  %9 = icmp eq i32 %8, 0, !dbg !11257
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11258
  %11 = lshr i32 %10, 6, !dbg !11258
  %12 = and i32 %11, 511, !dbg !11258
  %13 = zext i32 %12 to i64, !dbg !11258
  %14 = select i1 %9, i64 16000000, i64 12000000
  %15 = mul nuw nsw i64 %14, %13, !dbg !11258
  %16 = zext i32 %6 to i64, !dbg !11258
  %17 = udiv i64 %15, %16, !dbg !11258
  %18 = trunc i64 %17 to i32, !dbg !11258
  call void @llvm.dbg.value(metadata i32 %18, metadata !11242, metadata !DIExpression()), !dbg !11245
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11259
  %20 = lshr i32 %19, 15, !dbg !11260
  %21 = and i32 %20, 6, !dbg !11260
  %22 = add nuw nsw i32 %21, 2, !dbg !11260
  call void @llvm.dbg.value(metadata i32 %22, metadata !11243, metadata !DIExpression()), !dbg !11245
  %23 = udiv i32 %18, %22, !dbg !11261
  call void @llvm.dbg.value(metadata i32 %23, metadata !11244, metadata !DIExpression()), !dbg !11245
  br label %24, !dbg !11262

24:                                               ; preds = %0, %4, %3
  %25 = phi i32 [ %23, %4 ], [ 12000000, %3 ], [ 16000000, %0 ], !dbg !11263
  call void @llvm.dbg.value(metadata i32 %25, metadata !11244, metadata !DIExpression()), !dbg !11245
  ret i32 %25, !dbg !11264
}

; Function Attrs: optsize
declare !dbg !11265 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11268 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11272, metadata !DIExpression()), !dbg !11292
  call void @llvm.dbg.value(metadata i32 %1, metadata !11273, metadata !DIExpression()), !dbg !11292
  call void @llvm.dbg.value(metadata i32 %2, metadata !11274, metadata !DIExpression()), !dbg !11292
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11293
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #25, !dbg !11293
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11275, metadata !DIExpression()), !dbg !11294
  %8 = icmp eq i32 %0, 0, !dbg !11295
  br i1 %8, label %9, label %23, !dbg !11296

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !11297
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !11297
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11285, metadata !DIExpression()), !dbg !11297
  store volatile i32 0, i32* %5, align 4, !dbg !11297
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11297
  %12 = or i32 %11, 1, !dbg !11297
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11297
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11297
  %14 = and i32 %13, 1, !dbg !11297
  store volatile i32 %14, i32* %5, align 4, !dbg !11297
  %15 = load volatile i32, i32* %5, align 4, !dbg !11297
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !11298
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11299
  store i32 256, i32* %16, align 4, !dbg !11300
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11301
  store i32 2, i32* %17, align 4, !dbg !11302
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11303
  store i32 3, i32* %18, align 4, !dbg !11304
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11305
  store i32 0, i32* %19, align 4, !dbg !11306
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11307
  store i32 0, i32* %20, align 4, !dbg !11308
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #27, !dbg !11309
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11310
  %22 = and i32 %21, -123731969, !dbg !11310
  br label %38, !dbg !11311

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !11312
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !11312
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11289, metadata !DIExpression()), !dbg !11312
  store volatile i32 0, i32* %6, align 4, !dbg !11312
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11312
  %26 = or i32 %25, 4, !dbg !11312
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11312
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11312
  %28 = and i32 %27, 4, !dbg !11312
  store volatile i32 %28, i32* %6, align 4, !dbg !11312
  %29 = load volatile i32, i32* %6, align 4, !dbg !11312
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !11313
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11314
  store i32 512, i32* %30, align 4, !dbg !11315
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11316
  store i32 2, i32* %31, align 4, !dbg !11317
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11318
  store i32 3, i32* %32, align 4, !dbg !11319
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11320
  store i32 0, i32* %33, align 4, !dbg !11321
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11322
  store i32 0, i32* %34, align 4, !dbg !11323
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #27, !dbg !11324
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11325
  %36 = and i32 %35, 134217727, !dbg !11325
  %37 = shl i32 %2, 3, !dbg !11325
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !11326
  %42 = or i32 %41, %40, !dbg !11326
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11326
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #25, !dbg !11327
  ret void, !dbg !11327
}

; Function Attrs: optsize
declare !dbg !11328 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !11332 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11333
  ret void, !dbg !11334
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !11335 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11336
  ret void, !dbg !11337
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #5 !dbg !11338 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11339
  ret i32 %1, !dbg !11340
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #16 !dbg !11341 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !11342
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11343
  %3 = lshr i32 %2, 10, !dbg !11344
  %4 = and i32 %3, 7, !dbg !11344
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11345
  %6 = load i8, i8* %5, align 1, !dbg !11345
  %7 = zext i8 %6 to i32, !dbg !11345
  %8 = lshr i32 %1, %7, !dbg !11346
  ret i32 %8, !dbg !11347
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #16 !dbg !11348 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !11349
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11350
  %3 = lshr i32 %2, 13, !dbg !11351
  %4 = and i32 %3, 7, !dbg !11351
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11352
  %6 = load i8, i8* %5, align 1, !dbg !11352
  %7 = zext i8 %6 to i32, !dbg !11352
  %8 = lshr i32 %1, %7, !dbg !11353
  ret i32 %8, !dbg !11354
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11355 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11359, metadata !DIExpression()), !dbg !11360
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11361
  store i32 15, i32* %2, align 4, !dbg !11362
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11363
  %4 = and i32 %3, 262144, !dbg !11365
  %5 = icmp eq i32 %4, 0, !dbg !11366
  br i1 %5, label %8, label %6, !dbg !11367

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11368
  store i32 327680, i32* %7, align 4, !dbg !11370
  br label %15, !dbg !11371

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11372
  %10 = and i32 %9, 65536, !dbg !11374
  %11 = icmp eq i32 %10, 0, !dbg !11375
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11376
  br i1 %11, label %14, label %13, !dbg !11377

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !11378
  br label %15, !dbg !11380

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11381
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11383
  %17 = and i32 %16, 1, !dbg !11385
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11386
  store i32 %17, i32* %18, align 4, !dbg !11388
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11389
  %20 = lshr i32 %19, 3, !dbg !11390
  %21 = and i32 %20, 31, !dbg !11390
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11391
  store i32 %21, i32* %22, align 4, !dbg !11392
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11393
  %24 = and i32 %23, 4, !dbg !11395
  %25 = icmp eq i32 %24, 0, !dbg !11396
  br i1 %25, label %28, label %26, !dbg !11397

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11398
  store i32 5, i32* %27, align 4, !dbg !11400
  br label %35, !dbg !11401

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11402
  %30 = and i32 %29, 1, !dbg !11404
  %31 = icmp eq i32 %30, 0, !dbg !11405
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11406
  br i1 %31, label %34, label %33, !dbg !11407

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !11408
  br label %35, !dbg !11410

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !11411
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11413
  %37 = and i32 %36, 1, !dbg !11415
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11416
  store i32 %37, i32* %38, align 4, !dbg !11418
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11419
  %40 = and i32 %39, 16777216, !dbg !11421
  %41 = icmp eq i32 %40, 0, !dbg !11422
  %42 = select i1 %41, i32 1, i32 2, !dbg !11423
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11424
  store i32 %42, i32* %43, align 4, !dbg !11426
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11427
  %45 = and i32 %44, 4194304, !dbg !11428
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11429
  store i32 %45, i32* %46, align 4, !dbg !11430
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11431
  %48 = and i32 %47, 63, !dbg !11432
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11433
  store i32 %48, i32* %49, align 4, !dbg !11434
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11435
  %51 = lshr i32 %50, 6, !dbg !11436
  %52 = and i32 %51, 511, !dbg !11436
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11437
  store i32 %52, i32* %53, align 4, !dbg !11438
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11439
  %55 = shl i32 %54, 1, !dbg !11440
  %56 = and i32 %55, 393216, !dbg !11440
  %57 = add nuw nsw i32 %56, 131072, !dbg !11440
  %58 = lshr exact i32 %57, 16, !dbg !11441
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11442
  store i32 %58, i32* %59, align 4, !dbg !11443
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11444
  %61 = lshr i32 %60, 24, !dbg !11445
  %62 = and i32 %61, 15, !dbg !11445
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11446
  store i32 %62, i32* %63, align 4, !dbg !11447
  ret void, !dbg !11448
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #16 !dbg !11449 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11453, metadata !DIExpression()), !dbg !11455
  call void @llvm.dbg.value(metadata i32* %1, metadata !11454, metadata !DIExpression()), !dbg !11455
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11456
  store i32 15, i32* %3, align 4, !dbg !11457
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11458
  %5 = and i32 %4, 3, !dbg !11459
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11460
  store i32 %5, i32* %6, align 4, !dbg !11461
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11462
  %8 = and i32 %7, 240, !dbg !11463
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11464
  store i32 %8, i32* %9, align 4, !dbg !11465
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11466
  %11 = and i32 %10, 7168, !dbg !11467
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11468
  store i32 %11, i32* %12, align 4, !dbg !11469
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11470
  %14 = lshr i32 %13, 3, !dbg !11471
  %15 = and i32 %14, 7168, !dbg !11471
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11472
  store i32 %15, i32* %16, align 4, !dbg !11473
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11474
  %18 = and i32 %17, 7, !dbg !11475
  store i32 %18, i32* %1, align 4, !dbg !11476
  ret void, !dbg !11477
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11478 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11479
  %2 = and i32 %1, 128, !dbg !11479
  %3 = icmp eq i32 %2, 0, !dbg !11479
  br i1 %3, label %5, label %4, !dbg !11481

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #26, !dbg !11482
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11484
  br label %5, !dbg !11485

5:                                                ; preds = %4, %0
  ret void, !dbg !11486
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11487 {
  ret void, !dbg !11488
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !11489 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11492, metadata !DIExpression()), !dbg !11493
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !11494
  ret void, !dbg !11495
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !11496 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11499, metadata !DIExpression()), !dbg !11501
  call void @llvm.dbg.value(metadata i32 1000, metadata !11500, metadata !DIExpression()), !dbg !11501
  %2 = udiv i32 %0, 1000, !dbg !11502
  %3 = add nsw i32 %2, -1, !dbg !11503
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11504
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11505
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11506
  ret void, !dbg !11507
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #17 !dbg !11508 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11510, metadata !DIExpression()), !dbg !11512
  %3 = bitcast i32* %2 to i8*, !dbg !11513
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11513
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11511, metadata !DIExpression()), !dbg !11514
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11515
  store volatile i32 %4, i32* %2, align 4, !dbg !11514
  %5 = load volatile i32, i32* %2, align 4, !dbg !11516
  %6 = icmp eq i32 %0, -1, !dbg !11517
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11510, metadata !DIExpression()), !dbg !11512
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11512
  call void @llvm.dbg.value(metadata i32 %8, metadata !11510, metadata !DIExpression()), !dbg !11512
  br label %9, !dbg !11519

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11510, metadata !DIExpression()), !dbg !11512
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11520
  call void @llvm.dbg.value(metadata i32 undef, metadata !11510, metadata !DIExpression()), !dbg !11512
  %12 = shl i32 %11, 15, !dbg !11512
  %13 = ashr i32 %12, 31, !dbg !11512
  %14 = add i32 %13, %10, !dbg !11512
  call void @llvm.dbg.value(metadata i32 %14, metadata !11510, metadata !DIExpression()), !dbg !11512
  %15 = icmp eq i32 %14, 0, !dbg !11519
  br i1 %15, label %16, label %9, !dbg !11519

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11523
  ret void, !dbg !11523
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !11524 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11526, metadata !DIExpression()), !dbg !11527
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11528
  ret void, !dbg !11529
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !11530 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11535, metadata !DIExpression()), !dbg !11540
  call void @llvm.dbg.value(metadata i32 0, metadata !11538, metadata !DIExpression()), !dbg !11540
  call void @llvm.dbg.value(metadata i32 0, metadata !11539, metadata !DIExpression()), !dbg !11540
  %2 = icmp eq i32 %0, 0, !dbg !11541
  br i1 %2, label %52, label %3, !dbg !11543

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11544
  %5 = icmp eq i32 %4, 16384, !dbg !11547
  br i1 %5, label %6, label %21, !dbg !11548

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !11549
  %8 = select i1 %7, i32 0, i32 5, !dbg !11552
  call void @llvm.dbg.value(metadata i32 %8, metadata !11538, metadata !DIExpression()), !dbg !11540
  %9 = add i32 %0, -120000001, !dbg !11553
  %10 = icmp ult i32 %9, 30000000, !dbg !11553
  %11 = select i1 %10, i32 4, i32 %8, !dbg !11553
  call void @llvm.dbg.value(metadata i32 %11, metadata !11538, metadata !DIExpression()), !dbg !11540
  %12 = icmp ult i32 %9, -30000000, !dbg !11555
  %13 = select i1 %12, i32 %11, i32 3, !dbg !11555
  call void @llvm.dbg.value(metadata i32 %13, metadata !11538, metadata !DIExpression()), !dbg !11540
  %14 = icmp ugt i32 %0, 60000000, !dbg !11557
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !11559
  br i1 %16, label %21, label %17, !dbg !11559

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !11560
  %19 = and i1 %18, %15, !dbg !11563
  %20 = select i1 %19, i32 1, i32 %13, !dbg !11563
  br label %21, !dbg !11563

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !11540
  call void @llvm.dbg.value(metadata i32 %22, metadata !11538, metadata !DIExpression()), !dbg !11540
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11564
  %24 = icmp eq i32 %23, 0, !dbg !11566
  br i1 %24, label %25, label %41, !dbg !11567

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 12000000, !dbg !11568
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !11571
  %29 = select i1 %28, i32 4, i32 %22, !dbg !11571
  call void @llvm.dbg.value(metadata i32 %29, metadata !11538, metadata !DIExpression()), !dbg !11540
  %30 = icmp ugt i32 %0, 90000000, !dbg !11572
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !11574
  %33 = select i1 %32, i32 3, i32 %29, !dbg !11574
  call void @llvm.dbg.value(metadata i32 %33, metadata !11538, metadata !DIExpression()), !dbg !11540
  %34 = icmp ugt i32 %0, 60000000, !dbg !11575
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !11577
  br i1 %36, label %41, label %37, !dbg !11577

37:                                               ; preds = %25
  %38 = icmp ugt i32 %0, 30000000, !dbg !11578
  %39 = and i1 %38, %35, !dbg !11581
  %40 = select i1 %39, i32 1, i32 %33, !dbg !11581
  br label %41, !dbg !11581

41:                                               ; preds = %37, %25, %21
  %42 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %40, %37 ], !dbg !11582
  call void @llvm.dbg.value(metadata i32 %42, metadata !11538, metadata !DIExpression()), !dbg !11540
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %42) #26, !dbg !11583
  call void @llvm.dbg.value(metadata i32 2, metadata !11536, metadata !DIExpression()), !dbg !11540
  br label %43, !dbg !11584

43:                                               ; preds = %43, %41
  %44 = phi i32 [ 2, %41 ], [ %46, %43 ], !dbg !11582
  call void @llvm.dbg.value(metadata i32 %44, metadata !11536, metadata !DIExpression()), !dbg !11540
  %45 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !11585
  call void @llvm.dbg.value(metadata i32 %45, metadata !11537, metadata !DIExpression()), !dbg !11540
  %46 = add nsw i32 %44, -1, !dbg !11587
  call void @llvm.dbg.value(metadata i32 %46, metadata !11536, metadata !DIExpression()), !dbg !11540
  %47 = icmp ne i32 %45, %42, !dbg !11588
  %48 = icmp ne i32 %46, 0, !dbg !11589
  %49 = select i1 %47, i1 %48, i1 false, !dbg !11589
  br i1 %49, label %43, label %50, !dbg !11590, !llvm.loop !11591

50:                                               ; preds = %43
  %51 = zext i1 %47 to i32
  br label %52

52:                                               ; preds = %50, %1
  %53 = phi i32 [ 1, %1 ], [ %51, %50 ], !dbg !11593
  call void @llvm.dbg.value(metadata i32 %53, metadata !11539, metadata !DIExpression()), !dbg !11540
  ret i32 %53, !dbg !11594
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !11595 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11597
  %2 = and i32 %1, 16384, !dbg !11597
  ret i32 %2, !dbg !11598
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !11599 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11601, metadata !DIExpression()), !dbg !11602
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11603
  %3 = and i32 %2, -8, !dbg !11603
  %4 = or i32 %3, %0, !dbg !11603
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11603
  ret void, !dbg !11604
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !11605 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11606
  %2 = and i32 %1, 7, !dbg !11606
  ret i32 %2, !dbg !11607
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !11608 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !11626, metadata !DIExpression()), !dbg !11630
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11627, metadata !DIExpression()), !dbg !11630
  call void @llvm.dbg.value(metadata i32 0, metadata !11628, metadata !DIExpression()), !dbg !11630
  call void @llvm.dbg.value(metadata i32 0, metadata !11629, metadata !DIExpression()), !dbg !11630
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !11631
  %4 = icmp eq i32 %3, 0, !dbg !11633
  br i1 %4, label %5, label %21, !dbg !11634

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #26, !dbg !11635
  call void @llvm.dbg.value(metadata i32 %6, metadata !11629, metadata !DIExpression()), !dbg !11630
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.78() #26, !dbg !11637
  %8 = icmp eq i32 %7, 1, !dbg !11639
  br i1 %8, label %13, label %9, !dbg !11640

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.79() #26, !dbg !11641
  br label %10, !dbg !11643

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.78() #26, !dbg !11644
  %12 = icmp eq i32 %11, 1, !dbg !11645
  br i1 %12, label %13, label %10, !dbg !11643, !llvm.loop !11646

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !11648
  %15 = load i32, i32* %14, align 4, !dbg !11648
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !11649
  %17 = load i32, i32* %16, align 4, !dbg !11649
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !11650
  %19 = load i32, i32* %18, align 4, !dbg !11650
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.80(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !11651
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #26, !dbg !11652
  call void @llvm.dbg.value(metadata i32 %20, metadata !11628, metadata !DIExpression()), !dbg !11630
  br label %21, !dbg !11653

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !11654
  call void @llvm.dbg.value(metadata i32 %22, metadata !11628, metadata !DIExpression()), !dbg !11630
  ret i32 %22, !dbg !11655
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !11656 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11660, metadata !DIExpression()), !dbg !11661
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.82() #26, !dbg !11662
  %2 = icmp ne i32 %1, 0, !dbg !11664
  call void @llvm.dbg.value(metadata i1 %2, metadata !11660, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11661
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !11665
  %4 = icmp ne i32 %3, 0, !dbg !11667
  %5 = select i1 %4, i1 true, i1 %2, !dbg !11668
  %6 = zext i1 %5 to i32, !dbg !11668
  call void @llvm.dbg.value(metadata i32 %6, metadata !11660, metadata !DIExpression()), !dbg !11661
  ret i32 %6, !dbg !11669
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #5 !dbg !11670 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11674, metadata !DIExpression()), !dbg !11677
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11675, metadata !DIExpression()), !dbg !11677
  call void @llvm.dbg.value(metadata i32 0, metadata !11676, metadata !DIExpression()), !dbg !11677
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !11678
  %4 = load i32, i32* %3, align 4, !dbg !11678
  %5 = and i32 %4, 63, !dbg !11679
  %6 = udiv i32 %0, %5, !dbg !11680
  call void @llvm.dbg.value(metadata i32 %6, metadata !11676, metadata !DIExpression()), !dbg !11677
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !11681
  %8 = load i32, i32* %7, align 4, !dbg !11681
  %9 = and i32 %8, 511, !dbg !11682
  %10 = mul i32 %9, %6, !dbg !11683
  call void @llvm.dbg.value(metadata i32 %10, metadata !11676, metadata !DIExpression()), !dbg !11677
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !11684
  %12 = load i32, i32* %11, align 4, !dbg !11684
  %13 = lshr i32 %12, 15, !dbg !11685
  %14 = and i32 %13, 131070, !dbg !11685
  %15 = add nuw nsw i32 %14, 2, !dbg !11685
  %16 = udiv i32 %10, %15, !dbg !11686
  call void @llvm.dbg.value(metadata i32 %16, metadata !11676, metadata !DIExpression()), !dbg !11677
  ret i32 %16, !dbg !11687
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.78() unnamed_addr #16 !dbg !11688 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11689
  %2 = lshr i32 %1, 1, !dbg !11690
  %3 = and i32 %2, 1, !dbg !11690
  ret i32 %3, !dbg !11691
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.79() unnamed_addr #15 !dbg !11692 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11693
  %2 = or i32 %1, 1, !dbg !11693
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11693
  ret void, !dbg !11694
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.80(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !11695 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11697, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata i32 %1, metadata !11698, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata i32 %2, metadata !11699, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata i32 %3, metadata !11700, metadata !DIExpression()), !dbg !11701
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11702
  %6 = and i32 %5, -4227072, !dbg !11702
  %7 = or i32 %1, %0, !dbg !11702
  %8 = shl i32 %2, 6, !dbg !11702
  %9 = or i32 %7, %8, !dbg !11702
  %10 = or i32 %9, %6, !dbg !11702
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11702
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11703
  %12 = and i32 %11, -196609, !dbg !11703
  %13 = or i32 %12, %3, !dbg !11703
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11703
  ret void, !dbg !11704
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !11705 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11709, metadata !DIExpression()), !dbg !11713
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11710, metadata !DIExpression()), !dbg !11713
  call void @llvm.dbg.value(metadata i32 0, metadata !11711, metadata !DIExpression()), !dbg !11713
  call void @llvm.dbg.value(metadata i32 0, metadata !11712, metadata !DIExpression()), !dbg !11713
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !11714
  %4 = load i32, i32* %3, align 4, !dbg !11714
  %5 = lshr i32 %4, 4, !dbg !11714
  %6 = and i32 %5, 15, !dbg !11714
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !11714
  %8 = load i8, i8* %7, align 1, !dbg !11714
  %9 = zext i8 %8 to i32, !dbg !11714
  %10 = lshr i32 %0, %9, !dbg !11714
  call void @llvm.dbg.value(metadata i32 %10, metadata !11712, metadata !DIExpression()), !dbg !11713
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !11715
  %12 = icmp ult i32 %11, %10, !dbg !11717
  br i1 %12, label %13, label %16, !dbg !11718

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !11719
  call void @llvm.dbg.value(metadata i32 %14, metadata !11711, metadata !DIExpression()), !dbg !11713
  %15 = icmp eq i32 %14, 0, !dbg !11721
  br i1 %15, label %16, label %30, !dbg !11723

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.81() #26, !dbg !11724
  br label %17, !dbg !11726

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.82() #26, !dbg !11727
  %19 = icmp eq i32 %18, 1, !dbg !11728
  br i1 %19, label %20, label %17, !dbg !11726, !llvm.loop !11729

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !11731
  tail call fastcc void @LL_RCC_SetAHBPrescaler.83(i32 noundef %21) #26, !dbg !11732
  tail call fastcc void @LL_RCC_SetSysClkSource.84() #26, !dbg !11733
  br label %22, !dbg !11734

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.85() #26, !dbg !11735
  %24 = icmp eq i32 %23, 8, !dbg !11736
  br i1 %24, label %25, label %22, !dbg !11734, !llvm.loop !11737

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !11739
  %27 = load i32, i32* %26, align 4, !dbg !11739
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.86(i32 noundef %27) #26, !dbg !11740
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !11741
  %29 = load i32, i32* %28, align 4, !dbg !11741
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.87(i32 noundef %29) #26, !dbg !11742
  br label %30, !dbg !11743

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !11744
  %33 = icmp ugt i32 %32, %10, !dbg !11746
  br i1 %33, label %34, label %36, !dbg !11747

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !11748
  call void @llvm.dbg.value(metadata i32 %35, metadata !11711, metadata !DIExpression()), !dbg !11713
  br label %36, !dbg !11750

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !11713
  call void @llvm.dbg.value(metadata i32 %37, metadata !11711, metadata !DIExpression()), !dbg !11713
  %38 = icmp eq i32 %37, 0, !dbg !11751
  br i1 %38, label %39, label %40, !dbg !11753

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !11754
  br label %40, !dbg !11756

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !11757
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.81() unnamed_addr #15 !dbg !11758 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11759
  %2 = or i32 %1, 16777216, !dbg !11759
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11759
  ret void, !dbg !11760
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.82() unnamed_addr #16 !dbg !11761 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11762
  %2 = lshr i32 %1, 25, !dbg !11763
  %3 = and i32 %2, 1, !dbg !11763
  ret i32 %3, !dbg !11764
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.83(i32 noundef %0) unnamed_addr #15 !dbg !11765 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11767, metadata !DIExpression()), !dbg !11768
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11769
  %3 = and i32 %2, -241, !dbg !11769
  %4 = or i32 %3, %0, !dbg !11769
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11769
  ret void, !dbg !11770
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.84() unnamed_addr #15 !dbg !11771 {
  call void @llvm.dbg.value(metadata i32 2, metadata !11773, metadata !DIExpression()), !dbg !11774
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11775
  %2 = and i32 %1, -4, !dbg !11775
  %3 = or i32 %2, 2, !dbg !11775
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11775
  ret void, !dbg !11776
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.85() unnamed_addr #16 !dbg !11777 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11778
  %2 = and i32 %1, 12, !dbg !11778
  ret i32 %2, !dbg !11779
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.86(i32 noundef %0) unnamed_addr #15 !dbg !11780 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11782, metadata !DIExpression()), !dbg !11783
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11784
  %3 = and i32 %2, -7169, !dbg !11784
  %4 = or i32 %3, %0, !dbg !11784
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11784
  ret void, !dbg !11785
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.87(i32 noundef %0) unnamed_addr #15 !dbg !11786 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11788, metadata !DIExpression()), !dbg !11789
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11790
  %3 = and i32 %2, -57345, !dbg !11790
  %4 = or i32 %3, %0, !dbg !11790
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11790
  ret void, !dbg !11791
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #16 !dbg !11792 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11793
  %2 = lshr i32 %1, 27, !dbg !11794
  %3 = and i32 %2, 1, !dbg !11794
  ret i32 %3, !dbg !11795
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !11796 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11800, metadata !DIExpression()), !dbg !11806
  call void @llvm.dbg.value(metadata i32 %1, metadata !11801, metadata !DIExpression()), !dbg !11806
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !11802, metadata !DIExpression()), !dbg !11806
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !11803, metadata !DIExpression()), !dbg !11806
  call void @llvm.dbg.value(metadata i32 0, metadata !11804, metadata !DIExpression()), !dbg !11806
  call void @llvm.dbg.value(metadata i32 0, metadata !11805, metadata !DIExpression()), !dbg !11806
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !11807
  %6 = icmp eq i32 %5, 0, !dbg !11809
  br i1 %6, label %7, label %27, !dbg !11810

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #26, !dbg !11811
  call void @llvm.dbg.value(metadata i32 %8, metadata !11805, metadata !DIExpression()), !dbg !11806
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.88() #26, !dbg !11813
  %10 = icmp eq i32 %9, 1, !dbg !11815
  br i1 %10, label %19, label %11, !dbg !11816

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !11817
  br i1 %12, label %13, label %14, !dbg !11820

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !11821
  br label %15, !dbg !11823

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.89() #26, !dbg !11824
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.90() #26, !dbg !11826
  br label %16, !dbg !11827

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.88() #26, !dbg !11828
  %18 = icmp eq i32 %17, 1, !dbg !11829
  br i1 %18, label %19, label %16, !dbg !11827, !llvm.loop !11830

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !11832
  %21 = load i32, i32* %20, align 4, !dbg !11832
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !11833
  %23 = load i32, i32* %22, align 4, !dbg !11833
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !11834
  %25 = load i32, i32* %24, align 4, !dbg !11834
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.80(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !11835
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #26, !dbg !11836
  call void @llvm.dbg.value(metadata i32 %26, metadata !11804, metadata !DIExpression()), !dbg !11806
  br label %27, !dbg !11837

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !11838
  call void @llvm.dbg.value(metadata i32 %28, metadata !11804, metadata !DIExpression()), !dbg !11806
  ret i32 %28, !dbg !11839
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.88() unnamed_addr #16 !dbg !11840 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11841
  %2 = lshr i32 %1, 17, !dbg !11842
  %3 = and i32 %2, 1, !dbg !11842
  ret i32 %3, !dbg !11843
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !11844 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11845
  %2 = or i32 %1, 262144, !dbg !11845
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11845
  ret void, !dbg !11846
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.89() unnamed_addr #15 !dbg !11847 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11848
  %2 = and i32 %1, -262145, !dbg !11848
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11848
  ret void, !dbg !11849
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.90() unnamed_addr #15 !dbg !11850 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11851
  %2 = or i32 %1, 65536, !dbg !11851
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11851
  ret void, !dbg !11852
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !11853 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11856, metadata !DIExpression()), !dbg !11872
  call void @llvm.dbg.value(metadata i32 undef, metadata !11856, metadata !DIExpression()), !dbg !11872
  call void @llvm.dbg.value(metadata i32 undef, metadata !11856, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !11872
  ret void, !dbg !11873
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !11874 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11878, metadata !DIExpression()), !dbg !11880
  %2 = icmp eq i8* %0, null, !dbg !11881
  br i1 %2, label %29, label %3, !dbg !11883

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !11884
  %5 = icmp eq i8 %4, 0, !dbg !11885
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !11886
  br i1 %6, label %29, label %8, !dbg !11886

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11879, metadata !DIExpression()), !dbg !11880
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !11887

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !11879, metadata !DIExpression()), !dbg !11880
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !11889
  br i1 %10, label %11, label %15, !dbg !11894

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !11895
  %13 = load i8*, i8** %12, align 4, !dbg !11895
  %14 = icmp eq i8* %13, %0, !dbg !11896
  br i1 %14, label %29, label %15, !dbg !11897

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !11898
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !11879, metadata !DIExpression()), !dbg !11880
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11899
  br i1 %17, label %7, label %8, !dbg !11900, !llvm.loop !11901

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !11879, metadata !DIExpression()), !dbg !11880
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !11903
  br i1 %20, label %21, label %26, !dbg !11907

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !11908
  %23 = load i8*, i8** %22, align 4, !dbg !11908
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #27, !dbg !11909
  %25 = icmp eq i32 %24, 0, !dbg !11910
  br i1 %25, label %29, label %26, !dbg !11911

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !11912
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !11879, metadata !DIExpression()), !dbg !11880
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11913
  br i1 %28, label %29, label %18, !dbg !11887, !llvm.loop !11914

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !11880
  ret %struct.device* %30, !dbg !11916
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !11917 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11921, metadata !DIExpression()), !dbg !11922
  %2 = icmp eq %struct.device* %0, null, !dbg !11923
  br i1 %2, label %14, label %3, !dbg !11925

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !11926
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !11926
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !11927
  %7 = load i8, i8* %6, align 1, !dbg !11927
  %8 = and i8 %7, 1, !dbg !11927
  %9 = icmp eq i8 %8, 0, !dbg !11927
  br i1 %9, label %14, label %10, !dbg !11928

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !11929
  %12 = load i8, i8* %11, align 1, !dbg !11929
  %13 = icmp eq i8 %12, 0, !dbg !11930
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !11922
  ret i1 %15, !dbg !11931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !11932 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !11937, metadata !DIExpression()), !dbg !11938
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !11939
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !11940
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11941 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11949, metadata !DIExpression()), !dbg !11954
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11950, metadata !DIExpression()), !dbg !11954
  call void @llvm.dbg.value(metadata i8* %2, metadata !11951, metadata !DIExpression()), !dbg !11954
  %5 = bitcast i32* %4 to i8*, !dbg !11955
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11955
  call void @llvm.dbg.value(metadata i32 0, metadata !11952, metadata !DIExpression()), !dbg !11954
  store i32 0, i32* %4, align 4, !dbg !11956
  call void @llvm.dbg.value(metadata i32* %4, metadata !11952, metadata !DIExpression(DW_OP_deref)), !dbg !11954
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !11957
  call void @llvm.dbg.value(metadata i16* %6, metadata !11953, metadata !DIExpression()), !dbg !11954
  %7 = load i32, i32* %4, align 4, !dbg !11958
  call void @llvm.dbg.value(metadata i32 %7, metadata !11952, metadata !DIExpression()), !dbg !11954
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !11959
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11960
  ret i32 %8, !dbg !11961
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !11962 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11966, metadata !DIExpression()), !dbg !11972
  call void @llvm.dbg.value(metadata i32* %1, metadata !11967, metadata !DIExpression()), !dbg !11972
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11973
  %4 = load i16*, i16** %3, align 4, !dbg !11973
  call void @llvm.dbg.value(metadata i16* %4, metadata !11968, metadata !DIExpression()), !dbg !11972
  %5 = icmp eq i16* %4, null, !dbg !11974
  br i1 %5, label %14, label %6, !dbg !11975

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !11976
  call void @llvm.dbg.value(metadata i32 %7, metadata !11969, metadata !DIExpression()), !dbg !11976
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !11977
  %9 = load i16, i16* %8, align 2, !dbg !11977
  %10 = add i16 %9, -32767, !dbg !11978
  %11 = icmp ult i16 %10, 2, !dbg !11978
  %12 = add i32 %7, 1, !dbg !11979
  call void @llvm.dbg.value(metadata i32 %12, metadata !11969, metadata !DIExpression()), !dbg !11976
  br i1 %11, label %13, label %6, !dbg !11978, !llvm.loop !11981

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !11984
  br label %14, !dbg !11985

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !11986
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !11987 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !11991, metadata !DIExpression()), !dbg !12002
  call void @llvm.dbg.value(metadata i32 %1, metadata !11992, metadata !DIExpression()), !dbg !12002
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !11993, metadata !DIExpression()), !dbg !12002
  call void @llvm.dbg.value(metadata i8* %3, metadata !11994, metadata !DIExpression()), !dbg !12002
  call void @llvm.dbg.value(metadata i32 0, metadata !11995, metadata !DIExpression()), !dbg !12003
  %5 = icmp eq i32 %1, 0, !dbg !12004
  br i1 %5, label %16, label %8, !dbg !12005

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !11995, metadata !DIExpression()), !dbg !12003
  %7 = icmp eq i32 %15, %1, !dbg !12004
  br i1 %7, label %16, label %8, !dbg !12005, !llvm.loop !12006

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11995, metadata !DIExpression()), !dbg !12003
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12008
  %11 = load i16, i16* %10, align 2, !dbg !12008
  call void @llvm.dbg.value(metadata i16 %11, metadata !11997, metadata !DIExpression()), !dbg !12009
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !12010
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12000, metadata !DIExpression()), !dbg !12009
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #27, !dbg !12011
  call void @llvm.dbg.value(metadata i32 %13, metadata !12001, metadata !DIExpression()), !dbg !12009
  %14 = icmp slt i32 %13, 0, !dbg !12012
  %15 = add nuw i32 %9, 1, !dbg !12014
  call void @llvm.dbg.value(metadata i32 %15, metadata !11995, metadata !DIExpression()), !dbg !12003
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12015
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !12016 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12020, metadata !DIExpression()), !dbg !12023
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12021, metadata !DIExpression()), !dbg !12023
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12022, metadata !DIExpression()), !dbg !12023
  %2 = sext i16 %0 to i32, !dbg !12024
  %3 = icmp slt i16 %0, 1, !dbg !12026
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12027
  %6 = add nsw i32 %2, -1, !dbg !12027
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12027
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12027
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12021, metadata !DIExpression()), !dbg !12023
  ret %struct.device* %8, !dbg !12028
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12029 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12031, metadata !DIExpression()), !dbg !12036
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12032, metadata !DIExpression()), !dbg !12036
  call void @llvm.dbg.value(metadata i8* %2, metadata !12033, metadata !DIExpression()), !dbg !12036
  %5 = bitcast i32* %4 to i8*, !dbg !12037
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12037
  call void @llvm.dbg.value(metadata i32 0, metadata !12034, metadata !DIExpression()), !dbg !12036
  store i32 0, i32* %4, align 4, !dbg !12038
  call void @llvm.dbg.value(metadata i32* %4, metadata !12034, metadata !DIExpression(DW_OP_deref)), !dbg !12036
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !12039
  call void @llvm.dbg.value(metadata i16* %6, metadata !12035, metadata !DIExpression()), !dbg !12036
  %7 = load i32, i32* %4, align 4, !dbg !12040
  call void @llvm.dbg.value(metadata i32 %7, metadata !12034, metadata !DIExpression()), !dbg !12036
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !12041
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12042
  ret i32 %8, !dbg !12043
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12044 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12046, metadata !DIExpression()), !dbg !12051
  call void @llvm.dbg.value(metadata i32* %1, metadata !12047, metadata !DIExpression()), !dbg !12051
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12052
  %4 = load i16*, i16** %3, align 4, !dbg !12052
  call void @llvm.dbg.value(metadata i16* %4, metadata !12048, metadata !DIExpression()), !dbg !12051
  call void @llvm.dbg.value(metadata i32 0, metadata !12049, metadata !DIExpression()), !dbg !12051
  call void @llvm.dbg.value(metadata i32 0, metadata !12050, metadata !DIExpression()), !dbg !12051
  %5 = icmp eq i16* %4, null, !dbg !12053
  br i1 %5, label %22, label %6, !dbg !12055

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12049, metadata !DIExpression()), !dbg !12051
  call void @llvm.dbg.value(metadata i16* %8, metadata !12048, metadata !DIExpression()), !dbg !12051
  %9 = load i16, i16* %8, align 2, !dbg !12056
  %10 = icmp eq i16 %9, -32768, !dbg !12060
  call void @llvm.dbg.value(metadata i32 undef, metadata !12049, metadata !DIExpression()), !dbg !12051
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12061
  call void @llvm.dbg.value(metadata i16* %11, metadata !12048, metadata !DIExpression()), !dbg !12051
  %12 = zext i1 %10 to i32, !dbg !12062
  %13 = add i32 %7, %12, !dbg !12062
  call void @llvm.dbg.value(metadata i32 %13, metadata !12049, metadata !DIExpression()), !dbg !12051
  %14 = icmp eq i32 %13, 2, !dbg !12063
  br i1 %14, label %15, label %6, !dbg !12064

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12051
  call void @llvm.dbg.value(metadata i32 %16, metadata !12050, metadata !DIExpression()), !dbg !12051
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12065
  %18 = load i16, i16* %17, align 2, !dbg !12065
  %19 = icmp eq i16 %18, 32767, !dbg !12066
  %20 = add i32 %16, 1, !dbg !12067
  call void @llvm.dbg.value(metadata i32 %20, metadata !12050, metadata !DIExpression()), !dbg !12051
  br i1 %19, label %21, label %15, !dbg !12069, !llvm.loop !12070

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12072
  br label %22, !dbg !12073

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12074
  call void @llvm.dbg.value(metadata i16* %23, metadata !12048, metadata !DIExpression()), !dbg !12051
  ret i16* %23, !dbg !12075
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !12076 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12079
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !12080
  ret i32* %2, !dbg !12081
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !12082 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12230, metadata !DIExpression()), !dbg !12233
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12231, metadata !DIExpression()), !dbg !12233
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12232, metadata !DIExpression()), !dbg !12233
  ret void, !dbg !12234
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12235 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12239, metadata !DIExpression()), !dbg !12241
  call void @llvm.dbg.value(metadata i32 %1, metadata !12240, metadata !DIExpression()), !dbg !12241
  ret void, !dbg !12242
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12243 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12247, metadata !DIExpression()), !dbg !12249
  call void @llvm.dbg.value(metadata i32 %1, metadata !12248, metadata !DIExpression()), !dbg !12249
  ret void, !dbg !12250
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12251 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12255, metadata !DIExpression()), !dbg !12257
  call void @llvm.dbg.value(metadata i8* %1, metadata !12256, metadata !DIExpression()), !dbg !12257
  ret i32 -134, !dbg !12258
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12259 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12263, metadata !DIExpression()), !dbg !12265
  call void @llvm.dbg.value(metadata i8* %1, metadata !12264, metadata !DIExpression()), !dbg !12265
  ret i32 -134, !dbg !12266
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !12267 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12270, metadata !DIExpression()), !dbg !12271
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12272, !srcloc !12278
  call void @llvm.dbg.value(metadata i32 undef, metadata !12275, metadata !DIExpression()) #25, !dbg !12279
  call void @llvm.dbg.value(metadata i32 undef, metadata !12276, metadata !DIExpression()) #25, !dbg !12279
  br label %3, !dbg !12280

3:                                                ; preds = %3, %1
  br label %3, !dbg !12281, !llvm.loop !12284
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12287 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12291, metadata !DIExpression()), !dbg !12293
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12292, metadata !DIExpression()), !dbg !12293
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !12294
  unreachable, !dbg !12294
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !12295 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12297, metadata !DIExpression()), !dbg !12298
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !12299
  unreachable, !dbg !12299
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12300 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12302, metadata !DIExpression()), !dbg !12306
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12303, metadata !DIExpression()), !dbg !12306
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12307, !srcloc !12278
  call void @llvm.dbg.value(metadata i32 undef, metadata !12275, metadata !DIExpression()) #25, !dbg !12309
  call void @llvm.dbg.value(metadata i32 undef, metadata !12276, metadata !DIExpression()) #25, !dbg !12309
  call void @llvm.dbg.value(metadata i32 undef, metadata !12304, metadata !DIExpression()), !dbg !12306
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12305, metadata !DIExpression()), !dbg !12306
  %4 = icmp eq %struct.__esf* %1, null, !dbg !12310
  br i1 %4, label %6, label %5, !dbg !12312

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !12313
  br label %7, !dbg !12314

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !12313
  br label %7, !dbg !12317

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !12307
  call void @llvm.dbg.value(metadata i32 %8, metadata !12275, metadata !DIExpression()) #25, !dbg !12309
  call void @llvm.dbg.value(metadata i32 %8, metadata !12304, metadata !DIExpression()), !dbg !12306
  %9 = tail call fastcc %struct.k_thread* @k_current_get.97() #28, !dbg !12319
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12305, metadata !DIExpression()), !dbg !12306
  call void @llvm.dbg.value(metadata i32 undef, metadata !12320, metadata !DIExpression()) #25, !dbg !12323
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !12325, !srcloc !12326
  tail call fastcc void @k_thread_abort.98(%struct.k_thread* noundef %9) #26, !dbg !12327
  ret void, !dbg !12330
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.97() unnamed_addr #9 !dbg !12331 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.99() #28, !dbg !12335
  ret %struct.k_thread* %1, !dbg !12336
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.98(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12337 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12341, metadata !DIExpression()), !dbg !12342
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12343, !srcloc !12345
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !12346
  ret void, !dbg !12347
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.99() unnamed_addr #9 !dbg !12348 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12349, !srcloc !12351
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !12352
  ret %struct.k_thread* %1, !dbg !12353
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12354 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12358, metadata !DIExpression()), !dbg !12361
  call void @llvm.dbg.value(metadata i32 %1, metadata !12359, metadata !DIExpression()), !dbg !12361
  call void @llvm.dbg.value(metadata i32 %2, metadata !12360, metadata !DIExpression()), !dbg !12361
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #27, !dbg !12362
  ret void, !dbg !12363
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12364 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12368, metadata !DIExpression()), !dbg !12371
  call void @llvm.dbg.value(metadata i8* %1, metadata !12369, metadata !DIExpression()), !dbg !12371
  call void @llvm.dbg.value(metadata i32 %2, metadata !12370, metadata !DIExpression()), !dbg !12371
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #27, !dbg !12372
  ret void, !dbg !12373
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12374 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !12375
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_bss_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_bss_start to i32))) #26, !dbg !12376
  ret void, !dbg !12377
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12378 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12380, metadata !DIExpression()), !dbg !12381
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !12382
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12383
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12384
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12385
  %4 = trunc i32 %0 to i8, !dbg !12386
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12387
  store i8 %4, i8* %5, align 4, !dbg !12388
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12389
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !12390
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12391
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12392
  store i8* %8, i8** %9, align 4, !dbg !12393
  ret void, !dbg !12394
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12395 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12397, metadata !DIExpression()), !dbg !12403
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12404
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12398, metadata !DIExpression()), !dbg !12403
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12405
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12399, metadata !DIExpression()), !dbg !12403
  call void @llvm.dbg.value(metadata i8* null, metadata !12402, metadata !DIExpression()), !dbg !12403
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12406
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12407
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #27, !dbg !12408
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !12409
  ret void, !dbg !12410
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !12411 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12415, metadata !DIExpression()), !dbg !12416
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12417
  ret i8* %2, !dbg !12418
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12419 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12424, metadata !DIExpression()), !dbg !12425
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12426
  %3 = load i8, i8* %2, align 1, !dbg !12427
  %4 = and i8 %3, -5, !dbg !12427
  store i8 %4, i8* %2, align 1, !dbg !12427
  ret void, !dbg !12428
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #8 !dbg !12429 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !12432
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #27, !dbg !12433
  %3 = ptrtoint i8* %2 to i32, !dbg !12442
  %4 = add i32 %3, 2048, !dbg !12443
  call void @llvm.dbg.value(metadata i32 %4, metadata !12437, metadata !DIExpression()) #25, !dbg !12444
  call void @llvm.dbg.value(metadata i32 %4, metadata !12445, metadata !DIExpression()) #25, !dbg !12448
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !12450, !srcloc !12451
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12452
  %6 = or i32 %5, 512, !dbg !12452
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12452
  tail call fastcc void @__NVIC_SetPriority.106(i32 noundef -2, i32 noundef 255) #27, !dbg !12453
  tail call fastcc void @__NVIC_SetPriority.106(i32 noundef -5, i32 noundef 0) #27, !dbg !12456
  tail call fastcc void @__NVIC_SetPriority.106(i32 noundef -12, i32 noundef 0) #27, !dbg !12457
  tail call fastcc void @__NVIC_SetPriority.106(i32 noundef -11, i32 noundef 0) #27, !dbg !12458
  tail call fastcc void @__NVIC_SetPriority.106(i32 noundef -10, i32 noundef 0) #27, !dbg !12459
  tail call fastcc void @__NVIC_SetPriority.106(i32 noundef -4, i32 noundef 0) #27, !dbg !12460
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12461
  %8 = or i32 %7, 458752, !dbg !12461
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12461
  tail call void @z_arm_fault_init() #27, !dbg !12462
  tail call void @z_arm_cpu_idle_init() #27, !dbg !12463
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12464
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12467
  %9 = tail call i32 @z_arm_mpu_init() #27, !dbg !12468
  tail call void @z_arm_configure_static_mpu_regions() #27, !dbg !12469
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12470
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !12470
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12431, metadata !DIExpression()), !dbg !12471
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !12472
  call void @z_device_state_init() #27, !dbg !12473
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !12474
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !12475
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !12476
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !12477
  unreachable, !dbg !12477
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2087 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2091, metadata !DIExpression()), !dbg !12478
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12479
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12479
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2092, metadata !DIExpression()), !dbg !12478
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2092, metadata !DIExpression()), !dbg !12478
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12480
  br i1 %7, label %8, label %35, !dbg !12481

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2092, metadata !DIExpression()), !dbg !12478
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12482
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12482
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2102, metadata !DIExpression()), !dbg !12483
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12484
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12484
  %14 = tail call i32 %13(%struct.device* noundef %11) #27, !dbg !12485
  call void @llvm.dbg.value(metadata i32 %14, metadata !2106, metadata !DIExpression()), !dbg !12483
  %15 = icmp eq %struct.device* %11, null, !dbg !12486
  br i1 %15, label %32, label %16, !dbg !12488

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12489
  br i1 %17, label %26, label %18, !dbg !12492

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12493
  call void @llvm.dbg.value(metadata i32 %19, metadata !2106, metadata !DIExpression()), !dbg !12483
  %20 = icmp ult i32 %19, 255, !dbg !12495
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12495
  call void @llvm.dbg.value(metadata i32 %21, metadata !2106, metadata !DIExpression()), !dbg !12483
  %22 = trunc i32 %21 to i8, !dbg !12496
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12497
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12497
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12498
  store i8 %22, i8* %25, align 1, !dbg !12499
  br label %26, !dbg !12500

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12501
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12501
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12502
  %30 = load i8, i8* %29, align 1, !dbg !12503
  %31 = or i8 %30, 1, !dbg !12503
  store i8 %31, i8* %29, align 1, !dbg !12503
  br label %32, !dbg !12504

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12505
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2092, metadata !DIExpression()), !dbg !12478
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12480
  br i1 %34, label %8, label %35, !dbg !12481, !llvm.loop !12506

35:                                               ; preds = %32, %1
  ret void, !dbg !12508
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.106(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12509 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12511, metadata !DIExpression()), !dbg !12513
  call void @llvm.dbg.value(metadata i32 %1, metadata !12512, metadata !DIExpression()), !dbg !12513
  %3 = trunc i32 %1 to i8, !dbg !12514
  %4 = shl i8 %3, 4, !dbg !12514
  %5 = and i32 %0, 15, !dbg !12517
  %6 = add nsw i32 %5, -4, !dbg !12518
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12519
  store volatile i8 %4, i8* %7, align 1, !dbg !12520
  ret void, !dbg !12521
}

; Function Attrs: optsize
declare !dbg !12522 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !12523 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12526, metadata !DIExpression()), !dbg !12527
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12528
  store i8 1, i8* %2, align 1, !dbg !12529
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12530
  store i8 1, i8* %3, align 4, !dbg !12531
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12532
  store i32 0, i32* %4, align 4, !dbg !12533
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12534
  store i32 0, i32* %5, align 4, !dbg !12535
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12536
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !12537
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12538
  ret void, !dbg !12539
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12540 {
  tail call void @z_sched_init() #27, !dbg !12545
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12546
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.107, i32 0, i32 0)) #27, !dbg !12547
  call void @llvm.dbg.value(metadata i8* %1, metadata !12544, metadata !DIExpression()), !dbg !12548
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !12549
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !12550
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !12551
  ret i8* %1, !dbg !12552
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #8 !dbg !12553 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12555, metadata !DIExpression()), !dbg !12556
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #27, !dbg !12557
  unreachable, !dbg !12558
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12559 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12561, metadata !DIExpression()), !dbg !12564
  call void @llvm.dbg.value(metadata i8* %1, metadata !12562, metadata !DIExpression()), !dbg !12564
  call void @llvm.dbg.value(metadata i8* %2, metadata !12563, metadata !DIExpression()), !dbg !12564
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12565
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !12566
  tail call void @boot_banner() #27, !dbg !12567
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !12568
  tail call void @z_init_static_threads() #27, !dbg !12569
  tail call void @main() #27, !dbg !12570
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12571
  %5 = and i8 %4, -2, !dbg !12571
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12571
  ret void, !dbg !12572
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !12573 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12583, metadata !DIExpression()), !dbg !12585
  call void @llvm.dbg.value(metadata i8* %1, metadata !12584, metadata !DIExpression()), !dbg !12585
  ret void, !dbg !12586
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !12587 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12589, metadata !DIExpression()), !dbg !12591
  call void @llvm.dbg.value(metadata i8* %1, metadata !12590, metadata !DIExpression()), !dbg !12591
  ret void, !dbg !12592
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !12593 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !12594, !srcloc !12601
  call void @llvm.dbg.value(metadata i32 %1, metadata !12597, metadata !DIExpression()) #25, !dbg !12602
  %2 = icmp ne i32 %1, 0, !dbg !12603
  ret i1 %2, !dbg !12604
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #7 !dbg !12605 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12606
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12607
  %3 = load i8, i8* %2, align 4, !dbg !12608
  %4 = or i8 %3, 1, !dbg !12608
  store i8 %4, i8* %2, align 4, !dbg !12608
  ret void, !dbg !12609
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #7 !dbg !12610 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12611
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12612
  %3 = load i8, i8* %2, align 4, !dbg !12613
  %4 = and i8 %3, -2, !dbg !12613
  store i8 %4, i8* %2, align 4, !dbg !12613
  ret void, !dbg !12614
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !12615 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12616
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12617
  %3 = load i8, i8* %2, align 4, !dbg !12617
  %4 = and i8 %3, 1, !dbg !12618
  %5 = icmp ne i8 %4, 0, !dbg !12619
  ret i1 %5, !dbg !12620
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12621 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12625, metadata !DIExpression()), !dbg !12627
  call void @llvm.dbg.value(metadata i8* %1, metadata !12626, metadata !DIExpression()), !dbg !12627
  ret i32 -88, !dbg !12628
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !12629 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12633, metadata !DIExpression()), !dbg !12634
  ret i8* null, !dbg !12635
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !12636 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12640, metadata !DIExpression()), !dbg !12643
  call void @llvm.dbg.value(metadata i8* %1, metadata !12641, metadata !DIExpression()), !dbg !12643
  call void @llvm.dbg.value(metadata i32 %2, metadata !12642, metadata !DIExpression()), !dbg !12643
  ret i32 -88, !dbg !12644
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2113 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2227, metadata !DIExpression()), !dbg !12645
  call void @llvm.dbg.value(metadata i8* %1, metadata !2228, metadata !DIExpression()), !dbg !12645
  call void @llvm.dbg.value(metadata i32 %2, metadata !2229, metadata !DIExpression()), !dbg !12645
  call void @llvm.dbg.value(metadata i32 0, metadata !2230, metadata !DIExpression()), !dbg !12645
  call void @llvm.dbg.value(metadata i8 undef, metadata !2232, metadata !DIExpression()), !dbg !12645
  %4 = icmp eq i8* %1, null, !dbg !12646
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !12648
  br i1 %6, label %46, label %7, !dbg !12648

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12649
  %9 = load i8, i8* %8, align 1, !dbg !12649
  call void @llvm.dbg.value(metadata i8 %9, metadata !2232, metadata !DIExpression()), !dbg !12645
  %10 = add i32 %2, -1, !dbg !12650
  call void @llvm.dbg.value(metadata i32 %10, metadata !2229, metadata !DIExpression()), !dbg !12645
  call void @llvm.dbg.value(metadata i8 0, metadata !2233, metadata !DIExpression()), !dbg !12651
  call void @llvm.dbg.value(metadata i8 %9, metadata !2232, metadata !DIExpression()), !dbg !12645
  call void @llvm.dbg.value(metadata i32 0, metadata !2230, metadata !DIExpression()), !dbg !12645
  %11 = icmp eq i8 %9, 0, !dbg !12652
  br i1 %11, label %12, label %15, !dbg !12654

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !12655
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !12656
  store i8 0, i8* %14, align 1, !dbg !12657
  br label %46, !dbg !12658

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2233, metadata !DIExpression()), !dbg !12651
  call void @llvm.dbg.value(metadata i8 %17, metadata !2232, metadata !DIExpression()), !dbg !12645
  call void @llvm.dbg.value(metadata i32 %18, metadata !2230, metadata !DIExpression()), !dbg !12645
  %19 = zext i8 %17 to i32, !dbg !12659
  %20 = zext i8 %16 to i32, !dbg !12660
  %21 = shl nuw i32 1, %20, !dbg !12660
  call void @llvm.dbg.value(metadata i32 %21, metadata !2231, metadata !DIExpression()), !dbg !12645
  %22 = and i32 %21, %19, !dbg !12662
  %23 = icmp eq i32 %22, 0, !dbg !12664
  br i1 %23, label %42, label %24, !dbg !12665

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !12666
  %26 = sub i32 %10, %18, !dbg !12667
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !12668
  %28 = load i8*, i8** %27, align 4, !dbg !12668
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !12669
  %30 = load i32, i32* %29, align 4, !dbg !12669
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !12670
  %32 = add i32 %31, %18, !dbg !12671
  call void @llvm.dbg.value(metadata i32 %32, metadata !2230, metadata !DIExpression()), !dbg !12645
  %33 = trunc i32 %21 to i8, !dbg !12672
  %34 = xor i8 %33, -1, !dbg !12672
  %35 = and i8 %17, %34, !dbg !12672
  call void @llvm.dbg.value(metadata i8 %35, metadata !2232, metadata !DIExpression()), !dbg !12645
  %36 = icmp eq i8 %35, 0, !dbg !12673
  br i1 %36, label %12, label %37, !dbg !12675

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !12676
  %39 = sub i32 %10, %32, !dbg !12678
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.108, i32 0, i32 0), i32 noundef 1) #26, !dbg !12679
  %41 = add i32 %40, %32, !dbg !12680
  call void @llvm.dbg.value(metadata i32 %41, metadata !2230, metadata !DIExpression()), !dbg !12645
  br label %42, !dbg !12681

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !12645
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !12645
  call void @llvm.dbg.value(metadata i8 %44, metadata !2232, metadata !DIExpression()), !dbg !12645
  call void @llvm.dbg.value(metadata i32 %43, metadata !2230, metadata !DIExpression()), !dbg !12645
  %45 = add i8 %16, 1, !dbg !12682
  call void @llvm.dbg.value(metadata i8 %45, metadata !2233, metadata !DIExpression()), !dbg !12651
  br label %15, !dbg !12654

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.109, i32 0, i32 0), %3 ], !dbg !12645
  ret i8* %47, !dbg !12683
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !12684 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12688, metadata !DIExpression()), !dbg !12693
  call void @llvm.dbg.value(metadata i32 %1, metadata !12689, metadata !DIExpression()), !dbg !12693
  call void @llvm.dbg.value(metadata i8* %2, metadata !12690, metadata !DIExpression()), !dbg !12693
  call void @llvm.dbg.value(metadata i32 %3, metadata !12691, metadata !DIExpression()), !dbg !12693
  %5 = icmp ult i32 %1, %3, !dbg !12694
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !12694
  call void @llvm.dbg.value(metadata i32 %6, metadata !12692, metadata !DIExpression()), !dbg !12693
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #27, !dbg !12695
  ret i32 %6, !dbg !12696
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12697 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12701, metadata !DIExpression()), !dbg !12702
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #27, !dbg !12703
  ret void, !dbg !12704
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !12705 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12714, metadata !DIExpression()), !dbg !12725
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12715, metadata !DIExpression()), !dbg !12725
  call void @llvm.dbg.value(metadata i32 %2, metadata !12716, metadata !DIExpression()), !dbg !12725
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12717, metadata !DIExpression()), !dbg !12725
  call void @llvm.dbg.value(metadata i8* %4, metadata !12718, metadata !DIExpression()), !dbg !12725
  call void @llvm.dbg.value(metadata i8* %5, metadata !12719, metadata !DIExpression()), !dbg !12725
  call void @llvm.dbg.value(metadata i8* %6, metadata !12720, metadata !DIExpression()), !dbg !12725
  call void @llvm.dbg.value(metadata i32 %7, metadata !12721, metadata !DIExpression()), !dbg !12725
  call void @llvm.dbg.value(metadata i32 %8, metadata !12722, metadata !DIExpression()), !dbg !12725
  call void @llvm.dbg.value(metadata i8* undef, metadata !12723, metadata !DIExpression()), !dbg !12725
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !12726
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %11) #26, !dbg !12727
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !12728
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !12729
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !12730
  call void @llvm.dbg.value(metadata i8* %13, metadata !12724, metadata !DIExpression()), !dbg !12725
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #27, !dbg !12731
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !12732
  store i8* null, i8** %14, align 4, !dbg !12733
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12734
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !12734
  br i1 %16, label %20, label %17, !dbg !12736

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !12737
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !12737
  br label %20, !dbg !12738

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !12725
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12739
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !12741
  ret i8* %13, !dbg !12742
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #4 !dbg !12743 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !12748, metadata !DIExpression()), !dbg !12749
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !12750
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !12751
  ret void, !dbg !12752
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !12753 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12758, metadata !DIExpression()), !dbg !12762
  call void @llvm.dbg.value(metadata i32 %1, metadata !12759, metadata !DIExpression()), !dbg !12762
  call void @llvm.dbg.value(metadata i32 %2, metadata !12760, metadata !DIExpression()), !dbg !12762
  call void @llvm.dbg.value(metadata i32 %3, metadata !12761, metadata !DIExpression()), !dbg !12762
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !12763
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !12764
  %6 = trunc i32 %3 to i8, !dbg !12765
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !12766
  store i8 %6, i8* %7, align 4, !dbg !12767
  %8 = trunc i32 %2 to i8, !dbg !12768
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !12769
  store i8 %8, i8* %9, align 1, !dbg !12770
  %10 = trunc i32 %1 to i8, !dbg !12771
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !12772
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !12772
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !12772
  store i8 %10, i8* %13, align 2, !dbg !12773
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !12774
  store i8 0, i8* %14, align 1, !dbg !12775
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !12776
  ret void, !dbg !12777
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !12778 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12782, metadata !DIExpression()), !dbg !12790
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12783, metadata !DIExpression()), !dbg !12790
  call void @llvm.dbg.value(metadata i32 %2, metadata !12784, metadata !DIExpression()), !dbg !12790
  call void @llvm.dbg.value(metadata i32 0, metadata !12789, metadata !DIExpression()), !dbg !12790
  %4 = add i32 %2, 7, !dbg !12791
  %5 = and i32 %4, -8, !dbg !12791
  %6 = add i32 %5, 64, !dbg !12791
  call void @llvm.dbg.value(metadata i32 %6, metadata !12785, metadata !DIExpression()), !dbg !12790
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.119(%struct.z_thread_stack_element* noundef %1) #26, !dbg !12793
  call void @llvm.dbg.value(metadata i8* %7, metadata !12788, metadata !DIExpression()), !dbg !12790
  call void @llvm.dbg.value(metadata i32 %5, metadata !12786, metadata !DIExpression()), !dbg !12790
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !12794
  call void @llvm.dbg.value(metadata i8* %8, metadata !12787, metadata !DIExpression()), !dbg !12790
  call void @llvm.dbg.value(metadata i32 0, metadata !12789, metadata !DIExpression()), !dbg !12790
  %9 = ptrtoint i8* %7 to i32, !dbg !12795
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12796
  store i32 %9, i32* %10, align 4, !dbg !12797
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12798
  store i32 %5, i32* %11, align 4, !dbg !12799
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !12800
  store i32 0, i32* %12, align 4, !dbg !12801
  call void @llvm.dbg.value(metadata i8* %8, metadata !12787, metadata !DIExpression()), !dbg !12790
  ret i8* %8, !dbg !12802
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.119(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !12803 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12807, metadata !DIExpression()), !dbg !12808
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12809
  ret i8* %2, !dbg !12810
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12811 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12816, metadata !DIExpression()), !dbg !12817
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !12818
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !12819
  ret void, !dbg !12820
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12821 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12823, metadata !DIExpression()), !dbg !12824
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12825
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !12826
  ret void, !dbg !12827
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12828 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12832, metadata !DIExpression()), !dbg !12833
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12834
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12835
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12836
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12837
  ret void, !dbg !12838
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !12839 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12844, metadata !DIExpression()), !dbg !12845
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12846
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !12847
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12848
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !12849
  ret void, !dbg !12850
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !12851 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !12868, metadata !DIExpression()), !dbg !12869
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12859, metadata !DIExpression()), !dbg !12869
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12860, metadata !DIExpression()), !dbg !12869
  call void @llvm.dbg.value(metadata i32 %2, metadata !12861, metadata !DIExpression()), !dbg !12869
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12862, metadata !DIExpression()), !dbg !12869
  call void @llvm.dbg.value(metadata i8* %4, metadata !12863, metadata !DIExpression()), !dbg !12869
  call void @llvm.dbg.value(metadata i8* %5, metadata !12864, metadata !DIExpression()), !dbg !12869
  call void @llvm.dbg.value(metadata i8* %6, metadata !12865, metadata !DIExpression()), !dbg !12869
  call void @llvm.dbg.value(metadata i32 %7, metadata !12866, metadata !DIExpression()), !dbg !12869
  call void @llvm.dbg.value(metadata i32 %8, metadata !12867, metadata !DIExpression()), !dbg !12869
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !12870
  %13 = icmp eq i64 %11, -1, !dbg !12871
  br i1 %13, label %15, label %14, !dbg !12873

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !12874
  br label %15, !dbg !12876

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !12877
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12878 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12883, metadata !DIExpression()), !dbg !12884
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12882, metadata !DIExpression()), !dbg !12884
  %4 = icmp eq i64 %3, 0, !dbg !12885
  br i1 %4, label %5, label %6, !dbg !12887

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !12888
  br label %7, !dbg !12890

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !12891
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !12893
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12894 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12898, metadata !DIExpression()), !dbg !12899
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12900, !srcloc !12902
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !12903
  ret void, !dbg !12904
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12905 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12908, metadata !DIExpression()), !dbg !12909
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12907, metadata !DIExpression()), !dbg !12909
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12910
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !12911
  ret void, !dbg !12912
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !12913 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12915, metadata !DIExpression()), !dbg !12935
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !12936

1:                                                ; preds = %2
  tail call void @k_sched_lock() #27, !dbg !12937
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12933, metadata !DIExpression()), !dbg !12938
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !12939

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !12915, metadata !DIExpression()), !dbg !12935
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !12940
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12940
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !12943
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !12943
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !12944
  %9 = load i32, i32* %8, align 4, !dbg !12944
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !12945
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !12945
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !12946
  %13 = load i8*, i8** %12, align 4, !dbg !12946
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !12947
  %15 = load i8*, i8** %14, align 4, !dbg !12947
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !12948
  %17 = load i8*, i8** %16, align 4, !dbg !12948
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !12949
  %19 = load i32, i32* %18, align 4, !dbg !12949
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !12950
  %21 = load i32, i32* %20, align 4, !dbg !12950
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !12951
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12952
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !12953
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !12954
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !12954
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !12955
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !12915, metadata !DIExpression()), !dbg !12935
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12956
  br i1 %27, label %2, label %1, !dbg !12936, !llvm.loop !12958

28:                                               ; preds = %0
  tail call void @k_sched_lock() #27, !dbg !12937
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12933, metadata !DIExpression()), !dbg !12938
  br label %29, !dbg !12939

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #27, !dbg !12960
  ret void, !dbg !12961

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !12933, metadata !DIExpression()), !dbg !12938
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !12962
  %33 = load i32, i32* %32, align 4, !dbg !12962
  %34 = icmp eq i32 %33, -1, !dbg !12966
  br i1 %34, label %43, label %35, !dbg !12967

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !12968
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !12968
  %38 = icmp sgt i32 %33, 0, !dbg !12970
  %39 = select i1 %38, i32 %33, i32 0, !dbg !12970
  %40 = zext i32 %39 to i64, !dbg !12970
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #26, !dbg !12970
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !12971
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !12971
  br label %43, !dbg !12972

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !12973
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !12933, metadata !DIExpression()), !dbg !12938
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12974
  br i1 %45, label %30, label %29, !dbg !12939, !llvm.loop !12976
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !12978 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12983, metadata !DIExpression()), !dbg !12984
  call void @llvm.dbg.value(metadata i64 %0, metadata !12985, metadata !DIExpression()), !dbg !13002
  call void @llvm.dbg.value(metadata i32 1000, metadata !12990, metadata !DIExpression()), !dbg !13002
  call void @llvm.dbg.value(metadata i32 10000, metadata !12991, metadata !DIExpression()), !dbg !13002
  call void @llvm.dbg.value(metadata i8 1, metadata !12992, metadata !DIExpression()), !dbg !13002
  call void @llvm.dbg.value(metadata i8 0, metadata !12993, metadata !DIExpression()), !dbg !13002
  call void @llvm.dbg.value(metadata i8 1, metadata !12994, metadata !DIExpression()), !dbg !13002
  call void @llvm.dbg.value(metadata i8 0, metadata !12995, metadata !DIExpression()), !dbg !13002
  call void @llvm.dbg.value(metadata i8 1, metadata !12996, metadata !DIExpression()), !dbg !13002
  call void @llvm.dbg.value(metadata i8 0, metadata !12997, metadata !DIExpression()), !dbg !13002
  call void @llvm.dbg.value(metadata i64 0, metadata !12998, metadata !DIExpression()), !dbg !13002
  call void @llvm.dbg.value(metadata i64 0, metadata !12998, metadata !DIExpression()), !dbg !13002
  %2 = mul i64 %0, 10, !dbg !13004
  ret i64 %2, !dbg !13010
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #8 !dbg !13011 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13013, metadata !DIExpression()), !dbg !13017
  call void @llvm.dbg.value(metadata i8* %1, metadata !13014, metadata !DIExpression()), !dbg !13017
  call void @llvm.dbg.value(metadata i8* %2, metadata !13015, metadata !DIExpression()), !dbg !13017
  call void @llvm.dbg.value(metadata i8* %3, metadata !13016, metadata !DIExpression()), !dbg !13017
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13018
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13019
  %7 = load i8, i8* %6, align 4, !dbg !13020
  %8 = or i8 %7, 4, !dbg !13020
  store i8 %8, i8* %6, align 4, !dbg !13020
  tail call void @z_thread_essential_clear() #26, !dbg !13021
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !13022
  unreachable, !dbg !13022
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !13023 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13027, metadata !DIExpression()), !dbg !13028
  ret i32 -134, !dbg !13029
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !13030 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13034, metadata !DIExpression()), !dbg !13036
  call void @llvm.dbg.value(metadata i32 %1, metadata !13035, metadata !DIExpression()), !dbg !13036
  ret i32 -134, !dbg !13037
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !13038 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13045, metadata !DIExpression()), !dbg !13047
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !13046, metadata !DIExpression()), !dbg !13047
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13048
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !13050
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13047
  ret i32 %6, !dbg !13051
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !13052 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13056, metadata !DIExpression()), !dbg !13057
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !13058
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13057
  ret i32 %3, !dbg !13060
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13061 {
  tail call void @sys_clock_idle_exit() #27, !dbg !13063
  ret void, !dbg !13064
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #8 !dbg !13065 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13067, metadata !DIExpression()), !dbg !13070
  call void @llvm.dbg.value(metadata i8* %1, metadata !13068, metadata !DIExpression()), !dbg !13070
  call void @llvm.dbg.value(metadata i8* %2, metadata !13069, metadata !DIExpression()), !dbg !13070
  br label %4, !dbg !13071

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13072, !srcloc !13079
  call void @llvm.dbg.value(metadata i32 undef, metadata !13075, metadata !DIExpression()) #25, !dbg !13080
  call void @llvm.dbg.value(metadata i32 undef, metadata !13076, metadata !DIExpression()) #25, !dbg !13080
  tail call fastcc void @k_cpu_idle() #26, !dbg !13081
  br label %4, !dbg !13071, !llvm.loop !13082
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13084 {
  tail call void @arch_cpu_idle() #27, !dbg !13085
  ret void, !dbg !13086
}

; Function Attrs: optsize
declare !dbg !13087 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !13088 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13106, metadata !DIExpression()), !dbg !13110
  call void @llvm.dbg.value(metadata i8* %1, metadata !13107, metadata !DIExpression()), !dbg !13110
  call void @llvm.dbg.value(metadata i32 %2, metadata !13108, metadata !DIExpression()), !dbg !13110
  call void @llvm.dbg.value(metadata i32 %3, metadata !13109, metadata !DIExpression()), !dbg !13110
  %5 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13111
  store i32 %2, i32* %5, align 4, !dbg !13112
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !13113
  store i32 %3, i32* %6, align 4, !dbg !13114
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13115
  store i8* %1, i8** %7, align 4, !dbg !13116
  %8 = mul i32 %3, %2, !dbg !13117
  %9 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !13118
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !13119
  store i8* %9, i8** %10, align 4, !dbg !13120
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !13121
  store i8* %1, i8** %11, align 4, !dbg !13122
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13123
  store i8* %1, i8** %12, align 4, !dbg !13124
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13125
  store i32 0, i32* %13, align 4, !dbg !13126
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !13127
  store i8 0, i8* %14, align 4, !dbg !13128
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13129
  tail call fastcc void @z_waitq_init.124(%struct._wait_q_t* noundef %15) #26, !dbg !13130
  ret void, !dbg !13131
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.124(%struct._wait_q_t* noundef %0) unnamed_addr #4 !dbg !13132 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13136, metadata !DIExpression()), !dbg !13137
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13138
  tail call fastcc void @sys_dlist_init.125(%struct._dnode* noundef %2) #26, !dbg !13139
  ret void, !dbg !13140
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.125(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !13141 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13146, metadata !DIExpression()), !dbg !13147
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13148
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13149
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13150
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13151
  ret void, !dbg !13152
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_alloc_init(%struct.k_msgq* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13153 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13157, metadata !DIExpression()), !dbg !13163
  call void @llvm.dbg.value(metadata i32 %1, metadata !13158, metadata !DIExpression()), !dbg !13163
  call void @llvm.dbg.value(metadata i32 %2, metadata !13159, metadata !DIExpression()), !dbg !13163
  %5 = bitcast i32* %4 to i8*, !dbg !13164
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13164
  call void @llvm.dbg.value(metadata i32* %4, metadata !13162, metadata !DIExpression(DW_OP_deref)), !dbg !13163
  %6 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !13165
  br i1 %6, label %13, label %7, !dbg !13167

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4, !dbg !13168
  call void @llvm.dbg.value(metadata i32 %8, metadata !13162, metadata !DIExpression()), !dbg !13163
  %9 = tail call fastcc i8* @z_thread_malloc(i32 noundef %8) #26, !dbg !13170
  call void @llvm.dbg.value(metadata i8* %9, metadata !13160, metadata !DIExpression()), !dbg !13163
  %10 = icmp eq i8* %9, null, !dbg !13171
  br i1 %10, label %13, label %11, !dbg !13173

11:                                               ; preds = %7
  tail call void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef nonnull %9, i32 noundef %1, i32 noundef %2) #26, !dbg !13174
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !13176
  store i8 1, i8* %12, align 4, !dbg !13177
  call void @llvm.dbg.value(metadata i32 0, metadata !13161, metadata !DIExpression()), !dbg !13163
  br label %13, !dbg !13178

13:                                               ; preds = %7, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -22, %3 ], [ -12, %7 ], !dbg !13179
  call void @llvm.dbg.value(metadata i32 %14, metadata !13161, metadata !DIExpression()), !dbg !13163
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13180
  ret i32 %14, !dbg !13181
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #23 !dbg !13182 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13187, metadata !DIExpression()), !dbg !13190
  call void @llvm.dbg.value(metadata i32 %1, metadata !13188, metadata !DIExpression()), !dbg !13190
  call void @llvm.dbg.value(metadata i32* %2, metadata !13189, metadata !DIExpression()), !dbg !13190
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !13191
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !13191
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !13191
  store i32 %6, i32* %2, align 4, !dbg !13191
  ret i1 %5, !dbg !13192
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc(i32 noundef %0) unnamed_addr #1 !dbg !13193 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13197, metadata !DIExpression()), !dbg !13198
  %2 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef %0) #27, !dbg !13199
  ret i8* %2, !dbg !13200
}

; Function Attrs: optsize
declare !dbg !13201 dso_local i8* @z_thread_aligned_alloc(i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_msgq_cleanup(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !13204 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13208, metadata !DIExpression()), !dbg !13209
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13210
  %3 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %2) #26, !dbg !13210
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !13210
  br i1 %4, label %5, label %15, !dbg !13212

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !13213
  %7 = load i8, i8* %6, align 4, !dbg !13213
  %8 = and i8 %7, 1, !dbg !13215
  %9 = icmp eq i8 %8, 0, !dbg !13216
  br i1 %9, label %15, label %10, !dbg !13217

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13218
  %12 = load i8*, i8** %11, align 4, !dbg !13218
  tail call void @k_free(i8* noundef %12) #27, !dbg !13220
  %13 = load i8, i8* %6, align 4, !dbg !13221
  %14 = and i8 %13, -2, !dbg !13221
  store i8 %14, i8* %6, align 4, !dbg !13221
  br label %15, !dbg !13222

15:                                               ; preds = %5, %10, %1
  %16 = phi i32 [ -16, %1 ], [ 0, %10 ], [ 0, %5 ], !dbg !13209
  ret i32 %16, !dbg !13223
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #5 !dbg !13224 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13228, metadata !DIExpression()), !dbg !13229
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13230
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !13231
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13232
  ret %struct.k_thread* %4, !dbg !13233
}

; Function Attrs: optsize
declare !dbg !13234 dso_local void @k_free(i8* noundef) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !13235 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13239, metadata !DIExpression()), !dbg !13240
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !13241
  br i1 %2, label %6, label %3, !dbg !13241

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13242
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13242
  br label %6, !dbg !13241

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13241
  ret %struct._dnode* %7, !dbg !13243
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !13244 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13248, metadata !DIExpression()), !dbg !13249
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13250
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13250
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13251
  ret i1 %4, !dbg !13252
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13253 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13263, metadata !DIExpression()), !dbg !13271
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13261, metadata !DIExpression()), !dbg !13271
  call void @llvm.dbg.value(metadata i8* %1, metadata !13262, metadata !DIExpression()), !dbg !13271
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !13272
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13273, metadata !DIExpression()) #25, !dbg !13280
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13282, !srcloc !13288
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !13282
  call void @llvm.dbg.value(metadata i32 %6, metadata !13285, metadata !DIExpression()) #25, !dbg !13289
  call void @llvm.dbg.value(metadata i32 undef, metadata !13286, metadata !DIExpression()) #25, !dbg !13289
  call void @llvm.dbg.value(metadata i32 %6, metadata !13279, metadata !DIExpression()) #25, !dbg !13280
  call void @llvm.dbg.value(metadata i32 %6, metadata !13265, metadata !DIExpression()), !dbg !13271
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13290
  %8 = load i32, i32* %7, align 4, !dbg !13290
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !13292
  %10 = load i32, i32* %9, align 4, !dbg !13292
  %11 = icmp ult i32 %8, %10, !dbg !13293
  br i1 %11, label %12, label %42, !dbg !13294

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13295
  %14 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %13) #27, !dbg !13297
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13264, metadata !DIExpression()), !dbg !13271
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !13298
  br i1 %15, label %24, label %16, !dbg !13300

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 0, i32 6, !dbg !13301
  %18 = load i8*, i8** %17, align 4, !dbg !13301
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13303
  %20 = load i32, i32* %19, align 4, !dbg !13303
  %21 = tail call i8* @memcpy(i8* noundef %18, i8* noundef %1, i32 noundef %20) #27, !dbg !13304
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13305, metadata !DIExpression()), !dbg !13311
  call void @llvm.dbg.value(metadata i32 0, metadata !13310, metadata !DIExpression()), !dbg !13311
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 7, i32 1, !dbg !13313
  store i32 0, i32* %22, align 4, !dbg !13314
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %14) #27, !dbg !13315
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13316
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %23) #27, !dbg !13316
  br label %53, !dbg !13317

24:                                               ; preds = %12
  %25 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13318
  %26 = load i8*, i8** %25, align 4, !dbg !13318
  %27 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13320
  %28 = load i32, i32* %27, align 4, !dbg !13320
  %29 = tail call i8* @memcpy(i8* noundef %26, i8* noundef %1, i32 noundef %28) #27, !dbg !13321
  %30 = load i32, i32* %27, align 4, !dbg !13322
  %31 = load i8*, i8** %25, align 4, !dbg !13323
  %32 = getelementptr inbounds i8, i8* %31, i32 %30, !dbg !13323
  store i8* %32, i8** %25, align 4, !dbg !13323
  %33 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !13324
  %34 = load i8*, i8** %33, align 4, !dbg !13324
  %35 = icmp eq i8* %32, %34, !dbg !13326
  br i1 %35, label %36, label %39, !dbg !13327

36:                                               ; preds = %24
  %37 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13328
  %38 = load i8*, i8** %37, align 4, !dbg !13328
  store i8* %38, i8** %25, align 4, !dbg !13330
  br label %39, !dbg !13331

39:                                               ; preds = %36, %24
  %40 = load i32, i32* %7, align 4, !dbg !13332
  %41 = add i32 %40, 1, !dbg !13332
  store i32 %41, i32* %7, align 4, !dbg !13332
  call void @llvm.dbg.value(metadata i32 0, metadata !13270, metadata !DIExpression()), !dbg !13271
  br label %51, !dbg !13333

42:                                               ; preds = %3
  %43 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %43, metadata !13263, metadata !DIExpression()), !dbg !13271
  %44 = icmp eq i64 %43, 0, !dbg !13334
  br i1 %44, label %51, label %45, !dbg !13336

45:                                               ; preds = %42
  %46 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13337
  %47 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %46, i32 0, i32 0, i32 6, !dbg !13339
  store i8* %1, i8** %47, align 4, !dbg !13340
  %48 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13341
  %49 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13342
  %50 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %49, %struct._wait_q_t* noundef %48, [1 x i64] %2) #27, !dbg !13342
  call void @llvm.dbg.value(metadata i32 %50, metadata !13270, metadata !DIExpression()), !dbg !13271
  br label %53, !dbg !13343

51:                                               ; preds = %42, %39
  %52 = phi i32 [ 0, %39 ], [ -35, %42 ], !dbg !13344
  call void @llvm.dbg.value(metadata i32 %52, metadata !13270, metadata !DIExpression()), !dbg !13271
  call void @llvm.dbg.value(metadata i32 %6, metadata !13345, metadata !DIExpression()) #25, !dbg !13351
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13350, metadata !DIExpression()) #25, !dbg !13351
  call void @llvm.dbg.value(metadata i32 %6, metadata !13353, metadata !DIExpression()) #25, !dbg !13356
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !13358, !srcloc !13359
  br label %53, !dbg !13360

53:                                               ; preds = %51, %45, %16
  %54 = phi i32 [ 0, %16 ], [ %52, %51 ], [ %50, %45 ], !dbg !13271
  ret i32 %54, !dbg !13361
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_impl_k_msgq_get_attrs(%struct.k_msgq* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef writeonly %1) local_unnamed_addr #7 !dbg !13362 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13372, metadata !DIExpression()), !dbg !13374
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13373, metadata !DIExpression()), !dbg !13374
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13375
  %4 = load i32, i32* %3, align 4, !dbg !13375
  %5 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13376
  store i32 %4, i32* %5, align 4, !dbg !13377
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !13378
  %7 = load i32, i32* %6, align 4, !dbg !13378
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13379
  store i32 %7, i32* %8, align 4, !dbg !13380
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13381
  %10 = load i32, i32* %9, align 4, !dbg !13381
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13382
  store i32 %10, i32* %11, align 4, !dbg !13383
  ret void, !dbg !13384
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13385 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13391, metadata !DIExpression()), !dbg !13395
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13389, metadata !DIExpression()), !dbg !13395
  call void @llvm.dbg.value(metadata i8* %1, metadata !13390, metadata !DIExpression()), !dbg !13395
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !13396
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13273, metadata !DIExpression()) #25, !dbg !13397
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13399, !srcloc !13288
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !13399
  call void @llvm.dbg.value(metadata i32 %6, metadata !13285, metadata !DIExpression()) #25, !dbg !13401
  call void @llvm.dbg.value(metadata i32 undef, metadata !13286, metadata !DIExpression()) #25, !dbg !13401
  call void @llvm.dbg.value(metadata i32 %6, metadata !13279, metadata !DIExpression()) #25, !dbg !13397
  call void @llvm.dbg.value(metadata i32 %6, metadata !13392, metadata !DIExpression()), !dbg !13395
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13402
  %8 = load i32, i32* %7, align 4, !dbg !13402
  %9 = icmp eq i32 %8, 0, !dbg !13404
  br i1 %9, label %51, label %10, !dbg !13405

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !13406
  %12 = load i8*, i8** %11, align 4, !dbg !13406
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13408
  %14 = load i32, i32* %13, align 4, !dbg !13408
  %15 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %12, i32 noundef %14) #27, !dbg !13409
  %16 = load i32, i32* %13, align 4, !dbg !13410
  %17 = load i8*, i8** %11, align 4, !dbg !13411
  %18 = getelementptr inbounds i8, i8* %17, i32 %16, !dbg !13411
  store i8* %18, i8** %11, align 4, !dbg !13411
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !13412
  %20 = load i8*, i8** %19, align 4, !dbg !13412
  %21 = icmp eq i8* %18, %20, !dbg !13414
  br i1 %21, label %22, label %25, !dbg !13415

22:                                               ; preds = %10
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13416
  %24 = load i8*, i8** %23, align 4, !dbg !13416
  store i8* %24, i8** %11, align 4, !dbg !13418
  br label %25, !dbg !13419

25:                                               ; preds = %22, %10
  %26 = load i32, i32* %7, align 4, !dbg !13420
  %27 = add i32 %26, -1, !dbg !13420
  store i32 %27, i32* %7, align 4, !dbg !13420
  %28 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13421
  %29 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %28) #27, !dbg !13422
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !13393, metadata !DIExpression()), !dbg !13395
  %30 = icmp eq %struct.k_thread* %29, null, !dbg !13423
  br i1 %30, label %60, label %31, !dbg !13425

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13426
  %33 = load i8*, i8** %32, align 4, !dbg !13426
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 0, i32 6, !dbg !13428
  %35 = load i8*, i8** %34, align 4, !dbg !13428
  %36 = load i32, i32* %13, align 4, !dbg !13429
  %37 = tail call i8* @memcpy(i8* noundef %33, i8* noundef %35, i32 noundef %36) #27, !dbg !13430
  %38 = load i32, i32* %13, align 4, !dbg !13431
  %39 = load i8*, i8** %32, align 4, !dbg !13432
  %40 = getelementptr inbounds i8, i8* %39, i32 %38, !dbg !13432
  store i8* %40, i8** %32, align 4, !dbg !13432
  %41 = load i8*, i8** %19, align 4, !dbg !13433
  %42 = icmp eq i8* %40, %41, !dbg !13435
  br i1 %42, label %43, label %46, !dbg !13436

43:                                               ; preds = %31
  %44 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13437
  %45 = load i8*, i8** %44, align 4, !dbg !13437
  store i8* %45, i8** %32, align 4, !dbg !13439
  br label %46, !dbg !13440

46:                                               ; preds = %43, %31
  %47 = load i32, i32* %7, align 4, !dbg !13441
  %48 = add i32 %47, 1, !dbg !13441
  store i32 %48, i32* %7, align 4, !dbg !13441
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !13305, metadata !DIExpression()), !dbg !13442
  call void @llvm.dbg.value(metadata i32 0, metadata !13310, metadata !DIExpression()), !dbg !13442
  %49 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 7, i32 1, !dbg !13444
  store i32 0, i32* %49, align 4, !dbg !13445
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %29) #27, !dbg !13446
  %50 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13447
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %50) #27, !dbg !13447
  br label %62, !dbg !13448

51:                                               ; preds = %3
  %52 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %52, metadata !13391, metadata !DIExpression()), !dbg !13395
  %53 = icmp eq i64 %52, 0, !dbg !13449
  br i1 %53, label %60, label %54, !dbg !13451

54:                                               ; preds = %51
  %55 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13452
  %56 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %55, i32 0, i32 0, i32 6, !dbg !13454
  store i8* %1, i8** %56, align 4, !dbg !13455
  %57 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13456
  %58 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13457
  %59 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %58, %struct._wait_q_t* noundef %57, [1 x i64] %2) #27, !dbg !13457
  call void @llvm.dbg.value(metadata i32 %59, metadata !13394, metadata !DIExpression()), !dbg !13395
  br label %62, !dbg !13458

60:                                               ; preds = %51, %25
  %61 = phi i32 [ 0, %25 ], [ -35, %51 ], !dbg !13459
  call void @llvm.dbg.value(metadata i32 %61, metadata !13394, metadata !DIExpression()), !dbg !13395
  call void @llvm.dbg.value(metadata i32 %6, metadata !13345, metadata !DIExpression()) #25, !dbg !13460
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13350, metadata !DIExpression()) #25, !dbg !13460
  call void @llvm.dbg.value(metadata i32 %6, metadata !13353, metadata !DIExpression()) #25, !dbg !13462
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !13464, !srcloc !13359
  br label %62, !dbg !13465

62:                                               ; preds = %60, %54, %46
  %63 = phi i32 [ 0, %46 ], [ %61, %60 ], [ %59, %54 ], !dbg !13395
  ret i32 %63, !dbg !13466
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_peek(%struct.k_msgq* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13467 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13471, metadata !DIExpression()), !dbg !13475
  call void @llvm.dbg.value(metadata i8* %1, metadata !13472, metadata !DIExpression()), !dbg !13475
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13273, metadata !DIExpression()) #25, !dbg !13476
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13478, !srcloc !13288
  call void @llvm.dbg.value(metadata i32 undef, metadata !13285, metadata !DIExpression()) #25, !dbg !13480
  call void @llvm.dbg.value(metadata i32 undef, metadata !13286, metadata !DIExpression()) #25, !dbg !13480
  call void @llvm.dbg.value(metadata i32 undef, metadata !13279, metadata !DIExpression()) #25, !dbg !13476
  call void @llvm.dbg.value(metadata i32 undef, metadata !13473, metadata !DIExpression()), !dbg !13475
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13481
  %5 = load i32, i32* %4, align 4, !dbg !13481
  %6 = icmp eq i32 %5, 0, !dbg !13483
  br i1 %6, label %13, label %7, !dbg !13484

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !13485
  %9 = load i8*, i8** %8, align 4, !dbg !13485
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13487
  %11 = load i32, i32* %10, align 4, !dbg !13487
  %12 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %9, i32 noundef %11) #27, !dbg !13488
  call void @llvm.dbg.value(metadata i32 0, metadata !13474, metadata !DIExpression()), !dbg !13475
  br label %13, !dbg !13489

13:                                               ; preds = %2, %7
  %14 = phi i32 [ 0, %7 ], [ -35, %2 ], !dbg !13490
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !13478
  call void @llvm.dbg.value(metadata i32 %15, metadata !13285, metadata !DIExpression()) #25, !dbg !13480
  call void @llvm.dbg.value(metadata i32 %15, metadata !13279, metadata !DIExpression()) #25, !dbg !13476
  call void @llvm.dbg.value(metadata i32 %15, metadata !13473, metadata !DIExpression()), !dbg !13475
  call void @llvm.dbg.value(metadata i32 %14, metadata !13474, metadata !DIExpression()), !dbg !13475
  call void @llvm.dbg.value(metadata i32 undef, metadata !13345, metadata !DIExpression()) #25, !dbg !13491
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13350, metadata !DIExpression()) #25, !dbg !13491
  call void @llvm.dbg.value(metadata i32 undef, metadata !13353, metadata !DIExpression()) #25, !dbg !13493
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #25, !dbg !13495, !srcloc !13359
  ret i32 %14, !dbg !13496
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_msgq_purge(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !13497 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13501, metadata !DIExpression()), !dbg !13504
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13273, metadata !DIExpression()) #25, !dbg !13505
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13507, !srcloc !13288
  call void @llvm.dbg.value(metadata i32 undef, metadata !13285, metadata !DIExpression()) #25, !dbg !13509
  call void @llvm.dbg.value(metadata i32 undef, metadata !13286, metadata !DIExpression()) #25, !dbg !13509
  call void @llvm.dbg.value(metadata i32 undef, metadata !13279, metadata !DIExpression()) #25, !dbg !13505
  call void @llvm.dbg.value(metadata i32 undef, metadata !13502, metadata !DIExpression()), !dbg !13504
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #27, !dbg !13510
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13503, metadata !DIExpression()), !dbg !13504
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !13511
  br i1 %5, label %11, label %6, !dbg !13512

6:                                                ; preds = %1, %6
  %7 = phi %struct.k_thread* [ %9, %6 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !13305, metadata !DIExpression()), !dbg !13513
  call void @llvm.dbg.value(metadata i32 -35, metadata !13310, metadata !DIExpression()), !dbg !13513
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !13516
  store i32 -35, i32* %8, align 4, !dbg !13517
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #27, !dbg !13518
  %9 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #27, !dbg !13510
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13503, metadata !DIExpression()), !dbg !13504
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !13511
  br i1 %10, label %11, label %6, !dbg !13512, !llvm.loop !13519

11:                                               ; preds = %6, %1
  %12 = extractvalue { i32, i32 } %2, 0, !dbg !13507
  call void @llvm.dbg.value(metadata i32 %12, metadata !13285, metadata !DIExpression()) #25, !dbg !13509
  call void @llvm.dbg.value(metadata i32 %12, metadata !13279, metadata !DIExpression()) #25, !dbg !13505
  call void @llvm.dbg.value(metadata i32 %12, metadata !13502, metadata !DIExpression()), !dbg !13504
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !13521
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13522
  store i32 0, i32* %14, align 4, !dbg !13523
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13524
  %16 = load i8*, i8** %15, align 4, !dbg !13524
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !13525
  store i8* %16, i8** %17, align 4, !dbg !13526
  %18 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !13527
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %13, [1 x i32] %18) #27, !dbg !13527
  ret void, !dbg !13528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !13529 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13533, metadata !DIExpression()), !dbg !13537
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13534, metadata !DIExpression()), !dbg !13537
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13538
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !13538
  %5 = load i8, i8* %4, align 2, !dbg !13538
  call void @llvm.dbg.value(metadata i8 %5, metadata !13535, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13537
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13539
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !13539
  %8 = load i8, i8* %7, align 2, !dbg !13539
  call void @llvm.dbg.value(metadata i8 %8, metadata !13536, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13537
  %9 = icmp eq i8 %8, %5, !dbg !13540
  %10 = sext i8 %5 to i32, !dbg !13542
  %11 = sext i8 %8 to i32, !dbg !13542
  %12 = sub nsw i32 %11, %10, !dbg !13542
  %13 = select i1 %9, i32 0, i32 %12, !dbg !13542
  ret i32 %13, !dbg !13543
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !13544 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13548, metadata !DIExpression()), !dbg !13549
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !13550
  %3 = icmp eq i32 %2, 0, !dbg !13552
  br i1 %3, label %8, label %4, !dbg !13553

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #27, !dbg !13554
  %6 = add i32 %5, %2, !dbg !13556
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13557
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !13558
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #27, !dbg !13559
  br label %8, !dbg !13560

8:                                                ; preds = %4, %1
  ret void, !dbg !13561
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !13562 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13566, metadata !DIExpression()), !dbg !13568
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !13569
  call void @llvm.dbg.value(metadata i32 %1, metadata !13567, metadata !DIExpression()), !dbg !13568
  ret i32 %1, !dbg !13570
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13571 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13575, metadata !DIExpression()), !dbg !13584
  call void @llvm.dbg.value(metadata i32 %1, metadata !13576, metadata !DIExpression()), !dbg !13584
  call void @llvm.dbg.value(metadata i32 0, metadata !13577, metadata !DIExpression()), !dbg !13585
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13586, metadata !DIExpression()) #25, !dbg !13593
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13595, !srcloc !13601
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13595
  call void @llvm.dbg.value(metadata i32 %4, metadata !13598, metadata !DIExpression()) #25, !dbg !13602
  call void @llvm.dbg.value(metadata i32 undef, metadata !13599, metadata !DIExpression()) #25, !dbg !13602
  call void @llvm.dbg.value(metadata i32 %4, metadata !13592, metadata !DIExpression()) #25, !dbg !13593
  call void @llvm.dbg.value(metadata i32 %4, metadata !13583, metadata !DIExpression()), !dbg !13585
  call void @llvm.dbg.value(metadata i32 undef, metadata !13577, metadata !DIExpression()), !dbg !13585
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13603
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !13606
  %6 = icmp sgt i32 %0, 0, !dbg !13607
  %7 = icmp sgt i32 %5, 2, !dbg !13609
  %8 = select i1 %7, i32 %5, i32 2, !dbg !13609
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !13609
  store i32 %9, i32* @slice_ticks, align 4, !dbg !13610
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !13611
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13612
  call void @llvm.dbg.value(metadata i32 %4, metadata !13613, metadata !DIExpression()) #25, !dbg !13619
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13618, metadata !DIExpression()) #25, !dbg !13619
  call void @llvm.dbg.value(metadata i32 %4, metadata !13621, metadata !DIExpression()) #25, !dbg !13624
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !13626, !srcloc !13627
  call void @llvm.dbg.value(metadata i32 1, metadata !13577, metadata !DIExpression()), !dbg !13585
  call void @llvm.dbg.value(metadata i32 undef, metadata !13577, metadata !DIExpression()), !dbg !13585
  ret void, !dbg !13628
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !13629 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13631, metadata !DIExpression()), !dbg !13632
  call void @llvm.dbg.value(metadata i32 %0, metadata !13633, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13648
  call void @llvm.dbg.value(metadata i32 1000, metadata !13636, metadata !DIExpression()), !dbg !13648
  call void @llvm.dbg.value(metadata i32 10000, metadata !13637, metadata !DIExpression()), !dbg !13648
  call void @llvm.dbg.value(metadata i8 1, metadata !13638, metadata !DIExpression()), !dbg !13648
  call void @llvm.dbg.value(metadata i1 true, metadata !13639, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13648
  call void @llvm.dbg.value(metadata i1 true, metadata !13640, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13648
  call void @llvm.dbg.value(metadata i8 0, metadata !13641, metadata !DIExpression()), !dbg !13648
  call void @llvm.dbg.value(metadata i1 true, metadata !13642, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13648
  call void @llvm.dbg.value(metadata i1 false, metadata !13643, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13648
  call void @llvm.dbg.value(metadata i64 0, metadata !13644, metadata !DIExpression()), !dbg !13648
  call void @llvm.dbg.value(metadata i64 0, metadata !13644, metadata !DIExpression()), !dbg !13648
  %2 = mul i32 %0, 10, !dbg !13650
  ret i32 %2, !dbg !13656
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !13657 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13659, metadata !DIExpression()), !dbg !13661
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13586, metadata !DIExpression()) #25, !dbg !13662
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13664, !srcloc !13601
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13664
  call void @llvm.dbg.value(metadata i32 %3, metadata !13598, metadata !DIExpression()) #25, !dbg !13666
  call void @llvm.dbg.value(metadata i32 undef, metadata !13599, metadata !DIExpression()) #25, !dbg !13666
  call void @llvm.dbg.value(metadata i32 %3, metadata !13592, metadata !DIExpression()) #25, !dbg !13662
  call void @llvm.dbg.value(metadata i32 %3, metadata !13660, metadata !DIExpression()), !dbg !13661
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13667
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13669
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !13670
  br i1 %6, label %7, label %8, !dbg !13671

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13672
  call void @llvm.dbg.value(metadata i32 %3, metadata !13613, metadata !DIExpression()) #25, !dbg !13674
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13618, metadata !DIExpression()) #25, !dbg !13674
  call void @llvm.dbg.value(metadata i32 %3, metadata !13621, metadata !DIExpression()) #25, !dbg !13676
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !13678, !srcloc !13627
  br label %24, !dbg !13679

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13680
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !13681
  %10 = icmp eq i32 %9, 0, !dbg !13681
  br i1 %10, label %21, label %11, !dbg !13683

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !13684
  br i1 %12, label %13, label %21, !dbg !13685

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13686
  %15 = icmp sgt i32 %14, %0, !dbg !13689
  br i1 %15, label %19, label %16, !dbg !13690

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13691
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !13691
  call void @llvm.dbg.value(metadata i32 %18, metadata !13660, metadata !DIExpression()), !dbg !13661
  br label %22, !dbg !13693

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !13694
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13694
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13696
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !13661
  call void @llvm.dbg.value(metadata i32 %23, metadata !13660, metadata !DIExpression()), !dbg !13661
  call void @llvm.dbg.value(metadata i32 %23, metadata !13613, metadata !DIExpression()) #25, !dbg !13698
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13618, metadata !DIExpression()) #25, !dbg !13698
  call void @llvm.dbg.value(metadata i32 %23, metadata !13621, metadata !DIExpression()) #25, !dbg !13700
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #25, !dbg !13702, !srcloc !13627
  br label %24, !dbg !13703

24:                                               ; preds = %22, %7
  ret void, !dbg !13703
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !13704 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13708, metadata !DIExpression()), !dbg !13710
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !13711
  %3 = icmp eq i32 %2, 0, !dbg !13711
  br i1 %3, label %16, label %4, !dbg !13712

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !13713
  br i1 %5, label %16, label %6, !dbg !13714

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13715
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !13715
  %9 = load i8, i8* %8, align 2, !dbg !13715
  %10 = sext i8 %9 to i32, !dbg !13716
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !13717
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !13718
  br i1 %12, label %16, label %13, !dbg !13719

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !13720
  %15 = xor i1 %14, true, !dbg !13721
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !13710
  call void @llvm.dbg.value(metadata i1 %17, metadata !13709, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13710
  ret i1 %17, !dbg !13722
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !13723 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13727, metadata !DIExpression()), !dbg !13729
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13730
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13728, metadata !DIExpression()), !dbg !13729
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !13731
  br i1 %3, label %5, label %4, !dbg !13733

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !13734
  br label %5, !dbg !13736

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !13727, metadata !DIExpression()), !dbg !13729
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13737
  ret i32 %6, !dbg !13738
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13739 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13741, metadata !DIExpression()), !dbg !13743
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13744
  %3 = load i8, i8* %2, align 1, !dbg !13744
  call void @llvm.dbg.value(metadata i8 %3, metadata !13742, metadata !DIExpression()), !dbg !13743
  %4 = and i8 %3, 31, !dbg !13745
  %5 = icmp ne i8 %4, 0, !dbg !13746
  ret i1 %5, !dbg !13747
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13748 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13750, metadata !DIExpression()), !dbg !13751
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !13752
  br i1 %2, label %3, label %7, !dbg !13754

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13755, metadata !DIExpression()) #25, !dbg !13758
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13761
  %5 = load i8, i8* %4, align 1, !dbg !13762
  %6 = and i8 %5, 127, !dbg !13762
  store i8 %6, i8* %4, align 1, !dbg !13762
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13763, metadata !DIExpression()) #25, !dbg !13766
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !13770
  br label %7, !dbg !13771

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13772, metadata !DIExpression()) #25, !dbg !13775
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13777
  %9 = load i8, i8* %8, align 1, !dbg !13778
  %10 = or i8 %9, -128, !dbg !13778
  store i8 %10, i8* %8, align 1, !dbg !13778
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13779, metadata !DIExpression()) #25, !dbg !13782
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13786, metadata !DIExpression()) #25, !dbg !13794
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13792, metadata !DIExpression()) #25, !dbg !13794
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.130(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !13796
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !13793, metadata !DIExpression()) #25, !dbg !13794
  %12 = icmp eq %struct._dnode* %11, null, !dbg !13798
  br i1 %12, label %23, label %13, !dbg !13796

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !13793, metadata !DIExpression()) #25, !dbg !13794
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !13800
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !13793, metadata !DIExpression()) #25, !dbg !13794
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #27, !dbg !13801
  %17 = icmp sgt i32 %16, 0, !dbg !13804
  br i1 %17, label %18, label %20, !dbg !13805

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13806
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #27, !dbg !13808
  br label %25, !dbg !13809

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #27, !dbg !13798
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !13793, metadata !DIExpression()) #25, !dbg !13794
  %22 = icmp eq %struct._dnode* %21, null, !dbg !13798
  br i1 %22, label %23, label %13, !dbg !13796, !llvm.loop !13810

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13812
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #27, !dbg !13813
  br label %25, !dbg !13814

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13815
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !13816
  %28 = zext i1 %27 to i32, !dbg !13816
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !13817
  ret void, !dbg !13818
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13819 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13821, metadata !DIExpression()), !dbg !13822
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !13823
  ret i1 %2, !dbg !13824
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #7 !dbg !13825 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !13827, metadata !DIExpression()), !dbg !13829
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13828, metadata !DIExpression()), !dbg !13829
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !13830
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !13831
  ret void, !dbg !13832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.130(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !13833 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13837, metadata !DIExpression()), !dbg !13838
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.131(%struct._dnode* noundef %0) #26, !dbg !13839
  br i1 %2, label %6, label %3, !dbg !13839

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13840
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13840
  br label %6, !dbg !13839

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13839
  ret %struct._dnode* %7, !dbg !13841
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !13842 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13846, metadata !DIExpression()), !dbg !13850
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13847, metadata !DIExpression()), !dbg !13850
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13851
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13851
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13848, metadata !DIExpression()), !dbg !13850
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13852
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !13853
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13854
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !13855
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13856
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13857
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13858
  ret void, !dbg !13859
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !13860 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13864, metadata !DIExpression()), !dbg !13866
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13865, metadata !DIExpression()), !dbg !13866
  %3 = icmp eq %struct._dnode* %1, null, !dbg !13867
  br i1 %3, label %6, label %4, !dbg !13868

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !13869
  br label %6, !dbg !13868

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !13868
  ret %struct._dnode* %7, !dbg !13870
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !13871 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13875, metadata !DIExpression()), !dbg !13878
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13876, metadata !DIExpression()), !dbg !13878
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13879
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13879
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13877, metadata !DIExpression()), !dbg !13878
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13880
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !13881
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13882
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !13883
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13884
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13885
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13886
  ret void, !dbg !13887
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !13888 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13890, metadata !DIExpression()), !dbg !13892
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !13893
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13900, metadata !DIExpression()) #25, !dbg !13902
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13903
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !13904
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !13904
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13891, metadata !DIExpression()), !dbg !13892
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13905, metadata !DIExpression()) #25, !dbg !13911
  call void @llvm.dbg.value(metadata i32 %0, metadata !13910, metadata !DIExpression()) #25, !dbg !13911
  %6 = icmp eq i32 %0, 0, !dbg !13914
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13916
  br i1 %6, label %8, label %15, !dbg !13917

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #27, !dbg !13918
  br i1 %9, label %15, label %10, !dbg !13920

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #27, !dbg !13921
  br i1 %11, label %15, label %12, !dbg !13923

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #27, !dbg !13924
  %14 = icmp eq i32 %13, 0, !dbg !13924
  br i1 %14, label %18, label %15, !dbg !13926

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !13927
  br i1 %16, label %18, label %17, !dbg !13930

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13931
  br label %18, !dbg !13933

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !13916
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13916
  ret void, !dbg !13934
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !13935 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13939, metadata !DIExpression()), !dbg !13942
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13940, metadata !DIExpression()), !dbg !13942
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.130(%struct._dnode* noundef %0) #26, !dbg !13943
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !13941, metadata !DIExpression()), !dbg !13942
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13940, metadata !DIExpression()), !dbg !13942
  ret %struct.k_thread* %3, !dbg !13944
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13945 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13947, metadata !DIExpression()), !dbg !13948
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13949
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !13950
  %4 = xor i1 %3, true, !dbg !13951
  ret i1 %4, !dbg !13952
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13953 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13955, metadata !DIExpression()), !dbg !13956
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !13957
  %3 = load i16, i16* %2, align 2, !dbg !13957
  %4 = icmp ult i16 %3, 128, !dbg !13958
  %5 = zext i1 %4 to i32, !dbg !13958
  ret i32 %5, !dbg !13959
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13960 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13966, metadata !DIExpression()), !dbg !13967
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13968
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !13969
  %4 = xor i1 %3, true, !dbg !13970
  ret i1 %4, !dbg !13971
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13972 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13978, metadata !DIExpression()), !dbg !13979
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13980
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13980
  %4 = icmp ne %struct._dnode* %3, null, !dbg !13981
  ret i1 %4, !dbg !13982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !13983 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13985, metadata !DIExpression()), !dbg !13987
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13986, metadata !DIExpression()), !dbg !13987
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13988
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13988
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !13989
  br i1 %5, label %9, label %6, !dbg !13990

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13991
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !13991
  br label %9, !dbg !13990

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !13990
  ret %struct._dnode* %10, !dbg !13992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.131(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !13993 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13997, metadata !DIExpression()), !dbg !13998
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13999
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13999
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14000
  ret i1 %4, !dbg !14001
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !14002 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14006, metadata !DIExpression()), !dbg !14009
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14010
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14010
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14007, metadata !DIExpression()), !dbg !14009
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14011
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14011
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14008, metadata !DIExpression()), !dbg !14009
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14012
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14013
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14014
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14015
  tail call fastcc void @sys_dnode_init.132(%struct._dnode* noundef %0) #26, !dbg !14016
  ret void, !dbg !14017
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.132(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14018 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14020, metadata !DIExpression()), !dbg !14021
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14022
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14023
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14024
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14025
  ret void, !dbg !14026
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14027 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14031, metadata !DIExpression()), !dbg !14033
  call void @llvm.dbg.value(metadata i32 128, metadata !14032, metadata !DIExpression()), !dbg !14033
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14034
  %3 = load i8, i8* %2, align 1, !dbg !14034
  %4 = icmp slt i8 %3, 0, !dbg !14035
  ret i1 %4, !dbg !14036
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !14037 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14041, metadata !DIExpression()), !dbg !14043
  call void @llvm.dbg.value(metadata i32 %1, metadata !14042, metadata !DIExpression()), !dbg !14043
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !14044
  ret i1 %3, !dbg !14045
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !14046 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14048, metadata !DIExpression()), !dbg !14049
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14050
  ret i1 %2, !dbg !14051
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !14052 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14054, metadata !DIExpression()), !dbg !14056
  call void @llvm.dbg.value(metadata i32 %1, metadata !14055, metadata !DIExpression()), !dbg !14056
  %3 = icmp slt i32 %0, %1, !dbg !14057
  ret i1 %3, !dbg !14058
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14059 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14061, metadata !DIExpression()), !dbg !14065
  call void @llvm.dbg.value(metadata i32 0, metadata !14062, metadata !DIExpression()), !dbg !14066
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13586, metadata !DIExpression()) #25, !dbg !14067
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14069, !srcloc !13601
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14069
  call void @llvm.dbg.value(metadata i32 %3, metadata !13598, metadata !DIExpression()) #25, !dbg !14071
  call void @llvm.dbg.value(metadata i32 undef, metadata !13599, metadata !DIExpression()) #25, !dbg !14071
  call void @llvm.dbg.value(metadata i32 %3, metadata !13592, metadata !DIExpression()) #25, !dbg !14067
  call void @llvm.dbg.value(metadata i32 %3, metadata !14064, metadata !DIExpression()), !dbg !14066
  call void @llvm.dbg.value(metadata i32 undef, metadata !14062, metadata !DIExpression()), !dbg !14066
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14072
  call void @llvm.dbg.value(metadata i32 %3, metadata !13613, metadata !DIExpression()) #25, !dbg !14077
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13618, metadata !DIExpression()) #25, !dbg !14077
  call void @llvm.dbg.value(metadata i32 %3, metadata !13621, metadata !DIExpression()) #25, !dbg !14079
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14081, !srcloc !13627
  call void @llvm.dbg.value(metadata i32 1, metadata !14062, metadata !DIExpression()), !dbg !14066
  call void @llvm.dbg.value(metadata i32 undef, metadata !14062, metadata !DIExpression()), !dbg !14066
  ret void, !dbg !14082
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14083 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14085, metadata !DIExpression()), !dbg !14086
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14087
  br i1 %2, label %24, label %3, !dbg !14089

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !14090
  br i1 %4, label %5, label %24, !dbg !14091

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13772, metadata !DIExpression()) #25, !dbg !14092
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14095
  %7 = load i8, i8* %6, align 1, !dbg !14096
  %8 = or i8 %7, -128, !dbg !14096
  store i8 %8, i8* %6, align 1, !dbg !14096
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13779, metadata !DIExpression()) #25, !dbg !14097
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13786, metadata !DIExpression()) #25, !dbg !14099
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13792, metadata !DIExpression()) #25, !dbg !14099
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.130(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !14101
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !13793, metadata !DIExpression()) #25, !dbg !14099
  %10 = icmp eq %struct._dnode* %9, null, !dbg !14102
  br i1 %10, label %21, label %11, !dbg !14101

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !13793, metadata !DIExpression()) #25, !dbg !14099
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !14103
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13793, metadata !DIExpression()) #25, !dbg !14099
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #27, !dbg !14104
  %15 = icmp sgt i32 %14, 0, !dbg !14105
  br i1 %15, label %16, label %18, !dbg !14106

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14107
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #27, !dbg !14108
  br label %23, !dbg !14109

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #27, !dbg !14102
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !13793, metadata !DIExpression()) #25, !dbg !14099
  %20 = icmp eq %struct._dnode* %19, null, !dbg !14102
  br i1 %20, label %21, label %11, !dbg !14101, !llvm.loop !14110

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14112
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #27, !dbg !14113
  br label %23, !dbg !14114

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !14115
  br label %24, !dbg !14116

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !14117
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14118 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14120, metadata !DIExpression()), !dbg !14121
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !14122
  br i1 %2, label %6, label %3, !dbg !14123

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !14124
  %5 = xor i1 %4, true, !dbg !14123
  br label %6, !dbg !14123

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14125
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14126 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14128, metadata !DIExpression()), !dbg !14132
  call void @llvm.dbg.value(metadata i32 0, metadata !14129, metadata !DIExpression()), !dbg !14133
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13586, metadata !DIExpression()) #25, !dbg !14134
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14136, !srcloc !13601
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14136
  call void @llvm.dbg.value(metadata i32 %3, metadata !13598, metadata !DIExpression()) #25, !dbg !14138
  call void @llvm.dbg.value(metadata i32 undef, metadata !13599, metadata !DIExpression()) #25, !dbg !14138
  call void @llvm.dbg.value(metadata i32 %3, metadata !13592, metadata !DIExpression()) #25, !dbg !14134
  call void @llvm.dbg.value(metadata i32 %3, metadata !14131, metadata !DIExpression()), !dbg !14133
  call void @llvm.dbg.value(metadata i32 undef, metadata !14129, metadata !DIExpression()), !dbg !14133
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !14139
  call void @llvm.dbg.value(metadata i32 %3, metadata !13613, metadata !DIExpression()) #25, !dbg !14142
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13618, metadata !DIExpression()) #25, !dbg !14142
  call void @llvm.dbg.value(metadata i32 %3, metadata !13621, metadata !DIExpression()) #25, !dbg !14144
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14146, !srcloc !13627
  call void @llvm.dbg.value(metadata i32 1, metadata !14129, metadata !DIExpression()), !dbg !14133
  call void @llvm.dbg.value(metadata i32 undef, metadata !14129, metadata !DIExpression()), !dbg !14133
  ret void, !dbg !14147
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14148 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14150, metadata !DIExpression()), !dbg !14152
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13586, metadata !DIExpression()) #25, !dbg !14153
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14155, !srcloc !13601
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14155
  call void @llvm.dbg.value(metadata i32 %3, metadata !13598, metadata !DIExpression()) #25, !dbg !14157
  call void @llvm.dbg.value(metadata i32 undef, metadata !13599, metadata !DIExpression()) #25, !dbg !14157
  call void @llvm.dbg.value(metadata i32 %3, metadata !13592, metadata !DIExpression()) #25, !dbg !14153
  call void @llvm.dbg.value(metadata i32 %3, metadata !14151, metadata !DIExpression()), !dbg !14152
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !14158
  br i1 %4, label %5, label %6, !dbg !14160

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13613, metadata !DIExpression()) #25, !dbg !14161
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13618, metadata !DIExpression()) #25, !dbg !14161
  call void @llvm.dbg.value(metadata i32 %3, metadata !13621, metadata !DIExpression()) #25, !dbg !14164
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14166, !srcloc !13627
  br label %8, !dbg !14167

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.137(%struct.k_thread* noundef %0) #26, !dbg !14168
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14169
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14170
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !14170
  br label %8, !dbg !14171

8:                                                ; preds = %6, %5
  ret void, !dbg !14171
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14172 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14174, metadata !DIExpression()), !dbg !14175
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14176
  %3 = load i8, i8* %2, align 1, !dbg !14176
  %4 = and i8 %3, 4, !dbg !14177
  %5 = icmp eq i8 %4, 0, !dbg !14178
  ret i1 %5, !dbg !14179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.137(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14180 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14182, metadata !DIExpression()), !dbg !14183
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14184
  %3 = load i8, i8* %2, align 1, !dbg !14185
  %4 = and i8 %3, -5, !dbg !14185
  store i8 %4, i8* %2, align 1, !dbg !14185
  ret void, !dbg !14186
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14187 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14190, metadata !DIExpression()), !dbg !14191
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14189, metadata !DIExpression()), !dbg !14191
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !14192
  br i1 %4, label %5, label %9, !dbg !14194

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !14195
  br i1 %6, label %7, label %9, !dbg !14196

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !14197, metadata !DIExpression()) #25, !dbg !14203
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14202, metadata !DIExpression()) #25, !dbg !14203
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !14206
  br label %10, !dbg !14207

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !13613, metadata !DIExpression()) #25, !dbg !14208
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13618, metadata !DIExpression()) #25, !dbg !14208
  call void @llvm.dbg.value(metadata i32 %3, metadata !13621, metadata !DIExpression()) #25, !dbg !14211
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14213, !srcloc !13627
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !14214
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14215 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14219, metadata !DIExpression()), !dbg !14220
  call void @llvm.dbg.value(metadata i32 %0, metadata !14221, metadata !DIExpression()), !dbg !14226
  %2 = icmp eq i32 %0, 0, !dbg !14228
  br i1 %2, label %3, label %6, !dbg !14229

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !14230, !srcloc !14237
  call void @llvm.dbg.value(metadata i32 %4, metadata !14233, metadata !DIExpression()) #25, !dbg !14238
  %5 = icmp eq i32 %4, 0, !dbg !14239
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14220
  ret i1 %7, !dbg !14240
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !14241 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14244
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14243, metadata !DIExpression()), !dbg !14245
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14246
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14247
  ret i1 %3, !dbg !14248
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14249 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14251, metadata !DIExpression()), !dbg !14253
  %2 = tail call i32 @arch_swap(i32 noundef %0) #27, !dbg !14254
  call void @llvm.dbg.value(metadata i32 %2, metadata !14252, metadata !DIExpression()), !dbg !14253
  ret i32 %2, !dbg !14255
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14256 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14258, metadata !DIExpression()), !dbg !14262
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !14263
  call void @llvm.dbg.value(metadata i32 0, metadata !14259, metadata !DIExpression()), !dbg !14264
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13586, metadata !DIExpression()) #25, !dbg !14265
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14267, !srcloc !13601
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14267
  call void @llvm.dbg.value(metadata i32 %4, metadata !13598, metadata !DIExpression()) #25, !dbg !14269
  call void @llvm.dbg.value(metadata i32 undef, metadata !13599, metadata !DIExpression()) #25, !dbg !14269
  call void @llvm.dbg.value(metadata i32 %4, metadata !13592, metadata !DIExpression()) #25, !dbg !14265
  call void @llvm.dbg.value(metadata i32 %4, metadata !14261, metadata !DIExpression()), !dbg !14264
  call void @llvm.dbg.value(metadata i32 undef, metadata !14259, metadata !DIExpression()), !dbg !14264
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14270
  br i1 %5, label %6, label %10, !dbg !14274

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13755, metadata !DIExpression()) #25, !dbg !14275
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14278
  %8 = load i8, i8* %7, align 1, !dbg !14279
  %9 = and i8 %8, 127, !dbg !14279
  store i8 %9, i8* %7, align 1, !dbg !14279
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13763, metadata !DIExpression()) #25, !dbg !14280
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !14282
  br label %10, !dbg !14283

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !14284
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14285
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !14286
  %13 = zext i1 %12 to i32, !dbg !14286
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !14287
  call void @llvm.dbg.value(metadata i32 %4, metadata !13613, metadata !DIExpression()) #25, !dbg !14288
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13618, metadata !DIExpression()) #25, !dbg !14288
  call void @llvm.dbg.value(metadata i32 %4, metadata !13621, metadata !DIExpression()) #25, !dbg !14290
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !14292, !srcloc !13627
  call void @llvm.dbg.value(metadata i32 1, metadata !14259, metadata !DIExpression()), !dbg !14264
  call void @llvm.dbg.value(metadata i32 undef, metadata !14259, metadata !DIExpression()), !dbg !14264
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14293
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14295
  br i1 %15, label %16, label %17, !dbg !14296

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14297
  br label %17, !dbg !14299

17:                                               ; preds = %16, %10
  ret void, !dbg !14300
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14301 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14303, metadata !DIExpression()), !dbg !14304
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14305
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !14306
  ret i32 %3, !dbg !14307
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14308 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14310, metadata !DIExpression()), !dbg !14311
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14312
  %3 = load i8, i8* %2, align 1, !dbg !14313
  %4 = or i8 %3, 16, !dbg !14313
  store i8 %4, i8* %2, align 1, !dbg !14313
  ret void, !dbg !14314
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !14315 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14316, !srcloc !13601
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14316
  call void @llvm.dbg.value(metadata i32 %2, metadata !13598, metadata !DIExpression()) #25, !dbg !14318
  call void @llvm.dbg.value(metadata i32 undef, metadata !13599, metadata !DIExpression()) #25, !dbg !14318
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !14319
  ret void, !dbg !14320
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !14321 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14323, metadata !DIExpression()), !dbg !14324
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !14325
  br i1 %2, label %3, label %5, !dbg !14327

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !14328
  br label %6, !dbg !14330

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !13621, metadata !DIExpression()) #25, !dbg !14331
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !14334, !srcloc !13627
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !14335
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14336 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14338, metadata !DIExpression()), !dbg !14340
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13586, metadata !DIExpression()) #25, !dbg !14341
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14343, !srcloc !13601
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14343
  call void @llvm.dbg.value(metadata i32 %3, metadata !13598, metadata !DIExpression()) #25, !dbg !14345
  call void @llvm.dbg.value(metadata i32 undef, metadata !13599, metadata !DIExpression()) #25, !dbg !14345
  call void @llvm.dbg.value(metadata i32 %3, metadata !13592, metadata !DIExpression()) #25, !dbg !14341
  call void @llvm.dbg.value(metadata i32 %3, metadata !14339, metadata !DIExpression()), !dbg !14340
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !14346
  br i1 %4, label %6, label %5, !dbg !14348

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13613, metadata !DIExpression()) #25, !dbg !14349
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13618, metadata !DIExpression()) #25, !dbg !14349
  call void @llvm.dbg.value(metadata i32 %3, metadata !13621, metadata !DIExpression()) #25, !dbg !14352
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14354, !srcloc !13627
  br label %8, !dbg !14355

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !14356
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14357
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14358
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !14358
  br label %8, !dbg !14359

8:                                                ; preds = %6, %5
  ret void, !dbg !14359
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14360 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14362, metadata !DIExpression()), !dbg !14363
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14364
  %3 = load i8, i8* %2, align 1, !dbg !14364
  %4 = and i8 %3, 16, !dbg !14365
  %5 = icmp ne i8 %4, 0, !dbg !14366
  ret i1 %5, !dbg !14367
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14368 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14370, metadata !DIExpression()), !dbg !14371
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14372
  %3 = load i8, i8* %2, align 1, !dbg !14373
  %4 = and i8 %3, -17, !dbg !14373
  store i8 %4, i8* %2, align 1, !dbg !14373
  ret void, !dbg !14374
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14375 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14385, metadata !DIExpression()), !dbg !14389
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14383, metadata !DIExpression()), !dbg !14389
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14384, metadata !DIExpression()), !dbg !14389
  call void @llvm.dbg.value(metadata i32 0, metadata !14386, metadata !DIExpression()), !dbg !14390
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13586, metadata !DIExpression()) #25, !dbg !14391
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14393, !srcloc !13601
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !14393
  call void @llvm.dbg.value(metadata i32 %5, metadata !13598, metadata !DIExpression()) #25, !dbg !14395
  call void @llvm.dbg.value(metadata i32 undef, metadata !13599, metadata !DIExpression()) #25, !dbg !14395
  call void @llvm.dbg.value(metadata i32 %5, metadata !13592, metadata !DIExpression()) #25, !dbg !14391
  call void @llvm.dbg.value(metadata i32 %5, metadata !14388, metadata !DIExpression()), !dbg !14390
  call void @llvm.dbg.value(metadata i32 undef, metadata !14386, metadata !DIExpression()), !dbg !14390
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #26, !dbg !14396
  call void @llvm.dbg.value(metadata i32 %5, metadata !13613, metadata !DIExpression()) #25, !dbg !14399
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13618, metadata !DIExpression()) #25, !dbg !14399
  call void @llvm.dbg.value(metadata i32 %5, metadata !13621, metadata !DIExpression()) #25, !dbg !14401
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !14403, !srcloc !13627
  call void @llvm.dbg.value(metadata i32 1, metadata !14386, metadata !DIExpression()), !dbg !14390
  call void @llvm.dbg.value(metadata i32 undef, metadata !14386, metadata !DIExpression()), !dbg !14390
  ret void, !dbg !14404
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !14405 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14409, metadata !DIExpression()), !dbg !14410
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14407, metadata !DIExpression()), !dbg !14410
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14408, metadata !DIExpression()), !dbg !14410
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #26, !dbg !14411
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !14412
  ret void, !dbg !14413
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !14414 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14418, metadata !DIExpression()), !dbg !14420
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14419, metadata !DIExpression()), !dbg !14420
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !14421
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !14422
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !14423
  br i1 %3, label %21, label %4, !dbg !14425

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14426
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !14428
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !14429
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !13786, metadata !DIExpression()) #25, !dbg !14430
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13792, metadata !DIExpression()) #25, !dbg !14430
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.130(%struct._dnode* noundef nonnull %6) #27, !dbg !14432
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !13793, metadata !DIExpression()) #25, !dbg !14430
  %8 = icmp eq %struct._dnode* %7, null, !dbg !14433
  br i1 %8, label %19, label %9, !dbg !14432

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13793, metadata !DIExpression()) #25, !dbg !14430
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !14434
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !13793, metadata !DIExpression()) #25, !dbg !14430
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #27, !dbg !14435
  %13 = icmp sgt i32 %12, 0, !dbg !14436
  br i1 %13, label %14, label %16, !dbg !14437

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14438
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #27, !dbg !14439
  br label %21, !dbg !14440

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #27, !dbg !14433
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !13793, metadata !DIExpression()) #25, !dbg !14430
  %18 = icmp eq %struct._dnode* %17, null, !dbg !14433
  br i1 %18, label %19, label %9, !dbg !14432, !llvm.loop !14441

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14443
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #27, !dbg !14444
  br label %21, !dbg !14445

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !14446
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14447 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14452, metadata !DIExpression()), !dbg !14453
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14451, metadata !DIExpression()), !dbg !14453
  %4 = icmp eq i64 %3, -1, !dbg !14454
  br i1 %4, label %6, label %5, !dbg !14456

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.140(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !14457
  br label %6, !dbg !14459

6:                                                ; preds = %5, %2
  ret void, !dbg !14460
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.140(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14461 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14464, metadata !DIExpression()), !dbg !14465
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14463, metadata !DIExpression()), !dbg !14465
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14466
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !14467
  ret void, !dbg !14468
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !14469 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14471, metadata !DIExpression()), !dbg !14479
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !14480
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !14480
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14472, metadata !DIExpression()), !dbg !14479
  call void @llvm.dbg.value(metadata i32 0, metadata !14473, metadata !DIExpression()), !dbg !14481
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13586, metadata !DIExpression()) #25, !dbg !14482
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14484, !srcloc !13601
  call void @llvm.dbg.value(metadata i32 undef, metadata !13598, metadata !DIExpression()) #25, !dbg !14486
  call void @llvm.dbg.value(metadata i32 undef, metadata !13599, metadata !DIExpression()) #25, !dbg !14486
  call void @llvm.dbg.value(metadata i32 undef, metadata !13592, metadata !DIExpression()) #25, !dbg !14482
  call void @llvm.dbg.value(metadata i32 undef, metadata !14475, metadata !DIExpression()), !dbg !14481
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()), !dbg !14481
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !14487
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !14488
  %7 = load i8, i8* %6, align 1, !dbg !14488
  %8 = and i8 %7, 40, !dbg !14489
  %9 = icmp eq i8 %8, 0, !dbg !14489
  call void @llvm.dbg.value(metadata i1 %9, metadata !14476, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14490
  br i1 %9, label %10, label %17, !dbg !14491

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !14492
  %12 = bitcast void (%struct._timeout*)** %11 to %struct._wait_q_t**, !dbg !14492
  %13 = load %struct._wait_q_t*, %struct._wait_q_t** %12, align 8, !dbg !14492
  %14 = icmp eq %struct._wait_q_t* %13, null, !dbg !14496
  br i1 %14, label %16, label %15, !dbg !14497

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !14498
  br label %16, !dbg !14500

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.137(%struct.k_thread* noundef nonnull %3) #26, !dbg !14501
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !14502
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !14503
  br label %17, !dbg !14504

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !14484
  call void @llvm.dbg.value(metadata i32 %18, metadata !13598, metadata !DIExpression()) #25, !dbg !14486
  call void @llvm.dbg.value(metadata i32 %18, metadata !13592, metadata !DIExpression()) #25, !dbg !14482
  call void @llvm.dbg.value(metadata i32 %18, metadata !14475, metadata !DIExpression()), !dbg !14481
  call void @llvm.dbg.value(metadata i32 undef, metadata !13613, metadata !DIExpression()) #25, !dbg !14505
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13618, metadata !DIExpression()) #25, !dbg !14505
  call void @llvm.dbg.value(metadata i32 undef, metadata !13621, metadata !DIExpression()) #25, !dbg !14507
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !14509, !srcloc !13627
  call void @llvm.dbg.value(metadata i32 1, metadata !14473, metadata !DIExpression()), !dbg !14481
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()), !dbg !14481
  ret void, !dbg !14510
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14511 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14513, metadata !DIExpression()), !dbg !14514
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !14515
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !14516
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14517
  store %struct._wait_q_t* null, %struct._wait_q_t** %2, align 8, !dbg !14518
  ret void, !dbg !14519
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14520 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14522, metadata !DIExpression()), !dbg !14523
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14524
  %3 = load i8, i8* %2, align 1, !dbg !14525
  %4 = and i8 %3, -3, !dbg !14525
  store i8 %4, i8* %2, align 1, !dbg !14525
  ret void, !dbg !14526
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14527 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14529, metadata !DIExpression()), !dbg !14530
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14531
  br i1 %2, label %3, label %7, !dbg !14533

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13755, metadata !DIExpression()) #25, !dbg !14534
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14537
  %5 = load i8, i8* %4, align 1, !dbg !14538
  %6 = and i8 %5, 127, !dbg !14538
  store i8 %6, i8* %4, align 1, !dbg !14538
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13763, metadata !DIExpression()) #25, !dbg !14539
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !14541
  br label %7, !dbg !14542

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14543
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !14544
  %10 = zext i1 %9 to i32, !dbg !14544
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !14545
  ret void, !dbg !14546
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14547 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14549, metadata !DIExpression()), !dbg !14550
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14551
  %3 = load i8, i8* %2, align 1, !dbg !14552
  %4 = or i8 %3, 2, !dbg !14552
  store i8 %4, i8* %2, align 1, !dbg !14552
  ret void, !dbg !14553
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #24 !dbg !14554 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14556, metadata !DIExpression()), !dbg !14560
  call void @llvm.dbg.value(metadata i32 0, metadata !14557, metadata !DIExpression()), !dbg !14561
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13586, metadata !DIExpression()) #25, !dbg !14562
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14564, !srcloc !13601
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14564
  call void @llvm.dbg.value(metadata i32 %3, metadata !13598, metadata !DIExpression()) #25, !dbg !14566
  call void @llvm.dbg.value(metadata i32 undef, metadata !13599, metadata !DIExpression()) #25, !dbg !14566
  call void @llvm.dbg.value(metadata i32 %3, metadata !13592, metadata !DIExpression()) #25, !dbg !14562
  call void @llvm.dbg.value(metadata i32 %3, metadata !14559, metadata !DIExpression()), !dbg !14561
  call void @llvm.dbg.value(metadata i32 undef, metadata !14557, metadata !DIExpression()), !dbg !14561
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !14567
  call void @llvm.dbg.value(metadata i32 %3, metadata !13613, metadata !DIExpression()) #25, !dbg !14570
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13618, metadata !DIExpression()) #25, !dbg !14570
  call void @llvm.dbg.value(metadata i32 %3, metadata !13621, metadata !DIExpression()) #25, !dbg !14572
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14574, !srcloc !13627
  call void @llvm.dbg.value(metadata i32 1, metadata !14557, metadata !DIExpression()), !dbg !14561
  call void @llvm.dbg.value(metadata i32 undef, metadata !14557, metadata !DIExpression()), !dbg !14561
  ret void, !dbg !14575
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14576 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14582, metadata !DIExpression()), !dbg !14587
  call void @llvm.dbg.value(metadata i32 %0, metadata !14580, metadata !DIExpression()), !dbg !14587
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14581, metadata !DIExpression()), !dbg !14587
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14588
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #26, !dbg !14589
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14590
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14591
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !14592
  call void @llvm.dbg.value(metadata i32 %6, metadata !14583, metadata !DIExpression()), !dbg !14587
  call void @llvm.dbg.value(metadata i32 0, metadata !14584, metadata !DIExpression()), !dbg !14593
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13586, metadata !DIExpression()) #25, !dbg !14594
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14596, !srcloc !13601
  call void @llvm.dbg.value(metadata i32 undef, metadata !13598, metadata !DIExpression()) #25, !dbg !14598
  call void @llvm.dbg.value(metadata i32 undef, metadata !13599, metadata !DIExpression()) #25, !dbg !14598
  call void @llvm.dbg.value(metadata i32 undef, metadata !13592, metadata !DIExpression()) #25, !dbg !14594
  call void @llvm.dbg.value(metadata i32 undef, metadata !14586, metadata !DIExpression()), !dbg !14593
  call void @llvm.dbg.value(metadata i32 undef, metadata !14584, metadata !DIExpression()), !dbg !14593
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14599
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14603
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !14604
  br i1 %10, label %11, label %12, !dbg !14605

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14606
  br label %12, !dbg !14608

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !14596
  call void @llvm.dbg.value(metadata i32 %13, metadata !13598, metadata !DIExpression()) #25, !dbg !14598
  call void @llvm.dbg.value(metadata i32 %13, metadata !13592, metadata !DIExpression()) #25, !dbg !14594
  call void @llvm.dbg.value(metadata i32 %13, metadata !14586, metadata !DIExpression()), !dbg !14593
  call void @llvm.dbg.value(metadata i32 undef, metadata !13613, metadata !DIExpression()) #25, !dbg !14609
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13618, metadata !DIExpression()) #25, !dbg !14609
  call void @llvm.dbg.value(metadata i32 undef, metadata !13621, metadata !DIExpression()) #25, !dbg !14611
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !14613, !srcloc !13627
  call void @llvm.dbg.value(metadata i32 1, metadata !14584, metadata !DIExpression()), !dbg !14593
  call void @llvm.dbg.value(metadata i32 undef, metadata !14584, metadata !DIExpression()), !dbg !14593
  ret i32 %6, !dbg !14614
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !14615 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()), !dbg !14623
  call void @llvm.dbg.value(metadata i64 undef, metadata !14622, metadata !DIExpression()), !dbg !14623
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14619, metadata !DIExpression()), !dbg !14623
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !14621, metadata !DIExpression()), !dbg !14623
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14624
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14625
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13586, metadata !DIExpression()) #25, !dbg !14626
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14628, !srcloc !13601
  call void @llvm.dbg.value(metadata i32 undef, metadata !13598, metadata !DIExpression()) #25, !dbg !14630
  call void @llvm.dbg.value(metadata i32 undef, metadata !13599, metadata !DIExpression()) #25, !dbg !14630
  call void @llvm.dbg.value(metadata i32 undef, metadata !13592, metadata !DIExpression()) #25, !dbg !14626
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14631
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %struct._wait_q_t* noundef %2, [1 x i64] %3) #26, !dbg !14632
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !14197, metadata !DIExpression()) #25, !dbg !14633
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14202, metadata !DIExpression()) #25, !dbg !14633
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #27, !dbg !14635
  ret i32 %9, !dbg !14636
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !14637 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14641, metadata !DIExpression()), !dbg !14646
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14642, metadata !DIExpression()), !dbg !14646
  call void @llvm.dbg.value(metadata i32 0, metadata !14643, metadata !DIExpression()), !dbg !14647
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13586, metadata !DIExpression()) #25, !dbg !14648
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14650, !srcloc !13601
  call void @llvm.dbg.value(metadata i32 undef, metadata !13598, metadata !DIExpression()) #25, !dbg !14652
  call void @llvm.dbg.value(metadata i32 undef, metadata !13599, metadata !DIExpression()) #25, !dbg !14652
  call void @llvm.dbg.value(metadata i32 undef, metadata !13592, metadata !DIExpression()) #25, !dbg !14648
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()), !dbg !14647
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14642, metadata !DIExpression()), !dbg !14646
  call void @llvm.dbg.value(metadata i32 undef, metadata !14643, metadata !DIExpression()), !dbg !14647
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !14653
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14642, metadata !DIExpression()), !dbg !14646
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14656
  br i1 %5, label %7, label %6, !dbg !14658

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14659
  br label %7, !dbg !14661

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !14650
  call void @llvm.dbg.value(metadata i32 %8, metadata !13598, metadata !DIExpression()) #25, !dbg !14652
  call void @llvm.dbg.value(metadata i32 %8, metadata !13592, metadata !DIExpression()) #25, !dbg !14648
  call void @llvm.dbg.value(metadata i32 %8, metadata !14645, metadata !DIExpression()), !dbg !14647
  call void @llvm.dbg.value(metadata i32 undef, metadata !13613, metadata !DIExpression()) #25, !dbg !14662
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13618, metadata !DIExpression()) #25, !dbg !14662
  call void @llvm.dbg.value(metadata i32 undef, metadata !13621, metadata !DIExpression()) #25, !dbg !14664
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !14666, !srcloc !13627
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14642, metadata !DIExpression()), !dbg !14646
  call void @llvm.dbg.value(metadata i32 undef, metadata !14643, metadata !DIExpression()), !dbg !14647
  ret %struct.k_thread* %4, !dbg !14667
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !14668 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14670, metadata !DIExpression()), !dbg !14675
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14671, metadata !DIExpression()), !dbg !14675
  call void @llvm.dbg.value(metadata i32 0, metadata !14672, metadata !DIExpression()), !dbg !14676
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13586, metadata !DIExpression()) #25, !dbg !14677
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14679, !srcloc !13601
  call void @llvm.dbg.value(metadata i32 undef, metadata !13598, metadata !DIExpression()) #25, !dbg !14681
  call void @llvm.dbg.value(metadata i32 undef, metadata !13599, metadata !DIExpression()) #25, !dbg !14681
  call void @llvm.dbg.value(metadata i32 undef, metadata !13592, metadata !DIExpression()) #25, !dbg !14677
  call void @llvm.dbg.value(metadata i32 undef, metadata !14674, metadata !DIExpression()), !dbg !14676
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14671, metadata !DIExpression()), !dbg !14675
  call void @llvm.dbg.value(metadata i32 undef, metadata !14672, metadata !DIExpression()), !dbg !14676
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !14682
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14671, metadata !DIExpression()), !dbg !14675
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14685
  br i1 %5, label %8, label %6, !dbg !14687

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14688
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14690
  br label %8, !dbg !14691

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14679
  call void @llvm.dbg.value(metadata i32 %9, metadata !13598, metadata !DIExpression()) #25, !dbg !14681
  call void @llvm.dbg.value(metadata i32 %9, metadata !13592, metadata !DIExpression()) #25, !dbg !14677
  call void @llvm.dbg.value(metadata i32 %9, metadata !14674, metadata !DIExpression()), !dbg !14676
  call void @llvm.dbg.value(metadata i32 undef, metadata !13613, metadata !DIExpression()) #25, !dbg !14692
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13618, metadata !DIExpression()) #25, !dbg !14692
  call void @llvm.dbg.value(metadata i32 undef, metadata !13621, metadata !DIExpression()) #25, !dbg !14694
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !14696, !srcloc !13627
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14671, metadata !DIExpression()), !dbg !14675
  call void @llvm.dbg.value(metadata i32 undef, metadata !14672, metadata !DIExpression()), !dbg !14676
  ret %struct.k_thread* %4, !dbg !14697
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14698 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14700, metadata !DIExpression()), !dbg !14701
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14556, metadata !DIExpression()) #25, !dbg !14702
  call void @llvm.dbg.value(metadata i32 0, metadata !14557, metadata !DIExpression()) #25, !dbg !14704
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13586, metadata !DIExpression()) #25, !dbg !14705
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14707, !srcloc !13601
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14707
  call void @llvm.dbg.value(metadata i32 %3, metadata !13598, metadata !DIExpression()) #25, !dbg !14709
  call void @llvm.dbg.value(metadata i32 undef, metadata !13599, metadata !DIExpression()) #25, !dbg !14709
  call void @llvm.dbg.value(metadata i32 %3, metadata !13592, metadata !DIExpression()) #25, !dbg !14705
  call void @llvm.dbg.value(metadata i32 %3, metadata !14559, metadata !DIExpression()) #25, !dbg !14704
  call void @llvm.dbg.value(metadata i32 undef, metadata !14557, metadata !DIExpression()) #25, !dbg !14704
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !14710
  call void @llvm.dbg.value(metadata i32 %3, metadata !13613, metadata !DIExpression()) #25, !dbg !14711
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13618, metadata !DIExpression()) #25, !dbg !14711
  call void @llvm.dbg.value(metadata i32 %3, metadata !13621, metadata !DIExpression()) #25, !dbg !14713
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14715, !srcloc !13627
  call void @llvm.dbg.value(metadata i32 1, metadata !14557, metadata !DIExpression()) #25, !dbg !14704
  call void @llvm.dbg.value(metadata i32 undef, metadata !14557, metadata !DIExpression()) #25, !dbg !14704
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !14716
  ret void, !dbg !14717
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14718 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14720, metadata !DIExpression()), !dbg !14726
  call void @llvm.dbg.value(metadata i32 %1, metadata !14721, metadata !DIExpression()), !dbg !14726
  call void @llvm.dbg.value(metadata i8 0, metadata !14722, metadata !DIExpression()), !dbg !14726
  call void @llvm.dbg.value(metadata i32 0, metadata !14723, metadata !DIExpression()), !dbg !14727
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13586, metadata !DIExpression()) #25, !dbg !14728
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14730, !srcloc !13601
  call void @llvm.dbg.value(metadata i32 undef, metadata !13598, metadata !DIExpression()) #25, !dbg !14732
  call void @llvm.dbg.value(metadata i32 undef, metadata !13599, metadata !DIExpression()) #25, !dbg !14732
  call void @llvm.dbg.value(metadata i32 undef, metadata !13592, metadata !DIExpression()) #25, !dbg !14728
  call void @llvm.dbg.value(metadata i32 undef, metadata !14725, metadata !DIExpression()), !dbg !14727
  call void @llvm.dbg.value(metadata i8 poison, metadata !14722, metadata !DIExpression()), !dbg !14726
  call void @llvm.dbg.value(metadata i32 undef, metadata !14723, metadata !DIExpression()), !dbg !14727
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !14733
  call void @llvm.dbg.value(metadata i1 %6, metadata !14722, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14726
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !14736

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13755, metadata !DIExpression()) #25, !dbg !14737
  %11 = load i8, i8* %4, align 1, !dbg !14743
  %12 = and i8 %11, 127, !dbg !14743
  store i8 %12, i8* %4, align 1, !dbg !14743
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13763, metadata !DIExpression()) #25, !dbg !14744
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !14746
  store i8 %9, i8* %8, align 2, !dbg !14747
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13772, metadata !DIExpression()) #25, !dbg !14748
  %13 = load i8, i8* %4, align 1, !dbg !14750
  %14 = or i8 %13, -128, !dbg !14750
  store i8 %14, i8* %4, align 1, !dbg !14750
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13779, metadata !DIExpression()) #25, !dbg !14751
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13786, metadata !DIExpression()) #25, !dbg !14753
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13792, metadata !DIExpression()) #25, !dbg !14753
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.130(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !14755
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !13793, metadata !DIExpression()) #25, !dbg !14753
  %16 = icmp eq %struct._dnode* %15, null, !dbg !14756
  br i1 %16, label %26, label %17, !dbg !14755

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !13793, metadata !DIExpression()) #25, !dbg !14753
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !14757
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !13793, metadata !DIExpression()) #25, !dbg !14753
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #27, !dbg !14758
  %21 = icmp sgt i32 %20, 0, !dbg !14759
  br i1 %21, label %22, label %23, !dbg !14760

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #27, !dbg !14761
  br label %27, !dbg !14762

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #27, !dbg !14756
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !13793, metadata !DIExpression()) #25, !dbg !14753
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14756
  br i1 %25, label %26, label %17, !dbg !14755, !llvm.loop !14763

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #27, !dbg !14765
  br label %27, !dbg !14766

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !14767
  br label %29, !dbg !14768

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !14769
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !14730
  call void @llvm.dbg.value(metadata i32 %30, metadata !13598, metadata !DIExpression()) #25, !dbg !14732
  call void @llvm.dbg.value(metadata i32 %30, metadata !13592, metadata !DIExpression()) #25, !dbg !14728
  call void @llvm.dbg.value(metadata i32 %30, metadata !14725, metadata !DIExpression()), !dbg !14727
  call void @llvm.dbg.value(metadata i32 undef, metadata !13613, metadata !DIExpression()) #25, !dbg !14771
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13618, metadata !DIExpression()) #25, !dbg !14771
  call void @llvm.dbg.value(metadata i32 undef, metadata !13621, metadata !DIExpression()) #25, !dbg !14773
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #25, !dbg !14775, !srcloc !13627
  call void @llvm.dbg.value(metadata i8 poison, metadata !14722, metadata !DIExpression()), !dbg !14726
  call void @llvm.dbg.value(metadata i32 undef, metadata !14723, metadata !DIExpression()), !dbg !14727
  ret i1 %6, !dbg !14776
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14777 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14781, metadata !DIExpression()), !dbg !14784
  call void @llvm.dbg.value(metadata i32 %1, metadata !14782, metadata !DIExpression()), !dbg !14784
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !14785
  call void @llvm.dbg.value(metadata i1 %3, metadata !14783, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14784
  br i1 %3, label %4, label %12, !dbg !14786

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14788
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !14789
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !14789
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !14789
  %9 = load i8, i8* %8, align 1, !dbg !14789
  %10 = icmp eq i8 %9, 0, !dbg !14790
  br i1 %10, label %11, label %12, !dbg !14791

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14792
  br label %12, !dbg !14794

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !14795
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !14796 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14798, metadata !DIExpression()), !dbg !14801
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13586, metadata !DIExpression()) #25, !dbg !14802
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14804, !srcloc !13601
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14804
  call void @llvm.dbg.value(metadata i32 %2, metadata !13598, metadata !DIExpression()) #25, !dbg !14806
  call void @llvm.dbg.value(metadata i32 undef, metadata !13599, metadata !DIExpression()) #25, !dbg !14806
  call void @llvm.dbg.value(metadata i32 %2, metadata !13592, metadata !DIExpression()) #25, !dbg !14802
  call void @llvm.dbg.value(metadata i32 %2, metadata !14800, metadata !DIExpression()), !dbg !14801
  call void @llvm.dbg.value(metadata i32 undef, metadata !14798, metadata !DIExpression()), !dbg !14801
  tail call fastcc void @z_sched_lock() #26, !dbg !14807
  call void @llvm.dbg.value(metadata i32 %2, metadata !13613, metadata !DIExpression()) #25, !dbg !14810
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13618, metadata !DIExpression()) #25, !dbg !14810
  call void @llvm.dbg.value(metadata i32 %2, metadata !13621, metadata !DIExpression()) #25, !dbg !14812
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !14814, !srcloc !13627
  call void @llvm.dbg.value(metadata i32 1, metadata !14798, metadata !DIExpression()), !dbg !14801
  call void @llvm.dbg.value(metadata i32 undef, metadata !14798, metadata !DIExpression()), !dbg !14801
  ret void, !dbg !14815
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !14816 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14817
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14818
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !14818
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !14818
  %5 = load i8, i8* %4, align 1, !dbg !14819
  %6 = add i8 %5, -1, !dbg !14819
  store i8 %6, i8* %4, align 1, !dbg !14819
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !14820, !srcloc !14822
  ret void, !dbg !14823
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !14824 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14826, metadata !DIExpression()), !dbg !14829
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13586, metadata !DIExpression()) #25, !dbg !14830
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14832, !srcloc !13601
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14832
  call void @llvm.dbg.value(metadata i32 %2, metadata !13598, metadata !DIExpression()) #25, !dbg !14834
  call void @llvm.dbg.value(metadata i32 undef, metadata !13599, metadata !DIExpression()) #25, !dbg !14834
  call void @llvm.dbg.value(metadata i32 %2, metadata !13592, metadata !DIExpression()) #25, !dbg !14830
  call void @llvm.dbg.value(metadata i32 %2, metadata !14828, metadata !DIExpression()), !dbg !14829
  call void @llvm.dbg.value(metadata i32 undef, metadata !14826, metadata !DIExpression()), !dbg !14829
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14835
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !14838
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !14838
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !14838
  %7 = load i8, i8* %6, align 1, !dbg !14839
  %8 = add i8 %7, 1, !dbg !14839
  store i8 %8, i8* %6, align 1, !dbg !14839
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !14840
  call void @llvm.dbg.value(metadata i32 %2, metadata !13613, metadata !DIExpression()) #25, !dbg !14841
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13618, metadata !DIExpression()) #25, !dbg !14841
  call void @llvm.dbg.value(metadata i32 %2, metadata !13621, metadata !DIExpression()) #25, !dbg !14843
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !14845, !srcloc !13627
  call void @llvm.dbg.value(metadata i32 1, metadata !14826, metadata !DIExpression()), !dbg !14829
  call void @llvm.dbg.value(metadata i32 undef, metadata !14826, metadata !DIExpression()), !dbg !14829
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14846
  ret void, !dbg !14847
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !14848 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14849
  ret %struct.k_thread* %1, !dbg !14850
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !14851 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !14855, metadata !DIExpression()), !dbg !14860
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !14856, metadata !DIExpression()), !dbg !14860
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !14861
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14857, metadata !DIExpression()), !dbg !14860
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !14862
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14858, metadata !DIExpression()), !dbg !14860
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !14863
  call void @llvm.dbg.value(metadata i32 %5, metadata !14859, metadata !DIExpression()), !dbg !14860
  %6 = icmp sgt i32 %5, 0, !dbg !14864
  br i1 %6, label %17, label %7, !dbg !14866

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !14867
  br i1 %8, label %17, label %9, !dbg !14869

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !14870
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !14870
  %12 = load i32, i32* %11, align 8, !dbg !14870
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !14872
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !14872
  %15 = load i32, i32* %14, align 8, !dbg !14872
  %16 = icmp ult i32 %12, %15, !dbg !14873
  br label %17, !dbg !14874

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !14875
  ret i1 %18, !dbg !14876
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14877 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14894, metadata !DIExpression()), !dbg !14909
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14895, metadata !DIExpression()), !dbg !14909
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14910
  %5 = load i32, i32* %4, align 4, !dbg !14911
  %6 = add nsw i32 %5, 1, !dbg !14911
  store i32 %6, i32* %4, align 4, !dbg !14911
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !14912
  store i32 %5, i32* %7, align 8, !dbg !14913
  %8 = load i32, i32* %4, align 4, !dbg !14914
  %9 = icmp eq i32 %8, 0, !dbg !14915
  br i1 %9, label %10, label %32, !dbg !14916

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !14917
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #25, !dbg !14917
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !14897, metadata !DIExpression()), !dbg !14917
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14917
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !14917
  %14 = load i32, i32* %13, align 4, !dbg !14917
  %15 = shl i32 %14, 2, !dbg !14917
  %16 = alloca i8, i32 %15, align 8, !dbg !14917
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !14917
  store i8* %16, i8** %17, align 4, !dbg !14917
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !14917
  %19 = alloca i8, i32 %14, align 8, !dbg !14917
  store i8* %19, i8** %18, align 4, !dbg !14917
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !14917
  store i32 -1, i32* %20, align 4, !dbg !14917
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !14918
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !14906, metadata !DIExpression()), !dbg !14919
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !14896, metadata !DIExpression()), !dbg !14909
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !14920
  br i1 %22, label %23, label %24, !dbg !14917

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #25, !dbg !14920
  br label %32, !dbg !14921

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !14896, metadata !DIExpression()), !dbg !14909
  %26 = load i32, i32* %4, align 4, !dbg !14922
  %27 = add nsw i32 %26, 1, !dbg !14922
  store i32 %27, i32* %4, align 4, !dbg !14922
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !14924
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !14924
  store i32 %26, i32* %29, align 8, !dbg !14925
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !14918
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !14906, metadata !DIExpression()), !dbg !14919
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !14896, metadata !DIExpression()), !dbg !14909
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !14920
  br i1 %31, label %23, label %24, !dbg !14917, !llvm.loop !14926

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14928
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14929
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #27, !dbg !14930
  ret void, !dbg !14931
}

; Function Attrs: optsize
declare !dbg !14932 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !14937 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14940 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14942, metadata !DIExpression()), !dbg !14944
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14943, metadata !DIExpression()), !dbg !14944
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14945
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14946
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #27, !dbg !14947
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !14948
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !14948
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !14950
  br i1 %7, label %8, label %10, !dbg !14951

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14952
  store i32 0, i32* %9, align 4, !dbg !14954
  br label %10, !dbg !14955

10:                                               ; preds = %8, %2
  ret void, !dbg !14956
}

; Function Attrs: optsize
declare !dbg !14957 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !14958 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14962, metadata !DIExpression()), !dbg !14965
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14963, metadata !DIExpression()), !dbg !14965
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14966
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !14967
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !14964, metadata !DIExpression()), !dbg !14965
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14963, metadata !DIExpression()), !dbg !14965
  ret %struct.k_thread* %4, !dbg !14968
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !14969 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !14973, metadata !DIExpression()), !dbg !14974
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #27, !dbg !14975
  ret %struct.rbnode* %2, !dbg !14976
}

; Function Attrs: optsize
declare !dbg !14977 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !14980 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !14990, metadata !DIExpression()), !dbg !14994
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !14995
  %3 = load i32, i32* %2, align 4, !dbg !14995
  %4 = icmp eq i32 %3, 0, !dbg !14997
  br i1 %4, label %10, label %5, !dbg !14998

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14991, metadata !DIExpression()), !dbg !14994
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !14999, !range !3994
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15000
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14992, metadata !DIExpression()), !dbg !14994
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.130(%struct._dnode* noundef %7) #26, !dbg !15001
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !14993, metadata !DIExpression()), !dbg !14994
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14991, metadata !DIExpression()), !dbg !14994
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !14994
  ret %struct.k_thread* %11, !dbg !15002
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15003 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15007, metadata !DIExpression()), !dbg !15010
  call void @llvm.dbg.value(metadata i32 0, metadata !15008, metadata !DIExpression()), !dbg !15010
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.151(%struct._wait_q_t* noundef %0) #26, !dbg !15011
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15009, metadata !DIExpression()), !dbg !15010
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15012
  br i1 %3, label %8, label %4, !dbg !15013

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !15014
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !15016
  call void @llvm.dbg.value(metadata i32 1, metadata !15008, metadata !DIExpression()), !dbg !15010
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.151(%struct._wait_q_t* noundef %0) #26, !dbg !15011
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15009, metadata !DIExpression()), !dbg !15010
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15012
  br i1 %7, label %8, label %4, !dbg !15013, !llvm.loop !15017

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15010
  ret i32 %9, !dbg !15019
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.151(%struct._wait_q_t* noundef readonly %0) unnamed_addr #5 !dbg !15020 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15022, metadata !DIExpression()), !dbg !15023
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15024
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.130(%struct._dnode* noundef %2) #26, !dbg !15025
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15026
  ret %struct.k_thread* %4, !dbg !15027
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !15028 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15037, metadata !DIExpression()), !dbg !15038
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15039
  tail call fastcc void @sys_dlist_init.152(%struct._dnode* noundef nonnull %2) #26, !dbg !15040
  ret void, !dbg !15041
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.152(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !15042 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15046, metadata !DIExpression()), !dbg !15047
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15048
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15049
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15050
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15051
  ret void, !dbg !15052
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15053 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !15054
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !15055
  ret void, !dbg !15056
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !15057 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15062, metadata !DIExpression()), !dbg !15063
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15064
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15064
  %4 = load i8, i8* %3, align 2, !dbg !15064
  %5 = sext i8 %4 to i32, !dbg !15065
  ret i32 %5, !dbg !15066
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15067 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15071, metadata !DIExpression()), !dbg !15074
  call void @llvm.dbg.value(metadata i32 %1, metadata !15072, metadata !DIExpression()), !dbg !15074
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15073, metadata !DIExpression()), !dbg !15074
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !15075
  ret void, !dbg !15076
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15077 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !15078
  br i1 %1, label %8, label %2, !dbg !15079

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !15080
  br i1 %3, label %8, label %4, !dbg !15081

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15082
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !15083
  %7 = xor i1 %6, true, !dbg !15081
  br label %8, !dbg !15081

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15084
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !15085 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15086, !range !6432
  %2 = icmp eq i8 %1, 0, !dbg !15086
  ret i1 %2, !dbg !15087
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15088 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13586, metadata !DIExpression()) #25, !dbg !15091
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15093, !srcloc !13601
  call void @llvm.dbg.value(metadata i32 undef, metadata !13598, metadata !DIExpression()) #25, !dbg !15095
  call void @llvm.dbg.value(metadata i32 undef, metadata !13599, metadata !DIExpression()) #25, !dbg !15095
  call void @llvm.dbg.value(metadata i32 undef, metadata !13592, metadata !DIExpression()) #25, !dbg !15091
  call void @llvm.dbg.value(metadata i32 undef, metadata !15090, metadata !DIExpression()), !dbg !15096
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15097
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13755, metadata !DIExpression()) #25, !dbg !15100
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !15102
  %4 = load i8, i8* %3, align 1, !dbg !15103
  %5 = and i8 %4, 127, !dbg !15103
  store i8 %5, i8* %3, align 1, !dbg !15103
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13763, metadata !DIExpression()) #25, !dbg !15104
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #27, !dbg !15106
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15107
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13772, metadata !DIExpression()) #25, !dbg !15108
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !15110
  %8 = load i8, i8* %7, align 1, !dbg !15111
  %9 = or i8 %8, -128, !dbg !15111
  store i8 %9, i8* %7, align 1, !dbg !15111
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13779, metadata !DIExpression()) #25, !dbg !15112
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13786, metadata !DIExpression()) #25, !dbg !15114
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13792, metadata !DIExpression()) #25, !dbg !15114
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.130(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !15116
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13793, metadata !DIExpression()) #25, !dbg !15114
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15117
  br i1 %11, label %22, label %12, !dbg !15116

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !13793, metadata !DIExpression()) #25, !dbg !15114
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15118
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13793, metadata !DIExpression()) #25, !dbg !15114
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #27, !dbg !15119
  %16 = icmp sgt i32 %15, 0, !dbg !15120
  br i1 %16, label %17, label %19, !dbg !15121

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !15122
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #27, !dbg !15123
  br label %24, !dbg !15124

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #27, !dbg !15117
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !13793, metadata !DIExpression()) #25, !dbg !15114
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15117
  br i1 %21, label %22, label %12, !dbg !15116, !llvm.loop !15125

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !15127
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #27, !dbg !15128
  br label %24, !dbg !15129

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !15093
  call void @llvm.dbg.value(metadata i32 %25, metadata !13598, metadata !DIExpression()) #25, !dbg !15095
  call void @llvm.dbg.value(metadata i32 %25, metadata !13592, metadata !DIExpression()) #25, !dbg !15091
  call void @llvm.dbg.value(metadata i32 %25, metadata !15090, metadata !DIExpression()), !dbg !15096
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !15130
  call void @llvm.dbg.value(metadata i32 undef, metadata !14197, metadata !DIExpression()) #25, !dbg !15131
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14202, metadata !DIExpression()) #25, !dbg !15131
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #27, !dbg !15133
  ret void, !dbg !15134
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15135 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15139, metadata !DIExpression()), !dbg !15142
  %3 = icmp eq i64 %2, -1, !dbg !15143
  br i1 %3, label %4, label %6, !dbg !15145

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15146
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !15148
  br label %11, !dbg !15149

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !15140, metadata !DIExpression()), !dbg !15142
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !15150
  %8 = sext i32 %7 to i64, !dbg !15150
  call void @llvm.dbg.value(metadata i64 %8, metadata !15140, metadata !DIExpression()), !dbg !15142
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #26, !dbg !15151
  %10 = trunc i64 %9 to i32, !dbg !15151
  call void @llvm.dbg.value(metadata i32 %10, metadata !15141, metadata !DIExpression()), !dbg !15142
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !15142
  ret i32 %12, !dbg !15152
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15153 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15157, metadata !DIExpression()), !dbg !15158
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15159, !srcloc !15161
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !15162
  ret void, !dbg !15163
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15164 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15168, metadata !DIExpression()), !dbg !15172
  %2 = icmp eq i64 %0, 0, !dbg !15173
  br i1 %2, label %3, label %4, !dbg !15175

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !15176
  br label %29, !dbg !15178

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !15170, metadata !DIExpression()), !dbg !15172
  %5 = icmp sgt i64 %0, -3, !dbg !15179
  br i1 %5, label %6, label %10, !dbg !15181

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !15182
  %8 = trunc i64 %0 to i32, !dbg !15184
  %9 = add i32 %7, %8, !dbg !15184
  call void @llvm.dbg.value(metadata i32 %9, metadata !15169, metadata !DIExpression()), !dbg !15172
  br label %13, !dbg !15185

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !15186
  %12 = sub i32 -2, %11, !dbg !15186
  call void @llvm.dbg.value(metadata i32 %12, metadata !15169, metadata !DIExpression()), !dbg !15172
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !15188
  call void @llvm.dbg.value(metadata i32 %14, metadata !15169, metadata !DIExpression()), !dbg !15172
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13586, metadata !DIExpression()) #25, !dbg !15189
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15191, !srcloc !13601
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !15191
  call void @llvm.dbg.value(metadata i32 %16, metadata !13598, metadata !DIExpression()) #25, !dbg !15193
  call void @llvm.dbg.value(metadata i32 undef, metadata !13599, metadata !DIExpression()) #25, !dbg !15193
  call void @llvm.dbg.value(metadata i32 %16, metadata !13592, metadata !DIExpression()) #25, !dbg !15189
  call void @llvm.dbg.value(metadata i32 %16, metadata !15171, metadata !DIExpression()), !dbg !15172
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15194
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !15195
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !15196
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15197
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15198
  tail call fastcc void @z_add_thread_timeout.140(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !15198
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15199
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !15200
  call void @llvm.dbg.value(metadata i32 %16, metadata !14197, metadata !DIExpression()) #25, !dbg !15201
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14202, metadata !DIExpression()) #25, !dbg !15201
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #27, !dbg !15203
  %22 = zext i32 %14 to i64, !dbg !15204
  %23 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !15205
  %24 = zext i32 %23 to i64, !dbg !15205
  %25 = sub nsw i64 %22, %24, !dbg !15206
  call void @llvm.dbg.value(metadata i64 %25, metadata !15168, metadata !DIExpression()), !dbg !15172
  %26 = icmp sgt i64 %25, 0, !dbg !15207
  %27 = select i1 %26, i64 %25, i64 0, !dbg !15207
  %28 = trunc i64 %27 to i32, !dbg !15207
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !15172
  ret i32 %30, !dbg !15208
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !15209 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15211, metadata !DIExpression()), !dbg !15212
  call void @llvm.dbg.value(metadata i64 %0, metadata !13633, metadata !DIExpression()), !dbg !15213
  call void @llvm.dbg.value(metadata i32 10000, metadata !13636, metadata !DIExpression()), !dbg !15213
  call void @llvm.dbg.value(metadata i32 1000, metadata !13637, metadata !DIExpression()), !dbg !15213
  call void @llvm.dbg.value(metadata i8 1, metadata !13638, metadata !DIExpression()), !dbg !15213
  call void @llvm.dbg.value(metadata i1 false, metadata !13639, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15213
  call void @llvm.dbg.value(metadata i1 false, metadata !13640, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15213
  call void @llvm.dbg.value(metadata i8 0, metadata !13641, metadata !DIExpression()), !dbg !15213
  call void @llvm.dbg.value(metadata i1 false, metadata !13642, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15213
  call void @llvm.dbg.value(metadata i1 true, metadata !13643, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15213
  call void @llvm.dbg.value(metadata i64 0, metadata !13644, metadata !DIExpression()), !dbg !15213
  call void @llvm.dbg.value(metadata i64 0, metadata !13644, metadata !DIExpression()), !dbg !15213
  call void @llvm.dbg.value(metadata i64 %0, metadata !13633, metadata !DIExpression()), !dbg !15213
  %2 = udiv i64 %0, 10, !dbg !15215
  ret i64 %2, !dbg !15219
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15220 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15221, !srcloc !15223
  tail call void @z_impl_k_yield() #26, !dbg !15224
  ret void, !dbg !15225
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !15226 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15230, metadata !DIExpression()), !dbg !15232
  %2 = sext i32 %0 to i64, !dbg !15233
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !15234
  call void @llvm.dbg.value(metadata i64 %3, metadata !15231, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15232
  %4 = shl i64 %3, 32, !dbg !15235
  %5 = ashr exact i64 %4, 32, !dbg !15235
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !15236
  call void @llvm.dbg.value(metadata i32 %6, metadata !15231, metadata !DIExpression()), !dbg !15232
  %7 = sext i32 %6 to i64, !dbg !15237
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !15238
  %9 = trunc i64 %8 to i32, !dbg !15238
  ret i32 %9, !dbg !15239
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !15240 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15242, metadata !DIExpression()), !dbg !15243
  call void @llvm.dbg.value(metadata i64 %0, metadata !13633, metadata !DIExpression()), !dbg !15244
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13636, metadata !DIExpression()), !dbg !15244
  call void @llvm.dbg.value(metadata i32 10000, metadata !13637, metadata !DIExpression()), !dbg !15244
  call void @llvm.dbg.value(metadata i8 1, metadata !13638, metadata !DIExpression()), !dbg !15244
  call void @llvm.dbg.value(metadata i1 false, metadata !13639, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15244
  call void @llvm.dbg.value(metadata i1 true, metadata !13640, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15244
  call void @llvm.dbg.value(metadata i8 0, metadata !13641, metadata !DIExpression()), !dbg !15244
  call void @llvm.dbg.value(metadata i1 false, metadata !13642, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15244
  call void @llvm.dbg.value(metadata i1 true, metadata !13643, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15244
  call void @llvm.dbg.value(metadata i64 0, metadata !13644, metadata !DIExpression()), !dbg !15244
  call void @llvm.dbg.value(metadata i64 0, metadata !13644, metadata !DIExpression()), !dbg !15244
  %2 = add i64 %0, 99, !dbg !15246
  call void @llvm.dbg.value(metadata i64 %2, metadata !13633, metadata !DIExpression()), !dbg !15244
  %3 = udiv i64 %2, 100, !dbg !15247
  ret i64 %3, !dbg !15248
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !15249 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15251, metadata !DIExpression()), !dbg !15252
  call void @llvm.dbg.value(metadata i64 %0, metadata !13633, metadata !DIExpression()), !dbg !15253
  call void @llvm.dbg.value(metadata i32 10000, metadata !13636, metadata !DIExpression()), !dbg !15253
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13637, metadata !DIExpression()), !dbg !15253
  call void @llvm.dbg.value(metadata i8 1, metadata !13638, metadata !DIExpression()), !dbg !15253
  call void @llvm.dbg.value(metadata i1 false, metadata !13639, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15253
  call void @llvm.dbg.value(metadata i1 false, metadata !13640, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15253
  call void @llvm.dbg.value(metadata i8 0, metadata !13641, metadata !DIExpression()), !dbg !15253
  call void @llvm.dbg.value(metadata i1 true, metadata !13642, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15253
  call void @llvm.dbg.value(metadata i1 false, metadata !13643, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15253
  call void @llvm.dbg.value(metadata i64 0, metadata !13644, metadata !DIExpression()), !dbg !15253
  call void @llvm.dbg.value(metadata i64 0, metadata !13644, metadata !DIExpression()), !dbg !15253
  %2 = mul i64 %0, 100, !dbg !15255
  ret i64 %2, !dbg !15257
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15258 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15260, metadata !DIExpression()), !dbg !15261
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !15262
  br i1 %2, label %14, label %3, !dbg !15264

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !15265
  %5 = icmp slt i32 %4, 0, !dbg !15267
  br i1 %5, label %6, label %10, !dbg !15268

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15269
  %8 = load i8, i8* %7, align 1, !dbg !15269
  %9 = icmp eq i8 %8, 16, !dbg !15272
  br i1 %9, label %10, label %14, !dbg !15273

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !15274
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15275
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15276, !srcloc !14237
  call void @llvm.dbg.value(metadata i32 %11, metadata !14233, metadata !DIExpression()) #25, !dbg !15280
  %12 = icmp eq i32 %11, 0, !dbg !15281
  br i1 %12, label %13, label %14, !dbg !15282

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15283
  br label %14, !dbg !15285

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !15286
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15287 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15289, metadata !DIExpression()), !dbg !15290
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15291
  %3 = load i8, i8* %2, align 1, !dbg !15291
  %4 = and i8 %3, 2, !dbg !15292
  %5 = icmp ne i8 %4, 0, !dbg !15293
  ret i1 %5, !dbg !15294
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !15295 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15300
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15299, metadata !DIExpression()), !dbg !15301
  ret %struct.k_thread* %1, !dbg !15302
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !15303 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15304, !srcloc !14237
  call void @llvm.dbg.value(metadata i32 %1, metadata !14233, metadata !DIExpression()) #25, !dbg !15307
  %2 = icmp eq i32 %1, 0, !dbg !15308
  br i1 %2, label %3, label %8, !dbg !15309

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15310
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !15311
  %6 = icmp ne i32 %5, 0, !dbg !15309
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !15312
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15313 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15315, metadata !DIExpression()), !dbg !15317
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13586, metadata !DIExpression()) #25, !dbg !15318
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15320, !srcloc !13601
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15320
  call void @llvm.dbg.value(metadata i32 %3, metadata !13598, metadata !DIExpression()) #25, !dbg !15322
  call void @llvm.dbg.value(metadata i32 undef, metadata !13599, metadata !DIExpression()) #25, !dbg !15322
  call void @llvm.dbg.value(metadata i32 %3, metadata !13592, metadata !DIExpression()) #25, !dbg !15318
  call void @llvm.dbg.value(metadata i32 %3, metadata !15316, metadata !DIExpression()), !dbg !15317
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !15323
  %5 = load i8, i8* %4, align 4, !dbg !15323
  %6 = and i8 %5, 1, !dbg !15325
  %7 = icmp eq i8 %6, 0, !dbg !15326
  br i1 %7, label %9, label %8, !dbg !15327

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13613, metadata !DIExpression()) #25, !dbg !15328
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13618, metadata !DIExpression()) #25, !dbg !15328
  call void @llvm.dbg.value(metadata i32 %3, metadata !13621, metadata !DIExpression()) #25, !dbg !15331
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15333, !srcloc !13627
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !15334, !srcloc !15336
  br label %24, !dbg !15337

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15338
  %11 = load i8, i8* %10, align 1, !dbg !15338
  %12 = and i8 %11, 8, !dbg !15340
  %13 = icmp eq i8 %12, 0, !dbg !15341
  br i1 %13, label %15, label %14, !dbg !15342

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !13613, metadata !DIExpression()) #25, !dbg !15343
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13618, metadata !DIExpression()) #25, !dbg !15343
  call void @llvm.dbg.value(metadata i32 %3, metadata !13621, metadata !DIExpression()) #25, !dbg !15346
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15348, !srcloc !13627
  br label %24, !dbg !15349

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !15350
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15351
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !15353
  br i1 %17, label %18, label %23, !dbg !15354

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15355, !srcloc !14237
  call void @llvm.dbg.value(metadata i32 %19, metadata !14233, metadata !DIExpression()) #25, !dbg !15358
  %20 = icmp eq i32 %19, 0, !dbg !15359
  br i1 %20, label %21, label %23, !dbg !15360

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !14197, metadata !DIExpression()) #25, !dbg !15361
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14202, metadata !DIExpression()) #25, !dbg !15361
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !15364
  br label %23, !dbg !15365

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !13613, metadata !DIExpression()) #25, !dbg !15366
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13618, metadata !DIExpression()) #25, !dbg !15366
  call void @llvm.dbg.value(metadata i32 %3, metadata !13621, metadata !DIExpression()) #25, !dbg !15368
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15370, !srcloc !13627
  br label %24, !dbg !15371

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !15371
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15372 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15374, metadata !DIExpression()), !dbg !15375
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15376
  %3 = load i8, i8* %2, align 1, !dbg !15376
  %4 = and i8 %3, 8, !dbg !15378
  %5 = icmp eq i8 %4, 0, !dbg !15379
  br i1 %5, label %6, label %20, !dbg !15380

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !15381
  %8 = or i8 %7, 8, !dbg !15381
  store i8 %8, i8* %2, align 1, !dbg !15381
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !15383
  br i1 %9, label %10, label %12, !dbg !15385

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13755, metadata !DIExpression()) #25, !dbg !15386
  %11 = and i8 %8, 95, !dbg !15389
  store i8 %11, i8* %2, align 1, !dbg !15389
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13763, metadata !DIExpression()) #25, !dbg !15390
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #27, !dbg !15392
  br label %12, !dbg !15393

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15394
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !15394
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !15396
  br i1 %15, label %17, label %16, !dbg !15397

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !15398
  br label %17, !dbg !15400

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !15401
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15402
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #26, !dbg !15403
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !15404
  br label %20, !dbg !15405

20:                                               ; preds = %17, %1
  ret void, !dbg !15406
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !15407 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15411, metadata !DIExpression()), !dbg !15413
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.151(%struct._wait_q_t* noundef %0) #26, !dbg !15414
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15412, metadata !DIExpression()), !dbg !15413
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15415
  br i1 %3, label %10, label %4, !dbg !15416

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !15417
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !15419
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15420, metadata !DIExpression()), !dbg !15426
  call void @llvm.dbg.value(metadata i32 0, metadata !15425, metadata !DIExpression()), !dbg !15426
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !15428
  store i32 0, i32* %7, align 4, !dbg !15429
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !15430
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.151(%struct._wait_q_t* noundef %0) #26, !dbg !15414
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !15412, metadata !DIExpression()), !dbg !15413
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !15415
  br i1 %9, label %10, label %4, !dbg !15416, !llvm.loop !15431

10:                                               ; preds = %4, %1
  ret void, !dbg !15433
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !15434 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15439, metadata !DIExpression()), !dbg !15442
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15438, metadata !DIExpression()), !dbg !15442
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13586, metadata !DIExpression()) #25, !dbg !15443
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15445, !srcloc !13601
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15445
  call void @llvm.dbg.value(metadata i32 %4, metadata !13598, metadata !DIExpression()) #25, !dbg !15447
  call void @llvm.dbg.value(metadata i32 undef, metadata !13599, metadata !DIExpression()) #25, !dbg !15447
  call void @llvm.dbg.value(metadata i32 %4, metadata !13592, metadata !DIExpression()) #25, !dbg !15443
  call void @llvm.dbg.value(metadata i32 %4, metadata !15440, metadata !DIExpression()), !dbg !15442
  call void @llvm.dbg.value(metadata i32 0, metadata !15441, metadata !DIExpression()), !dbg !15442
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15448
  %6 = load i8, i8* %5, align 1, !dbg !15448
  %7 = and i8 %6, 8, !dbg !15450
  %8 = icmp eq i8 %7, 0, !dbg !15451
  br i1 %8, label %9, label %24, !dbg !15452

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !15439, metadata !DIExpression()), !dbg !15442
  %11 = icmp eq i64 %10, 0, !dbg !15453
  br i1 %11, label %24, label %12, !dbg !15455

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15456
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !15458
  br i1 %14, label %24, label %15, !dbg !15459

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15460
  %17 = load %struct._wait_q_t*, %struct._wait_q_t** %16, align 8, !dbg !15460
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !15461
  %19 = icmp eq %struct._wait_q_t* %17, %18, !dbg !15462
  br i1 %19, label %24, label %20, !dbg !15463

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15464
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef nonnull %21) #26, !dbg !15466
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15467
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !15468
  call void @llvm.dbg.value(metadata i32 %4, metadata !14197, metadata !DIExpression()) #25, !dbg !15469
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14202, metadata !DIExpression()) #25, !dbg !15469
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #27, !dbg !15471
  call void @llvm.dbg.value(metadata i32 %23, metadata !15441, metadata !DIExpression()), !dbg !15442
  br label %26, !dbg !15472

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !15473
  call void @llvm.dbg.value(metadata i32 %25, metadata !15441, metadata !DIExpression()), !dbg !15442
  call void @llvm.dbg.value(metadata i32 %4, metadata !13613, metadata !DIExpression()) #25, !dbg !15474
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13618, metadata !DIExpression()) #25, !dbg !15474
  call void @llvm.dbg.value(metadata i32 %4, metadata !13621, metadata !DIExpression()) #25, !dbg !15476
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !15478, !srcloc !13627
  br label %26, !dbg !15479

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !15442
  ret i32 %27, !dbg !15480
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !15481 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15485, metadata !DIExpression()), !dbg !15493
  call void @llvm.dbg.value(metadata i32 %1, metadata !15486, metadata !DIExpression()), !dbg !15493
  call void @llvm.dbg.value(metadata i8* %2, metadata !15487, metadata !DIExpression()), !dbg !15493
  call void @llvm.dbg.value(metadata i8 0, metadata !15489, metadata !DIExpression()), !dbg !15493
  call void @llvm.dbg.value(metadata i32 0, metadata !15490, metadata !DIExpression()), !dbg !15494
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13586, metadata !DIExpression()) #25, !dbg !15495
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15497, !srcloc !13601
  call void @llvm.dbg.value(metadata i32 undef, metadata !13598, metadata !DIExpression()) #25, !dbg !15499
  call void @llvm.dbg.value(metadata i32 undef, metadata !13599, metadata !DIExpression()) #25, !dbg !15499
  call void @llvm.dbg.value(metadata i32 undef, metadata !13592, metadata !DIExpression()) #25, !dbg !15495
  call void @llvm.dbg.value(metadata i32 undef, metadata !15492, metadata !DIExpression()), !dbg !15494
  call void @llvm.dbg.value(metadata i8 poison, metadata !15489, metadata !DIExpression()), !dbg !15493
  call void @llvm.dbg.value(metadata i32 undef, metadata !15490, metadata !DIExpression()), !dbg !15494
  %5 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !15500
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15488, metadata !DIExpression()), !dbg !15493
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15503
  br i1 %7, label %12, label %8, !dbg !15505

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15506, metadata !DIExpression()), !dbg !15513
  call void @llvm.dbg.value(metadata i32 %1, metadata !15511, metadata !DIExpression()), !dbg !15513
  call void @llvm.dbg.value(metadata i8* %2, metadata !15512, metadata !DIExpression()), !dbg !15513
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15420, metadata !DIExpression()), !dbg !15516
  call void @llvm.dbg.value(metadata i32 %1, metadata !15425, metadata !DIExpression()), !dbg !15516
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !15518
  store i32 %1, i32* %9, align 4, !dbg !15519
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !15520
  store i8* %2, i8** %10, align 4, !dbg !15521
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !15522
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !15523
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !15524
  call void @llvm.dbg.value(metadata i8 1, metadata !15489, metadata !DIExpression()), !dbg !15493
  br label %12, !dbg !15525

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !15497
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !15497
  call void @llvm.dbg.value(metadata i32 %14, metadata !13598, metadata !DIExpression()) #25, !dbg !15499
  call void @llvm.dbg.value(metadata i32 %14, metadata !13592, metadata !DIExpression()) #25, !dbg !15495
  call void @llvm.dbg.value(metadata i32 %14, metadata !15492, metadata !DIExpression()), !dbg !15494
  call void @llvm.dbg.value(metadata i8 poison, metadata !15489, metadata !DIExpression()), !dbg !15493
  call void @llvm.dbg.value(metadata i32 undef, metadata !13613, metadata !DIExpression()) #25, !dbg !15526
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13618, metadata !DIExpression()) #25, !dbg !15526
  call void @llvm.dbg.value(metadata i32 undef, metadata !13621, metadata !DIExpression()) #25, !dbg !15528
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !15530, !srcloc !13627
  call void @llvm.dbg.value(metadata i32 undef, metadata !15490, metadata !DIExpression()), !dbg !15494
  ret i1 %13, !dbg !15531
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !15532 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15538, metadata !DIExpression()), !dbg !15543
  call void @llvm.dbg.value(metadata i64 undef, metadata !15540, metadata !DIExpression()), !dbg !15543
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15537, metadata !DIExpression()), !dbg !15543
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15539, metadata !DIExpression()), !dbg !15543
  call void @llvm.dbg.value(metadata i8** %4, metadata !15541, metadata !DIExpression()), !dbg !15543
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #26, !dbg !15544
  call void @llvm.dbg.value(metadata i32 %6, metadata !15542, metadata !DIExpression()), !dbg !15543
  %7 = icmp eq i8** %4, null, !dbg !15545
  br i1 %7, label %12, label %8, !dbg !15547

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15548
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !15550
  %11 = load i8*, i8** %10, align 4, !dbg !15550
  store i8* %11, i8** %4, align 4, !dbg !15551
  br label %12, !dbg !15552

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !15553
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !15554 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #27, !dbg !15556
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #27, !dbg !15557
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_rom_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_data_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_data_start to i32))) #27, !dbg !15558
  ret void, !dbg !15559
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15560 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !15570, metadata !DIExpression()), !dbg !15587
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15568, metadata !DIExpression()), !dbg !15587
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !15569, metadata !DIExpression()), !dbg !15587
  %5 = icmp eq i64 %4, -1, !dbg !15588
  br i1 %5, label %55, label %6, !dbg !15590

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !15591
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !15592
  call void @llvm.dbg.value(metadata i32 0, metadata !15571, metadata !DIExpression()), !dbg !15593
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15594, metadata !DIExpression()) #25, !dbg !15601
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15603, !srcloc !15609
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !15603
  call void @llvm.dbg.value(metadata i32 %9, metadata !15606, metadata !DIExpression()) #25, !dbg !15610
  call void @llvm.dbg.value(metadata i32 undef, metadata !15607, metadata !DIExpression()) #25, !dbg !15610
  call void @llvm.dbg.value(metadata i32 %9, metadata !15600, metadata !DIExpression()) #25, !dbg !15601
  call void @llvm.dbg.value(metadata i32 %9, metadata !15577, metadata !DIExpression()), !dbg !15593
  call void @llvm.dbg.value(metadata i32 undef, metadata !15571, metadata !DIExpression()), !dbg !15593
  %10 = icmp slt i64 %4, -1, !dbg !15611
  br i1 %10, label %11, label %17, !dbg !15612

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !15613
  %13 = add i64 %4, %12, !dbg !15614
  %14 = sub i64 -2, %13, !dbg !15614
  call void @llvm.dbg.value(metadata i64 %14, metadata !15581, metadata !DIExpression()), !dbg !15615
  %15 = icmp sgt i64 %14, 1, !dbg !15616
  %16 = select i1 %15, i64 %14, i64 1, !dbg !15616
  br label %22, !dbg !15617

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !15618
  %19 = tail call fastcc i32 @elapsed.163() #26, !dbg !15620
  %20 = sext i32 %19 to i64, !dbg !15620
  %21 = add nsw i64 %18, %20, !dbg !15621
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !15622
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15623
  store i64 %23, i64* %24, align 8, !dbg !15624
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !15625
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !15578, metadata !DIExpression()), !dbg !15627
  %26 = icmp eq %struct._timeout* %25, null, !dbg !15628
  br i1 %26, label %42, label %27, !dbg !15628

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !15629
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !15578, metadata !DIExpression()), !dbg !15627
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !15633
  %31 = load i64, i64* %30, align 8, !dbg !15633
  %32 = icmp slt i64 %28, %31, !dbg !15634
  br i1 %32, label %33, label %38, !dbg !15635

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !15633
  %35 = sub nsw i64 %31, %28, !dbg !15636
  store i64 %35, i64* %34, align 8, !dbg !15636
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !15638
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15639
  tail call fastcc void @sys_dlist_insert.164(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !15640
  br label %44, !dbg !15641

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !15642
  store i64 %39, i64* %24, align 8, !dbg !15642
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !15643
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !15578, metadata !DIExpression()), !dbg !15627
  %41 = icmp eq %struct._timeout* %40, null, !dbg !15628
  br i1 %41, label %42, label %27, !dbg !15628, !llvm.loop !15644

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15646
  tail call fastcc void @sys_dlist_append.165(%struct._dnode* noundef %43) #26, !dbg !15649
  br label %44, !dbg !15650

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !15651
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !15652
  br i1 %46, label %47, label %54, !dbg !15653

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !15654
  call void @llvm.dbg.value(metadata i32 %48, metadata !15584, metadata !DIExpression()), !dbg !15655
  %49 = icmp ne i32 %48, 0, !dbg !15656
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !15658
  br i1 %52, label %54, label %53, !dbg !15658

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #27, !dbg !15659
  br label %54, !dbg !15661

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !15662, metadata !DIExpression()) #25, !dbg !15668
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15667, metadata !DIExpression()) #25, !dbg !15668
  call void @llvm.dbg.value(metadata i32 %9, metadata !15670, metadata !DIExpression()) #25, !dbg !15673
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !15675, !srcloc !15676
  call void @llvm.dbg.value(metadata i32 undef, metadata !15571, metadata !DIExpression()), !dbg !15593
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !15677
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.163() unnamed_addr #1 !dbg !15678 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !15681
  %2 = icmp eq i32 %1, 0, !dbg !15682
  br i1 %2, label %3, label %5, !dbg !15681

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #27, !dbg !15683
  br label %5, !dbg !15681

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !15681
  ret i32 %6, !dbg !15684
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !15685 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.168() #26, !dbg !15691
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15689, metadata !DIExpression()), !dbg !15692
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !15693
  ret %struct._timeout* %2, !dbg !15694
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.164(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !15695 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15699, metadata !DIExpression()), !dbg !15703
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15700, metadata !DIExpression()), !dbg !15703
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15704
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15704
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15701, metadata !DIExpression()), !dbg !15703
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15705
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15706
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15707
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15708
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15709
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15710
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15711
  ret void, !dbg !15712
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !15713 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15717, metadata !DIExpression()), !dbg !15719
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15720
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.166(%struct._dnode* noundef %2) #26, !dbg !15721
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15718, metadata !DIExpression()), !dbg !15719
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !15722
  ret %struct._timeout* %4, !dbg !15723
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.165(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !15724 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15729, metadata !DIExpression()), !dbg !15732
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15730, metadata !DIExpression()), !dbg !15732
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15733
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15731, metadata !DIExpression()), !dbg !15732
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15734
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !15735
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15736
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !15737
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !15738
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15739
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15740
  ret void, !dbg !15741
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !15742 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !15747
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !15744, metadata !DIExpression()), !dbg !15748
  %2 = tail call fastcc i32 @elapsed.163() #26, !dbg !15749
  call void @llvm.dbg.value(metadata i32 %2, metadata !15745, metadata !DIExpression()), !dbg !15748
  %3 = icmp eq %struct._timeout* %1, null, !dbg !15750
  br i1 %3, label %14, label %4, !dbg !15752

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !15753
  %6 = load i64, i64* %5, align 8, !dbg !15753
  %7 = sext i32 %2 to i64, !dbg !15754
  %8 = sub nsw i64 %6, %7, !dbg !15755
  %9 = icmp sgt i64 %8, 2147483647, !dbg !15756
  br i1 %9, label %14, label %10, !dbg !15757

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !15758
  %12 = select i1 %11, i64 %8, i64 0, !dbg !15758
  %13 = trunc i64 %12 to i32, !dbg !15758
  call void @llvm.dbg.value(metadata i32 %13, metadata !15746, metadata !DIExpression()), !dbg !15748
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !15760
  call void @llvm.dbg.value(metadata i32 %15, metadata !15746, metadata !DIExpression()), !dbg !15748
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15761
  %17 = icmp ne i32 %16, 0, !dbg !15763
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !15764
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !15764
  call void @llvm.dbg.value(metadata i32 %20, metadata !15746, metadata !DIExpression()), !dbg !15748
  ret i32 %20, !dbg !15765
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.166(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15766 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15770, metadata !DIExpression()), !dbg !15772
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15771, metadata !DIExpression()), !dbg !15772
  %2 = icmp eq %struct._dnode* %0, null, !dbg !15773
  br i1 %2, label %5, label %3, !dbg !15774

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.167(%struct._dnode* noundef nonnull %0) #26, !dbg !15775
  br label %5, !dbg !15774

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !15774
  ret %struct._dnode* %6, !dbg !15776
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.167(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15777 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15779, metadata !DIExpression()), !dbg !15781
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15780, metadata !DIExpression()), !dbg !15781
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15782
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !15783
  br i1 %3, label %7, label %4, !dbg !15784

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15785
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !15785
  br label %7, !dbg !15784

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !15784
  ret %struct._dnode* %8, !dbg !15786
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.168() unnamed_addr #5 !dbg !15787 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15791, metadata !DIExpression()), !dbg !15792
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.169() #26, !dbg !15793
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !15793
  ret %struct._dnode* %3, !dbg !15794
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.169() unnamed_addr #5 !dbg !15795 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15799, metadata !DIExpression()), !dbg !15800
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !15801
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !15802
  ret i1 %2, !dbg !15803
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15804 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15808, metadata !DIExpression()), !dbg !15813
  call void @llvm.dbg.value(metadata i32 -22, metadata !15809, metadata !DIExpression()), !dbg !15813
  call void @llvm.dbg.value(metadata i32 0, metadata !15810, metadata !DIExpression()), !dbg !15814
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15594, metadata !DIExpression()) #25, !dbg !15815
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15817, !srcloc !15609
  call void @llvm.dbg.value(metadata i32 undef, metadata !15606, metadata !DIExpression()) #25, !dbg !15819
  call void @llvm.dbg.value(metadata i32 undef, metadata !15607, metadata !DIExpression()) #25, !dbg !15819
  call void @llvm.dbg.value(metadata i32 undef, metadata !15600, metadata !DIExpression()) #25, !dbg !15815
  call void @llvm.dbg.value(metadata i32 undef, metadata !15812, metadata !DIExpression()), !dbg !15814
  call void @llvm.dbg.value(metadata i32 -22, metadata !15809, metadata !DIExpression()), !dbg !15813
  call void @llvm.dbg.value(metadata i32 undef, metadata !15810, metadata !DIExpression()), !dbg !15814
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !15809, metadata !DIExpression()), !dbg !15813
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.172(%struct._dnode* noundef %3) #26, !dbg !15820
  br i1 %4, label %5, label %6, !dbg !15824

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !15825
  call void @llvm.dbg.value(metadata i32 0, metadata !15809, metadata !DIExpression()), !dbg !15813
  br label %6, !dbg !15827

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !15813
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15817
  call void @llvm.dbg.value(metadata i32 %8, metadata !15606, metadata !DIExpression()) #25, !dbg !15819
  call void @llvm.dbg.value(metadata i32 %8, metadata !15600, metadata !DIExpression()) #25, !dbg !15815
  call void @llvm.dbg.value(metadata i32 %8, metadata !15812, metadata !DIExpression()), !dbg !15814
  call void @llvm.dbg.value(metadata i32 %7, metadata !15809, metadata !DIExpression()), !dbg !15813
  call void @llvm.dbg.value(metadata i32 undef, metadata !15662, metadata !DIExpression()) #25, !dbg !15828
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15667, metadata !DIExpression()) #25, !dbg !15828
  call void @llvm.dbg.value(metadata i32 undef, metadata !15670, metadata !DIExpression()) #25, !dbg !15830
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !15832, !srcloc !15676
  call void @llvm.dbg.value(metadata i32 undef, metadata !15810, metadata !DIExpression()), !dbg !15814
  ret i32 %7, !dbg !15833
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.172(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15834 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15840, metadata !DIExpression()), !dbg !15841
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15842
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15842
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15843
  ret i1 %4, !dbg !15844
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #7 !dbg !15845 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15847, metadata !DIExpression()), !dbg !15848
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !15849
  %3 = icmp eq %struct._timeout* %2, null, !dbg !15851
  br i1 %3, label %10, label %4, !dbg !15852

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15853
  %6 = load i64, i64* %5, align 8, !dbg !15853
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !15855
  %8 = load i64, i64* %7, align 8, !dbg !15856
  %9 = add nsw i64 %8, %6, !dbg !15856
  store i64 %9, i64* %7, align 8, !dbg !15856
  br label %10, !dbg !15857

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15858
  tail call fastcc void @sys_dlist_remove.173(%struct._dnode* noundef %11) #26, !dbg !15859
  ret void, !dbg !15860
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.173(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !15861 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15865, metadata !DIExpression()), !dbg !15868
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15869
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15869
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15866, metadata !DIExpression()), !dbg !15868
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15870
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15870
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15867, metadata !DIExpression()), !dbg !15868
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15871
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15872
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15873
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15874
  tail call fastcc void @sys_dnode_init.174(%struct._dnode* noundef %0) #26, !dbg !15875
  ret void, !dbg !15876
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.174(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !15877 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15879, metadata !DIExpression()), !dbg !15880
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15881
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15882
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15883
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15884
  ret void, !dbg !15885
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15886 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15892, metadata !DIExpression()), !dbg !15897
  call void @llvm.dbg.value(metadata i64 0, metadata !15893, metadata !DIExpression()), !dbg !15897
  call void @llvm.dbg.value(metadata i32 0, metadata !15894, metadata !DIExpression()), !dbg !15898
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15594, metadata !DIExpression()) #25, !dbg !15899
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15901, !srcloc !15609
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15901
  call void @llvm.dbg.value(metadata i32 %3, metadata !15606, metadata !DIExpression()) #25, !dbg !15903
  call void @llvm.dbg.value(metadata i32 undef, metadata !15607, metadata !DIExpression()) #25, !dbg !15903
  call void @llvm.dbg.value(metadata i32 %3, metadata !15600, metadata !DIExpression()) #25, !dbg !15899
  call void @llvm.dbg.value(metadata i32 %3, metadata !15896, metadata !DIExpression()), !dbg !15898
  call void @llvm.dbg.value(metadata i64 0, metadata !15893, metadata !DIExpression()), !dbg !15897
  call void @llvm.dbg.value(metadata i32 undef, metadata !15894, metadata !DIExpression()), !dbg !15898
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !15904
  call void @llvm.dbg.value(metadata i64 %4, metadata !15893, metadata !DIExpression()), !dbg !15897
  call void @llvm.dbg.value(metadata i32 %3, metadata !15662, metadata !DIExpression()) #25, !dbg !15907
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15667, metadata !DIExpression()) #25, !dbg !15907
  call void @llvm.dbg.value(metadata i32 %3, metadata !15670, metadata !DIExpression()) #25, !dbg !15909
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15911, !srcloc !15676
  call void @llvm.dbg.value(metadata i32 undef, metadata !15894, metadata !DIExpression()), !dbg !15898
  ret i64 %4, !dbg !15912
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !15913 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15915, metadata !DIExpression()), !dbg !15919
  call void @llvm.dbg.value(metadata i64 0, metadata !15916, metadata !DIExpression()), !dbg !15919
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.175(%struct._timeout* noundef %0) #26, !dbg !15920
  br i1 %2, label %21, label %3, !dbg !15922

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !15923
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !15917, metadata !DIExpression()), !dbg !15924
  call void @llvm.dbg.value(metadata i64 0, metadata !15916, metadata !DIExpression()), !dbg !15919
  %5 = icmp eq %struct._timeout* %4, null, !dbg !15925
  br i1 %5, label %16, label %6, !dbg !15927

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !15917, metadata !DIExpression()), !dbg !15924
  call void @llvm.dbg.value(metadata i64 %8, metadata !15916, metadata !DIExpression()), !dbg !15919
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !15928
  %10 = load i64, i64* %9, align 8, !dbg !15928
  %11 = add nsw i64 %10, %8, !dbg !15930
  call void @llvm.dbg.value(metadata i64 %11, metadata !15916, metadata !DIExpression()), !dbg !15919
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !15931
  br i1 %12, label %16, label %13, !dbg !15933

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !15934
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !15917, metadata !DIExpression()), !dbg !15924
  call void @llvm.dbg.value(metadata i64 %11, metadata !15916, metadata !DIExpression()), !dbg !15919
  %15 = icmp eq %struct._timeout* %14, null, !dbg !15925
  br i1 %15, label %16, label %6, !dbg !15927, !llvm.loop !15935

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !15919
  call void @llvm.dbg.value(metadata i64 %17, metadata !15916, metadata !DIExpression()), !dbg !15919
  %18 = tail call fastcc i32 @elapsed.163() #26, !dbg !15937
  %19 = sext i32 %18 to i64, !dbg !15937
  %20 = sub nsw i64 %17, %19, !dbg !15938
  br label %21, !dbg !15939

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !15919
  ret i64 %22, !dbg !15940
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.175(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15941 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15945, metadata !DIExpression()), !dbg !15946
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15947
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.172(%struct._dnode* noundef %2) #26, !dbg !15948
  %4 = xor i1 %3, true, !dbg !15949
  ret i1 %4, !dbg !15950
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15951 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15953, metadata !DIExpression()), !dbg !15958
  call void @llvm.dbg.value(metadata i64 0, metadata !15954, metadata !DIExpression()), !dbg !15958
  call void @llvm.dbg.value(metadata i32 0, metadata !15955, metadata !DIExpression()), !dbg !15959
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15594, metadata !DIExpression()) #25, !dbg !15960
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15962, !srcloc !15609
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15962
  call void @llvm.dbg.value(metadata i32 %3, metadata !15606, metadata !DIExpression()) #25, !dbg !15964
  call void @llvm.dbg.value(metadata i32 undef, metadata !15607, metadata !DIExpression()) #25, !dbg !15964
  call void @llvm.dbg.value(metadata i32 %3, metadata !15600, metadata !DIExpression()) #25, !dbg !15960
  call void @llvm.dbg.value(metadata i32 %3, metadata !15957, metadata !DIExpression()), !dbg !15959
  call void @llvm.dbg.value(metadata i64 0, metadata !15954, metadata !DIExpression()), !dbg !15958
  call void @llvm.dbg.value(metadata i32 undef, metadata !15955, metadata !DIExpression()), !dbg !15959
  %4 = load i64, i64* @curr_tick, align 8, !dbg !15965
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !15968
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !15954, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !15958
  call void @llvm.dbg.value(metadata i32 %3, metadata !15662, metadata !DIExpression()) #25, !dbg !15969
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15667, metadata !DIExpression()) #25, !dbg !15969
  call void @llvm.dbg.value(metadata i32 %3, metadata !15670, metadata !DIExpression()) #25, !dbg !15971
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15973, !srcloc !15676
  call void @llvm.dbg.value(metadata i32 undef, metadata !15955, metadata !DIExpression()), !dbg !15959
  %6 = add i64 %5, %4, !dbg !15974
  ret i64 %6, !dbg !15975
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !15976 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !15978, metadata !DIExpression()), !dbg !15982
  call void @llvm.dbg.value(metadata i32 0, metadata !15979, metadata !DIExpression()), !dbg !15983
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15594, metadata !DIExpression()) #25, !dbg !15984
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15986, !srcloc !15609
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15986
  call void @llvm.dbg.value(metadata i32 %2, metadata !15606, metadata !DIExpression()) #25, !dbg !15988
  call void @llvm.dbg.value(metadata i32 undef, metadata !15607, metadata !DIExpression()) #25, !dbg !15988
  call void @llvm.dbg.value(metadata i32 %2, metadata !15600, metadata !DIExpression()) #25, !dbg !15984
  call void @llvm.dbg.value(metadata i32 %2, metadata !15981, metadata !DIExpression()), !dbg !15983
  call void @llvm.dbg.value(metadata i32 -1, metadata !15978, metadata !DIExpression()), !dbg !15982
  call void @llvm.dbg.value(metadata i32 undef, metadata !15979, metadata !DIExpression()), !dbg !15983
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !15989
  call void @llvm.dbg.value(metadata i32 %3, metadata !15978, metadata !DIExpression()), !dbg !15982
  call void @llvm.dbg.value(metadata i32 %2, metadata !15662, metadata !DIExpression()) #25, !dbg !15992
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15667, metadata !DIExpression()) #25, !dbg !15992
  call void @llvm.dbg.value(metadata i32 %2, metadata !15670, metadata !DIExpression()) #25, !dbg !15994
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !15996, !srcloc !15676
  call void @llvm.dbg.value(metadata i32 undef, metadata !15979, metadata !DIExpression()), !dbg !15983
  ret i32 %3, !dbg !15997
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !15998 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16000, metadata !DIExpression()), !dbg !16010
  call void @llvm.dbg.value(metadata i1 %1, metadata !16001, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16010
  call void @llvm.dbg.value(metadata i32 0, metadata !16002, metadata !DIExpression()), !dbg !16011
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15594, metadata !DIExpression()) #25, !dbg !16012
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16014, !srcloc !15609
  call void @llvm.dbg.value(metadata i32 undef, metadata !15606, metadata !DIExpression()) #25, !dbg !16016
  call void @llvm.dbg.value(metadata i32 undef, metadata !15607, metadata !DIExpression()) #25, !dbg !16016
  call void @llvm.dbg.value(metadata i32 undef, metadata !15600, metadata !DIExpression()) #25, !dbg !16012
  call void @llvm.dbg.value(metadata i32 undef, metadata !16004, metadata !DIExpression()), !dbg !16011
  call void @llvm.dbg.value(metadata i32 undef, metadata !16002, metadata !DIExpression()), !dbg !16011
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !16017
  call void @llvm.dbg.value(metadata i32 %4, metadata !16005, metadata !DIExpression()), !dbg !16018
  call void @llvm.dbg.value(metadata i1 undef, metadata !16008, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16018
  %5 = icmp slt i32 %4, 2, !dbg !16019
  call void @llvm.dbg.value(metadata i1 %5, metadata !16009, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16018
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !16020
  call void @llvm.dbg.value(metadata i1 %6, metadata !16008, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16018
  br i1 %7, label %11, label %8, !dbg !16020

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !16022
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !16022
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #27, !dbg !16024
  br label %11, !dbg !16025

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !16014
  call void @llvm.dbg.value(metadata i32 %12, metadata !15606, metadata !DIExpression()) #25, !dbg !16016
  call void @llvm.dbg.value(metadata i32 %12, metadata !15600, metadata !DIExpression()) #25, !dbg !16012
  call void @llvm.dbg.value(metadata i32 %12, metadata !16004, metadata !DIExpression()), !dbg !16011
  call void @llvm.dbg.value(metadata i32 undef, metadata !15662, metadata !DIExpression()) #25, !dbg !16026
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15667, metadata !DIExpression()) #25, !dbg !16026
  call void @llvm.dbg.value(metadata i32 undef, metadata !15670, metadata !DIExpression()) #25, !dbg !16028
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !16030, !srcloc !15676
  call void @llvm.dbg.value(metadata i32 1, metadata !16002, metadata !DIExpression()), !dbg !16011
  call void @llvm.dbg.value(metadata i32 undef, metadata !16002, metadata !DIExpression()), !dbg !16011
  ret void, !dbg !16031
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !16032 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16036, metadata !DIExpression()), !dbg !16041
  tail call void @z_time_slice(i32 noundef %0) #27, !dbg !16042
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15594, metadata !DIExpression()) #25, !dbg !16043
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16045, !srcloc !15609
  call void @llvm.dbg.value(metadata i32 undef, metadata !15606, metadata !DIExpression()) #25, !dbg !16047
  call void @llvm.dbg.value(metadata i32 undef, metadata !15607, metadata !DIExpression()) #25, !dbg !16047
  call void @llvm.dbg.value(metadata i32 undef, metadata !15600, metadata !DIExpression()) #25, !dbg !16043
  call void @llvm.dbg.value(metadata i32 undef, metadata !16037, metadata !DIExpression()), !dbg !16041
  store i32 %0, i32* @announce_remaining, align 4, !dbg !16041
  call void @llvm.dbg.value(metadata i32 undef, metadata !16037, metadata !DIExpression()), !dbg !16041
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !16048
  %4 = icmp eq %struct._timeout* %3, null, !dbg !16049
  br i1 %4, label %28, label %5, !dbg !16050

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !16051
  %10 = load i64, i64* %9, align 8, !dbg !16051
  %11 = sext i32 %8 to i64, !dbg !16052
  %12 = icmp sgt i64 %10, %11, !dbg !16053
  br i1 %12, label %26, label %13, !dbg !16054

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !16041
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !16038, metadata !DIExpression()), !dbg !16055
  %15 = trunc i64 %10 to i32, !dbg !16056
  call void @llvm.dbg.value(metadata i32 %15, metadata !16040, metadata !DIExpression()), !dbg !16055
  %16 = sext i32 %15 to i64, !dbg !16057
  %17 = load i64, i64* @curr_tick, align 8, !dbg !16058
  %18 = add i64 %17, %16, !dbg !16058
  store i64 %18, i64* @curr_tick, align 8, !dbg !16058
  store i64 0, i64* %9, align 8, !dbg !16059
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !16060
  call void @llvm.dbg.value(metadata i32 %14, metadata !15662, metadata !DIExpression()) #25, !dbg !16061
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15667, metadata !DIExpression()) #25, !dbg !16061
  call void @llvm.dbg.value(metadata i32 %14, metadata !15670, metadata !DIExpression()) #25, !dbg !16063
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !16065, !srcloc !15676
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !16066
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !16066
  tail call void %20(%struct._timeout* noundef nonnull %6) #27, !dbg !16067
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15594, metadata !DIExpression()) #25, !dbg !16068
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16070, !srcloc !15609
  call void @llvm.dbg.value(metadata i32 undef, metadata !15606, metadata !DIExpression()) #25, !dbg !16072
  call void @llvm.dbg.value(metadata i32 undef, metadata !15607, metadata !DIExpression()) #25, !dbg !16072
  call void @llvm.dbg.value(metadata i32 undef, metadata !15600, metadata !DIExpression()) #25, !dbg !16068
  call void @llvm.dbg.value(metadata i32 undef, metadata !16037, metadata !DIExpression()), !dbg !16041
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !16073
  %23 = sub nsw i32 %22, %15, !dbg !16073
  store i32 %23, i32* @announce_remaining, align 4, !dbg !16041
  call void @llvm.dbg.value(metadata i32 undef, metadata !16037, metadata !DIExpression()), !dbg !16041
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !16048
  %25 = icmp eq %struct._timeout* %24, null, !dbg !16049
  br i1 %25, label %28, label %5, !dbg !16050, !llvm.loop !16074

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !16076
  store i64 %27, i64* %9, align 8, !dbg !16076
  br label %32, !dbg !16079

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !16041
  %31 = sext i32 %30 to i64, !dbg !16080
  br label %32, !dbg !16080

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !16080
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !16041
  %36 = load i64, i64* @curr_tick, align 8, !dbg !16081
  %37 = add i64 %36, %33, !dbg !16081
  store i64 %37, i64* @curr_tick, align 8, !dbg !16081
  store i32 0, i32* @announce_remaining, align 4, !dbg !16082
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !16083
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #27, !dbg !16084
  call void @llvm.dbg.value(metadata i32 %35, metadata !15662, metadata !DIExpression()) #25, !dbg !16085
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15667, metadata !DIExpression()) #25, !dbg !16085
  call void @llvm.dbg.value(metadata i32 %35, metadata !15670, metadata !DIExpression()) #25, !dbg !16087
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #25, !dbg !16089, !srcloc !15676
  ret void, !dbg !16090
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !16091 {
  call void @llvm.dbg.value(metadata i64 0, metadata !16095, metadata !DIExpression()), !dbg !16099
  call void @llvm.dbg.value(metadata i32 0, metadata !16096, metadata !DIExpression()), !dbg !16100
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15594, metadata !DIExpression()) #25, !dbg !16101
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16103, !srcloc !15609
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16103
  call void @llvm.dbg.value(metadata i32 %2, metadata !15606, metadata !DIExpression()) #25, !dbg !16105
  call void @llvm.dbg.value(metadata i32 undef, metadata !15607, metadata !DIExpression()) #25, !dbg !16105
  call void @llvm.dbg.value(metadata i32 %2, metadata !15600, metadata !DIExpression()) #25, !dbg !16101
  call void @llvm.dbg.value(metadata i32 %2, metadata !16098, metadata !DIExpression()), !dbg !16100
  call void @llvm.dbg.value(metadata i64 0, metadata !16095, metadata !DIExpression()), !dbg !16099
  call void @llvm.dbg.value(metadata i32 undef, metadata !16096, metadata !DIExpression()), !dbg !16100
  %3 = load i64, i64* @curr_tick, align 8, !dbg !16106
  %4 = tail call fastcc i32 @elapsed.163() #26, !dbg !16109
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !16095, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16099
  call void @llvm.dbg.value(metadata i32 %2, metadata !15662, metadata !DIExpression()) #25, !dbg !16110
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15667, metadata !DIExpression()) #25, !dbg !16110
  call void @llvm.dbg.value(metadata i32 %2, metadata !15670, metadata !DIExpression()) #25, !dbg !16112
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16114, !srcloc !15676
  call void @llvm.dbg.value(metadata i32 undef, metadata !16096, metadata !DIExpression()), !dbg !16100
  %5 = sext i32 %4 to i64, !dbg !16109
  %6 = add i64 %3, %5, !dbg !16115
  ret i64 %6, !dbg !16116
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !16117 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !16118
  %2 = trunc i64 %1 to i32, !dbg !16119
  ret i32 %2, !dbg !16120
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !16121 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !16122
  ret i64 %1, !dbg !16123
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !16124 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16126, metadata !DIExpression()), !dbg !16133
  %2 = icmp eq i32 %0, 0, !dbg !16134
  br i1 %2, label %10, label %3, !dbg !16136

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !16137
  call void @llvm.dbg.value(metadata i32 %4, metadata !16127, metadata !DIExpression()), !dbg !16133
  %5 = mul i32 %0, 168, !dbg !16138
  call void @llvm.dbg.value(metadata i32 %5, metadata !16128, metadata !DIExpression()), !dbg !16133
  br label %6, !dbg !16139

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !16140
  call void @llvm.dbg.value(metadata i32 %7, metadata !16129, metadata !DIExpression()), !dbg !16141
  %8 = sub i32 %7, %4, !dbg !16142
  %9 = icmp ult i32 %8, %5, !dbg !16144
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !16145
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !16146 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !16147
  ret i32 %1, !dbg !16148
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !16149 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !16151
  ret i32 %1, !dbg !16152
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !16153 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16157, metadata !DIExpression()), !dbg !16159
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !16160

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !16161
  br label %14, !dbg !16165

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16158, metadata !DIExpression()), !dbg !16159
  %6 = icmp slt i64 %2, -1, !dbg !16166
  br i1 %6, label %7, label %9, !dbg !16169

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !16170
  br label %14, !dbg !16171

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !16173
  %11 = icmp ugt i64 %2, 1, !dbg !16174
  %12 = select i1 %11, i64 %2, i64 1, !dbg !16174
  %13 = add nsw i64 %10, %12, !dbg !16175
  br label %14, !dbg !16176

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !16177
  ret i64 %15, !dbg !16178
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !16179 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.184, i32 0, i32 0)) #27, !dbg !16181
  ret void, !dbg !16182
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !16183 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !16185, metadata !DIExpression()), !dbg !16205
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !16186, metadata !DIExpression()), !dbg !16206
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !16207

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !16208

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !16186, metadata !DIExpression()), !dbg !16206
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !16209
  %6 = load i8*, i8** %5, align 4, !dbg !16209
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !16213
  %8 = load i32, i32* %7, align 4, !dbg !16213
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #26, !dbg !16214
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !16215
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !16186, metadata !DIExpression()), !dbg !16206
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !16216
  br i1 %10, label %3, label %2, !dbg !16207, !llvm.loop !16218
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !16220 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16224, metadata !DIExpression()), !dbg !16227
  call void @llvm.dbg.value(metadata i8* %1, metadata !16225, metadata !DIExpression()), !dbg !16227
  call void @llvm.dbg.value(metadata i32 %2, metadata !16226, metadata !DIExpression()), !dbg !16227
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !16228
  tail call fastcc void @z_waitq_init.186(%struct._wait_q_t* noundef nonnull %4) #26, !dbg !16229
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !16230
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #27, !dbg !16231
  ret void, !dbg !16232
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.186(%struct._wait_q_t* noundef %0) unnamed_addr #4 !dbg !16233 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16238, metadata !DIExpression()), !dbg !16239
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16240
  tail call fastcc void @sys_dlist_init.187(%struct._dnode* noundef %2) #26, !dbg !16241
  ret void, !dbg !16242
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.187(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !16243 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16248, metadata !DIExpression()), !dbg !16249
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16250
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16251
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16252
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16253
  ret void, !dbg !16254
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !16255 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !16266, metadata !DIExpression()), !dbg !16276
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16263, metadata !DIExpression()), !dbg !16276
  call void @llvm.dbg.value(metadata i32 %1, metadata !16264, metadata !DIExpression()), !dbg !16276
  call void @llvm.dbg.value(metadata i32 %2, metadata !16265, metadata !DIExpression()), !dbg !16276
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #27, !dbg !16277
  call void @llvm.dbg.value(metadata i64 %6, metadata !16268, metadata !DIExpression()), !dbg !16276
  call void @llvm.dbg.value(metadata i8* null, metadata !16269, metadata !DIExpression()), !dbg !16276
  %7 = icmp eq i64 %5, -1, !dbg !16278
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !16278
  call void @llvm.dbg.value(metadata i64 %8, metadata !16268, metadata !DIExpression()), !dbg !16276
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !16279
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16280, metadata !DIExpression()) #25, !dbg !16287
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16289, !srcloc !16295
  call void @llvm.dbg.value(metadata i32 undef, metadata !16292, metadata !DIExpression()) #25, !dbg !16296
  call void @llvm.dbg.value(metadata i32 undef, metadata !16293, metadata !DIExpression()) #25, !dbg !16296
  call void @llvm.dbg.value(metadata i32 undef, metadata !16286, metadata !DIExpression()) #25, !dbg !16287
  call void @llvm.dbg.value(metadata i32 undef, metadata !16270, metadata !DIExpression()), !dbg !16276
  call void @llvm.dbg.value(metadata i8 0, metadata !16275, metadata !DIExpression()), !dbg !16276
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !16269, metadata !DIExpression()), !dbg !16276
  call void @llvm.dbg.value(metadata i8 0, metadata !16275, metadata !DIExpression()), !dbg !16276
  call void @llvm.dbg.value(metadata i32 undef, metadata !16270, metadata !DIExpression()), !dbg !16276
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #27, !dbg !16297
  call void @llvm.dbg.value(metadata i8* %12, metadata !16269, metadata !DIExpression()), !dbg !16276
  %13 = tail call i64 @sys_clock_tick_get() #27, !dbg !16299
  call void @llvm.dbg.value(metadata i64 %13, metadata !16267, metadata !DIExpression()), !dbg !16276
  %14 = icmp eq i8* %12, null, !dbg !16300
  br i1 %14, label %15, label %31, !dbg !16302

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !16270, metadata !DIExpression()), !dbg !16276
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !16302

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !16275, metadata !DIExpression()), !dbg !16276
  %20 = sub nsw i64 %8, %18, !dbg !16303
  %21 = icmp slt i64 %20, 1, !dbg !16304
  br i1 %21, label %31, label %22, !dbg !16305

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !16276
  call void @llvm.dbg.value(metadata i8 undef, metadata !16275, metadata !DIExpression()), !dbg !16276
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !16306
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !16306
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %struct._wait_q_t* noundef nonnull %16, [1 x i64] %25) #27, !dbg !16306
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16280, metadata !DIExpression()) #25, !dbg !16307
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16309, !srcloc !16295
  call void @llvm.dbg.value(metadata i32 undef, metadata !16292, metadata !DIExpression()) #25, !dbg !16311
  call void @llvm.dbg.value(metadata i32 undef, metadata !16293, metadata !DIExpression()) #25, !dbg !16311
  call void @llvm.dbg.value(metadata i32 undef, metadata !16286, metadata !DIExpression()) #25, !dbg !16307
  call void @llvm.dbg.value(metadata i32 undef, metadata !16270, metadata !DIExpression()), !dbg !16276
  call void @llvm.dbg.value(metadata i8* null, metadata !16269, metadata !DIExpression()), !dbg !16276
  call void @llvm.dbg.value(metadata i32 undef, metadata !16270, metadata !DIExpression()), !dbg !16276
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #27, !dbg !16297
  call void @llvm.dbg.value(metadata i8* %28, metadata !16269, metadata !DIExpression()), !dbg !16276
  %29 = tail call i64 @sys_clock_tick_get() #27, !dbg !16299
  call void @llvm.dbg.value(metadata i64 %29, metadata !16267, metadata !DIExpression()), !dbg !16276
  %30 = icmp eq i8* %28, null, !dbg !16300
  br i1 %30, label %17, label %31, !dbg !16302, !llvm.loop !16312

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !16297
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !16276
  call void @llvm.dbg.value(metadata i8* %33, metadata !16269, metadata !DIExpression()), !dbg !16276
  call void @llvm.dbg.value(metadata i32 %34, metadata !16315, metadata !DIExpression()) #25, !dbg !16321
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16320, metadata !DIExpression()) #25, !dbg !16321
  call void @llvm.dbg.value(metadata i32 %34, metadata !16323, metadata !DIExpression()) #25, !dbg !16326
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #25, !dbg !16328, !srcloc !16329
  ret i8* %33, !dbg !16330
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16331 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16337, metadata !DIExpression()), !dbg !16339
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16335, metadata !DIExpression()), !dbg !16339
  call void @llvm.dbg.value(metadata i32 %1, metadata !16336, metadata !DIExpression()), !dbg !16339
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #26, !dbg !16340
  call void @llvm.dbg.value(metadata i8* %4, metadata !16338, metadata !DIExpression()), !dbg !16339
  ret i8* %4, !dbg !16341
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !16342 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16346, metadata !DIExpression()), !dbg !16349
  call void @llvm.dbg.value(metadata i8* %1, metadata !16347, metadata !DIExpression()), !dbg !16349
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16280, metadata !DIExpression()) #25, !dbg !16350
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16352, !srcloc !16295
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16352
  call void @llvm.dbg.value(metadata i32 %4, metadata !16292, metadata !DIExpression()) #25, !dbg !16354
  call void @llvm.dbg.value(metadata i32 undef, metadata !16293, metadata !DIExpression()) #25, !dbg !16354
  call void @llvm.dbg.value(metadata i32 %4, metadata !16286, metadata !DIExpression()) #25, !dbg !16350
  call void @llvm.dbg.value(metadata i32 %4, metadata !16348, metadata !DIExpression()), !dbg !16349
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !16355
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #27, !dbg !16356
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !16357
  %7 = tail call i32 @z_unpend_all(%struct._wait_q_t* noundef nonnull %6) #27, !dbg !16359
  %8 = icmp eq i32 %7, 0, !dbg !16360
  br i1 %8, label %12, label %9, !dbg !16361

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !16362
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !16363
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #27, !dbg !16363
  br label %13, !dbg !16365

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !16315, metadata !DIExpression()) #25, !dbg !16366
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16320, metadata !DIExpression()) #25, !dbg !16366
  call void @llvm.dbg.value(metadata i32 %4, metadata !16323, metadata !DIExpression()) #25, !dbg !16369
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !16371, !srcloc !16329
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !16372
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!757, !2, !2423, !27, !264, !2425, !2427, !2460, !2498, !274, !318, !2500, !2511, !2557, !2559, !2587, !2615, !2658, !2729, !2774, !347, !492, !2802, !528, !538, !563, !791, !2807, !926, !1020, !1335, !1599, !2844, !1712, !1802, !2846, !2930, !2993, !1851, !2996, !1857, !2218, !3014, !3016, !2238, !3120, !2353, !3123, !2392}
!llvm.ident = !{!3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125, !3125}
!llvm.module.flags = !{!3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 94, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5248, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 82)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2624, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "uart_msgq", scope: !27, file: !209, line: 19, type: !223, isLocal: false, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !206, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/drivers/uart/echo_bot/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103, !107, !108}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !104, line: 46, baseType: !105)
!104 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!105 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !106)
!106 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!107 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !110)
!110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !111, line: 336, size: 608, elements: !112)
!111 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!112 = !{!113, !145, !149, !153, !167, !172, !178, !184, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198}
!113 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !110, file: !111, line: 365, baseType: !114, size: 32)
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!115 = !DISubroutineType(types: !116)
!116 = !{!107, !117, !144}
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !119)
!119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !121)
!120 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!121 = !{!122, !126, !127, !128, !137, !138}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !119, file: !120, line: 380, baseType: !123, size: 32)
!123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 32)
!124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !125)
!125 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !119, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !119, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !119, file: !120, line: 386, baseType: !129, size: 32, offset: 96)
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 32)
!130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !131)
!131 = !{!132, !135}
!132 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !130, file: !120, line: 359, baseType: !133, size: 8)
!133 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !134)
!134 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !130, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!136 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !119, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !119, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !141)
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !120, line: 43, baseType: !142)
!142 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !143)
!143 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !110, file: !111, line: 366, baseType: !146, size: 32, offset: 32)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!147 = !DISubroutineType(types: !148)
!148 = !{null, !117, !134}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !110, file: !111, line: 374, baseType: !150, size: 32, offset: 64)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = !DISubroutineType(types: !152)
!152 = !{!107, !117}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !110, file: !111, line: 377, baseType: !154, size: 32, offset: 96)
!154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!155 = !DISubroutineType(types: !156)
!156 = !{!107, !117, !157}
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 32)
!158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !159)
!159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !111, line: 122, size: 64, elements: !160)
!160 = !{!161, !163, !164, !165, !166}
!161 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !159, file: !111, line: 123, baseType: !162, size: 32)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !159, file: !111, line: 124, baseType: !133, size: 8, offset: 32)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !159, file: !111, line: 125, baseType: !133, size: 8, offset: 40)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !159, file: !111, line: 126, baseType: !133, size: 8, offset: 48)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !159, file: !111, line: 127, baseType: !133, size: 8, offset: 56)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !110, file: !111, line: 379, baseType: !168, size: 32, offset: 128)
!168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 32)
!169 = !DISubroutineType(types: !170)
!170 = !{!107, !117, !171}
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 32)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !110, file: !111, line: 384, baseType: !173, size: 32, offset: 160)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 32)
!174 = !DISubroutineType(types: !175)
!175 = !{!107, !117, !176, !107}
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !133)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !110, file: !111, line: 393, baseType: !179, size: 32, offset: 192)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DISubroutineType(types: !181)
!181 = !{!107, !117, !182, !183}
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 32)
!183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !110, file: !111, line: 402, baseType: !185, size: 32, offset: 224)
!185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 32)
!186 = !DISubroutineType(types: !187)
!187 = !{null, !117}
!188 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !110, file: !111, line: 405, baseType: !185, size: 32, offset: 256)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !110, file: !111, line: 408, baseType: !150, size: 32, offset: 288)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !110, file: !111, line: 411, baseType: !185, size: 32, offset: 320)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !110, file: !111, line: 414, baseType: !185, size: 32, offset: 352)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !110, file: !111, line: 417, baseType: !150, size: 32, offset: 384)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !110, file: !111, line: 420, baseType: !150, size: 32, offset: 416)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !110, file: !111, line: 423, baseType: !185, size: 32, offset: 448)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !110, file: !111, line: 426, baseType: !185, size: 32, offset: 480)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !110, file: !111, line: 429, baseType: !150, size: 32, offset: 512)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !110, file: !111, line: 432, baseType: !150, size: 32, offset: 544)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !110, file: !111, line: 435, baseType: !199, size: 32, offset: 576)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!200 = !DISubroutineType(types: !201)
!201 = !{null, !117, !202, !102}
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !111, line: 142, baseType: !203)
!203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 32)
!204 = !DISubroutineType(types: !205)
!205 = !{null, !117, !102}
!206 = !{!25, !207, !211, !216, !221}
!207 = !DIGlobalVariableExpression(var: !208, expr: !DIExpression())
!208 = distinct !DIGlobalVariable(name: "uart_dev", scope: !27, file: !209, line: 21, type: !210, isLocal: true, isDefinition: true)
!209 = !DIFile(filename: "zephyr/samples/drivers/uart/echo_bot/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !117)
!211 = !DIGlobalVariableExpression(var: !212, expr: !DIExpression())
!212 = distinct !DIGlobalVariable(name: "_k_fifo_buf_uart_msgq", scope: !27, file: !209, line: 19, type: !213, isLocal: true, isDefinition: true, align: 32)
!213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, size: 2560, elements: !214)
!214 = !{!215}
!215 = !DISubrange(count: 320)
!216 = !DIGlobalVariableExpression(var: !217, expr: !DIExpression())
!217 = distinct !DIGlobalVariable(name: "rx_buf", scope: !27, file: !209, line: 24, type: !218, isLocal: true, isDefinition: true)
!218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, size: 256, elements: !219)
!219 = !{!220}
!220 = !DISubrange(count: 32)
!221 = !DIGlobalVariableExpression(var: !222, expr: !DIExpression())
!222 = distinct !DIGlobalVariable(name: "rx_buf_pos", scope: !27, file: !209, line: 25, type: !107, isLocal: true, isDefinition: true)
!223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !224, line: 4204, size: 320, elements: !225)
!224 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!225 = !{!226, !247, !251, !254, !255, !257, !258, !259, !260, !261}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !223, file: !224, line: 4206, baseType: !227, size: 64)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !229)
!228 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!229 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !230)
!230 = !{!231}
!231 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !229, file: !228, line: 232, baseType: !232, size: 64)
!232 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !234)
!233 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !235)
!235 = !{!236, !242}
!236 = !DIDerivedType(tag: DW_TAG_member, scope: !234, file: !233, line: 38, baseType: !237, size: 32)
!237 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !234, file: !233, line: 38, size: 32, elements: !238)
!238 = !{!239, !241}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !237, file: !233, line: 39, baseType: !240, size: 32)
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 32)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !237, file: !233, line: 40, baseType: !240, size: 32)
!242 = !DIDerivedType(tag: DW_TAG_member, scope: !234, file: !233, line: 42, baseType: !243, size: 32, offset: 32)
!243 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !234, file: !233, line: 42, size: 32, elements: !244)
!244 = !{!245, !246}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !243, file: !233, line: 43, baseType: !240, size: 32)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !243, file: !233, line: 44, baseType: !240, size: 32)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !223, file: !224, line: 4208, baseType: !248, offset: 64)
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!249 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!250 = !{}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !223, file: !224, line: 4210, baseType: !252, size: 32, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !253, line: 214, baseType: !32)
!253 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!254 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !223, file: !224, line: 4212, baseType: !162, size: 32, offset: 96)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !223, file: !224, line: 4214, baseType: !256, size: 32, offset: 128)
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !223, file: !224, line: 4216, baseType: !256, size: 32, offset: 160)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !223, file: !224, line: 4218, baseType: !256, size: 32, offset: 192)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !223, file: !224, line: 4220, baseType: !256, size: 32, offset: 224)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !223, file: !224, line: 4222, baseType: !162, size: 32, offset: 256)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !223, file: !224, line: 4227, baseType: !133, size: 8, offset: 288)
!262 = !DIGlobalVariableExpression(var: !263, expr: !DIExpression())
!263 = distinct !DIGlobalVariable(name: "_char_out", scope: !264, file: !268, line: 54, type: !269, isLocal: false, isDefinition: true)
!264 = distinct !DICompileUnit(language: DW_LANG_C99, file: !265, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, globals: !267, splitDebugInlining: false, nameTableKind: None)
!265 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!266 = !{!102, !107}
!267 = !{!262}
!268 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 32)
!270 = !DISubroutineType(types: !271)
!271 = !{!107, !107}
!272 = !DIGlobalVariableExpression(var: !273, expr: !DIExpression())
!273 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !274, file: !291, line: 56, type: !292, isLocal: true, isDefinition: true, align: 32)
!274 = distinct !DICompileUnit(language: DW_LANG_C99, file: !275, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !276, globals: !290, splitDebugInlining: false, nameTableKind: None)
!275 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!276 = !{!277}
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 32)
!278 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !279, line: 369, baseType: !280)
!279 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f405xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!280 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 360, size: 224, elements: !281)
!281 = !{!282, !284, !285, !286, !287, !288, !289}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !280, file: !279, line: 362, baseType: !283, size: 32)
!283 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !162)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !280, file: !279, line: 363, baseType: !283, size: 32, offset: 32)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !280, file: !279, line: 364, baseType: !283, size: 32, offset: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !280, file: !279, line: 365, baseType: !283, size: 32, offset: 96)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !280, file: !279, line: 366, baseType: !283, size: 32, offset: 128)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !280, file: !279, line: 367, baseType: !283, size: 32, offset: 160)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !280, file: !279, line: 368, baseType: !283, size: 32, offset: 192)
!290 = !{!272}
!291 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!292 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !293)
!293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !295)
!294 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!295 = !{!296, !315}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !293, file: !294, line: 60, baseType: !297, size: 32)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 32)
!298 = !DISubroutineType(types: !299)
!299 = !{!107, !300}
!300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 32)
!301 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !302)
!302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !303)
!303 = !{!304, !305, !306, !307, !313, !314}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !302, file: !120, line: 380, baseType: !123, size: 32)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !302, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !302, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !302, file: !120, line: 386, baseType: !308, size: 32, offset: 96)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 32)
!309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !310)
!310 = !{!311, !312}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !309, file: !120, line: 359, baseType: !133, size: 8)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !309, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !302, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !302, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !293, file: !294, line: 65, baseType: !300, size: 32, offset: 32)
!316 = !DIGlobalVariableExpression(var: !317, expr: !DIExpression())
!317 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !318, file: !321, line: 71, type: !322, isLocal: true, isDefinition: true, align: 32)
!318 = distinct !DICompileUnit(language: DW_LANG_C99, file: !319, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !320, splitDebugInlining: false, nameTableKind: None)
!319 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!320 = !{!316}
!321 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!322 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !323)
!323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !324)
!324 = !{!325, !344}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !323, file: !294, line: 60, baseType: !326, size: 32)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 32)
!327 = !DISubroutineType(types: !328)
!328 = !{!107, !329}
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 32)
!330 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !331)
!331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !332)
!332 = !{!333, !334, !335, !336, !342, !343}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !331, file: !120, line: 380, baseType: !123, size: 32)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !331, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !331, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !331, file: !120, line: 386, baseType: !337, size: 32, offset: 96)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 32)
!338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !339)
!339 = !{!340, !341}
!340 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !338, file: !120, line: 359, baseType: !133, size: 8)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !338, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !331, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !331, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !323, file: !294, line: 65, baseType: !329, size: 32, offset: 32)
!345 = !DIGlobalVariableExpression(var: !346, expr: !DIExpression())
!346 = distinct !DIGlobalVariable(name: "static_regions", scope: !347, file: !354, line: 62, type: !488, isLocal: true, isDefinition: true)
!347 = distinct !DICompileUnit(language: DW_LANG_C99, file: !348, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !349, globals: !350, splitDebugInlining: false, nameTableKind: None)
!348 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!349 = !{!252, !107, !162, !102}
!350 = !{!351, !345}
!351 = !DIGlobalVariableExpression(var: !352, expr: !DIExpression())
!352 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !353, file: !354, line: 198, type: !474, isLocal: true, isDefinition: true)
!353 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !354, file: !354, line: 175, type: !355, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !347, retainedNodes: !469)
!354 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!355 = !DISubroutineType(types: !356)
!356 = !{null, !357}
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 32)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !360)
!359 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!360 = !{!361, !426, !439, !440, !441, !442, !448, !464}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !358, file: !359, line: 247, baseType: !362, size: 384)
!362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !363)
!363 = !{!364, !391, !398, !399, !400, !413, !414, !415}
!364 = !DIDerivedType(tag: DW_TAG_member, scope: !362, file: !359, line: 60, baseType: !365, size: 64)
!365 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !362, file: !359, line: 60, size: 64, elements: !366)
!366 = !{!367, !382}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !365, file: !359, line: 61, baseType: !368, size: 64)
!368 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !369)
!369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !370)
!370 = !{!371, !377}
!371 = !DIDerivedType(tag: DW_TAG_member, scope: !369, file: !233, line: 38, baseType: !372, size: 32)
!372 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !369, file: !233, line: 38, size: 32, elements: !373)
!373 = !{!374, !376}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !372, file: !233, line: 39, baseType: !375, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !372, file: !233, line: 40, baseType: !375, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, scope: !369, file: !233, line: 42, baseType: !378, size: 32, offset: 32)
!378 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !369, file: !233, line: 42, size: 32, elements: !379)
!379 = !{!380, !381}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !378, file: !233, line: 43, baseType: !375, size: 32)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !378, file: !233, line: 44, baseType: !375, size: 32)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !365, file: !359, line: 62, baseType: !383, size: 64)
!383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !385)
!384 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!385 = !{!386}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !383, file: !384, line: 50, baseType: !387, size: 64)
!387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 64, elements: !389)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 32)
!389 = !{!390}
!390 = !DISubrange(count: 2)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !362, file: !359, line: 68, baseType: !392, size: 32, offset: 64)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 32)
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !394)
!394 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !395)
!395 = !{!396}
!396 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !394, file: !228, line: 232, baseType: !397, size: 64)
!397 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !369)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !362, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !362, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!400 = !DIDerivedType(tag: DW_TAG_member, scope: !362, file: !359, line: 90, baseType: !401, size: 16, offset: 112)
!401 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !362, file: !359, line: 90, size: 16, elements: !402)
!402 = !{!403, !410}
!403 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !359, line: 91, baseType: !404, size: 16)
!404 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !401, file: !359, line: 91, size: 16, elements: !405)
!405 = !{!406, !409}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !404, file: !359, line: 96, baseType: !407, size: 8)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !408)
!408 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !404, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !401, file: !359, line: 100, baseType: !411, size: 16)
!411 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !412)
!412 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !362, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !362, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !362, file: !359, line: 131, baseType: !416, size: 192, offset: 192)
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !417)
!417 = !{!418, !419, !425}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !416, file: !228, line: 245, baseType: !368, size: 64)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !416, file: !228, line: 246, baseType: !420, size: 32, offset: 64)
!420 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !421)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!422 = !DISubroutineType(types: !423)
!423 = !{null, !424}
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 32)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !416, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !358, file: !359, line: 250, baseType: !427, size: 288, offset: 384)
!427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !429)
!428 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!429 = !{!430, !431, !432, !433, !434, !435, !436, !437, !438}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !427, file: !428, line: 26, baseType: !162, size: 32)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !427, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !427, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !427, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !427, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !427, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !427, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !427, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !427, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !358, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !358, file: !359, line: 256, baseType: !393, size: 64, offset: 704)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !358, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !358, file: !359, line: 300, baseType: !443, size: 96, offset: 800)
!443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !444)
!444 = !{!445, !446, !447}
!445 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !443, file: !359, line: 153, baseType: !22, size: 32)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !443, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !443, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !358, file: !359, line: 325, baseType: !449, size: 32, offset: 896)
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 32)
!450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !451)
!451 = !{!452, !461, !462}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !450, file: !224, line: 5074, baseType: !453, size: 96)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !455)
!454 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!455 = !{!456, !459, !460}
!456 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !453, file: !454, line: 57, baseType: !457, size: 32)
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 32)
!458 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !454, line: 57, flags: DIFlagFwdDecl)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !453, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !453, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !450, file: !224, line: 5075, baseType: !393, size: 64, offset: 96)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !450, file: !224, line: 5076, baseType: !463, offset: 160)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !358, file: !359, line: 343, baseType: !465, size: 64, offset: 928)
!465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !466)
!466 = !{!467, !468}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !465, file: !428, line: 63, baseType: !162, size: 32)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !465, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!469 = !{!470, !471, !472, !473}
!470 = !DILocalVariable(name: "thread", arg: 1, scope: !353, file: !354, line: 175, type: !357)
!471 = !DILocalVariable(name: "region_num", scope: !353, file: !354, line: 200, type: !133)
!472 = !DILocalVariable(name: "guard_start", scope: !353, file: !354, line: 265, type: !22)
!473 = !DILocalVariable(name: "guard_size", scope: !353, file: !354, line: 266, type: !252)
!474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !475, size: 96, elements: !486)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !476, line: 52, size: 96, elements: !477)
!476 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!477 = !{!478, !479, !480}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !475, file: !476, line: 53, baseType: !22, size: 32)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !475, file: !476, line: 54, baseType: !252, size: 32, offset: 32)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !475, file: !476, line: 55, baseType: !481, size: 32, offset: 64)
!481 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !482, line: 151, baseType: !483)
!482 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !482, line: 149, size: 32, elements: !484)
!484 = !{!485}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !483, file: !482, line: 150, baseType: !162, size: 32)
!486 = !{!487}
!487 = !DISubrange(count: 1)
!488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !489, size: 96, elements: !486)
!489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !475)
!490 = !DIGlobalVariableExpression(var: !491, expr: !DIExpression())
!491 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !492, file: !525, line: 39, type: !133, isLocal: true, isDefinition: true)
!492 = distinct !DICompileUnit(language: DW_LANG_C99, file: !493, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !494, globals: !524, splitDebugInlining: false, nameTableKind: None)
!493 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!494 = !{!495, !102, !107, !512, !133}
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 32)
!496 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !497, line: 1226, baseType: !498)
!497 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!498 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 1213, size: 352, elements: !499)
!499 = !{!500, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !498, file: !497, line: 1215, baseType: !501, size: 32)
!501 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !283)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !498, file: !497, line: 1216, baseType: !283, size: 32, offset: 32)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !498, file: !497, line: 1217, baseType: !283, size: 32, offset: 64)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !498, file: !497, line: 1218, baseType: !283, size: 32, offset: 96)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !498, file: !497, line: 1219, baseType: !283, size: 32, offset: 128)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !498, file: !497, line: 1220, baseType: !283, size: 32, offset: 160)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !498, file: !497, line: 1221, baseType: !283, size: 32, offset: 192)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !498, file: !497, line: 1222, baseType: !283, size: 32, offset: 224)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !498, file: !497, line: 1223, baseType: !283, size: 32, offset: 256)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !498, file: !497, line: 1224, baseType: !283, size: 32, offset: 288)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !498, file: !497, line: 1225, baseType: !283, size: 32, offset: 320)
!512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 32)
!513 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !514)
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !515, line: 27, size: 96, elements: !516)
!515 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!516 = !{!517, !518, !519}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !514, file: !515, line: 29, baseType: !162, size: 32)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !514, file: !515, line: 31, baseType: !123, size: 32, offset: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !514, file: !515, line: 37, baseType: !520, size: 32, offset: 64)
!520 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !482, line: 146, baseType: !521)
!521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !482, line: 141, size: 32, elements: !522)
!522 = !{!523}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !521, file: !482, line: 143, baseType: !162, size: 32)
!524 = !{!490}
!525 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!526 = !DIGlobalVariableExpression(var: !527, expr: !DIExpression())
!527 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !528, file: !535, line: 21, type: !269, isLocal: true, isDefinition: true)
!528 = distinct !DICompileUnit(language: DW_LANG_C99, file: !529, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !530, globals: !534, splitDebugInlining: false, nameTableKind: None)
!529 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!530 = !{!531, !107, !102}
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 32)
!532 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !533, line: 22, baseType: !107)
!533 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = !{!526}
!535 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!536 = !DIGlobalVariableExpression(var: !537, expr: !DIExpression())
!537 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !538, file: !543, line: 13, type: !560, isLocal: true, isDefinition: true)
!538 = distinct !DICompileUnit(language: DW_LANG_C99, file: !539, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !540, splitDebugInlining: false, nameTableKind: None)
!539 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!540 = !{!541, !536}
!541 = !DIGlobalVariableExpression(var: !542, expr: !DIExpression())
!542 = distinct !DIGlobalVariable(name: "mpu_config", scope: !538, file: !543, line: 37, type: !544, isLocal: false, isDefinition: true)
!543 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!544 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !545)
!545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !515, line: 41, size: 64, elements: !546)
!546 = !{!547, !548}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !545, file: !515, line: 43, baseType: !162, size: 32)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !545, file: !515, line: 45, baseType: !549, size: 32, offset: 32)
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 32)
!550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !551)
!551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !515, line: 27, size: 96, elements: !552)
!552 = !{!553, !554, !555}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !551, file: !515, line: 29, baseType: !162, size: 32)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !551, file: !515, line: 31, baseType: !123, size: 32, offset: 32)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !551, file: !515, line: 37, baseType: !556, size: 32, offset: 64)
!556 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !482, line: 146, baseType: !557)
!557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !482, line: 141, size: 32, elements: !558)
!558 = !{!559}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !557, file: !482, line: 143, baseType: !162, size: 32)
!560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !550, size: 192, elements: !389)
!561 = !DIGlobalVariableExpression(var: !562, expr: !DIExpression())
!562 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !563, file: !668, line: 72, type: !752, isLocal: true, isDefinition: true)
!563 = distinct !DICompileUnit(language: DW_LANG_C99, file: !564, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !565, retainedTypes: !654, globals: !665, splitDebugInlining: false, nameTableKind: None)
!564 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!565 = !{!30, !566}
!566 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !279, line: 65, baseType: !107, size: 32, elements: !567)
!567 = !{!568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653}
!568 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!569 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!570 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!571 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!572 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!573 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!574 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!575 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!576 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!577 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!578 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!579 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!580 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!581 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!582 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!583 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!584 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!585 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!586 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!587 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!588 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!589 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!590 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!591 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!592 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!593 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!594 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!595 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!596 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!597 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!598 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!599 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!600 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!601 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!602 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!603 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!604 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!605 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!606 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!607 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!608 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!609 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!610 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!611 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!612 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!613 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!614 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!615 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!616 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!617 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!618 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!619 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!620 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!621 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!622 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!623 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!624 = !DIEnumerator(name: "FSMC_IRQn", value: 48)
!625 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!626 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!627 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!628 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!629 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!630 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!631 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!632 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!633 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!634 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!635 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!636 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!637 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!638 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!639 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!640 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!641 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!642 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!643 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!644 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!645 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!646 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!647 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!648 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!649 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!650 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!651 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!652 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!653 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!654 = !{!252, !107, !102, !655}
!655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !656, size: 32)
!656 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !279, line: 354, baseType: !657)
!657 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 346, size: 192, elements: !658)
!658 = !{!659, !660, !661, !662, !663, !664}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !657, file: !279, line: 348, baseType: !283, size: 32)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !657, file: !279, line: 349, baseType: !283, size: 32, offset: 32)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !657, file: !279, line: 350, baseType: !283, size: 32, offset: 64)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !657, file: !279, line: 351, baseType: !283, size: 32, offset: 96)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !657, file: !279, line: 352, baseType: !283, size: 32, offset: 128)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !657, file: !279, line: 353, baseType: !283, size: 32, offset: 160)
!665 = !{!666, !672, !688, !699, !716, !561, !718, !732, !734, !736, !738, !740, !742, !744, !746, !748, !750}
!666 = !DIGlobalVariableExpression(var: !667, expr: !DIExpression())
!667 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !563, file: !668, line: 424, type: !669, isLocal: false, isDefinition: true, align: 16)
!668 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 64, elements: !670)
!670 = !{!671}
!671 = !DISubrange(count: 4)
!672 = !DIGlobalVariableExpression(var: !673, expr: !DIExpression())
!673 = distinct !DIGlobalVariable(name: "__device_dts_ord_37", scope: !563, file: !668, line: 424, type: !674, isLocal: false, isDefinition: true, align: 32)
!674 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !675)
!675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !676)
!676 = !{!677, !678, !679, !680, !686, !687}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !675, file: !120, line: 380, baseType: !123, size: 32)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !675, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !675, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !675, file: !120, line: 386, baseType: !681, size: 32, offset: 96)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 32)
!682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !683)
!683 = !{!684, !685}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !682, file: !120, line: 359, baseType: !133, size: 8)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !682, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !675, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !675, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!688 = !DIGlobalVariableExpression(var: !689, expr: !DIExpression())
!689 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_37", scope: !563, file: !668, line: 424, type: !690, isLocal: true, isDefinition: true, align: 32)
!690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !691)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !692)
!692 = !{!693, !698}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !691, file: !294, line: 60, baseType: !694, size: 32)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 32)
!695 = !DISubroutineType(types: !696)
!696 = !{!107, !697}
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 32)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !691, file: !294, line: 65, baseType: !697, size: 32, offset: 32)
!699 = !DIGlobalVariableExpression(var: !700, expr: !DIExpression())
!700 = distinct !DIGlobalVariable(name: "exti_data", scope: !563, file: !668, line: 423, type: !701, isLocal: true, isDefinition: true)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !668, line: 107, size: 1472, elements: !702)
!702 = !{!703}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !701, file: !668, line: 109, baseType: !704, size: 1472)
!704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !705, size: 1472, elements: !714)
!705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !668, line: 101, size: 64, elements: !706)
!706 = !{!707, !713}
!707 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !705, file: !668, line: 102, baseType: !708, size: 32)
!708 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !709, line: 63, baseType: !710)
!709 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 32)
!711 = !DISubroutineType(types: !712)
!712 = !{null, !107, !102}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !705, file: !668, line: 103, baseType: !102, size: 32, offset: 32)
!714 = !{!715}
!715 = !DISubrange(count: 23)
!716 = !DIGlobalVariableExpression(var: !717, expr: !DIExpression())
!717 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_37", scope: !563, file: !668, line: 424, type: !682, isLocal: true, isDefinition: true, align: 8)
!718 = !DIGlobalVariableExpression(var: !719, expr: !DIExpression())
!719 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !720, file: !668, line: 493, type: !725, isLocal: true, isDefinition: true, align: 32)
!720 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !668, file: !668, line: 460, type: !721, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !723)
!721 = !DISubroutineType(types: !722)
!722 = !{null, !697}
!723 = !{!724}
!724 = !DILocalVariable(name: "dev", arg: 1, scope: !720, file: !668, line: 460, type: !697)
!725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !726)
!726 = !{!727, !729, !730, !731}
!727 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !725, file: !10, line: 55, baseType: !728, size: 32)
!728 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !107)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !725, file: !10, line: 57, baseType: !728, size: 32, offset: 32)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !725, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !725, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!732 = !DIGlobalVariableExpression(var: !733, expr: !DIExpression())
!733 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !720, file: !668, line: 497, type: !725, isLocal: true, isDefinition: true, align: 32)
!734 = !DIGlobalVariableExpression(var: !735, expr: !DIExpression())
!735 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !720, file: !668, line: 507, type: !725, isLocal: true, isDefinition: true, align: 32)
!736 = !DIGlobalVariableExpression(var: !737, expr: !DIExpression())
!737 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !720, file: !668, line: 512, type: !725, isLocal: true, isDefinition: true, align: 32)
!738 = !DIGlobalVariableExpression(var: !739, expr: !DIExpression())
!739 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !720, file: !668, line: 516, type: !725, isLocal: true, isDefinition: true, align: 32)
!740 = !DIGlobalVariableExpression(var: !741, expr: !DIExpression())
!741 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !720, file: !668, line: 523, type: !725, isLocal: true, isDefinition: true, align: 32)
!742 = !DIGlobalVariableExpression(var: !743, expr: !DIExpression())
!743 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !720, file: !668, line: 527, type: !725, isLocal: true, isDefinition: true, align: 32)
!744 = !DIGlobalVariableExpression(var: !745, expr: !DIExpression())
!745 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !720, file: !668, line: 581, type: !725, isLocal: true, isDefinition: true, align: 32)
!746 = !DIGlobalVariableExpression(var: !747, expr: !DIExpression())
!747 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !720, file: !668, line: 586, type: !725, isLocal: true, isDefinition: true, align: 32)
!748 = !DIGlobalVariableExpression(var: !749, expr: !DIExpression())
!749 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !720, file: !668, line: 591, type: !725, isLocal: true, isDefinition: true, align: 32)
!750 = !DIGlobalVariableExpression(var: !751, expr: !DIExpression())
!751 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !720, file: !668, line: 595, type: !725, isLocal: true, isDefinition: true, align: 32)
!752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !753, size: 736, elements: !714)
!753 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !754)
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !279, line: 155, baseType: !566)
!755 = !DIGlobalVariableExpression(var: !756, expr: !DIExpression())
!756 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !757, file: !762, line: 23, type: !786, isLocal: false, isDefinition: true, align: 16)
!757 = distinct !DICompileUnit(language: DW_LANG_C99, file: !758, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !759, splitDebugInlining: false, nameTableKind: None)
!758 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!759 = !{!760, !755, !766, !768, !770, !772, !774, !776, !778, !780, !782, !784}
!760 = !DIGlobalVariableExpression(var: !761, expr: !DIExpression())
!761 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !757, file: !762, line: 18, type: !763, isLocal: false, isDefinition: true, align: 16)
!762 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 208, elements: !764)
!764 = !{!765}
!765 = !DISubrange(count: 13)
!766 = !DIGlobalVariableExpression(var: !767, expr: !DIExpression())
!767 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !757, file: !762, line: 30, type: !669, isLocal: false, isDefinition: true, align: 16)
!768 = !DIGlobalVariableExpression(var: !769, expr: !DIExpression())
!769 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !757, file: !762, line: 37, type: !669, isLocal: false, isDefinition: true, align: 16)
!770 = !DIGlobalVariableExpression(var: !771, expr: !DIExpression())
!771 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !757, file: !762, line: 44, type: !669, isLocal: false, isDefinition: true, align: 16)
!772 = !DIGlobalVariableExpression(var: !773, expr: !DIExpression())
!773 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !757, file: !762, line: 51, type: !669, isLocal: false, isDefinition: true, align: 16)
!774 = !DIGlobalVariableExpression(var: !775, expr: !DIExpression())
!775 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !757, file: !762, line: 58, type: !669, isLocal: false, isDefinition: true, align: 16)
!776 = !DIGlobalVariableExpression(var: !777, expr: !DIExpression())
!777 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !757, file: !762, line: 65, type: !669, isLocal: false, isDefinition: true, align: 16)
!778 = !DIGlobalVariableExpression(var: !779, expr: !DIExpression())
!779 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !757, file: !762, line: 72, type: !669, isLocal: false, isDefinition: true, align: 16)
!780 = !DIGlobalVariableExpression(var: !781, expr: !DIExpression())
!781 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !757, file: !762, line: 79, type: !669, isLocal: false, isDefinition: true, align: 16)
!782 = !DIGlobalVariableExpression(var: !783, expr: !DIExpression())
!783 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !757, file: !762, line: 86, type: !669, isLocal: false, isDefinition: true, align: 16)
!784 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression())
!785 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !757, file: !762, line: 93, type: !669, isLocal: false, isDefinition: true, align: 16)
!786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 48, elements: !787)
!787 = !{!788}
!788 = !DISubrange(count: 3)
!789 = !DIGlobalVariableExpression(var: !790, expr: !DIExpression())
!790 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !791, file: !852, line: 398, type: !885, isLocal: true, isDefinition: true)
!791 = distinct !DICompileUnit(language: DW_LANG_C99, file: !792, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !793, retainedTypes: !806, globals: !849, splitDebugInlining: false, nameTableKind: None)
!792 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!793 = !{!794, !30, !799}
!794 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !795, line: 197, baseType: !32, size: 32, elements: !796)
!795 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!796 = !{!797, !798}
!797 = !DIEnumerator(name: "SUCCESS", value: 0)
!798 = !DIEnumerator(name: "ERROR", value: 1)
!799 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !800, line: 44, baseType: !32, size: 32, elements: !801)
!800 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!801 = !{!802, !803, !804, !805}
!802 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!803 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!804 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!805 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!806 = !{!102, !107, !162, !807, !842, !848}
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 32)
!808 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !279, line: 532, baseType: !809)
!809 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 500, size: 1088, elements: !810)
!810 = !{!811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !809, file: !279, line: 502, baseType: !283, size: 32)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !809, file: !279, line: 503, baseType: !283, size: 32, offset: 32)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !809, file: !279, line: 504, baseType: !283, size: 32, offset: 64)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !809, file: !279, line: 505, baseType: !283, size: 32, offset: 96)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !809, file: !279, line: 506, baseType: !283, size: 32, offset: 128)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !809, file: !279, line: 507, baseType: !283, size: 32, offset: 160)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !809, file: !279, line: 508, baseType: !283, size: 32, offset: 192)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !809, file: !279, line: 509, baseType: !162, size: 32, offset: 224)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !809, file: !279, line: 510, baseType: !283, size: 32, offset: 256)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !809, file: !279, line: 511, baseType: !283, size: 32, offset: 288)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !809, file: !279, line: 512, baseType: !822, size: 64, offset: 320)
!822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 64, elements: !389)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !809, file: !279, line: 513, baseType: !283, size: 32, offset: 384)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !809, file: !279, line: 514, baseType: !283, size: 32, offset: 416)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !809, file: !279, line: 515, baseType: !283, size: 32, offset: 448)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !809, file: !279, line: 516, baseType: !162, size: 32, offset: 480)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !809, file: !279, line: 517, baseType: !283, size: 32, offset: 512)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !809, file: !279, line: 518, baseType: !283, size: 32, offset: 544)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !809, file: !279, line: 519, baseType: !822, size: 64, offset: 576)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !809, file: !279, line: 520, baseType: !283, size: 32, offset: 640)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !809, file: !279, line: 521, baseType: !283, size: 32, offset: 672)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !809, file: !279, line: 522, baseType: !283, size: 32, offset: 704)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !809, file: !279, line: 523, baseType: !162, size: 32, offset: 736)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !809, file: !279, line: 524, baseType: !283, size: 32, offset: 768)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !809, file: !279, line: 525, baseType: !283, size: 32, offset: 800)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !809, file: !279, line: 526, baseType: !822, size: 64, offset: 832)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !809, file: !279, line: 527, baseType: !283, size: 32, offset: 896)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !809, file: !279, line: 528, baseType: !283, size: 32, offset: 928)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !809, file: !279, line: 529, baseType: !822, size: 64, offset: 960)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !809, file: !279, line: 530, baseType: !283, size: 32, offset: 1024)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !809, file: !279, line: 531, baseType: !283, size: 32, offset: 1056)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 32)
!843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !844, line: 343, size: 64, elements: !845)
!844 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!845 = !{!846, !847}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !843, file: !844, line: 344, baseType: !162, size: 32)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !843, file: !844, line: 345, baseType: !162, size: 32, offset: 32)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 32)
!849 = !{!850, !856, !872, !883, !789}
!850 = !DIGlobalVariableExpression(var: !851, expr: !DIExpression())
!851 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !791, file: !852, line: 752, type: !853, isLocal: false, isDefinition: true, align: 16)
!852 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!853 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 928, elements: !854)
!854 = !{!855}
!855 = !DISubrange(count: 58)
!856 = !DIGlobalVariableExpression(var: !857, expr: !DIExpression())
!857 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !791, file: !852, line: 752, type: !858, isLocal: false, isDefinition: true, align: 32)
!858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !859)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !860)
!860 = !{!861, !862, !863, !864, !870, !871}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !859, file: !120, line: 380, baseType: !123, size: 32)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !859, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !859, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !859, file: !120, line: 386, baseType: !865, size: 32, offset: 96)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 32)
!866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !867)
!867 = !{!868, !869}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !866, file: !120, line: 359, baseType: !133, size: 8)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !866, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !859, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !859, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!872 = !DIGlobalVariableExpression(var: !873, expr: !DIExpression())
!873 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !791, file: !852, line: 752, type: !874, isLocal: true, isDefinition: true, align: 32)
!874 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !875)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !876)
!876 = !{!877, !882}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !875, file: !294, line: 60, baseType: !878, size: 32)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 32)
!879 = !DISubroutineType(types: !880)
!880 = !{!107, !881}
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 32)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !875, file: !294, line: 65, baseType: !881, size: 32, offset: 32)
!883 = !DIGlobalVariableExpression(var: !884, expr: !DIExpression())
!884 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !791, file: !852, line: 752, type: !866, isLocal: true, isDefinition: true, align: 8)
!885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !800, line: 100, size: 224, elements: !886)
!886 = !{!887, !893, !894, !903, !908, !913, !919}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !885, file: !800, line: 101, baseType: !888, size: 32)
!888 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !800, line: 76, baseType: !889)
!889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 32)
!890 = !DISubroutineType(types: !891)
!891 = !{!107, !881, !892}
!892 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !800, line: 56, baseType: !102)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !885, file: !800, line: 102, baseType: !888, size: 32, offset: 32)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !885, file: !800, line: 103, baseType: !895, size: 32, offset: 64)
!895 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !800, line: 83, baseType: !896)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 32)
!897 = !DISubroutineType(types: !898)
!898 = !{!107, !881, !892, !899, !102}
!899 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !800, line: 72, baseType: !900)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 32)
!901 = !DISubroutineType(types: !902)
!902 = !{null, !881, !892, !102}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !885, file: !800, line: 104, baseType: !904, size: 32, offset: 96)
!904 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !800, line: 79, baseType: !905)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 32)
!906 = !DISubroutineType(types: !907)
!907 = !{!107, !881, !892, !848}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !885, file: !800, line: 105, baseType: !909, size: 32, offset: 128)
!909 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !800, line: 88, baseType: !910)
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 32)
!911 = !DISubroutineType(types: !912)
!912 = !{!799, !881, !892}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !885, file: !800, line: 106, baseType: !914, size: 32, offset: 160)
!914 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !800, line: 92, baseType: !915)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 32)
!916 = !DISubroutineType(types: !917)
!917 = !{!107, !881, !892, !918}
!918 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !800, line: 64, baseType: !102)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !885, file: !800, line: 107, baseType: !920, size: 32, offset: 192)
!920 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !800, line: 96, baseType: !921)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 32)
!922 = !DISubroutineType(types: !923)
!923 = !{!107, !881, !892, !102}
!924 = !DIGlobalVariableExpression(var: !925, expr: !DIExpression())
!925 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !926, file: !1011, line: 603, type: !1013, isLocal: true, isDefinition: true, align: 32)
!926 = distinct !DICompileUnit(language: DW_LANG_C99, file: !927, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !928, globals: !1008, splitDebugInlining: false, nameTableKind: None)
!927 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!928 = !{!102, !107, !929}
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 32)
!930 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !931)
!931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !111, line: 336, size: 608, elements: !932)
!932 = !{!933, !952, !956, !960, !973, !978, !982, !986, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !931, file: !111, line: 365, baseType: !934, size: 32)
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 32)
!935 = !DISubroutineType(types: !936)
!936 = !{!107, !937, !144}
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 32)
!938 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !939)
!939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !940)
!940 = !{!941, !942, !943, !944, !950, !951}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !939, file: !120, line: 380, baseType: !123, size: 32)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !939, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !939, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !939, file: !120, line: 386, baseType: !945, size: 32, offset: 96)
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 32)
!946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !947)
!947 = !{!948, !949}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !946, file: !120, line: 359, baseType: !133, size: 8)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !946, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !939, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !939, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !931, file: !111, line: 366, baseType: !953, size: 32, offset: 32)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 32)
!954 = !DISubroutineType(types: !955)
!955 = !{null, !937, !134}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !931, file: !111, line: 374, baseType: !957, size: 32, offset: 64)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 32)
!958 = !DISubroutineType(types: !959)
!959 = !{!107, !937}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !931, file: !111, line: 377, baseType: !961, size: 32, offset: 96)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 32)
!962 = !DISubroutineType(types: !963)
!963 = !{!107, !937, !964}
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 32)
!965 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !966)
!966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !111, line: 122, size: 64, elements: !967)
!967 = !{!968, !969, !970, !971, !972}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !966, file: !111, line: 123, baseType: !162, size: 32)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !966, file: !111, line: 124, baseType: !133, size: 8, offset: 32)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !966, file: !111, line: 125, baseType: !133, size: 8, offset: 40)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !966, file: !111, line: 126, baseType: !133, size: 8, offset: 48)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !966, file: !111, line: 127, baseType: !133, size: 8, offset: 56)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !931, file: !111, line: 379, baseType: !974, size: 32, offset: 128)
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 32)
!975 = !DISubroutineType(types: !976)
!976 = !{!107, !937, !977}
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 32)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !931, file: !111, line: 384, baseType: !979, size: 32, offset: 160)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 32)
!980 = !DISubroutineType(types: !981)
!981 = !{!107, !937, !176, !107}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !931, file: !111, line: 393, baseType: !983, size: 32, offset: 192)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 32)
!984 = !DISubroutineType(types: !985)
!985 = !{!107, !937, !182, !183}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !931, file: !111, line: 402, baseType: !987, size: 32, offset: 224)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 32)
!988 = !DISubroutineType(types: !989)
!989 = !{null, !937}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !931, file: !111, line: 405, baseType: !987, size: 32, offset: 256)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !931, file: !111, line: 408, baseType: !957, size: 32, offset: 288)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !931, file: !111, line: 411, baseType: !987, size: 32, offset: 320)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !931, file: !111, line: 414, baseType: !987, size: 32, offset: 352)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !931, file: !111, line: 417, baseType: !957, size: 32, offset: 384)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !931, file: !111, line: 420, baseType: !957, size: 32, offset: 416)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !931, file: !111, line: 423, baseType: !987, size: 32, offset: 448)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !931, file: !111, line: 426, baseType: !987, size: 32, offset: 480)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !931, file: !111, line: 429, baseType: !957, size: 32, offset: 512)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !931, file: !111, line: 432, baseType: !957, size: 32, offset: 544)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !931, file: !111, line: 435, baseType: !1001, size: 32, offset: 576)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 32)
!1002 = !DISubroutineType(types: !1003)
!1003 = !{null, !937, !1004, !102}
!1004 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !111, line: 142, baseType: !1005)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 32)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{null, !937, !102}
!1008 = !{!924, !1009}
!1009 = !DIGlobalVariableExpression(var: !1010, expr: !DIExpression())
!1010 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !926, file: !1011, line: 38, type: !1012, isLocal: true, isDefinition: true)
!1011 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1012 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !937)
!1013 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1014)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !1015)
!1015 = !{!1016, !1017}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1014, file: !294, line: 60, baseType: !957, size: 32)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1014, file: !294, line: 65, baseType: !937, size: 32, offset: 32)
!1018 = !DIGlobalVariableExpression(var: !1019, expr: !DIExpression())
!1019 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1020, file: !1189, line: 762, type: !1308, isLocal: true, isDefinition: true)
!1020 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1021, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1022, retainedTypes: !1040, globals: !1186, splitDebugInlining: false, nameTableKind: None)
!1021 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!1022 = !{!30, !1023, !1029, !1034, !799}
!1023 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1024, line: 506, baseType: !32, size: 32, elements: !1025)
!1024 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1025 = !{!1026, !1027, !1028}
!1026 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1027 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1028 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1029 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1024, line: 512, baseType: !32, size: 32, elements: !1030)
!1030 = !{!1031, !1032, !1033}
!1031 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1032 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1033 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1034 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !709, line: 43, baseType: !32, size: 32, elements: !1035)
!1035 = !{!1036, !1037, !1038, !1039}
!1036 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1037 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1038 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1039 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1040 = !{!102, !107, !1041, !1111, !1116, !1076, !1029, !1023, !1121, !1122, !162, !1136, !1091, !256, !1146, !1147}
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 32)
!1042 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1043)
!1043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1024, line: 523, size: 288, elements: !1044)
!1044 = !{!1045, !1066, !1072, !1077, !1081, !1082, !1083, !1087, !1107}
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1043, file: !1024, line: 524, baseType: !1046, size: 32)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 32)
!1047 = !DISubroutineType(types: !1048)
!1048 = !{!107, !1049, !1064, !1065}
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 32)
!1050 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1051)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !1052)
!1052 = !{!1053, !1054, !1055, !1056, !1062, !1063}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1051, file: !120, line: 380, baseType: !123, size: 32)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1051, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1051, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1051, file: !120, line: 386, baseType: !1057, size: 32, offset: 96)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 32)
!1058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !1059)
!1059 = !{!1060, !1061}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1058, file: !120, line: 359, baseType: !133, size: 8)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1058, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1051, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1051, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!1064 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1024, line: 237, baseType: !133)
!1065 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1024, line: 257, baseType: !162)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1043, file: !1024, line: 530, baseType: !1067, size: 32, offset: 32)
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 32)
!1068 = !DISubroutineType(types: !1069)
!1069 = !{!107, !1049, !1070}
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 32)
!1071 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1024, line: 229, baseType: !162)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1043, file: !1024, line: 532, baseType: !1073, size: 32, offset: 64)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 32)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!107, !1049, !1076, !1071}
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1024, line: 216, baseType: !162)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1043, file: !1024, line: 535, baseType: !1078, size: 32, offset: 96)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 32)
!1079 = !DISubroutineType(types: !1080)
!1080 = !{!107, !1049, !1076}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1043, file: !1024, line: 537, baseType: !1078, size: 32, offset: 128)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1043, file: !1024, line: 539, baseType: !1078, size: 32, offset: 160)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1043, file: !1024, line: 541, baseType: !1084, size: 32, offset: 192)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 32)
!1085 = !DISubroutineType(types: !1086)
!1086 = !{!107, !1049, !1064, !1023, !1029}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1043, file: !1024, line: 544, baseType: !1088, size: 32, offset: 224)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 32)
!1089 = !DISubroutineType(types: !1090)
!1090 = !{!107, !1049, !1091, !136}
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 32)
!1092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1024, line: 478, size: 96, elements: !1093)
!1093 = !{!1094, !1101, !1106}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1092, file: !1024, line: 482, baseType: !1095, size: 32)
!1095 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1096, line: 33, baseType: !1097)
!1096 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1096, line: 29, size: 32, elements: !1098)
!1098 = !{!1099}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1097, file: !1096, line: 30, baseType: !1100, size: 32)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 32)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1092, file: !1024, line: 485, baseType: !1102, size: 32, offset: 32)
!1102 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1024, line: 464, baseType: !1103)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 32)
!1104 = !DISubroutineType(types: !1105)
!1105 = !{null, !1049, !1091, !1076}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1092, file: !1024, line: 493, baseType: !1076, size: 32, offset: 64)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1043, file: !1024, line: 547, baseType: !1108, size: 32, offset: 256)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 32)
!1109 = !DISubroutineType(types: !1110)
!1110 = !{!162, !1049}
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 32)
!1112 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1113)
!1113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1024, line: 428, size: 32, elements: !1114)
!1114 = !{!1115}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1113, file: !1024, line: 434, baseType: !1076, size: 32)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 32)
!1117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1118)
!1118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1024, line: 441, size: 32, elements: !1119)
!1119 = !{!1120}
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1118, file: !1024, line: 447, baseType: !1076, size: 32)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 32)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 32)
!1123 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !279, line: 441, baseType: !1124)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 430, size: 320, elements: !1125)
!1125 = !{!1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1124, file: !279, line: 432, baseType: !283, size: 32)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1124, file: !279, line: 433, baseType: !283, size: 32, offset: 32)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1124, file: !279, line: 434, baseType: !283, size: 32, offset: 64)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1124, file: !279, line: 435, baseType: !283, size: 32, offset: 96)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1124, file: !279, line: 436, baseType: !283, size: 32, offset: 128)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1124, file: !279, line: 437, baseType: !283, size: 32, offset: 160)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1124, file: !279, line: 438, baseType: !283, size: 32, offset: 192)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1124, file: !279, line: 439, baseType: !283, size: 32, offset: 224)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1124, file: !279, line: 440, baseType: !1135, size: 64, offset: 256)
!1135 = !DICompositeType(tag: DW_TAG_array_type, baseType: !283, size: 64, elements: !389)
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 32)
!1137 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !279, line: 454, baseType: !1138)
!1138 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 447, size: 288, elements: !1139)
!1139 = !{!1140, !1141, !1142, !1144, !1145}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1138, file: !279, line: 449, baseType: !283, size: 32)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1138, file: !279, line: 450, baseType: !283, size: 32, offset: 32)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1138, file: !279, line: 451, baseType: !1143, size: 128, offset: 64)
!1143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !283, size: 128, elements: !670)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1138, file: !279, line: 452, baseType: !822, size: 64, offset: 192)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1138, file: !279, line: 453, baseType: !283, size: 32, offset: 256)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 32)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 32)
!1148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1149)
!1149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !800, line: 100, size: 224, elements: !1150)
!1150 = !{!1151, !1156, !1157, !1166, !1171, !1176, !1181}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1149, file: !800, line: 101, baseType: !1152, size: 32)
!1152 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !800, line: 76, baseType: !1153)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 32)
!1154 = !DISubroutineType(types: !1155)
!1155 = !{!107, !1049, !892}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1149, file: !800, line: 102, baseType: !1152, size: 32, offset: 32)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1149, file: !800, line: 103, baseType: !1158, size: 32, offset: 64)
!1158 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !800, line: 83, baseType: !1159)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 32)
!1160 = !DISubroutineType(types: !1161)
!1161 = !{!107, !1049, !892, !1162, !102}
!1162 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !800, line: 72, baseType: !1163)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 32)
!1164 = !DISubroutineType(types: !1165)
!1165 = !{null, !1049, !892, !102}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1149, file: !800, line: 104, baseType: !1167, size: 32, offset: 96)
!1167 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !800, line: 79, baseType: !1168)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 32)
!1169 = !DISubroutineType(types: !1170)
!1170 = !{!107, !1049, !892, !848}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1149, file: !800, line: 105, baseType: !1172, size: 32, offset: 128)
!1172 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !800, line: 88, baseType: !1173)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 32)
!1174 = !DISubroutineType(types: !1175)
!1175 = !{!799, !1049, !892}
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1149, file: !800, line: 106, baseType: !1177, size: 32, offset: 160)
!1177 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !800, line: 92, baseType: !1178)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 32)
!1179 = !DISubroutineType(types: !1180)
!1180 = !{!107, !1049, !892, !918}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1149, file: !800, line: 107, baseType: !1182, size: 32, offset: 192)
!1182 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !800, line: 96, baseType: !1183)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 32)
!1184 = !DISubroutineType(types: !1185)
!1185 = !{!107, !1049, !892, !102}
!1186 = !{!1187, !1193, !1195, !1205, !1210, !1212, !1214, !1216, !1218, !1220, !1222, !1224, !1226, !1228, !1230, !1232, !1234, !1236, !1238, !1240, !1242, !1244, !1246, !1248, !1250, !1252, !1254, !1256, !1270, !1272, !1274, !1276, !1278, !1280, !1282, !1284, !1286, !1288, !1290, !1292, !1294, !1296, !1298, !1300, !1302, !1018, !1304, !1306, !1319, !1321, !1323, !1325, !1327, !1329, !1331}
!1187 = !DIGlobalVariableExpression(var: !1188, expr: !DIExpression())
!1188 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !1020, file: !1189, line: 762, type: !1190, isLocal: false, isDefinition: true, align: 16)
!1189 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 96, elements: !1191)
!1191 = !{!1192}
!1192 = !DISubrange(count: 6)
!1193 = !DIGlobalVariableExpression(var: !1194, expr: !DIExpression())
!1194 = distinct !DIGlobalVariable(name: "__device_dts_ord_74", scope: !1020, file: !1189, line: 762, type: !1050, isLocal: false, isDefinition: true, align: 32)
!1195 = !DIGlobalVariableExpression(var: !1196, expr: !DIExpression())
!1196 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_74", scope: !1020, file: !1189, line: 762, type: !1197, isLocal: true, isDefinition: true, align: 32)
!1197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1198)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !1199)
!1199 = !{!1200, !1204}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1198, file: !294, line: 60, baseType: !1201, size: 32)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 32)
!1202 = !DISubroutineType(types: !1203)
!1203 = !{!107, !1049}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1198, file: !294, line: 65, baseType: !1049, size: 32, offset: 32)
!1205 = !DIGlobalVariableExpression(var: !1206, expr: !DIExpression())
!1206 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !1020, file: !1189, line: 766, type: !1207, isLocal: false, isDefinition: true, align: 16)
!1207 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 80, elements: !1208)
!1208 = !{!1209}
!1209 = !DISubrange(count: 5)
!1210 = !DIGlobalVariableExpression(var: !1211, expr: !DIExpression())
!1211 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !1020, file: !1189, line: 766, type: !1050, isLocal: false, isDefinition: true, align: 32)
!1212 = !DIGlobalVariableExpression(var: !1213, expr: !DIExpression())
!1213 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !1020, file: !1189, line: 766, type: !1197, isLocal: true, isDefinition: true, align: 32)
!1214 = !DIGlobalVariableExpression(var: !1215, expr: !DIExpression())
!1215 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !1020, file: !1189, line: 770, type: !1190, isLocal: false, isDefinition: true, align: 16)
!1216 = !DIGlobalVariableExpression(var: !1217, expr: !DIExpression())
!1217 = distinct !DIGlobalVariable(name: "__device_dts_ord_21", scope: !1020, file: !1189, line: 770, type: !1050, isLocal: false, isDefinition: true, align: 32)
!1218 = !DIGlobalVariableExpression(var: !1219, expr: !DIExpression())
!1219 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_21", scope: !1020, file: !1189, line: 770, type: !1197, isLocal: true, isDefinition: true, align: 32)
!1220 = !DIGlobalVariableExpression(var: !1221, expr: !DIExpression())
!1221 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !1020, file: !1189, line: 774, type: !1207, isLocal: false, isDefinition: true, align: 16)
!1222 = !DIGlobalVariableExpression(var: !1223, expr: !DIExpression())
!1223 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !1020, file: !1189, line: 774, type: !1050, isLocal: false, isDefinition: true, align: 32)
!1224 = !DIGlobalVariableExpression(var: !1225, expr: !DIExpression())
!1225 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !1020, file: !1189, line: 774, type: !1197, isLocal: true, isDefinition: true, align: 32)
!1226 = !DIGlobalVariableExpression(var: !1227, expr: !DIExpression())
!1227 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !1020, file: !1189, line: 778, type: !1207, isLocal: false, isDefinition: true, align: 16)
!1228 = !DIGlobalVariableExpression(var: !1229, expr: !DIExpression())
!1229 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !1020, file: !1189, line: 778, type: !1050, isLocal: false, isDefinition: true, align: 32)
!1230 = !DIGlobalVariableExpression(var: !1231, expr: !DIExpression())
!1231 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !1020, file: !1189, line: 778, type: !1197, isLocal: true, isDefinition: true, align: 32)
!1232 = !DIGlobalVariableExpression(var: !1233, expr: !DIExpression())
!1233 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !1020, file: !1189, line: 782, type: !1207, isLocal: false, isDefinition: true, align: 16)
!1234 = !DIGlobalVariableExpression(var: !1235, expr: !DIExpression())
!1235 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !1020, file: !1189, line: 782, type: !1050, isLocal: false, isDefinition: true, align: 32)
!1236 = !DIGlobalVariableExpression(var: !1237, expr: !DIExpression())
!1237 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !1020, file: !1189, line: 782, type: !1197, isLocal: true, isDefinition: true, align: 32)
!1238 = !DIGlobalVariableExpression(var: !1239, expr: !DIExpression())
!1239 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !1020, file: !1189, line: 786, type: !1207, isLocal: false, isDefinition: true, align: 16)
!1240 = !DIGlobalVariableExpression(var: !1241, expr: !DIExpression())
!1241 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !1020, file: !1189, line: 786, type: !1050, isLocal: false, isDefinition: true, align: 32)
!1242 = !DIGlobalVariableExpression(var: !1243, expr: !DIExpression())
!1243 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !1020, file: !1189, line: 786, type: !1197, isLocal: true, isDefinition: true, align: 32)
!1244 = !DIGlobalVariableExpression(var: !1245, expr: !DIExpression())
!1245 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1020, file: !1189, line: 790, type: !1207, isLocal: false, isDefinition: true, align: 16)
!1246 = !DIGlobalVariableExpression(var: !1247, expr: !DIExpression())
!1247 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1020, file: !1189, line: 790, type: !1050, isLocal: false, isDefinition: true, align: 32)
!1248 = !DIGlobalVariableExpression(var: !1249, expr: !DIExpression())
!1249 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1020, file: !1189, line: 790, type: !1197, isLocal: true, isDefinition: true, align: 32)
!1250 = !DIGlobalVariableExpression(var: !1251, expr: !DIExpression())
!1251 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1020, file: !1189, line: 794, type: !1207, isLocal: false, isDefinition: true, align: 16)
!1252 = !DIGlobalVariableExpression(var: !1253, expr: !DIExpression())
!1253 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1020, file: !1189, line: 794, type: !1050, isLocal: false, isDefinition: true, align: 32)
!1254 = !DIGlobalVariableExpression(var: !1255, expr: !DIExpression())
!1255 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1020, file: !1189, line: 794, type: !1197, isLocal: true, isDefinition: true, align: 32)
!1256 = !DIGlobalVariableExpression(var: !1257, expr: !DIExpression())
!1257 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1020, file: !1189, line: 762, type: !1258, isLocal: true, isDefinition: true)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1259, line: 237, size: 128, elements: !1260)
!1259 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1260 = !{!1261, !1262, !1263}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1258, file: !1259, line: 239, baseType: !1118, size: 32)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1258, file: !1259, line: 241, baseType: !1049, size: 32, offset: 32)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1258, file: !1259, line: 243, baseType: !1264, size: 64, offset: 64)
!1264 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1096, line: 40, baseType: !1265)
!1265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1096, line: 35, size: 64, elements: !1266)
!1266 = !{!1267, !1269}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1265, file: !1096, line: 36, baseType: !1268, size: 32)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 32)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1265, file: !1096, line: 37, baseType: !1268, size: 32, offset: 32)
!1270 = !DIGlobalVariableExpression(var: !1271, expr: !DIExpression())
!1271 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_74", scope: !1020, file: !1189, line: 762, type: !1058, isLocal: true, isDefinition: true, align: 8)
!1272 = !DIGlobalVariableExpression(var: !1273, expr: !DIExpression())
!1273 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1020, file: !1189, line: 766, type: !1258, isLocal: true, isDefinition: true)
!1274 = !DIGlobalVariableExpression(var: !1275, expr: !DIExpression())
!1275 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !1020, file: !1189, line: 766, type: !1058, isLocal: true, isDefinition: true, align: 8)
!1276 = !DIGlobalVariableExpression(var: !1277, expr: !DIExpression())
!1277 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1020, file: !1189, line: 770, type: !1258, isLocal: true, isDefinition: true)
!1278 = !DIGlobalVariableExpression(var: !1279, expr: !DIExpression())
!1279 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_21", scope: !1020, file: !1189, line: 770, type: !1058, isLocal: true, isDefinition: true, align: 8)
!1280 = !DIGlobalVariableExpression(var: !1281, expr: !DIExpression())
!1281 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1020, file: !1189, line: 774, type: !1258, isLocal: true, isDefinition: true)
!1282 = !DIGlobalVariableExpression(var: !1283, expr: !DIExpression())
!1283 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !1020, file: !1189, line: 774, type: !1058, isLocal: true, isDefinition: true, align: 8)
!1284 = !DIGlobalVariableExpression(var: !1285, expr: !DIExpression())
!1285 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1020, file: !1189, line: 778, type: !1258, isLocal: true, isDefinition: true)
!1286 = !DIGlobalVariableExpression(var: !1287, expr: !DIExpression())
!1287 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !1020, file: !1189, line: 778, type: !1058, isLocal: true, isDefinition: true, align: 8)
!1288 = !DIGlobalVariableExpression(var: !1289, expr: !DIExpression())
!1289 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1020, file: !1189, line: 782, type: !1258, isLocal: true, isDefinition: true)
!1290 = !DIGlobalVariableExpression(var: !1291, expr: !DIExpression())
!1291 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !1020, file: !1189, line: 782, type: !1058, isLocal: true, isDefinition: true, align: 8)
!1292 = !DIGlobalVariableExpression(var: !1293, expr: !DIExpression())
!1293 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1020, file: !1189, line: 786, type: !1258, isLocal: true, isDefinition: true)
!1294 = !DIGlobalVariableExpression(var: !1295, expr: !DIExpression())
!1295 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !1020, file: !1189, line: 786, type: !1058, isLocal: true, isDefinition: true, align: 8)
!1296 = !DIGlobalVariableExpression(var: !1297, expr: !DIExpression())
!1297 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1020, file: !1189, line: 790, type: !1258, isLocal: true, isDefinition: true)
!1298 = !DIGlobalVariableExpression(var: !1299, expr: !DIExpression())
!1299 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1020, file: !1189, line: 790, type: !1058, isLocal: true, isDefinition: true, align: 8)
!1300 = !DIGlobalVariableExpression(var: !1301, expr: !DIExpression())
!1301 = distinct !DIGlobalVariable(name: "gpio_stm32_data_i", scope: !1020, file: !1189, line: 794, type: !1258, isLocal: true, isDefinition: true)
!1302 = !DIGlobalVariableExpression(var: !1303, expr: !DIExpression())
!1303 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1020, file: !1189, line: 794, type: !1058, isLocal: true, isDefinition: true, align: 8)
!1304 = !DIGlobalVariableExpression(var: !1305, expr: !DIExpression())
!1305 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1020, file: !1189, line: 656, type: !1042, isLocal: true, isDefinition: true)
!1306 = !DIGlobalVariableExpression(var: !1307, expr: !DIExpression())
!1307 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1020, file: !1189, line: 766, type: !1308, isLocal: true, isDefinition: true)
!1308 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1309)
!1309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1259, line: 224, size: 160, elements: !1310)
!1310 = !{!1311, !1312, !1313, !1314}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1309, file: !1259, line: 226, baseType: !1113, size: 32)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1309, file: !1259, line: 228, baseType: !848, size: 32, offset: 32)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1309, file: !1259, line: 230, baseType: !107, size: 32, offset: 64)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1309, file: !1259, line: 231, baseType: !1315, size: 64, offset: 96)
!1315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !844, line: 343, size: 64, elements: !1316)
!1316 = !{!1317, !1318}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1315, file: !844, line: 344, baseType: !162, size: 32)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1315, file: !844, line: 345, baseType: !162, size: 32, offset: 32)
!1319 = !DIGlobalVariableExpression(var: !1320, expr: !DIExpression())
!1320 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1020, file: !1189, line: 770, type: !1308, isLocal: true, isDefinition: true)
!1321 = !DIGlobalVariableExpression(var: !1322, expr: !DIExpression())
!1322 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1020, file: !1189, line: 774, type: !1308, isLocal: true, isDefinition: true)
!1323 = !DIGlobalVariableExpression(var: !1324, expr: !DIExpression())
!1324 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1020, file: !1189, line: 778, type: !1308, isLocal: true, isDefinition: true)
!1325 = !DIGlobalVariableExpression(var: !1326, expr: !DIExpression())
!1326 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1020, file: !1189, line: 782, type: !1308, isLocal: true, isDefinition: true)
!1327 = !DIGlobalVariableExpression(var: !1328, expr: !DIExpression())
!1328 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1020, file: !1189, line: 786, type: !1308, isLocal: true, isDefinition: true)
!1329 = !DIGlobalVariableExpression(var: !1330, expr: !DIExpression())
!1330 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1020, file: !1189, line: 790, type: !1308, isLocal: true, isDefinition: true)
!1331 = !DIGlobalVariableExpression(var: !1332, expr: !DIExpression())
!1332 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_i", scope: !1020, file: !1189, line: 794, type: !1308, isLocal: true, isDefinition: true)
!1333 = !DIGlobalVariableExpression(var: !1334, expr: !DIExpression())
!1334 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1335, file: !1506, line: 1914, type: !1580, isLocal: true, isDefinition: true)
!1335 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1336, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1337, retainedTypes: !1370, globals: !1503, splitDebugInlining: false, nameTableKind: None)
!1336 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!1337 = !{!30, !1338, !1345, !1352, !1359, !1365, !799}
!1338 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !111, line: 47, baseType: !32, size: 32, elements: !1339)
!1339 = !{!1340, !1341, !1342, !1343, !1344}
!1340 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1341 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1342 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1343 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1344 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1345 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !111, line: 75, baseType: !32, size: 32, elements: !1346)
!1346 = !{!1347, !1348, !1349, !1350, !1351}
!1347 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1348 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1349 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1350 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1351 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1352 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !111, line: 92, baseType: !32, size: 32, elements: !1353)
!1353 = !{!1354, !1355, !1356, !1357, !1358}
!1354 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1355 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1356 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1357 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1358 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1359 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !111, line: 84, baseType: !32, size: 32, elements: !1360)
!1360 = !{!1361, !1362, !1363, !1364}
!1361 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1362 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1363 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1364 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1365 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !111, line: 107, baseType: !32, size: 32, elements: !1366)
!1366 = !{!1367, !1368, !1369}
!1367 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1368 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1369 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1370 = !{!102, !107, !1371, !134, !133, !1450, !162, !892, !1461, !411, !1500, !1502}
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 32)
!1372 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1373)
!1373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !111, line: 336, size: 608, elements: !1374)
!1374 = !{!1375, !1394, !1398, !1402, !1415, !1420, !1424, !1428, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1373, file: !111, line: 365, baseType: !1376, size: 32)
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1377, size: 32)
!1377 = !DISubroutineType(types: !1378)
!1378 = !{!107, !1379, !144}
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 32)
!1380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1381)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !1382)
!1382 = !{!1383, !1384, !1385, !1386, !1392, !1393}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1381, file: !120, line: 380, baseType: !123, size: 32)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1381, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1381, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1381, file: !120, line: 386, baseType: !1387, size: 32, offset: 96)
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 32)
!1388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !1389)
!1389 = !{!1390, !1391}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1388, file: !120, line: 359, baseType: !133, size: 8)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1388, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1381, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1381, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1373, file: !111, line: 366, baseType: !1395, size: 32, offset: 32)
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 32)
!1396 = !DISubroutineType(types: !1397)
!1397 = !{null, !1379, !134}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1373, file: !111, line: 374, baseType: !1399, size: 32, offset: 64)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 32)
!1400 = !DISubroutineType(types: !1401)
!1401 = !{!107, !1379}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1373, file: !111, line: 377, baseType: !1403, size: 32, offset: 96)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 32)
!1404 = !DISubroutineType(types: !1405)
!1405 = !{!107, !1379, !1406}
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 32)
!1407 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1408)
!1408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !111, line: 122, size: 64, elements: !1409)
!1409 = !{!1410, !1411, !1412, !1413, !1414}
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1408, file: !111, line: 123, baseType: !162, size: 32)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1408, file: !111, line: 124, baseType: !133, size: 8, offset: 32)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1408, file: !111, line: 125, baseType: !133, size: 8, offset: 40)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1408, file: !111, line: 126, baseType: !133, size: 8, offset: 48)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1408, file: !111, line: 127, baseType: !133, size: 8, offset: 56)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1373, file: !111, line: 379, baseType: !1416, size: 32, offset: 128)
!1416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1417, size: 32)
!1417 = !DISubroutineType(types: !1418)
!1418 = !{!107, !1379, !1419}
!1419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 32)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1373, file: !111, line: 384, baseType: !1421, size: 32, offset: 160)
!1421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1422, size: 32)
!1422 = !DISubroutineType(types: !1423)
!1423 = !{!107, !1379, !176, !107}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1373, file: !111, line: 393, baseType: !1425, size: 32, offset: 192)
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1426, size: 32)
!1426 = !DISubroutineType(types: !1427)
!1427 = !{!107, !1379, !182, !183}
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1373, file: !111, line: 402, baseType: !1429, size: 32, offset: 224)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 32)
!1430 = !DISubroutineType(types: !1431)
!1431 = !{null, !1379}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1373, file: !111, line: 405, baseType: !1429, size: 32, offset: 256)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1373, file: !111, line: 408, baseType: !1399, size: 32, offset: 288)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1373, file: !111, line: 411, baseType: !1429, size: 32, offset: 320)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1373, file: !111, line: 414, baseType: !1429, size: 32, offset: 352)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1373, file: !111, line: 417, baseType: !1399, size: 32, offset: 384)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1373, file: !111, line: 420, baseType: !1399, size: 32, offset: 416)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1373, file: !111, line: 423, baseType: !1429, size: 32, offset: 448)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1373, file: !111, line: 426, baseType: !1429, size: 32, offset: 480)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1373, file: !111, line: 429, baseType: !1399, size: 32, offset: 512)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1373, file: !111, line: 432, baseType: !1399, size: 32, offset: 544)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1373, file: !111, line: 435, baseType: !1443, size: 32, offset: 576)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 32)
!1444 = !DISubroutineType(types: !1445)
!1445 = !{null, !1379, !1446, !102}
!1446 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !111, line: 142, baseType: !1447)
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 32)
!1448 = !DISubroutineType(types: !1449)
!1449 = !{null, !1379, !102}
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1451, size: 32)
!1451 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !279, line: 670, baseType: !1452)
!1452 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 661, size: 224, elements: !1453)
!1453 = !{!1454, !1455, !1456, !1457, !1458, !1459, !1460}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1452, file: !279, line: 663, baseType: !283, size: 32)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1452, file: !279, line: 664, baseType: !283, size: 32, offset: 32)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1452, file: !279, line: 665, baseType: !283, size: 32, offset: 64)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1452, file: !279, line: 666, baseType: !283, size: 32, offset: 96)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1452, file: !279, line: 667, baseType: !283, size: 32, offset: 128)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1452, file: !279, line: 668, baseType: !283, size: 32, offset: 160)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1452, file: !279, line: 669, baseType: !283, size: 32, offset: 192)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 32)
!1462 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1463)
!1463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !800, line: 100, size: 224, elements: !1464)
!1464 = !{!1465, !1470, !1471, !1480, !1485, !1490, !1495}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1463, file: !800, line: 101, baseType: !1466, size: 32)
!1466 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !800, line: 76, baseType: !1467)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 32)
!1468 = !DISubroutineType(types: !1469)
!1469 = !{!107, !1379, !892}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1463, file: !800, line: 102, baseType: !1466, size: 32, offset: 32)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1463, file: !800, line: 103, baseType: !1472, size: 32, offset: 64)
!1472 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !800, line: 83, baseType: !1473)
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 32)
!1474 = !DISubroutineType(types: !1475)
!1475 = !{!107, !1379, !892, !1476, !102}
!1476 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !800, line: 72, baseType: !1477)
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 32)
!1478 = !DISubroutineType(types: !1479)
!1479 = !{null, !1379, !892, !102}
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1463, file: !800, line: 104, baseType: !1481, size: 32, offset: 96)
!1481 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !800, line: 79, baseType: !1482)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 32)
!1483 = !DISubroutineType(types: !1484)
!1484 = !{!107, !1379, !892, !848}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1463, file: !800, line: 105, baseType: !1486, size: 32, offset: 128)
!1486 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !800, line: 88, baseType: !1487)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 32)
!1488 = !DISubroutineType(types: !1489)
!1489 = !{!799, !1379, !892}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1463, file: !800, line: 106, baseType: !1491, size: 32, offset: 160)
!1491 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !800, line: 92, baseType: !1492)
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 32)
!1493 = !DISubroutineType(types: !1494)
!1494 = !{!107, !1379, !892, !918}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1463, file: !800, line: 107, baseType: !1496, size: 32, offset: 192)
!1496 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !800, line: 96, baseType: !1497)
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 32)
!1498 = !DISubroutineType(types: !1499)
!1499 = !{!107, !1379, !892, !102}
!1500 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1501)
!1501 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 32)
!1503 = !{!1504, !1510, !1512, !1519, !1333, !1521, !1529, !1552, !1555, !1558, !1569, !1571}
!1504 = !DIGlobalVariableExpression(var: !1505, expr: !DIExpression())
!1505 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1335, file: !1506, line: 1914, type: !1507, isLocal: false, isDefinition: true, align: 16)
!1506 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 128, elements: !1508)
!1508 = !{!1509}
!1509 = !DISubrange(count: 8)
!1510 = !DIGlobalVariableExpression(var: !1511, expr: !DIExpression())
!1511 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1335, file: !1506, line: 1914, type: !1380, isLocal: false, isDefinition: true, align: 32)
!1512 = !DIGlobalVariableExpression(var: !1513, expr: !DIExpression())
!1513 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1335, file: !1506, line: 1914, type: !1514, isLocal: true, isDefinition: true, align: 32)
!1514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1515)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !1516)
!1516 = !{!1517, !1518}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1515, file: !294, line: 60, baseType: !1399, size: 32)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1515, file: !294, line: 65, baseType: !1379, size: 32, offset: 32)
!1519 = !DIGlobalVariableExpression(var: !1520, expr: !DIExpression())
!1520 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1335, file: !1506, line: 1914, type: !1388, isLocal: true, isDefinition: true, align: 8)
!1521 = !DIGlobalVariableExpression(var: !1522, expr: !DIExpression())
!1522 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1335, file: !1506, line: 1914, type: !1523, isLocal: true, isDefinition: true)
!1523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1524, size: 64, elements: !486)
!1524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1525)
!1525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !844, line: 343, size: 64, elements: !1526)
!1526 = !{!1527, !1528}
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1525, file: !844, line: 344, baseType: !162, size: 32)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1525, file: !844, line: 345, baseType: !162, size: 32, offset: 32)
!1529 = !DIGlobalVariableExpression(var: !1530, expr: !DIExpression())
!1530 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1335, file: !1506, line: 1914, type: !1531, isLocal: true, isDefinition: true)
!1531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1532)
!1532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1533, line: 60, size: 64, elements: !1534)
!1533 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1534 = !{!1535, !1551}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1532, file: !1533, line: 69, baseType: !1536, size: 32)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 32)
!1537 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1538)
!1538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1533, line: 50, size: 64, elements: !1539)
!1539 = !{!1540, !1549, !1550}
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1538, file: !1533, line: 52, baseType: !1541, size: 32)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 32)
!1542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1543)
!1543 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1544, line: 37, baseType: !1545)
!1544 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1544, line: 32, size: 64, elements: !1546)
!1546 = !{!1547, !1548}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1545, file: !1544, line: 34, baseType: !162, size: 32)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1545, file: !1544, line: 36, baseType: !162, size: 32, offset: 32)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1538, file: !1533, line: 54, baseType: !133, size: 8, offset: 32)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1538, file: !1533, line: 56, baseType: !133, size: 8, offset: 40)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1532, file: !1533, line: 71, baseType: !133, size: 8, offset: 32)
!1552 = !DIGlobalVariableExpression(var: !1553, expr: !DIExpression())
!1553 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1335, file: !1506, line: 1914, type: !1554, isLocal: true, isDefinition: true)
!1554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1537, size: 64, elements: !486)
!1555 = !DIGlobalVariableExpression(var: !1556, expr: !DIExpression())
!1556 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1335, file: !1506, line: 1914, type: !1557, isLocal: true, isDefinition: true)
!1557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1542, size: 128, elements: !389)
!1558 = !DIGlobalVariableExpression(var: !1559, expr: !DIExpression())
!1559 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_0", scope: !1560, file: !1506, line: 1914, type: !1563, isLocal: true, isDefinition: true, align: 32)
!1560 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_0", scope: !1506, file: !1506, line: 1914, type: !1430, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !1561)
!1561 = !{!1562}
!1562 = !DILocalVariable(name: "dev", arg: 1, scope: !1560, file: !1506, line: 1914, type: !1379)
!1563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1564)
!1564 = !{!1565, !1566, !1567, !1568}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1563, file: !10, line: 55, baseType: !728, size: 32)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1563, file: !10, line: 57, baseType: !728, size: 32, offset: 32)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1563, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1563, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1569 = !DIGlobalVariableExpression(var: !1570, expr: !DIExpression())
!1570 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1335, file: !1506, line: 1539, type: !1372, isLocal: true, isDefinition: true)
!1571 = !DIGlobalVariableExpression(var: !1572, expr: !DIExpression())
!1572 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1335, file: !1506, line: 1914, type: !1573, isLocal: true, isDefinition: true)
!1573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1574, line: 74, size: 128, elements: !1575)
!1574 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1575 = !{!1576, !1577, !1578, !1579}
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1573, file: !1574, line: 76, baseType: !162, size: 32)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1573, file: !1574, line: 78, baseType: !1379, size: 32, offset: 32)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "user_cb", scope: !1573, file: !1574, line: 80, baseType: !1446, size: 32, offset: 64)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1573, file: !1574, line: 81, baseType: !102, size: 32, offset: 96)
!1580 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1581)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1574, line: 22, size: 256, elements: !1582)
!1582 = !{!1583, !1584, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1595}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1581, file: !1574, line: 24, baseType: !1450, size: 32)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1581, file: !1574, line: 26, baseType: !1585, size: 32, offset: 32)
!1585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 32)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1581, file: !1574, line: 28, baseType: !252, size: 32, offset: 64)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1581, file: !1574, line: 30, baseType: !136, size: 8, offset: 96)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1581, file: !1574, line: 32, baseType: !107, size: 32, offset: 128)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1581, file: !1574, line: 34, baseType: !136, size: 8, offset: 160)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1581, file: !1574, line: 36, baseType: !136, size: 8, offset: 168)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1581, file: !1574, line: 38, baseType: !136, size: 8, offset: 176)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1581, file: !1574, line: 40, baseType: !136, size: 8, offset: 184)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1581, file: !1574, line: 41, baseType: !1594, size: 32, offset: 192)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 32)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1581, file: !1574, line: 44, baseType: !1596, size: 32, offset: 224)
!1596 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_config_func_t", file: !111, line: 150, baseType: !1429)
!1597 = !DIGlobalVariableExpression(var: !1598, expr: !DIExpression())
!1598 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1599, file: !1677, line: 65, type: !283, isLocal: true, isDefinition: true)
!1599 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1600, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1601, retainedTypes: !1602, globals: !1674, splitDebugInlining: false, nameTableKind: None)
!1600 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!1601 = !{!566}
!1602 = !{!103, !1603, !728, !133, !162, !1611, !1642}
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 32)
!1604 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !497, line: 770, baseType: !1605)
!1605 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 764, size: 128, elements: !1606)
!1606 = !{!1607, !1608, !1609, !1610}
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1605, file: !497, line: 766, baseType: !283, size: 32)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1605, file: !497, line: 767, baseType: !283, size: 32, offset: 32)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1605, file: !497, line: 768, baseType: !283, size: 32, offset: 64)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1605, file: !497, line: 769, baseType: !501, size: 32, offset: 96)
!1611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 32)
!1612 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !497, line: 426, baseType: !1613)
!1613 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 411, size: 28704, elements: !1614)
!1614 = !{!1615, !1617, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1632, !1637, !1641}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1613, file: !497, line: 413, baseType: !1616, size: 256)
!1616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !283, size: 256, elements: !1508)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1613, file: !497, line: 414, baseType: !1618, size: 768, offset: 256)
!1618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 768, elements: !1619)
!1619 = !{!1620}
!1620 = !DISubrange(count: 24)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1613, file: !497, line: 415, baseType: !1616, size: 256, offset: 1024)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1613, file: !497, line: 416, baseType: !1618, size: 768, offset: 1280)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1613, file: !497, line: 417, baseType: !1616, size: 256, offset: 2048)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1613, file: !497, line: 418, baseType: !1618, size: 768, offset: 2304)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1613, file: !497, line: 419, baseType: !1616, size: 256, offset: 3072)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1613, file: !497, line: 420, baseType: !1618, size: 768, offset: 3328)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1613, file: !497, line: 421, baseType: !1616, size: 256, offset: 4096)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1613, file: !497, line: 422, baseType: !1629, size: 1792, offset: 4352)
!1629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 1792, elements: !1630)
!1630 = !{!1631}
!1631 = !DISubrange(count: 56)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1613, file: !497, line: 423, baseType: !1633, size: 1920, offset: 6144)
!1633 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1634, size: 1920, elements: !1635)
!1634 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !133)
!1635 = !{!1636}
!1636 = !DISubrange(count: 240)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1613, file: !497, line: 424, baseType: !1638, size: 20608, offset: 8064)
!1638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 20608, elements: !1639)
!1639 = !{!1640}
!1640 = !DISubrange(count: 644)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1613, file: !497, line: 425, baseType: !283, size: 32, offset: 28672)
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 32)
!1643 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !1644)
!1644 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !1645)
!1645 = !{!1646, !1647, !1648, !1649, !1650, !1651, !1652, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1665, !1666, !1667, !1669, !1671, !1673}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1644, file: !497, line: 447, baseType: !501, size: 32)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1644, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1644, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1644, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1644, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1644, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1644, file: !497, line: 453, baseType: !1653, size: 96, offset: 192)
!1653 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1634, size: 96, elements: !1654)
!1654 = !{!1655}
!1655 = !DISubrange(count: 12)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1644, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1644, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1644, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1644, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1644, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1644, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1644, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1644, file: !497, line: 461, baseType: !1664, size: 64, offset: 512)
!1664 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 64, elements: !389)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1644, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1644, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1644, file: !497, line: 464, baseType: !1668, size: 128, offset: 640)
!1668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 128, elements: !670)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1644, file: !497, line: 465, baseType: !1670, size: 160, offset: 768)
!1670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 160, elements: !1208)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1644, file: !497, line: 466, baseType: !1672, size: 160, offset: 928)
!1672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 160, elements: !1208)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1644, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!1674 = !{!1675, !1701, !1704, !1706, !1708, !1597}
!1675 = !DIGlobalVariableExpression(var: !1676, expr: !DIExpression())
!1676 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1599, file: !1677, line: 285, type: !1678, isLocal: true, isDefinition: true, align: 32)
!1677 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1678 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1679)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !1680)
!1680 = !{!1681, !1700}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1679, file: !294, line: 60, baseType: !1682, size: 32)
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 32)
!1683 = !DISubroutineType(types: !1684)
!1684 = !{!107, !1685}
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1686, size: 32)
!1686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1687)
!1687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !1688)
!1688 = !{!1689, !1690, !1691, !1692, !1698, !1699}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1687, file: !120, line: 380, baseType: !123, size: 32)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1687, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1687, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1687, file: !120, line: 386, baseType: !1693, size: 32, offset: 96)
!1693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1694, size: 32)
!1694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !1695)
!1695 = !{!1696, !1697}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1694, file: !120, line: 359, baseType: !133, size: 8)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1694, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1687, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1687, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1679, file: !294, line: 65, baseType: !1685, size: 32, offset: 32)
!1701 = !DIGlobalVariableExpression(var: !1702, expr: !DIExpression())
!1702 = distinct !DIGlobalVariable(name: "lock", scope: !1599, file: !1677, line: 34, type: !1703, isLocal: true, isDefinition: true)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!1704 = !DIGlobalVariableExpression(var: !1705, expr: !DIExpression())
!1705 = distinct !DIGlobalVariable(name: "last_load", scope: !1599, file: !1677, line: 36, type: !162, isLocal: true, isDefinition: true)
!1706 = !DIGlobalVariableExpression(var: !1707, expr: !DIExpression())
!1707 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1599, file: !1677, line: 48, type: !162, isLocal: true, isDefinition: true)
!1708 = !DIGlobalVariableExpression(var: !1709, expr: !DIExpression())
!1709 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1599, file: !1677, line: 54, type: !162, isLocal: true, isDefinition: true)
!1710 = !DIGlobalVariableExpression(var: !1711, expr: !DIExpression())
!1711 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1712, file: !1794, line: 22, type: !1796, isLocal: true, isDefinition: true)
!1712 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1713, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1714, retainedTypes: !1715, globals: !1791, splitDebugInlining: false, nameTableKind: None)
!1713 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!1714 = !{!1023, !1029}
!1715 = !{!1716, !1780, !1785, !1076, !1029, !1023, !1790, !102}
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 32)
!1717 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1718)
!1718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1024, line: 523, size: 288, elements: !1719)
!1719 = !{!1720, !1739, !1743, !1747, !1751, !1752, !1753, !1757, !1776}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1718, file: !1024, line: 524, baseType: !1721, size: 32)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 32)
!1722 = !DISubroutineType(types: !1723)
!1723 = !{!107, !1724, !1064, !1065}
!1724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 32)
!1725 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1726)
!1726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !1727)
!1727 = !{!1728, !1729, !1730, !1731, !1737, !1738}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1726, file: !120, line: 380, baseType: !123, size: 32)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1726, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1726, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1726, file: !120, line: 386, baseType: !1732, size: 32, offset: 96)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 32)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !1734)
!1734 = !{!1735, !1736}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1733, file: !120, line: 359, baseType: !133, size: 8)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1733, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1726, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1726, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1718, file: !1024, line: 530, baseType: !1740, size: 32, offset: 32)
!1740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1741, size: 32)
!1741 = !DISubroutineType(types: !1742)
!1742 = !{!107, !1724, !1070}
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1718, file: !1024, line: 532, baseType: !1744, size: 32, offset: 64)
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 32)
!1745 = !DISubroutineType(types: !1746)
!1746 = !{!107, !1724, !1076, !1071}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1718, file: !1024, line: 535, baseType: !1748, size: 32, offset: 96)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 32)
!1749 = !DISubroutineType(types: !1750)
!1750 = !{!107, !1724, !1076}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1718, file: !1024, line: 537, baseType: !1748, size: 32, offset: 128)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1718, file: !1024, line: 539, baseType: !1748, size: 32, offset: 160)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1718, file: !1024, line: 541, baseType: !1754, size: 32, offset: 192)
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 32)
!1755 = !DISubroutineType(types: !1756)
!1756 = !{!107, !1724, !1064, !1023, !1029}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1718, file: !1024, line: 544, baseType: !1758, size: 32, offset: 224)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 32)
!1759 = !DISubroutineType(types: !1760)
!1760 = !{!107, !1724, !1761, !136}
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 32)
!1762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1024, line: 478, size: 96, elements: !1763)
!1763 = !{!1764, !1770, !1775}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1762, file: !1024, line: 482, baseType: !1765, size: 32)
!1765 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1096, line: 33, baseType: !1766)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1096, line: 29, size: 32, elements: !1767)
!1767 = !{!1768}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1766, file: !1096, line: 30, baseType: !1769, size: 32)
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 32)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1762, file: !1024, line: 485, baseType: !1771, size: 32, offset: 32)
!1771 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1024, line: 464, baseType: !1772)
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 32)
!1773 = !DISubroutineType(types: !1774)
!1774 = !{null, !1724, !1761, !1076}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1762, file: !1024, line: 493, baseType: !1076, size: 32, offset: 64)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1718, file: !1024, line: 547, baseType: !1777, size: 32, offset: 256)
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 32)
!1778 = !DISubroutineType(types: !1779)
!1779 = !{!162, !1724}
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 32)
!1781 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1782)
!1782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1024, line: 428, size: 32, elements: !1783)
!1783 = !{!1784}
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1782, file: !1024, line: 434, baseType: !1076, size: 32)
!1785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1786, size: 32)
!1786 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1787)
!1787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1024, line: 441, size: 32, elements: !1788)
!1788 = !{!1789}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1787, file: !1024, line: 447, baseType: !1076, size: 32)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 32)
!1791 = !{!1792, !1710}
!1792 = !DIGlobalVariableExpression(var: !1793, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1793 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1712, file: !1794, line: 37, type: !1795, isLocal: true, isDefinition: true)
!1794 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1795 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !252)
!1796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1797, size: 352, elements: !1798)
!1797 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1724)
!1798 = !{!1799}
!1799 = !DISubrange(count: 11)
!1800 = !DIGlobalVariableExpression(var: !1801, expr: !DIExpression())
!1801 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1802, file: !1842, line: 139, type: !1848, isLocal: false, isDefinition: true)
!1802 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1803, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1804, globals: !1839, splitDebugInlining: false, nameTableKind: None)
!1803 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!1804 = !{!1805}
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 32)
!1806 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !279, line: 532, baseType: !1807)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 500, size: 1088, elements: !1808)
!1808 = !{!1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1807, file: !279, line: 502, baseType: !283, size: 32)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1807, file: !279, line: 503, baseType: !283, size: 32, offset: 32)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1807, file: !279, line: 504, baseType: !283, size: 32, offset: 64)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1807, file: !279, line: 505, baseType: !283, size: 32, offset: 96)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1807, file: !279, line: 506, baseType: !283, size: 32, offset: 128)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1807, file: !279, line: 507, baseType: !283, size: 32, offset: 160)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1807, file: !279, line: 508, baseType: !283, size: 32, offset: 192)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1807, file: !279, line: 509, baseType: !162, size: 32, offset: 224)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1807, file: !279, line: 510, baseType: !283, size: 32, offset: 256)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1807, file: !279, line: 511, baseType: !283, size: 32, offset: 288)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1807, file: !279, line: 512, baseType: !822, size: 64, offset: 320)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1807, file: !279, line: 513, baseType: !283, size: 32, offset: 384)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1807, file: !279, line: 514, baseType: !283, size: 32, offset: 416)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1807, file: !279, line: 515, baseType: !283, size: 32, offset: 448)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1807, file: !279, line: 516, baseType: !162, size: 32, offset: 480)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1807, file: !279, line: 517, baseType: !283, size: 32, offset: 512)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1807, file: !279, line: 518, baseType: !283, size: 32, offset: 544)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1807, file: !279, line: 519, baseType: !822, size: 64, offset: 576)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1807, file: !279, line: 520, baseType: !283, size: 32, offset: 640)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1807, file: !279, line: 521, baseType: !283, size: 32, offset: 672)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1807, file: !279, line: 522, baseType: !283, size: 32, offset: 704)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1807, file: !279, line: 523, baseType: !162, size: 32, offset: 736)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1807, file: !279, line: 524, baseType: !283, size: 32, offset: 768)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1807, file: !279, line: 525, baseType: !283, size: 32, offset: 800)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1807, file: !279, line: 526, baseType: !822, size: 64, offset: 832)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1807, file: !279, line: 527, baseType: !283, size: 32, offset: 896)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1807, file: !279, line: 528, baseType: !283, size: 32, offset: 928)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1807, file: !279, line: 529, baseType: !822, size: 64, offset: 960)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1807, file: !279, line: 530, baseType: !283, size: 32, offset: 1024)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1807, file: !279, line: 531, baseType: !283, size: 32, offset: 1056)
!1839 = !{!1840, !1843, !1800}
!1840 = !DIGlobalVariableExpression(var: !1841, expr: !DIExpression())
!1841 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1802, file: !1842, line: 137, type: !162, isLocal: false, isDefinition: true)
!1842 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1843 = !DIGlobalVariableExpression(var: !1844, expr: !DIExpression())
!1844 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1802, file: !1842, line: 138, type: !1845, isLocal: false, isDefinition: true)
!1845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !177, size: 128, elements: !1846)
!1846 = !{!1847}
!1847 = !DISubrange(count: 16)
!1848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !177, size: 64, elements: !1508)
!1849 = !DIGlobalVariableExpression(var: !1850, expr: !DIExpression())
!1850 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1851, file: !1854, line: 23, type: !183, isLocal: false, isDefinition: true)
!1851 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1852, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, globals: !1853, splitDebugInlining: false, nameTableKind: None)
!1852 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!1853 = !{!1849}
!1854 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1855 = !DIGlobalVariableExpression(var: !1856, expr: !DIExpression())
!1856 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1857, file: !1861, line: 86, type: !2108, isLocal: false, isDefinition: true, align: 512)
!1857 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1858, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1859, retainedTypes: !1868, globals: !1941, splitDebugInlining: false, nameTableKind: None)
!1858 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!1859 = !{!1860, !30, !566}
!1860 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1861, line: 63, baseType: !32, size: 32, elements: !1862)
!1861 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1862 = !{!1863, !1864, !1865, !1866, !1867}
!1863 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1864 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1865 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1866 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1867 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1868 = !{!22, !252, !102, !107, !1869, !256, !162, !1899, !728, !133, !1924}
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 32)
!1870 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1871)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1872, line: 51, size: 64, elements: !1873)
!1872 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1873 = !{!1874, !1894}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1871, file: !1872, line: 52, baseType: !1875, size: 32)
!1875 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1872, line: 38, baseType: !1876)
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1877, size: 32)
!1877 = !DISubroutineType(types: !1878)
!1878 = !{!107, !1879, !182, !411}
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 32)
!1880 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1881)
!1881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !1882)
!1882 = !{!1883, !1884, !1885, !1886, !1892, !1893}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1881, file: !120, line: 380, baseType: !123, size: 32)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1881, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1881, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1881, file: !120, line: 386, baseType: !1887, size: 32, offset: 96)
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 32)
!1888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !1889)
!1889 = !{!1890, !1891}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1888, file: !120, line: 359, baseType: !133, size: 8)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1888, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1881, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1881, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1871, file: !1872, line: 53, baseType: !1895, size: 32, offset: 32)
!1895 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1872, line: 47, baseType: !1896)
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 32)
!1897 = !DISubroutineType(types: !1898)
!1898 = !{!107, !1879, !182, !411, !162}
!1899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 32)
!1900 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !1901)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !1902)
!1902 = !{!1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1901, file: !497, line: 447, baseType: !501, size: 32)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1901, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1901, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1901, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1901, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1901, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1901, file: !497, line: 453, baseType: !1653, size: 96, offset: 192)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1901, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1901, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1901, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1901, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1901, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1901, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1901, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1901, file: !497, line: 461, baseType: !1664, size: 64, offset: 512)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1901, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1901, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1901, file: !497, line: 464, baseType: !1668, size: 128, offset: 640)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1901, file: !497, line: 465, baseType: !1670, size: 160, offset: 768)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1901, file: !497, line: 466, baseType: !1672, size: 160, offset: 928)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1901, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 32)
!1925 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !497, line: 426, baseType: !1926)
!1926 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 411, size: 28704, elements: !1927)
!1927 = !{!1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1926, file: !497, line: 413, baseType: !1616, size: 256)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1926, file: !497, line: 414, baseType: !1618, size: 768, offset: 256)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1926, file: !497, line: 415, baseType: !1616, size: 256, offset: 1024)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1926, file: !497, line: 416, baseType: !1618, size: 768, offset: 1280)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1926, file: !497, line: 417, baseType: !1616, size: 256, offset: 2048)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1926, file: !497, line: 418, baseType: !1618, size: 768, offset: 2304)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1926, file: !497, line: 419, baseType: !1616, size: 256, offset: 3072)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1926, file: !497, line: 420, baseType: !1618, size: 768, offset: 3328)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1926, file: !497, line: 421, baseType: !1616, size: 256, offset: 4096)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1926, file: !497, line: 422, baseType: !1629, size: 1792, offset: 4352)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1926, file: !497, line: 423, baseType: !1633, size: 1920, offset: 6144)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1926, file: !497, line: 424, baseType: !1638, size: 20608, offset: 8064)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1926, file: !497, line: 425, baseType: !283, size: 32, offset: 28672)
!1941 = !{!1942, !2064, !2073, !2075, !1855, !2078, !2080, !2085}
!1942 = !DIGlobalVariableExpression(var: !1943, expr: !DIExpression())
!1943 = distinct !DIGlobalVariable(name: "_kernel", scope: !1857, file: !1861, line: 40, type: !1944, isLocal: false, isDefinition: true)
!1944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !228, line: 158, size: 288, elements: !1945)
!1945 = !{!1946, !2059}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1944, file: !228, line: 159, baseType: !1947, size: 192)
!1947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1948, size: 192, elements: !486)
!1948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !228, line: 100, size: 192, elements: !1949)
!1949 = !{!1950, !1951, !1952, !2053, !2054, !2055, !2056}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1948, file: !228, line: 102, baseType: !162, size: 32)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1948, file: !228, line: 105, baseType: !256, size: 32, offset: 32)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1948, file: !228, line: 108, baseType: !1953, size: 32, offset: 64)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 32)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !1955)
!1955 = !{!1956, !2014, !2026, !2027, !2028, !2029, !2035, !2048}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1954, file: !359, line: 247, baseType: !1957, size: 384)
!1957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !1958)
!1958 = !{!1959, !1983, !1990, !1991, !1992, !2001, !2002, !2003}
!1959 = !DIDerivedType(tag: DW_TAG_member, scope: !1957, file: !359, line: 60, baseType: !1960, size: 64)
!1960 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1957, file: !359, line: 60, size: 64, elements: !1961)
!1961 = !{!1962, !1977}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1960, file: !359, line: 61, baseType: !1963, size: 64)
!1963 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !1964)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !1965)
!1965 = !{!1966, !1972}
!1966 = !DIDerivedType(tag: DW_TAG_member, scope: !1964, file: !233, line: 38, baseType: !1967, size: 32)
!1967 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1964, file: !233, line: 38, size: 32, elements: !1968)
!1968 = !{!1969, !1971}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1967, file: !233, line: 39, baseType: !1970, size: 32)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 32)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1967, file: !233, line: 40, baseType: !1970, size: 32)
!1972 = !DIDerivedType(tag: DW_TAG_member, scope: !1964, file: !233, line: 42, baseType: !1973, size: 32, offset: 32)
!1973 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1964, file: !233, line: 42, size: 32, elements: !1974)
!1974 = !{!1975, !1976}
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1973, file: !233, line: 43, baseType: !1970, size: 32)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1973, file: !233, line: 44, baseType: !1970, size: 32)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1960, file: !359, line: 62, baseType: !1978, size: 64)
!1978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !1979)
!1979 = !{!1980}
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1978, file: !384, line: 50, baseType: !1981, size: 64)
!1981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1982, size: 64, elements: !389)
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1978, size: 32)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1957, file: !359, line: 68, baseType: !1984, size: 32, offset: 64)
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 32)
!1985 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !1986)
!1986 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !1987)
!1987 = !{!1988}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1986, file: !228, line: 232, baseType: !1989, size: 64)
!1989 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !1964)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1957, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1957, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!1992 = !DIDerivedType(tag: DW_TAG_member, scope: !1957, file: !359, line: 90, baseType: !1993, size: 16, offset: 112)
!1993 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1957, file: !359, line: 90, size: 16, elements: !1994)
!1994 = !{!1995, !2000}
!1995 = !DIDerivedType(tag: DW_TAG_member, scope: !1993, file: !359, line: 91, baseType: !1996, size: 16)
!1996 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1993, file: !359, line: 91, size: 16, elements: !1997)
!1997 = !{!1998, !1999}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1996, file: !359, line: 96, baseType: !407, size: 8)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1996, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1993, file: !359, line: 100, baseType: !411, size: 16)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1957, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1957, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1957, file: !359, line: 131, baseType: !2004, size: 192, offset: 192)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !2005)
!2005 = !{!2006, !2007, !2013}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2004, file: !228, line: 245, baseType: !1963, size: 64)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2004, file: !228, line: 246, baseType: !2008, size: 32, offset: 64)
!2008 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !2009)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 32)
!2010 = !DISubroutineType(types: !2011)
!2011 = !{null, !2012}
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 32)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2004, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1954, file: !359, line: 250, baseType: !2015, size: 288, offset: 384)
!2015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !2016)
!2016 = !{!2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025}
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2015, file: !428, line: 26, baseType: !162, size: 32)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2015, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2015, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2015, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2015, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2015, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2015, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2015, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2015, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1954, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1954, file: !359, line: 256, baseType: !1985, size: 64, offset: 704)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1954, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1954, file: !359, line: 300, baseType: !2030, size: 96, offset: 800)
!2030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !2031)
!2031 = !{!2032, !2033, !2034}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2030, file: !359, line: 153, baseType: !22, size: 32)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2030, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2030, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1954, file: !359, line: 325, baseType: !2036, size: 32, offset: 896)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 32)
!2037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !2038)
!2038 = !{!2039, !2045, !2046}
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2037, file: !224, line: 5074, baseType: !2040, size: 96)
!2040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !2041)
!2041 = !{!2042, !2043, !2044}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2040, file: !454, line: 57, baseType: !457, size: 32)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2040, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2040, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2037, file: !224, line: 5075, baseType: !1985, size: 64, offset: 96)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2037, file: !224, line: 5076, baseType: !2047, offset: 160)
!2047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1954, file: !359, line: 343, baseType: !2049, size: 64, offset: 928)
!2049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !2050)
!2050 = !{!2051, !2052}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2049, file: !428, line: 63, baseType: !162, size: 32)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2049, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1948, file: !228, line: 111, baseType: !1953, size: 32, offset: 96)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1948, file: !228, line: 124, baseType: !107, size: 32, offset: 128)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1948, file: !228, line: 127, baseType: !133, size: 8, offset: 160)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1948, file: !228, line: 153, baseType: !2057, offset: 168)
!2057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2058, line: 33, elements: !250)
!2058 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1944, file: !228, line: 170, baseType: !2060, size: 96, offset: 192)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !228, line: 83, size: 96, elements: !2061)
!2061 = !{!2062, !2063}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2060, file: !228, line: 86, baseType: !1953, size: 32)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2060, file: !228, line: 90, baseType: !1989, size: 64, offset: 32)
!2064 = !DIGlobalVariableExpression(var: !2065, expr: !DIExpression())
!2065 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1857, file: !1861, line: 43, type: !2066, isLocal: false, isDefinition: true, align: 512)
!2066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2067, size: 8704, elements: !2071)
!2067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2068, line: 47, size: 8, elements: !2069)
!2068 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2069 = !{!2070}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2067, file: !2068, line: 48, baseType: !125, size: 8)
!2071 = !{!2072}
!2072 = !DISubrange(count: 1088)
!2073 = !DIGlobalVariableExpression(var: !2074, expr: !DIExpression())
!2074 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1857, file: !1861, line: 44, type: !1954, isLocal: false, isDefinition: true)
!2075 = !DIGlobalVariableExpression(var: !2076, expr: !DIExpression())
!2076 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1857, file: !1861, line: 48, type: !2077, isLocal: false, isDefinition: true)
!2077 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1954, size: 1024, elements: !486)
!2078 = !DIGlobalVariableExpression(var: !2079, expr: !DIExpression())
!2079 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1857, file: !1861, line: 217, type: !136, isLocal: false, isDefinition: true)
!2080 = !DIGlobalVariableExpression(var: !2081, expr: !DIExpression())
!2081 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1857, file: !1861, line: 50, type: !2082, isLocal: true, isDefinition: true, align: 512)
!2082 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2067, size: 3072, elements: !2083)
!2083 = !{!487, !2084}
!2084 = !DISubrange(count: 384)
!2085 = !DIGlobalVariableExpression(var: !2086, expr: !DIExpression())
!2086 = distinct !DIGlobalVariable(name: "levels", scope: !2087, file: !1861, line: 232, type: !2107, isLocal: true, isDefinition: true)
!2087 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1861, file: !1861, line: 230, type: !2088, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1857, retainedNodes: !2090)
!2088 = !DISubroutineType(types: !2089)
!2089 = !{null, !1860}
!2090 = !{!2091, !2092, !2102, !2106}
!2091 = !DILocalVariable(name: "level", arg: 1, scope: !2087, file: !1861, line: 230, type: !1860)
!2092 = !DILocalVariable(name: "entry", scope: !2087, file: !1861, line: 244, type: !2093)
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 32)
!2094 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2095)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !2096)
!2096 = !{!2097, !2101}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2095, file: !294, line: 60, baseType: !2098, size: 32)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 32)
!2099 = !DISubroutineType(types: !2100)
!2100 = !{!107, !1879}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2095, file: !294, line: 65, baseType: !1879, size: 32, offset: 32)
!2102 = !DILocalVariable(name: "dev", scope: !2103, file: !1861, line: 247, type: !1879)
!2103 = distinct !DILexicalBlock(scope: !2104, file: !1861, line: 246, column: 64)
!2104 = distinct !DILexicalBlock(scope: !2105, file: !1861, line: 246, column: 2)
!2105 = distinct !DILexicalBlock(scope: !2087, file: !1861, line: 246, column: 2)
!2106 = !DILocalVariable(name: "rc", scope: !2103, file: !1861, line: 248, type: !107)
!2107 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2093, size: 192, elements: !1191)
!2108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2067, size: 16896, elements: !2109)
!2109 = !{!487, !2110}
!2110 = !DISubrange(count: 2112)
!2111 = !DIGlobalVariableExpression(var: !2112, expr: !DIExpression())
!2112 = distinct !DIGlobalVariable(name: "states_str", scope: !2113, file: !2114, line: 276, type: !2235, isLocal: true, isDefinition: true)
!2113 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2114, file: !2114, line: 271, type: !2115, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !2226)
!2114 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2115 = !DISubroutineType(types: !2116)
!2116 = !{!123, !2117, !256, !252}
!2117 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !359, line: 347, baseType: !2118)
!2118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2119, size: 32)
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !2120)
!2120 = !{!2121, !2179, !2191, !2192, !2193, !2194, !2200, !2213}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2119, file: !359, line: 247, baseType: !2122, size: 384)
!2122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !2123)
!2123 = !{!2124, !2148, !2155, !2156, !2157, !2166, !2167, !2168}
!2124 = !DIDerivedType(tag: DW_TAG_member, scope: !2122, file: !359, line: 60, baseType: !2125, size: 64)
!2125 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2122, file: !359, line: 60, size: 64, elements: !2126)
!2126 = !{!2127, !2142}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2125, file: !359, line: 61, baseType: !2128, size: 64)
!2128 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !2129)
!2129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !2130)
!2130 = !{!2131, !2137}
!2131 = !DIDerivedType(tag: DW_TAG_member, scope: !2129, file: !233, line: 38, baseType: !2132, size: 32)
!2132 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2129, file: !233, line: 38, size: 32, elements: !2133)
!2133 = !{!2134, !2136}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2132, file: !233, line: 39, baseType: !2135, size: 32)
!2135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2129, size: 32)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2132, file: !233, line: 40, baseType: !2135, size: 32)
!2137 = !DIDerivedType(tag: DW_TAG_member, scope: !2129, file: !233, line: 42, baseType: !2138, size: 32, offset: 32)
!2138 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2129, file: !233, line: 42, size: 32, elements: !2139)
!2139 = !{!2140, !2141}
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2138, file: !233, line: 43, baseType: !2135, size: 32)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2138, file: !233, line: 44, baseType: !2135, size: 32)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2125, file: !359, line: 62, baseType: !2143, size: 64)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !2144)
!2144 = !{!2145}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2143, file: !384, line: 50, baseType: !2146, size: 64)
!2146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2147, size: 64, elements: !389)
!2147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2143, size: 32)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2122, file: !359, line: 68, baseType: !2149, size: 32, offset: 64)
!2149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 32)
!2150 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !2151)
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !2152)
!2152 = !{!2153}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2151, file: !228, line: 232, baseType: !2154, size: 64)
!2154 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !2129)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2122, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2122, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!2157 = !DIDerivedType(tag: DW_TAG_member, scope: !2122, file: !359, line: 90, baseType: !2158, size: 16, offset: 112)
!2158 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2122, file: !359, line: 90, size: 16, elements: !2159)
!2159 = !{!2160, !2165}
!2160 = !DIDerivedType(tag: DW_TAG_member, scope: !2158, file: !359, line: 91, baseType: !2161, size: 16)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2158, file: !359, line: 91, size: 16, elements: !2162)
!2162 = !{!2163, !2164}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2161, file: !359, line: 96, baseType: !407, size: 8)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2161, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2158, file: !359, line: 100, baseType: !411, size: 16)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2122, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2122, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2122, file: !359, line: 131, baseType: !2169, size: 192, offset: 192)
!2169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !2170)
!2170 = !{!2171, !2172, !2178}
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2169, file: !228, line: 245, baseType: !2128, size: 64)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2169, file: !228, line: 246, baseType: !2173, size: 32, offset: 64)
!2173 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !2174)
!2174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2175, size: 32)
!2175 = !DISubroutineType(types: !2176)
!2176 = !{null, !2177}
!2177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2169, size: 32)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2169, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2119, file: !359, line: 250, baseType: !2180, size: 288, offset: 384)
!2180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !2181)
!2181 = !{!2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2180, file: !428, line: 26, baseType: !162, size: 32)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2180, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2180, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2180, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2180, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2180, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2180, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2180, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2180, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2119, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2119, file: !359, line: 256, baseType: !2150, size: 64, offset: 704)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2119, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2119, file: !359, line: 300, baseType: !2195, size: 96, offset: 800)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !2196)
!2196 = !{!2197, !2198, !2199}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2195, file: !359, line: 153, baseType: !22, size: 32)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2195, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2195, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2119, file: !359, line: 325, baseType: !2201, size: 32, offset: 896)
!2201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2202, size: 32)
!2202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !2203)
!2203 = !{!2204, !2210, !2211}
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2202, file: !224, line: 5074, baseType: !2205, size: 96)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !2206)
!2206 = !{!2207, !2208, !2209}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2205, file: !454, line: 57, baseType: !457, size: 32)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2205, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2205, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2202, file: !224, line: 5075, baseType: !2150, size: 64, offset: 96)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2202, file: !224, line: 5076, baseType: !2212, offset: 160)
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2119, file: !359, line: 343, baseType: !2214, size: 64, offset: 928)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !2215)
!2215 = !{!2216, !2217}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2214, file: !428, line: 63, baseType: !162, size: 32)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2214, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!2218 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2219, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2220, globals: !2222, splitDebugInlining: false, nameTableKind: None)
!2219 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!2220 = !{!102, !123, !103, !133, !107, !2221, !24, !252, !256, !22, !162, !1500}
!2221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2128, size: 32)
!2222 = !{!2111, !2223}
!2223 = !DIGlobalVariableExpression(var: !2224, expr: !DIExpression())
!2224 = distinct !DIGlobalVariable(name: "states_sz", scope: !2113, file: !2114, line: 279, type: !2225, isLocal: true, isDefinition: true)
!2225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1795, size: 256, elements: !1508)
!2226 = !{!2227, !2228, !2229, !2230, !2231, !2232, !2233}
!2227 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2113, file: !2114, line: 271, type: !2117)
!2228 = !DILocalVariable(name: "buf", arg: 2, scope: !2113, file: !2114, line: 271, type: !256)
!2229 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2113, file: !2114, line: 271, type: !252)
!2230 = !DILocalVariable(name: "off", scope: !2113, file: !2114, line: 273, type: !252)
!2231 = !DILocalVariable(name: "bit", scope: !2113, file: !2114, line: 274, type: !133)
!2232 = !DILocalVariable(name: "thread_state", scope: !2113, file: !2114, line: 275, type: !133)
!2233 = !DILocalVariable(name: "index", scope: !2234, file: !2114, line: 293, type: !133)
!2234 = distinct !DILexicalBlock(scope: !2113, file: !2114, line: 293, column: 2)
!2235 = !DICompositeType(tag: DW_TAG_array_type, baseType: !123, size: 256, elements: !1508)
!2236 = !DIGlobalVariableExpression(var: !2237, expr: !DIExpression())
!2237 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2238, file: !2346, line: 56, type: !2335, isLocal: false, isDefinition: true)
!2238 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2239, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2240, globals: !2343, splitDebugInlining: false, nameTableKind: None)
!2239 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!2240 = !{!2241, !256, !102, !2341, !182, !103, !728, !107, !162, !1500, !2342}
!2241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2242, size: 32)
!2242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !2243)
!2243 = !{!2244, !2302, !2314, !2315, !2316, !2317, !2323, !2336}
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2242, file: !359, line: 247, baseType: !2245, size: 384)
!2245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !2246)
!2246 = !{!2247, !2271, !2278, !2279, !2280, !2289, !2290, !2291}
!2247 = !DIDerivedType(tag: DW_TAG_member, scope: !2245, file: !359, line: 60, baseType: !2248, size: 64)
!2248 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2245, file: !359, line: 60, size: 64, elements: !2249)
!2249 = !{!2250, !2265}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2248, file: !359, line: 61, baseType: !2251, size: 64)
!2251 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !2252)
!2252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !2253)
!2253 = !{!2254, !2260}
!2254 = !DIDerivedType(tag: DW_TAG_member, scope: !2252, file: !233, line: 38, baseType: !2255, size: 32)
!2255 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2252, file: !233, line: 38, size: 32, elements: !2256)
!2256 = !{!2257, !2259}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2255, file: !233, line: 39, baseType: !2258, size: 32)
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2252, size: 32)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2255, file: !233, line: 40, baseType: !2258, size: 32)
!2260 = !DIDerivedType(tag: DW_TAG_member, scope: !2252, file: !233, line: 42, baseType: !2261, size: 32, offset: 32)
!2261 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2252, file: !233, line: 42, size: 32, elements: !2262)
!2262 = !{!2263, !2264}
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2261, file: !233, line: 43, baseType: !2258, size: 32)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2261, file: !233, line: 44, baseType: !2258, size: 32)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2248, file: !359, line: 62, baseType: !2266, size: 64)
!2266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !2267)
!2267 = !{!2268}
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2266, file: !384, line: 50, baseType: !2269, size: 64)
!2269 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2270, size: 64, elements: !389)
!2270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 32)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2245, file: !359, line: 68, baseType: !2272, size: 32, offset: 64)
!2272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 32)
!2273 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !2274)
!2274 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !2275)
!2275 = !{!2276}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2274, file: !228, line: 232, baseType: !2277, size: 64)
!2277 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !2252)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2245, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2245, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!2280 = !DIDerivedType(tag: DW_TAG_member, scope: !2245, file: !359, line: 90, baseType: !2281, size: 16, offset: 112)
!2281 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2245, file: !359, line: 90, size: 16, elements: !2282)
!2282 = !{!2283, !2288}
!2283 = !DIDerivedType(tag: DW_TAG_member, scope: !2281, file: !359, line: 91, baseType: !2284, size: 16)
!2284 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2281, file: !359, line: 91, size: 16, elements: !2285)
!2285 = !{!2286, !2287}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2284, file: !359, line: 96, baseType: !407, size: 8)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2284, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2281, file: !359, line: 100, baseType: !411, size: 16)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2245, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2245, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2245, file: !359, line: 131, baseType: !2292, size: 192, offset: 192)
!2292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !2293)
!2293 = !{!2294, !2295, !2301}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2292, file: !228, line: 245, baseType: !2251, size: 64)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2292, file: !228, line: 246, baseType: !2296, size: 32, offset: 64)
!2296 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !2297)
!2297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2298, size: 32)
!2298 = !DISubroutineType(types: !2299)
!2299 = !{null, !2300}
!2300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2292, size: 32)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2292, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2242, file: !359, line: 250, baseType: !2303, size: 288, offset: 384)
!2303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !2304)
!2304 = !{!2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2303, file: !428, line: 26, baseType: !162, size: 32)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2303, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2303, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2303, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2303, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2303, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2303, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2303, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2303, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2242, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2242, file: !359, line: 256, baseType: !2273, size: 64, offset: 704)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2242, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2242, file: !359, line: 300, baseType: !2318, size: 96, offset: 800)
!2318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !2319)
!2319 = !{!2320, !2321, !2322}
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2318, file: !359, line: 153, baseType: !22, size: 32)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2318, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2318, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2242, file: !359, line: 325, baseType: !2324, size: 32, offset: 896)
!2324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2325, size: 32)
!2325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !2326)
!2326 = !{!2327, !2333, !2334}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2325, file: !224, line: 5074, baseType: !2328, size: 96)
!2328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !2329)
!2329 = !{!2330, !2331, !2332}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2328, file: !454, line: 57, baseType: !457, size: 32)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2328, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2328, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2325, file: !224, line: 5075, baseType: !2273, size: 64, offset: 96)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2325, file: !224, line: 5076, baseType: !2335, offset: 160)
!2335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2242, file: !359, line: 343, baseType: !2337, size: 64, offset: 928)
!2337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !2338)
!2338 = !{!2339, !2340}
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2337, file: !428, line: 63, baseType: !162, size: 32)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2337, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!2341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2270, size: 32)
!2342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 32)
!2343 = !{!2236, !2344, !2347, !2349}
!2344 = !DIGlobalVariableExpression(var: !2345, expr: !DIExpression())
!2345 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2238, file: !2346, line: 404, type: !107, isLocal: true, isDefinition: true)
!2346 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2347 = !DIGlobalVariableExpression(var: !2348, expr: !DIExpression())
!2348 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2238, file: !2346, line: 405, type: !107, isLocal: true, isDefinition: true)
!2349 = !DIGlobalVariableExpression(var: !2350, expr: !DIExpression())
!2350 = distinct !DIGlobalVariable(name: "pending_current", scope: !2238, file: !2346, line: 425, type: !2241, isLocal: true, isDefinition: true)
!2351 = !DIGlobalVariableExpression(var: !2352, expr: !DIExpression())
!2352 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2353, file: !2383, line: 15, type: !1500, isLocal: true, isDefinition: true)
!2353 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2354, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2355, globals: !2380, splitDebugInlining: false, nameTableKind: None)
!2354 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!2355 = !{!103, !102, !728, !162, !1500, !107, !2356, !256, !105}
!2356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2357, size: 32)
!2357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !2358)
!2358 = !{!2359, !2374, !2379}
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2357, file: !228, line: 245, baseType: !2360, size: 64)
!2360 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !2361)
!2361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !2362)
!2362 = !{!2363, !2369}
!2363 = !DIDerivedType(tag: DW_TAG_member, scope: !2361, file: !233, line: 38, baseType: !2364, size: 32)
!2364 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2361, file: !233, line: 38, size: 32, elements: !2365)
!2365 = !{!2366, !2368}
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2364, file: !233, line: 39, baseType: !2367, size: 32)
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2361, size: 32)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2364, file: !233, line: 40, baseType: !2367, size: 32)
!2369 = !DIDerivedType(tag: DW_TAG_member, scope: !2361, file: !233, line: 42, baseType: !2370, size: 32, offset: 32)
!2370 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2361, file: !233, line: 42, size: 32, elements: !2371)
!2371 = !{!2372, !2373}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2370, file: !233, line: 43, baseType: !2367, size: 32)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2370, file: !233, line: 44, baseType: !2367, size: 32)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2357, file: !228, line: 246, baseType: !2375, size: 32, offset: 64)
!2375 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !2376)
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 32)
!2377 = !DISubroutineType(types: !2378)
!2378 = !{null, !2356}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2357, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!2380 = !{!2351, !2381, !2385, !2387}
!2381 = !DIGlobalVariableExpression(var: !2382, expr: !DIExpression())
!2382 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2353, file: !2383, line: 19, type: !2384, isLocal: true, isDefinition: true)
!2383 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!2385 = !DIGlobalVariableExpression(var: !2386, expr: !DIExpression())
!2386 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2353, file: !2383, line: 25, type: !107, isLocal: true, isDefinition: true)
!2387 = !DIGlobalVariableExpression(var: !2388, expr: !DIExpression())
!2388 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2353, file: !2383, line: 17, type: !2389, isLocal: true, isDefinition: true)
!2389 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !2361)
!2390 = !DIGlobalVariableExpression(var: !2391, expr: !DIExpression())
!2391 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2392, file: !2411, line: 55, type: !2412, isLocal: true, isDefinition: true, align: 32)
!2392 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2393, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2394, globals: !2410, splitDebugInlining: false, nameTableKind: None)
!2393 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!2394 = !{!102, !103, !107, !2395}
!2395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 32)
!2396 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !2397)
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !2398)
!2398 = !{!2399, !2405}
!2399 = !DIDerivedType(tag: DW_TAG_member, scope: !2397, file: !233, line: 38, baseType: !2400, size: 32)
!2400 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2397, file: !233, line: 38, size: 32, elements: !2401)
!2401 = !{!2402, !2404}
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2400, file: !233, line: 39, baseType: !2403, size: 32)
!2403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 32)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2400, file: !233, line: 40, baseType: !2403, size: 32)
!2405 = !DIDerivedType(tag: DW_TAG_member, scope: !2397, file: !233, line: 42, baseType: !2406, size: 32, offset: 32)
!2406 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2397, file: !233, line: 42, size: 32, elements: !2407)
!2407 = !{!2408, !2409}
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2406, file: !233, line: 43, baseType: !2403, size: 32)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2406, file: !233, line: 44, baseType: !2403, size: 32)
!2410 = !{!2390}
!2411 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2412 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2413)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !2414)
!2414 = !{!2415, !2422}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2413, file: !294, line: 60, baseType: !2416, size: 32)
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2417, size: 32)
!2417 = !DISubroutineType(types: !2418)
!2418 = !{!107, !2419}
!2419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2420, size: 32)
!2420 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2421)
!2421 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !294, line: 48, flags: DIFlagFwdDecl)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2413, file: !294, line: 65, baseType: !2419, size: 32, offset: 32)
!2423 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2424, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!2424 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!2425 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2426, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!2426 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!2427 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2428, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2429, retainedTypes: !2437, splitDebugInlining: false, nameTableKind: None)
!2428 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!2429 = !{!30, !2430}
!2430 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2431, line: 54, baseType: !32, size: 32, elements: !2432)
!2431 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2432 = !{!2433, !2434, !2435, !2436}
!2433 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2434 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2435 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2436 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2437 = !{!102, !252, !182, !24, !2438, !22, !2444, !107, !848, !2459}
!2438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2439, size: 32)
!2439 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2431, line: 58, baseType: !2440)
!2440 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2431, line: 58, size: 64, elements: !2441)
!2441 = !{!2442}
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2440, file: !2431, line: 58, baseType: !2443, size: 64)
!2443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, size: 64, elements: !1508)
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2445, size: 32)
!2445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2431, line: 68, size: 128, elements: !2446)
!2446 = !{!2447, !2450, !2451, !2452}
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2445, file: !2431, line: 69, baseType: !2448, size: 64)
!2448 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2449, size: 64, elements: !389)
!2449 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2431, line: 61, baseType: !162)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2445, file: !2431, line: 70, baseType: !2449, size: 32, offset: 64)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2445, file: !2431, line: 71, baseType: !162, size: 32, offset: 96)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2445, file: !2431, line: 77, baseType: !2453, offset: 128)
!2453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2454, elements: !2457)
!2454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2431, line: 64, size: 32, elements: !2455)
!2455 = !{!2456}
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2454, file: !2431, line: 65, baseType: !2449, size: 32)
!2457 = !{!2458}
!2458 = !DISubrange(count: 0)
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 32)
!2460 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2461, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2462, retainedTypes: !2482, splitDebugInlining: false, nameTableKind: None)
!2461 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!2462 = !{!2463, !2471}
!2463 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2464, line: 69, baseType: !32, size: 32, elements: !2465)
!2464 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2465 = !{!2466, !2467, !2468, !2469, !2470}
!2466 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2467 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2468 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2469 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2470 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2471 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2464, line: 56, baseType: !32, size: 32, elements: !2472)
!2472 = !{!2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481}
!2473 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2474 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2475 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2476 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2477 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2478 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2479 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2480 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2481 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2482 = !{!107, !2463, !2471, !2483, !408, !143, !2485, !2486, !134, !412, !123, !252, !102, !22, !32, !2488, !2489, !2490, !2491, !2492, !106, !2493, !2484, !2494, !2495, !2496, !2497}
!2483 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2464, line: 31, baseType: !2484)
!2484 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !106)
!2485 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !253, line: 329, baseType: !32)
!2486 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2464, line: 32, baseType: !2487)
!2487 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1501)
!2488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!2489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 32)
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 32)
!2491 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2491, size: 32)
!2493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2484, size: 32)
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 32)
!2496 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !253, line: 145, baseType: !107)
!2497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 32)
!2498 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2499, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2499 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!2500 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2501, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2502, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!2501 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!2502 = !{!2503, !30}
!2503 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2504, line: 27, baseType: !32, size: 32, elements: !2505)
!2504 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2505 = !{!2506, !2507, !2508, !2509, !2510}
!2506 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2507 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2508 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2509 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2510 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2511 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2512, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2513, retainedTypes: !2514, splitDebugInlining: false, nameTableKind: None)
!2512 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!2513 = !{!566, !2503, !30}
!2514 = !{!754, !2515, !102, !107, !728, !162, !133, !2532}
!2515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2516, size: 32)
!2516 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !497, line: 426, baseType: !2517)
!2517 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 411, size: 28704, elements: !2518)
!2518 = !{!2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531}
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2517, file: !497, line: 413, baseType: !1616, size: 256)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2517, file: !497, line: 414, baseType: !1618, size: 768, offset: 256)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2517, file: !497, line: 415, baseType: !1616, size: 256, offset: 1024)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2517, file: !497, line: 416, baseType: !1618, size: 768, offset: 1280)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2517, file: !497, line: 417, baseType: !1616, size: 256, offset: 2048)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2517, file: !497, line: 418, baseType: !1618, size: 768, offset: 2304)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2517, file: !497, line: 419, baseType: !1616, size: 256, offset: 3072)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2517, file: !497, line: 420, baseType: !1618, size: 768, offset: 3328)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2517, file: !497, line: 421, baseType: !1616, size: 256, offset: 4096)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2517, file: !497, line: 422, baseType: !1629, size: 1792, offset: 4352)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2517, file: !497, line: 423, baseType: !1633, size: 1920, offset: 6144)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2517, file: !497, line: 424, baseType: !1638, size: 20608, offset: 8064)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2517, file: !497, line: 425, baseType: !283, size: 32, offset: 28672)
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2533, size: 32)
!2533 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !2534)
!2534 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !2535)
!2535 = !{!2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556}
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2534, file: !497, line: 447, baseType: !501, size: 32)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2534, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2534, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2534, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2534, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2534, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2534, file: !497, line: 453, baseType: !1653, size: 96, offset: 192)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2534, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2534, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2534, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2534, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2534, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2534, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2534, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2534, file: !497, line: 461, baseType: !1664, size: 64, offset: 512)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2534, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2534, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2534, file: !497, line: 464, baseType: !1668, size: 128, offset: 640)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2534, file: !497, line: 465, baseType: !1670, size: 160, offset: 768)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2534, file: !497, line: 466, baseType: !1672, size: 160, offset: 928)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2534, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!2557 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2558, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!2558 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!2559 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2560, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2561, splitDebugInlining: false, nameTableKind: None)
!2560 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!2561 = !{!102, !107, !22, !2562}
!2562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2563, size: 32)
!2563 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !2564)
!2564 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !2565)
!2565 = !{!2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586}
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2564, file: !497, line: 447, baseType: !501, size: 32)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2564, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2564, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2564, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2564, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2564, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2564, file: !497, line: 453, baseType: !1653, size: 96, offset: 192)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2564, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2564, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2564, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2564, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2564, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2564, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2564, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2564, file: !497, line: 461, baseType: !1664, size: 64, offset: 512)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2564, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2564, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2564, file: !497, line: 464, baseType: !1668, size: 128, offset: 640)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2564, file: !497, line: 465, baseType: !1670, size: 160, offset: 768)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2564, file: !497, line: 466, baseType: !1672, size: 160, offset: 928)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2564, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!2587 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2588, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2589, splitDebugInlining: false, nameTableKind: None)
!2588 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!2589 = !{!2590, !102, !107}
!2590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2591, size: 32)
!2591 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !2592)
!2592 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !2593)
!2593 = !{!2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614}
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2592, file: !497, line: 447, baseType: !501, size: 32)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2592, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2592, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2592, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2592, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2592, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2592, file: !497, line: 453, baseType: !1653, size: 96, offset: 192)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2592, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2592, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2592, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2592, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2592, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2592, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2592, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2592, file: !497, line: 461, baseType: !1664, size: 64, offset: 512)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2592, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2592, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2592, file: !497, line: 464, baseType: !1668, size: 128, offset: 640)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2592, file: !497, line: 465, baseType: !1670, size: 160, offset: 768)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2592, file: !497, line: 466, baseType: !1672, size: 160, offset: 928)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2592, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!2615 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2616, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2617, splitDebugInlining: false, nameTableKind: None)
!2616 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!2617 = !{!2618, !162, !102, !107}
!2618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2619, size: 32)
!2619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2620, line: 98, size: 256, elements: !2621)
!2620 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2621 = !{!2622, !2627, !2632, !2637, !2642, !2647, !2652, !2657}
!2622 = !DIDerivedType(tag: DW_TAG_member, scope: !2619, file: !2620, line: 99, baseType: !2623, size: 32)
!2623 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2619, file: !2620, line: 99, size: 32, elements: !2624)
!2624 = !{!2625, !2626}
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2623, file: !2620, line: 99, baseType: !162, size: 32)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2623, file: !2620, line: 99, baseType: !162, size: 32)
!2627 = !DIDerivedType(tag: DW_TAG_member, scope: !2619, file: !2620, line: 100, baseType: !2628, size: 32, offset: 32)
!2628 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2619, file: !2620, line: 100, size: 32, elements: !2629)
!2629 = !{!2630, !2631}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2628, file: !2620, line: 100, baseType: !162, size: 32)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2628, file: !2620, line: 100, baseType: !162, size: 32)
!2632 = !DIDerivedType(tag: DW_TAG_member, scope: !2619, file: !2620, line: 101, baseType: !2633, size: 32, offset: 64)
!2633 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2619, file: !2620, line: 101, size: 32, elements: !2634)
!2634 = !{!2635, !2636}
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2633, file: !2620, line: 101, baseType: !162, size: 32)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2633, file: !2620, line: 101, baseType: !162, size: 32)
!2637 = !DIDerivedType(tag: DW_TAG_member, scope: !2619, file: !2620, line: 102, baseType: !2638, size: 32, offset: 96)
!2638 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2619, file: !2620, line: 102, size: 32, elements: !2639)
!2639 = !{!2640, !2641}
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2638, file: !2620, line: 102, baseType: !162, size: 32)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2638, file: !2620, line: 102, baseType: !162, size: 32)
!2642 = !DIDerivedType(tag: DW_TAG_member, scope: !2619, file: !2620, line: 103, baseType: !2643, size: 32, offset: 128)
!2643 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2619, file: !2620, line: 103, size: 32, elements: !2644)
!2644 = !{!2645, !2646}
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2643, file: !2620, line: 103, baseType: !162, size: 32)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2643, file: !2620, line: 103, baseType: !162, size: 32)
!2647 = !DIDerivedType(tag: DW_TAG_member, scope: !2619, file: !2620, line: 104, baseType: !2648, size: 32, offset: 160)
!2648 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2619, file: !2620, line: 104, size: 32, elements: !2649)
!2649 = !{!2650, !2651}
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2648, file: !2620, line: 104, baseType: !162, size: 32)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2648, file: !2620, line: 104, baseType: !162, size: 32)
!2652 = !DIDerivedType(tag: DW_TAG_member, scope: !2619, file: !2620, line: 105, baseType: !2653, size: 32, offset: 192)
!2653 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2619, file: !2620, line: 105, size: 32, elements: !2654)
!2654 = !{!2655, !2656}
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2653, file: !2620, line: 105, baseType: !162, size: 32)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2653, file: !2620, line: 105, baseType: !162, size: 32)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2619, file: !2620, line: 106, baseType: !162, size: 32, offset: 224)
!2658 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2659, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2502, retainedTypes: !2660, splitDebugInlining: false, nameTableKind: None)
!2659 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!2660 = !{!2661, !102, !107, !2686, !2459, !162}
!2661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2662, size: 32)
!2662 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !2663)
!2663 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !2664)
!2664 = !{!2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685}
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2663, file: !497, line: 447, baseType: !501, size: 32)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2663, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2663, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2663, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2663, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2663, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2663, file: !497, line: 453, baseType: !1653, size: 96, offset: 192)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2663, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2663, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2663, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2663, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2663, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2663, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2663, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2663, file: !497, line: 461, baseType: !1664, size: 64, offset: 512)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2663, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2663, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2663, file: !497, line: 464, baseType: !1668, size: 128, offset: 640)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2663, file: !497, line: 465, baseType: !1670, size: 160, offset: 768)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2663, file: !497, line: 466, baseType: !1672, size: 160, offset: 928)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2663, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!2686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2687, size: 32)
!2687 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2620, line: 141, baseType: !2688)
!2688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2620, line: 97, size: 256, elements: !2689)
!2689 = !{!2690}
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2688, file: !2620, line: 107, baseType: !2691, size: 256)
!2691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2620, line: 98, size: 256, elements: !2692)
!2692 = !{!2693, !2698, !2703, !2708, !2713, !2718, !2723, !2728}
!2693 = !DIDerivedType(tag: DW_TAG_member, scope: !2691, file: !2620, line: 99, baseType: !2694, size: 32)
!2694 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2691, file: !2620, line: 99, size: 32, elements: !2695)
!2695 = !{!2696, !2697}
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2694, file: !2620, line: 99, baseType: !162, size: 32)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2694, file: !2620, line: 99, baseType: !162, size: 32)
!2698 = !DIDerivedType(tag: DW_TAG_member, scope: !2691, file: !2620, line: 100, baseType: !2699, size: 32, offset: 32)
!2699 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2691, file: !2620, line: 100, size: 32, elements: !2700)
!2700 = !{!2701, !2702}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2699, file: !2620, line: 100, baseType: !162, size: 32)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2699, file: !2620, line: 100, baseType: !162, size: 32)
!2703 = !DIDerivedType(tag: DW_TAG_member, scope: !2691, file: !2620, line: 101, baseType: !2704, size: 32, offset: 64)
!2704 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2691, file: !2620, line: 101, size: 32, elements: !2705)
!2705 = !{!2706, !2707}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2704, file: !2620, line: 101, baseType: !162, size: 32)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2704, file: !2620, line: 101, baseType: !162, size: 32)
!2708 = !DIDerivedType(tag: DW_TAG_member, scope: !2691, file: !2620, line: 102, baseType: !2709, size: 32, offset: 96)
!2709 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2691, file: !2620, line: 102, size: 32, elements: !2710)
!2710 = !{!2711, !2712}
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2709, file: !2620, line: 102, baseType: !162, size: 32)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2709, file: !2620, line: 102, baseType: !162, size: 32)
!2713 = !DIDerivedType(tag: DW_TAG_member, scope: !2691, file: !2620, line: 103, baseType: !2714, size: 32, offset: 128)
!2714 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2691, file: !2620, line: 103, size: 32, elements: !2715)
!2715 = !{!2716, !2717}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2714, file: !2620, line: 103, baseType: !162, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2714, file: !2620, line: 103, baseType: !162, size: 32)
!2718 = !DIDerivedType(tag: DW_TAG_member, scope: !2691, file: !2620, line: 104, baseType: !2719, size: 32, offset: 160)
!2719 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2691, file: !2620, line: 104, size: 32, elements: !2720)
!2720 = !{!2721, !2722}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2719, file: !2620, line: 104, baseType: !162, size: 32)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2719, file: !2620, line: 104, baseType: !162, size: 32)
!2723 = !DIDerivedType(tag: DW_TAG_member, scope: !2691, file: !2620, line: 105, baseType: !2724, size: 32, offset: 192)
!2724 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2691, file: !2620, line: 105, size: 32, elements: !2725)
!2725 = !{!2726, !2727}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2724, file: !2620, line: 105, baseType: !162, size: 32)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2724, file: !2620, line: 105, baseType: !162, size: 32)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2691, file: !2620, line: 106, baseType: !162, size: 32, offset: 224)
!2729 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2730, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1601, retainedTypes: !2731, splitDebugInlining: false, nameTableKind: None)
!2730 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!2731 = !{!754, !728, !133, !162, !2732, !2749}
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2733, size: 32)
!2733 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !497, line: 426, baseType: !2734)
!2734 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 411, size: 28704, elements: !2735)
!2735 = !{!2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748}
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2734, file: !497, line: 413, baseType: !1616, size: 256)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2734, file: !497, line: 414, baseType: !1618, size: 768, offset: 256)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2734, file: !497, line: 415, baseType: !1616, size: 256, offset: 1024)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2734, file: !497, line: 416, baseType: !1618, size: 768, offset: 1280)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2734, file: !497, line: 417, baseType: !1616, size: 256, offset: 2048)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2734, file: !497, line: 418, baseType: !1618, size: 768, offset: 2304)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2734, file: !497, line: 419, baseType: !1616, size: 256, offset: 3072)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2734, file: !497, line: 420, baseType: !1618, size: 768, offset: 3328)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2734, file: !497, line: 421, baseType: !1616, size: 256, offset: 4096)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2734, file: !497, line: 422, baseType: !1629, size: 1792, offset: 4352)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2734, file: !497, line: 423, baseType: !1633, size: 1920, offset: 6144)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2734, file: !497, line: 424, baseType: !1638, size: 20608, offset: 8064)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2734, file: !497, line: 425, baseType: !283, size: 32, offset: 28672)
!2749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2750, size: 32)
!2750 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !2751)
!2751 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !2752)
!2752 = !{!2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773}
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2751, file: !497, line: 447, baseType: !501, size: 32)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2751, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2751, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2751, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2751, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2751, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2751, file: !497, line: 453, baseType: !1653, size: 96, offset: 192)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2751, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2751, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2751, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2751, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2751, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2751, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2751, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2751, file: !497, line: 461, baseType: !1664, size: 64, offset: 512)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2751, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2751, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2751, file: !497, line: 464, baseType: !1668, size: 128, offset: 640)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2751, file: !497, line: 465, baseType: !1670, size: 160, offset: 768)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2751, file: !497, line: 466, baseType: !1672, size: 160, offset: 928)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2751, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!2774 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2775, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2776, splitDebugInlining: false, nameTableKind: None)
!2775 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!2776 = !{!2777, !102, !107}
!2777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2778, size: 32)
!2778 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !2779)
!2779 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !2780)
!2780 = !{!2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801}
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2779, file: !497, line: 447, baseType: !501, size: 32)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2779, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2779, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2779, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2779, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2779, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2779, file: !497, line: 453, baseType: !1653, size: 96, offset: 192)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2779, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2779, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2779, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2779, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2779, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2779, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2779, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2779, file: !497, line: 461, baseType: !1664, size: 64, offset: 512)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2779, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2779, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2779, file: !497, line: 464, baseType: !1668, size: 128, offset: 640)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2779, file: !497, line: 465, baseType: !1670, size: 160, offset: 768)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2779, file: !497, line: 466, baseType: !1672, size: 160, offset: 928)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2779, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!2802 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2803, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2804, splitDebugInlining: false, nameTableKind: None)
!2803 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!2804 = !{!125, !256, !252, !144, !2805, !134, !102}
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2806, size: 32)
!2806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !134)
!2807 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2808, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2809, splitDebugInlining: false, nameTableKind: None)
!2808 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!2809 = !{!2810}
!2810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2811, size: 32)
!2811 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !279, line: 532, baseType: !2812)
!2812 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 500, size: 1088, elements: !2813)
!2813 = !{!2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843}
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2812, file: !279, line: 502, baseType: !283, size: 32)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2812, file: !279, line: 503, baseType: !283, size: 32, offset: 32)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2812, file: !279, line: 504, baseType: !283, size: 32, offset: 64)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2812, file: !279, line: 505, baseType: !283, size: 32, offset: 96)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2812, file: !279, line: 506, baseType: !283, size: 32, offset: 128)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2812, file: !279, line: 507, baseType: !283, size: 32, offset: 160)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2812, file: !279, line: 508, baseType: !283, size: 32, offset: 192)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2812, file: !279, line: 509, baseType: !162, size: 32, offset: 224)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2812, file: !279, line: 510, baseType: !283, size: 32, offset: 256)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2812, file: !279, line: 511, baseType: !283, size: 32, offset: 288)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2812, file: !279, line: 512, baseType: !822, size: 64, offset: 320)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2812, file: !279, line: 513, baseType: !283, size: 32, offset: 384)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2812, file: !279, line: 514, baseType: !283, size: 32, offset: 416)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2812, file: !279, line: 515, baseType: !283, size: 32, offset: 448)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2812, file: !279, line: 516, baseType: !162, size: 32, offset: 480)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2812, file: !279, line: 517, baseType: !283, size: 32, offset: 512)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2812, file: !279, line: 518, baseType: !283, size: 32, offset: 544)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2812, file: !279, line: 519, baseType: !822, size: 64, offset: 576)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2812, file: !279, line: 520, baseType: !283, size: 32, offset: 640)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2812, file: !279, line: 521, baseType: !283, size: 32, offset: 672)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2812, file: !279, line: 522, baseType: !283, size: 32, offset: 704)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2812, file: !279, line: 523, baseType: !162, size: 32, offset: 736)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2812, file: !279, line: 524, baseType: !283, size: 32, offset: 768)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2812, file: !279, line: 525, baseType: !283, size: 32, offset: 800)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2812, file: !279, line: 526, baseType: !822, size: 64, offset: 832)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2812, file: !279, line: 527, baseType: !283, size: 32, offset: 896)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2812, file: !279, line: 528, baseType: !283, size: 32, offset: 928)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2812, file: !279, line: 529, baseType: !822, size: 64, offset: 960)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2812, file: !279, line: 530, baseType: !283, size: 32, offset: 1024)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2812, file: !279, line: 531, baseType: !283, size: 32, offset: 1056)
!2844 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2845, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2845 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!2846 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2847, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2848, retainedTypes: !2864, splitDebugInlining: false, nameTableKind: None)
!2847 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!2848 = !{!2849, !2856, !2860}
!2849 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2850, line: 38, baseType: !32, size: 32, elements: !2851)
!2850 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2851 = !{!2852, !2853, !2854, !2855}
!2852 = !DIEnumerator(name: "HAL_OK", value: 0)
!2853 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2854 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2855 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2856 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !795, line: 184, baseType: !32, size: 32, elements: !2857)
!2857 = !{!2858, !2859}
!2858 = !DIEnumerator(name: "RESET", value: 0)
!2859 = !DIEnumerator(name: "SET", value: 1)
!2860 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !795, line: 190, baseType: !32, size: 32, elements: !2861)
!2861 = !{!2862, !2863}
!2862 = !DIEnumerator(name: "DISABLE", value: 0)
!2863 = !DIEnumerator(name: "ENABLE", value: 1)
!2864 = !{!102, !2865, !133, !162, !1502, !2899, !2905, !2916, !411, !2917, !1500}
!2865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2866, size: 32)
!2866 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !279, line: 532, baseType: !2867)
!2867 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 500, size: 1088, elements: !2868)
!2868 = !{!2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898}
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2867, file: !279, line: 502, baseType: !283, size: 32)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2867, file: !279, line: 503, baseType: !283, size: 32, offset: 32)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2867, file: !279, line: 504, baseType: !283, size: 32, offset: 64)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2867, file: !279, line: 505, baseType: !283, size: 32, offset: 96)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2867, file: !279, line: 506, baseType: !283, size: 32, offset: 128)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2867, file: !279, line: 507, baseType: !283, size: 32, offset: 160)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2867, file: !279, line: 508, baseType: !283, size: 32, offset: 192)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2867, file: !279, line: 509, baseType: !162, size: 32, offset: 224)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2867, file: !279, line: 510, baseType: !283, size: 32, offset: 256)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2867, file: !279, line: 511, baseType: !283, size: 32, offset: 288)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2867, file: !279, line: 512, baseType: !822, size: 64, offset: 320)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2867, file: !279, line: 513, baseType: !283, size: 32, offset: 384)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2867, file: !279, line: 514, baseType: !283, size: 32, offset: 416)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2867, file: !279, line: 515, baseType: !283, size: 32, offset: 448)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2867, file: !279, line: 516, baseType: !162, size: 32, offset: 480)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2867, file: !279, line: 517, baseType: !283, size: 32, offset: 512)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2867, file: !279, line: 518, baseType: !283, size: 32, offset: 544)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2867, file: !279, line: 519, baseType: !822, size: 64, offset: 576)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2867, file: !279, line: 520, baseType: !283, size: 32, offset: 640)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2867, file: !279, line: 521, baseType: !283, size: 32, offset: 672)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2867, file: !279, line: 522, baseType: !283, size: 32, offset: 704)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2867, file: !279, line: 523, baseType: !162, size: 32, offset: 736)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2867, file: !279, line: 524, baseType: !283, size: 32, offset: 768)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2867, file: !279, line: 525, baseType: !283, size: 32, offset: 800)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2867, file: !279, line: 526, baseType: !822, size: 64, offset: 832)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2867, file: !279, line: 527, baseType: !283, size: 32, offset: 896)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2867, file: !279, line: 528, baseType: !283, size: 32, offset: 928)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2867, file: !279, line: 529, baseType: !822, size: 64, offset: 960)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2867, file: !279, line: 530, baseType: !283, size: 32, offset: 1024)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2867, file: !279, line: 531, baseType: !283, size: 32, offset: 1056)
!2899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2900, size: 32)
!2900 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !279, line: 494, baseType: !2901)
!2901 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 490, size: 64, elements: !2902)
!2902 = !{!2903, !2904}
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2901, file: !279, line: 492, baseType: !283, size: 32)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2901, file: !279, line: 493, baseType: !283, size: 32, offset: 32)
!2905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2906, size: 32)
!2906 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !279, line: 369, baseType: !2907)
!2907 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 360, size: 224, elements: !2908)
!2908 = !{!2909, !2910, !2911, !2912, !2913, !2914, !2915}
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2907, file: !279, line: 362, baseType: !283, size: 32)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2907, file: !279, line: 363, baseType: !283, size: 32, offset: 32)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2907, file: !279, line: 364, baseType: !283, size: 32, offset: 64)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2907, file: !279, line: 365, baseType: !283, size: 32, offset: 96)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2907, file: !279, line: 366, baseType: !283, size: 32, offset: 128)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2907, file: !279, line: 367, baseType: !283, size: 32, offset: 160)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2907, file: !279, line: 368, baseType: !283, size: 32, offset: 192)
!2916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1634, size: 32)
!2917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2918, size: 32)
!2918 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !279, line: 441, baseType: !2919)
!2919 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 430, size: 320, elements: !2920)
!2920 = !{!2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929}
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2919, file: !279, line: 432, baseType: !283, size: 32)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2919, file: !279, line: 433, baseType: !283, size: 32, offset: 32)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2919, file: !279, line: 434, baseType: !283, size: 32, offset: 64)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2919, file: !279, line: 435, baseType: !283, size: 32, offset: 96)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2919, file: !279, line: 436, baseType: !283, size: 32, offset: 128)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2919, file: !279, line: 437, baseType: !283, size: 32, offset: 160)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2919, file: !279, line: 438, baseType: !283, size: 32, offset: 192)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2919, file: !279, line: 439, baseType: !283, size: 32, offset: 224)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2919, file: !279, line: 440, baseType: !1135, size: 64, offset: 256)
!2930 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2931, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2932, retainedTypes: !2933, splitDebugInlining: false, nameTableKind: None)
!2931 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!2932 = !{!794}
!2933 = !{!2934, !162, !2942, !2948, !2959}
!2934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2935, size: 32)
!2935 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !497, line: 770, baseType: !2936)
!2936 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 764, size: 128, elements: !2937)
!2937 = !{!2938, !2939, !2940, !2941}
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2936, file: !497, line: 766, baseType: !283, size: 32)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2936, file: !497, line: 767, baseType: !283, size: 32, offset: 32)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2936, file: !497, line: 768, baseType: !283, size: 32, offset: 64)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2936, file: !497, line: 769, baseType: !501, size: 32, offset: 96)
!2942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2943, size: 32)
!2943 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !279, line: 494, baseType: !2944)
!2944 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 490, size: 64, elements: !2945)
!2945 = !{!2946, !2947}
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2944, file: !279, line: 492, baseType: !283, size: 32)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2944, file: !279, line: 493, baseType: !283, size: 32, offset: 32)
!2948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2949, size: 32)
!2949 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !279, line: 369, baseType: !2950)
!2950 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 360, size: 224, elements: !2951)
!2951 = !{!2952, !2953, !2954, !2955, !2956, !2957, !2958}
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2950, file: !279, line: 362, baseType: !283, size: 32)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2950, file: !279, line: 363, baseType: !283, size: 32, offset: 32)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2950, file: !279, line: 364, baseType: !283, size: 32, offset: 64)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2950, file: !279, line: 365, baseType: !283, size: 32, offset: 96)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2950, file: !279, line: 366, baseType: !283, size: 32, offset: 128)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2950, file: !279, line: 367, baseType: !283, size: 32, offset: 160)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2950, file: !279, line: 368, baseType: !283, size: 32, offset: 192)
!2959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 32)
!2960 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !279, line: 532, baseType: !2961)
!2961 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 500, size: 1088, elements: !2962)
!2962 = !{!2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2961, file: !279, line: 502, baseType: !283, size: 32)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2961, file: !279, line: 503, baseType: !283, size: 32, offset: 32)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2961, file: !279, line: 504, baseType: !283, size: 32, offset: 64)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2961, file: !279, line: 505, baseType: !283, size: 32, offset: 96)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2961, file: !279, line: 506, baseType: !283, size: 32, offset: 128)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2961, file: !279, line: 507, baseType: !283, size: 32, offset: 160)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2961, file: !279, line: 508, baseType: !283, size: 32, offset: 192)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2961, file: !279, line: 509, baseType: !162, size: 32, offset: 224)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2961, file: !279, line: 510, baseType: !283, size: 32, offset: 256)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2961, file: !279, line: 511, baseType: !283, size: 32, offset: 288)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2961, file: !279, line: 512, baseType: !822, size: 64, offset: 320)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2961, file: !279, line: 513, baseType: !283, size: 32, offset: 384)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2961, file: !279, line: 514, baseType: !283, size: 32, offset: 416)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2961, file: !279, line: 515, baseType: !283, size: 32, offset: 448)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2961, file: !279, line: 516, baseType: !162, size: 32, offset: 480)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2961, file: !279, line: 517, baseType: !283, size: 32, offset: 512)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2961, file: !279, line: 518, baseType: !283, size: 32, offset: 544)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2961, file: !279, line: 519, baseType: !822, size: 64, offset: 576)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2961, file: !279, line: 520, baseType: !283, size: 32, offset: 640)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2961, file: !279, line: 521, baseType: !283, size: 32, offset: 672)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2961, file: !279, line: 522, baseType: !283, size: 32, offset: 704)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2961, file: !279, line: 523, baseType: !162, size: 32, offset: 736)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2961, file: !279, line: 524, baseType: !283, size: 32, offset: 768)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2961, file: !279, line: 525, baseType: !283, size: 32, offset: 800)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2961, file: !279, line: 526, baseType: !822, size: 64, offset: 832)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2961, file: !279, line: 527, baseType: !283, size: 32, offset: 896)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2961, file: !279, line: 528, baseType: !283, size: 32, offset: 928)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2961, file: !279, line: 529, baseType: !822, size: 64, offset: 960)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2961, file: !279, line: 530, baseType: !283, size: 32, offset: 1024)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2961, file: !279, line: 531, baseType: !283, size: 32, offset: 1056)
!2993 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2994, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2995, splitDebugInlining: false, nameTableKind: None)
!2994 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!2995 = !{!102, !252}
!2996 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2997, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2998, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!2997 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!2998 = !{!2999, !3006, !30}
!2999 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3000, line: 14, baseType: !32, size: 32, elements: !3001)
!3000 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3001 = !{!3002, !3003, !3004, !3005}
!3002 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3003 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3004 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3005 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3006 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3000, line: 42, baseType: !32, size: 32, elements: !3007)
!3007 = !{!3008, !3009, !3010, !3011, !3012, !3013}
!3008 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3009 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3010 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3011 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3012 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3013 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3014 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3015, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!3015 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!3016 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3017, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3018, splitDebugInlining: false, nameTableKind: None)
!3017 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!3018 = !{!102, !107, !3019, !3034}
!3019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3020, size: 32)
!3020 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !3021)
!3021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !3022)
!3022 = !{!3023, !3029}
!3023 = !DIDerivedType(tag: DW_TAG_member, scope: !3021, file: !233, line: 38, baseType: !3024, size: 32)
!3024 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3021, file: !233, line: 38, size: 32, elements: !3025)
!3025 = !{!3026, !3028}
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3024, file: !233, line: 39, baseType: !3027, size: 32)
!3027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3021, size: 32)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3024, file: !233, line: 40, baseType: !3027, size: 32)
!3029 = !DIDerivedType(tag: DW_TAG_member, scope: !3021, file: !233, line: 42, baseType: !3030, size: 32, offset: 32)
!3030 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3021, file: !233, line: 42, size: 32, elements: !3031)
!3031 = !{!3032, !3033}
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3030, file: !233, line: 43, baseType: !3027, size: 32)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3030, file: !233, line: 44, baseType: !3027, size: 32)
!3034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3035, size: 32)
!3035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !3036)
!3036 = !{!3037, !3081, !3093, !3094, !3095, !3096, !3102, !3115}
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3035, file: !359, line: 247, baseType: !3038, size: 384)
!3038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !3039)
!3039 = !{!3040, !3050, !3057, !3058, !3059, !3068, !3069, !3070}
!3040 = !DIDerivedType(tag: DW_TAG_member, scope: !3038, file: !359, line: 60, baseType: !3041, size: 64)
!3041 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3038, file: !359, line: 60, size: 64, elements: !3042)
!3042 = !{!3043, !3044}
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3041, file: !359, line: 61, baseType: !3020, size: 64)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3041, file: !359, line: 62, baseType: !3045, size: 64)
!3045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !3046)
!3046 = !{!3047}
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3045, file: !384, line: 50, baseType: !3048, size: 64)
!3048 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3049, size: 64, elements: !389)
!3049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3045, size: 32)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3038, file: !359, line: 68, baseType: !3051, size: 32, offset: 64)
!3051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3052, size: 32)
!3052 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !3053)
!3053 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !3054)
!3054 = !{!3055}
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3053, file: !228, line: 232, baseType: !3056, size: 64)
!3056 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !3021)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3038, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3038, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!3059 = !DIDerivedType(tag: DW_TAG_member, scope: !3038, file: !359, line: 90, baseType: !3060, size: 16, offset: 112)
!3060 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3038, file: !359, line: 90, size: 16, elements: !3061)
!3061 = !{!3062, !3067}
!3062 = !DIDerivedType(tag: DW_TAG_member, scope: !3060, file: !359, line: 91, baseType: !3063, size: 16)
!3063 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3060, file: !359, line: 91, size: 16, elements: !3064)
!3064 = !{!3065, !3066}
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3063, file: !359, line: 96, baseType: !407, size: 8)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3063, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3060, file: !359, line: 100, baseType: !411, size: 16)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3038, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3038, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3038, file: !359, line: 131, baseType: !3071, size: 192, offset: 192)
!3071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !3072)
!3072 = !{!3073, !3074, !3080}
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3071, file: !228, line: 245, baseType: !3020, size: 64)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3071, file: !228, line: 246, baseType: !3075, size: 32, offset: 64)
!3075 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !3076)
!3076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3077, size: 32)
!3077 = !DISubroutineType(types: !3078)
!3078 = !{null, !3079}
!3079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3071, size: 32)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3071, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3035, file: !359, line: 250, baseType: !3082, size: 288, offset: 384)
!3082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !3083)
!3083 = !{!3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092}
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3082, file: !428, line: 26, baseType: !162, size: 32)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3082, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3082, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3082, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3082, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3082, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3082, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3082, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3082, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3035, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3035, file: !359, line: 256, baseType: !3052, size: 64, offset: 704)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3035, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3035, file: !359, line: 300, baseType: !3097, size: 96, offset: 800)
!3097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !3098)
!3098 = !{!3099, !3100, !3101}
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3097, file: !359, line: 153, baseType: !22, size: 32)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3097, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3097, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3035, file: !359, line: 325, baseType: !3103, size: 32, offset: 896)
!3103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3104, size: 32)
!3104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !3105)
!3105 = !{!3106, !3112, !3113}
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3104, file: !224, line: 5074, baseType: !3107, size: 96)
!3107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !3108)
!3108 = !{!3109, !3110, !3111}
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3107, file: !454, line: 57, baseType: !457, size: 32)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3107, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3107, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3104, file: !224, line: 5075, baseType: !3052, size: 64, offset: 96)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3104, file: !224, line: 5076, baseType: !3114, offset: 160)
!3114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3035, file: !359, line: 343, baseType: !3116, size: 64, offset: 928)
!3116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !3117)
!3117 = !{!3118, !3119}
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3116, file: !428, line: 63, baseType: !162, size: 32)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3116, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!3120 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3121, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3122, splitDebugInlining: false, nameTableKind: None)
!3121 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!3122 = !{!22, !102, !107}
!3123 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3124, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!3124 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!3125 = !{!"Ubuntu clang version 14.0.6"}
!3126 = !{i32 7, !"Dwarf Version", i32 4}
!3127 = !{i32 2, !"Debug Info Version", i32 3}
!3128 = !{i32 1, !"wchar_size", i32 4}
!3129 = !{i32 1, !"min_enum_size", i32 4}
!3130 = !{i32 1, !"branch-target-enforcement", i32 0}
!3131 = !{i32 1, !"sign-return-address", i32 0}
!3132 = !{i32 1, !"sign-return-address-all", i32 0}
!3133 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3134 = !{i32 7, !"frame-pointer", i32 2}
!3135 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3136, file: !3136, line: 26, type: !3137, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2423, retainedNodes: !250)
!3136 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3137 = !DISubroutineType(types: !3138)
!3138 = !{null}
!3139 = !DILocation(line: 28, column: 1, scope: !3135)
!3140 = !{i64 2155117518, i64 2155117538, i64 2155117601}
!3141 = !DILocation(line: 29, column: 1, scope: !3135)
!3142 = !{i64 2155117933, i64 2155117953, i64 2155118016}
!3143 = !DILocation(line: 30, column: 1, scope: !3135)
!3144 = !{i64 2155118352, i64 2155118372, i64 2155118435}
!3145 = !DILocation(line: 31, column: 1, scope: !3135)
!3146 = !{i64 2155118771, i64 2155118791, i64 2155118854}
!3147 = !DILocation(line: 33, column: 1, scope: !3135)
!3148 = !{i64 2155119063, i64 2155119083, i64 2155119146}
!3149 = !DILocation(line: 35, column: 1, scope: !3135)
!3150 = !{i64 2155119388, i64 2155119408, i64 2155119471}
!3151 = !DILocation(line: 50, column: 1, scope: !3135)
!3152 = !{i64 2155119815, i64 2155119835, i64 2155119898}
!3153 = !DILocation(line: 54, column: 1, scope: !3135)
!3154 = !{i64 2155120254, i64 2155120274, i64 2155120337}
!3155 = !DILocation(line: 61, column: 1, scope: !3135)
!3156 = !{i64 2155120571, i64 2155120591, i64 2155120654}
!3157 = !DILocation(line: 63, column: 1, scope: !3135)
!3158 = !{i64 2155120951, i64 2155120971, i64 2155121034}
!3159 = !DILocation(line: 64, column: 1, scope: !3135)
!3160 = !{i64 2155121473, i64 2155121493, i64 2155121556}
!3161 = !DILocation(line: 65, column: 1, scope: !3135)
!3162 = !{i64 2155121971, i64 2155121991, i64 2155122054}
!3163 = !DILocation(line: 66, column: 1, scope: !3135)
!3164 = !{i64 2155122453, i64 2155122473, i64 2155122536}
!3165 = !DILocation(line: 67, column: 1, scope: !3135)
!3166 = !{i64 2155122960, i64 2155122980, i64 2155123043}
!3167 = !DILocation(line: 68, column: 1, scope: !3135)
!3168 = !{i64 2155123448, i64 2155123468, i64 2155123531}
!3169 = !DILocation(line: 70, column: 1, scope: !3135)
!3170 = !{i64 2155123916, i64 2155123936, i64 2155123999}
!3171 = !DILocation(line: 71, column: 1, scope: !3135)
!3172 = !{i64 2155124358, i64 2155124378, i64 2155124441}
!3173 = !DILocation(line: 72, column: 1, scope: !3135)
!3174 = !{i64 2155124816, i64 2155124836, i64 2155124899}
!3175 = !DILocation(line: 79, column: 1, scope: !3135)
!3176 = !{i64 2155125270, i64 2155125290, i64 2155125353}
!3177 = !DILocation(line: 80, column: 1, scope: !3135)
!3178 = !{i64 2155125781, i64 2155125801, i64 2155125864}
!3179 = !DILocation(line: 82, column: 1, scope: !3135)
!3180 = !{i64 2155130333, i64 2155130353, i64 2155130416}
!3181 = !DILocation(line: 97, column: 1, scope: !3135)
!3182 = !{i64 2155130670, i64 2155130690, i64 2155130753}
!3183 = !DILocation(line: 99, column: 1, scope: !3135)
!3184 = !{i64 2155130888, i64 2155130908, i64 2155130971}
!3185 = !DILocation(line: 102, column: 1, scope: !3135)
!3186 = !{i64 2155131145, i64 2155131165, i64 2155131228}
!3187 = !DILocation(line: 105, column: 1, scope: !3135)
!3188 = !{i64 2155131385, i64 2155131405, i64 2155131468}
!3189 = !DILocation(line: 115, column: 1, scope: !3135)
!3190 = !{i64 2155131724, i64 2155131744, i64 2155131807}
!3191 = !DILocation(line: 118, column: 1, scope: !3135)
!3192 = !{i64 2155132068, i64 2155132088, i64 2155132151}
!3193 = !DILocation(line: 32, column: 1, scope: !3194)
!3194 = !DILexicalBlockFile(scope: !3135, file: !3195, discriminator: 0)
!3195 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3196 = !{i64 2155132424, i64 2155132444, i64 2155132507}
!3197 = !DILocation(line: 33, column: 1, scope: !3194)
!3198 = !{i64 2155132936, i64 2155132956, i64 2155133019}
!3199 = !DILocation(line: 53, column: 1, scope: !3194)
!3200 = !{i64 2155133444, i64 2155133464, i64 2155133527}
!3201 = !DILocation(line: 54, column: 1, scope: !3194)
!3202 = !{i64 2155133862, i64 2155133882, i64 2155133945}
!3203 = !DILocation(line: 55, column: 1, scope: !3194)
!3204 = !{i64 2155134280, i64 2155134300, i64 2155134363}
!3205 = !DILocation(line: 56, column: 1, scope: !3194)
!3206 = !{i64 2155134698, i64 2155134718, i64 2155134781}
!3207 = !DILocation(line: 57, column: 1, scope: !3194)
!3208 = !{i64 2155135116, i64 2155135136, i64 2155135199}
!3209 = !DILocation(line: 58, column: 1, scope: !3194)
!3210 = !{i64 2155135534, i64 2155135554, i64 2155135617}
!3211 = !DILocation(line: 59, column: 1, scope: !3194)
!3212 = !{i64 2155135952, i64 2155135972, i64 2155136035}
!3213 = !DILocation(line: 60, column: 1, scope: !3194)
!3214 = !{i64 2155136376, i64 2155136396, i64 2155136459}
!3215 = !DILocation(line: 61, column: 1, scope: !3194)
!3216 = !{i64 2155136693, i64 2155136713, i64 2155136776}
!3217 = !DILocation(line: 70, column: 1, scope: !3194)
!3218 = !{i64 2155136922, i64 2155136942, i64 2155137005}
!3219 = !DILocation(line: 72, column: 1, scope: !3194)
!3220 = !{i64 2155137254, i64 2155137274, i64 2155137337}
!3221 = !DILocation(line: 73, column: 1, scope: !3194)
!3222 = !{i64 2155137704, i64 2155137724, i64 2155137787}
!3223 = !DILocation(line: 74, column: 1, scope: !3194)
!3224 = !{i64 2155138154, i64 2155138174, i64 2155138237}
!3225 = !DILocation(line: 75, column: 1, scope: !3194)
!3226 = !{i64 2155138604, i64 2155138624, i64 2155138687}
!3227 = !DILocation(line: 76, column: 1, scope: !3194)
!3228 = !{i64 2155139054, i64 2155139074, i64 2155139137}
!3229 = !DILocation(line: 77, column: 1, scope: !3194)
!3230 = !{i64 2155139504, i64 2155139524, i64 2155139587}
!3231 = !DILocation(line: 78, column: 1, scope: !3194)
!3232 = !{i64 2155144015, i64 2155144035, i64 2155144098}
!3233 = !DILocation(line: 79, column: 1, scope: !3194)
!3234 = !{i64 2155144465, i64 2155144485, i64 2155144548}
!3235 = !DILocation(line: 80, column: 1, scope: !3194)
!3236 = !{i64 2155144918, i64 2155144938, i64 2155145001}
!3237 = !DILocation(line: 84, column: 1, scope: !3194)
!3238 = !{i64 2155145250, i64 2155145270, i64 2155145333}
!3239 = !DILocation(line: 91, column: 1, scope: !3194)
!3240 = !{i64 2155145647, i64 2155145667, i64 2155145730}
!3241 = !DILocation(line: 93, column: 1, scope: !3194)
!3242 = !{i64 2155146014, i64 2155146034, i64 2155146097}
!3243 = !DILocation(line: 106, column: 1, scope: !3194)
!3244 = !{i64 2155146284, i64 2155146304, i64 2155146367}
!3245 = !DILocation(line: 11, column: 1, scope: !3246)
!3246 = !DILexicalBlockFile(scope: !3135, file: !3247, discriminator: 0)
!3247 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3248 = distinct !DISubprogram(name: "serial_cb", scope: !209, file: !209, line: 31, type: !204, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3249)
!3249 = !{!3250, !3251, !3252}
!3250 = !DILocalVariable(name: "dev", arg: 1, scope: !3248, file: !209, line: 31, type: !117)
!3251 = !DILocalVariable(name: "user_data", arg: 2, scope: !3248, file: !209, line: 31, type: !102)
!3252 = !DILocalVariable(name: "c", scope: !3248, file: !209, line: 33, type: !133)
!3253 = !DILocation(line: 0, scope: !3248)
!3254 = !DILocation(line: 33, column: 2, scope: !3248)
!3255 = !DILocation(line: 35, column: 7, scope: !3256)
!3256 = distinct !DILexicalBlock(scope: !3248, file: !209, line: 35, column: 6)
!3257 = !DILocation(line: 35, column: 6, scope: !3248)
!3258 = !DILocation(line: 39, column: 9, scope: !3248)
!3259 = !DILocation(line: 39, column: 2, scope: !3248)
!3260 = !DILocation(line: 41, column: 3, scope: !3261)
!3261 = distinct !DILexicalBlock(scope: !3248, file: !209, line: 39, column: 38)
!3262 = !DILocation(line: 43, column: 8, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3261, file: !209, line: 43, column: 7)
!3264 = !DILocation(line: 43, column: 10, scope: !3263)
!3265 = !DILocation(line: 43, column: 18, scope: !3263)
!3266 = !DILocation(line: 45, column: 4, scope: !3267)
!3267 = distinct !DILexicalBlock(scope: !3263, file: !209, line: 43, column: 51)
!3268 = !DILocation(line: 45, column: 23, scope: !3267)
!3269 = !DILocation(line: 48, column: 4, scope: !3267)
!3270 = !DILocation(line: 51, column: 15, scope: !3267)
!3271 = !DILocation(line: 52, column: 3, scope: !3267)
!3272 = !DILocation(line: 52, column: 25, scope: !3273)
!3273 = distinct !DILexicalBlock(scope: !3263, file: !209, line: 52, column: 14)
!3274 = !DILocation(line: 52, column: 14, scope: !3263)
!3275 = !DILocation(line: 53, column: 21, scope: !3276)
!3276 = distinct !DILexicalBlock(scope: !3273, file: !209, line: 52, column: 49)
!3277 = !DILocation(line: 53, column: 4, scope: !3276)
!3278 = !DILocation(line: 53, column: 25, scope: !3276)
!3279 = !DILocation(line: 54, column: 3, scope: !3276)
!3280 = distinct !{!3280, !3259, !3281}
!3281 = !DILocation(line: 56, column: 2, scope: !3248)
!3282 = !DILocation(line: 57, column: 1, scope: !3248)
!3283 = distinct !DISubprogram(name: "uart_irq_update", scope: !3284, file: !3284, line: 360, type: !151, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3285)
!3284 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!3285 = !{!3286}
!3286 = !DILocalVariable(name: "dev", arg: 1, scope: !3283, file: !3284, line: 360, type: !117)
!3287 = !DILocation(line: 0, scope: !3283)
!3288 = !DILocation(line: 368, column: 2, scope: !3289)
!3289 = distinct !DILexicalBlock(scope: !3283, file: !3284, line: 368, column: 2)
!3290 = !{i64 2155099824}
!3291 = !DILocation(line: 369, column: 9, scope: !3283)
!3292 = !DILocation(line: 369, column: 2, scope: !3283)
!3293 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !111, file: !111, line: 1024, type: !151, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3294)
!3294 = !{!3295, !3296}
!3295 = !DILocalVariable(name: "dev", arg: 1, scope: !3293, file: !111, line: 1024, type: !117)
!3296 = !DILocalVariable(name: "api", scope: !3293, file: !111, line: 1027, type: !108)
!3297 = !DILocation(line: 0, scope: !3293)
!3298 = !DILocation(line: 1028, column: 40, scope: !3293)
!3299 = !DILocation(line: 1030, column: 11, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !3293, file: !111, line: 1030, column: 6)
!3301 = !DILocation(line: 1030, column: 24, scope: !3300)
!3302 = !DILocation(line: 1030, column: 6, scope: !3293)
!3303 = !DILocation(line: 1033, column: 9, scope: !3293)
!3304 = !DILocation(line: 1033, column: 2, scope: !3293)
!3305 = !DILocation(line: 1038, column: 1, scope: !3293)
!3306 = distinct !DISubprogram(name: "uart_fifo_read", scope: !111, file: !111, line: 785, type: !180, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3307)
!3307 = !{!3308, !3309, !3310, !3311}
!3308 = !DILocalVariable(name: "dev", arg: 1, scope: !3306, file: !111, line: 785, type: !117)
!3309 = !DILocalVariable(name: "rx_data", arg: 2, scope: !3306, file: !111, line: 785, type: !182)
!3310 = !DILocalVariable(name: "size", arg: 3, scope: !3306, file: !111, line: 786, type: !183)
!3311 = !DILocalVariable(name: "api", scope: !3306, file: !111, line: 789, type: !108)
!3312 = !DILocation(line: 0, scope: !3306)
!3313 = !DILocation(line: 790, column: 40, scope: !3306)
!3314 = !DILocation(line: 792, column: 11, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3306, file: !111, line: 792, column: 6)
!3316 = !DILocation(line: 792, column: 21, scope: !3315)
!3317 = !DILocation(line: 792, column: 6, scope: !3306)
!3318 = !DILocation(line: 796, column: 9, scope: !3306)
!3319 = !DILocation(line: 796, column: 2, scope: !3306)
!3320 = !DILocation(line: 803, column: 1, scope: !3306)
!3321 = distinct !DISubprogram(name: "k_msgq_put", scope: !3322, file: !3322, line: 1129, type: !3323, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3330)
!3322 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!3323 = !DISubroutineType(types: !3324)
!3324 = !{!107, !3325, !13, !3326}
!3325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 32)
!3326 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !3327)
!3327 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !3328)
!3328 = !{!3329}
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3327, file: !104, line: 66, baseType: !103, size: 64)
!3330 = !{!3331, !3332, !3333}
!3331 = !DILocalVariable(name: "msgq", arg: 1, scope: !3321, file: !3322, line: 1129, type: !3325)
!3332 = !DILocalVariable(name: "data", arg: 2, scope: !3321, file: !3322, line: 1129, type: !13)
!3333 = !DILocalVariable(name: "timeout", arg: 3, scope: !3321, file: !3322, line: 1129, type: !3326)
!3334 = !DILocation(line: 0, scope: !3321)
!3335 = !DILocation(line: 1139, column: 2, scope: !3336)
!3336 = distinct !DILexicalBlock(scope: !3321, file: !3322, line: 1139, column: 2)
!3337 = !{i64 2154842754}
!3338 = !DILocation(line: 1140, column: 9, scope: !3321)
!3339 = !DILocation(line: 1140, column: 2, scope: !3321)
!3340 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !111, file: !111, line: 1136, type: !151, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3341)
!3341 = !{!3342, !3343}
!3342 = !DILocalVariable(name: "dev", arg: 1, scope: !3340, file: !111, line: 1136, type: !117)
!3343 = !DILocalVariable(name: "api", scope: !3340, file: !111, line: 1139, type: !108)
!3344 = !DILocation(line: 0, scope: !3340)
!3345 = !DILocation(line: 1140, column: 40, scope: !3340)
!3346 = !DILocation(line: 1142, column: 11, scope: !3347)
!3347 = distinct !DILexicalBlock(scope: !3340, file: !111, line: 1142, column: 6)
!3348 = !DILocation(line: 1142, column: 22, scope: !3347)
!3349 = !DILocation(line: 1142, column: 6, scope: !3340)
!3350 = !DILocation(line: 1145, column: 9, scope: !3340)
!3351 = !DILocation(line: 1145, column: 2, scope: !3340)
!3352 = !DILocation(line: 1150, column: 1, scope: !3340)
!3353 = distinct !DISubprogram(name: "print_uart", scope: !209, file: !209, line: 62, type: !3354, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3356)
!3354 = !DISubroutineType(types: !3355)
!3355 = !{null, !256}
!3356 = !{!3357, !3358, !3359}
!3357 = !DILocalVariable(name: "buf", arg: 1, scope: !3353, file: !209, line: 62, type: !256)
!3358 = !DILocalVariable(name: "msg_len", scope: !3353, file: !209, line: 64, type: !107)
!3359 = !DILocalVariable(name: "i", scope: !3360, file: !209, line: 66, type: !107)
!3360 = distinct !DILexicalBlock(scope: !3353, file: !209, line: 66, column: 2)
!3361 = !DILocation(line: 0, scope: !3353)
!3362 = !DILocation(line: 64, column: 16, scope: !3353)
!3363 = !DILocation(line: 0, scope: !3360)
!3364 = !DILocation(line: 66, column: 20, scope: !3365)
!3365 = distinct !DILexicalBlock(scope: !3360, file: !209, line: 66, column: 2)
!3366 = !DILocation(line: 66, column: 2, scope: !3360)
!3367 = !DILocation(line: 69, column: 1, scope: !3353)
!3368 = !DILocation(line: 67, column: 27, scope: !3369)
!3369 = distinct !DILexicalBlock(scope: !3365, file: !209, line: 66, column: 36)
!3370 = !DILocation(line: 67, column: 3, scope: !3369)
!3371 = !DILocation(line: 66, column: 32, scope: !3365)
!3372 = distinct !{!3372, !3366, !3373}
!3373 = !DILocation(line: 68, column: 2, scope: !3360)
!3374 = distinct !DISubprogram(name: "uart_poll_out", scope: !3284, file: !3284, line: 95, type: !147, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3375)
!3375 = !{!3376, !3377}
!3376 = !DILocalVariable(name: "dev", arg: 1, scope: !3374, file: !3284, line: 95, type: !117)
!3377 = !DILocalVariable(name: "out_char", arg: 2, scope: !3374, file: !3284, line: 95, type: !134)
!3378 = !DILocation(line: 0, scope: !3374)
!3379 = !DILocation(line: 105, column: 2, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !3374, file: !3284, line: 105, column: 2)
!3381 = !{i64 2155099076}
!3382 = !DILocation(line: 106, column: 2, scope: !3374)
!3383 = !DILocation(line: 107, column: 1, scope: !3374)
!3384 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !111, file: !111, line: 574, type: !147, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3385)
!3385 = !{!3386, !3387, !3388}
!3386 = !DILocalVariable(name: "dev", arg: 1, scope: !3384, file: !111, line: 574, type: !117)
!3387 = !DILocalVariable(name: "out_char", arg: 2, scope: !3384, file: !111, line: 575, type: !134)
!3388 = !DILocalVariable(name: "api", scope: !3384, file: !111, line: 577, type: !108)
!3389 = !DILocation(line: 0, scope: !3384)
!3390 = !DILocation(line: 578, column: 40, scope: !3384)
!3391 = !DILocation(line: 580, column: 7, scope: !3384)
!3392 = !DILocation(line: 580, column: 2, scope: !3384)
!3393 = !DILocation(line: 581, column: 1, scope: !3384)
!3394 = distinct !DISubprogram(name: "main", scope: !209, file: !209, line: 71, type: !3137, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3395)
!3395 = !{!3396}
!3396 = !DILocalVariable(name: "tx_buf", scope: !3394, file: !209, line: 73, type: !218)
!3397 = !DILocation(line: 73, column: 2, scope: !3394)
!3398 = !DILocation(line: 73, column: 7, scope: !3394)
!3399 = !DILocation(line: 75, column: 7, scope: !3400)
!3400 = distinct !DILexicalBlock(scope: !3394, file: !209, line: 75, column: 6)
!3401 = !DILocation(line: 75, column: 6, scope: !3394)
!3402 = !DILocation(line: 76, column: 3, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3400, file: !209, line: 75, column: 34)
!3404 = !DILocation(line: 77, column: 3, scope: !3403)
!3405 = !DILocation(line: 81, column: 2, scope: !3394)
!3406 = !DILocation(line: 82, column: 2, scope: !3394)
!3407 = !DILocation(line: 84, column: 2, scope: !3394)
!3408 = !DILocation(line: 85, column: 2, scope: !3394)
!3409 = !DILocation(line: 88, column: 9, scope: !3394)
!3410 = !DILocation(line: 88, column: 52, scope: !3394)
!3411 = !DILocation(line: 88, column: 2, scope: !3394)
!3412 = !DILocation(line: 89, column: 3, scope: !3413)
!3413 = distinct !DILexicalBlock(scope: !3394, file: !209, line: 88, column: 58)
!3414 = !DILocation(line: 90, column: 3, scope: !3413)
!3415 = !DILocation(line: 91, column: 3, scope: !3413)
!3416 = distinct !{!3416, !3411, !3417}
!3417 = !DILocation(line: 92, column: 2, scope: !3394)
!3418 = !DILocation(line: 93, column: 1, scope: !3394)
!3419 = distinct !DISubprogram(name: "device_is_ready", scope: !3420, file: !3420, line: 47, type: !3421, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3423)
!3420 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!3421 = !DISubroutineType(types: !3422)
!3422 = !{!136, !117}
!3423 = !{!3424}
!3424 = !DILocalVariable(name: "dev", arg: 1, scope: !3419, file: !3420, line: 47, type: !117)
!3425 = !DILocation(line: 0, scope: !3419)
!3426 = !DILocation(line: 55, column: 2, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3419, file: !3420, line: 55, column: 2)
!3428 = !{i64 2155015831}
!3429 = !DILocation(line: 56, column: 9, scope: !3419)
!3430 = !DILocation(line: 56, column: 2, scope: !3419)
!3431 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !111, file: !111, line: 1163, type: !200, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3432)
!3432 = !{!3433, !3434, !3435, !3436}
!3433 = !DILocalVariable(name: "dev", arg: 1, scope: !3431, file: !111, line: 1163, type: !117)
!3434 = !DILocalVariable(name: "cb", arg: 2, scope: !3431, file: !111, line: 1164, type: !202)
!3435 = !DILocalVariable(name: "user_data", arg: 3, scope: !3431, file: !111, line: 1165, type: !102)
!3436 = !DILocalVariable(name: "api", scope: !3431, file: !111, line: 1168, type: !108)
!3437 = !DILocation(line: 0, scope: !3431)
!3438 = !DILocation(line: 1169, column: 40, scope: !3431)
!3439 = !DILocation(line: 1171, column: 11, scope: !3440)
!3440 = distinct !DILexicalBlock(scope: !3431, file: !111, line: 1171, column: 6)
!3441 = !DILocation(line: 1171, column: 20, scope: !3440)
!3442 = !DILocation(line: 1171, column: 29, scope: !3440)
!3443 = !DILocation(line: 1171, column: 46, scope: !3440)
!3444 = !DILocation(line: 1171, column: 6, scope: !3431)
!3445 = !DILocation(line: 1172, column: 3, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3440, file: !111, line: 1171, column: 56)
!3447 = !DILocation(line: 1173, column: 2, scope: !3446)
!3448 = !DILocation(line: 1179, column: 1, scope: !3431)
!3449 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !3284, file: !3284, line: 241, type: !186, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3450)
!3450 = !{!3451}
!3451 = !DILocalVariable(name: "dev", arg: 1, scope: !3449, file: !3284, line: 241, type: !117)
!3452 = !DILocation(line: 0, scope: !3449)
!3453 = !DILocation(line: 250, column: 2, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !3449, file: !3284, line: 250, column: 2)
!3455 = !{i64 2155099484}
!3456 = !DILocation(line: 251, column: 2, scope: !3449)
!3457 = !DILocation(line: 252, column: 1, scope: !3449)
!3458 = distinct !DISubprogram(name: "k_msgq_get", scope: !3322, file: !3322, line: 1147, type: !3459, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3461)
!3459 = !DISubroutineType(types: !3460)
!3460 = !{!107, !3325, !102, !3326}
!3461 = !{!3462, !3463, !3464}
!3462 = !DILocalVariable(name: "msgq", arg: 1, scope: !3458, file: !3322, line: 1147, type: !3325)
!3463 = !DILocalVariable(name: "data", arg: 2, scope: !3458, file: !3322, line: 1147, type: !102)
!3464 = !DILocalVariable(name: "timeout", arg: 3, scope: !3458, file: !3322, line: 1147, type: !3326)
!3465 = !DILocation(line: 0, scope: !3458)
!3466 = !DILocation(line: 1157, column: 2, scope: !3467)
!3467 = distinct !DILexicalBlock(scope: !3458, file: !3322, line: 1157, column: 2)
!3468 = !{i64 2154842822}
!3469 = !DILocation(line: 1158, column: 9, scope: !3458)
!3470 = !DILocation(line: 1158, column: 2, scope: !3458)
!3471 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !111, file: !111, line: 934, type: !186, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3472)
!3472 = !{!3473, !3474}
!3473 = !DILocalVariable(name: "dev", arg: 1, scope: !3471, file: !111, line: 934, type: !117)
!3474 = !DILocalVariable(name: "api", scope: !3471, file: !111, line: 937, type: !108)
!3475 = !DILocation(line: 0, scope: !3471)
!3476 = !DILocation(line: 938, column: 40, scope: !3471)
!3477 = !DILocation(line: 940, column: 11, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3471, file: !111, line: 940, column: 6)
!3479 = !DILocation(line: 940, column: 25, scope: !3478)
!3480 = !DILocation(line: 940, column: 6, scope: !3471)
!3481 = !DILocation(line: 941, column: 3, scope: !3482)
!3482 = distinct !DILexicalBlock(scope: !3478, file: !111, line: 940, column: 34)
!3483 = !DILocation(line: 942, column: 2, scope: !3482)
!3484 = !DILocation(line: 946, column: 1, scope: !3471)
!3485 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !120, file: !120, line: 730, type: !3421, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3486)
!3486 = !{!3487}
!3487 = !DILocalVariable(name: "dev", arg: 1, scope: !3485, file: !120, line: 730, type: !117)
!3488 = !DILocation(line: 0, scope: !3485)
!3489 = !DILocation(line: 732, column: 9, scope: !3485)
!3490 = !DILocation(line: 732, column: 2, scope: !3485)
!3491 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !268, file: !268, line: 45, type: !270, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3492)
!3492 = !{!3493}
!3493 = !DILocalVariable(name: "c", arg: 1, scope: !3491, file: !268, line: 45, type: !107)
!3494 = !DILocation(line: 0, scope: !3491)
!3495 = !DILocation(line: 50, column: 2, scope: !3491)
!3496 = distinct !DISubprogram(name: "__printk_hook_install", scope: !268, file: !268, line: 63, type: !3497, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3499)
!3497 = !DISubroutineType(types: !3498)
!3498 = !{null, !269}
!3499 = !{!3500}
!3500 = !DILocalVariable(name: "fn", arg: 1, scope: !3496, file: !268, line: 63, type: !269)
!3501 = !DILocation(line: 0, scope: !3496)
!3502 = !DILocation(line: 65, column: 12, scope: !3496)
!3503 = !DILocation(line: 66, column: 1, scope: !3496)
!3504 = distinct !DISubprogram(name: "__printk_get_hook", scope: !268, file: !268, line: 76, type: !3505, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !250)
!3505 = !DISubroutineType(types: !3506)
!3506 = !{!102}
!3507 = !DILocation(line: 78, column: 9, scope: !3504)
!3508 = !DILocation(line: 78, column: 2, scope: !3504)
!3509 = distinct !DISubprogram(name: "vprintk", scope: !268, file: !268, line: 113, type: !3510, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3519)
!3510 = !DISubroutineType(types: !3511)
!3511 = !{null, !123, !3512}
!3512 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3513, line: 99, baseType: !3514)
!3513 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3514 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3513, line: 40, baseType: !3515)
!3515 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !268, baseType: !3516)
!3516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3517)
!3517 = !{!3518}
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3516, file: !268, line: 79, baseType: !102, size: 32)
!3519 = !{!3520, !3521, !3522}
!3520 = !DILocalVariable(name: "fmt", arg: 1, scope: !3509, file: !268, line: 113, type: !123)
!3521 = !DILocalVariable(name: "ap", arg: 2, scope: !3509, file: !268, line: 113, type: !3512)
!3522 = !DILocalVariable(name: "ctx", scope: !3523, file: !268, line: 121, type: !3525)
!3523 = distinct !DILexicalBlock(scope: !3524, file: !268, line: 120, column: 27)
!3524 = distinct !DILexicalBlock(scope: !3509, file: !268, line: 120, column: 6)
!3525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !268, line: 81, size: 32, elements: !3526)
!3526 = !{!3527, !3528}
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3525, file: !268, line: 85, baseType: !32, size: 32)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3525, file: !268, line: 86, baseType: !3529, offset: 32)
!3529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, elements: !2457)
!3530 = !DILocation(line: 0, scope: !3509)
!3531 = !DILocation(line: 148, column: 3, scope: !3532)
!3532 = distinct !DILexicalBlock(scope: !3524, file: !268, line: 138, column: 9)
!3533 = !DILocation(line: 155, column: 1, scope: !3509)
!3534 = distinct !DISubprogram(name: "char_out", scope: !268, file: !268, line: 107, type: !3535, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3537)
!3535 = !DISubroutineType(types: !3536)
!3536 = !{!107, !107, !102}
!3537 = !{!3538, !3539}
!3538 = !DILocalVariable(name: "c", arg: 1, scope: !3534, file: !268, line: 107, type: !107)
!3539 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3534, file: !268, line: 107, type: !102)
!3540 = !DILocation(line: 0, scope: !3534)
!3541 = !DILocation(line: 110, column: 9, scope: !3534)
!3542 = !DILocation(line: 110, column: 2, scope: !3534)
!3543 = distinct !DISubprogram(name: "cbvprintf", scope: !3544, file: !3544, line: 739, type: !3545, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3551)
!3544 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3545 = !DISubroutineType(types: !3546)
!3546 = !{!107, !3547, !102, !123, !3512}
!3547 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3544, line: 297, baseType: !3548)
!3548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3549, size: 32)
!3549 = !DISubroutineType(types: !3550)
!3550 = !{!107, null}
!3551 = !{!3552, !3553, !3554, !3555}
!3552 = !DILocalVariable(name: "out", arg: 1, scope: !3543, file: !3544, line: 739, type: !3547)
!3553 = !DILocalVariable(name: "ctx", arg: 2, scope: !3543, file: !3544, line: 739, type: !102)
!3554 = !DILocalVariable(name: "format", arg: 3, scope: !3543, file: !3544, line: 739, type: !123)
!3555 = !DILocalVariable(name: "ap", arg: 4, scope: !3543, file: !3544, line: 739, type: !3512)
!3556 = !DILocation(line: 0, scope: !3543)
!3557 = !DILocation(line: 741, column: 9, scope: !3543)
!3558 = !DILocation(line: 741, column: 2, scope: !3543)
!3559 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !268, file: !268, line: 157, type: !3560, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3562)
!3560 = !DISubroutineType(types: !3561)
!3561 = !{null, !256, !252}
!3562 = !{!3563, !3564, !3565}
!3563 = !DILocalVariable(name: "c", arg: 1, scope: !3559, file: !268, line: 157, type: !256)
!3564 = !DILocalVariable(name: "n", arg: 2, scope: !3559, file: !268, line: 157, type: !252)
!3565 = !DILocalVariable(name: "i", scope: !3559, file: !268, line: 159, type: !252)
!3566 = !DILocation(line: 0, scope: !3559)
!3567 = !DILocation(line: 164, column: 16, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3569, file: !268, line: 164, column: 2)
!3569 = distinct !DILexicalBlock(scope: !3559, file: !268, line: 164, column: 2)
!3570 = !DILocation(line: 164, column: 2, scope: !3569)
!3571 = !DILocation(line: 165, column: 3, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !3568, file: !268, line: 164, column: 26)
!3573 = !DILocation(line: 165, column: 13, scope: !3572)
!3574 = !DILocation(line: 164, column: 22, scope: !3568)
!3575 = distinct !{!3575, !3570, !3576}
!3576 = !DILocation(line: 166, column: 2, scope: !3569)
!3577 = !DILocation(line: 171, column: 1, scope: !3559)
!3578 = distinct !DISubprogram(name: "printk", scope: !268, file: !268, line: 203, type: !3579, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3581)
!3579 = !DISubroutineType(types: !3580)
!3580 = !{null, !123, null}
!3581 = !{!3582, !3583}
!3582 = !DILocalVariable(name: "fmt", arg: 1, scope: !3578, file: !268, line: 203, type: !123)
!3583 = !DILocalVariable(name: "ap", scope: !3578, file: !268, line: 205, type: !3512)
!3584 = !DILocation(line: 0, scope: !3578)
!3585 = !DILocation(line: 205, column: 2, scope: !3578)
!3586 = !DILocation(line: 205, column: 10, scope: !3578)
!3587 = !DILocation(line: 207, column: 2, scope: !3578)
!3588 = !DILocation(line: 209, column: 2, scope: !3578)
!3589 = !DILocation(line: 211, column: 2, scope: !3578)
!3590 = !DILocation(line: 212, column: 1, scope: !3578)
!3591 = distinct !DISubprogram(name: "snprintk", scope: !268, file: !268, line: 239, type: !3592, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3594)
!3592 = !DISubroutineType(types: !3593)
!3593 = !{!107, !256, !252, !123, null}
!3594 = !{!3595, !3596, !3597, !3598, !3599}
!3595 = !DILocalVariable(name: "str", arg: 1, scope: !3591, file: !268, line: 239, type: !256)
!3596 = !DILocalVariable(name: "size", arg: 2, scope: !3591, file: !268, line: 239, type: !252)
!3597 = !DILocalVariable(name: "fmt", arg: 3, scope: !3591, file: !268, line: 239, type: !123)
!3598 = !DILocalVariable(name: "ap", scope: !3591, file: !268, line: 241, type: !3512)
!3599 = !DILocalVariable(name: "ret", scope: !3591, file: !268, line: 242, type: !107)
!3600 = !DILocation(line: 0, scope: !3591)
!3601 = !DILocation(line: 241, column: 2, scope: !3591)
!3602 = !DILocation(line: 241, column: 10, scope: !3591)
!3603 = !DILocation(line: 244, column: 2, scope: !3591)
!3604 = !DILocation(line: 245, column: 8, scope: !3591)
!3605 = !DILocation(line: 246, column: 2, scope: !3591)
!3606 = !DILocation(line: 249, column: 1, scope: !3591)
!3607 = !DILocation(line: 248, column: 2, scope: !3591)
!3608 = distinct !DISubprogram(name: "vsnprintk", scope: !268, file: !268, line: 251, type: !3609, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3611)
!3609 = !DISubroutineType(types: !3610)
!3610 = !{!107, !256, !252, !123, !3512}
!3611 = !{!3612, !3613, !3614, !3615, !3616}
!3612 = !DILocalVariable(name: "str", arg: 1, scope: !3608, file: !268, line: 251, type: !256)
!3613 = !DILocalVariable(name: "size", arg: 2, scope: !3608, file: !268, line: 251, type: !252)
!3614 = !DILocalVariable(name: "fmt", arg: 3, scope: !3608, file: !268, line: 251, type: !123)
!3615 = !DILocalVariable(name: "ap", arg: 4, scope: !3608, file: !268, line: 251, type: !3512)
!3616 = !DILocalVariable(name: "ctx", scope: !3608, file: !268, line: 253, type: !3617)
!3617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !268, line: 217, size: 96, elements: !3618)
!3618 = !{!3619, !3620, !3621}
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3617, file: !268, line: 218, baseType: !256, size: 32)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3617, file: !268, line: 219, baseType: !107, size: 32, offset: 32)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3617, file: !268, line: 220, baseType: !107, size: 32, offset: 64)
!3622 = !DILocation(line: 0, scope: !3608)
!3623 = !DILocation(line: 253, column: 2, scope: !3608)
!3624 = !DILocation(line: 253, column: 21, scope: !3608)
!3625 = !DILocation(line: 253, column: 27, scope: !3608)
!3626 = !DILocation(line: 255, column: 2, scope: !3608)
!3627 = !DILocation(line: 257, column: 10, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3608, file: !268, line: 257, column: 6)
!3629 = !DILocation(line: 257, column: 22, scope: !3628)
!3630 = !DILocation(line: 257, column: 16, scope: !3628)
!3631 = !DILocation(line: 257, column: 6, scope: !3608)
!3632 = !DILocation(line: 258, column: 3, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3628, file: !268, line: 257, column: 27)
!3634 = !DILocation(line: 258, column: 18, scope: !3633)
!3635 = !DILocation(line: 259, column: 2, scope: !3633)
!3636 = !DILocation(line: 262, column: 1, scope: !3608)
!3637 = !DILocation(line: 261, column: 2, scope: !3608)
!3638 = distinct !DISubprogram(name: "str_out", scope: !268, file: !268, line: 223, type: !3639, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3642)
!3639 = !DISubroutineType(types: !3640)
!3640 = !{!107, !107, !3641}
!3641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3617, size: 32)
!3642 = !{!3643, !3644}
!3643 = !DILocalVariable(name: "c", arg: 1, scope: !3638, file: !268, line: 223, type: !107)
!3644 = !DILocalVariable(name: "ctx", arg: 2, scope: !3638, file: !268, line: 223, type: !3641)
!3645 = !DILocation(line: 0, scope: !3638)
!3646 = !DILocation(line: 225, column: 11, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3638, file: !268, line: 225, column: 6)
!3648 = !DILocation(line: 225, column: 15, scope: !3647)
!3649 = !DILocation(line: 0, scope: !3647)
!3650 = !DILocation(line: 225, column: 23, scope: !3647)
!3651 = !DILocation(line: 225, column: 45, scope: !3647)
!3652 = !DILocation(line: 225, column: 37, scope: !3647)
!3653 = !DILocation(line: 225, column: 6, scope: !3638)
!3654 = !DILocation(line: 226, column: 8, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3647, file: !268, line: 225, column: 50)
!3656 = !DILocation(line: 226, column: 13, scope: !3655)
!3657 = !DILocation(line: 227, column: 3, scope: !3655)
!3658 = !DILocation(line: 230, column: 29, scope: !3659)
!3659 = distinct !DILexicalBlock(scope: !3638, file: !268, line: 230, column: 6)
!3660 = !DILocation(line: 230, column: 17, scope: !3659)
!3661 = !DILocation(line: 230, column: 6, scope: !3638)
!3662 = !DILocation(line: 231, column: 22, scope: !3663)
!3663 = distinct !DILexicalBlock(scope: !3659, file: !268, line: 230, column: 34)
!3664 = !DILocation(line: 231, column: 3, scope: !3663)
!3665 = !DILocation(line: 231, column: 26, scope: !3663)
!3666 = !DILocation(line: 232, column: 2, scope: !3663)
!3667 = !DILocation(line: 233, column: 28, scope: !3668)
!3668 = distinct !DILexicalBlock(scope: !3659, file: !268, line: 232, column: 9)
!3669 = !DILocation(line: 233, column: 22, scope: !3668)
!3670 = !DILocation(line: 233, column: 3, scope: !3668)
!3671 = !DILocation(line: 233, column: 26, scope: !3668)
!3672 = !DILocation(line: 237, column: 1, scope: !3638)
!3673 = distinct !DISubprogram(name: "z_thread_entry", scope: !3674, file: !3674, line: 30, type: !3675, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !3682)
!3674 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3675 = !DISubroutineType(types: !3676)
!3676 = !{null, !3677, !102, !102, !102}
!3677 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3678, line: 46, baseType: !3679)
!3678 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3680, size: 32)
!3680 = !DISubroutineType(types: !3681)
!3681 = !{null, !102, !102, !102}
!3682 = !{!3683, !3684, !3685, !3686}
!3683 = !DILocalVariable(name: "entry", arg: 1, scope: !3673, file: !3674, line: 30, type: !3677)
!3684 = !DILocalVariable(name: "p1", arg: 2, scope: !3673, file: !3674, line: 31, type: !102)
!3685 = !DILocalVariable(name: "p2", arg: 3, scope: !3673, file: !3674, line: 31, type: !102)
!3686 = !DILocalVariable(name: "p3", arg: 4, scope: !3673, file: !3674, line: 31, type: !102)
!3687 = !DILocation(line: 0, scope: !3673)
!3688 = !DILocation(line: 36, column: 2, scope: !3673)
!3689 = !DILocation(line: 38, column: 17, scope: !3673)
!3690 = !DILocation(line: 38, column: 2, scope: !3673)
!3691 = !DILocation(line: 45, column: 2, scope: !3673)
!3692 = distinct !DISubprogram(name: "k_current_get", scope: !224, file: !224, line: 530, type: !3693, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !250)
!3693 = !DISubroutineType(types: !3694)
!3694 = !{!3695}
!3695 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !359, line: 347, baseType: !3696)
!3696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3697, size: 32)
!3697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !3698)
!3698 = !{!3699, !3757, !3769, !3770, !3771, !3772, !3778, !3791}
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3697, file: !359, line: 247, baseType: !3700, size: 384)
!3700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !3701)
!3701 = !{!3702, !3726, !3733, !3734, !3735, !3744, !3745, !3746}
!3702 = !DIDerivedType(tag: DW_TAG_member, scope: !3700, file: !359, line: 60, baseType: !3703, size: 64)
!3703 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3700, file: !359, line: 60, size: 64, elements: !3704)
!3704 = !{!3705, !3720}
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3703, file: !359, line: 61, baseType: !3706, size: 64)
!3706 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !3707)
!3707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !3708)
!3708 = !{!3709, !3715}
!3709 = !DIDerivedType(tag: DW_TAG_member, scope: !3707, file: !233, line: 38, baseType: !3710, size: 32)
!3710 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3707, file: !233, line: 38, size: 32, elements: !3711)
!3711 = !{!3712, !3714}
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3710, file: !233, line: 39, baseType: !3713, size: 32)
!3713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3707, size: 32)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3710, file: !233, line: 40, baseType: !3713, size: 32)
!3715 = !DIDerivedType(tag: DW_TAG_member, scope: !3707, file: !233, line: 42, baseType: !3716, size: 32, offset: 32)
!3716 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3707, file: !233, line: 42, size: 32, elements: !3717)
!3717 = !{!3718, !3719}
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3716, file: !233, line: 43, baseType: !3713, size: 32)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3716, file: !233, line: 44, baseType: !3713, size: 32)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3703, file: !359, line: 62, baseType: !3721, size: 64)
!3721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !3722)
!3722 = !{!3723}
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3721, file: !384, line: 50, baseType: !3724, size: 64)
!3724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3725, size: 64, elements: !389)
!3725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3721, size: 32)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3700, file: !359, line: 68, baseType: !3727, size: 32, offset: 64)
!3727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3728, size: 32)
!3728 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !3729)
!3729 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !3730)
!3730 = !{!3731}
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3729, file: !228, line: 232, baseType: !3732, size: 64)
!3732 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !3707)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3700, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3700, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!3735 = !DIDerivedType(tag: DW_TAG_member, scope: !3700, file: !359, line: 90, baseType: !3736, size: 16, offset: 112)
!3736 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3700, file: !359, line: 90, size: 16, elements: !3737)
!3737 = !{!3738, !3743}
!3738 = !DIDerivedType(tag: DW_TAG_member, scope: !3736, file: !359, line: 91, baseType: !3739, size: 16)
!3739 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3736, file: !359, line: 91, size: 16, elements: !3740)
!3740 = !{!3741, !3742}
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3739, file: !359, line: 96, baseType: !407, size: 8)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3739, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3736, file: !359, line: 100, baseType: !411, size: 16)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3700, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3700, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3700, file: !359, line: 131, baseType: !3747, size: 192, offset: 192)
!3747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !3748)
!3748 = !{!3749, !3750, !3756}
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3747, file: !228, line: 245, baseType: !3706, size: 64)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3747, file: !228, line: 246, baseType: !3751, size: 32, offset: 64)
!3751 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !3752)
!3752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3753, size: 32)
!3753 = !DISubroutineType(types: !3754)
!3754 = !{null, !3755}
!3755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3747, size: 32)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3747, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3697, file: !359, line: 250, baseType: !3758, size: 288, offset: 384)
!3758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !3759)
!3759 = !{!3760, !3761, !3762, !3763, !3764, !3765, !3766, !3767, !3768}
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3758, file: !428, line: 26, baseType: !162, size: 32)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3758, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3758, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3758, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3758, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3758, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3758, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3758, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3758, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3697, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3697, file: !359, line: 256, baseType: !3728, size: 64, offset: 704)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3697, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3697, file: !359, line: 300, baseType: !3773, size: 96, offset: 800)
!3773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !3774)
!3774 = !{!3775, !3776, !3777}
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3773, file: !359, line: 153, baseType: !22, size: 32)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3773, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3773, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3697, file: !359, line: 325, baseType: !3779, size: 32, offset: 896)
!3779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3780, size: 32)
!3780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !3781)
!3781 = !{!3782, !3788, !3789}
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3780, file: !224, line: 5074, baseType: !3783, size: 96)
!3783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !3784)
!3784 = !{!3785, !3786, !3787}
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3783, file: !454, line: 57, baseType: !457, size: 32)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3783, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3783, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3780, file: !224, line: 5075, baseType: !3728, size: 64, offset: 96)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3780, file: !224, line: 5076, baseType: !3790, offset: 160)
!3790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3697, file: !359, line: 343, baseType: !3792, size: 64, offset: 928)
!3792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !3793)
!3793 = !{!3794, !3795}
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3792, file: !428, line: 63, baseType: !162, size: 32)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3792, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!3796 = !DILocation(line: 535, column: 9, scope: !3692)
!3797 = !DILocation(line: 535, column: 2, scope: !3692)
!3798 = distinct !DISubprogram(name: "k_thread_abort", scope: !3322, file: !3322, line: 188, type: !3799, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !3801)
!3799 = !DISubroutineType(types: !3800)
!3800 = !{null, !3695}
!3801 = !{!3802}
!3802 = !DILocalVariable(name: "thread", arg: 1, scope: !3798, file: !3322, line: 188, type: !3695)
!3803 = !DILocation(line: 0, scope: !3798)
!3804 = !DILocation(line: 197, column: 2, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3798, file: !3322, line: 197, column: 2)
!3806 = !{i64 2154837946}
!3807 = !DILocation(line: 198, column: 2, scope: !3798)
!3808 = !DILocation(line: 199, column: 1, scope: !3798)
!3809 = distinct !DISubprogram(name: "z_current_get", scope: !3322, file: !3322, line: 173, type: !3693, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !250)
!3810 = !DILocation(line: 180, column: 2, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !3809, file: !3322, line: 180, column: 2)
!3812 = !{i64 2154837878}
!3813 = !DILocation(line: 181, column: 9, scope: !3809)
!3814 = !DILocation(line: 181, column: 2, scope: !3809)
!3815 = distinct !DISubprogram(name: "sys_heap_free", scope: !3816, file: !3816, line: 163, type: !3817, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !3825)
!3816 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3817 = !DISubroutineType(types: !3818)
!3818 = !{null, !3819, !102}
!3819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3820, size: 32)
!3820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !3821)
!3821 = !{!3822, !3823, !3824}
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3820, file: !454, line: 57, baseType: !2444, size: 32)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3820, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3820, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!3825 = !{!3826, !3827, !3828, !3829}
!3826 = !DILocalVariable(name: "heap", arg: 1, scope: !3815, file: !3816, line: 163, type: !3819)
!3827 = !DILocalVariable(name: "mem", arg: 2, scope: !3815, file: !3816, line: 163, type: !102)
!3828 = !DILocalVariable(name: "h", scope: !3815, file: !3816, line: 168, type: !2444)
!3829 = !DILocalVariable(name: "c", scope: !3815, file: !3816, line: 169, type: !2449)
!3830 = !DILocation(line: 0, scope: !3815)
!3831 = !DILocation(line: 165, column: 10, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3815, file: !3816, line: 165, column: 6)
!3833 = !DILocation(line: 165, column: 6, scope: !3815)
!3834 = !DILocation(line: 168, column: 27, scope: !3815)
!3835 = !DILocation(line: 169, column: 16, scope: !3815)
!3836 = !{i32 0, i32 536870912}
!3837 = !DILocation(line: 187, column: 2, scope: !3815)
!3838 = !DILocation(line: 197, column: 2, scope: !3815)
!3839 = !DILocation(line: 198, column: 1, scope: !3815)
!3840 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3816, file: !3816, line: 157, type: !3841, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !3843)
!3841 = !DISubroutineType(types: !3842)
!3842 = !{!2449, !2444, !102}
!3843 = !{!3844, !3845, !3846, !3847}
!3844 = !DILocalVariable(name: "h", arg: 1, scope: !3840, file: !3816, line: 157, type: !2444)
!3845 = !DILocalVariable(name: "p", arg: 2, scope: !3840, file: !3816, line: 157, type: !102)
!3846 = !DILocalVariable(name: "mem", scope: !3840, file: !3816, line: 159, type: !182)
!3847 = !DILocalVariable(name: "base", scope: !3840, file: !3816, line: 159, type: !182)
!3848 = !DILocation(line: 0, scope: !3840)
!3849 = !DILocation(line: 159, column: 39, scope: !3840)
!3850 = !DILocation(line: 160, column: 14, scope: !3840)
!3851 = !DILocation(line: 160, column: 38, scope: !3840)
!3852 = !DILocation(line: 160, column: 46, scope: !3840)
!3853 = !DILocation(line: 160, column: 2, scope: !3840)
!3854 = distinct !DISubprogram(name: "set_chunk_used", scope: !2431, file: !2431, line: 147, type: !3855, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !3857)
!3855 = !DISubroutineType(types: !3856)
!3856 = !{null, !2444, !2449, !136}
!3857 = !{!3858, !3859, !3860, !3861, !3862}
!3858 = !DILocalVariable(name: "h", arg: 1, scope: !3854, file: !2431, line: 147, type: !2444)
!3859 = !DILocalVariable(name: "c", arg: 2, scope: !3854, file: !2431, line: 147, type: !2449)
!3860 = !DILocalVariable(name: "used", arg: 3, scope: !3854, file: !2431, line: 147, type: !136)
!3861 = !DILocalVariable(name: "buf", scope: !3854, file: !2431, line: 149, type: !2438)
!3862 = !DILocalVariable(name: "cmem", scope: !3854, file: !2431, line: 150, type: !102)
!3863 = !DILocation(line: 0, scope: !3854)
!3864 = !DILocation(line: 149, column: 22, scope: !3854)
!3865 = !DILocation(line: 0, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3867, file: !2431, line: 159, column: 7)
!3867 = distinct !DILexicalBlock(scope: !3868, file: !2431, line: 158, column: 9)
!3868 = distinct !DILexicalBlock(scope: !3854, file: !2431, line: 152, column: 6)
!3869 = !DILocation(line: 159, column: 7, scope: !3867)
!3870 = !DILocation(line: 165, column: 1, scope: !3854)
!3871 = distinct !DISubprogram(name: "free_chunk", scope: !3816, file: !3816, line: 133, type: !3872, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !3874)
!3872 = !DISubroutineType(types: !3873)
!3873 = !{null, !2444, !2449}
!3874 = !{!3875, !3876}
!3875 = !DILocalVariable(name: "h", arg: 1, scope: !3871, file: !3816, line: 133, type: !2444)
!3876 = !DILocalVariable(name: "c", arg: 2, scope: !3871, file: !3816, line: 133, type: !2449)
!3877 = !DILocation(line: 0, scope: !3871)
!3878 = !DILocation(line: 136, column: 21, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3871, file: !3816, line: 136, column: 6)
!3880 = !DILocation(line: 136, column: 7, scope: !3879)
!3881 = !DILocation(line: 136, column: 6, scope: !3871)
!3882 = !DILocation(line: 137, column: 3, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3879, file: !3816, line: 136, column: 41)
!3884 = !DILocation(line: 138, column: 22, scope: !3883)
!3885 = !DILocation(line: 138, column: 3, scope: !3883)
!3886 = !DILocation(line: 139, column: 2, scope: !3883)
!3887 = !DILocation(line: 142, column: 21, scope: !3888)
!3888 = distinct !DILexicalBlock(scope: !3871, file: !3816, line: 142, column: 6)
!3889 = !{i32 -65535, i32 536903678}
!3890 = !DILocation(line: 142, column: 7, scope: !3888)
!3891 = !DILocation(line: 142, column: 6, scope: !3871)
!3892 = !DILocation(line: 143, column: 3, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3888, file: !3816, line: 142, column: 40)
!3894 = !DILocation(line: 144, column: 19, scope: !3893)
!3895 = !DILocation(line: 144, column: 3, scope: !3893)
!3896 = !DILocation(line: 145, column: 7, scope: !3893)
!3897 = !DILocation(line: 146, column: 2, scope: !3893)
!3898 = !DILocation(line: 148, column: 2, scope: !3871)
!3899 = !DILocation(line: 149, column: 1, scope: !3871)
!3900 = distinct !DISubprogram(name: "right_chunk", scope: !2431, file: !2431, line: 204, type: !3901, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !3903)
!3901 = !DISubroutineType(types: !3902)
!3902 = !{!2449, !2444, !2449}
!3903 = !{!3904, !3905}
!3904 = !DILocalVariable(name: "h", arg: 1, scope: !3900, file: !2431, line: 204, type: !2444)
!3905 = !DILocalVariable(name: "c", arg: 2, scope: !3900, file: !2431, line: 204, type: !2449)
!3906 = !DILocation(line: 0, scope: !3900)
!3907 = !DILocation(line: 206, column: 13, scope: !3900)
!3908 = !DILocation(line: 206, column: 11, scope: !3900)
!3909 = !DILocation(line: 206, column: 2, scope: !3900)
!3910 = distinct !DISubprogram(name: "chunk_used", scope: !2431, file: !2431, line: 137, type: !3911, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !3913)
!3911 = !DISubroutineType(types: !3912)
!3912 = !{!136, !2444, !2449}
!3913 = !{!3914, !3915}
!3914 = !DILocalVariable(name: "h", arg: 1, scope: !3910, file: !2431, line: 137, type: !2444)
!3915 = !DILocalVariable(name: "c", arg: 2, scope: !3910, file: !2431, line: 137, type: !2449)
!3916 = !DILocation(line: 0, scope: !3910)
!3917 = !DILocation(line: 139, column: 9, scope: !3910)
!3918 = !DILocation(line: 139, column: 42, scope: !3910)
!3919 = !DILocation(line: 139, column: 2, scope: !3910)
!3920 = distinct !DISubprogram(name: "free_list_remove", scope: !3816, file: !3816, line: 60, type: !3872, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !3921)
!3921 = !{!3922, !3923, !3924}
!3922 = !DILocalVariable(name: "h", arg: 1, scope: !3920, file: !3816, line: 60, type: !2444)
!3923 = !DILocalVariable(name: "c", arg: 2, scope: !3920, file: !3816, line: 60, type: !2449)
!3924 = !DILocalVariable(name: "bidx", scope: !3925, file: !3816, line: 63, type: !107)
!3925 = distinct !DILexicalBlock(scope: !3926, file: !3816, line: 62, column: 31)
!3926 = distinct !DILexicalBlock(scope: !3920, file: !3816, line: 62, column: 6)
!3927 = !DILocation(line: 0, scope: !3920)
!3928 = !DILocation(line: 63, column: 28, scope: !3925)
!3929 = !{i32 0, i32 32768}
!3930 = !DILocation(line: 63, column: 14, scope: !3925)
!3931 = !DILocation(line: 0, scope: !3925)
!3932 = !DILocation(line: 64, column: 3, scope: !3925)
!3933 = !DILocation(line: 66, column: 1, scope: !3920)
!3934 = distinct !DISubprogram(name: "merge_chunks", scope: !3816, file: !3816, line: 125, type: !3935, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !3937)
!3935 = !DISubroutineType(types: !3936)
!3936 = !{null, !2444, !2449, !2449}
!3937 = !{!3938, !3939, !3940, !3941}
!3938 = !DILocalVariable(name: "h", arg: 1, scope: !3934, file: !3816, line: 125, type: !2444)
!3939 = !DILocalVariable(name: "lc", arg: 2, scope: !3934, file: !3816, line: 125, type: !2449)
!3940 = !DILocalVariable(name: "rc", arg: 3, scope: !3934, file: !3816, line: 125, type: !2449)
!3941 = !DILocalVariable(name: "newsz", scope: !3934, file: !3816, line: 127, type: !3942)
!3942 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2431, line: 62, baseType: !162)
!3943 = !DILocation(line: 0, scope: !3934)
!3944 = !DILocation(line: 127, column: 20, scope: !3934)
!3945 = !DILocation(line: 127, column: 40, scope: !3934)
!3946 = !DILocation(line: 127, column: 38, scope: !3934)
!3947 = !DILocation(line: 129, column: 2, scope: !3934)
!3948 = !DILocation(line: 130, column: 25, scope: !3934)
!3949 = !DILocation(line: 130, column: 2, scope: !3934)
!3950 = !DILocation(line: 131, column: 1, scope: !3934)
!3951 = distinct !DISubprogram(name: "left_chunk", scope: !2431, file: !2431, line: 199, type: !3901, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !3952)
!3952 = !{!3953, !3954}
!3953 = !DILocalVariable(name: "h", arg: 1, scope: !3951, file: !2431, line: 199, type: !2444)
!3954 = !DILocalVariable(name: "c", arg: 2, scope: !3951, file: !2431, line: 199, type: !2449)
!3955 = !DILocation(line: 0, scope: !3951)
!3956 = !DILocation(line: 201, column: 13, scope: !3951)
!3957 = !DILocation(line: 201, column: 11, scope: !3951)
!3958 = !DILocation(line: 201, column: 2, scope: !3951)
!3959 = distinct !DISubprogram(name: "free_list_add", scope: !3816, file: !3816, line: 98, type: !3872, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !3960)
!3960 = !{!3961, !3962, !3963}
!3961 = !DILocalVariable(name: "h", arg: 1, scope: !3959, file: !3816, line: 98, type: !2444)
!3962 = !DILocalVariable(name: "c", arg: 2, scope: !3959, file: !3816, line: 98, type: !2449)
!3963 = !DILocalVariable(name: "bidx", scope: !3964, file: !3816, line: 101, type: !107)
!3964 = distinct !DILexicalBlock(scope: !3965, file: !3816, line: 100, column: 31)
!3965 = distinct !DILexicalBlock(scope: !3959, file: !3816, line: 100, column: 6)
!3966 = !DILocation(line: 0, scope: !3959)
!3967 = !DILocation(line: 101, column: 28, scope: !3964)
!3968 = !DILocation(line: 101, column: 14, scope: !3964)
!3969 = !DILocation(line: 0, scope: !3964)
!3970 = !DILocation(line: 102, column: 3, scope: !3964)
!3971 = !DILocation(line: 104, column: 1, scope: !3959)
!3972 = distinct !DISubprogram(name: "chunk_size", scope: !2431, file: !2431, line: 142, type: !3973, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !3975)
!3973 = !DISubroutineType(types: !3974)
!3974 = !{!3942, !2444, !2449}
!3975 = !{!3976, !3977}
!3976 = !DILocalVariable(name: "h", arg: 1, scope: !3972, file: !2431, line: 142, type: !2444)
!3977 = !DILocalVariable(name: "c", arg: 2, scope: !3972, file: !2431, line: 142, type: !2449)
!3978 = !DILocation(line: 0, scope: !3972)
!3979 = !DILocation(line: 144, column: 9, scope: !3972)
!3980 = !DILocation(line: 144, column: 42, scope: !3972)
!3981 = !DILocation(line: 144, column: 2, scope: !3972)
!3982 = distinct !DISubprogram(name: "bucket_idx", scope: !2431, file: !2431, line: 250, type: !3983, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !3985)
!3983 = !DISubroutineType(types: !3984)
!3984 = !{!107, !2444, !3942}
!3985 = !{!3986, !3987, !3988}
!3986 = !DILocalVariable(name: "h", arg: 1, scope: !3982, file: !2431, line: 250, type: !2444)
!3987 = !DILocalVariable(name: "sz", arg: 2, scope: !3982, file: !2431, line: 250, type: !3942)
!3988 = !DILocalVariable(name: "usable_sz", scope: !3982, file: !2431, line: 252, type: !32)
!3989 = !DILocation(line: 0, scope: !3982)
!3990 = !DILocation(line: 252, column: 32, scope: !3982)
!3991 = !DILocation(line: 252, column: 30, scope: !3982)
!3992 = !DILocation(line: 252, column: 50, scope: !3982)
!3993 = !DILocation(line: 253, column: 14, scope: !3982)
!3994 = !{i32 0, i32 33}
!3995 = !DILocation(line: 253, column: 12, scope: !3982)
!3996 = !DILocation(line: 253, column: 2, scope: !3982)
!3997 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3816, file: !3816, line: 68, type: !3998, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !4000)
!3998 = !DISubroutineType(types: !3999)
!3999 = !{null, !2444, !2449, !107}
!4000 = !{!4001, !4002, !4003, !4004, !4006, !4009}
!4001 = !DILocalVariable(name: "h", arg: 1, scope: !3997, file: !3816, line: 68, type: !2444)
!4002 = !DILocalVariable(name: "c", arg: 2, scope: !3997, file: !3816, line: 68, type: !2449)
!4003 = !DILocalVariable(name: "bidx", arg: 3, scope: !3997, file: !3816, line: 68, type: !107)
!4004 = !DILocalVariable(name: "b", scope: !3997, file: !3816, line: 70, type: !4005)
!4005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2454, size: 32)
!4006 = !DILocalVariable(name: "second", scope: !4007, file: !3816, line: 84, type: !2449)
!4007 = distinct !DILexicalBlock(scope: !4008, file: !3816, line: 80, column: 9)
!4008 = distinct !DILexicalBlock(scope: !3997, file: !3816, line: 72, column: 6)
!4009 = !DILocalVariable(name: "first", scope: !4007, file: !3816, line: 85, type: !2449)
!4010 = !DILocation(line: 0, scope: !3997)
!4011 = !DILocation(line: 72, column: 9, scope: !4008)
!4012 = !DILocation(line: 72, column: 14, scope: !4008)
!4013 = !DILocation(line: 72, column: 6, scope: !3997)
!4014 = !DILocation(line: 76, column: 23, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !4008, file: !3816, line: 72, column: 21)
!4016 = !DILocation(line: 76, column: 6, scope: !4015)
!4017 = !DILocation(line: 76, column: 20, scope: !4015)
!4018 = !DILocation(line: 77, column: 11, scope: !4015)
!4019 = !DILocation(line: 78, column: 3, scope: !4015)
!4020 = !DILocation(line: 79, column: 3, scope: !4015)
!4021 = !DILocation(line: 80, column: 2, scope: !4015)
!4022 = !DILocation(line: 0, scope: !4007)
!4023 = !DILocation(line: 85, column: 21, scope: !4007)
!4024 = !{i32 0, i32 65536}
!4025 = !DILocation(line: 87, column: 3, scope: !4007)
!4026 = !DILocation(line: 88, column: 3, scope: !4007)
!4027 = !DILocation(line: 89, column: 3, scope: !4007)
!4028 = !DILocation(line: 90, column: 3, scope: !4007)
!4029 = !DILocation(line: 96, column: 1, scope: !3997)
!4030 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2431, file: !2431, line: 187, type: !3935, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !4031)
!4031 = !{!4032, !4033, !4034}
!4032 = !DILocalVariable(name: "h", arg: 1, scope: !4030, file: !2431, line: 187, type: !2444)
!4033 = !DILocalVariable(name: "c", arg: 2, scope: !4030, file: !2431, line: 187, type: !2449)
!4034 = !DILocalVariable(name: "prev", arg: 3, scope: !4030, file: !2431, line: 188, type: !2449)
!4035 = !DILocation(line: 0, scope: !4030)
!4036 = !DILocation(line: 190, column: 2, scope: !4030)
!4037 = !DILocation(line: 191, column: 1, scope: !4030)
!4038 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2431, file: !2431, line: 193, type: !3935, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !4039)
!4039 = !{!4040, !4041, !4042}
!4040 = !DILocalVariable(name: "h", arg: 1, scope: !4038, file: !2431, line: 193, type: !2444)
!4041 = !DILocalVariable(name: "c", arg: 2, scope: !4038, file: !2431, line: 193, type: !2449)
!4042 = !DILocalVariable(name: "next", arg: 3, scope: !4038, file: !2431, line: 194, type: !2449)
!4043 = !DILocation(line: 0, scope: !4038)
!4044 = !DILocation(line: 196, column: 2, scope: !4038)
!4045 = !DILocation(line: 197, column: 1, scope: !4038)
!4046 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2431, file: !2431, line: 177, type: !3901, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !4047)
!4047 = !{!4048, !4049}
!4048 = !DILocalVariable(name: "h", arg: 1, scope: !4046, file: !2431, line: 177, type: !2444)
!4049 = !DILocalVariable(name: "c", arg: 2, scope: !4046, file: !2431, line: 177, type: !2449)
!4050 = !DILocation(line: 0, scope: !4046)
!4051 = !DILocation(line: 179, column: 9, scope: !4046)
!4052 = !DILocation(line: 179, column: 2, scope: !4046)
!4053 = distinct !DISubprogram(name: "chunk_field", scope: !2431, file: !2431, line: 107, type: !4054, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !4056)
!4054 = !DISubroutineType(types: !4055)
!4055 = !{!2449, !2444, !2449, !2430}
!4056 = !{!4057, !4058, !4059, !4060, !4061}
!4057 = !DILocalVariable(name: "h", arg: 1, scope: !4053, file: !2431, line: 107, type: !2444)
!4058 = !DILocalVariable(name: "c", arg: 2, scope: !4053, file: !2431, line: 107, type: !2449)
!4059 = !DILocalVariable(name: "f", arg: 3, scope: !4053, file: !2431, line: 108, type: !2430)
!4060 = !DILocalVariable(name: "buf", scope: !4053, file: !2431, line: 110, type: !2438)
!4061 = !DILocalVariable(name: "cmem", scope: !4053, file: !2431, line: 111, type: !102)
!4062 = !DILocation(line: 0, scope: !4053)
!4063 = !DILocation(line: 110, column: 22, scope: !4053)
!4064 = !DILocation(line: 111, column: 15, scope: !4053)
!4065 = !DILocation(line: 116, column: 11, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !4067, file: !2431, line: 115, column: 9)
!4067 = distinct !DILexicalBlock(scope: !4053, file: !2431, line: 113, column: 6)
!4068 = !DILocation(line: 116, column: 10, scope: !4066)
!4069 = !DILocation(line: 118, column: 1, scope: !4053)
!4070 = distinct !DISubprogram(name: "chunk_buf", scope: !2431, file: !2431, line: 101, type: !4071, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !4073)
!4071 = !DISubroutineType(types: !4072)
!4072 = !{!2438, !2444}
!4073 = !{!4074}
!4074 = !DILocalVariable(name: "h", arg: 1, scope: !4070, file: !2431, line: 101, type: !2444)
!4075 = !DILocation(line: 0, scope: !4070)
!4076 = !DILocation(line: 104, column: 9, scope: !4070)
!4077 = !DILocation(line: 104, column: 2, scope: !4070)
!4078 = distinct !DISubprogram(name: "chunk_set", scope: !2431, file: !2431, line: 120, type: !4079, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !4081)
!4079 = !DISubroutineType(types: !4080)
!4080 = !{null, !2444, !2449, !2430, !2449}
!4081 = !{!4082, !4083, !4084, !4085, !4086, !4087}
!4082 = !DILocalVariable(name: "h", arg: 1, scope: !4078, file: !2431, line: 120, type: !2444)
!4083 = !DILocalVariable(name: "c", arg: 2, scope: !4078, file: !2431, line: 120, type: !2449)
!4084 = !DILocalVariable(name: "f", arg: 3, scope: !4078, file: !2431, line: 121, type: !2430)
!4085 = !DILocalVariable(name: "val", arg: 4, scope: !4078, file: !2431, line: 121, type: !2449)
!4086 = !DILocalVariable(name: "buf", scope: !4078, file: !2431, line: 125, type: !2438)
!4087 = !DILocalVariable(name: "cmem", scope: !4078, file: !2431, line: 126, type: !102)
!4088 = !DILocation(line: 0, scope: !4078)
!4089 = !DILocation(line: 125, column: 22, scope: !4078)
!4090 = !DILocation(line: 126, column: 15, scope: !4078)
!4091 = !DILocation(line: 133, column: 27, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4093, file: !2431, line: 131, column: 9)
!4093 = distinct !DILexicalBlock(scope: !4078, file: !2431, line: 128, column: 6)
!4094 = !DILocation(line: 133, column: 4, scope: !4092)
!4095 = !DILocation(line: 133, column: 3, scope: !4092)
!4096 = !DILocation(line: 133, column: 25, scope: !4092)
!4097 = !DILocation(line: 135, column: 1, scope: !4078)
!4098 = distinct !DISubprogram(name: "min_chunk_size", scope: !2431, file: !2431, line: 240, type: !4099, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !4101)
!4099 = !DISubroutineType(types: !4100)
!4100 = !{!3942, !2444}
!4101 = !{!4102}
!4102 = !DILocalVariable(name: "h", arg: 1, scope: !4098, file: !2431, line: 240, type: !2444)
!4103 = !DILocation(line: 0, scope: !4098)
!4104 = !DILocation(line: 242, column: 9, scope: !4098)
!4105 = !DILocation(line: 242, column: 2, scope: !4098)
!4106 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2431, file: !2431, line: 235, type: !4107, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !4109)
!4107 = !DISubroutineType(types: !4108)
!4108 = !{!3942, !2444, !252}
!4109 = !{!4110, !4111}
!4110 = !DILocalVariable(name: "h", arg: 1, scope: !4106, file: !2431, line: 235, type: !2444)
!4111 = !DILocalVariable(name: "bytes", arg: 2, scope: !4106, file: !2431, line: 235, type: !252)
!4112 = !DILocation(line: 0, scope: !4106)
!4113 = !DILocation(line: 237, column: 39, scope: !4106)
!4114 = !DILocation(line: 237, column: 9, scope: !4106)
!4115 = !DILocation(line: 237, column: 2, scope: !4106)
!4116 = distinct !DISubprogram(name: "chunksz", scope: !2431, file: !2431, line: 230, type: !4117, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !4119)
!4117 = !DISubroutineType(types: !4118)
!4118 = !{!3942, !252}
!4119 = !{!4120}
!4120 = !DILocalVariable(name: "bytes", arg: 1, scope: !4116, file: !2431, line: 230, type: !252)
!4121 = !DILocation(line: 0, scope: !4116)
!4122 = !DILocation(line: 232, column: 29, scope: !4116)
!4123 = !DILocation(line: 232, column: 35, scope: !4116)
!4124 = !DILocation(line: 232, column: 2, scope: !4116)
!4125 = distinct !DISubprogram(name: "set_chunk_size", scope: !2431, file: !2431, line: 172, type: !4126, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !4128)
!4126 = !DISubroutineType(types: !4127)
!4127 = !{null, !2444, !2449, !3942}
!4128 = !{!4129, !4130, !4131}
!4129 = !DILocalVariable(name: "h", arg: 1, scope: !4125, file: !2431, line: 172, type: !2444)
!4130 = !DILocalVariable(name: "c", arg: 2, scope: !4125, file: !2431, line: 172, type: !2449)
!4131 = !DILocalVariable(name: "size", arg: 3, scope: !4125, file: !2431, line: 172, type: !3942)
!4132 = !DILocation(line: 0, scope: !4125)
!4133 = !DILocation(line: 174, column: 38, scope: !4125)
!4134 = !DILocation(line: 174, column: 2, scope: !4125)
!4135 = !DILocation(line: 175, column: 1, scope: !4125)
!4136 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2431, file: !2431, line: 209, type: !4126, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !4137)
!4137 = !{!4138, !4139, !4140}
!4138 = !DILocalVariable(name: "h", arg: 1, scope: !4136, file: !2431, line: 209, type: !2444)
!4139 = !DILocalVariable(name: "c", arg: 2, scope: !4136, file: !2431, line: 209, type: !2449)
!4140 = !DILocalVariable(name: "size", arg: 3, scope: !4136, file: !2431, line: 210, type: !3942)
!4141 = !DILocation(line: 0, scope: !4136)
!4142 = !DILocation(line: 212, column: 2, scope: !4136)
!4143 = !DILocation(line: 213, column: 1, scope: !4136)
!4144 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3816, file: !3816, line: 34, type: !3998, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !4145)
!4145 = !{!4146, !4147, !4148, !4149, !4150, !4153}
!4146 = !DILocalVariable(name: "h", arg: 1, scope: !4144, file: !3816, line: 34, type: !2444)
!4147 = !DILocalVariable(name: "c", arg: 2, scope: !4144, file: !3816, line: 34, type: !2449)
!4148 = !DILocalVariable(name: "bidx", arg: 3, scope: !4144, file: !3816, line: 34, type: !107)
!4149 = !DILocalVariable(name: "b", scope: !4144, file: !3816, line: 36, type: !4005)
!4150 = !DILocalVariable(name: "first", scope: !4151, file: !3816, line: 47, type: !2449)
!4151 = distinct !DILexicalBlock(scope: !4152, file: !3816, line: 46, column: 9)
!4152 = distinct !DILexicalBlock(scope: !4144, file: !3816, line: 42, column: 6)
!4153 = !DILocalVariable(name: "second", scope: !4151, file: !3816, line: 48, type: !2449)
!4154 = !DILocation(line: 0, scope: !4144)
!4155 = !DILocation(line: 36, column: 29, scope: !4144)
!4156 = !DILocation(line: 42, column: 6, scope: !4152)
!4157 = !DILocation(line: 42, column: 28, scope: !4152)
!4158 = !DILocation(line: 42, column: 6, scope: !4144)
!4159 = !DILocation(line: 44, column: 24, scope: !4160)
!4160 = distinct !DILexicalBlock(scope: !4152, file: !3816, line: 42, column: 34)
!4161 = !DILocation(line: 44, column: 23, scope: !4160)
!4162 = !DILocation(line: 44, column: 6, scope: !4160)
!4163 = !DILocation(line: 44, column: 20, scope: !4160)
!4164 = !DILocation(line: 45, column: 6, scope: !4160)
!4165 = !DILocation(line: 45, column: 11, scope: !4160)
!4166 = !DILocation(line: 46, column: 2, scope: !4160)
!4167 = !DILocation(line: 47, column: 21, scope: !4151)
!4168 = !DILocation(line: 0, scope: !4151)
!4169 = !DILocation(line: 50, column: 6, scope: !4151)
!4170 = !DILocation(line: 50, column: 11, scope: !4151)
!4171 = !DILocation(line: 51, column: 3, scope: !4151)
!4172 = !DILocation(line: 52, column: 3, scope: !4151)
!4173 = !DILocation(line: 58, column: 1, scope: !4144)
!4174 = distinct !DISubprogram(name: "next_free_chunk", scope: !2431, file: !2431, line: 182, type: !3901, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !4175)
!4175 = !{!4176, !4177}
!4176 = !DILocalVariable(name: "h", arg: 1, scope: !4174, file: !2431, line: 182, type: !2444)
!4177 = !DILocalVariable(name: "c", arg: 2, scope: !4174, file: !2431, line: 182, type: !2449)
!4178 = !DILocation(line: 0, scope: !4174)
!4179 = !DILocation(line: 184, column: 9, scope: !4174)
!4180 = !DILocation(line: 184, column: 2, scope: !4174)
!4181 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3816, file: !3816, line: 200, type: !4182, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !4184)
!4182 = !DISubroutineType(types: !4183)
!4183 = !{!252, !3819, !102}
!4184 = !{!4185, !4186, !4187, !4188, !4189, !4190, !4191}
!4185 = !DILocalVariable(name: "heap", arg: 1, scope: !4181, file: !3816, line: 200, type: !3819)
!4186 = !DILocalVariable(name: "mem", arg: 2, scope: !4181, file: !3816, line: 200, type: !102)
!4187 = !DILocalVariable(name: "h", scope: !4181, file: !3816, line: 202, type: !2444)
!4188 = !DILocalVariable(name: "c", scope: !4181, file: !3816, line: 203, type: !2449)
!4189 = !DILocalVariable(name: "addr", scope: !4181, file: !3816, line: 204, type: !252)
!4190 = !DILocalVariable(name: "chunk_base", scope: !4181, file: !3816, line: 205, type: !252)
!4191 = !DILocalVariable(name: "chunk_sz", scope: !4181, file: !3816, line: 206, type: !252)
!4192 = !DILocation(line: 0, scope: !4181)
!4193 = !DILocation(line: 202, column: 27, scope: !4181)
!4194 = !DILocation(line: 203, column: 16, scope: !4181)
!4195 = !DILocation(line: 204, column: 16, scope: !4181)
!4196 = !DILocation(line: 205, column: 31, scope: !4181)
!4197 = !DILocation(line: 205, column: 22, scope: !4181)
!4198 = !DILocation(line: 206, column: 20, scope: !4181)
!4199 = !DILocation(line: 206, column: 37, scope: !4181)
!4200 = !DILocation(line: 208, column: 26, scope: !4181)
!4201 = !DILocation(line: 208, column: 18, scope: !4181)
!4202 = !DILocation(line: 208, column: 2, scope: !4181)
!4203 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3816, file: !3816, line: 263, type: !4204, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !4206)
!4204 = !DISubroutineType(types: !4205)
!4205 = !{!102, !3819, !252}
!4206 = !{!4207, !4208, !4209, !4210, !4211, !4212}
!4207 = !DILocalVariable(name: "heap", arg: 1, scope: !4203, file: !3816, line: 263, type: !3819)
!4208 = !DILocalVariable(name: "bytes", arg: 2, scope: !4203, file: !3816, line: 263, type: !252)
!4209 = !DILocalVariable(name: "h", scope: !4203, file: !3816, line: 265, type: !2444)
!4210 = !DILocalVariable(name: "mem", scope: !4203, file: !3816, line: 266, type: !102)
!4211 = !DILocalVariable(name: "chunk_sz", scope: !4203, file: !3816, line: 272, type: !3942)
!4212 = !DILocalVariable(name: "c", scope: !4203, file: !3816, line: 273, type: !2449)
!4213 = !DILocation(line: 0, scope: !4203)
!4214 = !DILocation(line: 265, column: 27, scope: !4203)
!4215 = !DILocation(line: 268, column: 12, scope: !4216)
!4216 = distinct !DILexicalBlock(scope: !4203, file: !3816, line: 268, column: 6)
!4217 = !DILocation(line: 268, column: 18, scope: !4216)
!4218 = !DILocation(line: 268, column: 21, scope: !4216)
!4219 = !DILocation(line: 268, column: 6, scope: !4203)
!4220 = !DILocation(line: 272, column: 23, scope: !4203)
!4221 = !DILocation(line: 273, column: 16, scope: !4203)
!4222 = !DILocation(line: 274, column: 8, scope: !4223)
!4223 = distinct !DILexicalBlock(scope: !4203, file: !3816, line: 274, column: 6)
!4224 = !DILocation(line: 274, column: 6, scope: !4203)
!4225 = !DILocation(line: 279, column: 6, scope: !4226)
!4226 = distinct !DILexicalBlock(scope: !4203, file: !3816, line: 279, column: 6)
!4227 = !DILocation(line: 279, column: 23, scope: !4226)
!4228 = !DILocation(line: 279, column: 6, scope: !4203)
!4229 = !DILocation(line: 280, column: 24, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4226, file: !3816, line: 279, column: 35)
!4231 = !DILocation(line: 280, column: 3, scope: !4230)
!4232 = !DILocation(line: 281, column: 3, scope: !4230)
!4233 = !DILocation(line: 282, column: 2, scope: !4230)
!4234 = !DILocation(line: 284, column: 2, scope: !4203)
!4235 = !DILocation(line: 286, column: 8, scope: !4203)
!4236 = !DILocation(line: 298, column: 2, scope: !4203)
!4237 = !DILocation(line: 299, column: 1, scope: !4203)
!4238 = distinct !DISubprogram(name: "size_too_big", scope: !2431, file: !2431, line: 256, type: !4239, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !4241)
!4239 = !DISubroutineType(types: !4240)
!4240 = !{!136, !2444, !252}
!4241 = !{!4242, !4243}
!4242 = !DILocalVariable(name: "h", arg: 1, scope: !4238, file: !2431, line: 256, type: !2444)
!4243 = !DILocalVariable(name: "bytes", arg: 2, scope: !4238, file: !2431, line: 256, type: !252)
!4244 = !DILocation(line: 0, scope: !4238)
!4245 = !DILocation(line: 262, column: 16, scope: !4238)
!4246 = !DILocation(line: 262, column: 36, scope: !4238)
!4247 = !DILocation(line: 262, column: 30, scope: !4238)
!4248 = !DILocation(line: 262, column: 2, scope: !4238)
!4249 = distinct !DISubprogram(name: "alloc_chunk", scope: !3816, file: !3816, line: 211, type: !4250, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !4252)
!4250 = !DISubroutineType(types: !4251)
!4251 = !{!2449, !2444, !3942}
!4252 = !{!4253, !4254, !4255, !4256, !4257, !4260, !4261, !4263, !4264, !4267}
!4253 = !DILocalVariable(name: "h", arg: 1, scope: !4249, file: !3816, line: 211, type: !2444)
!4254 = !DILocalVariable(name: "sz", arg: 2, scope: !4249, file: !3816, line: 211, type: !3942)
!4255 = !DILocalVariable(name: "bi", scope: !4249, file: !3816, line: 213, type: !107)
!4256 = !DILocalVariable(name: "b", scope: !4249, file: !3816, line: 214, type: !4005)
!4257 = !DILocalVariable(name: "first", scope: !4258, file: !3816, line: 233, type: !2449)
!4258 = distinct !DILexicalBlock(scope: !4259, file: !3816, line: 232, column: 15)
!4259 = distinct !DILexicalBlock(scope: !4249, file: !3816, line: 232, column: 6)
!4260 = !DILocalVariable(name: "i", scope: !4258, file: !3816, line: 234, type: !107)
!4261 = !DILocalVariable(name: "c", scope: !4262, file: !3816, line: 236, type: !2449)
!4262 = distinct !DILexicalBlock(scope: !4258, file: !3816, line: 235, column: 6)
!4263 = !DILocalVariable(name: "bmask", scope: !4249, file: !3816, line: 249, type: !162)
!4264 = !DILocalVariable(name: "minbucket", scope: !4265, file: !3816, line: 252, type: !107)
!4265 = distinct !DILexicalBlock(scope: !4266, file: !3816, line: 251, column: 19)
!4266 = distinct !DILexicalBlock(scope: !4249, file: !3816, line: 251, column: 6)
!4267 = !DILocalVariable(name: "c", scope: !4265, file: !3816, line: 253, type: !2449)
!4268 = !DILocation(line: 0, scope: !4249)
!4269 = !DILocation(line: 213, column: 11, scope: !4249)
!4270 = !DILocation(line: 232, column: 9, scope: !4259)
!4271 = !DILocation(line: 232, column: 6, scope: !4259)
!4272 = !DILocation(line: 232, column: 6, scope: !4249)
!4273 = !DILocation(line: 236, column: 21, scope: !4262)
!4274 = !DILocation(line: 0, scope: !4258)
!4275 = !DILocation(line: 0, scope: !4262)
!4276 = !DILocation(line: 237, column: 8, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4262, file: !3816, line: 237, column: 8)
!4278 = !DILocation(line: 237, column: 25, scope: !4277)
!4279 = !DILocation(line: 237, column: 8, scope: !4262)
!4280 = !DILocation(line: 238, column: 5, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4277, file: !3816, line: 237, column: 32)
!4282 = !DILocation(line: 241, column: 14, scope: !4262)
!4283 = !DILocation(line: 241, column: 12, scope: !4262)
!4284 = !DILocation(line: 243, column: 12, scope: !4258)
!4285 = !DILocation(line: 243, column: 16, scope: !4258)
!4286 = distinct !{!4286, !4287, !4288}
!4287 = !DILocation(line: 235, column: 3, scope: !4258)
!4288 = !DILocation(line: 243, column: 35, scope: !4258)
!4289 = !DILocation(line: 249, column: 22, scope: !4249)
!4290 = !DILocation(line: 249, column: 39, scope: !4249)
!4291 = !DILocation(line: 249, column: 36, scope: !4249)
!4292 = !DILocation(line: 251, column: 12, scope: !4266)
!4293 = !DILocation(line: 251, column: 6, scope: !4249)
!4294 = !DILocation(line: 252, column: 19, scope: !4265)
!4295 = !DILocation(line: 0, scope: !4265)
!4296 = !DILocation(line: 253, column: 39, scope: !4265)
!4297 = !DILocation(line: 255, column: 3, scope: !4265)
!4298 = !DILocation(line: 261, column: 1, scope: !4249)
!4299 = distinct !DISubprogram(name: "split_chunks", scope: !3816, file: !3816, line: 109, type: !3935, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !4300)
!4300 = !{!4301, !4302, !4303, !4304, !4305, !4306}
!4301 = !DILocalVariable(name: "h", arg: 1, scope: !4299, file: !3816, line: 109, type: !2444)
!4302 = !DILocalVariable(name: "lc", arg: 2, scope: !4299, file: !3816, line: 109, type: !2449)
!4303 = !DILocalVariable(name: "rc", arg: 3, scope: !4299, file: !3816, line: 109, type: !2449)
!4304 = !DILocalVariable(name: "sz0", scope: !4299, file: !3816, line: 114, type: !3942)
!4305 = !DILocalVariable(name: "lsz", scope: !4299, file: !3816, line: 115, type: !3942)
!4306 = !DILocalVariable(name: "rsz", scope: !4299, file: !3816, line: 116, type: !3942)
!4307 = !DILocation(line: 0, scope: !4299)
!4308 = !DILocation(line: 114, column: 18, scope: !4299)
!4309 = !DILocation(line: 115, column: 21, scope: !4299)
!4310 = !DILocation(line: 116, column: 22, scope: !4299)
!4311 = !DILocation(line: 118, column: 2, scope: !4299)
!4312 = !DILocation(line: 119, column: 2, scope: !4299)
!4313 = !DILocation(line: 120, column: 2, scope: !4299)
!4314 = !DILocation(line: 121, column: 25, scope: !4299)
!4315 = !DILocation(line: 121, column: 2, scope: !4299)
!4316 = !DILocation(line: 122, column: 1, scope: !4299)
!4317 = distinct !DISubprogram(name: "chunk_mem", scope: !3816, file: !3816, line: 24, type: !4318, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !4320)
!4318 = !DISubroutineType(types: !4319)
!4319 = !{!102, !2444, !2449}
!4320 = !{!4321, !4322, !4323, !4324}
!4321 = !DILocalVariable(name: "h", arg: 1, scope: !4317, file: !3816, line: 24, type: !2444)
!4322 = !DILocalVariable(name: "c", arg: 2, scope: !4317, file: !3816, line: 24, type: !2449)
!4323 = !DILocalVariable(name: "buf", scope: !4317, file: !3816, line: 26, type: !2438)
!4324 = !DILocalVariable(name: "ret", scope: !4317, file: !3816, line: 27, type: !182)
!4325 = !DILocation(line: 0, scope: !4317)
!4326 = !DILocation(line: 26, column: 22, scope: !4317)
!4327 = !DILocation(line: 27, column: 38, scope: !4317)
!4328 = !DILocation(line: 31, column: 2, scope: !4317)
!4329 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3816, file: !3816, line: 301, type: !4330, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !4332)
!4330 = !DISubroutineType(types: !4331)
!4331 = !{!102, !3819, !252, !252}
!4332 = !{!4333, !4334, !4335, !4336, !4337, !4338, !4339, !4340, !4341, !4342, !4343, !4344}
!4333 = !DILocalVariable(name: "heap", arg: 1, scope: !4329, file: !3816, line: 301, type: !3819)
!4334 = !DILocalVariable(name: "align", arg: 2, scope: !4329, file: !3816, line: 301, type: !252)
!4335 = !DILocalVariable(name: "bytes", arg: 3, scope: !4329, file: !3816, line: 301, type: !252)
!4336 = !DILocalVariable(name: "h", scope: !4329, file: !3816, line: 303, type: !2444)
!4337 = !DILocalVariable(name: "gap", scope: !4329, file: !3816, line: 304, type: !252)
!4338 = !DILocalVariable(name: "rew", scope: !4329, file: !3816, line: 304, type: !252)
!4339 = !DILocalVariable(name: "padded_sz", scope: !4329, file: !3816, line: 335, type: !3942)
!4340 = !DILocalVariable(name: "c0", scope: !4329, file: !3816, line: 336, type: !2449)
!4341 = !DILocalVariable(name: "mem", scope: !4329, file: !3816, line: 341, type: !182)
!4342 = !DILocalVariable(name: "end", scope: !4329, file: !3816, line: 345, type: !2438)
!4343 = !DILocalVariable(name: "c", scope: !4329, file: !3816, line: 348, type: !2449)
!4344 = !DILocalVariable(name: "c_end", scope: !4329, file: !3816, line: 349, type: !2449)
!4345 = !DILocation(line: 0, scope: !4329)
!4346 = !DILocation(line: 303, column: 27, scope: !4329)
!4347 = !DILocation(line: 313, column: 16, scope: !4329)
!4348 = !DILocation(line: 313, column: 14, scope: !4329)
!4349 = !DILocation(line: 314, column: 12, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4329, file: !3816, line: 314, column: 6)
!4351 = !DILocation(line: 314, column: 6, scope: !4329)
!4352 = !DILocation(line: 315, column: 9, scope: !4353)
!4353 = distinct !DILexicalBlock(scope: !4350, file: !3816, line: 314, column: 20)
!4354 = !DILocation(line: 316, column: 9, scope: !4353)
!4355 = !DILocation(line: 318, column: 13, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !4357, file: !3816, line: 318, column: 7)
!4357 = distinct !DILexicalBlock(scope: !4350, file: !3816, line: 317, column: 9)
!4358 = !DILocation(line: 318, column: 7, scope: !4357)
!4359 = !DILocation(line: 319, column: 11, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4356, file: !3816, line: 318, column: 39)
!4361 = !DILocation(line: 319, column: 4, scope: !4360)
!4362 = !DILocation(line: 0, scope: !4350)
!4363 = !DILocation(line: 326, column: 12, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4329, file: !3816, line: 326, column: 6)
!4365 = !DILocation(line: 326, column: 17, scope: !4364)
!4366 = !DILocation(line: 326, column: 20, scope: !4364)
!4367 = !DILocation(line: 326, column: 6, scope: !4329)
!4368 = !DILocation(line: 335, column: 50, scope: !4329)
!4369 = !DILocation(line: 335, column: 58, scope: !4329)
!4370 = !DILocation(line: 335, column: 24, scope: !4329)
!4371 = !DILocation(line: 336, column: 17, scope: !4329)
!4372 = !DILocation(line: 338, column: 9, scope: !4373)
!4373 = distinct !DILexicalBlock(scope: !4329, file: !3816, line: 338, column: 6)
!4374 = !DILocation(line: 338, column: 6, scope: !4329)
!4375 = !DILocation(line: 341, column: 17, scope: !4329)
!4376 = !DILocation(line: 344, column: 20, scope: !4329)
!4377 = !DILocation(line: 344, column: 8, scope: !4329)
!4378 = !DILocation(line: 344, column: 47, scope: !4329)
!4379 = !DILocation(line: 345, column: 39, scope: !4329)
!4380 = !DILocation(line: 348, column: 16, scope: !4329)
!4381 = !DILocation(line: 349, column: 26, scope: !4329)
!4382 = !DILocation(line: 349, column: 24, scope: !4329)
!4383 = !DILocation(line: 353, column: 8, scope: !4384)
!4384 = distinct !DILexicalBlock(scope: !4329, file: !3816, line: 353, column: 6)
!4385 = !DILocation(line: 353, column: 6, scope: !4329)
!4386 = !DILocation(line: 354, column: 3, scope: !4387)
!4387 = distinct !DILexicalBlock(scope: !4384, file: !3816, line: 353, column: 14)
!4388 = !DILocation(line: 355, column: 3, scope: !4387)
!4389 = !DILocation(line: 356, column: 2, scope: !4387)
!4390 = !DILocation(line: 359, column: 6, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4329, file: !3816, line: 359, column: 6)
!4392 = !DILocation(line: 359, column: 24, scope: !4391)
!4393 = !DILocation(line: 359, column: 6, scope: !4329)
!4394 = !DILocation(line: 360, column: 3, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4391, file: !3816, line: 359, column: 33)
!4396 = !DILocation(line: 361, column: 3, scope: !4395)
!4397 = !DILocation(line: 362, column: 2, scope: !4395)
!4398 = !DILocation(line: 364, column: 2, scope: !4329)
!4399 = !DILocation(line: 377, column: 1, scope: !4329)
!4400 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3816, file: !3816, line: 379, type: !4401, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !4403)
!4401 = !DISubroutineType(types: !4402)
!4402 = !{!102, !3819, !102, !252, !252}
!4403 = !{!4404, !4405, !4406, !4407, !4408, !4409, !4410, !4411, !4412, !4413, !4419, !4420}
!4404 = !DILocalVariable(name: "heap", arg: 1, scope: !4400, file: !3816, line: 379, type: !3819)
!4405 = !DILocalVariable(name: "ptr", arg: 2, scope: !4400, file: !3816, line: 379, type: !102)
!4406 = !DILocalVariable(name: "align", arg: 3, scope: !4400, file: !3816, line: 380, type: !252)
!4407 = !DILocalVariable(name: "bytes", arg: 4, scope: !4400, file: !3816, line: 380, type: !252)
!4408 = !DILocalVariable(name: "h", scope: !4400, file: !3816, line: 382, type: !2444)
!4409 = !DILocalVariable(name: "c", scope: !4400, file: !3816, line: 399, type: !2449)
!4410 = !DILocalVariable(name: "rc", scope: !4400, file: !3816, line: 400, type: !2449)
!4411 = !DILocalVariable(name: "align_gap", scope: !4400, file: !3816, line: 401, type: !252)
!4412 = !DILocalVariable(name: "chunks_need", scope: !4400, file: !3816, line: 402, type: !3942)
!4413 = !DILocalVariable(name: "split_size", scope: !4414, file: !3816, line: 435, type: !3942)
!4414 = distinct !DILexicalBlock(scope: !4415, file: !3816, line: 433, column: 61)
!4415 = distinct !DILexicalBlock(scope: !4416, file: !3816, line: 432, column: 13)
!4416 = distinct !DILexicalBlock(scope: !4417, file: !3816, line: 409, column: 13)
!4417 = distinct !DILexicalBlock(scope: !4418, file: !3816, line: 406, column: 13)
!4418 = distinct !DILexicalBlock(scope: !4400, file: !3816, line: 404, column: 6)
!4419 = !DILocalVariable(name: "ptr2", scope: !4400, file: !3816, line: 474, type: !102)
!4420 = !DILocalVariable(name: "prev_size", scope: !4421, file: !3816, line: 477, type: !252)
!4421 = distinct !DILexicalBlock(scope: !4422, file: !3816, line: 476, column: 20)
!4422 = distinct !DILexicalBlock(scope: !4400, file: !3816, line: 476, column: 6)
!4423 = !DILocation(line: 0, scope: !4400)
!4424 = !DILocation(line: 382, column: 27, scope: !4400)
!4425 = !DILocation(line: 385, column: 10, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !4400, file: !3816, line: 385, column: 6)
!4427 = !DILocation(line: 385, column: 6, scope: !4400)
!4428 = !DILocation(line: 386, column: 10, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4426, file: !3816, line: 385, column: 19)
!4430 = !DILocation(line: 386, column: 3, scope: !4429)
!4431 = !DILocation(line: 388, column: 12, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4400, file: !3816, line: 388, column: 6)
!4433 = !DILocation(line: 388, column: 6, scope: !4400)
!4434 = !DILocation(line: 389, column: 3, scope: !4435)
!4435 = distinct !DILexicalBlock(scope: !4432, file: !3816, line: 388, column: 18)
!4436 = !DILocation(line: 390, column: 3, scope: !4435)
!4437 = !DILocation(line: 395, column: 6, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4400, file: !3816, line: 395, column: 6)
!4439 = !DILocation(line: 395, column: 6, scope: !4400)
!4440 = !DILocation(line: 399, column: 16, scope: !4400)
!4441 = !DILocation(line: 400, column: 17, scope: !4400)
!4442 = !DILocation(line: 401, column: 49, scope: !4400)
!4443 = !DILocation(line: 401, column: 36, scope: !4400)
!4444 = !DILocation(line: 402, column: 52, scope: !4400)
!4445 = !DILocation(line: 402, column: 26, scope: !4400)
!4446 = !DILocation(line: 404, column: 6, scope: !4418)
!4447 = !DILocation(line: 404, column: 12, scope: !4418)
!4448 = !DILocation(line: 404, column: 40, scope: !4418)
!4449 = !DILocation(line: 404, column: 31, scope: !4418)
!4450 = !DILocation(line: 404, column: 6, scope: !4400)
!4451 = !DILocation(line: 406, column: 13, scope: !4417)
!4452 = !DILocation(line: 406, column: 30, scope: !4417)
!4453 = !DILocation(line: 406, column: 13, scope: !4418)
!4454 = !DILocation(line: 409, column: 30, scope: !4416)
!4455 = !DILocation(line: 409, column: 13, scope: !4417)
!4456 = !DILocation(line: 420, column: 24, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4416, file: !3816, line: 409, column: 45)
!4458 = !DILocation(line: 420, column: 3, scope: !4457)
!4459 = !DILocation(line: 421, column: 3, scope: !4457)
!4460 = !DILocation(line: 422, column: 3, scope: !4457)
!4461 = !DILocation(line: 431, column: 3, scope: !4457)
!4462 = !DILocation(line: 432, column: 14, scope: !4415)
!4463 = !DILocation(line: 432, column: 32, scope: !4415)
!4464 = !DILocation(line: 433, column: 26, scope: !4415)
!4465 = !DILocation(line: 433, column: 24, scope: !4415)
!4466 = !DILocation(line: 433, column: 44, scope: !4415)
!4467 = !DILocation(line: 432, column: 13, scope: !4416)
!4468 = !DILocation(line: 435, column: 38, scope: !4414)
!4469 = !DILocation(line: 0, scope: !4414)
!4470 = !DILocation(line: 445, column: 3, scope: !4414)
!4471 = !DILocation(line: 447, column: 20, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4414, file: !3816, line: 447, column: 7)
!4473 = !DILocation(line: 447, column: 18, scope: !4472)
!4474 = !DILocation(line: 447, column: 7, scope: !4414)
!4475 = !DILocation(line: 448, column: 27, scope: !4476)
!4476 = distinct !DILexicalBlock(scope: !4472, file: !3816, line: 447, column: 39)
!4477 = !DILocation(line: 448, column: 4, scope: !4476)
!4478 = !DILocation(line: 449, column: 4, scope: !4476)
!4479 = !DILocation(line: 450, column: 3, scope: !4476)
!4480 = !DILocation(line: 452, column: 3, scope: !4414)
!4481 = !DILocation(line: 453, column: 3, scope: !4414)
!4482 = !DILocation(line: 474, column: 15, scope: !4400)
!4483 = !DILocation(line: 476, column: 11, scope: !4422)
!4484 = !DILocation(line: 476, column: 6, scope: !4400)
!4485 = !DILocation(line: 477, column: 42, scope: !4421)
!4486 = !DILocation(line: 477, column: 22, scope: !4421)
!4487 = !DILocation(line: 477, column: 60, scope: !4421)
!4488 = !DILocation(line: 0, scope: !4421)
!4489 = !DILocation(line: 479, column: 21, scope: !4421)
!4490 = !DILocation(line: 479, column: 3, scope: !4421)
!4491 = !DILocation(line: 480, column: 3, scope: !4421)
!4492 = !DILocation(line: 481, column: 2, scope: !4421)
!4493 = !DILocation(line: 483, column: 1, scope: !4400)
!4494 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2431, file: !2431, line: 245, type: !4495, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !4497)
!4495 = !DISubroutineType(types: !4496)
!4496 = !{!252, !2444, !3942}
!4497 = !{!4498, !4499}
!4498 = !DILocalVariable(name: "h", arg: 1, scope: !4494, file: !2431, line: 245, type: !2444)
!4499 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4494, file: !2431, line: 245, type: !3942)
!4500 = !DILocation(line: 0, scope: !4494)
!4501 = !DILocation(line: 247, column: 20, scope: !4494)
!4502 = !DILocation(line: 247, column: 33, scope: !4494)
!4503 = !DILocation(line: 247, column: 2, scope: !4494)
!4504 = distinct !DISubprogram(name: "sys_heap_init", scope: !3816, file: !3816, line: 485, type: !4505, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !4507)
!4505 = !DISubroutineType(types: !4506)
!4506 = !{null, !3819, !102, !252}
!4507 = !{!4508, !4509, !4510, !4511, !4512, !4513, !4514, !4515, !4516, !4517}
!4508 = !DILocalVariable(name: "heap", arg: 1, scope: !4504, file: !3816, line: 485, type: !3819)
!4509 = !DILocalVariable(name: "mem", arg: 2, scope: !4504, file: !3816, line: 485, type: !102)
!4510 = !DILocalVariable(name: "bytes", arg: 3, scope: !4504, file: !3816, line: 485, type: !252)
!4511 = !DILocalVariable(name: "addr", scope: !4504, file: !3816, line: 502, type: !22)
!4512 = !DILocalVariable(name: "end", scope: !4504, file: !3816, line: 503, type: !22)
!4513 = !DILocalVariable(name: "heap_sz", scope: !4504, file: !3816, line: 504, type: !3942)
!4514 = !DILocalVariable(name: "h", scope: !4504, file: !3816, line: 509, type: !2444)
!4515 = !DILocalVariable(name: "nb_buckets", scope: !4504, file: !3816, line: 520, type: !107)
!4516 = !DILocalVariable(name: "chunk0_size", scope: !4504, file: !3816, line: 521, type: !3942)
!4517 = !DILocalVariable(name: "i", scope: !4518, file: !3816, line: 526, type: !107)
!4518 = distinct !DILexicalBlock(scope: !4504, file: !3816, line: 526, column: 2)
!4519 = !DILocation(line: 0, scope: !4504)
!4520 = !DILocation(line: 499, column: 8, scope: !4504)
!4521 = !DILocation(line: 502, column: 19, scope: !4504)
!4522 = !DILocation(line: 503, column: 18, scope: !4504)
!4523 = !DILocation(line: 504, column: 27, scope: !4504)
!4524 = !DILocation(line: 504, column: 35, scope: !4504)
!4525 = !DILocation(line: 509, column: 21, scope: !4504)
!4526 = !DILocation(line: 510, column: 8, scope: !4504)
!4527 = !DILocation(line: 510, column: 13, scope: !4504)
!4528 = !DILocation(line: 511, column: 5, scope: !4504)
!4529 = !DILocation(line: 511, column: 15, scope: !4504)
!4530 = !DILocation(line: 512, column: 5, scope: !4504)
!4531 = !DILocation(line: 512, column: 19, scope: !4504)
!4532 = !DILocation(line: 520, column: 19, scope: !4504)
!4533 = !DILocation(line: 522, column: 21, scope: !4504)
!4534 = !DILocation(line: 521, column: 56, scope: !4504)
!4535 = !DILocation(line: 521, column: 26, scope: !4504)
!4536 = !DILocation(line: 0, scope: !4518)
!4537 = !DILocation(line: 526, column: 20, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !4518, file: !3816, line: 526, column: 2)
!4539 = !DILocation(line: 526, column: 2, scope: !4518)
!4540 = !DILocation(line: 531, column: 2, scope: !4504)
!4541 = !DILocation(line: 532, column: 2, scope: !4504)
!4542 = !DILocation(line: 533, column: 2, scope: !4504)
!4543 = !DILocation(line: 536, column: 41, scope: !4504)
!4544 = !DILocation(line: 536, column: 2, scope: !4504)
!4545 = !DILocation(line: 537, column: 2, scope: !4504)
!4546 = !DILocation(line: 540, column: 2, scope: !4504)
!4547 = !DILocation(line: 541, column: 2, scope: !4504)
!4548 = !DILocation(line: 542, column: 2, scope: !4504)
!4549 = !DILocation(line: 544, column: 2, scope: !4504)
!4550 = !DILocation(line: 545, column: 1, scope: !4504)
!4551 = !DILocation(line: 527, column: 17, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4538, file: !3816, line: 526, column: 39)
!4553 = !DILocation(line: 527, column: 22, scope: !4552)
!4554 = !DILocation(line: 526, column: 35, scope: !4538)
!4555 = distinct !{!4555, !4539, !4556}
!4556 = !DILocation(line: 528, column: 2, scope: !4518)
!4557 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2464, file: !2464, line: 1338, type: !4558, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !4566)
!4558 = !DISubroutineType(types: !4559)
!4559 = !{!107, !3547, !102, !123, !4560, !162}
!4560 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3513, line: 99, baseType: !4561)
!4561 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3513, line: 40, baseType: !4562)
!4562 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2464, baseType: !4563)
!4563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4564)
!4564 = !{!4565}
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4563, file: !2464, baseType: !102, size: 32)
!4566 = !{!4567, !4568, !4569, !4570, !4571, !4572, !4576, !4577, !4578, !4580, !4585, !4630, !4633, !4636, !4637, !4638, !4639, !4640, !4641, !4642, !4645, !4646, !4647, !4651, !4654, !4656, !4659, !4660, !4661, !4666, !4672, !4675, !4679, !4685, !4689, !4692, !4694, !4697}
!4567 = !DILocalVariable(name: "out", arg: 1, scope: !4557, file: !2464, line: 1338, type: !3547)
!4568 = !DILocalVariable(name: "ctx", arg: 2, scope: !4557, file: !2464, line: 1338, type: !102)
!4569 = !DILocalVariable(name: "fp", arg: 3, scope: !4557, file: !2464, line: 1338, type: !123)
!4570 = !DILocalVariable(name: "ap", arg: 4, scope: !4557, file: !2464, line: 1339, type: !4560)
!4571 = !DILocalVariable(name: "flags", arg: 5, scope: !4557, file: !2464, line: 1339, type: !162)
!4572 = !DILocalVariable(name: "buf", scope: !4557, file: !2464, line: 1341, type: !4573)
!4573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, size: 176, elements: !4574)
!4574 = !{!4575}
!4575 = !DISubrange(count: 22)
!4576 = !DILocalVariable(name: "count", scope: !4557, file: !2464, line: 1342, type: !252)
!4577 = !DILocalVariable(name: "sint", scope: !4557, file: !2464, line: 1343, type: !2483)
!4578 = !DILocalVariable(name: "tagged_ap", scope: !4557, file: !2464, line: 1345, type: !4579)
!4579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !136)
!4580 = !DILocalVariable(name: "rc", scope: !4581, file: !2464, line: 1377, type: !107)
!4581 = distinct !DILexicalBlock(scope: !4582, file: !2464, line: 1377, column: 4)
!4582 = distinct !DILexicalBlock(scope: !4583, file: !2464, line: 1376, column: 19)
!4583 = distinct !DILexicalBlock(scope: !4584, file: !2464, line: 1376, column: 7)
!4584 = distinct !DILexicalBlock(scope: !4557, file: !2464, line: 1375, column: 19)
!4585 = !DILocalVariable(name: "state", scope: !4584, file: !2464, line: 1395, type: !4586)
!4586 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4557, file: !2464, line: 1392, size: 192, elements: !4587)
!4587 = !{!4588, !4598}
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4586, file: !2464, line: 1393, baseType: !4589, size: 64)
!4589 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2464, line: 166, size: 64, elements: !4590)
!4590 = !{!4591, !4592, !4593, !4595, !4597}
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4589, file: !2464, line: 168, baseType: !2483, size: 64)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4589, file: !2464, line: 171, baseType: !2486, size: 64)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4589, file: !2464, line: 174, baseType: !4594, size: 64)
!4594 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4589, file: !2464, line: 177, baseType: !4596, size: 64)
!4596 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4589, file: !2464, line: 180, baseType: !102, size: 32)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4586, file: !2464, line: 1394, baseType: !4599, size: 96, offset: 64)
!4599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2464, line: 189, size: 96, elements: !4600)
!4600 = !{!4601, !4602, !4603, !4604, !4605, !4606, !4607, !4608, !4609, !4610, !4611, !4612, !4613, !4614, !4615, !4616, !4617, !4618, !4619, !4620, !4625}
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4599, file: !2464, line: 191, baseType: !136, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4599, file: !2464, line: 194, baseType: !136, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4599, file: !2464, line: 197, baseType: !136, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4599, file: !2464, line: 200, baseType: !136, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4599, file: !2464, line: 203, baseType: !136, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4599, file: !2464, line: 206, baseType: !136, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4599, file: !2464, line: 209, baseType: !136, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4599, file: !2464, line: 212, baseType: !136, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4599, file: !2464, line: 219, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4599, file: !2464, line: 222, baseType: !136, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4599, file: !2464, line: 229, baseType: !136, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4599, file: !2464, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4599, file: !2464, line: 238, baseType: !136, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4599, file: !2464, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4599, file: !2464, line: 244, baseType: !136, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4599, file: !2464, line: 247, baseType: !136, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4599, file: !2464, line: 252, baseType: !136, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4599, file: !2464, line: 257, baseType: !136, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4599, file: !2464, line: 260, baseType: !134, size: 8, offset: 24)
!4620 = !DIDerivedType(tag: DW_TAG_member, scope: !4599, file: !2464, line: 262, baseType: !4621, size: 32, offset: 32)
!4621 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4599, file: !2464, line: 262, size: 32, elements: !4622)
!4622 = !{!4623, !4624}
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4621, file: !2464, line: 267, baseType: !107, size: 32)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4621, file: !2464, line: 289, baseType: !107, size: 32)
!4625 = !DIDerivedType(tag: DW_TAG_member, scope: !4599, file: !2464, line: 292, baseType: !4626, size: 32, offset: 64)
!4626 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4599, file: !2464, line: 292, size: 32, elements: !4627)
!4627 = !{!4628, !4629}
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4626, file: !2464, line: 297, baseType: !107, size: 32)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4626, file: !2464, line: 306, baseType: !107, size: 32)
!4630 = !DILocalVariable(name: "conv", scope: !4584, file: !2464, line: 1400, type: !4631)
!4631 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4632)
!4632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4599, size: 32)
!4633 = !DILocalVariable(name: "value", scope: !4584, file: !2464, line: 1401, type: !4634)
!4634 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4635)
!4635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4589, size: 32)
!4636 = !DILocalVariable(name: "sp", scope: !4584, file: !2464, line: 1402, type: !123)
!4637 = !DILocalVariable(name: "width", scope: !4584, file: !2464, line: 1403, type: !107)
!4638 = !DILocalVariable(name: "precision", scope: !4584, file: !2464, line: 1404, type: !107)
!4639 = !DILocalVariable(name: "bps", scope: !4584, file: !2464, line: 1405, type: !123)
!4640 = !DILocalVariable(name: "bpe", scope: !4584, file: !2464, line: 1406, type: !123)
!4641 = !DILocalVariable(name: "sign", scope: !4584, file: !2464, line: 1407, type: !125)
!4642 = !DILocalVariable(name: "arg", scope: !4643, file: !2464, line: 1432, type: !107)
!4643 = distinct !DILexicalBlock(scope: !4644, file: !2464, line: 1431, column: 24)
!4644 = distinct !DILexicalBlock(scope: !4584, file: !2464, line: 1431, column: 7)
!4645 = !DILocalVariable(name: "specifier_cat", scope: !4584, file: !2464, line: 1468, type: !2463)
!4646 = !DILocalVariable(name: "length_mod", scope: !4584, file: !2464, line: 1470, type: !2471)
!4647 = !DILocalVariable(name: "rc", scope: !4648, file: !2464, line: 1575, type: !107)
!4648 = distinct !DILexicalBlock(scope: !4649, file: !2464, line: 1575, column: 4)
!4649 = distinct !DILexicalBlock(scope: !4650, file: !2464, line: 1574, column: 43)
!4650 = distinct !DILexicalBlock(scope: !4584, file: !2464, line: 1574, column: 7)
!4651 = !DILocalVariable(name: "rc", scope: !4652, file: !2464, line: 1584, type: !107)
!4652 = distinct !DILexicalBlock(scope: !4653, file: !2464, line: 1584, column: 4)
!4653 = distinct !DILexicalBlock(scope: !4584, file: !2464, line: 1582, column: 28)
!4654 = !DILocalVariable(name: "len", scope: !4655, file: !2464, line: 1589, type: !252)
!4655 = distinct !DILexicalBlock(scope: !4653, file: !2464, line: 1586, column: 13)
!4656 = !DILocalVariable(name: "len", scope: !4657, file: !2464, line: 1641, type: !252)
!4657 = distinct !DILexicalBlock(scope: !4658, file: !2464, line: 1640, column: 24)
!4658 = distinct !DILexicalBlock(scope: !4653, file: !2464, line: 1640, column: 8)
!4659 = !DILocalVariable(name: "nj_len", scope: !4584, file: !2464, line: 1722, type: !252)
!4660 = !DILocalVariable(name: "pad_len", scope: !4584, file: !2464, line: 1723, type: !107)
!4661 = !DILocalVariable(name: "pad", scope: !4662, file: !2464, line: 1751, type: !125)
!4662 = distinct !DILexicalBlock(scope: !4663, file: !2464, line: 1750, column: 26)
!4663 = distinct !DILexicalBlock(scope: !4664, file: !2464, line: 1750, column: 8)
!4664 = distinct !DILexicalBlock(scope: !4665, file: !2464, line: 1747, column: 18)
!4665 = distinct !DILexicalBlock(scope: !4584, file: !2464, line: 1747, column: 7)
!4666 = !DILocalVariable(name: "rc", scope: !4667, file: !2464, line: 1758, type: !107)
!4667 = distinct !DILexicalBlock(scope: !4668, file: !2464, line: 1758, column: 7)
!4668 = distinct !DILexicalBlock(scope: !4669, file: !2464, line: 1757, column: 21)
!4669 = distinct !DILexicalBlock(scope: !4670, file: !2464, line: 1757, column: 10)
!4670 = distinct !DILexicalBlock(scope: !4671, file: !2464, line: 1756, column: 26)
!4671 = distinct !DILexicalBlock(scope: !4662, file: !2464, line: 1756, column: 9)
!4672 = !DILocalVariable(name: "rc", scope: !4673, file: !2464, line: 1765, type: !107)
!4673 = distinct !DILexicalBlock(scope: !4674, file: !2464, line: 1765, column: 6)
!4674 = distinct !DILexicalBlock(scope: !4662, file: !2464, line: 1764, column: 25)
!4675 = !DILocalVariable(name: "rc", scope: !4676, file: !2464, line: 1774, type: !107)
!4676 = distinct !DILexicalBlock(scope: !4677, file: !2464, line: 1774, column: 4)
!4677 = distinct !DILexicalBlock(scope: !4678, file: !2464, line: 1773, column: 18)
!4678 = distinct !DILexicalBlock(scope: !4584, file: !2464, line: 1773, column: 7)
!4679 = !DILocalVariable(name: "rc", scope: !4680, file: !2464, line: 1819, type: !107)
!4680 = distinct !DILexicalBlock(scope: !4681, file: !2464, line: 1819, column: 5)
!4681 = distinct !DILexicalBlock(scope: !4682, file: !2464, line: 1818, column: 44)
!4682 = distinct !DILexicalBlock(scope: !4683, file: !2464, line: 1818, column: 8)
!4683 = distinct !DILexicalBlock(scope: !4684, file: !2464, line: 1817, column: 10)
!4684 = distinct !DILexicalBlock(scope: !4584, file: !2464, line: 1777, column: 7)
!4685 = !DILocalVariable(name: "rc", scope: !4686, file: !2464, line: 1823, type: !107)
!4686 = distinct !DILexicalBlock(scope: !4687, file: !2464, line: 1823, column: 5)
!4687 = distinct !DILexicalBlock(scope: !4688, file: !2464, line: 1822, column: 26)
!4688 = distinct !DILexicalBlock(scope: !4683, file: !2464, line: 1822, column: 8)
!4689 = !DILocalVariable(name: "rc", scope: !4690, file: !2464, line: 1828, type: !107)
!4690 = distinct !DILexicalBlock(scope: !4691, file: !2464, line: 1828, column: 5)
!4691 = distinct !DILexicalBlock(scope: !4683, file: !2464, line: 1827, column: 26)
!4692 = !DILocalVariable(name: "rc", scope: !4693, file: !2464, line: 1831, type: !107)
!4693 = distinct !DILexicalBlock(scope: !4683, file: !2464, line: 1831, column: 4)
!4694 = !DILocalVariable(name: "rc", scope: !4695, file: !2464, line: 1836, type: !107)
!4695 = distinct !DILexicalBlock(scope: !4696, file: !2464, line: 1836, column: 4)
!4696 = distinct !DILexicalBlock(scope: !4584, file: !2464, line: 1835, column: 21)
!4697 = !DILabel(scope: !4653, name: "prec_int_pad0", file: !2464, line: 1634)
!4698 = !DILocation(line: 0, scope: !4557)
!4699 = !DILocation(line: 1341, column: 2, scope: !4557)
!4700 = !DILocation(line: 1341, column: 7, scope: !4557)
!4701 = !DILocation(line: 1375, column: 2, scope: !4557)
!4702 = !DILocation(line: 1342, column: 9, scope: !4557)
!4703 = !DILocation(line: 1375, column: 9, scope: !4557)
!4704 = !DILocation(line: 1377, column: 4, scope: !4581)
!4705 = !DILocation(line: 0, scope: !4581)
!4706 = !DILocation(line: 1377, column: 4, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4581, file: !2464, line: 1377, column: 4)
!4708 = distinct !{!4708, !4701, !4709}
!4709 = !DILocation(line: 1839, column: 2, scope: !4557)
!4710 = !DILocation(line: 1392, column: 3, scope: !4584)
!4711 = !DILocation(line: 1395, column: 5, scope: !4584)
!4712 = !DILocation(line: 0, scope: !4584)
!4713 = !DILocation(line: 1409, column: 8, scope: !4584)
!4714 = !DILocation(line: 1414, column: 13, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4584, file: !2464, line: 1414, column: 7)
!4716 = !DILocation(line: 1414, column: 7, scope: !4584)
!4717 = !DILocation(line: 1415, column: 12, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4715, file: !2464, line: 1414, column: 25)
!4719 = !DILocation(line: 1417, column: 14, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4718, file: !2464, line: 1417, column: 8)
!4721 = !DILocation(line: 1417, column: 8, scope: !4718)
!4722 = !DILocation(line: 1418, column: 21, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4720, file: !2464, line: 1417, column: 19)
!4724 = !DILocation(line: 1419, column: 13, scope: !4723)
!4725 = !DILocation(line: 1420, column: 4, scope: !4723)
!4726 = !DILocation(line: 1421, column: 20, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4715, file: !2464, line: 1421, column: 14)
!4728 = !DILocation(line: 1421, column: 14, scope: !4715)
!4729 = !DILocation(line: 1431, column: 13, scope: !4644)
!4730 = !DILocation(line: 1431, column: 7, scope: !4584)
!4731 = !DILocation(line: 1432, column: 14, scope: !4643)
!4732 = !DILocation(line: 0, scope: !4643)
!4733 = !DILocation(line: 1434, column: 12, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4643, file: !2464, line: 1434, column: 8)
!4735 = !DILocation(line: 1434, column: 8, scope: !4643)
!4736 = !DILocation(line: 1435, column: 24, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4734, file: !2464, line: 1434, column: 17)
!4738 = !DILocation(line: 1436, column: 4, scope: !4737)
!4739 = !DILocation(line: 1439, column: 20, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4644, file: !2464, line: 1439, column: 14)
!4741 = !DILocation(line: 1439, column: 14, scope: !4644)
!4742 = !DILocation(line: 1469, column: 37, scope: !4584)
!4743 = !DILocation(line: 1448, column: 20, scope: !4584)
!4744 = !DILocation(line: 1449, column: 22, scope: !4584)
!4745 = !DILocation(line: 1471, column: 34, scope: !4584)
!4746 = !DILocation(line: 1478, column: 7, scope: !4584)
!4747 = !DILocation(line: 1479, column: 4, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4749, file: !2464, line: 1478, column: 40)
!4749 = distinct !DILexicalBlock(scope: !4584, file: !2464, line: 1478, column: 7)
!4750 = !DILocation(line: 1484, column: 19, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4748, file: !2464, line: 1479, column: 24)
!4752 = !DILocation(line: 1484, column: 17, scope: !4751)
!4753 = !DILocation(line: 1485, column: 5, scope: !4751)
!4754 = !DILocation(line: 1492, column: 20, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4756, file: !2464, line: 1491, column: 12)
!4756 = distinct !DILexicalBlock(scope: !4751, file: !2464, line: 1487, column: 9)
!4757 = !DILocation(line: 1492, column: 18, scope: !4755)
!4758 = !DILocation(line: 1494, column: 5, scope: !4751)
!4759 = !DILocation(line: 1497, column: 23, scope: !4751)
!4760 = !DILocation(line: 1496, column: 17, scope: !4751)
!4761 = !DILocation(line: 1498, column: 5, scope: !4751)
!4762 = !DILocation(line: 1501, column: 23, scope: !4751)
!4763 = !DILocation(line: 1500, column: 17, scope: !4751)
!4764 = !DILocation(line: 1502, column: 5, scope: !4751)
!4765 = !DILocation(line: 1513, column: 23, scope: !4751)
!4766 = !DILocation(line: 1513, column: 6, scope: !4751)
!4767 = !DILocation(line: 1512, column: 17, scope: !4751)
!4768 = !DILocation(line: 1514, column: 5, scope: !4751)
!4769 = !DILocation(line: 0, scope: !4751)
!4770 = !DILocation(line: 1516, column: 8, scope: !4748)
!4771 = !DILocation(line: 1517, column: 19, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4773, file: !2464, line: 1516, column: 33)
!4773 = distinct !DILexicalBlock(scope: !4748, file: !2464, line: 1516, column: 8)
!4774 = !DILocation(line: 1517, column: 17, scope: !4772)
!4775 = !DILocation(line: 1518, column: 4, scope: !4772)
!4776 = !DILocation(line: 1519, column: 19, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4778, file: !2464, line: 1518, column: 39)
!4778 = distinct !DILexicalBlock(scope: !4773, file: !2464, line: 1518, column: 15)
!4779 = !DILocation(line: 1519, column: 17, scope: !4777)
!4780 = !DILocation(line: 1520, column: 4, scope: !4777)
!4781 = !DILocation(line: 1522, column: 4, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4783, file: !2464, line: 1521, column: 47)
!4783 = distinct !DILexicalBlock(scope: !4749, file: !2464, line: 1521, column: 14)
!4784 = !DILocation(line: 1527, column: 19, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4782, file: !2464, line: 1522, column: 24)
!4786 = !DILocation(line: 1527, column: 17, scope: !4785)
!4787 = !DILocation(line: 1528, column: 5, scope: !4785)
!4788 = !DILocation(line: 0, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4785, file: !2464, line: 1530, column: 9)
!4790 = !DILocation(line: 1540, column: 23, scope: !4785)
!4791 = !DILocation(line: 1539, column: 17, scope: !4785)
!4792 = !DILocation(line: 1542, column: 5, scope: !4785)
!4793 = !DILocation(line: 1545, column: 23, scope: !4785)
!4794 = !DILocation(line: 1544, column: 17, scope: !4785)
!4795 = !DILocation(line: 1547, column: 5, scope: !4785)
!4796 = !DILocation(line: 1551, column: 23, scope: !4785)
!4797 = !DILocation(line: 1551, column: 6, scope: !4785)
!4798 = !DILocation(line: 1550, column: 17, scope: !4785)
!4799 = !DILocation(line: 1552, column: 5, scope: !4785)
!4800 = !DILocation(line: 0, scope: !4785)
!4801 = !DILocation(line: 1554, column: 8, scope: !4782)
!4802 = !DILocation(line: 1555, column: 19, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4804, file: !2464, line: 1554, column: 33)
!4804 = distinct !DILexicalBlock(scope: !4782, file: !2464, line: 1554, column: 8)
!4805 = !DILocation(line: 1555, column: 17, scope: !4803)
!4806 = !DILocation(line: 1556, column: 4, scope: !4803)
!4807 = !DILocation(line: 1557, column: 19, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4809, file: !2464, line: 1556, column: 39)
!4809 = distinct !DILexicalBlock(scope: !4804, file: !2464, line: 1556, column: 15)
!4810 = !DILocation(line: 1557, column: 17, scope: !4808)
!4811 = !DILocation(line: 1558, column: 4, scope: !4808)
!4812 = !DILocation(line: 0, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !4814, file: !2464, line: 1560, column: 8)
!4814 = distinct !DILexicalBlock(scope: !4815, file: !2464, line: 1559, column: 45)
!4815 = distinct !DILexicalBlock(scope: !4783, file: !2464, line: 1559, column: 14)
!4816 = !DILocation(line: 1566, column: 17, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4818, file: !2464, line: 1565, column: 46)
!4818 = distinct !DILexicalBlock(scope: !4815, file: !2464, line: 1565, column: 14)
!4819 = !DILocation(line: 1566, column: 15, scope: !4817)
!4820 = !DILocation(line: 1567, column: 3, scope: !4817)
!4821 = !DILocation(line: 1574, column: 21, scope: !4650)
!4822 = !DILocation(line: 1575, column: 4, scope: !4648)
!4823 = !DILocation(line: 0, scope: !4648)
!4824 = !DILocation(line: 1575, column: 4, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4648, file: !2464, line: 1575, column: 4)
!4826 = !DILocation(line: 1582, column: 17, scope: !4584)
!4827 = !DILocation(line: 1582, column: 3, scope: !4584)
!4828 = !DILocation(line: 1584, column: 4, scope: !4652)
!4829 = !DILocation(line: 0, scope: !4652)
!4830 = !DILocation(line: 1584, column: 4, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4652, file: !2464, line: 1584, column: 4)
!4832 = !DILocation(line: 1587, column: 31, scope: !4655)
!4833 = !DILocation(line: 1591, column: 18, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4655, file: !2464, line: 1591, column: 8)
!4835 = !DILocation(line: 1591, column: 8, scope: !4655)
!4836 = !DILocation(line: 1592, column: 11, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4834, file: !2464, line: 1591, column: 24)
!4838 = !DILocation(line: 0, scope: !4655)
!4839 = !DILocation(line: 1593, column: 4, scope: !4837)
!4840 = !DILocation(line: 1594, column: 11, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4834, file: !2464, line: 1593, column: 11)
!4842 = !DILocation(line: 1604, column: 51, scope: !4653)
!4843 = !DILocation(line: 1604, column: 13, scope: !4653)
!4844 = !DILocation(line: 1604, column: 11, scope: !4653)
!4845 = !DILocation(line: 1606, column: 4, scope: !4653)
!4846 = !DILocation(line: 1609, column: 14, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4653, file: !2464, line: 1609, column: 8)
!4848 = !DILocation(line: 1609, column: 8, scope: !4653)
!4849 = !DILocation(line: 1619, column: 18, scope: !4653)
!4850 = !DILocation(line: 1620, column: 13, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4653, file: !2464, line: 1620, column: 8)
!4852 = !DILocation(line: 1620, column: 8, scope: !4653)
!4853 = !DILocation(line: 1622, column: 36, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4851, file: !2464, line: 1620, column: 18)
!4855 = !DILocation(line: 1622, column: 17, scope: !4854)
!4856 = !DILocation(line: 1623, column: 4, scope: !4854)
!4857 = !DILocation(line: 1632, column: 29, scope: !4653)
!4858 = !DILocation(line: 1632, column: 10, scope: !4653)
!4859 = !DILocation(line: 1632, column: 4, scope: !4653)
!4860 = !DILocation(line: 1407, column: 8, scope: !4584)
!4861 = !DILocation(line: 0, scope: !4653)
!4862 = !DILocation(line: 1634, column: 3, scope: !4653)
!4863 = !DILocation(line: 1640, column: 18, scope: !4658)
!4864 = !DILocation(line: 1640, column: 8, scope: !4653)
!4865 = !DILocation(line: 1729, column: 13, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4584, file: !2464, line: 1729, column: 7)
!4867 = !DILocation(line: 1641, column: 22, scope: !4657)
!4868 = !DILocation(line: 0, scope: !4657)
!4869 = !DILocation(line: 1646, column: 21, scope: !4657)
!4870 = !DILocation(line: 1649, column: 13, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4657, file: !2464, line: 1649, column: 9)
!4872 = !DILocation(line: 1649, column: 9, scope: !4657)
!4873 = !DILocation(line: 1650, column: 35, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4871, file: !2464, line: 1649, column: 34)
!4875 = !DILocation(line: 1650, column: 23, scope: !4874)
!4876 = !DILocation(line: 1651, column: 5, scope: !4874)
!4877 = !DILocation(line: 1660, column: 15, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4653, file: !2464, line: 1660, column: 8)
!4879 = !DILocation(line: 1660, column: 19, scope: !4878)
!4880 = !DILocation(line: 1660, column: 8, scope: !4653)
!4881 = !DILocation(line: 1661, column: 23, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4878, file: !2464, line: 1660, column: 28)
!4883 = !DILocation(line: 1661, column: 11, scope: !4882)
!4884 = !DILocation(line: 1665, column: 22, scope: !4882)
!4885 = !DILocation(line: 1666, column: 21, scope: !4882)
!4886 = !DILocation(line: 1668, column: 5, scope: !4882)
!4887 = !DILocation(line: 1677, column: 30, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4889, file: !2464, line: 1676, column: 49)
!4889 = distinct !DILexicalBlock(scope: !4653, file: !2464, line: 1676, column: 8)
!4890 = !DILocation(line: 1677, column: 5, scope: !4888)
!4891 = !DILocation(line: 1680, column: 4, scope: !4653)
!4892 = !DILocation(line: 0, scope: !4834)
!4893 = !DILocation(line: 1597, column: 14, scope: !4655)
!4894 = !DILocation(line: 1699, column: 11, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4584, file: !2464, line: 1699, column: 7)
!4896 = !DILocation(line: 1699, column: 7, scope: !4584)
!4897 = !DILocation(line: 1725, column: 7, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4584, file: !2464, line: 1725, column: 7)
!4899 = !DILocation(line: 1725, column: 12, scope: !4898)
!4900 = !DILocation(line: 1747, column: 13, scope: !4665)
!4901 = !DILocation(line: 1747, column: 7, scope: !4584)
!4902 = !DILocation(line: 1722, column: 24, scope: !4584)
!4903 = !DILocation(line: 1725, column: 7, scope: !4584)
!4904 = !DILocation(line: 1729, column: 7, scope: !4584)
!4905 = !DILocation(line: 1736, column: 13, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4584, file: !2464, line: 1736, column: 7)
!4907 = !DILocation(line: 1735, column: 19, scope: !4584)
!4908 = !DILocation(line: 1736, column: 7, scope: !4584)
!4909 = !DILocation(line: 1748, column: 10, scope: !4664)
!4910 = !DILocation(line: 1750, column: 15, scope: !4663)
!4911 = !DILocation(line: 1750, column: 8, scope: !4664)
!4912 = !DILocation(line: 0, scope: !4662)
!4913 = !DILocation(line: 1756, column: 15, scope: !4671)
!4914 = !DILocation(line: 1756, column: 9, scope: !4662)
!4915 = !DILocation(line: 1758, column: 7, scope: !4667)
!4916 = !DILocation(line: 0, scope: !4667)
!4917 = !DILocation(line: 1758, column: 7, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4667, file: !2464, line: 1758, column: 7)
!4919 = !DILocation(line: 1764, column: 5, scope: !4662)
!4920 = !DILocation(line: 0, scope: !4664)
!4921 = !DILocation(line: 1764, column: 20, scope: !4662)
!4922 = !DILocation(line: 1764, column: 17, scope: !4662)
!4923 = !DILocation(line: 1765, column: 6, scope: !4673)
!4924 = !DILocation(line: 0, scope: !4673)
!4925 = !DILocation(line: 1765, column: 6, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4673, file: !2464, line: 1765, column: 6)
!4927 = distinct !{!4927, !4919, !4928}
!4928 = !DILocation(line: 1766, column: 5, scope: !4662)
!4929 = !DILocation(line: 1773, column: 12, scope: !4678)
!4930 = !DILocation(line: 1773, column: 7, scope: !4584)
!4931 = !DILocation(line: 1773, column: 7, scope: !4678)
!4932 = !DILocation(line: 1774, column: 4, scope: !4676)
!4933 = !DILocation(line: 0, scope: !4676)
!4934 = !DILocation(line: 1774, column: 4, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4676, file: !2464, line: 1774, column: 4)
!4936 = !DILocation(line: 1818, column: 8, scope: !4682)
!4937 = !DILocation(line: 1818, column: 27, scope: !4682)
!4938 = !DILocation(line: 1818, column: 25, scope: !4682)
!4939 = !DILocation(line: 1818, column: 8, scope: !4683)
!4940 = !DILocation(line: 1819, column: 5, scope: !4680)
!4941 = !DILocation(line: 0, scope: !4680)
!4942 = !DILocation(line: 1819, column: 5, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4680, file: !2464, line: 1819, column: 5)
!4944 = !DILocation(line: 1822, column: 14, scope: !4688)
!4945 = !DILocation(line: 1822, column: 8, scope: !4683)
!4946 = !DILocation(line: 1823, column: 5, scope: !4686)
!4947 = !DILocation(line: 0, scope: !4686)
!4948 = !DILocation(line: 1823, column: 5, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4686, file: !2464, line: 1823, column: 5)
!4950 = !DILocation(line: 1826, column: 20, scope: !4683)
!4951 = !DILocation(line: 1827, column: 4, scope: !4683)
!4952 = !DILocation(line: 0, scope: !4683)
!4953 = !DILocation(line: 1827, column: 21, scope: !4683)
!4954 = !DILocation(line: 1827, column: 18, scope: !4683)
!4955 = !DILocation(line: 1828, column: 5, scope: !4690)
!4956 = !DILocation(line: 0, scope: !4690)
!4957 = !DILocation(line: 1828, column: 5, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4690, file: !2464, line: 1828, column: 5)
!4959 = distinct !{!4959, !4951, !4960}
!4960 = !DILocation(line: 1829, column: 4, scope: !4683)
!4961 = !DILocation(line: 1831, column: 4, scope: !4693)
!4962 = !DILocation(line: 0, scope: !4693)
!4963 = !DILocation(line: 1831, column: 4, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4693, file: !2464, line: 1831, column: 4)
!4965 = !DILocation(line: 1835, column: 16, scope: !4584)
!4966 = !DILocation(line: 1835, column: 3, scope: !4584)
!4967 = !DILocation(line: 1836, column: 4, scope: !4695)
!4968 = !DILocation(line: 0, scope: !4695)
!4969 = !DILocation(line: 1836, column: 4, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4695, file: !2464, line: 1836, column: 4)
!4971 = !DILocation(line: 1837, column: 4, scope: !4696)
!4972 = distinct !{!4972, !4966, !4973}
!4973 = !DILocation(line: 1838, column: 3, scope: !4584)
!4974 = !DILocation(line: 1844, column: 1, scope: !4557)
!4975 = distinct !DISubprogram(name: "extract_conversion", scope: !2464, file: !2464, line: 642, type: !4976, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !4978)
!4976 = !DISubroutineType(types: !4977)
!4977 = !{!123, !4632, !123}
!4978 = !{!4979, !4980}
!4979 = !DILocalVariable(name: "conv", arg: 1, scope: !4975, file: !2464, line: 642, type: !4632)
!4980 = !DILocalVariable(name: "sp", arg: 2, scope: !4975, file: !2464, line: 643, type: !123)
!4981 = !DILocation(line: 0, scope: !4975)
!4982 = !DILocation(line: 645, column: 10, scope: !4975)
!4983 = !DILocation(line: 653, column: 2, scope: !4975)
!4984 = !DILocation(line: 654, column: 6, scope: !4985)
!4985 = distinct !DILexicalBlock(scope: !4975, file: !2464, line: 654, column: 6)
!4986 = !DILocation(line: 654, column: 10, scope: !4985)
!4987 = !DILocation(line: 654, column: 6, scope: !4975)
!4988 = !DILocation(line: 655, column: 24, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4985, file: !2464, line: 654, column: 18)
!4990 = !DILocation(line: 655, column: 19, scope: !4989)
!4991 = !DILocation(line: 656, column: 3, scope: !4989)
!4992 = !DILocation(line: 659, column: 7, scope: !4975)
!4993 = !DILocation(line: 660, column: 7, scope: !4975)
!4994 = !DILocation(line: 661, column: 7, scope: !4975)
!4995 = !DILocation(line: 662, column: 7, scope: !4975)
!4996 = !DILocation(line: 663, column: 7, scope: !4975)
!4997 = !DILocation(line: 665, column: 2, scope: !4975)
!4998 = !DILocation(line: 666, column: 1, scope: !4975)
!4999 = distinct !DISubprogram(name: "outs", scope: !2464, file: !2464, line: 1319, type: !5000, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !5002)
!5000 = !DISubroutineType(types: !5001)
!5001 = !{!107, !3547, !102, !123, !123}
!5002 = !{!5003, !5004, !5005, !5006, !5007, !5008}
!5003 = !DILocalVariable(name: "out", arg: 1, scope: !4999, file: !2464, line: 1319, type: !3547)
!5004 = !DILocalVariable(name: "ctx", arg: 2, scope: !4999, file: !2464, line: 1320, type: !102)
!5005 = !DILocalVariable(name: "sp", arg: 3, scope: !4999, file: !2464, line: 1321, type: !123)
!5006 = !DILocalVariable(name: "ep", arg: 4, scope: !4999, file: !2464, line: 1322, type: !123)
!5007 = !DILocalVariable(name: "count", scope: !4999, file: !2464, line: 1324, type: !252)
!5008 = !DILocalVariable(name: "rc", scope: !5009, file: !2464, line: 1327, type: !107)
!5009 = distinct !DILexicalBlock(scope: !4999, file: !2464, line: 1326, column: 45)
!5010 = !DILocation(line: 0, scope: !4999)
!5011 = !DILocation(line: 1326, column: 2, scope: !4999)
!5012 = !DILocation(line: 1324, column: 9, scope: !4999)
!5013 = !DILocation(line: 1326, column: 13, scope: !4999)
!5014 = !DILocation(line: 1326, column: 19, scope: !4999)
!5015 = !DILocation(line: 1327, column: 21, scope: !5009)
!5016 = !DILocation(line: 1326, column: 36, scope: !4999)
!5017 = !DILocation(line: 1326, column: 39, scope: !4999)
!5018 = !DILocation(line: 1327, column: 24, scope: !5009)
!5019 = !DILocation(line: 1327, column: 16, scope: !5009)
!5020 = !DILocation(line: 1327, column: 12, scope: !5009)
!5021 = !DILocation(line: 0, scope: !5009)
!5022 = !DILocation(line: 1329, column: 10, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !5009, file: !2464, line: 1329, column: 7)
!5024 = !DILocation(line: 1329, column: 7, scope: !5009)
!5025 = distinct !{!5025, !5011, !5026}
!5026 = !DILocation(line: 1333, column: 2, scope: !4999)
!5027 = !DILocation(line: 1336, column: 1, scope: !4999)
!5028 = distinct !DISubprogram(name: "encode_uint", scope: !2464, file: !2464, line: 788, type: !5029, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !5031)
!5029 = !DISubroutineType(types: !5030)
!5030 = !{!256, !2486, !4632, !256, !123}
!5031 = !{!5032, !5033, !5034, !5035, !5036, !5037, !5039, !5040}
!5032 = !DILocalVariable(name: "value", arg: 1, scope: !5028, file: !2464, line: 788, type: !2486)
!5033 = !DILocalVariable(name: "conv", arg: 2, scope: !5028, file: !2464, line: 789, type: !4632)
!5034 = !DILocalVariable(name: "bps", arg: 3, scope: !5028, file: !2464, line: 790, type: !256)
!5035 = !DILocalVariable(name: "bpe", arg: 4, scope: !5028, file: !2464, line: 791, type: !123)
!5036 = !DILocalVariable(name: "upcase", scope: !5028, file: !2464, line: 793, type: !136)
!5037 = !DILocalVariable(name: "radix", scope: !5028, file: !2464, line: 794, type: !5038)
!5038 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5039 = !DILocalVariable(name: "bp", scope: !5028, file: !2464, line: 795, type: !256)
!5040 = !DILocalVariable(name: "lsv", scope: !5041, file: !2464, line: 798, type: !32)
!5041 = distinct !DILexicalBlock(scope: !5028, file: !2464, line: 797, column: 5)
!5042 = !DILocation(line: 0, scope: !5028)
!5043 = !DILocation(line: 793, column: 35, scope: !5028)
!5044 = !DILocation(line: 793, column: 24, scope: !5028)
!5045 = !DILocation(line: 793, column: 16, scope: !5028)
!5046 = !DILocation(line: 794, column: 29, scope: !5028)
!5047 = !DILocation(line: 795, column: 24, scope: !5028)
!5048 = !DILocation(line: 795, column: 17, scope: !5028)
!5049 = !DILocation(line: 797, column: 2, scope: !5028)
!5050 = !DILocation(line: 802, column: 9, scope: !5041)
!5051 = !DILocation(line: 798, column: 22, scope: !5041)
!5052 = !DILocation(line: 0, scope: !5041)
!5053 = !DILocation(line: 800, column: 16, scope: !5041)
!5054 = !DILocation(line: 800, column: 11, scope: !5041)
!5055 = !DILocation(line: 800, column: 4, scope: !5041)
!5056 = !DILocation(line: 800, column: 9, scope: !5041)
!5057 = !DILocation(line: 803, column: 18, scope: !5028)
!5058 = !DILocation(line: 803, column: 24, scope: !5028)
!5059 = !DILocation(line: 803, column: 2, scope: !5041)
!5060 = distinct !{!5060, !5049, !5061}
!5061 = !DILocation(line: 803, column: 37, scope: !5028)
!5062 = !DILocation(line: 808, column: 12, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5028, file: !2464, line: 808, column: 6)
!5064 = !DILocation(line: 808, column: 6, scope: !5028)
!5065 = !DILocation(line: 809, column: 7, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !5063, file: !2464, line: 808, column: 23)
!5067 = !DILocation(line: 813, column: 3, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5069, file: !2464, line: 811, column: 27)
!5069 = distinct !DILexicalBlock(scope: !5070, file: !2464, line: 811, column: 14)
!5070 = distinct !DILexicalBlock(scope: !5066, file: !2464, line: 809, column: 7)
!5071 = !DILocation(line: 0, scope: !5070)
!5072 = !DILocation(line: 818, column: 2, scope: !5028)
!5073 = distinct !DISubprogram(name: "store_count", scope: !2464, file: !2464, line: 1280, type: !5074, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !5078)
!5074 = !DISubroutineType(types: !5075)
!5075 = !{null, !5076, !102, !107}
!5076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5077, size: 32)
!5077 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4599)
!5078 = !{!5079, !5080, !5081}
!5079 = !DILocalVariable(name: "conv", arg: 1, scope: !5073, file: !2464, line: 1280, type: !5076)
!5080 = !DILocalVariable(name: "dp", arg: 2, scope: !5073, file: !2464, line: 1281, type: !102)
!5081 = !DILocalVariable(name: "count", arg: 3, scope: !5073, file: !2464, line: 1282, type: !107)
!5082 = !DILocation(line: 0, scope: !5073)
!5083 = !DILocation(line: 1284, column: 38, scope: !5073)
!5084 = !DILocation(line: 1284, column: 2, scope: !5073)
!5085 = !DILocation(line: 1286, column: 4, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !5073, file: !2464, line: 1284, column: 50)
!5087 = !DILocation(line: 1286, column: 14, scope: !5086)
!5088 = !DILocation(line: 1287, column: 3, scope: !5086)
!5089 = !DILocation(line: 1289, column: 24, scope: !5086)
!5090 = !DILocation(line: 1289, column: 22, scope: !5086)
!5091 = !DILocation(line: 1290, column: 3, scope: !5086)
!5092 = !DILocation(line: 1292, column: 18, scope: !5086)
!5093 = !DILocation(line: 1292, column: 4, scope: !5086)
!5094 = !DILocation(line: 1292, column: 16, scope: !5086)
!5095 = !DILocation(line: 1293, column: 3, scope: !5086)
!5096 = !DILocation(line: 1295, column: 4, scope: !5086)
!5097 = !DILocation(line: 1295, column: 15, scope: !5086)
!5098 = !DILocation(line: 1296, column: 3, scope: !5086)
!5099 = !DILocation(line: 1298, column: 22, scope: !5086)
!5100 = !DILocation(line: 1298, column: 4, scope: !5086)
!5101 = !DILocation(line: 1298, column: 20, scope: !5086)
!5102 = !DILocation(line: 1299, column: 3, scope: !5086)
!5103 = !DILocation(line: 1301, column: 21, scope: !5086)
!5104 = !DILocation(line: 1301, column: 4, scope: !5086)
!5105 = !DILocation(line: 1301, column: 19, scope: !5086)
!5106 = !DILocation(line: 1302, column: 3, scope: !5086)
!5107 = !DILocation(line: 1304, column: 4, scope: !5086)
!5108 = !DILocation(line: 1304, column: 17, scope: !5086)
!5109 = !DILocation(line: 1305, column: 3, scope: !5086)
!5110 = !DILocation(line: 1307, column: 4, scope: !5086)
!5111 = !DILocation(line: 1307, column: 20, scope: !5086)
!5112 = !DILocation(line: 1308, column: 3, scope: !5086)
!5113 = !DILocation(line: 1316, column: 1, scope: !5073)
!5114 = distinct !DISubprogram(name: "isupper", scope: !5115, file: !5115, line: 16, type: !270, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !5116)
!5115 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5116 = !{!5117}
!5117 = !DILocalVariable(name: "a", arg: 1, scope: !5114, file: !5115, line: 16, type: !107)
!5118 = !DILocation(line: 0, scope: !5114)
!5119 = !DILocation(line: 18, column: 29, scope: !5114)
!5120 = !DILocation(line: 18, column: 45, scope: !5114)
!5121 = !DILocation(line: 18, column: 2, scope: !5114)
!5122 = distinct !DISubprogram(name: "conversion_radix", scope: !2464, file: !2464, line: 761, type: !5123, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !5125)
!5123 = !DISubroutineType(types: !5124)
!5124 = !{!252, !125}
!5125 = !{!5126}
!5126 = !DILocalVariable(name: "specifier", arg: 1, scope: !5122, file: !2464, line: 761, type: !125)
!5127 = !DILocation(line: 0, scope: !5122)
!5128 = !DILocation(line: 763, column: 2, scope: !5122)
!5129 = !DILocation(line: 770, column: 3, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5122, file: !2464, line: 763, column: 21)
!5131 = !DILocation(line: 774, column: 3, scope: !5130)
!5132 = !DILocation(line: 0, scope: !5130)
!5133 = !DILocation(line: 776, column: 1, scope: !5122)
!5134 = distinct !DISubprogram(name: "extract_flags", scope: !2464, file: !2464, line: 339, type: !4976, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !5135)
!5135 = !{!5136, !5137, !5138}
!5136 = !DILocalVariable(name: "conv", arg: 1, scope: !5134, file: !2464, line: 339, type: !4632)
!5137 = !DILocalVariable(name: "sp", arg: 2, scope: !5134, file: !2464, line: 340, type: !123)
!5138 = !DILocalVariable(name: "loop", scope: !5134, file: !2464, line: 342, type: !136)
!5139 = !DILocation(line: 0, scope: !5134)
!5140 = !DILocation(line: 344, column: 2, scope: !5134)
!5141 = !DILocation(line: 345, column: 11, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5134, file: !2464, line: 344, column: 5)
!5143 = !DILocation(line: 345, column: 3, scope: !5142)
!5144 = !DILocation(line: 351, column: 4, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5142, file: !2464, line: 345, column: 16)
!5146 = !DILocation(line: 354, column: 4, scope: !5145)
!5147 = !DILocation(line: 357, column: 4, scope: !5145)
!5148 = !DILocation(line: 360, column: 4, scope: !5145)
!5149 = !DILocation(line: 0, scope: !5145)
!5150 = !DILocation(line: 370, column: 12, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !5134, file: !2464, line: 370, column: 6)
!5152 = !DILocation(line: 370, column: 22, scope: !5151)
!5153 = !DILocation(line: 371, column: 19, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5151, file: !2464, line: 370, column: 42)
!5155 = !DILocation(line: 372, column: 2, scope: !5154)
!5156 = !DILocation(line: 376, column: 2, scope: !5134)
!5157 = distinct !DISubprogram(name: "extract_width", scope: !2464, file: !2464, line: 388, type: !4976, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !5158)
!5158 = !{!5159, !5160, !5161, !5162}
!5159 = !DILocalVariable(name: "conv", arg: 1, scope: !5157, file: !2464, line: 388, type: !4632)
!5160 = !DILocalVariable(name: "sp", arg: 2, scope: !5157, file: !2464, line: 389, type: !123)
!5161 = !DILocalVariable(name: "wp", scope: !5157, file: !2464, line: 398, type: !123)
!5162 = !DILocalVariable(name: "width", scope: !5157, file: !2464, line: 399, type: !252)
!5163 = !DILocation(line: 0, scope: !5157)
!5164 = !DILocation(line: 391, column: 8, scope: !5157)
!5165 = !DILocation(line: 391, column: 22, scope: !5157)
!5166 = !DILocation(line: 393, column: 6, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5157, file: !2464, line: 393, column: 6)
!5168 = !DILocation(line: 393, column: 10, scope: !5167)
!5169 = !DILocation(line: 393, column: 6, scope: !5157)
!5170 = !DILocation(line: 394, column: 20, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5167, file: !2464, line: 393, column: 18)
!5172 = !DILocation(line: 395, column: 10, scope: !5171)
!5173 = !DILocation(line: 395, column: 3, scope: !5171)
!5174 = !DILocation(line: 399, column: 17, scope: !5157)
!5175 = !DILocation(line: 401, column: 6, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !5157, file: !2464, line: 401, column: 6)
!5177 = !DILocation(line: 401, column: 9, scope: !5176)
!5178 = !DILocation(line: 401, column: 6, scope: !5157)
!5179 = !DILocation(line: 402, column: 23, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5176, file: !2464, line: 401, column: 16)
!5181 = !DILocation(line: 403, column: 9, scope: !5180)
!5182 = !DILocation(line: 403, column: 21, scope: !5180)
!5183 = !DILocation(line: 405, column: 11, scope: !5180)
!5184 = !DILocation(line: 404, column: 21, scope: !5180)
!5185 = !DILocation(line: 406, column: 2, scope: !5180)
!5186 = !DILocation(line: 409, column: 1, scope: !5157)
!5187 = distinct !DISubprogram(name: "extract_prec", scope: !2464, file: !2464, line: 420, type: !4976, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !5188)
!5188 = !{!5189, !5190, !5191}
!5189 = !DILocalVariable(name: "conv", arg: 1, scope: !5187, file: !2464, line: 420, type: !4632)
!5190 = !DILocalVariable(name: "sp", arg: 2, scope: !5187, file: !2464, line: 421, type: !123)
!5191 = !DILocalVariable(name: "prec", scope: !5187, file: !2464, line: 435, type: !252)
!5192 = !DILocation(line: 0, scope: !5187)
!5193 = !DILocation(line: 423, column: 24, scope: !5187)
!5194 = !DILocation(line: 423, column: 28, scope: !5187)
!5195 = !DILocation(line: 423, column: 8, scope: !5187)
!5196 = !DILocation(line: 423, column: 21, scope: !5187)
!5197 = !DILocation(line: 425, column: 6, scope: !5187)
!5198 = !DILocation(line: 428, column: 2, scope: !5187)
!5199 = !DILocation(line: 430, column: 6, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5187, file: !2464, line: 430, column: 6)
!5201 = !DILocation(line: 430, column: 10, scope: !5200)
!5202 = !DILocation(line: 430, column: 6, scope: !5187)
!5203 = !DILocation(line: 431, column: 19, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5200, file: !2464, line: 430, column: 18)
!5205 = !DILocation(line: 432, column: 10, scope: !5204)
!5206 = !DILocation(line: 432, column: 3, scope: !5204)
!5207 = !DILocation(line: 435, column: 16, scope: !5187)
!5208 = !DILocation(line: 437, column: 8, scope: !5187)
!5209 = !DILocation(line: 437, column: 19, scope: !5187)
!5210 = !DILocation(line: 439, column: 10, scope: !5187)
!5211 = !DILocation(line: 438, column: 20, scope: !5187)
!5212 = !DILocation(line: 441, column: 9, scope: !5187)
!5213 = !DILocation(line: 442, column: 1, scope: !5187)
!5214 = distinct !DISubprogram(name: "extract_length", scope: !2464, file: !2464, line: 453, type: !4976, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !5215)
!5215 = !{!5216, !5217}
!5216 = !DILocalVariable(name: "conv", arg: 1, scope: !5214, file: !2464, line: 453, type: !4632)
!5217 = !DILocalVariable(name: "sp", arg: 2, scope: !5214, file: !2464, line: 454, type: !123)
!5218 = !DILocation(line: 0, scope: !5214)
!5219 = !DILocation(line: 456, column: 10, scope: !5214)
!5220 = !DILocation(line: 456, column: 2, scope: !5214)
!5221 = !DILocation(line: 458, column: 8, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5223, file: !2464, line: 458, column: 7)
!5223 = distinct !DILexicalBlock(scope: !5214, file: !2464, line: 456, column: 15)
!5224 = !DILocation(line: 458, column: 7, scope: !5222)
!5225 = !DILocation(line: 458, column: 13, scope: !5222)
!5226 = !DILocation(line: 0, scope: !5222)
!5227 = !DILocation(line: 458, column: 7, scope: !5223)
!5228 = !DILocation(line: 459, column: 21, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5222, file: !2464, line: 458, column: 21)
!5230 = !DILocation(line: 460, column: 4, scope: !5229)
!5231 = !DILocation(line: 461, column: 3, scope: !5229)
!5232 = !DILocation(line: 462, column: 21, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5222, file: !2464, line: 461, column: 10)
!5234 = !DILocation(line: 466, column: 8, scope: !5235)
!5235 = distinct !DILexicalBlock(scope: !5223, file: !2464, line: 466, column: 7)
!5236 = !DILocation(line: 466, column: 7, scope: !5235)
!5237 = !DILocation(line: 466, column: 13, scope: !5235)
!5238 = !DILocation(line: 0, scope: !5235)
!5239 = !DILocation(line: 466, column: 7, scope: !5223)
!5240 = !DILocation(line: 467, column: 21, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5235, file: !2464, line: 466, column: 21)
!5242 = !DILocation(line: 468, column: 4, scope: !5241)
!5243 = !DILocation(line: 469, column: 3, scope: !5241)
!5244 = !DILocation(line: 470, column: 21, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5235, file: !2464, line: 469, column: 10)
!5246 = !DILocation(line: 474, column: 9, scope: !5223)
!5247 = !DILocation(line: 474, column: 20, scope: !5223)
!5248 = !DILocation(line: 475, column: 3, scope: !5223)
!5249 = !DILocation(line: 476, column: 3, scope: !5223)
!5250 = !DILocation(line: 478, column: 9, scope: !5223)
!5251 = !DILocation(line: 478, column: 20, scope: !5223)
!5252 = !DILocation(line: 479, column: 3, scope: !5223)
!5253 = !DILocation(line: 480, column: 3, scope: !5223)
!5254 = !DILocation(line: 482, column: 9, scope: !5223)
!5255 = !DILocation(line: 482, column: 20, scope: !5223)
!5256 = !DILocation(line: 483, column: 3, scope: !5223)
!5257 = !DILocation(line: 484, column: 3, scope: !5223)
!5258 = !DILocation(line: 486, column: 9, scope: !5223)
!5259 = !DILocation(line: 486, column: 20, scope: !5223)
!5260 = !DILocation(line: 487, column: 3, scope: !5223)
!5261 = !DILocation(line: 492, column: 21, scope: !5223)
!5262 = !DILocation(line: 493, column: 3, scope: !5223)
!5263 = !DILocation(line: 495, column: 9, scope: !5223)
!5264 = !DILocation(line: 495, column: 20, scope: !5223)
!5265 = !DILocation(line: 496, column: 3, scope: !5223)
!5266 = !DILocation(line: 498, column: 2, scope: !5214)
!5267 = distinct !DISubprogram(name: "extract_specifier", scope: !2464, file: !2464, line: 513, type: !4976, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !5268)
!5268 = !{!5269, !5270, !5271, !5272}
!5269 = !DILocalVariable(name: "conv", arg: 1, scope: !5267, file: !2464, line: 513, type: !4632)
!5270 = !DILocalVariable(name: "sp", arg: 2, scope: !5267, file: !2464, line: 514, type: !123)
!5271 = !DILocalVariable(name: "unsupported", scope: !5267, file: !2464, line: 516, type: !136)
!5272 = !DILabel(scope: !5273, name: "int_conv", file: !2464, line: 526)
!5273 = distinct !DILexicalBlock(scope: !5267, file: !2464, line: 520, column: 27)
!5274 = !DILocation(line: 0, scope: !5267)
!5275 = !DILocation(line: 518, column: 20, scope: !5267)
!5276 = !DILocation(line: 518, column: 8, scope: !5267)
!5277 = !DILocation(line: 518, column: 18, scope: !5267)
!5278 = !DILocation(line: 520, column: 2, scope: !5267)
!5279 = !DILocation(line: 525, column: 3, scope: !5273)
!5280 = !DILocation(line: 0, scope: !5273)
!5281 = !DILocation(line: 526, column: 1, scope: !5273)
!5282 = !DILocation(line: 528, column: 24, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5273, file: !2464, line: 528, column: 7)
!5284 = !DILocation(line: 528, column: 7, scope: !5273)
!5285 = !DILocation(line: 535, column: 23, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5273, file: !2464, line: 535, column: 7)
!5287 = !DILocation(line: 535, column: 7, scope: !5273)
!5288 = !DILocation(line: 536, column: 36, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5286, file: !2464, line: 535, column: 31)
!5290 = !DILocation(line: 537, column: 3, scope: !5289)
!5291 = !DILocation(line: 570, column: 9, scope: !5273)
!5292 = !DILocation(line: 570, column: 23, scope: !5273)
!5293 = !DILocation(line: 575, column: 4, scope: !5294)
!5294 = distinct !DILexicalBlock(scope: !5295, file: !2464, line: 573, column: 48)
!5295 = distinct !DILexicalBlock(scope: !5273, file: !2464, line: 573, column: 7)
!5296 = !DILocation(line: 603, column: 9, scope: !5273)
!5297 = !DILocation(line: 603, column: 23, scope: !5273)
!5298 = !DILocation(line: 605, column: 24, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !5273, file: !2464, line: 605, column: 7)
!5300 = !DILocation(line: 605, column: 7, scope: !5273)
!5301 = !DILocation(line: 612, column: 9, scope: !5273)
!5302 = !DILocation(line: 612, column: 23, scope: !5273)
!5303 = !DILocation(line: 619, column: 24, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5273, file: !2464, line: 619, column: 7)
!5305 = !DILocation(line: 619, column: 7, scope: !5273)
!5306 = !DILocation(line: 625, column: 9, scope: !5273)
!5307 = !DILocation(line: 625, column: 17, scope: !5273)
!5308 = !DILocation(line: 626, column: 3, scope: !5273)
!5309 = !DILocation(line: 629, column: 20, scope: !5267)
!5310 = !DILocation(line: 629, column: 8, scope: !5267)
!5311 = !DILocation(line: 518, column: 23, scope: !5267)
!5312 = !DILocation(line: 631, column: 2, scope: !5267)
!5313 = distinct !DISubprogram(name: "extract_decimal", scope: !2464, file: !2464, line: 318, type: !5314, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !5317)
!5314 = !DISubroutineType(types: !5315)
!5315 = !{!252, !5316}
!5316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 32)
!5317 = !{!5318, !5319, !5320}
!5318 = !DILocalVariable(name: "str", arg: 1, scope: !5313, file: !2464, line: 318, type: !5316)
!5319 = !DILocalVariable(name: "sp", scope: !5313, file: !2464, line: 320, type: !123)
!5320 = !DILocalVariable(name: "val", scope: !5313, file: !2464, line: 321, type: !252)
!5321 = !DILocation(line: 0, scope: !5313)
!5322 = !DILocation(line: 320, column: 19, scope: !5313)
!5323 = !DILocation(line: 323, column: 37, scope: !5313)
!5324 = !DILocation(line: 323, column: 17, scope: !5313)
!5325 = !DILocation(line: 323, column: 9, scope: !5313)
!5326 = !DILocation(line: 323, column: 2, scope: !5313)
!5327 = !DILocation(line: 324, column: 13, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !5313, file: !2464, line: 323, column: 43)
!5329 = !DILocation(line: 324, column: 24, scope: !5328)
!5330 = !DILocation(line: 324, column: 19, scope: !5328)
!5331 = !DILocation(line: 324, column: 27, scope: !5328)
!5332 = distinct !{!5332, !5326, !5333}
!5333 = !DILocation(line: 325, column: 2, scope: !5313)
!5334 = !DILocation(line: 326, column: 7, scope: !5313)
!5335 = !DILocation(line: 327, column: 2, scope: !5313)
!5336 = distinct !DISubprogram(name: "isdigit", scope: !5115, file: !5115, line: 43, type: !270, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !5337)
!5337 = !{!5338}
!5338 = !DILocalVariable(name: "a", arg: 1, scope: !5336, file: !5115, line: 43, type: !107)
!5339 = !DILocation(line: 0, scope: !5336)
!5340 = !DILocation(line: 45, column: 29, scope: !5336)
!5341 = !DILocation(line: 45, column: 45, scope: !5336)
!5342 = !DILocation(line: 45, column: 2, scope: !5336)
!5343 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5344, file: !5344, line: 9, type: !3137, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2498, retainedNodes: !250)
!5344 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!5345 = !DILocation(line: 11, column: 1, scope: !5343)
!5346 = !{i64 2147561397, i64 2147561440, i64 2147561480}
!5347 = !DILocation(line: 12, column: 1, scope: !5343)
!5348 = !{i64 2147565624, i64 2147565667, i64 2147565707}
!5349 = !DILocation(line: 13, column: 1, scope: !5343)
!5350 = !{i64 2147565833, i64 2147565876, i64 2147565916}
!5351 = !DILocation(line: 14, column: 1, scope: !5343)
!5352 = !{i64 2147566050, i64 2147566093, i64 2147566133}
!5353 = !DILocation(line: 15, column: 1, scope: !5343)
!5354 = !{i64 2147566219, i64 2147566262, i64 2147566302}
!5355 = !DILocation(line: 16, column: 1, scope: !5343)
!5356 = !{i64 2147566382, i64 2147566425, i64 2147566465}
!5357 = !DILocation(line: 17, column: 1, scope: !5343)
!5358 = !{i64 2147566566, i64 2147566609, i64 2147566649}
!5359 = !DILocation(line: 18, column: 1, scope: !5343)
!5360 = !{i64 2147566745, i64 2147566788, i64 2147566828}
!5361 = !DILocation(line: 19, column: 1, scope: !5343)
!5362 = !{i64 2147566988, i64 2147567031, i64 2147567071}
!5363 = !DILocation(line: 20, column: 1, scope: !5343)
!5364 = !{i64 2147567223, i64 2147567266, i64 2147567306}
!5365 = !DILocation(line: 21, column: 1, scope: !5343)
!5366 = !{i64 2147567410, i64 2147567453, i64 2147567493}
!5367 = !DILocation(line: 22, column: 1, scope: !5343)
!5368 = !{i64 2147567626, i64 2147567669, i64 2147567709}
!5369 = !DILocation(line: 23, column: 1, scope: !5343)
!5370 = !{i64 2147567829, i64 2147567872, i64 2147567912}
!5371 = !DILocation(line: 24, column: 1, scope: !5343)
!5372 = !{i64 2147568032, i64 2147568075, i64 2147568115}
!5373 = !DILocation(line: 25, column: 1, scope: !5343)
!5374 = !{i64 2147568207, i64 2147568250, i64 2147568290}
!5375 = !DILocation(line: 26, column: 1, scope: !5343)
!5376 = !{i64 2147568415, i64 2147568458, i64 2147568498}
!5377 = !DILocation(line: 27, column: 1, scope: !5343)
!5378 = !{i64 2147568619, i64 2147568662, i64 2147568702}
!5379 = !DILocation(line: 28, column: 1, scope: !5343)
!5380 = !{i64 2147568812, i64 2147568855, i64 2147568895}
!5381 = !DILocation(line: 29, column: 1, scope: !5343)
!5382 = !{i64 2147569014, i64 2147569057, i64 2147569097}
!5383 = !DILocation(line: 30, column: 1, scope: !5343)
!5384 = !{i64 2147569241, i64 2147569284, i64 2147569324}
!5385 = !DILocation(line: 31, column: 1, scope: !5343)
!5386 = !{i64 2147569443, i64 2147569486, i64 2147569526}
!5387 = !DILocation(line: 32, column: 1, scope: !5343)
!5388 = !{i64 2147569658, i64 2147569701, i64 2147569741}
!5389 = !DILocation(line: 33, column: 1, scope: !5343)
!5390 = !{i64 2147569830, i64 2147569873, i64 2147569913}
!5391 = !DILocation(line: 34, column: 1, scope: !5343)
!5392 = !{i64 2147570032, i64 2147570075, i64 2147570115}
!5393 = !DILocation(line: 35, column: 1, scope: !5343)
!5394 = !{i64 2147570258, i64 2147570301, i64 2147570341}
!5395 = !DILocation(line: 36, column: 1, scope: !5343)
!5396 = !{i64 2147570457, i64 2147570500, i64 2147570540}
!5397 = !DILocation(line: 37, column: 1, scope: !5343)
!5398 = !{i64 2147570632, i64 2147570675, i64 2147570715}
!5399 = !DILocation(line: 38, column: 1, scope: !5343)
!5400 = !{i64 2147570900, i64 2147570943, i64 2147570983}
!5401 = !DILocation(line: 39, column: 1, scope: !5343)
!5402 = !{i64 2147571153, i64 2147571196, i64 2147571236}
!5403 = !DILocation(line: 40, column: 1, scope: !5343)
!5404 = !{i64 2147571394, i64 2147571437, i64 2147571477}
!5405 = !DILocation(line: 41, column: 1, scope: !5343)
!5406 = !{i64 2147571629, i64 2147571672, i64 2147571712}
!5407 = !DILocation(line: 42, column: 1, scope: !5343)
!5408 = !{i64 2147571861, i64 2147571904, i64 2147571944}
!5409 = !DILocation(line: 43, column: 1, scope: !5343)
!5410 = !{i64 2147572087, i64 2147572130, i64 2147572170}
!5411 = !DILocation(line: 44, column: 1, scope: !5343)
!5412 = !{i64 2147572325, i64 2147572368, i64 2147572408}
!5413 = !DILocation(line: 45, column: 1, scope: !5343)
!5414 = !{i64 2147572551, i64 2147572594, i64 2147572634}
!5415 = !DILocation(line: 46, column: 1, scope: !5343)
!5416 = !{i64 2147572786, i64 2147572829, i64 2147572869}
!5417 = !DILocation(line: 47, column: 1, scope: !5343)
!5418 = !{i64 2147573021, i64 2147573064, i64 2147573104}
!5419 = !DILocation(line: 48, column: 1, scope: !5343)
!5420 = !{i64 2147573259, i64 2147573302, i64 2147573342}
!5421 = !DILocation(line: 49, column: 1, scope: !5343)
!5422 = !{i64 2147573533, i64 2147573576, i64 2147573616}
!5423 = !DILocation(line: 50, column: 1, scope: !5343)
!5424 = !{i64 2147573771, i64 2147573814, i64 2147573854}
!5425 = !DILocation(line: 51, column: 1, scope: !5343)
!5426 = !{i64 2147574024, i64 2147574067, i64 2147574107}
!5427 = !DILocation(line: 52, column: 1, scope: !5343)
!5428 = !{i64 2147574268, i64 2147574311, i64 2147574351}
!5429 = !DILocation(line: 53, column: 1, scope: !5343)
!5430 = !{i64 2147578579, i64 2147578622, i64 2147578662}
!5431 = !DILocation(line: 54, column: 1, scope: !5343)
!5432 = !{i64 2147578820, i64 2147578863, i64 2147578903}
!5433 = !DILocation(line: 55, column: 1, scope: !5343)
!5434 = !{i64 2147579067, i64 2147579110, i64 2147579150}
!5435 = !DILocation(line: 56, column: 1, scope: !5343)
!5436 = !{i64 2147579302, i64 2147579345, i64 2147579385}
!5437 = !DILocation(line: 57, column: 1, scope: !5343)
!5438 = !{i64 2147579537, i64 2147579580, i64 2147579620}
!5439 = !DILocation(line: 58, column: 1, scope: !5343)
!5440 = !{i64 2147579772, i64 2147579815, i64 2147579855}
!5441 = !DILocation(line: 59, column: 1, scope: !5343)
!5442 = !{i64 2147580010, i64 2147580053, i64 2147580093}
!5443 = !DILocation(line: 60, column: 1, scope: !5343)
!5444 = !{i64 2147580251, i64 2147580294, i64 2147580334}
!5445 = !DILocation(line: 61, column: 1, scope: !5343)
!5446 = !{i64 2147580531, i64 2147580574, i64 2147580614}
!5447 = !DILocation(line: 62, column: 1, scope: !5343)
!5448 = !{i64 2147580790, i64 2147580833, i64 2147580873}
!5449 = !DILocation(line: 63, column: 1, scope: !5343)
!5450 = !{i64 2147581028, i64 2147581071, i64 2147581111}
!5451 = !DILocation(line: 64, column: 1, scope: !5343)
!5452 = !{i64 2147581287, i64 2147581330, i64 2147581370}
!5453 = !DILocation(line: 65, column: 1, scope: !5343)
!5454 = !{i64 2147581516, i64 2147581559, i64 2147581599}
!5455 = !DILocation(line: 66, column: 1, scope: !5343)
!5456 = !{i64 2147581724, i64 2147581767, i64 2147581807}
!5457 = !DILocation(line: 67, column: 1, scope: !5343)
!5458 = !{i64 2147581935, i64 2147581978, i64 2147582018}
!5459 = !DILocation(line: 68, column: 1, scope: !5343)
!5460 = !{i64 2147582170, i64 2147582213, i64 2147582253}
!5461 = !DILocation(line: 69, column: 1, scope: !5343)
!5462 = !{i64 2147582399, i64 2147582442, i64 2147582482}
!5463 = !DILocation(line: 70, column: 1, scope: !5343)
!5464 = !{i64 2147582637, i64 2147582680, i64 2147582720}
!5465 = !DILocation(line: 71, column: 1, scope: !5343)
!5466 = !{i64 2147582869, i64 2147582912, i64 2147582952}
!5467 = !DILocation(line: 72, column: 1, scope: !5343)
!5468 = !{i64 2147583095, i64 2147583138, i64 2147583178}
!5469 = !DILocation(line: 73, column: 1, scope: !5343)
!5470 = !{i64 2147583312, i64 2147583355, i64 2147583395}
!5471 = !DILocation(line: 74, column: 1, scope: !5343)
!5472 = !{i64 2147583544, i64 2147583587, i64 2147583627}
!5473 = !DILocation(line: 75, column: 1, scope: !5343)
!5474 = !{i64 2147583770, i64 2147583813, i64 2147583853}
!5475 = !DILocation(line: 76, column: 1, scope: !5343)
!5476 = !{i64 2147583984, i64 2147584027, i64 2147584067}
!5477 = !DILocation(line: 77, column: 1, scope: !5343)
!5478 = !{i64 2147584204, i64 2147584247, i64 2147584287}
!5479 = !DILocation(line: 78, column: 1, scope: !5343)
!5480 = !{i64 2147584436, i64 2147584479, i64 2147584519}
!5481 = !DILocation(line: 79, column: 1, scope: !5343)
!5482 = !{i64 2147584644, i64 2147584687, i64 2147584727}
!5483 = !DILocation(line: 80, column: 1, scope: !5343)
!5484 = !{i64 2147584849, i64 2147584892, i64 2147584932}
!5485 = !DILocation(line: 81, column: 1, scope: !5343)
!5486 = !{i64 2147585066, i64 2147585109, i64 2147585149}
!5487 = !DILocation(line: 82, column: 1, scope: !5343)
!5488 = !{i64 2147585280, i64 2147585323, i64 2147585363}
!5489 = !DILocation(line: 83, column: 1, scope: !5343)
!5490 = !{i64 2147585506, i64 2147585549, i64 2147585589}
!5491 = !DILocation(line: 84, column: 1, scope: !5343)
!5492 = !{i64 2147585726, i64 2147585769, i64 2147585809}
!5493 = !DILocation(line: 85, column: 1, scope: !5343)
!5494 = !{i64 2147585931, i64 2147585974, i64 2147586014}
!5495 = !DILocation(line: 86, column: 1, scope: !5343)
!5496 = !{i64 2147586163, i64 2147586206, i64 2147586246}
!5497 = !DILocation(line: 87, column: 1, scope: !5343)
!5498 = !{i64 2147586398, i64 2147586441, i64 2147586481}
!5499 = !DILocation(line: 88, column: 1, scope: !5343)
!5500 = !{i64 2147590709, i64 2147590752, i64 2147590792}
!5501 = !DILocation(line: 89, column: 1, scope: !5343)
!5502 = !{i64 2147590959, i64 2147591002, i64 2147591042}
!5503 = !DILocation(line: 90, column: 1, scope: !5343)
!5504 = !{i64 2147591197, i64 2147591240, i64 2147591280}
!5505 = !DILocation(line: 91, column: 1, scope: !5343)
!5506 = !{i64 2147591408, i64 2147591451, i64 2147591491}
!5507 = !DILocation(line: 92, column: 1, scope: !5343)
!5508 = !{i64 2147591625, i64 2147591668, i64 2147591708}
!5509 = !DILocation(line: 93, column: 1, scope: !5343)
!5510 = !{i64 2147591821, i64 2147591864, i64 2147591904}
!5511 = !DILocation(line: 94, column: 1, scope: !5343)
!5512 = !{i64 2147592023, i64 2147592066, i64 2147592106}
!5513 = !DILocation(line: 95, column: 1, scope: !5343)
!5514 = !{i64 2147592216, i64 2147592259, i64 2147592299}
!5515 = !DILocation(line: 96, column: 1, scope: !5343)
!5516 = !{i64 2147592424, i64 2147592467, i64 2147592507}
!5517 = !DILocation(line: 97, column: 1, scope: !5343)
!5518 = !{i64 2147592620, i64 2147592663, i64 2147592703}
!5519 = !DILocation(line: 98, column: 1, scope: !5343)
!5520 = !{i64 2147592870, i64 2147592913, i64 2147592953}
!5521 = !DILocation(line: 99, column: 1, scope: !5343)
!5522 = !{i64 2147593081, i64 2147593124, i64 2147593164}
!5523 = !DILocation(line: 100, column: 1, scope: !5343)
!5524 = !{i64 2147593280, i64 2147593323, i64 2147593363}
!5525 = !DILocation(line: 101, column: 1, scope: !5343)
!5526 = !{i64 2147593455, i64 2147593498, i64 2147593538}
!5527 = !DILocation(line: 102, column: 1, scope: !5343)
!5528 = !{i64 2147593639, i64 2147593682, i64 2147593722}
!5529 = !DILocation(line: 103, column: 1, scope: !5343)
!5530 = !{i64 2147593841, i64 2147593884, i64 2147593924}
!5531 = !DILocation(line: 104, column: 1, scope: !5343)
!5532 = !{i64 2147594022, i64 2147594065, i64 2147594105}
!5533 = !DILocation(line: 105, column: 1, scope: !5343)
!5534 = !{i64 2147594221, i64 2147594264, i64 2147594304}
!5535 = !DILocation(line: 106, column: 1, scope: !5343)
!5536 = !{i64 2147594387, i64 2147594430, i64 2147594470}
!5537 = !DILocation(line: 107, column: 1, scope: !5343)
!5538 = !{i64 2147594571, i64 2147594614, i64 2147594654}
!5539 = !DILocation(line: 108, column: 1, scope: !5343)
!5540 = !{i64 2147594761, i64 2147594804, i64 2147594844}
!5541 = !DILocation(line: 109, column: 1, scope: !5343)
!5542 = !{i64 2147594945, i64 2147594988, i64 2147595028}
!5543 = !DILocation(line: 110, column: 1, scope: !5343)
!5544 = !{i64 2147595159, i64 2147595202, i64 2147595242}
!5545 = !DILocation(line: 111, column: 1, scope: !5343)
!5546 = !{i64 2147595370, i64 2147595413, i64 2147595453}
!5547 = !DILocation(line: 112, column: 1, scope: !5343)
!5548 = !{i64 2147595593, i64 2147595636, i64 2147595676}
!5549 = !DILocation(line: 113, column: 1, scope: !5343)
!5550 = !{i64 2147595777, i64 2147595820, i64 2147595860}
!5551 = !DILocation(line: 114, column: 1, scope: !5343)
!5552 = !{i64 2147595991, i64 2147596034, i64 2147596074}
!5553 = !DILocation(line: 115, column: 1, scope: !5343)
!5554 = !{i64 2147596157, i64 2147596200, i64 2147596240}
!5555 = !DILocation(line: 116, column: 1, scope: !5343)
!5556 = !{i64 2147596338, i64 2147596381, i64 2147596421}
!5557 = !DILocation(line: 117, column: 1, scope: !5343)
!5558 = !{i64 2147596531, i64 2147596574, i64 2147596614}
!5559 = !DILocation(line: 118, column: 1, scope: !5343)
!5560 = !{i64 2147596757, i64 2147596800, i64 2147596840}
!5561 = !DILocation(line: 119, column: 1, scope: !5343)
!5562 = !{i64 2147596971, i64 2147597014, i64 2147597054}
!5563 = !DILocation(line: 120, column: 1, scope: !5343)
!5564 = !{i64 2147597197, i64 2147597240, i64 2147597280}
!5565 = !DILocation(line: 121, column: 1, scope: !5343)
!5566 = !{i64 2147597414, i64 2147597457, i64 2147597497}
!5567 = !DILocation(line: 122, column: 1, scope: !5343)
!5568 = !{i64 2147597691, i64 2147597734, i64 2147597774}
!5569 = !DILocation(line: 123, column: 1, scope: !5343)
!5570 = !{i64 2147597917, i64 2147597960, i64 2147598000}
!5571 = !DILocation(line: 124, column: 1, scope: !5343)
!5572 = !{i64 2147598125, i64 2147598168, i64 2147598208}
!5573 = !DILocation(line: 125, column: 1, scope: !5343)
!5574 = !{i64 2147598321, i64 2147598364, i64 2147598404}
!5575 = !DILocation(line: 126, column: 1, scope: !5343)
!5576 = !{i64 2147598586, i64 2147598629, i64 2147598669}
!5577 = !DILocation(line: 127, column: 1, scope: !5343)
!5578 = !{i64 2147598800, i64 2147598843, i64 2147598883}
!5579 = !DILocation(line: 128, column: 1, scope: !5343)
!5580 = !{i64 2147598975, i64 2147599018, i64 2147599058}
!5581 = !DILocation(line: 129, column: 1, scope: !5343)
!5582 = !{i64 2147599229, i64 2147599272, i64 2147599312}
!5583 = !DILocation(line: 130, column: 1, scope: !5343)
!5584 = !{i64 2147599428, i64 2147599471, i64 2147599511}
!5585 = !DILocation(line: 131, column: 1, scope: !5343)
!5586 = !{i64 2147603731, i64 2147603774, i64 2147603814}
!5587 = !DILocation(line: 132, column: 1, scope: !5343)
!5588 = !{i64 2147603894, i64 2147603937, i64 2147603977}
!5589 = !DILocation(line: 133, column: 1, scope: !5343)
!5590 = !{i64 2147604081, i64 2147604124, i64 2147604164}
!5591 = !DILocation(line: 134, column: 1, scope: !5343)
!5592 = !{i64 2147604274, i64 2147604317, i64 2147604357}
!5593 = !DILocation(line: 135, column: 1, scope: !5343)
!5594 = !{i64 2147604457, i64 2147604500, i64 2147604540}
!5595 = !DILocation(line: 136, column: 1, scope: !5343)
!5596 = !{i64 2147604671, i64 2147604714, i64 2147604754}
!5597 = !DILocation(line: 137, column: 1, scope: !5343)
!5598 = !{i64 2147604882, i64 2147604925, i64 2147604965}
!5599 = !DILocation(line: 138, column: 1, scope: !5343)
!5600 = !{i64 2147605102, i64 2147605145, i64 2147605185}
!5601 = !DILocation(line: 139, column: 1, scope: !5343)
!5602 = !{i64 2147605309, i64 2147605352, i64 2147605392}
!5603 = !DILocation(line: 140, column: 1, scope: !5343)
!5604 = !{i64 2147605582, i64 2147605625, i64 2147605665}
!5605 = !DILocation(line: 141, column: 1, scope: !5343)
!5606 = !{i64 2147605830, i64 2147605873, i64 2147605913}
!5607 = !DILocation(line: 142, column: 1, scope: !5343)
!5608 = !{i64 2147606029, i64 2147606072, i64 2147606112}
!5609 = !DILocation(line: 143, column: 1, scope: !5343)
!5610 = !{i64 2147606264, i64 2147606307, i64 2147606347}
!5611 = !DILocation(line: 144, column: 1, scope: !5343)
!5612 = !{i64 2147606514, i64 2147606557, i64 2147606597}
!5613 = !DILocation(line: 145, column: 1, scope: !5343)
!5614 = !{i64 2147606716, i64 2147606759, i64 2147606799}
!5615 = !DILocation(line: 146, column: 1, scope: !5343)
!5616 = !{i64 2147606939, i64 2147606982, i64 2147607022}
!5617 = !DILocation(line: 147, column: 1, scope: !5343)
!5618 = !{i64 2147607153, i64 2147607196, i64 2147607236}
!5619 = !DILocation(line: 148, column: 1, scope: !5343)
!5620 = !{i64 2147607397, i64 2147607440, i64 2147607480}
!5621 = !DILocation(line: 149, column: 1, scope: !5343)
!5622 = !{i64 2147607626, i64 2147607669, i64 2147607709}
!5623 = !DILocation(line: 150, column: 1, scope: !5343)
!5624 = !{i64 2147607855, i64 2147607898, i64 2147607938}
!5625 = !DILocation(line: 151, column: 1, scope: !5343)
!5626 = !{i64 2147608063, i64 2147608106, i64 2147608146}
!5627 = !DILocation(line: 152, column: 1, scope: !5343)
!5628 = !{i64 2147608301, i64 2147608344, i64 2147608384}
!5629 = !DILocation(line: 153, column: 1, scope: !5343)
!5630 = !{i64 2147608527, i64 2147608570, i64 2147608610}
!5631 = !DILocation(line: 154, column: 1, scope: !5343)
!5632 = !{i64 2147608786, i64 2147608829, i64 2147608869}
!5633 = !DILocation(line: 155, column: 1, scope: !5343)
!5634 = !{i64 2147609006, i64 2147609049, i64 2147609089}
!5635 = !DILocation(line: 156, column: 1, scope: !5343)
!5636 = !{i64 2147609238, i64 2147609281, i64 2147609321}
!5637 = !DILocation(line: 157, column: 1, scope: !5343)
!5638 = !{i64 2147609479, i64 2147609522, i64 2147609562}
!5639 = !DILocation(line: 158, column: 1, scope: !5343)
!5640 = !{i64 2147609720, i64 2147609763, i64 2147609803}
!5641 = !DILocation(line: 159, column: 1, scope: !5343)
!5642 = !{i64 2147609943, i64 2147609986, i64 2147610026}
!5643 = !DILocation(line: 160, column: 1, scope: !5343)
!5644 = !{i64 2147610160, i64 2147610203, i64 2147610243}
!5645 = !DILocation(line: 161, column: 1, scope: !5343)
!5646 = !{i64 2147610401, i64 2147610444, i64 2147610484}
!5647 = !DILocation(line: 162, column: 1, scope: !5343)
!5648 = !{i64 2147610588, i64 2147610631, i64 2147610671}
!5649 = !DILocation(line: 163, column: 1, scope: !5343)
!5650 = !{i64 2147610775, i64 2147610818, i64 2147610858}
!5651 = !DILocation(line: 164, column: 1, scope: !5343)
!5652 = !{i64 2147610938, i64 2147610981, i64 2147611021}
!5653 = !DILocation(line: 165, column: 1, scope: !5343)
!5654 = !{i64 2147611197, i64 2147611240, i64 2147611280}
!5655 = !DILocation(line: 166, column: 1, scope: !5343)
!5656 = !{i64 2147611420, i64 2147611463, i64 2147611503}
!5657 = !DILocation(line: 167, column: 1, scope: !5343)
!5658 = !{i64 2147611649, i64 2147611692, i64 2147611732}
!5659 = !DILocation(line: 168, column: 1, scope: !5343)
!5660 = !{i64 2147611845, i64 2147611888, i64 2147611928}
!5661 = !DILocation(line: 169, column: 1, scope: !5343)
!5662 = !{i64 2147612057, i64 2147612100, i64 2147612140}
!5663 = !DILocation(line: 170, column: 1, scope: !5343)
!5664 = !{i64 2147616339, i64 2147616382, i64 2147616422}
!5665 = !DILocation(line: 171, column: 1, scope: !5343)
!5666 = !{i64 2147616553, i64 2147616596, i64 2147616636}
!5667 = !DILocation(line: 172, column: 1, scope: !5343)
!5668 = !{i64 2147616743, i64 2147616786, i64 2147616826}
!5669 = !DILocation(line: 173, column: 1, scope: !5343)
!5670 = !{i64 2147616942, i64 2147616985, i64 2147617025}
!5671 = !DILocation(line: 174, column: 1, scope: !5343)
!5672 = !{i64 2147617147, i64 2147617190, i64 2147617230}
!5673 = !DILocation(line: 175, column: 1, scope: !5343)
!5674 = !{i64 2147617367, i64 2147617410, i64 2147617450}
!5675 = !DILocation(line: 176, column: 1, scope: !5343)
!5676 = !{i64 2147617568, i64 2147617611, i64 2147617651}
!5677 = !DILocation(line: 177, column: 1, scope: !5343)
!5678 = !{i64 2147617767, i64 2147617810, i64 2147617850}
!5679 = !DILocation(line: 178, column: 1, scope: !5343)
!5680 = !{i64 2147617972, i64 2147618015, i64 2147618055}
!5681 = !DILocation(line: 179, column: 1, scope: !5343)
!5682 = !{i64 2147618141, i64 2147618184, i64 2147618224}
!5683 = !DILocation(line: 180, column: 1, scope: !5343)
!5684 = !{i64 2147618325, i64 2147618368, i64 2147618408}
!5685 = !DILocation(line: 181, column: 1, scope: !5343)
!5686 = !{i64 2147618509, i64 2147618552, i64 2147618592}
!5687 = !DILocation(line: 182, column: 1, scope: !5343)
!5688 = !{i64 2147618696, i64 2147618739, i64 2147618779}
!5689 = !DILocation(line: 183, column: 1, scope: !5343)
!5690 = !{i64 2147618880, i64 2147618923, i64 2147618963}
!5691 = !DILocation(line: 184, column: 1, scope: !5343)
!5692 = !{i64 2147619118, i64 2147619161, i64 2147619201}
!5693 = !DILocation(line: 185, column: 1, scope: !5343)
!5694 = !{i64 2147619348, i64 2147619391, i64 2147619431}
!5695 = !DILocation(line: 186, column: 1, scope: !5343)
!5696 = !{i64 2147619577, i64 2147619620, i64 2147619660}
!5697 = !DILocation(line: 187, column: 1, scope: !5343)
!5698 = !{i64 2147619764, i64 2147619807, i64 2147619847}
!5699 = !DILocation(line: 188, column: 1, scope: !5343)
!5700 = !{i64 2147619960, i64 2147620003, i64 2147620043}
!5701 = !DILocation(line: 189, column: 1, scope: !5343)
!5702 = !{i64 2147620168, i64 2147620211, i64 2147620251}
!5703 = !DILocation(line: 190, column: 1, scope: !5343)
!5704 = !{i64 2147620380, i64 2147620423, i64 2147620463}
!5705 = !DILocation(line: 191, column: 1, scope: !5343)
!5706 = !{i64 2147620579, i64 2147620622, i64 2147620662}
!5707 = !DILocation(line: 192, column: 1, scope: !5343)
!5708 = !{i64 2147620817, i64 2147620860, i64 2147620900}
!5709 = !DILocation(line: 193, column: 1, scope: !5343)
!5710 = !{i64 2147621013, i64 2147621056, i64 2147621096}
!5711 = !DILocation(line: 194, column: 1, scope: !5343)
!5712 = !{i64 2147621215, i64 2147621258, i64 2147621298}
!5713 = !DILocation(line: 195, column: 1, scope: !5343)
!5714 = !{i64 2147621408, i64 2147621451, i64 2147621491}
!5715 = !DILocation(line: 196, column: 1, scope: !5343)
!5716 = !{i64 2147621642, i64 2147621685, i64 2147621725}
!5717 = !DILocation(line: 197, column: 1, scope: !5343)
!5718 = !{i64 2147621805, i64 2147621848, i64 2147621888}
!5719 = !DILocation(line: 198, column: 1, scope: !5343)
!5720 = !{i64 2147622044, i64 2147622087, i64 2147622127}
!5721 = !DILocation(line: 199, column: 1, scope: !5343)
!5722 = !{i64 2147622283, i64 2147622326, i64 2147622366}
!5723 = !DILocation(line: 200, column: 1, scope: !5343)
!5724 = !{i64 2147622519, i64 2147622562, i64 2147622602}
!5725 = !DILocation(line: 201, column: 1, scope: !5343)
!5726 = !{i64 2147622749, i64 2147622792, i64 2147622832}
!5727 = !DILocation(line: 202, column: 1, scope: !5343)
!5728 = !{i64 2147622936, i64 2147622979, i64 2147623019}
!5729 = !DILocation(line: 203, column: 1, scope: !5343)
!5730 = !{i64 2147623135, i64 2147623178, i64 2147623218}
!5731 = !DILocation(line: 204, column: 1, scope: !5343)
!5732 = !{i64 2147623406, i64 2147623449, i64 2147623489}
!5733 = !DILocation(line: 205, column: 1, scope: !5343)
!5734 = !{i64 2147623581, i64 2147623624, i64 2147623664}
!5735 = !DILocation(line: 206, column: 1, scope: !5343)
!5736 = !{i64 2147623815, i64 2147623858, i64 2147623898}
!5737 = !DILocation(line: 207, column: 1, scope: !5343)
!5738 = !{i64 2147624023, i64 2147624066, i64 2147624106}
!5739 = !DILocation(line: 208, column: 1, scope: !5343)
!5740 = !{i64 2147624241, i64 2147624284, i64 2147624324}
!5741 = !DILocation(line: 209, column: 1, scope: !5343)
!5742 = !{i64 2147624431, i64 2147624474, i64 2147624514}
!5743 = !DILocation(line: 210, column: 1, scope: !5343)
!5744 = !{i64 2147624627, i64 2147624670, i64 2147624710}
!5745 = !DILocation(line: 211, column: 1, scope: !5343)
!5746 = !{i64 2147624833, i64 2147624876, i64 2147624916}
!5747 = !DILocation(line: 212, column: 1, scope: !5343)
!5748 = !{i64 2147625038, i64 2147625081, i64 2147625121}
!5749 = !DILocation(line: 213, column: 1, scope: !5343)
!5750 = !{i64 2147625264, i64 2147625307, i64 2147625347}
!5751 = !DILocation(line: 214, column: 1, scope: !5343)
!5752 = !{i64 2147629557, i64 2147629600, i64 2147629640}
!5753 = !DILocation(line: 215, column: 1, scope: !5343)
!5754 = !{i64 2147629741, i64 2147629784, i64 2147629824}
!5755 = !DILocation(line: 216, column: 1, scope: !5343)
!5756 = !{i64 2147629950, i64 2147629993, i64 2147630033}
!5757 = !DILocation(line: 217, column: 1, scope: !5343)
!5758 = !{i64 2147630134, i64 2147630177, i64 2147630217}
!5759 = !DILocation(line: 218, column: 1, scope: !5343)
!5760 = !{i64 2147630360, i64 2147630403, i64 2147630443}
!5761 = !DILocation(line: 219, column: 1, scope: !5343)
!5762 = !{i64 2147630586, i64 2147630629, i64 2147630669}
!5763 = !DILocation(line: 220, column: 1, scope: !5343)
!5764 = !{i64 2147630812, i64 2147630855, i64 2147630895}
!5765 = !DILocation(line: 221, column: 1, scope: !5343)
!5766 = !{i64 2147631038, i64 2147631081, i64 2147631121}
!5767 = !DILocation(line: 222, column: 1, scope: !5343)
!5768 = !{i64 2147631264, i64 2147631307, i64 2147631347}
!5769 = !DILocation(line: 223, column: 1, scope: !5343)
!5770 = !{i64 2147631496, i64 2147631539, i64 2147631579}
!5771 = !DILocation(line: 224, column: 1, scope: !5343)
!5772 = !{i64 2147631734, i64 2147631777, i64 2147631817}
!5773 = !DILocation(line: 225, column: 1, scope: !5343)
!5774 = !{i64 2147631954, i64 2147631997, i64 2147632037}
!5775 = !DILocation(line: 226, column: 1, scope: !5343)
!5776 = !{i64 2147632198, i64 2147632241, i64 2147632281}
!5777 = !DILocation(line: 227, column: 1, scope: !5343)
!5778 = !{i64 2147632439, i64 2147632482, i64 2147632522}
!5779 = !DILocation(line: 228, column: 1, scope: !5343)
!5780 = !{i64 2147632674, i64 2147632717, i64 2147632757}
!5781 = !DILocation(line: 229, column: 1, scope: !5343)
!5782 = !{i64 2147632906, i64 2147632949, i64 2147632989}
!5783 = !DILocation(line: 230, column: 1, scope: !5343)
!5784 = !{i64 2147633108, i64 2147633151, i64 2147633191}
!5785 = !DILocation(line: 231, column: 1, scope: !5343)
!5786 = !{i64 2147633358, i64 2147633401, i64 2147633441}
!5787 = !DILocation(line: 232, column: 1, scope: !5343)
!5788 = !{i64 2147633596, i64 2147633639, i64 2147633679}
!5789 = !DILocation(line: 233, column: 1, scope: !5343)
!5790 = !{i64 2147633780, i64 2147633823, i64 2147633863}
!5791 = !DILocation(line: 234, column: 1, scope: !5343)
!5792 = !{i64 2147634004, i64 2147634047, i64 2147634087}
!5793 = !DILocation(line: 235, column: 1, scope: !5343)
!5794 = !{i64 2147634242, i64 2147634285, i64 2147634325}
!5795 = !DILocation(line: 236, column: 1, scope: !5343)
!5796 = !{i64 2147634480, i64 2147634523, i64 2147634563}
!5797 = !DILocation(line: 237, column: 1, scope: !5343)
!5798 = !{i64 2147634673, i64 2147634716, i64 2147634756}
!5799 = !DILocation(line: 238, column: 1, scope: !5343)
!5800 = !{i64 2147634926, i64 2147634969, i64 2147635009}
!5801 = !DILocation(line: 239, column: 1, scope: !5343)
!5802 = !{i64 2147635140, i64 2147635183, i64 2147635223}
!5803 = !DILocation(line: 240, column: 1, scope: !5343)
!5804 = !{i64 2147635348, i64 2147635391, i64 2147635431}
!5805 = !DILocation(line: 241, column: 1, scope: !5343)
!5806 = !{i64 2147635538, i64 2147635581, i64 2147635621}
!5807 = !DILocation(line: 242, column: 1, scope: !5343)
!5808 = !{i64 2147635752, i64 2147635795, i64 2147635835}
!5809 = !DILocation(line: 243, column: 1, scope: !5343)
!5810 = !{i64 2147636014, i64 2147636057, i64 2147636097}
!5811 = !DILocation(line: 244, column: 1, scope: !5343)
!5812 = !{i64 2147636225, i64 2147636268, i64 2147636308}
!5813 = !DILocation(line: 245, column: 1, scope: !5343)
!5814 = !{i64 2147636469, i64 2147636512, i64 2147636552}
!5815 = !DILocation(line: 246, column: 1, scope: !5343)
!5816 = !{i64 2147636680, i64 2147636723, i64 2147636763}
!5817 = !DILocation(line: 247, column: 1, scope: !5343)
!5818 = !{i64 2147636909, i64 2147636952, i64 2147636992}
!5819 = !DILocation(line: 248, column: 1, scope: !5343)
!5820 = !{i64 2147637174, i64 2147637217, i64 2147637257}
!5821 = !DILocation(line: 249, column: 1, scope: !5343)
!5822 = !{i64 2147637379, i64 2147637422, i64 2147637462}
!5823 = !DILocation(line: 250, column: 1, scope: !5343)
!5824 = !{i64 2147637575, i64 2147637618, i64 2147637658}
!5825 = !DILocation(line: 251, column: 1, scope: !5343)
!5826 = !{i64 2147637798, i64 2147637841, i64 2147637881}
!5827 = !DILocation(line: 252, column: 1, scope: !5343)
!5828 = !{i64 2147637961, i64 2147638004, i64 2147638044}
!5829 = !DILocation(line: 253, column: 1, scope: !5343)
!5830 = !{i64 2147642227, i64 2147642270, i64 2147642310}
!5831 = !DILocation(line: 254, column: 1, scope: !5343)
!5832 = !{i64 2147642447, i64 2147642490, i64 2147642530}
!5833 = !DILocation(line: 255, column: 1, scope: !5343)
!5834 = !{i64 2147642661, i64 2147642704, i64 2147642744}
!5835 = !DILocation(line: 256, column: 1, scope: !5343)
!5836 = !{i64 2147642875, i64 2147642918, i64 2147642958}
!5837 = !DILocation(line: 257, column: 1, scope: !5343)
!5838 = !{i64 2147643086, i64 2147643129, i64 2147643169}
!5839 = !DILocation(line: 258, column: 1, scope: !5343)
!5840 = !{i64 2147643279, i64 2147643322, i64 2147643362}
!5841 = !DILocation(line: 259, column: 1, scope: !5343)
!5842 = !{i64 2147643478, i64 2147643521, i64 2147643561}
!5843 = !DILocation(line: 260, column: 1, scope: !5343)
!5844 = !{i64 2147643650, i64 2147643693, i64 2147643733}
!5845 = !DILocation(line: 261, column: 1, scope: !5343)
!5846 = !{i64 2147643843, i64 2147643886, i64 2147643926}
!5847 = !DILocation(line: 262, column: 1, scope: !5343)
!5848 = !{i64 2147644039, i64 2147644082, i64 2147644122}
!5849 = !DILocation(line: 263, column: 1, scope: !5343)
!5850 = !{i64 2147644266, i64 2147644309, i64 2147644349}
!5851 = !DILocation(line: 264, column: 1, scope: !5343)
!5852 = !{i64 2147644483, i64 2147644526, i64 2147644566}
!5853 = !DILocation(line: 265, column: 1, scope: !5343)
!5854 = !{i64 2147644775, i64 2147644818, i64 2147644858}
!5855 = !DILocation(line: 266, column: 1, scope: !5343)
!5856 = !{i64 2147645007, i64 2147645050, i64 2147645090}
!5857 = !DILocation(line: 267, column: 1, scope: !5343)
!5858 = !{i64 2147645224, i64 2147645267, i64 2147645307}
!5859 = !DILocation(line: 268, column: 1, scope: !5343)
!5860 = !{i64 2147645431, i64 2147645474, i64 2147645514}
!5861 = !DILocation(line: 269, column: 1, scope: !5343)
!5862 = !{i64 2147645632, i64 2147645675, i64 2147645715}
!5863 = !DILocation(line: 270, column: 1, scope: !5343)
!5864 = !{i64 2147645864, i64 2147645907, i64 2147645947}
!5865 = !DILocation(line: 271, column: 1, scope: !5343)
!5866 = !{i64 2147646072, i64 2147646115, i64 2147646155}
!5867 = !DILocation(line: 272, column: 1, scope: !5343)
!5868 = !{i64 2147646262, i64 2147646305, i64 2147646345}
!5869 = !DILocation(line: 273, column: 1, scope: !5343)
!5870 = !{i64 2147646488, i64 2147646531, i64 2147646571}
!5871 = !DILocation(line: 274, column: 1, scope: !5343)
!5872 = !{i64 2147646677, i64 2147646720, i64 2147646760}
!5873 = !DILocation(line: 275, column: 1, scope: !5343)
!5874 = !{i64 2147646948, i64 2147646991, i64 2147647031}
!5875 = !DILocation(line: 276, column: 1, scope: !5343)
!5876 = !{i64 2147647168, i64 2147647211, i64 2147647251}
!5877 = !DILocation(line: 277, column: 1, scope: !5343)
!5878 = !{i64 2147647421, i64 2147647464, i64 2147647504}
!5879 = !DILocation(line: 278, column: 1, scope: !5343)
!5880 = !{i64 2147647629, i64 2147647672, i64 2147647712}
!5881 = !DILocation(line: 279, column: 1, scope: !5343)
!5882 = !{i64 2147647861, i64 2147647904, i64 2147647944}
!5883 = !DILocation(line: 280, column: 1, scope: !5343)
!5884 = !{i64 2147648072, i64 2147648115, i64 2147648155}
!5885 = !DILocation(line: 281, column: 1, scope: !5343)
!5886 = !{i64 2147648262, i64 2147648305, i64 2147648345}
!5887 = !DILocation(line: 282, column: 1, scope: !5343)
!5888 = !{i64 2147648476, i64 2147648519, i64 2147648559}
!5889 = !DILocation(line: 283, column: 1, scope: !5343)
!5890 = !{i64 2147648675, i64 2147648718, i64 2147648758}
!5891 = !DILocation(line: 284, column: 1, scope: !5343)
!5892 = !{i64 2147648862, i64 2147648905, i64 2147648945}
!5893 = !DILocation(line: 285, column: 1, scope: !5343)
!5894 = !{i64 2147649070, i64 2147649113, i64 2147649153}
!5895 = !DILocation(line: 286, column: 1, scope: !5343)
!5896 = !{i64 2147649299, i64 2147649342, i64 2147649382}
!5897 = !DILocation(line: 287, column: 1, scope: !5343)
!5898 = !{i64 2147649501, i64 2147649544, i64 2147649584}
!5899 = !DILocation(line: 288, column: 1, scope: !5343)
!5900 = !{i64 2147649700, i64 2147649743, i64 2147649783}
!5901 = !DILocation(line: 289, column: 1, scope: !5343)
!5902 = !{i64 2147649917, i64 2147649960, i64 2147650000}
!5903 = !DILocation(line: 291, column: 1, scope: !5343)
!5904 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !291, file: !291, line: 30, type: !298, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !274, retainedNodes: !5905)
!5905 = !{!5906, !5907}
!5906 = !DILocalVariable(name: "arg", arg: 1, scope: !5904, file: !291, line: 30, type: !300)
!5907 = !DILocalVariable(name: "key", scope: !5904, file: !291, line: 32, type: !162)
!5908 = !DILocation(line: 0, scope: !5904)
!5909 = !DILocation(line: 37, column: 2, scope: !5904)
!5910 = !DILocation(line: 38, column: 2, scope: !5904)
!5911 = !DILocation(line: 55, column: 2, scope: !5912, inlinedAt: !5919)
!5912 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5913, file: !5913, line: 42, type: !5914, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !274, retainedNodes: !5916)
!5913 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5914 = !DISubroutineType(types: !5915)
!5915 = !{!32}
!5916 = !{!5917, !5918}
!5917 = !DILocalVariable(name: "key", scope: !5912, file: !5913, line: 44, type: !32)
!5918 = !DILocalVariable(name: "tmp", scope: !5912, file: !5913, line: 53, type: !32)
!5919 = distinct !DILocation(line: 40, column: 8, scope: !5904)
!5920 = !{i64 2101427}
!5921 = !DILocation(line: 0, scope: !5912, inlinedAt: !5919)
!5922 = !DILocalVariable(name: "key", arg: 1, scope: !5923, file: !5913, line: 84, type: !32)
!5923 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5913, file: !5913, line: 84, type: !5924, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !274, retainedNodes: !5926)
!5924 = !DISubroutineType(types: !5925)
!5925 = !{null, !32}
!5926 = !{!5922}
!5927 = !DILocation(line: 0, scope: !5923, inlinedAt: !5928)
!5928 = distinct !DILocation(line: 47, column: 2, scope: !5904)
!5929 = !DILocation(line: 95, column: 2, scope: !5923, inlinedAt: !5928)
!5930 = !{i64 2102244}
!5931 = !DILocation(line: 51, column: 18, scope: !5904)
!5932 = !DILocation(line: 53, column: 2, scope: !5904)
!5933 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !5934, file: !5934, line: 1609, type: !3137, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !274, retainedNodes: !250)
!5934 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5935 = !DILocation(line: 1611, column: 3, scope: !5933)
!5936 = !DILocation(line: 1612, column: 1, scope: !5933)
!5937 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !5934, file: !5934, line: 1629, type: !3137, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !274, retainedNodes: !250)
!5938 = !DILocation(line: 1631, column: 3, scope: !5937)
!5939 = !DILocation(line: 1632, column: 1, scope: !5937)
!5940 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !321, file: !321, line: 26, type: !327, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !318, retainedNodes: !5941)
!5941 = !{!5942}
!5942 = !DILocalVariable(name: "dev", arg: 1, scope: !5940, file: !321, line: 26, type: !329)
!5943 = !DILocation(line: 0, scope: !5940)
!5944 = !DILocation(line: 68, column: 2, scope: !5940)
!5945 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !5946, file: !5946, line: 57, type: !5947, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2500, retainedNodes: !5993)
!5946 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5947 = !DISubroutineType(types: !5948)
!5948 = !{null, !32, !5949}
!5949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5950, size: 32)
!5950 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5951)
!5951 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2620, line: 141, baseType: !5952)
!5952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2620, line: 97, size: 256, elements: !5953)
!5953 = !{!5954}
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !5952, file: !2620, line: 107, baseType: !5955, size: 256)
!5955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2620, line: 98, size: 256, elements: !5956)
!5956 = !{!5957, !5962, !5967, !5972, !5977, !5982, !5987, !5992}
!5957 = !DIDerivedType(tag: DW_TAG_member, scope: !5955, file: !2620, line: 99, baseType: !5958, size: 32)
!5958 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5955, file: !2620, line: 99, size: 32, elements: !5959)
!5959 = !{!5960, !5961}
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !5958, file: !2620, line: 99, baseType: !162, size: 32)
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !5958, file: !2620, line: 99, baseType: !162, size: 32)
!5962 = !DIDerivedType(tag: DW_TAG_member, scope: !5955, file: !2620, line: 100, baseType: !5963, size: 32, offset: 32)
!5963 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5955, file: !2620, line: 100, size: 32, elements: !5964)
!5964 = !{!5965, !5966}
!5965 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !5963, file: !2620, line: 100, baseType: !162, size: 32)
!5966 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !5963, file: !2620, line: 100, baseType: !162, size: 32)
!5967 = !DIDerivedType(tag: DW_TAG_member, scope: !5955, file: !2620, line: 101, baseType: !5968, size: 32, offset: 64)
!5968 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5955, file: !2620, line: 101, size: 32, elements: !5969)
!5969 = !{!5970, !5971}
!5970 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !5968, file: !2620, line: 101, baseType: !162, size: 32)
!5971 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !5968, file: !2620, line: 101, baseType: !162, size: 32)
!5972 = !DIDerivedType(tag: DW_TAG_member, scope: !5955, file: !2620, line: 102, baseType: !5973, size: 32, offset: 96)
!5973 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5955, file: !2620, line: 102, size: 32, elements: !5974)
!5974 = !{!5975, !5976}
!5975 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !5973, file: !2620, line: 102, baseType: !162, size: 32)
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !5973, file: !2620, line: 102, baseType: !162, size: 32)
!5977 = !DIDerivedType(tag: DW_TAG_member, scope: !5955, file: !2620, line: 103, baseType: !5978, size: 32, offset: 128)
!5978 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5955, file: !2620, line: 103, size: 32, elements: !5979)
!5979 = !{!5980, !5981}
!5980 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5978, file: !2620, line: 103, baseType: !162, size: 32)
!5981 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !5978, file: !2620, line: 103, baseType: !162, size: 32)
!5982 = !DIDerivedType(tag: DW_TAG_member, scope: !5955, file: !2620, line: 104, baseType: !5983, size: 32, offset: 160)
!5983 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5955, file: !2620, line: 104, size: 32, elements: !5984)
!5984 = !{!5985, !5986}
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !5983, file: !2620, line: 104, baseType: !162, size: 32)
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !5983, file: !2620, line: 104, baseType: !162, size: 32)
!5987 = !DIDerivedType(tag: DW_TAG_member, scope: !5955, file: !2620, line: 105, baseType: !5988, size: 32, offset: 192)
!5988 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5955, file: !2620, line: 105, size: 32, elements: !5989)
!5989 = !{!5990, !5991}
!5990 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !5988, file: !2620, line: 105, baseType: !162, size: 32)
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !5988, file: !2620, line: 105, baseType: !162, size: 32)
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !5955, file: !2620, line: 106, baseType: !162, size: 32, offset: 224)
!5993 = !{!5994, !5995}
!5994 = !DILocalVariable(name: "reason", arg: 1, scope: !5945, file: !5946, line: 57, type: !32)
!5995 = !DILocalVariable(name: "esf", arg: 2, scope: !5945, file: !5946, line: 57, type: !5949)
!5996 = !DILocation(line: 0, scope: !5945)
!5997 = !DILocation(line: 63, column: 2, scope: !5945)
!5998 = !DILocation(line: 64, column: 1, scope: !5945)
!5999 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !5946, file: !5946, line: 82, type: !6000, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2500, retainedNodes: !6015)
!6000 = !DISubroutineType(types: !6001)
!6001 = !{null, !5949, !6002}
!6002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6003, size: 32)
!6003 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !428, line: 37, baseType: !6004)
!6004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !6005)
!6005 = !{!6006, !6007, !6008, !6009, !6010, !6011, !6012, !6013, !6014}
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6004, file: !428, line: 26, baseType: !162, size: 32)
!6007 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6004, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6004, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6004, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6004, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6004, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6004, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6004, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6004, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!6015 = !{!6016, !6017, !6018}
!6016 = !DILocalVariable(name: "esf", arg: 1, scope: !5999, file: !5946, line: 82, type: !5949)
!6017 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !5999, file: !5946, line: 82, type: !6002)
!6018 = !DILocalVariable(name: "reason", scope: !5999, file: !5946, line: 88, type: !32)
!6019 = !DILocation(line: 0, scope: !5999)
!6020 = !DILocation(line: 88, column: 35, scope: !5999)
!6021 = !DILocation(line: 108, column: 2, scope: !5999)
!6022 = !DILocation(line: 131, column: 1, scope: !5999)
!6023 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !5946, file: !5946, line: 133, type: !6024, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2500, retainedNodes: !6026)
!6024 = !DISubroutineType(types: !6025)
!6025 = !{null, !102}
!6026 = !{!6027, !6028, !6029}
!6027 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6023, file: !5946, line: 133, type: !102)
!6028 = !DILocalVariable(name: "ssf_contents", scope: !6023, file: !5946, line: 135, type: !848)
!6029 = !DILocalVariable(name: "oops_esf", scope: !6023, file: !5946, line: 136, type: !5951)
!6030 = !DILocation(line: 0, scope: !6023)
!6031 = !DILocation(line: 136, column: 2, scope: !6023)
!6032 = !DILocation(line: 136, column: 15, scope: !6023)
!6033 = !DILocation(line: 139, column: 22, scope: !6023)
!6034 = !DILocation(line: 139, column: 17, scope: !6023)
!6035 = !DILocation(line: 139, column: 20, scope: !6023)
!6036 = !DILocation(line: 141, column: 2, scope: !6023)
!6037 = !DILocation(line: 142, column: 2, scope: !6023)
!6038 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6039, file: !6039, line: 40, type: !5924, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !6040)
!6039 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6040 = !{!6041}
!6041 = !DILocalVariable(name: "irq", arg: 1, scope: !6038, file: !6039, line: 40, type: !32)
!6042 = !DILocation(line: 0, scope: !6038)
!6043 = !DILocation(line: 42, column: 2, scope: !6038)
!6044 = !DILocation(line: 43, column: 1, scope: !6038)
!6045 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !497, file: !497, line: 1684, type: !6046, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !6048)
!6046 = !DISubroutineType(types: !6047)
!6047 = !{null, !754}
!6048 = !{!6049}
!6049 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6045, file: !497, line: 1684, type: !754)
!6050 = !DILocation(line: 0, scope: !6045)
!6051 = !DILocation(line: 1686, column: 23, scope: !6052)
!6052 = distinct !DILexicalBlock(scope: !6045, file: !497, line: 1686, column: 7)
!6053 = !DILocation(line: 1686, column: 7, scope: !6045)
!6054 = !DILocation(line: 1688, column: 5, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !6052, file: !497, line: 1687, column: 3)
!6056 = !{i64 2151069352}
!6057 = !DILocation(line: 1689, column: 81, scope: !6055)
!6058 = !DILocation(line: 1689, column: 60, scope: !6055)
!6059 = !DILocation(line: 1689, column: 34, scope: !6055)
!6060 = !DILocation(line: 1689, column: 5, scope: !6055)
!6061 = !DILocation(line: 1689, column: 43, scope: !6055)
!6062 = !DILocation(line: 1690, column: 5, scope: !6055)
!6063 = !{i64 2151069466}
!6064 = !DILocation(line: 1691, column: 3, scope: !6055)
!6065 = !DILocation(line: 1692, column: 1, scope: !6045)
!6066 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6039, file: !6039, line: 45, type: !5924, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !6067)
!6067 = !{!6068}
!6068 = !DILocalVariable(name: "irq", arg: 1, scope: !6066, file: !6039, line: 45, type: !32)
!6069 = !DILocation(line: 0, scope: !6066)
!6070 = !DILocation(line: 47, column: 2, scope: !6066)
!6071 = !DILocation(line: 48, column: 1, scope: !6066)
!6072 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !497, file: !497, line: 1722, type: !6046, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !6073)
!6073 = !{!6074}
!6074 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6072, file: !497, line: 1722, type: !754)
!6075 = !DILocation(line: 0, scope: !6072)
!6076 = !DILocation(line: 1724, column: 23, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6072, file: !497, line: 1724, column: 7)
!6078 = !DILocation(line: 1724, column: 7, scope: !6072)
!6079 = !DILocation(line: 1726, column: 81, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6077, file: !497, line: 1725, column: 3)
!6081 = !DILocation(line: 1726, column: 60, scope: !6080)
!6082 = !DILocation(line: 1726, column: 34, scope: !6080)
!6083 = !DILocation(line: 1726, column: 5, scope: !6080)
!6084 = !DILocation(line: 1726, column: 43, scope: !6080)
!6085 = !DILocation(line: 271, column: 3, scope: !6086, inlinedAt: !6088)
!6086 = distinct !DISubprogram(name: "__DSB", scope: !6087, file: !6087, line: 269, type: !3137, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !250)
!6087 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6088 = distinct !DILocation(line: 1727, column: 5, scope: !6080)
!6089 = !{i64 3523735}
!6090 = !DILocation(line: 260, column: 3, scope: !6091, inlinedAt: !6092)
!6091 = distinct !DISubprogram(name: "__ISB", scope: !6087, file: !6087, line: 258, type: !3137, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !250)
!6092 = distinct !DILocation(line: 1728, column: 5, scope: !6080)
!6093 = !{i64 3523452}
!6094 = !DILocation(line: 1729, column: 3, scope: !6080)
!6095 = !DILocation(line: 1730, column: 1, scope: !6072)
!6096 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6039, file: !6039, line: 50, type: !6097, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !6099)
!6097 = !DISubroutineType(types: !6098)
!6098 = !{!107, !32}
!6099 = !{!6100}
!6100 = !DILocalVariable(name: "irq", arg: 1, scope: !6096, file: !6039, line: 50, type: !32)
!6101 = !DILocation(line: 0, scope: !6096)
!6102 = !DILocation(line: 52, column: 20, scope: !6096)
!6103 = !DILocation(line: 52, column: 9, scope: !6096)
!6104 = !DILocation(line: 52, column: 41, scope: !6096)
!6105 = !DILocation(line: 52, column: 39, scope: !6096)
!6106 = !DILocation(line: 52, column: 2, scope: !6096)
!6107 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6039, file: !6039, line: 64, type: !6108, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !6110)
!6108 = !DISubroutineType(types: !6109)
!6109 = !{null, !32, !32, !162}
!6110 = !{!6111, !6112, !6113}
!6111 = !DILocalVariable(name: "irq", arg: 1, scope: !6107, file: !6039, line: 64, type: !32)
!6112 = !DILocalVariable(name: "prio", arg: 2, scope: !6107, file: !6039, line: 64, type: !32)
!6113 = !DILocalVariable(name: "flags", arg: 3, scope: !6107, file: !6039, line: 64, type: !162)
!6114 = !DILocation(line: 0, scope: !6107)
!6115 = !DILocation(line: 83, column: 8, scope: !6116)
!6116 = distinct !DILexicalBlock(scope: !6117, file: !6039, line: 82, column: 9)
!6117 = distinct !DILexicalBlock(scope: !6107, file: !6039, line: 76, column: 6)
!6118 = !DILocation(line: 95, column: 2, scope: !6107)
!6119 = !DILocation(line: 96, column: 1, scope: !6107)
!6120 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !497, file: !497, line: 1814, type: !6121, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !6123)
!6121 = !DISubroutineType(types: !6122)
!6122 = !{null, !754, !162}
!6123 = !{!6124, !6125}
!6124 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6120, file: !497, line: 1814, type: !754)
!6125 = !DILocalVariable(name: "priority", arg: 2, scope: !6120, file: !497, line: 1814, type: !162)
!6126 = !DILocation(line: 0, scope: !6120)
!6127 = !DILocation(line: 0, scope: !6128)
!6128 = distinct !DILexicalBlock(scope: !6120, file: !497, line: 1816, column: 7)
!6129 = !DILocation(line: 1816, column: 7, scope: !6120)
!6130 = !DILocation(line: 1824, column: 1, scope: !6120)
!6131 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6039, file: !6039, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !6132)
!6132 = !{!6133}
!6133 = !DILocalVariable(name: "unused", arg: 1, scope: !6131, file: !6039, line: 155, type: !13)
!6134 = !DILocation(line: 0, scope: !6131)
!6135 = !DILocation(line: 159, column: 2, scope: !6131)
!6136 = !DILocation(line: 160, column: 1, scope: !6131)
!6137 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6138, file: !6138, line: 87, type: !3137, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !250)
!6138 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6139 = !DILocation(line: 89, column: 2, scope: !6137)
!6140 = !DILocation(line: 90, column: 2, scope: !6137)
!6141 = !DILocation(line: 91, column: 1, scope: !6137)
!6142 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6138, file: !6138, line: 23, type: !3137, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!6143 = !DISubprogram(name: "z_arm_int_exit", scope: !6144, file: !6144, line: 153, type: !3137, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!6144 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6145 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6146, file: !6146, line: 256, type: !3137, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !250)
!6146 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6147 = !DILocation(line: 258, column: 2, scope: !6145)
!6148 = !DILocation(line: 260, column: 2, scope: !6145)
!6149 = !DILocation(line: 262, column: 2, scope: !6145)
!6150 = !DILocation(line: 263, column: 2, scope: !6145)
!6151 = !DILocation(line: 267, column: 2, scope: !6145)
!6152 = !DILocation(line: 268, column: 2, scope: !6145)
!6153 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6146, file: !6146, line: 53, type: !3137, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !250)
!6154 = !DILocation(line: 55, column: 12, scope: !6153)
!6155 = !DILocation(line: 271, column: 3, scope: !6156, inlinedAt: !6157)
!6156 = distinct !DISubprogram(name: "__DSB", scope: !6087, file: !6087, line: 269, type: !3137, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !250)
!6157 = distinct !DILocation(line: 56, column: 2, scope: !6153)
!6158 = !{i64 3522406}
!6159 = !DILocation(line: 260, column: 3, scope: !6160, inlinedAt: !6161)
!6160 = distinct !DISubprogram(name: "__ISB", scope: !6087, file: !6087, line: 258, type: !3137, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !250)
!6161 = distinct !DILocation(line: 57, column: 2, scope: !6153)
!6162 = !{i64 3522123}
!6163 = !DILocation(line: 58, column: 1, scope: !6153)
!6164 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6146, file: !6146, line: 96, type: !3137, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !250)
!6165 = !DILocation(line: 103, column: 13, scope: !6164)
!6166 = !DILocation(line: 975, column: 3, scope: !6167, inlinedAt: !6172)
!6167 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6087, file: !6087, line: 971, type: !6168, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !6170)
!6168 = !DISubroutineType(types: !6169)
!6169 = !{!162}
!6170 = !{!6171}
!6171 = !DILocalVariable(name: "result", scope: !6167, file: !6087, line: 973, type: !162)
!6172 = distinct !DILocation(line: 189, column: 16, scope: !6164)
!6173 = !{i64 3543236}
!6174 = !DILocation(line: 0, scope: !6167, inlinedAt: !6172)
!6175 = !DILocation(line: 189, column: 32, scope: !6164)
!6176 = !DILocalVariable(name: "control", arg: 1, scope: !6177, file: !6087, line: 1001, type: !162)
!6177 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6087, file: !6087, line: 1001, type: !6178, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !6180)
!6178 = !DISubroutineType(types: !6179)
!6179 = !{null, !162}
!6180 = !{!6176}
!6181 = !DILocation(line: 0, scope: !6177, inlinedAt: !6182)
!6182 = distinct !DILocation(line: 189, column: 2, scope: !6164)
!6183 = !DILocation(line: 1003, column: 3, scope: !6177, inlinedAt: !6182)
!6184 = !{i64 3543956}
!6185 = !DILocation(line: 260, column: 3, scope: !6160, inlinedAt: !6186)
!6186 = distinct !DILocation(line: 1004, column: 3, scope: !6177, inlinedAt: !6182)
!6187 = !DILocation(line: 191, column: 1, scope: !6164)
!6188 = distinct !DISubprogram(name: "arch_swap", scope: !6189, file: !6189, line: 33, type: !6097, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2587, retainedNodes: !6190)
!6189 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6190 = !{!6191}
!6191 = !DILocalVariable(name: "key", arg: 1, scope: !6188, file: !6189, line: 33, type: !32)
!6192 = !DILocation(line: 0, scope: !6188)
!6193 = !DILocation(line: 36, column: 2, scope: !6188)
!6194 = !DILocation(line: 36, column: 17, scope: !6188)
!6195 = !DILocation(line: 36, column: 25, scope: !6188)
!6196 = !DILocation(line: 37, column: 37, scope: !6188)
!6197 = !DILocation(line: 37, column: 17, scope: !6188)
!6198 = !DILocation(line: 37, column: 35, scope: !6188)
!6199 = !DILocation(line: 41, column: 12, scope: !6188)
!6200 = !DILocalVariable(name: "key", arg: 1, scope: !6201, file: !5913, line: 84, type: !32)
!6201 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5913, file: !5913, line: 84, type: !5924, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2587, retainedNodes: !6202)
!6202 = !{!6200}
!6203 = !DILocation(line: 0, scope: !6201, inlinedAt: !6204)
!6204 = distinct !DILocation(line: 44, column: 2, scope: !6188)
!6205 = !DILocation(line: 95, column: 2, scope: !6201, inlinedAt: !6204)
!6206 = !{i64 2221728}
!6207 = !DILocation(line: 53, column: 9, scope: !6188)
!6208 = !DILocation(line: 53, column: 24, scope: !6188)
!6209 = !DILocation(line: 53, column: 2, scope: !6188)
!6210 = distinct !DISubprogram(name: "arch_new_thread", scope: !6211, file: !6211, line: 56, type: !6212, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2615, retainedNodes: !6319)
!6211 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6212 = !DISubroutineType(types: !6213)
!6213 = !{null, !6214, !6314, !256, !3677, !102, !102, !102}
!6214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6215, size: 32)
!6215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !6216)
!6216 = !{!6217, !6275, !6287, !6288, !6289, !6290, !6296, !6309}
!6217 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6215, file: !359, line: 247, baseType: !6218, size: 384)
!6218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !6219)
!6219 = !{!6220, !6244, !6251, !6252, !6253, !6262, !6263, !6264}
!6220 = !DIDerivedType(tag: DW_TAG_member, scope: !6218, file: !359, line: 60, baseType: !6221, size: 64)
!6221 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6218, file: !359, line: 60, size: 64, elements: !6222)
!6222 = !{!6223, !6238}
!6223 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6221, file: !359, line: 61, baseType: !6224, size: 64)
!6224 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !6225)
!6225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !6226)
!6226 = !{!6227, !6233}
!6227 = !DIDerivedType(tag: DW_TAG_member, scope: !6225, file: !233, line: 38, baseType: !6228, size: 32)
!6228 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6225, file: !233, line: 38, size: 32, elements: !6229)
!6229 = !{!6230, !6232}
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6228, file: !233, line: 39, baseType: !6231, size: 32)
!6231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6225, size: 32)
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6228, file: !233, line: 40, baseType: !6231, size: 32)
!6233 = !DIDerivedType(tag: DW_TAG_member, scope: !6225, file: !233, line: 42, baseType: !6234, size: 32, offset: 32)
!6234 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6225, file: !233, line: 42, size: 32, elements: !6235)
!6235 = !{!6236, !6237}
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6234, file: !233, line: 43, baseType: !6231, size: 32)
!6237 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6234, file: !233, line: 44, baseType: !6231, size: 32)
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6221, file: !359, line: 62, baseType: !6239, size: 64)
!6239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !6240)
!6240 = !{!6241}
!6241 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6239, file: !384, line: 50, baseType: !6242, size: 64)
!6242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6243, size: 64, elements: !389)
!6243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6239, size: 32)
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6218, file: !359, line: 68, baseType: !6245, size: 32, offset: 64)
!6245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6246, size: 32)
!6246 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !6247)
!6247 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !6248)
!6248 = !{!6249}
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6247, file: !228, line: 232, baseType: !6250, size: 64)
!6250 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !6225)
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6218, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6218, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!6253 = !DIDerivedType(tag: DW_TAG_member, scope: !6218, file: !359, line: 90, baseType: !6254, size: 16, offset: 112)
!6254 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6218, file: !359, line: 90, size: 16, elements: !6255)
!6255 = !{!6256, !6261}
!6256 = !DIDerivedType(tag: DW_TAG_member, scope: !6254, file: !359, line: 91, baseType: !6257, size: 16)
!6257 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6254, file: !359, line: 91, size: 16, elements: !6258)
!6258 = !{!6259, !6260}
!6259 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6257, file: !359, line: 96, baseType: !407, size: 8)
!6260 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6257, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6254, file: !359, line: 100, baseType: !411, size: 16)
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6218, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!6263 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6218, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!6264 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6218, file: !359, line: 131, baseType: !6265, size: 192, offset: 192)
!6265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !6266)
!6266 = !{!6267, !6268, !6274}
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6265, file: !228, line: 245, baseType: !6224, size: 64)
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6265, file: !228, line: 246, baseType: !6269, size: 32, offset: 64)
!6269 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !6270)
!6270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6271, size: 32)
!6271 = !DISubroutineType(types: !6272)
!6272 = !{null, !6273}
!6273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6265, size: 32)
!6274 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6265, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6215, file: !359, line: 250, baseType: !6276, size: 288, offset: 384)
!6276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !6277)
!6277 = !{!6278, !6279, !6280, !6281, !6282, !6283, !6284, !6285, !6286}
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6276, file: !428, line: 26, baseType: !162, size: 32)
!6279 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6276, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!6280 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6276, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!6281 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6276, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6276, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6276, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6276, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!6285 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6276, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6276, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6215, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6215, file: !359, line: 256, baseType: !6246, size: 64, offset: 704)
!6289 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6215, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!6290 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6215, file: !359, line: 300, baseType: !6291, size: 96, offset: 800)
!6291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !6292)
!6292 = !{!6293, !6294, !6295}
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6291, file: !359, line: 153, baseType: !22, size: 32)
!6294 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6291, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!6295 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6291, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!6296 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6215, file: !359, line: 325, baseType: !6297, size: 32, offset: 896)
!6297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6298, size: 32)
!6298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !6299)
!6299 = !{!6300, !6306, !6307}
!6300 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6298, file: !224, line: 5074, baseType: !6301, size: 96)
!6301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !6302)
!6302 = !{!6303, !6304, !6305}
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6301, file: !454, line: 57, baseType: !457, size: 32)
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6301, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6301, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6298, file: !224, line: 5075, baseType: !6246, size: 64, offset: 96)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6298, file: !224, line: 5076, baseType: !6308, offset: 160)
!6308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6215, file: !359, line: 343, baseType: !6310, size: 64, offset: 928)
!6310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !6311)
!6311 = !{!6312, !6313}
!6312 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6310, file: !428, line: 63, baseType: !162, size: 32)
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6310, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!6314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6315, size: 32)
!6315 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3678, line: 44, baseType: !6316)
!6316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2068, line: 47, size: 8, elements: !6317)
!6317 = !{!6318}
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6316, file: !2068, line: 48, baseType: !125, size: 8)
!6319 = !{!6320, !6321, !6322, !6323, !6324, !6325, !6326, !6327}
!6320 = !DILocalVariable(name: "thread", arg: 1, scope: !6210, file: !6211, line: 56, type: !6214)
!6321 = !DILocalVariable(name: "stack", arg: 2, scope: !6210, file: !6211, line: 56, type: !6314)
!6322 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6210, file: !6211, line: 57, type: !256)
!6323 = !DILocalVariable(name: "entry", arg: 4, scope: !6210, file: !6211, line: 57, type: !3677)
!6324 = !DILocalVariable(name: "p1", arg: 5, scope: !6210, file: !6211, line: 58, type: !102)
!6325 = !DILocalVariable(name: "p2", arg: 6, scope: !6210, file: !6211, line: 58, type: !102)
!6326 = !DILocalVariable(name: "p3", arg: 7, scope: !6210, file: !6211, line: 58, type: !102)
!6327 = !DILocalVariable(name: "iframe", scope: !6210, file: !6211, line: 60, type: !2618)
!6328 = !DILocation(line: 0, scope: !6210)
!6329 = !DILocation(line: 85, column: 11, scope: !6210)
!6330 = !DILocation(line: 93, column: 10, scope: !6210)
!6331 = !DILocation(line: 98, column: 13, scope: !6210)
!6332 = !DILocation(line: 100, column: 15, scope: !6210)
!6333 = !DILocation(line: 100, column: 10, scope: !6210)
!6334 = !DILocation(line: 100, column: 13, scope: !6210)
!6335 = !DILocation(line: 101, column: 15, scope: !6210)
!6336 = !DILocation(line: 101, column: 10, scope: !6210)
!6337 = !DILocation(line: 101, column: 13, scope: !6210)
!6338 = !DILocation(line: 102, column: 15, scope: !6210)
!6339 = !DILocation(line: 102, column: 10, scope: !6210)
!6340 = !DILocation(line: 102, column: 13, scope: !6210)
!6341 = !DILocation(line: 103, column: 15, scope: !6210)
!6342 = !DILocation(line: 103, column: 10, scope: !6210)
!6343 = !DILocation(line: 103, column: 13, scope: !6210)
!6344 = !DILocation(line: 106, column: 10, scope: !6210)
!6345 = !DILocation(line: 106, column: 15, scope: !6210)
!6346 = !DILocation(line: 122, column: 29, scope: !6210)
!6347 = !DILocation(line: 122, column: 23, scope: !6210)
!6348 = !DILocation(line: 122, column: 27, scope: !6210)
!6349 = !DILocation(line: 123, column: 15, scope: !6210)
!6350 = !DILocation(line: 123, column: 23, scope: !6210)
!6351 = !DILocation(line: 143, column: 1, scope: !6210)
!6352 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6211, file: !6211, line: 385, type: !6353, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2615, retainedNodes: !6356)
!6353 = !DISubroutineType(types: !6354)
!6354 = !{!162, !6355, !6355}
!6355 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !162)
!6356 = !{!6357, !6358, !6359, !6362}
!6357 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6352, file: !6211, line: 385, type: !6355)
!6358 = !DILocalVariable(name: "psp", arg: 2, scope: !6352, file: !6211, line: 385, type: !6355)
!6359 = !DILocalVariable(name: "thread", scope: !6352, file: !6211, line: 388, type: !6360)
!6360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6361, size: 32)
!6361 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6215)
!6362 = !DILocalVariable(name: "guard_len", scope: !6352, file: !6211, line: 405, type: !162)
!6363 = !DILocation(line: 0, scope: !6352)
!6364 = !DILocation(line: 388, column: 34, scope: !6352)
!6365 = !DILocation(line: 390, column: 13, scope: !6366)
!6366 = distinct !DILexicalBlock(scope: !6352, file: !6211, line: 390, column: 6)
!6367 = !DILocation(line: 390, column: 6, scope: !6352)
!6368 = !DILocation(line: 438, column: 6, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !6352, file: !6211, line: 438, column: 6)
!6370 = !DILocation(line: 438, column: 6, scope: !6352)
!6371 = !DILocation(line: 442, column: 3, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6369, file: !6211, line: 440, column: 22)
!6373 = !DILocation(line: 455, column: 1, scope: !6352)
!6374 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6211, file: !6211, line: 530, type: !6375, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2615, retainedNodes: !6377)
!6375 = !DISubroutineType(types: !6376)
!6376 = !{null, !6214, !256, !3677}
!6377 = !{!6378, !6379, !6380}
!6378 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6374, file: !6211, line: 530, type: !6214)
!6379 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6374, file: !6211, line: 530, type: !256)
!6380 = !DILocalVariable(name: "_main", arg: 3, scope: !6374, file: !6211, line: 531, type: !3677)
!6381 = !DILocation(line: 0, scope: !6374)
!6382 = !DILocation(line: 535, column: 11, scope: !6374)
!6383 = !DILocation(line: 560, column: 2, scope: !6374)
!6384 = !DILocation(line: 576, column: 2, scope: !6374)
!6385 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6386 = !DILocation(line: 603, column: 2, scope: !6374)
!6387 = distinct !DISubprogram(name: "z_arm_fault", scope: !6388, file: !6388, line: 1036, type: !6389, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !6404)
!6388 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6389 = !DISubroutineType(types: !6390)
!6390 = !{null, !162, !162, !162, !6391}
!6391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6392, size: 32)
!6392 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !428, line: 37, baseType: !6393)
!6393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !6394)
!6394 = !{!6395, !6396, !6397, !6398, !6399, !6400, !6401, !6402, !6403}
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6393, file: !428, line: 26, baseType: !162, size: 32)
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6393, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6393, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6393, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!6399 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6393, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6393, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6393, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6393, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!6403 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6393, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!6404 = !{!6405, !6406, !6407, !6408, !6409, !6410, !6411, !6412, !6413, !6414}
!6405 = !DILocalVariable(name: "msp", arg: 1, scope: !6387, file: !6388, line: 1036, type: !162)
!6406 = !DILocalVariable(name: "psp", arg: 2, scope: !6387, file: !6388, line: 1036, type: !162)
!6407 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6387, file: !6388, line: 1036, type: !162)
!6408 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6387, file: !6388, line: 1037, type: !6391)
!6409 = !DILocalVariable(name: "reason", scope: !6387, file: !6388, line: 1039, type: !162)
!6410 = !DILocalVariable(name: "fault", scope: !6387, file: !6388, line: 1040, type: !107)
!6411 = !DILocalVariable(name: "recoverable", scope: !6387, file: !6388, line: 1041, type: !136)
!6412 = !DILocalVariable(name: "nested_exc", scope: !6387, file: !6388, line: 1041, type: !136)
!6413 = !DILocalVariable(name: "esf", scope: !6387, file: !6388, line: 1042, type: !2686)
!6414 = !DILocalVariable(name: "esf_copy", scope: !6387, file: !6388, line: 1047, type: !2687)
!6415 = !DILocation(line: 0, scope: !6387)
!6416 = !DILocation(line: 1040, column: 19, scope: !6387)
!6417 = !DILocation(line: 1040, column: 24, scope: !6387)
!6418 = !DILocation(line: 1041, column: 2, scope: !6387)
!6419 = !DILocation(line: 1047, column: 2, scope: !6387)
!6420 = !DILocation(line: 1047, column: 15, scope: !6387)
!6421 = !DILocalVariable(name: "key", arg: 1, scope: !6422, file: !5913, line: 84, type: !32)
!6422 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5913, file: !5913, line: 84, type: !5924, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !6423)
!6423 = !{!6421}
!6424 = !DILocation(line: 0, scope: !6422, inlinedAt: !6425)
!6425 = distinct !DILocation(line: 1050, column: 2, scope: !6387)
!6426 = !DILocation(line: 95, column: 2, scope: !6422, inlinedAt: !6425)
!6427 = !{i64 2254972}
!6428 = !DILocation(line: 1055, column: 9, scope: !6387)
!6429 = !DILocation(line: 1063, column: 11, scope: !6387)
!6430 = !DILocation(line: 1064, column: 6, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6387, file: !6388, line: 1064, column: 6)
!6432 = !{i8 0, i8 2}
!6433 = !DILocation(line: 1064, column: 6, scope: !6387)
!6434 = !DILocation(line: 1070, column: 20, scope: !6387)
!6435 = !DILocation(line: 1070, column: 2, scope: !6387)
!6436 = !DILocation(line: 1089, column: 6, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6387, file: !6388, line: 1089, column: 6)
!6438 = !DILocation(line: 0, scope: !6437)
!6439 = !DILocation(line: 1089, column: 6, scope: !6387)
!6440 = !DILocation(line: 1090, column: 28, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6442, file: !6388, line: 1090, column: 7)
!6442 = distinct !DILexicalBlock(scope: !6437, file: !6388, line: 1089, column: 18)
!6443 = !DILocation(line: 1090, column: 44, scope: !6441)
!6444 = !DILocation(line: 1090, column: 7, scope: !6442)
!6445 = !DILocation(line: 1091, column: 24, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6441, file: !6388, line: 1090, column: 50)
!6447 = !DILocation(line: 1092, column: 3, scope: !6446)
!6448 = !DILocation(line: 1094, column: 23, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6437, file: !6388, line: 1093, column: 9)
!6450 = !DILocation(line: 1097, column: 2, scope: !6387)
!6451 = !DILocation(line: 1098, column: 1, scope: !6387)
!6452 = distinct !DISubprogram(name: "get_esf", scope: !6388, file: !6388, line: 894, type: !6453, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !6456)
!6453 = !DISubroutineType(types: !6454)
!6454 = !{!2686, !162, !162, !162, !6455}
!6455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!6456 = !{!6457, !6458, !6459, !6460, !6461, !6462}
!6457 = !DILocalVariable(name: "msp", arg: 1, scope: !6452, file: !6388, line: 894, type: !162)
!6458 = !DILocalVariable(name: "psp", arg: 2, scope: !6452, file: !6388, line: 894, type: !162)
!6459 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6452, file: !6388, line: 894, type: !162)
!6460 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6452, file: !6388, line: 895, type: !6455)
!6461 = !DILocalVariable(name: "alternative_state_exc", scope: !6452, file: !6388, line: 897, type: !136)
!6462 = !DILocalVariable(name: "ptr_esf", scope: !6452, file: !6388, line: 898, type: !2686)
!6463 = !DILocation(line: 0, scope: !6452)
!6464 = !DILocation(line: 900, column: 14, scope: !6452)
!6465 = !DILocation(line: 902, column: 49, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6452, file: !6388, line: 902, column: 6)
!6467 = !DILocation(line: 902, column: 6, scope: !6452)
!6468 = !DILocation(line: 983, column: 18, scope: !6469)
!6469 = distinct !DILexicalBlock(scope: !6452, file: !6388, line: 983, column: 6)
!6470 = !DILocation(line: 991, column: 7, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6472, file: !6388, line: 990, column: 30)
!6472 = distinct !DILexicalBlock(scope: !6452, file: !6388, line: 990, column: 6)
!6473 = !DILocation(line: 998, column: 16, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6475, file: !6388, line: 995, column: 10)
!6475 = distinct !DILexicalBlock(scope: !6471, file: !6388, line: 991, column: 7)
!6476 = !DILocation(line: 1002, column: 2, scope: !6452)
!6477 = !DILocation(line: 1003, column: 1, scope: !6452)
!6478 = distinct !DISubprogram(name: "fault_handle", scope: !6388, file: !6388, line: 786, type: !6479, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !6481)
!6479 = !DISubroutineType(types: !6480)
!6480 = !{!162, !2686, !107, !6455}
!6481 = !{!6482, !6483, !6484, !6485}
!6482 = !DILocalVariable(name: "esf", arg: 1, scope: !6478, file: !6388, line: 786, type: !2686)
!6483 = !DILocalVariable(name: "fault", arg: 2, scope: !6478, file: !6388, line: 786, type: !107)
!6484 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6478, file: !6388, line: 786, type: !6455)
!6485 = !DILocalVariable(name: "reason", scope: !6478, file: !6388, line: 788, type: !162)
!6486 = !DILocation(line: 0, scope: !6478)
!6487 = !DILocation(line: 790, column: 15, scope: !6478)
!6488 = !DILocation(line: 792, column: 2, scope: !6478)
!6489 = !DILocation(line: 794, column: 12, scope: !6490)
!6490 = distinct !DILexicalBlock(scope: !6478, file: !6388, line: 792, column: 17)
!6491 = !DILocation(line: 795, column: 3, scope: !6490)
!6492 = !DILocation(line: 800, column: 12, scope: !6490)
!6493 = !DILocation(line: 801, column: 3, scope: !6490)
!6494 = !DILocation(line: 803, column: 12, scope: !6490)
!6495 = !DILocation(line: 804, column: 3, scope: !6490)
!6496 = !DILocation(line: 806, column: 12, scope: !6490)
!6497 = !DILocation(line: 807, column: 3, scope: !6490)
!6498 = !DILocation(line: 814, column: 3, scope: !6490)
!6499 = !DILocation(line: 815, column: 3, scope: !6490)
!6500 = !DILocation(line: 829, column: 2, scope: !6478)
!6501 = distinct !DISubprogram(name: "hard_fault", scope: !6388, file: !6388, line: 709, type: !6502, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !6504)
!6502 = !DISubroutineType(types: !6503)
!6503 = !{!162, !2686, !6455}
!6504 = !{!6505, !6506, !6507}
!6505 = !DILocalVariable(name: "esf", arg: 1, scope: !6501, file: !6388, line: 709, type: !2686)
!6506 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6501, file: !6388, line: 709, type: !6455)
!6507 = !DILocalVariable(name: "reason", scope: !6501, file: !6388, line: 711, type: !162)
!6508 = !DILocation(line: 0, scope: !6501)
!6509 = !DILocation(line: 732, column: 15, scope: !6501)
!6510 = !DILocation(line: 734, column: 12, scope: !6511)
!6511 = distinct !DILexicalBlock(scope: !6501, file: !6388, line: 734, column: 6)
!6512 = !DILocation(line: 734, column: 17, scope: !6511)
!6513 = !DILocation(line: 734, column: 41, scope: !6511)
!6514 = !DILocation(line: 734, column: 6, scope: !6501)
!6515 = !DILocation(line: 736, column: 19, scope: !6516)
!6516 = distinct !DILexicalBlock(scope: !6511, file: !6388, line: 736, column: 13)
!6517 = !DILocation(line: 736, column: 49, scope: !6516)
!6518 = !DILocation(line: 736, column: 13, scope: !6511)
!6519 = !DILocation(line: 738, column: 19, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6516, file: !6388, line: 738, column: 13)
!6521 = !DILocation(line: 738, column: 24, scope: !6520)
!6522 = !DILocation(line: 738, column: 47, scope: !6520)
!6523 = !DILocation(line: 738, column: 13, scope: !6516)
!6524 = !DILocation(line: 740, column: 7, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6526, file: !6388, line: 740, column: 7)
!6526 = distinct !DILexicalBlock(scope: !6520, file: !6388, line: 738, column: 53)
!6527 = !DILocation(line: 740, column: 7, scope: !6526)
!6528 = !DILocation(line: 742, column: 24, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6525, file: !6388, line: 740, column: 38)
!6530 = !DILocation(line: 743, column: 3, scope: !6529)
!6531 = !DILocation(line: 743, column: 20, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6525, file: !6388, line: 743, column: 14)
!6533 = !DILocation(line: 743, column: 25, scope: !6532)
!6534 = !DILocation(line: 743, column: 52, scope: !6532)
!6535 = !DILocation(line: 743, column: 14, scope: !6525)
!6536 = !DILocation(line: 744, column: 13, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6532, file: !6388, line: 743, column: 58)
!6538 = !DILocation(line: 745, column: 3, scope: !6537)
!6539 = !DILocation(line: 745, column: 20, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6532, file: !6388, line: 745, column: 14)
!6541 = !DILocation(line: 745, column: 25, scope: !6540)
!6542 = !DILocation(line: 745, column: 52, scope: !6540)
!6543 = !DILocation(line: 745, column: 14, scope: !6532)
!6544 = !DILocation(line: 746, column: 13, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6540, file: !6388, line: 745, column: 58)
!6546 = !DILocation(line: 747, column: 3, scope: !6545)
!6547 = !DILocation(line: 747, column: 20, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6540, file: !6388, line: 747, column: 14)
!6549 = !DILocation(line: 747, column: 52, scope: !6548)
!6550 = !DILocation(line: 747, column: 14, scope: !6540)
!6551 = !DILocation(line: 748, column: 13, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !6548, file: !6388, line: 747, column: 58)
!6553 = !DILocation(line: 753, column: 3, scope: !6552)
!6554 = !DILocation(line: 766, column: 2, scope: !6501)
!6555 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6388, file: !6388, line: 229, type: !6479, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !6556)
!6556 = !{!6557, !6558, !6559, !6560, !6561, !6562, !6565}
!6557 = !DILocalVariable(name: "esf", arg: 1, scope: !6555, file: !6388, line: 229, type: !2686)
!6558 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6555, file: !6388, line: 229, type: !107)
!6559 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6555, file: !6388, line: 230, type: !6455)
!6560 = !DILocalVariable(name: "reason", scope: !6555, file: !6388, line: 232, type: !162)
!6561 = !DILocalVariable(name: "mmfar", scope: !6555, file: !6388, line: 233, type: !162)
!6562 = !DILocalVariable(name: "temp", scope: !6563, file: !6388, line: 254, type: !162)
!6563 = distinct !DILexicalBlock(scope: !6564, file: !6388, line: 244, column: 48)
!6564 = distinct !DILexicalBlock(scope: !6555, file: !6388, line: 244, column: 6)
!6565 = !DILocalVariable(name: "min_stack_ptr", scope: !6566, file: !6388, line: 309, type: !162)
!6566 = distinct !DILexicalBlock(scope: !6567, file: !6388, line: 308, column: 43)
!6567 = distinct !DILexicalBlock(scope: !6568, file: !6388, line: 308, column: 7)
!6568 = distinct !DILexicalBlock(scope: !6569, file: !6388, line: 289, column: 40)
!6569 = distinct !DILexicalBlock(scope: !6555, file: !6388, line: 288, column: 6)
!6570 = !DILocation(line: 0, scope: !6555)
!6571 = !DILocation(line: 237, column: 12, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6555, file: !6388, line: 237, column: 6)
!6573 = !DILocation(line: 241, column: 12, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6555, file: !6388, line: 241, column: 6)
!6575 = !DILocation(line: 244, column: 12, scope: !6564)
!6576 = !DILocation(line: 244, column: 17, scope: !6564)
!6577 = !DILocation(line: 244, column: 42, scope: !6564)
!6578 = !DILocation(line: 244, column: 6, scope: !6555)
!6579 = !DILocation(line: 254, column: 24, scope: !6563)
!6580 = !DILocation(line: 0, scope: !6563)
!6581 = !DILocation(line: 256, column: 13, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6563, file: !6388, line: 256, column: 7)
!6583 = !DILocation(line: 256, column: 18, scope: !6582)
!6584 = !DILocation(line: 256, column: 44, scope: !6582)
!6585 = !DILocation(line: 256, column: 7, scope: !6563)
!6586 = !DILocation(line: 259, column: 24, scope: !6587)
!6587 = distinct !DILexicalBlock(scope: !6588, file: !6388, line: 259, column: 8)
!6588 = distinct !DILexicalBlock(scope: !6582, file: !6388, line: 256, column: 50)
!6589 = !DILocation(line: 259, column: 8, scope: !6588)
!6590 = !DILocation(line: 261, column: 15, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6587, file: !6388, line: 259, column: 30)
!6592 = !DILocation(line: 262, column: 4, scope: !6591)
!6593 = !DILocation(line: 265, column: 12, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6555, file: !6388, line: 265, column: 6)
!6595 = !DILocation(line: 269, column: 12, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !6555, file: !6388, line: 269, column: 6)
!6597 = !DILocation(line: 288, column: 12, scope: !6569)
!6598 = !DILocation(line: 288, column: 17, scope: !6569)
!6599 = !DILocation(line: 288, column: 41, scope: !6569)
!6600 = !DILocation(line: 289, column: 9, scope: !6569)
!6601 = !DILocation(line: 289, column: 14, scope: !6569)
!6602 = !DILocation(line: 288, column: 6, scope: !6555)
!6603 = !DILocation(line: 308, column: 12, scope: !6567)
!6604 = !DILocation(line: 308, column: 17, scope: !6567)
!6605 = !DILocation(line: 308, column: 7, scope: !6568)
!6606 = !DILocation(line: 310, column: 6, scope: !6566)
!6607 = !DILocation(line: 309, column: 29, scope: !6566)
!6608 = !DILocation(line: 0, scope: !6566)
!6609 = !DILocation(line: 312, column: 8, scope: !6610)
!6610 = distinct !DILexicalBlock(scope: !6566, file: !6388, line: 312, column: 8)
!6611 = !DILocation(line: 312, column: 8, scope: !6566)
!6612 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6613, file: !6087, line: 1099, type: !162)
!6613 = distinct !DISubprogram(name: "__set_PSP", scope: !6087, file: !6087, line: 1099, type: !6178, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !6614)
!6614 = !{!6612}
!6615 = !DILocation(line: 0, scope: !6613, inlinedAt: !6616)
!6616 = distinct !DILocation(line: 338, column: 5, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6610, file: !6388, line: 312, column: 23)
!6618 = !DILocation(line: 1101, column: 3, scope: !6613, inlinedAt: !6616)
!6619 = !{i64 3573375}
!6620 = !DILocation(line: 341, column: 4, scope: !6617)
!6621 = !DILocation(line: 360, column: 12, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6555, file: !6388, line: 360, column: 6)
!6623 = !DILocation(line: 360, column: 17, scope: !6622)
!6624 = !DILocation(line: 360, column: 41, scope: !6622)
!6625 = !DILocation(line: 360, column: 6, scope: !6555)
!6626 = !DILocation(line: 361, column: 14, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6622, file: !6388, line: 360, column: 47)
!6628 = !DILocation(line: 362, column: 2, scope: !6627)
!6629 = !DILocation(line: 366, column: 12, scope: !6555)
!6630 = !DILocation(line: 369, column: 15, scope: !6555)
!6631 = !DILocation(line: 371, column: 2, scope: !6555)
!6632 = distinct !DISubprogram(name: "bus_fault", scope: !6388, file: !6388, line: 383, type: !6633, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !6635)
!6633 = !DISubroutineType(types: !6634)
!6634 = !{!107, !2686, !107, !6455}
!6635 = !{!6636, !6637, !6638, !6639, !6640}
!6636 = !DILocalVariable(name: "esf", arg: 1, scope: !6632, file: !6388, line: 383, type: !2686)
!6637 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6632, file: !6388, line: 383, type: !107)
!6638 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6632, file: !6388, line: 383, type: !6455)
!6639 = !DILocalVariable(name: "reason", scope: !6632, file: !6388, line: 385, type: !162)
!6640 = !DILocalVariable(name: "bfar", scope: !6641, file: !6388, line: 405, type: !162)
!6641 = distinct !DILexicalBlock(scope: !6642, file: !6388, line: 395, column: 42)
!6642 = distinct !DILexicalBlock(scope: !6632, file: !6388, line: 395, column: 6)
!6643 = !DILocation(line: 0, scope: !6632)
!6644 = !DILocation(line: 389, column: 11, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6632, file: !6388, line: 389, column: 6)
!6646 = !DILocation(line: 392, column: 11, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6632, file: !6388, line: 392, column: 6)
!6648 = !DILocation(line: 395, column: 11, scope: !6642)
!6649 = !DILocation(line: 395, column: 16, scope: !6642)
!6650 = !DILocation(line: 395, column: 6, scope: !6632)
!6651 = !DILocation(line: 405, column: 3, scope: !6641)
!6652 = !DILocation(line: 0, scope: !6641)
!6653 = !DILocation(line: 407, column: 13, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6641, file: !6388, line: 407, column: 7)
!6655 = !DILocation(line: 407, column: 18, scope: !6654)
!6656 = !DILocation(line: 407, column: 44, scope: !6654)
!6657 = !DILocation(line: 407, column: 7, scope: !6641)
!6658 = !DILocation(line: 411, column: 15, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !6660, file: !6388, line: 409, column: 30)
!6660 = distinct !DILexicalBlock(scope: !6661, file: !6388, line: 409, column: 8)
!6661 = distinct !DILexicalBlock(scope: !6654, file: !6388, line: 407, column: 50)
!6662 = !DILocation(line: 412, column: 4, scope: !6659)
!6663 = !DILocation(line: 415, column: 11, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !6632, file: !6388, line: 415, column: 6)
!6665 = !DILocation(line: 418, column: 12, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6632, file: !6388, line: 418, column: 6)
!6667 = !DILocation(line: 418, column: 17, scope: !6666)
!6668 = !DILocation(line: 418, column: 41, scope: !6666)
!6669 = !DILocation(line: 418, column: 6, scope: !6632)
!6670 = !DILocation(line: 423, column: 18, scope: !6671)
!6671 = distinct !DILexicalBlock(scope: !6666, file: !6388, line: 423, column: 13)
!6672 = !DILocation(line: 524, column: 12, scope: !6632)
!6673 = !DILocation(line: 526, column: 15, scope: !6632)
!6674 = !DILocation(line: 528, column: 2, scope: !6632)
!6675 = distinct !DISubprogram(name: "usage_fault", scope: !6388, file: !6388, line: 539, type: !6676, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !6680)
!6676 = !DISubroutineType(types: !6677)
!6677 = !{!162, !6678}
!6678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6679, size: 32)
!6679 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2687)
!6680 = !{!6681, !6682}
!6681 = !DILocalVariable(name: "esf", arg: 1, scope: !6675, file: !6388, line: 539, type: !6678)
!6682 = !DILocalVariable(name: "reason", scope: !6675, file: !6388, line: 541, type: !162)
!6683 = !DILocation(line: 0, scope: !6675)
!6684 = !DILocation(line: 546, column: 12, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6675, file: !6388, line: 546, column: 6)
!6686 = !DILocation(line: 549, column: 12, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6675, file: !6388, line: 549, column: 6)
!6688 = !DILocation(line: 567, column: 12, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6675, file: !6388, line: 567, column: 6)
!6690 = !DILocation(line: 570, column: 12, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6675, file: !6388, line: 570, column: 6)
!6692 = !DILocation(line: 573, column: 12, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6675, file: !6388, line: 573, column: 6)
!6694 = !DILocation(line: 576, column: 12, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6675, file: !6388, line: 576, column: 6)
!6696 = !DILocation(line: 581, column: 12, scope: !6675)
!6697 = !DILocation(line: 583, column: 2, scope: !6675)
!6698 = distinct !DISubprogram(name: "debug_monitor", scope: !6388, file: !6388, line: 632, type: !6699, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !6701)
!6699 = !DISubroutineType(types: !6700)
!6700 = !{null, !2686, !6455}
!6701 = !{!6702, !6703}
!6702 = !DILocalVariable(name: "esf", arg: 1, scope: !6698, file: !6388, line: 632, type: !2686)
!6703 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6698, file: !6388, line: 632, type: !6455)
!6704 = !DILocation(line: 0, scope: !6698)
!6705 = !DILocation(line: 634, column: 15, scope: !6698)
!6706 = !DILocation(line: 652, column: 1, scope: !6698)
!6707 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6388, file: !6388, line: 658, type: !6708, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !6710)
!6708 = !DISubroutineType(types: !6709)
!6709 = !{!136, !2686}
!6710 = !{!6711, !6712, !6713}
!6711 = !DILocalVariable(name: "esf", arg: 1, scope: !6707, file: !6388, line: 658, type: !2686)
!6712 = !DILocalVariable(name: "ret_addr", scope: !6707, file: !6388, line: 660, type: !2459)
!6713 = !DILocalVariable(name: "fault_insn", scope: !6707, file: !6388, line: 686, type: !411)
!6714 = !DILocation(line: 0, scope: !6707)
!6715 = !DILocation(line: 660, column: 46, scope: !6707)
!6716 = !DILocation(line: 660, column: 23, scope: !6707)
!6717 = !DILocation(line: 682, column: 11, scope: !6707)
!6718 = !DILocation(line: 271, column: 3, scope: !6719, inlinedAt: !6720)
!6719 = distinct !DISubprogram(name: "__DSB", scope: !6087, file: !6087, line: 269, type: !3137, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !250)
!6720 = distinct !DILocation(line: 683, column: 2, scope: !6707)
!6721 = !{i64 3549510}
!6722 = !DILocation(line: 260, column: 3, scope: !6723, inlinedAt: !6724)
!6723 = distinct !DISubprogram(name: "__ISB", scope: !6087, file: !6087, line: 258, type: !3137, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !250)
!6724 = distinct !DILocation(line: 684, column: 2, scope: !6707)
!6725 = !{i64 3549227}
!6726 = !DILocation(line: 686, column: 35, scope: !6707)
!6727 = !DILocation(line: 686, column: 24, scope: !6707)
!6728 = !DILocation(line: 688, column: 11, scope: !6707)
!6729 = !DILocation(line: 271, column: 3, scope: !6719, inlinedAt: !6730)
!6730 = distinct !DILocation(line: 689, column: 2, scope: !6707)
!6731 = !DILocation(line: 260, column: 3, scope: !6723, inlinedAt: !6732)
!6732 = distinct !DILocation(line: 690, column: 2, scope: !6707)
!6733 = !DILocation(line: 693, column: 45, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6707, file: !6388, line: 693, column: 6)
!6735 = !DILocation(line: 699, column: 1, scope: !6707)
!6736 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6388, file: !6388, line: 1107, type: !3137, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !250)
!6737 = !DILocation(line: 1111, column: 11, scope: !6736)
!6738 = !DILocation(line: 1136, column: 1, scope: !6736)
!6739 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6740, file: !6740, line: 26, type: !3137, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !6741)
!6740 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6741 = !{!6742}
!6742 = !DILocalVariable(name: "irq", scope: !6739, file: !6740, line: 28, type: !107)
!6743 = !DILocation(line: 0, scope: !6739)
!6744 = !DILocation(line: 30, column: 2, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6739, file: !6740, line: 30, column: 2)
!6746 = !DILocation(line: 31, column: 3, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6748, file: !6740, line: 30, column: 39)
!6748 = distinct !DILexicalBlock(scope: !6745, file: !6740, line: 30, column: 2)
!6749 = !DILocation(line: 30, column: 35, scope: !6748)
!6750 = !DILocation(line: 30, column: 13, scope: !6748)
!6751 = distinct !{!6751, !6744, !6752}
!6752 = !DILocation(line: 32, column: 2, scope: !6745)
!6753 = !DILocation(line: 33, column: 1, scope: !6739)
!6754 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !497, file: !497, line: 1814, type: !6121, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !6755)
!6755 = !{!6756, !6757}
!6756 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6754, file: !497, line: 1814, type: !754)
!6757 = !DILocalVariable(name: "priority", arg: 2, scope: !6754, file: !497, line: 1814, type: !162)
!6758 = !DILocation(line: 0, scope: !6754)
!6759 = !DILocation(line: 1816, column: 7, scope: !6754)
!6760 = !DILocation(line: 0, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6754, file: !497, line: 1816, column: 7)
!6762 = !DILocation(line: 1824, column: 1, scope: !6754)
!6763 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6764, file: !6764, line: 27, type: !6765, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2774, retainedNodes: !6868)
!6764 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6765 = !DISubroutineType(types: !6766)
!6766 = !{null, !6767}
!6767 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !359, line: 347, baseType: !6768)
!6768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6769, size: 32)
!6769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !6770)
!6770 = !{!6771, !6829, !6841, !6842, !6843, !6844, !6850, !6863}
!6771 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6769, file: !359, line: 247, baseType: !6772, size: 384)
!6772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !6773)
!6773 = !{!6774, !6798, !6805, !6806, !6807, !6816, !6817, !6818}
!6774 = !DIDerivedType(tag: DW_TAG_member, scope: !6772, file: !359, line: 60, baseType: !6775, size: 64)
!6775 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6772, file: !359, line: 60, size: 64, elements: !6776)
!6776 = !{!6777, !6792}
!6777 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6775, file: !359, line: 61, baseType: !6778, size: 64)
!6778 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !6779)
!6779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !6780)
!6780 = !{!6781, !6787}
!6781 = !DIDerivedType(tag: DW_TAG_member, scope: !6779, file: !233, line: 38, baseType: !6782, size: 32)
!6782 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6779, file: !233, line: 38, size: 32, elements: !6783)
!6783 = !{!6784, !6786}
!6784 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6782, file: !233, line: 39, baseType: !6785, size: 32)
!6785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6779, size: 32)
!6786 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6782, file: !233, line: 40, baseType: !6785, size: 32)
!6787 = !DIDerivedType(tag: DW_TAG_member, scope: !6779, file: !233, line: 42, baseType: !6788, size: 32, offset: 32)
!6788 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6779, file: !233, line: 42, size: 32, elements: !6789)
!6789 = !{!6790, !6791}
!6790 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6788, file: !233, line: 43, baseType: !6785, size: 32)
!6791 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6788, file: !233, line: 44, baseType: !6785, size: 32)
!6792 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6775, file: !359, line: 62, baseType: !6793, size: 64)
!6793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !6794)
!6794 = !{!6795}
!6795 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6793, file: !384, line: 50, baseType: !6796, size: 64)
!6796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6797, size: 64, elements: !389)
!6797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6793, size: 32)
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6772, file: !359, line: 68, baseType: !6799, size: 32, offset: 64)
!6799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6800, size: 32)
!6800 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !6801)
!6801 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !6802)
!6802 = !{!6803}
!6803 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6801, file: !228, line: 232, baseType: !6804, size: 64)
!6804 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !6779)
!6805 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6772, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!6806 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6772, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!6807 = !DIDerivedType(tag: DW_TAG_member, scope: !6772, file: !359, line: 90, baseType: !6808, size: 16, offset: 112)
!6808 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6772, file: !359, line: 90, size: 16, elements: !6809)
!6809 = !{!6810, !6815}
!6810 = !DIDerivedType(tag: DW_TAG_member, scope: !6808, file: !359, line: 91, baseType: !6811, size: 16)
!6811 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6808, file: !359, line: 91, size: 16, elements: !6812)
!6812 = !{!6813, !6814}
!6813 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6811, file: !359, line: 96, baseType: !407, size: 8)
!6814 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6811, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!6815 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6808, file: !359, line: 100, baseType: !411, size: 16)
!6816 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6772, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!6817 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6772, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!6818 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6772, file: !359, line: 131, baseType: !6819, size: 192, offset: 192)
!6819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !6820)
!6820 = !{!6821, !6822, !6828}
!6821 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6819, file: !228, line: 245, baseType: !6778, size: 64)
!6822 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6819, file: !228, line: 246, baseType: !6823, size: 32, offset: 64)
!6823 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !6824)
!6824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6825, size: 32)
!6825 = !DISubroutineType(types: !6826)
!6826 = !{null, !6827}
!6827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6819, size: 32)
!6828 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6819, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!6829 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6769, file: !359, line: 250, baseType: !6830, size: 288, offset: 384)
!6830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !6831)
!6831 = !{!6832, !6833, !6834, !6835, !6836, !6837, !6838, !6839, !6840}
!6832 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6830, file: !428, line: 26, baseType: !162, size: 32)
!6833 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6830, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!6834 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6830, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!6835 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6830, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!6836 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6830, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!6837 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6830, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!6838 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6830, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!6839 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6830, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!6840 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6830, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!6841 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6769, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!6842 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6769, file: !359, line: 256, baseType: !6800, size: 64, offset: 704)
!6843 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6769, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!6844 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6769, file: !359, line: 300, baseType: !6845, size: 96, offset: 800)
!6845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !6846)
!6846 = !{!6847, !6848, !6849}
!6847 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6845, file: !359, line: 153, baseType: !22, size: 32)
!6848 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6845, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!6849 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6845, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!6850 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6769, file: !359, line: 325, baseType: !6851, size: 32, offset: 896)
!6851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6852, size: 32)
!6852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !6853)
!6853 = !{!6854, !6860, !6861}
!6854 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6852, file: !224, line: 5074, baseType: !6855, size: 96)
!6855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !6856)
!6856 = !{!6857, !6858, !6859}
!6857 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6855, file: !454, line: 57, baseType: !457, size: 32)
!6858 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6855, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!6859 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6855, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!6860 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6852, file: !224, line: 5075, baseType: !6800, size: 64, offset: 96)
!6861 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6852, file: !224, line: 5076, baseType: !6862, offset: 160)
!6862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!6863 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6769, file: !359, line: 343, baseType: !6864, size: 64, offset: 928)
!6864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !6865)
!6865 = !{!6866, !6867}
!6866 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6864, file: !428, line: 63, baseType: !162, size: 32)
!6867 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6864, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!6868 = !{!6869}
!6869 = !DILocalVariable(name: "thread", arg: 1, scope: !6763, file: !6764, line: 27, type: !6767)
!6870 = !DILocation(line: 0, scope: !6763)
!6871 = !DILocation(line: 29, column: 6, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6763, file: !6764, line: 29, column: 6)
!6873 = !DILocation(line: 29, column: 15, scope: !6872)
!6874 = !DILocation(line: 29, column: 6, scope: !6763)
!6875 = !DILocation(line: 1031, column: 3, scope: !6876, inlinedAt: !6879)
!6876 = distinct !DISubprogram(name: "__get_IPSR", scope: !6087, file: !6087, line: 1027, type: !6168, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2774, retainedNodes: !6877)
!6877 = !{!6878}
!6878 = !DILocalVariable(name: "result", scope: !6876, file: !6087, line: 1029, type: !162)
!6879 = distinct !DILocation(line: 48, column: 10, scope: !6880, inlinedAt: !6884)
!6880 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6881, file: !6881, line: 46, type: !6882, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2774, retainedNodes: !250)
!6881 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6882 = !DISubroutineType(types: !6883)
!6883 = !{!136}
!6884 = distinct !DILocation(line: 30, column: 7, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6886, file: !6764, line: 30, column: 7)
!6886 = distinct !DILexicalBlock(scope: !6872, file: !6764, line: 29, column: 26)
!6887 = !{i64 3538358}
!6888 = !DILocation(line: 0, scope: !6876, inlinedAt: !6879)
!6889 = !DILocation(line: 48, column: 9, scope: !6880, inlinedAt: !6884)
!6890 = !DILocation(line: 30, column: 7, scope: !6886)
!6891 = !DILocation(line: 42, column: 14, scope: !6892)
!6892 = distinct !DILexicalBlock(scope: !6885, file: !6764, line: 30, column: 25)
!6893 = !DILocation(line: 48, column: 15, scope: !6892)
!6894 = !DILocation(line: 49, column: 3, scope: !6892)
!6895 = !DILocation(line: 52, column: 2, scope: !6763)
!6896 = !DILocation(line: 53, column: 1, scope: !6763)
!6897 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !354, file: !354, line: 127, type: !3137, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !347, retainedNodes: !250)
!6898 = !DILocation(line: 134, column: 2, scope: !6897)
!6899 = !DILocation(line: 156, column: 1, scope: !6897)
!6900 = !DILocation(line: 0, scope: !353)
!6901 = !DILocation(line: 289, column: 36, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !353, file: !354, line: 285, column: 2)
!6903 = !DILocation(line: 289, column: 42, scope: !6902)
!6904 = !DILocation(line: 300, column: 36, scope: !353)
!6905 = !DILocation(line: 301, column: 35, scope: !353)
!6906 = !DILocation(line: 302, column: 37, scope: !353)
!6907 = !DILocation(line: 311, column: 2, scope: !353)
!6908 = !DILocation(line: 316, column: 1, scope: !353)
!6909 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !525, file: !525, line: 180, type: !3137, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !250)
!6910 = !DILocation(line: 188, column: 12, scope: !6909)
!6911 = !DILocation(line: 271, column: 3, scope: !6912, inlinedAt: !6913)
!6912 = distinct !DISubprogram(name: "__DSB", scope: !6087, file: !6087, line: 269, type: !3137, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !250)
!6913 = distinct !DILocation(line: 192, column: 2, scope: !6909)
!6914 = !{i64 3699036}
!6915 = !DILocation(line: 260, column: 3, scope: !6916, inlinedAt: !6917)
!6916 = distinct !DISubprogram(name: "__ISB", scope: !6087, file: !6087, line: 258, type: !3137, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !250)
!6917 = distinct !DILocation(line: 193, column: 2, scope: !6909)
!6918 = !{i64 3698753}
!6919 = !DILocation(line: 194, column: 1, scope: !6909)
!6920 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !525, file: !525, line: 199, type: !3137, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !250)
!6921 = !DILocation(line: 282, column: 3, scope: !6922, inlinedAt: !6923)
!6922 = distinct !DISubprogram(name: "__DMB", scope: !6087, file: !6087, line: 280, type: !3137, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !250)
!6923 = distinct !DILocation(line: 202, column: 2, scope: !6920)
!6924 = !{i64 3699312}
!6925 = !DILocation(line: 205, column: 12, scope: !6920)
!6926 = !DILocation(line: 206, column: 1, scope: !6920)
!6927 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !525, file: !525, line: 275, type: !6928, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !6941)
!6928 = !DISubroutineType(types: !6929)
!6929 = !{null, !6930, !177, !6355, !6355}
!6930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6931, size: 32)
!6931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6932)
!6932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !476, line: 52, size: 96, elements: !6933)
!6933 = !{!6934, !6935, !6936}
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6932, file: !476, line: 53, baseType: !22, size: 32)
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6932, file: !476, line: 54, baseType: !252, size: 32, offset: 32)
!6936 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6932, file: !476, line: 55, baseType: !6937, size: 32, offset: 64)
!6937 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !482, line: 151, baseType: !6938)
!6938 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !482, line: 149, size: 32, elements: !6939)
!6939 = !{!6940}
!6940 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !6938, file: !482, line: 150, baseType: !162, size: 32)
!6941 = !{!6942, !6943, !6944, !6945}
!6942 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6927, file: !525, line: 276, type: !6930)
!6943 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6927, file: !525, line: 276, type: !177)
!6944 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !6927, file: !525, line: 277, type: !6355)
!6945 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6927, file: !525, line: 277, type: !6355)
!6946 = !DILocation(line: 0, scope: !6927)
!6947 = !DILocation(line: 279, column: 6, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6927, file: !525, line: 279, column: 6)
!6949 = !DILocation(line: 285, column: 1, scope: !6927)
!6950 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !6951, file: !6951, line: 220, type: !6952, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !6954)
!6951 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6952 = !DISubroutineType(types: !6953)
!6953 = !{!107, !6930, !177, !6355, !6355}
!6954 = !{!6955, !6956, !6957, !6958, !6959}
!6955 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6950, file: !6951, line: 221, type: !6930)
!6956 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6950, file: !6951, line: 221, type: !177)
!6957 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !6950, file: !6951, line: 222, type: !6355)
!6958 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6950, file: !6951, line: 223, type: !6355)
!6959 = !DILocalVariable(name: "mpu_reg_index", scope: !6950, file: !6951, line: 225, type: !107)
!6960 = !DILocation(line: 0, scope: !6950)
!6961 = !DILocation(line: 225, column: 22, scope: !6950)
!6962 = !DILocation(line: 233, column: 18, scope: !6950)
!6963 = !DILocation(line: 236, column: 23, scope: !6950)
!6964 = !DILocation(line: 236, column: 21, scope: !6950)
!6965 = !DILocation(line: 238, column: 2, scope: !6950)
!6966 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !525, file: !525, line: 105, type: !6967, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !6969)
!6967 = !DISubroutineType(types: !6968)
!6968 = !{!107, !6930, !133, !133, !136}
!6969 = !{!6970, !6971, !6972, !6973, !6974, !6975}
!6970 = !DILocalVariable(name: "regions", arg: 1, scope: !6966, file: !525, line: 106, type: !6930)
!6971 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6966, file: !525, line: 106, type: !133)
!6972 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !6966, file: !525, line: 106, type: !133)
!6973 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !6966, file: !525, line: 107, type: !136)
!6974 = !DILocalVariable(name: "i", scope: !6966, file: !525, line: 109, type: !107)
!6975 = !DILocalVariable(name: "reg_index", scope: !6966, file: !525, line: 110, type: !107)
!6976 = !DILocation(line: 0, scope: !6966)
!6977 = !DILocation(line: 110, column: 18, scope: !6966)
!6978 = !DILocation(line: 112, column: 16, scope: !6979)
!6979 = distinct !DILexicalBlock(scope: !6980, file: !525, line: 112, column: 2)
!6980 = distinct !DILexicalBlock(scope: !6966, file: !525, line: 112, column: 2)
!6981 = !DILocation(line: 112, column: 2, scope: !6980)
!6982 = !DILocation(line: 113, column: 7, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6984, file: !525, line: 113, column: 7)
!6984 = distinct !DILexicalBlock(scope: !6979, file: !525, line: 112, column: 36)
!6985 = !DILocation(line: 113, column: 18, scope: !6983)
!6986 = !DILocation(line: 113, column: 23, scope: !6983)
!6987 = !DILocation(line: 113, column: 7, scope: !6984)
!6988 = !DILocation(line: 118, column: 23, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6984, file: !525, line: 118, column: 7)
!6990 = !DILocation(line: 119, column: 7, scope: !6989)
!6991 = !DILocation(line: 118, column: 7, scope: !6984)
!6992 = !DILocation(line: 124, column: 36, scope: !6984)
!6993 = !DILocation(line: 124, column: 15, scope: !6984)
!6994 = !DILocation(line: 126, column: 17, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6984, file: !525, line: 126, column: 7)
!6996 = !DILocation(line: 126, column: 7, scope: !6984)
!6997 = !DILocation(line: 131, column: 12, scope: !6984)
!6998 = !DILocation(line: 132, column: 2, scope: !6984)
!6999 = !DILocation(line: 112, column: 32, scope: !6979)
!7000 = distinct !{!7000, !6981, !7001}
!7001 = !DILocation(line: 132, column: 2, scope: !6980)
!7002 = !DILocation(line: 135, column: 1, scope: !6966)
!7003 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !6951, file: !6951, line: 63, type: !7004, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7006)
!7004 = !DISubroutineType(types: !7005)
!7005 = !{!107, !6930}
!7006 = !{!7007, !7008}
!7007 = !DILocalVariable(name: "part", arg: 1, scope: !7003, file: !6951, line: 63, type: !6930)
!7008 = !DILocalVariable(name: "partition_is_valid", scope: !7003, file: !6951, line: 70, type: !107)
!7009 = !DILocation(line: 0, scope: !7003)
!7010 = !DILocation(line: 71, column: 11, scope: !7003)
!7011 = !DILocation(line: 71, column: 37, scope: !7003)
!7012 = !DILocation(line: 72, column: 3, scope: !7003)
!7013 = !DILocation(line: 71, column: 30, scope: !7003)
!7014 = !DILocation(line: 75, column: 11, scope: !7003)
!7015 = !DILocation(line: 75, column: 17, scope: !7003)
!7016 = !DILocation(line: 75, column: 38, scope: !7003)
!7017 = !DILocation(line: 77, column: 2, scope: !7003)
!7018 = distinct !DISubprogram(name: "mpu_configure_region", scope: !525, file: !525, line: 79, type: !7019, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7021)
!7019 = !DISubroutineType(types: !7020)
!7020 = !{!107, !177, !6930}
!7021 = !{!7022, !7023, !7024}
!7022 = !DILocalVariable(name: "index", arg: 1, scope: !7018, file: !525, line: 79, type: !177)
!7023 = !DILocalVariable(name: "new_region", arg: 2, scope: !7018, file: !525, line: 80, type: !6930)
!7024 = !DILocalVariable(name: "region_conf", scope: !7018, file: !525, line: 82, type: !514)
!7025 = !DILocation(line: 0, scope: !7018)
!7026 = !DILocation(line: 82, column: 2, scope: !7018)
!7027 = !DILocation(line: 82, column: 24, scope: !7018)
!7028 = !DILocation(line: 87, column: 33, scope: !7018)
!7029 = !DILocation(line: 87, column: 14, scope: !7018)
!7030 = !DILocation(line: 87, column: 19, scope: !7018)
!7031 = !DILocation(line: 91, column: 55, scope: !7018)
!7032 = !DILocation(line: 92, column: 16, scope: !7018)
!7033 = !DILocation(line: 92, column: 53, scope: !7018)
!7034 = !DILocation(line: 91, column: 2, scope: !7018)
!7035 = !DILocation(line: 95, column: 9, scope: !7018)
!7036 = !DILocation(line: 97, column: 1, scope: !7018)
!7037 = !DILocation(line: 95, column: 2, scope: !7018)
!7038 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !6951, file: !6951, line: 113, type: !7039, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7044)
!7039 = !DISubroutineType(types: !7040)
!7040 = !{null, !7041, !7042, !162, !162}
!7041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 32)
!7042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7043, size: 32)
!7043 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6937)
!7044 = !{!7045, !7046, !7047, !7048}
!7045 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7038, file: !6951, line: 114, type: !7041)
!7046 = !DILocalVariable(name: "attr", arg: 2, scope: !7038, file: !6951, line: 115, type: !7042)
!7047 = !DILocalVariable(name: "base", arg: 3, scope: !7038, file: !6951, line: 115, type: !162)
!7048 = !DILocalVariable(name: "size", arg: 4, scope: !7038, file: !6951, line: 115, type: !162)
!7049 = !DILocation(line: 0, scope: !7038)
!7050 = !DILocation(line: 127, column: 23, scope: !7038)
!7051 = !DILocation(line: 127, column: 35, scope: !7038)
!7052 = !DILocation(line: 127, column: 33, scope: !7038)
!7053 = !DILocation(line: 127, column: 10, scope: !7038)
!7054 = !DILocation(line: 127, column: 15, scope: !7038)
!7055 = !DILocation(line: 129, column: 1, scope: !7038)
!7056 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !525, file: !525, line: 57, type: !7057, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7059)
!7057 = !DISubroutineType(types: !7058)
!7058 = !{!107, !177, !512}
!7059 = !{!7060, !7061}
!7060 = !DILocalVariable(name: "index", arg: 1, scope: !7056, file: !525, line: 57, type: !177)
!7061 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7056, file: !525, line: 58, type: !512)
!7062 = !DILocation(line: 0, scope: !7056)
!7063 = !DILocation(line: 61, column: 6, scope: !7064)
!7064 = distinct !DILexicalBlock(scope: !7056, file: !525, line: 61, column: 6)
!7065 = !DILocation(line: 61, column: 12, scope: !7064)
!7066 = !DILocation(line: 61, column: 6, scope: !7056)
!7067 = !DILocation(line: 71, column: 2, scope: !7056)
!7068 = !DILocation(line: 73, column: 2, scope: !7056)
!7069 = !DILocation(line: 74, column: 1, scope: !7056)
!7070 = distinct !DISubprogram(name: "region_init", scope: !6951, file: !6951, line: 29, type: !7071, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7073)
!7071 = !DISubroutineType(types: !7072)
!7072 = !{null, !6355, !512}
!7073 = !{!7074, !7075}
!7074 = !DILocalVariable(name: "index", arg: 1, scope: !7070, file: !6951, line: 29, type: !6355)
!7075 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7070, file: !6951, line: 30, type: !512)
!7076 = !DILocation(line: 0, scope: !7070)
!7077 = !DILocation(line: 33, column: 2, scope: !7070)
!7078 = !DILocation(line: 47, column: 28, scope: !7070)
!7079 = !DILocation(line: 47, column: 33, scope: !7070)
!7080 = !DILocation(line: 48, column: 26, scope: !7070)
!7081 = !DILocation(line: 47, column: 12, scope: !7070)
!7082 = !DILocation(line: 49, column: 32, scope: !7070)
!7083 = !DILocation(line: 49, column: 37, scope: !7070)
!7084 = !DILocation(line: 49, column: 12, scope: !7070)
!7085 = !DILocation(line: 53, column: 1, scope: !7070)
!7086 = distinct !DISubprogram(name: "set_region_number", scope: !7087, file: !7087, line: 32, type: !6178, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7088)
!7087 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7088 = !{!7089}
!7089 = !DILocalVariable(name: "index", arg: 1, scope: !7086, file: !7087, line: 32, type: !162)
!7090 = !DILocation(line: 0, scope: !7086)
!7091 = !DILocation(line: 34, column: 11, scope: !7086)
!7092 = !DILocation(line: 35, column: 1, scope: !7086)
!7093 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !6951, file: !6951, line: 88, type: !7094, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7096)
!7094 = !DISubroutineType(types: !7095)
!7095 = !{!162, !162}
!7096 = !{!7097}
!7097 = !DILocalVariable(name: "size", arg: 1, scope: !7093, file: !6951, line: 88, type: !162)
!7098 = !DILocation(line: 0, scope: !7093)
!7099 = !DILocation(line: 91, column: 11, scope: !7100)
!7100 = distinct !DILexicalBlock(scope: !7093, file: !6951, line: 91, column: 6)
!7101 = !DILocation(line: 91, column: 6, scope: !7093)
!7102 = !DILocation(line: 100, column: 11, scope: !7103)
!7103 = distinct !DILexicalBlock(scope: !7093, file: !6951, line: 100, column: 6)
!7104 = !DILocation(line: 100, column: 6, scope: !7093)
!7105 = !DILocation(line: 104, column: 35, scope: !7093)
!7106 = !DILocation(line: 104, column: 16, scope: !7093)
!7107 = !DILocation(line: 104, column: 50, scope: !7093)
!7108 = !DILocation(line: 104, column: 72, scope: !7093)
!7109 = !DILocation(line: 104, column: 2, scope: !7093)
!7110 = !DILocation(line: 106, column: 1, scope: !7093)
!7111 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !525, file: !525, line: 307, type: !7112, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7114)
!7112 = !DISubroutineType(types: !7113)
!7113 = !{null, !6930, !133}
!7114 = !{!7115, !7116}
!7115 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7111, file: !525, line: 308, type: !6930)
!7116 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7111, file: !525, line: 308, type: !133)
!7117 = !DILocation(line: 0, scope: !7111)
!7118 = !DILocation(line: 310, column: 6, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7111, file: !525, line: 310, column: 6)
!7120 = !DILocation(line: 316, column: 1, scope: !7111)
!7121 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !6951, file: !6951, line: 249, type: !7122, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7124)
!7122 = !DISubroutineType(types: !7123)
!7123 = !{!107, !6930, !133}
!7124 = !{!7125, !7126, !7127, !7128}
!7125 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7121, file: !6951, line: 250, type: !6930)
!7126 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7121, file: !6951, line: 250, type: !133)
!7127 = !DILocalVariable(name: "mpu_reg_index", scope: !7121, file: !6951, line: 252, type: !107)
!7128 = !DILocalVariable(name: "i", scope: !7129, file: !6951, line: 264, type: !107)
!7129 = distinct !DILexicalBlock(scope: !7130, file: !6951, line: 264, column: 3)
!7130 = distinct !DILexicalBlock(scope: !7131, file: !6951, line: 261, column: 32)
!7131 = distinct !DILexicalBlock(scope: !7121, file: !6951, line: 261, column: 6)
!7132 = !DILocation(line: 0, scope: !7121)
!7133 = !DILocation(line: 252, column: 22, scope: !7121)
!7134 = !DILocation(line: 258, column: 18, scope: !7121)
!7135 = !DILocation(line: 261, column: 20, scope: !7131)
!7136 = !DILocation(line: 261, column: 6, scope: !7121)
!7137 = !DILocation(line: 0, scope: !7129)
!7138 = !DILocation(line: 265, column: 4, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7140, file: !6951, line: 264, column: 59)
!7140 = distinct !DILexicalBlock(scope: !7129, file: !6951, line: 264, column: 3)
!7141 = !DILocation(line: 264, column: 55, scope: !7140)
!7142 = !DILocation(line: 264, column: 33, scope: !7140)
!7143 = !DILocation(line: 264, column: 3, scope: !7129)
!7144 = distinct !{!7144, !7143, !7145}
!7145 = !DILocation(line: 266, column: 3, scope: !7129)
!7146 = !DILocation(line: 269, column: 2, scope: !7121)
!7147 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7148, file: !7148, line: 218, type: !6178, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7149)
!7148 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7149 = !{!7150}
!7150 = !DILocalVariable(name: "rnr", arg: 1, scope: !7147, file: !7148, line: 218, type: !162)
!7151 = !DILocation(line: 0, scope: !7147)
!7152 = !DILocation(line: 220, column: 12, scope: !7147)
!7153 = !DILocation(line: 221, column: 13, scope: !7147)
!7154 = !DILocation(line: 222, column: 1, scope: !7147)
!7155 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !525, file: !525, line: 326, type: !7156, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7158)
!7156 = !DISubroutineType(types: !7157)
!7157 = !{!107}
!7158 = !{!7159}
!7159 = !DILocalVariable(name: "r_index", scope: !7155, file: !525, line: 328, type: !162)
!7160 = !DILocation(line: 330, column: 17, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !7155, file: !525, line: 330, column: 6)
!7162 = !DILocation(line: 330, column: 29, scope: !7161)
!7163 = !DILocation(line: 330, column: 6, scope: !7155)
!7164 = !DILocation(line: 347, column: 2, scope: !7155)
!7165 = !DILocation(line: 0, scope: !7155)
!7166 = !DILocation(line: 364, column: 29, scope: !7167)
!7167 = distinct !DILexicalBlock(scope: !7168, file: !525, line: 364, column: 2)
!7168 = distinct !DILexicalBlock(scope: !7155, file: !525, line: 364, column: 2)
!7169 = !DILocation(line: 364, column: 2, scope: !7168)
!7170 = !DILocation(line: 365, column: 25, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !7167, file: !525, line: 364, column: 66)
!7172 = !DILocation(line: 365, column: 3, scope: !7171)
!7173 = !DILocation(line: 364, column: 62, scope: !7167)
!7174 = distinct !{!7174, !7169, !7175}
!7175 = !DILocation(line: 366, column: 2, scope: !7168)
!7176 = !DILocation(line: 369, column: 23, scope: !7155)
!7177 = !DILocation(line: 369, column: 21, scope: !7155)
!7178 = !DILocation(line: 372, column: 2, scope: !7155)
!7179 = !DILocation(line: 443, column: 2, scope: !7155)
!7180 = !DILocation(line: 444, column: 1, scope: !7155)
!7181 = distinct !DISubprogram(name: "strcpy", scope: !7182, file: !7182, line: 20, type: !7183, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !7187)
!7182 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7183 = !DISubroutineType(types: !7184)
!7184 = !{!256, !7185, !7186}
!7185 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !256)
!7186 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !123)
!7187 = !{!7188, !7189, !7190}
!7188 = !DILocalVariable(name: "d", arg: 1, scope: !7181, file: !7182, line: 20, type: !7185)
!7189 = !DILocalVariable(name: "s", arg: 2, scope: !7181, file: !7182, line: 20, type: !7186)
!7190 = !DILocalVariable(name: "dest", scope: !7181, file: !7182, line: 22, type: !256)
!7191 = !DILocation(line: 0, scope: !7181)
!7192 = !DILocation(line: 24, column: 9, scope: !7181)
!7193 = !DILocation(line: 24, column: 12, scope: !7181)
!7194 = !DILocation(line: 24, column: 2, scope: !7181)
!7195 = !DILocation(line: 25, column: 6, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7181, file: !7182, line: 24, column: 21)
!7197 = !DILocation(line: 26, column: 4, scope: !7196)
!7198 = !DILocation(line: 27, column: 4, scope: !7196)
!7199 = distinct !{!7199, !7194, !7200}
!7200 = !DILocation(line: 28, column: 2, scope: !7181)
!7201 = !DILocation(line: 30, column: 5, scope: !7181)
!7202 = !DILocation(line: 32, column: 2, scope: !7181)
!7203 = distinct !DISubprogram(name: "strncpy", scope: !7182, file: !7182, line: 42, type: !7204, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !7206)
!7204 = !DISubroutineType(types: !7205)
!7205 = !{!256, !7185, !7186, !252}
!7206 = !{!7207, !7208, !7209, !7210}
!7207 = !DILocalVariable(name: "d", arg: 1, scope: !7203, file: !7182, line: 42, type: !7185)
!7208 = !DILocalVariable(name: "s", arg: 2, scope: !7203, file: !7182, line: 42, type: !7186)
!7209 = !DILocalVariable(name: "n", arg: 3, scope: !7203, file: !7182, line: 42, type: !252)
!7210 = !DILocalVariable(name: "dest", scope: !7203, file: !7182, line: 44, type: !256)
!7211 = !DILocation(line: 0, scope: !7203)
!7212 = !DILocation(line: 46, column: 12, scope: !7203)
!7213 = !DILocation(line: 46, column: 17, scope: !7203)
!7214 = !DILocation(line: 46, column: 20, scope: !7203)
!7215 = !DILocation(line: 46, column: 23, scope: !7203)
!7216 = !DILocation(line: 46, column: 2, scope: !7203)
!7217 = !DILocation(line: 47, column: 6, scope: !7218)
!7218 = distinct !DILexicalBlock(scope: !7203, file: !7182, line: 46, column: 32)
!7219 = !DILocation(line: 48, column: 4, scope: !7218)
!7220 = !DILocation(line: 49, column: 4, scope: !7218)
!7221 = !DILocation(line: 50, column: 4, scope: !7218)
!7222 = distinct !{!7222, !7216, !7223}
!7223 = !DILocation(line: 51, column: 2, scope: !7203)
!7224 = !DILocation(line: 54, column: 6, scope: !7225)
!7225 = distinct !DILexicalBlock(scope: !7203, file: !7182, line: 53, column: 16)
!7226 = !DILocation(line: 55, column: 4, scope: !7225)
!7227 = !DILocation(line: 56, column: 4, scope: !7225)
!7228 = !DILocation(line: 53, column: 11, scope: !7203)
!7229 = !DILocation(line: 53, column: 2, scope: !7203)
!7230 = distinct !{!7230, !7229, !7231}
!7231 = !DILocation(line: 57, column: 2, scope: !7203)
!7232 = !DILocation(line: 59, column: 2, scope: !7203)
!7233 = distinct !DISubprogram(name: "strchr", scope: !7182, file: !7182, line: 69, type: !7234, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !7236)
!7234 = !DISubroutineType(types: !7235)
!7235 = !{!256, !123, !107}
!7236 = !{!7237, !7238, !7239}
!7237 = !DILocalVariable(name: "s", arg: 1, scope: !7233, file: !7182, line: 69, type: !123)
!7238 = !DILocalVariable(name: "c", arg: 2, scope: !7233, file: !7182, line: 69, type: !107)
!7239 = !DILocalVariable(name: "tmp", scope: !7233, file: !7182, line: 71, type: !125)
!7240 = !DILocation(line: 0, scope: !7233)
!7241 = !DILocation(line: 73, column: 2, scope: !7233)
!7242 = !DILocation(line: 73, column: 10, scope: !7233)
!7243 = !DILocation(line: 73, column: 13, scope: !7233)
!7244 = !DILocation(line: 73, column: 21, scope: !7233)
!7245 = !DILocation(line: 74, column: 4, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7233, file: !7182, line: 73, column: 38)
!7247 = distinct !{!7247, !7241, !7248}
!7248 = !DILocation(line: 75, column: 2, scope: !7233)
!7249 = !DILocation(line: 77, column: 9, scope: !7233)
!7250 = !DILocation(line: 77, column: 2, scope: !7233)
!7251 = distinct !DISubprogram(name: "strrchr", scope: !7182, file: !7182, line: 87, type: !7234, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !7252)
!7252 = !{!7253, !7254, !7255}
!7253 = !DILocalVariable(name: "s", arg: 1, scope: !7251, file: !7182, line: 87, type: !123)
!7254 = !DILocalVariable(name: "c", arg: 2, scope: !7251, file: !7182, line: 87, type: !107)
!7255 = !DILocalVariable(name: "match", scope: !7251, file: !7182, line: 89, type: !256)
!7256 = !DILocation(line: 0, scope: !7251)
!7257 = !DILocation(line: 91, column: 2, scope: !7251)
!7258 = !DILocation(line: 92, column: 7, scope: !7259)
!7259 = distinct !DILexicalBlock(scope: !7260, file: !7182, line: 92, column: 7)
!7260 = distinct !DILexicalBlock(scope: !7251, file: !7182, line: 91, column: 5)
!7261 = !DILocation(line: 92, column: 10, scope: !7259)
!7262 = !DILocation(line: 92, column: 7, scope: !7260)
!7263 = !DILocation(line: 95, column: 13, scope: !7251)
!7264 = !DILocation(line: 95, column: 2, scope: !7260)
!7265 = distinct !{!7265, !7257, !7266}
!7266 = !DILocation(line: 95, column: 15, scope: !7251)
!7267 = !DILocation(line: 97, column: 2, scope: !7251)
!7268 = distinct !DISubprogram(name: "strlen", scope: !7182, file: !7182, line: 107, type: !7269, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !7271)
!7269 = !DISubroutineType(types: !7270)
!7270 = !{!252, !123}
!7271 = !{!7272, !7273}
!7272 = !DILocalVariable(name: "s", arg: 1, scope: !7268, file: !7182, line: 107, type: !123)
!7273 = !DILocalVariable(name: "n", scope: !7268, file: !7182, line: 109, type: !252)
!7274 = !DILocation(line: 0, scope: !7268)
!7275 = !DILocation(line: 111, column: 9, scope: !7268)
!7276 = !DILocation(line: 111, column: 12, scope: !7268)
!7277 = !DILocation(line: 111, column: 2, scope: !7268)
!7278 = !DILocation(line: 112, column: 4, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7268, file: !7182, line: 111, column: 21)
!7280 = !DILocation(line: 113, column: 4, scope: !7279)
!7281 = distinct !{!7281, !7277, !7282}
!7282 = !DILocation(line: 114, column: 2, scope: !7268)
!7283 = !DILocation(line: 116, column: 2, scope: !7268)
!7284 = distinct !DISubprogram(name: "strnlen", scope: !7182, file: !7182, line: 126, type: !7285, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !7287)
!7285 = !DISubroutineType(types: !7286)
!7286 = !{!252, !123, !252}
!7287 = !{!7288, !7289, !7290}
!7288 = !DILocalVariable(name: "s", arg: 1, scope: !7284, file: !7182, line: 126, type: !123)
!7289 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7284, file: !7182, line: 126, type: !252)
!7290 = !DILocalVariable(name: "n", scope: !7284, file: !7182, line: 128, type: !252)
!7291 = !DILocation(line: 0, scope: !7284)
!7292 = !DILocation(line: 130, column: 9, scope: !7284)
!7293 = !DILocation(line: 130, column: 12, scope: !7284)
!7294 = !DILocation(line: 130, column: 20, scope: !7284)
!7295 = !DILocation(line: 130, column: 2, scope: !7284)
!7296 = !DILocation(line: 131, column: 4, scope: !7297)
!7297 = distinct !DILexicalBlock(scope: !7284, file: !7182, line: 130, column: 35)
!7298 = !DILocation(line: 132, column: 4, scope: !7297)
!7299 = distinct !{!7299, !7295, !7300}
!7300 = !DILocation(line: 133, column: 2, scope: !7284)
!7301 = !DILocation(line: 135, column: 2, scope: !7284)
!7302 = distinct !DISubprogram(name: "strcmp", scope: !7182, file: !7182, line: 145, type: !7303, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !7305)
!7303 = !DISubroutineType(types: !7304)
!7304 = !{!107, !123, !123}
!7305 = !{!7306, !7307}
!7306 = !DILocalVariable(name: "s1", arg: 1, scope: !7302, file: !7182, line: 145, type: !123)
!7307 = !DILocalVariable(name: "s2", arg: 2, scope: !7302, file: !7182, line: 145, type: !123)
!7308 = !DILocation(line: 0, scope: !7302)
!7309 = !DILocation(line: 147, column: 10, scope: !7302)
!7310 = !DILocation(line: 147, column: 17, scope: !7302)
!7311 = !DILocation(line: 147, column: 14, scope: !7302)
!7312 = !DILocation(line: 147, column: 22, scope: !7302)
!7313 = !DILocation(line: 148, column: 5, scope: !7314)
!7314 = distinct !DILexicalBlock(scope: !7302, file: !7182, line: 147, column: 40)
!7315 = !DILocation(line: 149, column: 5, scope: !7314)
!7316 = distinct !{!7316, !7317, !7318}
!7317 = !DILocation(line: 147, column: 2, scope: !7302)
!7318 = !DILocation(line: 150, column: 2, scope: !7302)
!7319 = !DILocation(line: 152, column: 9, scope: !7302)
!7320 = !DILocation(line: 152, column: 15, scope: !7302)
!7321 = !DILocation(line: 152, column: 13, scope: !7302)
!7322 = !DILocation(line: 152, column: 2, scope: !7302)
!7323 = distinct !DISubprogram(name: "strncmp", scope: !7182, file: !7182, line: 162, type: !7324, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !7326)
!7324 = !DISubroutineType(types: !7325)
!7325 = !{!107, !123, !123, !252}
!7326 = !{!7327, !7328, !7329}
!7327 = !DILocalVariable(name: "s1", arg: 1, scope: !7323, file: !7182, line: 162, type: !123)
!7328 = !DILocalVariable(name: "s2", arg: 2, scope: !7323, file: !7182, line: 162, type: !123)
!7329 = !DILocalVariable(name: "n", arg: 3, scope: !7323, file: !7182, line: 162, type: !252)
!7330 = !DILocation(line: 0, scope: !7323)
!7331 = !DILocation(line: 164, column: 17, scope: !7323)
!7332 = !DILocation(line: 164, column: 21, scope: !7323)
!7333 = !DILocation(line: 164, column: 28, scope: !7323)
!7334 = !DILocation(line: 164, column: 25, scope: !7323)
!7335 = !DILocation(line: 164, column: 33, scope: !7323)
!7336 = !DILocation(line: 165, column: 5, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7323, file: !7182, line: 164, column: 51)
!7338 = !DILocation(line: 166, column: 5, scope: !7337)
!7339 = !DILocation(line: 167, column: 4, scope: !7337)
!7340 = distinct !{!7340, !7341, !7342}
!7341 = !DILocation(line: 164, column: 2, scope: !7323)
!7342 = !DILocation(line: 168, column: 2, scope: !7323)
!7343 = !DILocation(line: 170, column: 25, scope: !7323)
!7344 = !DILocation(line: 170, column: 31, scope: !7323)
!7345 = !DILocation(line: 170, column: 29, scope: !7323)
!7346 = !DILocation(line: 170, column: 9, scope: !7323)
!7347 = !DILocation(line: 170, column: 2, scope: !7323)
!7348 = distinct !DISubprogram(name: "strtok_r", scope: !7182, file: !7182, line: 180, type: !7349, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !7352)
!7349 = !DISubroutineType(types: !7350)
!7350 = !{!256, !256, !123, !7351}
!7351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 32)
!7352 = !{!7353, !7354, !7355, !7356, !7357}
!7353 = !DILocalVariable(name: "str", arg: 1, scope: !7348, file: !7182, line: 180, type: !256)
!7354 = !DILocalVariable(name: "sep", arg: 2, scope: !7348, file: !7182, line: 180, type: !123)
!7355 = !DILocalVariable(name: "state", arg: 3, scope: !7348, file: !7182, line: 180, type: !7351)
!7356 = !DILocalVariable(name: "start", scope: !7348, file: !7182, line: 182, type: !256)
!7357 = !DILocalVariable(name: "end", scope: !7348, file: !7182, line: 182, type: !256)
!7358 = !DILocation(line: 0, scope: !7348)
!7359 = !DILocation(line: 184, column: 10, scope: !7348)
!7360 = !DILocation(line: 184, column: 22, scope: !7348)
!7361 = !DILocation(line: 187, column: 9, scope: !7348)
!7362 = !DILocation(line: 187, column: 16, scope: !7348)
!7363 = !DILocation(line: 187, column: 19, scope: !7348)
!7364 = !DILocation(line: 187, column: 2, scope: !7348)
!7365 = !DILocation(line: 188, column: 8, scope: !7366)
!7366 = distinct !DILexicalBlock(scope: !7348, file: !7182, line: 187, column: 40)
!7367 = distinct !{!7367, !7364, !7368}
!7368 = !DILocation(line: 189, column: 2, scope: !7348)
!7369 = !DILocation(line: 198, column: 9, scope: !7348)
!7370 = !DILocation(line: 198, column: 18, scope: !7348)
!7371 = !DILocation(line: 198, column: 17, scope: !7348)
!7372 = !DILocation(line: 198, column: 2, scope: !7348)
!7373 = !DILocation(line: 199, column: 6, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7348, file: !7182, line: 198, column: 37)
!7375 = !DILocation(line: 198, column: 14, scope: !7348)
!7376 = distinct !{!7376, !7372, !7377}
!7377 = !DILocation(line: 200, column: 2, scope: !7348)
!7378 = !DILocation(line: 203, column: 8, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !7380, file: !7182, line: 202, column: 20)
!7380 = distinct !DILexicalBlock(scope: !7348, file: !7182, line: 202, column: 6)
!7381 = !DILocation(line: 204, column: 16, scope: !7379)
!7382 = !DILocation(line: 205, column: 2, scope: !7379)
!7383 = !DILocation(line: 210, column: 1, scope: !7348)
!7384 = distinct !DISubprogram(name: "strcat", scope: !7182, file: !7182, line: 212, type: !7183, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !7385)
!7385 = !{!7386, !7387}
!7386 = !DILocalVariable(name: "dest", arg: 1, scope: !7384, file: !7182, line: 212, type: !7185)
!7387 = !DILocalVariable(name: "src", arg: 2, scope: !7384, file: !7182, line: 212, type: !7186)
!7388 = !DILocation(line: 0, scope: !7384)
!7389 = !DILocation(line: 214, column: 16, scope: !7384)
!7390 = !DILocation(line: 214, column: 14, scope: !7384)
!7391 = !DILocation(line: 214, column: 2, scope: !7384)
!7392 = !DILocation(line: 215, column: 2, scope: !7384)
!7393 = distinct !DISubprogram(name: "strncat", scope: !7182, file: !7182, line: 218, type: !7204, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !7394)
!7394 = !{!7395, !7396, !7397, !7398, !7399}
!7395 = !DILocalVariable(name: "dest", arg: 1, scope: !7393, file: !7182, line: 218, type: !7185)
!7396 = !DILocalVariable(name: "src", arg: 2, scope: !7393, file: !7182, line: 218, type: !7186)
!7397 = !DILocalVariable(name: "n", arg: 3, scope: !7393, file: !7182, line: 219, type: !252)
!7398 = !DILocalVariable(name: "orig_dest", scope: !7393, file: !7182, line: 221, type: !256)
!7399 = !DILocalVariable(name: "len", scope: !7393, file: !7182, line: 222, type: !252)
!7400 = !DILocation(line: 0, scope: !7393)
!7401 = !DILocation(line: 222, column: 15, scope: !7393)
!7402 = !DILocation(line: 224, column: 7, scope: !7393)
!7403 = !DILocation(line: 225, column: 14, scope: !7393)
!7404 = !DILocation(line: 225, column: 19, scope: !7393)
!7405 = !DILocation(line: 225, column: 11, scope: !7393)
!7406 = !DILocation(line: 225, column: 23, scope: !7393)
!7407 = !DILocation(line: 225, column: 28, scope: !7393)
!7408 = !DILocation(line: 225, column: 2, scope: !7393)
!7409 = !DILocation(line: 226, column: 17, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7393, file: !7182, line: 225, column: 38)
!7411 = !DILocation(line: 226, column: 8, scope: !7410)
!7412 = !DILocation(line: 226, column: 11, scope: !7410)
!7413 = distinct !{!7413, !7408, !7414}
!7414 = !DILocation(line: 227, column: 2, scope: !7393)
!7415 = !DILocation(line: 228, column: 8, scope: !7393)
!7416 = !DILocation(line: 230, column: 2, scope: !7393)
!7417 = distinct !DISubprogram(name: "memcmp", scope: !7182, file: !7182, line: 239, type: !7418, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !7420)
!7418 = !DISubroutineType(types: !7419)
!7419 = !{!107, !13, !13, !252}
!7420 = !{!7421, !7422, !7423, !7424, !7425}
!7421 = !DILocalVariable(name: "m1", arg: 1, scope: !7417, file: !7182, line: 239, type: !13)
!7422 = !DILocalVariable(name: "m2", arg: 2, scope: !7417, file: !7182, line: 239, type: !13)
!7423 = !DILocalVariable(name: "n", arg: 3, scope: !7417, file: !7182, line: 239, type: !252)
!7424 = !DILocalVariable(name: "c1", scope: !7417, file: !7182, line: 241, type: !123)
!7425 = !DILocalVariable(name: "c2", scope: !7417, file: !7182, line: 242, type: !123)
!7426 = !DILocation(line: 0, scope: !7417)
!7427 = !DILocation(line: 244, column: 7, scope: !7428)
!7428 = distinct !DILexicalBlock(scope: !7417, file: !7182, line: 244, column: 6)
!7429 = !DILocation(line: 244, column: 6, scope: !7417)
!7430 = !DILocation(line: 248, column: 10, scope: !7417)
!7431 = !DILocation(line: 248, column: 14, scope: !7417)
!7432 = !DILocation(line: 248, column: 19, scope: !7417)
!7433 = !DILocation(line: 248, column: 2, scope: !7417)
!7434 = !DILocation(line: 248, column: 23, scope: !7417)
!7435 = !DILocation(line: 248, column: 30, scope: !7417)
!7436 = !DILocation(line: 248, column: 27, scope: !7417)
!7437 = !DILocation(line: 249, column: 5, scope: !7438)
!7438 = distinct !DILexicalBlock(scope: !7417, file: !7182, line: 248, column: 36)
!7439 = !DILocation(line: 250, column: 5, scope: !7438)
!7440 = distinct !{!7440, !7433, !7441}
!7441 = !DILocation(line: 251, column: 2, scope: !7417)
!7442 = !DILocation(line: 253, column: 9, scope: !7417)
!7443 = !DILocation(line: 253, column: 15, scope: !7417)
!7444 = !DILocation(line: 253, column: 13, scope: !7417)
!7445 = !DILocation(line: 253, column: 2, scope: !7417)
!7446 = !DILocation(line: 254, column: 1, scope: !7417)
!7447 = distinct !DISubprogram(name: "memmove", scope: !7182, file: !7182, line: 263, type: !7448, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !7450)
!7448 = !DISubroutineType(types: !7449)
!7449 = !{!102, !102, !13, !252}
!7450 = !{!7451, !7452, !7453, !7454, !7455}
!7451 = !DILocalVariable(name: "d", arg: 1, scope: !7447, file: !7182, line: 263, type: !102)
!7452 = !DILocalVariable(name: "s", arg: 2, scope: !7447, file: !7182, line: 263, type: !13)
!7453 = !DILocalVariable(name: "n", arg: 3, scope: !7447, file: !7182, line: 263, type: !252)
!7454 = !DILocalVariable(name: "dest", scope: !7447, file: !7182, line: 265, type: !256)
!7455 = !DILocalVariable(name: "src", scope: !7447, file: !7182, line: 266, type: !123)
!7456 = !DILocation(line: 0, scope: !7447)
!7457 = !DILocation(line: 268, column: 21, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7447, file: !7182, line: 268, column: 6)
!7459 = !DILocation(line: 268, column: 28, scope: !7458)
!7460 = !DILocation(line: 268, column: 6, scope: !7447)
!7461 = !DILocation(line: 280, column: 12, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7458, file: !7182, line: 278, column: 9)
!7463 = !DILocation(line: 280, column: 3, scope: !7462)
!7464 = !DILocation(line: 275, column: 5, scope: !7465)
!7465 = distinct !DILexicalBlock(scope: !7466, file: !7182, line: 274, column: 17)
!7466 = distinct !DILexicalBlock(scope: !7458, file: !7182, line: 268, column: 33)
!7467 = !DILocation(line: 276, column: 14, scope: !7465)
!7468 = !DILocation(line: 276, column: 4, scope: !7465)
!7469 = !DILocation(line: 276, column: 12, scope: !7465)
!7470 = !DILocation(line: 274, column: 12, scope: !7466)
!7471 = !DILocation(line: 274, column: 3, scope: !7466)
!7472 = distinct !{!7472, !7471, !7473}
!7473 = !DILocation(line: 277, column: 3, scope: !7466)
!7474 = !DILocation(line: 281, column: 12, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7462, file: !7182, line: 280, column: 17)
!7476 = !DILocation(line: 281, column: 10, scope: !7475)
!7477 = !DILocation(line: 282, column: 8, scope: !7475)
!7478 = !DILocation(line: 283, column: 7, scope: !7475)
!7479 = !DILocation(line: 284, column: 5, scope: !7475)
!7480 = distinct !{!7480, !7463, !7481}
!7481 = !DILocation(line: 285, column: 3, scope: !7462)
!7482 = !DILocation(line: 288, column: 2, scope: !7447)
!7483 = distinct !DISubprogram(name: "memcpy", scope: !7182, file: !7182, line: 298, type: !7484, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !7488)
!7484 = !DISubroutineType(types: !7485)
!7485 = !{!102, !7486, !7487, !252}
!7486 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!7487 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7488 = !{!7489, !7490, !7491, !7492, !7493}
!7489 = !DILocalVariable(name: "d", arg: 1, scope: !7483, file: !7182, line: 298, type: !7486)
!7490 = !DILocalVariable(name: "s", arg: 2, scope: !7483, file: !7182, line: 298, type: !7487)
!7491 = !DILocalVariable(name: "n", arg: 3, scope: !7483, file: !7182, line: 298, type: !252)
!7492 = !DILocalVariable(name: "d_byte", scope: !7483, file: !7182, line: 302, type: !144)
!7493 = !DILocalVariable(name: "s_byte", scope: !7483, file: !7182, line: 303, type: !2805)
!7494 = !DILocation(line: 0, scope: !7483)
!7495 = !DILocation(line: 337, column: 11, scope: !7483)
!7496 = !DILocation(line: 337, column: 2, scope: !7483)
!7497 = !DILocation(line: 338, column: 25, scope: !7498)
!7498 = distinct !DILexicalBlock(scope: !7483, file: !7182, line: 337, column: 16)
!7499 = !DILocation(line: 338, column: 17, scope: !7498)
!7500 = !DILocation(line: 338, column: 11, scope: !7498)
!7501 = !DILocation(line: 338, column: 15, scope: !7498)
!7502 = !DILocation(line: 339, column: 4, scope: !7498)
!7503 = distinct !{!7503, !7496, !7504}
!7504 = !DILocation(line: 340, column: 2, scope: !7483)
!7505 = !DILocation(line: 342, column: 2, scope: !7483)
!7506 = distinct !DISubprogram(name: "memset", scope: !7182, file: !7182, line: 352, type: !7507, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !7509)
!7507 = !DISubroutineType(types: !7508)
!7508 = !{!102, !102, !107, !252}
!7509 = !{!7510, !7511, !7512, !7513, !7514}
!7510 = !DILocalVariable(name: "buf", arg: 1, scope: !7506, file: !7182, line: 352, type: !102)
!7511 = !DILocalVariable(name: "c", arg: 2, scope: !7506, file: !7182, line: 352, type: !107)
!7512 = !DILocalVariable(name: "n", arg: 3, scope: !7506, file: !7182, line: 352, type: !252)
!7513 = !DILocalVariable(name: "d_byte", scope: !7506, file: !7182, line: 356, type: !144)
!7514 = !DILocalVariable(name: "c_byte", scope: !7506, file: !7182, line: 357, type: !134)
!7515 = !DILocation(line: 0, scope: !7506)
!7516 = !DILocation(line: 357, column: 25, scope: !7506)
!7517 = !DILocation(line: 389, column: 11, scope: !7506)
!7518 = !DILocation(line: 389, column: 2, scope: !7506)
!7519 = !DILocation(line: 390, column: 11, scope: !7520)
!7520 = distinct !DILexicalBlock(scope: !7506, file: !7182, line: 389, column: 16)
!7521 = !DILocation(line: 390, column: 15, scope: !7520)
!7522 = !DILocation(line: 391, column: 4, scope: !7520)
!7523 = distinct !{!7523, !7518, !7524}
!7524 = !DILocation(line: 392, column: 2, scope: !7506)
!7525 = !DILocation(line: 394, column: 2, scope: !7506)
!7526 = distinct !DISubprogram(name: "memchr", scope: !7182, file: !7182, line: 404, type: !7527, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !7529)
!7527 = !DISubroutineType(types: !7528)
!7528 = !{!102, !13, !107, !252}
!7529 = !{!7530, !7531, !7532, !7533}
!7530 = !DILocalVariable(name: "s", arg: 1, scope: !7526, file: !7182, line: 404, type: !13)
!7531 = !DILocalVariable(name: "c", arg: 2, scope: !7526, file: !7182, line: 404, type: !107)
!7532 = !DILocalVariable(name: "n", arg: 3, scope: !7526, file: !7182, line: 404, type: !252)
!7533 = !DILocalVariable(name: "p", scope: !7534, file: !7182, line: 407, type: !2805)
!7534 = distinct !DILexicalBlock(scope: !7535, file: !7182, line: 406, column: 14)
!7535 = distinct !DILexicalBlock(scope: !7526, file: !7182, line: 406, column: 6)
!7536 = !DILocation(line: 0, scope: !7526)
!7537 = !DILocation(line: 406, column: 8, scope: !7535)
!7538 = !DILocation(line: 406, column: 6, scope: !7526)
!7539 = !DILocation(line: 409, column: 3, scope: !7534)
!7540 = !DILocation(line: 0, scope: !7534)
!7541 = !DILocation(line: 410, column: 8, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7543, file: !7182, line: 410, column: 8)
!7543 = distinct !DILexicalBlock(scope: !7534, file: !7182, line: 409, column: 6)
!7544 = !DILocation(line: 410, column: 13, scope: !7542)
!7545 = !DILocation(line: 410, column: 8, scope: !7543)
!7546 = distinct !{!7546, !7539, !7547}
!7547 = !DILocation(line: 414, column: 20, scope: !7534)
!7548 = !DILocation(line: 417, column: 2, scope: !7526)
!7549 = !DILocation(line: 418, column: 1, scope: !7526)
!7550 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !535, file: !535, line: 23, type: !3497, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7551)
!7551 = !{!7552}
!7552 = !DILocalVariable(name: "hook", arg: 1, scope: !7550, file: !535, line: 23, type: !269)
!7553 = !DILocation(line: 0, scope: !7550)
!7554 = !DILocation(line: 25, column: 15, scope: !7550)
!7555 = !DILocation(line: 26, column: 1, scope: !7550)
!7556 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !535, file: !535, line: 14, type: !270, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7557)
!7557 = !{!7558}
!7558 = !DILocalVariable(name: "c", arg: 1, scope: !7556, file: !535, line: 14, type: !107)
!7559 = !DILocation(line: 0, scope: !7556)
!7560 = !DILocation(line: 18, column: 2, scope: !7556)
!7561 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !535, file: !535, line: 28, type: !7562, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7564)
!7562 = !DISubroutineType(types: !7563)
!7563 = !{!107, !107, !531}
!7564 = !{!7565, !7566}
!7565 = !DILocalVariable(name: "c", arg: 1, scope: !7561, file: !535, line: 28, type: !107)
!7566 = !DILocalVariable(name: "stream", arg: 2, scope: !7561, file: !535, line: 28, type: !531)
!7567 = !DILocation(line: 0, scope: !7561)
!7568 = !DILocation(line: 30, column: 27, scope: !7561)
!7569 = !DILocation(line: 30, column: 50, scope: !7561)
!7570 = !DILocation(line: 30, column: 9, scope: !7561)
!7571 = !DILocation(line: 30, column: 2, scope: !7561)
!7572 = distinct !DISubprogram(name: "fputc", scope: !535, file: !535, line: 41, type: !7562, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7573)
!7573 = !{!7574, !7575}
!7574 = !DILocalVariable(name: "c", arg: 1, scope: !7572, file: !535, line: 41, type: !107)
!7575 = !DILocalVariable(name: "stream", arg: 2, scope: !7572, file: !535, line: 41, type: !531)
!7576 = !DILocation(line: 0, scope: !7572)
!7577 = !DILocation(line: 43, column: 9, scope: !7572)
!7578 = !DILocation(line: 43, column: 2, scope: !7572)
!7579 = distinct !DISubprogram(name: "zephyr_fputc", scope: !7580, file: !7580, line: 72, type: !7562, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7581)
!7580 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/uart/echo_bot")
!7581 = !{!7582, !7583}
!7582 = !DILocalVariable(name: "c", arg: 1, scope: !7579, file: !7580, line: 72, type: !107)
!7583 = !DILocalVariable(name: "stream", arg: 2, scope: !7579, file: !7580, line: 72, type: !531)
!7584 = !DILocation(line: 0, scope: !7579)
!7585 = !DILocation(line: 81, column: 2, scope: !7586)
!7586 = distinct !DILexicalBlock(scope: !7579, file: !7580, line: 81, column: 2)
!7587 = !{i64 2154903411}
!7588 = !DILocation(line: 82, column: 9, scope: !7579)
!7589 = !DILocation(line: 82, column: 2, scope: !7579)
!7590 = distinct !DISubprogram(name: "fputs", scope: !535, file: !535, line: 46, type: !7591, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7594)
!7591 = !DISubroutineType(types: !7592)
!7592 = !{!107, !7186, !7593}
!7593 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !531)
!7594 = !{!7595, !7596, !7597, !7598}
!7595 = !DILocalVariable(name: "s", arg: 1, scope: !7590, file: !535, line: 46, type: !7186)
!7596 = !DILocalVariable(name: "stream", arg: 2, scope: !7590, file: !535, line: 46, type: !7593)
!7597 = !DILocalVariable(name: "len", scope: !7590, file: !535, line: 48, type: !107)
!7598 = !DILocalVariable(name: "ret", scope: !7590, file: !535, line: 49, type: !107)
!7599 = !DILocation(line: 0, scope: !7590)
!7600 = !DILocation(line: 48, column: 12, scope: !7590)
!7601 = !DILocation(line: 51, column: 8, scope: !7590)
!7602 = !DILocation(line: 53, column: 13, scope: !7590)
!7603 = !DILocation(line: 53, column: 9, scope: !7590)
!7604 = !DILocation(line: 53, column: 2, scope: !7590)
!7605 = distinct !DISubprogram(name: "fwrite", scope: !535, file: !535, line: 99, type: !7606, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7608)
!7606 = !DISubroutineType(types: !7607)
!7607 = !{!252, !7487, !252, !252, !7593}
!7608 = !{!7609, !7610, !7611, !7612}
!7609 = !DILocalVariable(name: "ptr", arg: 1, scope: !7605, file: !535, line: 99, type: !7487)
!7610 = !DILocalVariable(name: "size", arg: 2, scope: !7605, file: !535, line: 99, type: !252)
!7611 = !DILocalVariable(name: "nitems", arg: 3, scope: !7605, file: !535, line: 99, type: !252)
!7612 = !DILocalVariable(name: "stream", arg: 4, scope: !7605, file: !535, line: 100, type: !7593)
!7613 = !DILocation(line: 0, scope: !7605)
!7614 = !DILocation(line: 102, column: 9, scope: !7605)
!7615 = !DILocation(line: 102, column: 2, scope: !7605)
!7616 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !7580, file: !7580, line: 96, type: !7606, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7617)
!7617 = !{!7618, !7619, !7620, !7621}
!7618 = !DILocalVariable(name: "ptr", arg: 1, scope: !7616, file: !7580, line: 96, type: !7487)
!7619 = !DILocalVariable(name: "size", arg: 2, scope: !7616, file: !7580, line: 96, type: !252)
!7620 = !DILocalVariable(name: "nitems", arg: 3, scope: !7616, file: !7580, line: 96, type: !252)
!7621 = !DILocalVariable(name: "stream", arg: 4, scope: !7616, file: !7580, line: 96, type: !7593)
!7622 = !DILocation(line: 0, scope: !7616)
!7623 = !DILocation(line: 107, column: 2, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7616, file: !7580, line: 107, column: 2)
!7625 = !{i64 2154903515}
!7626 = !DILocation(line: 108, column: 9, scope: !7616)
!7627 = !DILocation(line: 108, column: 2, scope: !7616)
!7628 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !535, file: !535, line: 56, type: !7606, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7629)
!7629 = !{!7630, !7631, !7632, !7633, !7634, !7635, !7636, !7637}
!7630 = !DILocalVariable(name: "ptr", arg: 1, scope: !7628, file: !535, line: 56, type: !7487)
!7631 = !DILocalVariable(name: "size", arg: 2, scope: !7628, file: !535, line: 56, type: !252)
!7632 = !DILocalVariable(name: "nitems", arg: 3, scope: !7628, file: !535, line: 57, type: !252)
!7633 = !DILocalVariable(name: "stream", arg: 4, scope: !7628, file: !535, line: 57, type: !7593)
!7634 = !DILocalVariable(name: "i", scope: !7628, file: !535, line: 59, type: !252)
!7635 = !DILocalVariable(name: "j", scope: !7628, file: !535, line: 60, type: !252)
!7636 = !DILocalVariable(name: "p", scope: !7628, file: !535, line: 61, type: !2805)
!7637 = !DILabel(scope: !7628, name: "done", file: !535, line: 82)
!7638 = !DILocation(line: 0, scope: !7628)
!7639 = !DILocation(line: 63, column: 14, scope: !7640)
!7640 = distinct !DILexicalBlock(scope: !7628, file: !535, line: 63, column: 6)
!7641 = !DILocation(line: 63, column: 24, scope: !7640)
!7642 = !DILocation(line: 72, column: 3, scope: !7643)
!7643 = distinct !DILexicalBlock(scope: !7628, file: !535, line: 70, column: 5)
!7644 = !DILocation(line: 0, scope: !7643)
!7645 = !DILocation(line: 73, column: 8, scope: !7646)
!7646 = distinct !DILexicalBlock(scope: !7647, file: !535, line: 73, column: 8)
!7647 = distinct !DILexicalBlock(scope: !7643, file: !535, line: 72, column: 6)
!7648 = !DILocation(line: 73, column: 29, scope: !7646)
!7649 = !DILocation(line: 73, column: 27, scope: !7646)
!7650 = !DILocation(line: 73, column: 21, scope: !7646)
!7651 = !DILocation(line: 73, column: 33, scope: !7646)
!7652 = !DILocation(line: 73, column: 8, scope: !7647)
!7653 = !DILocation(line: 76, column: 5, scope: !7647)
!7654 = !DILocation(line: 77, column: 14, scope: !7643)
!7655 = !DILocation(line: 77, column: 3, scope: !7647)
!7656 = distinct !{!7656, !7642, !7657}
!7657 = !DILocation(line: 77, column: 17, scope: !7643)
!7658 = !DILocation(line: 79, column: 4, scope: !7643)
!7659 = !DILocation(line: 80, column: 13, scope: !7628)
!7660 = !DILocation(line: 80, column: 2, scope: !7643)
!7661 = distinct !{!7661, !7662, !7663}
!7662 = !DILocation(line: 70, column: 2, scope: !7628)
!7663 = !DILocation(line: 80, column: 16, scope: !7628)
!7664 = !DILocation(line: 82, column: 1, scope: !7628)
!7665 = !DILocation(line: 83, column: 17, scope: !7628)
!7666 = !DILocation(line: 83, column: 2, scope: !7628)
!7667 = !DILocation(line: 84, column: 1, scope: !7628)
!7668 = distinct !DISubprogram(name: "puts", scope: !535, file: !535, line: 106, type: !7669, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7671)
!7669 = !DISubroutineType(types: !7670)
!7670 = !{!107, !123}
!7671 = !{!7672}
!7672 = !DILocalVariable(name: "s", arg: 1, scope: !7668, file: !535, line: 106, type: !123)
!7673 = !DILocation(line: 0, scope: !7668)
!7674 = !DILocation(line: 108, column: 6, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7668, file: !535, line: 108, column: 6)
!7676 = !DILocation(line: 108, column: 23, scope: !7675)
!7677 = !DILocation(line: 108, column: 6, scope: !7668)
!7678 = !DILocation(line: 112, column: 9, scope: !7668)
!7679 = !DILocation(line: 112, column: 29, scope: !7668)
!7680 = !DILocation(line: 112, column: 2, scope: !7668)
!7681 = !DILocation(line: 113, column: 1, scope: !7668)
!7682 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !668, file: !668, line: 368, type: !721, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7683)
!7683 = !{!7684}
!7684 = !DILocalVariable(name: "dev", arg: 1, scope: !7682, file: !668, line: 368, type: !697)
!7685 = !DILocation(line: 0, scope: !7682)
!7686 = !DILocation(line: 370, column: 2, scope: !7682)
!7687 = !DILocation(line: 371, column: 1, scope: !7682)
!7688 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !668, file: !668, line: 243, type: !7689, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7691)
!7689 = !DISubroutineType(types: !7690)
!7690 = !{null, !107, !107, !697}
!7691 = !{!7692, !7693, !7694, !7695, !7697}
!7692 = !DILocalVariable(name: "min", arg: 1, scope: !7688, file: !668, line: 243, type: !107)
!7693 = !DILocalVariable(name: "max", arg: 2, scope: !7688, file: !668, line: 243, type: !107)
!7694 = !DILocalVariable(name: "dev", arg: 3, scope: !7688, file: !668, line: 243, type: !697)
!7695 = !DILocalVariable(name: "data", scope: !7688, file: !668, line: 245, type: !7696)
!7696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 32)
!7697 = !DILocalVariable(name: "line", scope: !7688, file: !668, line: 246, type: !107)
!7698 = !DILocation(line: 0, scope: !7688)
!7699 = !DILocation(line: 245, column: 38, scope: !7688)
!7700 = !DILocation(line: 249, column: 24, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7702, file: !668, line: 249, column: 2)
!7702 = distinct !DILexicalBlock(scope: !7688, file: !668, line: 249, column: 2)
!7703 = !DILocation(line: 249, column: 2, scope: !7702)
!7704 = !DILocation(line: 251, column: 7, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7706, file: !668, line: 251, column: 7)
!7706 = distinct !DILexicalBlock(scope: !7701, file: !668, line: 249, column: 39)
!7707 = !DILocation(line: 251, column: 7, scope: !7706)
!7708 = !DILocation(line: 253, column: 4, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7705, file: !668, line: 251, column: 36)
!7710 = !DILocation(line: 256, column: 24, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7709, file: !668, line: 256, column: 8)
!7712 = !DILocation(line: 256, column: 9, scope: !7711)
!7713 = !DILocation(line: 256, column: 8, scope: !7709)
!7714 = !DILocation(line: 260, column: 43, scope: !7709)
!7715 = !DILocation(line: 260, column: 4, scope: !7709)
!7716 = !DILocation(line: 261, column: 3, scope: !7709)
!7717 = !DILocation(line: 249, column: 35, scope: !7701)
!7718 = distinct !{!7718, !7703, !7719}
!7719 = !DILocation(line: 262, column: 2, scope: !7702)
!7720 = !DILocation(line: 263, column: 1, scope: !7688)
!7721 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !668, file: !668, line: 158, type: !270, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7722)
!7722 = !{!7723}
!7723 = !DILocalVariable(name: "line", arg: 1, scope: !7721, file: !668, line: 158, type: !107)
!7724 = !DILocation(line: 0, scope: !7721)
!7725 = !DILocation(line: 170, column: 38, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7727, file: !668, line: 160, column: 17)
!7727 = distinct !DILexicalBlock(scope: !7721, file: !668, line: 160, column: 6)
!7728 = !DILocation(line: 170, column: 10, scope: !7726)
!7729 = !DILocation(line: 176, column: 1, scope: !7721)
!7730 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !668, file: !668, line: 183, type: !7731, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7733)
!7731 = !DISubroutineType(types: !7732)
!7732 = !{null, !107}
!7733 = !{!7734}
!7734 = !DILocalVariable(name: "line", arg: 1, scope: !7730, file: !668, line: 183, type: !107)
!7735 = !DILocation(line: 0, scope: !7730)
!7736 = !DILocation(line: 195, column: 28, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7738, file: !668, line: 185, column: 17)
!7738 = distinct !DILexicalBlock(scope: !7730, file: !668, line: 185, column: 6)
!7739 = !DILocation(line: 195, column: 3, scope: !7737)
!7740 = !DILocation(line: 200, column: 1, scope: !7730)
!7741 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !7742, file: !7742, line: 910, type: !6178, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7743)
!7742 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7743 = !{!7744}
!7744 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7741, file: !7742, line: 910, type: !162)
!7745 = !DILocation(line: 0, scope: !7741)
!7746 = !DILocation(line: 912, column: 3, scope: !7741)
!7747 = !DILocation(line: 913, column: 1, scope: !7741)
!7748 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !7742, file: !7742, line: 834, type: !7094, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7749)
!7749 = !{!7750}
!7750 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7748, file: !7742, line: 834, type: !162)
!7751 = !DILocation(line: 0, scope: !7748)
!7752 = !DILocation(line: 836, column: 11, scope: !7748)
!7753 = !DILocation(line: 836, column: 40, scope: !7748)
!7754 = !DILocation(line: 836, column: 3, scope: !7748)
!7755 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !668, file: !668, line: 304, type: !721, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7756)
!7756 = !{!7757}
!7757 = !DILocalVariable(name: "dev", arg: 1, scope: !7755, file: !668, line: 304, type: !697)
!7758 = !DILocation(line: 0, scope: !7755)
!7759 = !DILocation(line: 306, column: 2, scope: !7755)
!7760 = !DILocation(line: 307, column: 1, scope: !7755)
!7761 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !668, file: !668, line: 299, type: !721, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7762)
!7762 = !{!7763}
!7763 = !DILocalVariable(name: "dev", arg: 1, scope: !7761, file: !668, line: 299, type: !697)
!7764 = !DILocation(line: 0, scope: !7761)
!7765 = !DILocation(line: 301, column: 2, scope: !7761)
!7766 = !DILocation(line: 302, column: 1, scope: !7761)
!7767 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !668, file: !668, line: 294, type: !721, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7768)
!7768 = !{!7769}
!7769 = !DILocalVariable(name: "dev", arg: 1, scope: !7767, file: !668, line: 294, type: !697)
!7770 = !DILocation(line: 0, scope: !7767)
!7771 = !DILocation(line: 296, column: 2, scope: !7767)
!7772 = !DILocation(line: 297, column: 1, scope: !7767)
!7773 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !668, file: !668, line: 397, type: !721, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7774)
!7774 = !{!7775}
!7775 = !DILocalVariable(name: "dev", arg: 1, scope: !7773, file: !668, line: 397, type: !697)
!7776 = !DILocation(line: 0, scope: !7773)
!7777 = !DILocation(line: 399, column: 2, scope: !7773)
!7778 = !DILocation(line: 400, column: 1, scope: !7773)
!7779 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !668, file: !668, line: 392, type: !721, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7780)
!7780 = !{!7781}
!7781 = !DILocalVariable(name: "dev", arg: 1, scope: !7779, file: !668, line: 392, type: !697)
!7782 = !DILocation(line: 0, scope: !7779)
!7783 = !DILocation(line: 394, column: 2, scope: !7779)
!7784 = !DILocation(line: 395, column: 1, scope: !7779)
!7785 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !668, file: !668, line: 289, type: !721, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7786)
!7786 = !{!7787}
!7787 = !DILocalVariable(name: "dev", arg: 1, scope: !7785, file: !668, line: 289, type: !697)
!7788 = !DILocation(line: 0, scope: !7785)
!7789 = !DILocation(line: 291, column: 2, scope: !7785)
!7790 = !DILocation(line: 292, column: 1, scope: !7785)
!7791 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !668, file: !668, line: 387, type: !721, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7792)
!7792 = !{!7793}
!7793 = !DILocalVariable(name: "dev", arg: 1, scope: !7791, file: !668, line: 387, type: !697)
!7794 = !DILocation(line: 0, scope: !7791)
!7795 = !DILocation(line: 389, column: 2, scope: !7791)
!7796 = !DILocation(line: 390, column: 1, scope: !7791)
!7797 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !668, file: !668, line: 382, type: !721, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7798)
!7798 = !{!7799}
!7799 = !DILocalVariable(name: "dev", arg: 1, scope: !7797, file: !668, line: 382, type: !697)
!7800 = !DILocation(line: 0, scope: !7797)
!7801 = !DILocation(line: 384, column: 2, scope: !7797)
!7802 = !DILocation(line: 385, column: 1, scope: !7797)
!7803 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !668, file: !668, line: 373, type: !721, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7804)
!7804 = !{!7805}
!7805 = !DILocalVariable(name: "dev", arg: 1, scope: !7803, file: !668, line: 373, type: !697)
!7806 = !DILocation(line: 0, scope: !7803)
!7807 = !DILocation(line: 375, column: 2, scope: !7803)
!7808 = !DILocation(line: 376, column: 1, scope: !7803)
!7809 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !668, file: !668, line: 284, type: !721, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7810)
!7810 = !{!7811}
!7811 = !DILocalVariable(name: "dev", arg: 1, scope: !7809, file: !668, line: 284, type: !697)
!7812 = !DILocation(line: 0, scope: !7809)
!7813 = !DILocation(line: 286, column: 2, scope: !7809)
!7814 = !DILocation(line: 287, column: 1, scope: !7809)
!7815 = distinct !DISubprogram(name: "stm32_exti_init", scope: !668, file: !668, line: 416, type: !695, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7816)
!7816 = !{!7817}
!7817 = !DILocalVariable(name: "dev", arg: 1, scope: !7815, file: !668, line: 416, type: !697)
!7818 = !DILocation(line: 0, scope: !7815)
!7819 = !DILocation(line: 418, column: 2, scope: !7815)
!7820 = !DILocation(line: 420, column: 2, scope: !7815)
!7821 = !DILocation(line: 0, scope: !720)
!7822 = !DILocation(line: 493, column: 2, scope: !7823)
!7823 = distinct !DILexicalBlock(scope: !720, file: !668, line: 493, column: 2)
!7824 = !DILocation(line: 497, column: 2, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !720, file: !668, line: 497, column: 2)
!7826 = !DILocation(line: 507, column: 2, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !720, file: !668, line: 507, column: 2)
!7828 = !DILocation(line: 512, column: 2, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !720, file: !668, line: 512, column: 2)
!7830 = !DILocation(line: 516, column: 2, scope: !7831)
!7831 = distinct !DILexicalBlock(scope: !720, file: !668, line: 516, column: 2)
!7832 = !DILocation(line: 523, column: 2, scope: !7833)
!7833 = distinct !DILexicalBlock(scope: !720, file: !668, line: 523, column: 2)
!7834 = !DILocation(line: 527, column: 2, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !720, file: !668, line: 527, column: 2)
!7836 = !DILocation(line: 581, column: 2, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !720, file: !668, line: 581, column: 2)
!7838 = !DILocation(line: 586, column: 2, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !720, file: !668, line: 586, column: 2)
!7840 = !DILocation(line: 591, column: 2, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !720, file: !668, line: 591, column: 2)
!7842 = !DILocation(line: 595, column: 2, scope: !7843)
!7843 = distinct !DILexicalBlock(scope: !720, file: !668, line: 595, column: 2)
!7844 = !DILocation(line: 607, column: 1, scope: !720)
!7845 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !668, file: !668, line: 112, type: !7731, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7846)
!7846 = !{!7847, !7848}
!7847 = !DILocalVariable(name: "line", arg: 1, scope: !7845, file: !668, line: 112, type: !107)
!7848 = !DILocalVariable(name: "irqnum", scope: !7845, file: !668, line: 114, type: !107)
!7849 = !DILocation(line: 0, scope: !7845)
!7850 = !DILocation(line: 121, column: 11, scope: !7845)
!7851 = !DILocation(line: 130, column: 26, scope: !7845)
!7852 = !DILocation(line: 130, column: 2, scope: !7845)
!7853 = !DILocation(line: 134, column: 2, scope: !7845)
!7854 = !DILocation(line: 135, column: 1, scope: !7845)
!7855 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !7742, file: !7742, line: 268, type: !6178, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7856)
!7856 = !{!7857}
!7857 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7855, file: !7742, line: 268, type: !162)
!7858 = !DILocation(line: 0, scope: !7855)
!7859 = !DILocation(line: 270, column: 3, scope: !7855)
!7860 = !DILocation(line: 271, column: 1, scope: !7855)
!7861 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !668, file: !668, line: 137, type: !7731, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7862)
!7862 = !{!7863}
!7863 = !DILocalVariable(name: "line", arg: 1, scope: !7861, file: !668, line: 137, type: !107)
!7864 = !DILocation(line: 0, scope: !7861)
!7865 = !DILocation(line: 141, column: 11, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7861, file: !668, line: 141, column: 6)
!7867 = !DILocation(line: 141, column: 6, scope: !7861)
!7868 = !DILocation(line: 145, column: 28, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7866, file: !668, line: 141, column: 17)
!7870 = !DILocation(line: 145, column: 3, scope: !7869)
!7871 = !DILocation(line: 147, column: 2, scope: !7869)
!7872 = !DILocation(line: 151, column: 1, scope: !7861)
!7873 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !7742, file: !7742, line: 309, type: !6178, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7874)
!7874 = !{!7875}
!7875 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7873, file: !7742, line: 309, type: !162)
!7876 = !DILocation(line: 0, scope: !7873)
!7877 = !DILocation(line: 311, column: 3, scope: !7873)
!7878 = !DILocation(line: 312, column: 1, scope: !7873)
!7879 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !668, file: !668, line: 202, type: !7880, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7882)
!7880 = !DISubroutineType(types: !7881)
!7881 = !{null, !107, !107}
!7882 = !{!7883, !7884}
!7883 = !DILocalVariable(name: "line", arg: 1, scope: !7879, file: !668, line: 202, type: !107)
!7884 = !DILocalVariable(name: "trigger", arg: 2, scope: !7879, file: !668, line: 202, type: !107)
!7885 = !DILocation(line: 0, scope: !7879)
!7886 = !DILocation(line: 211, column: 2, scope: !7879)
!7887 = !DILocation(line: 213, column: 36, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7879, file: !668, line: 211, column: 19)
!7889 = !DILocation(line: 213, column: 3, scope: !7888)
!7890 = !DILocation(line: 214, column: 3, scope: !7888)
!7891 = !DILocation(line: 215, column: 3, scope: !7888)
!7892 = !DILocation(line: 217, column: 35, scope: !7888)
!7893 = !DILocation(line: 217, column: 3, scope: !7888)
!7894 = !DILocation(line: 218, column: 3, scope: !7888)
!7895 = !DILocation(line: 219, column: 3, scope: !7888)
!7896 = !DILocation(line: 221, column: 36, scope: !7888)
!7897 = !DILocation(line: 221, column: 3, scope: !7888)
!7898 = !DILocation(line: 222, column: 3, scope: !7888)
!7899 = !DILocation(line: 223, column: 3, scope: !7888)
!7900 = !DILocation(line: 225, column: 35, scope: !7888)
!7901 = !DILocation(line: 225, column: 3, scope: !7888)
!7902 = !DILocation(line: 226, column: 3, scope: !7888)
!7903 = !DILocation(line: 227, column: 3, scope: !7888)
!7904 = !DILocation(line: 232, column: 1, scope: !7879)
!7905 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !7742, file: !7742, line: 573, type: !6178, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7906)
!7906 = !{!7907}
!7907 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7905, file: !7742, line: 573, type: !162)
!7908 = !DILocation(line: 0, scope: !7905)
!7909 = !DILocation(line: 575, column: 3, scope: !7905)
!7910 = !DILocation(line: 577, column: 1, scope: !7905)
!7911 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !7742, file: !7742, line: 703, type: !6178, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7912)
!7912 = !{!7913}
!7913 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7911, file: !7742, line: 703, type: !162)
!7914 = !DILocation(line: 0, scope: !7911)
!7915 = !DILocation(line: 705, column: 3, scope: !7911)
!7916 = !DILocation(line: 706, column: 1, scope: !7911)
!7917 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !7742, file: !7742, line: 529, type: !6178, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7918)
!7918 = !{!7919}
!7919 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7917, file: !7742, line: 529, type: !162)
!7920 = !DILocation(line: 0, scope: !7917)
!7921 = !DILocation(line: 531, column: 3, scope: !7917)
!7922 = !DILocation(line: 533, column: 1, scope: !7917)
!7923 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !7742, file: !7742, line: 661, type: !6178, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7924)
!7924 = !{!7925}
!7925 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7923, file: !7742, line: 661, type: !162)
!7926 = !DILocation(line: 0, scope: !7923)
!7927 = !DILocation(line: 663, column: 3, scope: !7923)
!7928 = !DILocation(line: 664, column: 1, scope: !7923)
!7929 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !668, file: !668, line: 433, type: !7930, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7932)
!7930 = !DISubroutineType(types: !7931)
!7931 = !{!107, !107, !708, !102}
!7932 = !{!7933, !7934, !7935, !7936, !7938}
!7933 = !DILocalVariable(name: "line", arg: 1, scope: !7929, file: !668, line: 433, type: !107)
!7934 = !DILocalVariable(name: "cb", arg: 2, scope: !7929, file: !668, line: 433, type: !708)
!7935 = !DILocalVariable(name: "arg", arg: 3, scope: !7929, file: !668, line: 433, type: !102)
!7936 = !DILocalVariable(name: "dev", scope: !7929, file: !668, line: 435, type: !7937)
!7937 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !697)
!7938 = !DILocalVariable(name: "data", scope: !7929, file: !668, line: 436, type: !7696)
!7939 = !DILocation(line: 0, scope: !7929)
!7940 = !DILocation(line: 438, column: 21, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7929, file: !668, line: 438, column: 6)
!7942 = !DILocation(line: 438, column: 6, scope: !7941)
!7943 = !DILocation(line: 438, column: 6, scope: !7929)
!7944 = !DILocation(line: 442, column: 20, scope: !7929)
!7945 = !DILocation(line: 443, column: 17, scope: !7929)
!7946 = !DILocation(line: 443, column: 22, scope: !7929)
!7947 = !DILocation(line: 445, column: 2, scope: !7929)
!7948 = !DILocation(line: 446, column: 1, scope: !7929)
!7949 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !668, file: !668, line: 448, type: !7731, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7950)
!7950 = !{!7951, !7952, !7953}
!7951 = !DILocalVariable(name: "line", arg: 1, scope: !7949, file: !668, line: 448, type: !107)
!7952 = !DILocalVariable(name: "dev", scope: !7949, file: !668, line: 450, type: !7937)
!7953 = !DILocalVariable(name: "data", scope: !7949, file: !668, line: 451, type: !7696)
!7954 = !DILocation(line: 0, scope: !7949)
!7955 = !DILocation(line: 453, column: 17, scope: !7949)
!7956 = !DILocation(line: 453, column: 20, scope: !7949)
!7957 = !DILocation(line: 454, column: 17, scope: !7949)
!7958 = !DILocation(line: 454, column: 22, scope: !7949)
!7959 = !DILocation(line: 455, column: 1, scope: !7949)
!7960 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !852, file: !852, line: 183, type: !890, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !7961)
!7961 = !{!7962, !7963, !7964, !7965, !7966}
!7962 = !DILocalVariable(name: "dev", arg: 1, scope: !7960, file: !852, line: 183, type: !881)
!7963 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7960, file: !852, line: 184, type: !892)
!7964 = !DILocalVariable(name: "pclken", scope: !7960, file: !852, line: 186, type: !842)
!7965 = !DILocalVariable(name: "reg", scope: !7960, file: !852, line: 187, type: !1502)
!7966 = !DILocalVariable(name: "reg_val", scope: !7960, file: !852, line: 188, type: !162)
!7967 = !DILocation(line: 0, scope: !7960)
!7968 = !DILocation(line: 192, column: 6, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7960, file: !852, line: 192, column: 6)
!7970 = !DILocation(line: 192, column: 6, scope: !7960)
!7971 = !DILocation(line: 197, column: 52, scope: !7960)
!7972 = !DILocation(line: 197, column: 8, scope: !7960)
!7973 = !DILocation(line: 198, column: 12, scope: !7960)
!7974 = !DILocation(line: 199, column: 21, scope: !7960)
!7975 = !DILocation(line: 199, column: 10, scope: !7960)
!7976 = !DILocation(line: 200, column: 7, scope: !7960)
!7977 = !DILocation(line: 202, column: 2, scope: !7960)
!7978 = !DILocation(line: 203, column: 1, scope: !7960)
!7979 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !852, file: !852, line: 205, type: !890, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !7980)
!7980 = !{!7981, !7982, !7983, !7984, !7985}
!7981 = !DILocalVariable(name: "dev", arg: 1, scope: !7979, file: !852, line: 205, type: !881)
!7982 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7979, file: !852, line: 206, type: !892)
!7983 = !DILocalVariable(name: "pclken", scope: !7979, file: !852, line: 208, type: !842)
!7984 = !DILocalVariable(name: "reg", scope: !7979, file: !852, line: 209, type: !1502)
!7985 = !DILocalVariable(name: "reg_val", scope: !7979, file: !852, line: 210, type: !162)
!7986 = !DILocation(line: 0, scope: !7979)
!7987 = !DILocation(line: 214, column: 6, scope: !7988)
!7988 = distinct !DILexicalBlock(scope: !7979, file: !852, line: 214, column: 6)
!7989 = !DILocation(line: 214, column: 6, scope: !7979)
!7990 = !DILocation(line: 219, column: 52, scope: !7979)
!7991 = !DILocation(line: 219, column: 8, scope: !7979)
!7992 = !DILocation(line: 220, column: 12, scope: !7979)
!7993 = !DILocation(line: 221, column: 22, scope: !7979)
!7994 = !DILocation(line: 221, column: 13, scope: !7979)
!7995 = !DILocation(line: 221, column: 10, scope: !7979)
!7996 = !DILocation(line: 222, column: 7, scope: !7979)
!7997 = !DILocation(line: 224, column: 2, scope: !7979)
!7998 = !DILocation(line: 225, column: 1, scope: !7979)
!7999 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !852, file: !852, line: 262, type: !906, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !8000)
!8000 = !{!8001, !8002, !8003, !8004, !8005, !8006, !8007, !8008}
!8001 = !DILocalVariable(name: "clock", arg: 1, scope: !7999, file: !852, line: 262, type: !881)
!8002 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7999, file: !852, line: 263, type: !892)
!8003 = !DILocalVariable(name: "rate", arg: 3, scope: !7999, file: !852, line: 264, type: !848)
!8004 = !DILocalVariable(name: "pclken", scope: !7999, file: !852, line: 266, type: !842)
!8005 = !DILocalVariable(name: "ahb_clock", scope: !7999, file: !852, line: 273, type: !162)
!8006 = !DILocalVariable(name: "apb1_clock", scope: !7999, file: !852, line: 274, type: !162)
!8007 = !DILocalVariable(name: "apb2_clock", scope: !7999, file: !852, line: 276, type: !162)
!8008 = !DILocalVariable(name: "ahb3_clock", scope: !7999, file: !852, line: 286, type: !162)
!8009 = !DILocation(line: 0, scope: !7999)
!8010 = !DILocation(line: 273, column: 23, scope: !7999)
!8011 = !DILocation(line: 299, column: 18, scope: !7999)
!8012 = !DILocation(line: 299, column: 2, scope: !7999)
!8013 = !DILocation(line: 274, column: 24, scope: !7999)
!8014 = !DILocation(line: 319, column: 3, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !7999, file: !852, line: 299, column: 23)
!8016 = !DILocation(line: 276, column: 24, scope: !7999)
!8017 = !DILocation(line: 323, column: 3, scope: !8015)
!8018 = !DILocation(line: 346, column: 33, scope: !8015)
!8019 = !DILocation(line: 346, column: 11, scope: !8015)
!8020 = !DILocation(line: 350, column: 3, scope: !8015)
!8021 = !DILocation(line: 354, column: 33, scope: !8015)
!8022 = !DILocation(line: 354, column: 11, scope: !8015)
!8023 = !DILocation(line: 358, column: 3, scope: !8015)
!8024 = !DILocation(line: 374, column: 3, scope: !8015)
!8025 = !DILocation(line: 379, column: 3, scope: !8015)
!8026 = !DILocation(line: 0, scope: !8015)
!8027 = !DILocation(line: 396, column: 1, scope: !7999)
!8028 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !852, file: !852, line: 227, type: !922, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !8029)
!8029 = !{!8030, !8031, !8032, !8033, !8034, !8035, !8036, !8037}
!8030 = !DILocalVariable(name: "dev", arg: 1, scope: !8028, file: !852, line: 227, type: !881)
!8031 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8028, file: !852, line: 228, type: !892)
!8032 = !DILocalVariable(name: "data", arg: 3, scope: !8028, file: !852, line: 229, type: !102)
!8033 = !DILocalVariable(name: "pclken", scope: !8028, file: !852, line: 233, type: !842)
!8034 = !DILocalVariable(name: "reg", scope: !8028, file: !852, line: 234, type: !1502)
!8035 = !DILocalVariable(name: "reg_val", scope: !8028, file: !852, line: 235, type: !162)
!8036 = !DILocalVariable(name: "dt_val", scope: !8028, file: !852, line: 235, type: !162)
!8037 = !DILocalVariable(name: "err", scope: !8028, file: !852, line: 236, type: !107)
!8038 = !DILocation(line: 0, scope: !8028)
!8039 = !DILocation(line: 241, column: 30, scope: !8028)
!8040 = !DILocation(line: 241, column: 8, scope: !8028)
!8041 = !DILocation(line: 242, column: 10, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !8028, file: !852, line: 242, column: 6)
!8043 = !DILocation(line: 242, column: 6, scope: !8028)
!8044 = !DILocation(line: 247, column: 11, scope: !8028)
!8045 = !DILocation(line: 248, column: 6, scope: !8028)
!8046 = !DILocation(line: 247, column: 44, scope: !8028)
!8047 = !DILocation(line: 250, column: 6, scope: !8028)
!8048 = !DILocation(line: 249, column: 52, scope: !8028)
!8049 = !DILocation(line: 249, column: 8, scope: !8028)
!8050 = !DILocation(line: 251, column: 12, scope: !8028)
!8051 = !DILocation(line: 252, column: 10, scope: !8028)
!8052 = !DILocation(line: 253, column: 7, scope: !8028)
!8053 = !DILocation(line: 255, column: 2, scope: !8028)
!8054 = !DILocation(line: 260, column: 1, scope: !8028)
!8055 = distinct !DISubprogram(name: "enabled_clock", scope: !852, file: !852, line: 100, type: !8056, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !8058)
!8056 = !DISubroutineType(types: !8057)
!8057 = !{!107, !162}
!8058 = !{!8059, !8060}
!8059 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8055, file: !852, line: 100, type: !162)
!8060 = !DILocalVariable(name: "r", scope: !8055, file: !852, line: 102, type: !107)
!8061 = !DILocation(line: 0, scope: !8055)
!8062 = !DILocation(line: 104, column: 2, scope: !8055)
!8063 = !DILocation(line: 180, column: 2, scope: !8055)
!8064 = !DILocation(line: 181, column: 1, scope: !8055)
!8065 = distinct !DISubprogram(name: "get_bus_clock", scope: !852, file: !852, line: 79, type: !8066, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !8068)
!8066 = !DISubroutineType(types: !8067)
!8067 = !{!162, !162, !162}
!8068 = !{!8069, !8070}
!8069 = !DILocalVariable(name: "clock", arg: 1, scope: !8065, file: !852, line: 79, type: !162)
!8070 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8065, file: !852, line: 79, type: !162)
!8071 = !DILocation(line: 0, scope: !8065)
!8072 = !DILocation(line: 81, column: 15, scope: !8065)
!8073 = !DILocation(line: 81, column: 2, scope: !8065)
!8074 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !852, file: !852, line: 68, type: !8075, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !8077)
!8075 = !DISubroutineType(types: !8076)
!8076 = !{!162, !162, !107, !107, !107}
!8077 = !{!8078, !8079, !8080, !8081}
!8078 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8074, file: !852, line: 68, type: !162)
!8079 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8074, file: !852, line: 69, type: !107)
!8080 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8074, file: !852, line: 70, type: !107)
!8081 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8074, file: !852, line: 71, type: !107)
!8082 = !DILocation(line: 0, scope: !8074)
!8083 = !DILocation(line: 75, column: 22, scope: !8074)
!8084 = !DILocation(line: 76, column: 13, scope: !8074)
!8085 = !DILocation(line: 75, column: 34, scope: !8074)
!8086 = !DILocation(line: 75, column: 2, scope: !8074)
!8087 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !852, file: !852, line: 641, type: !879, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !8088)
!8088 = !{!8089, !8090, !8091}
!8089 = !DILocalVariable(name: "dev", arg: 1, scope: !8087, file: !852, line: 641, type: !881)
!8090 = !DILocalVariable(name: "old_flash_freq", scope: !8087, file: !852, line: 664, type: !162)
!8091 = !DILocalVariable(name: "new_flash_freq", scope: !8087, file: !852, line: 665, type: !162)
!8092 = !DILocation(line: 0, scope: !8087)
!8093 = !DILocation(line: 646, column: 2, scope: !8087)
!8094 = !DILocation(line: 667, column: 19, scope: !8087)
!8095 = !DILocation(line: 674, column: 21, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8087, file: !852, line: 674, column: 6)
!8097 = !DILocation(line: 674, column: 6, scope: !8087)
!8098 = !DILocation(line: 675, column: 3, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !8096, file: !852, line: 674, column: 59)
!8100 = !DILocation(line: 676, column: 2, scope: !8099)
!8101 = !DILocation(line: 680, column: 2, scope: !8087)
!8102 = !DILocation(line: 683, column: 2, scope: !8087)
!8103 = !DILocation(line: 690, column: 3, scope: !8104)
!8104 = distinct !DILexicalBlock(scope: !8105, file: !852, line: 689, column: 9)
!8105 = distinct !DILexicalBlock(scope: !8087, file: !852, line: 685, column: 6)
!8106 = !DILocation(line: 695, column: 2, scope: !8087)
!8107 = !DILocation(line: 696, column: 2, scope: !8087)
!8108 = !DILocation(line: 696, column: 9, scope: !8087)
!8109 = !DILocation(line: 696, column: 34, scope: !8087)
!8110 = distinct !{!8110, !8107, !8111}
!8111 = !DILocation(line: 697, column: 2, scope: !8087)
!8112 = !DILocation(line: 720, column: 21, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !8087, file: !852, line: 720, column: 6)
!8114 = !DILocation(line: 720, column: 6, scope: !8087)
!8115 = !DILocation(line: 721, column: 3, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8113, file: !852, line: 720, column: 60)
!8117 = !DILocation(line: 722, column: 2, scope: !8116)
!8118 = !DILocation(line: 725, column: 18, scope: !8087)
!8119 = !DILocation(line: 728, column: 2, scope: !8087)
!8120 = !DILocation(line: 730, column: 2, scope: !8087)
!8121 = !DILocation(line: 745, column: 2, scope: !8087)
!8122 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8123, file: !8123, line: 3275, type: !6168, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !250)
!8123 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8124 = !DILocation(line: 3277, column: 21, scope: !8122)
!8125 = !DILocation(line: 3277, column: 3, scope: !8122)
!8126 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !852, file: !852, line: 507, type: !3137, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !250)
!8127 = !DILocation(line: 516, column: 4, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8129, file: !852, line: 515, column: 10)
!8129 = distinct !DILexicalBlock(scope: !8130, file: !852, line: 513, column: 7)
!8130 = distinct !DILexicalBlock(scope: !8131, file: !852, line: 510, column: 37)
!8131 = distinct !DILexicalBlock(scope: !8126, file: !852, line: 510, column: 6)
!8132 = !DILocation(line: 526, column: 3, scope: !8130)
!8133 = !DILocation(line: 527, column: 3, scope: !8130)
!8134 = !DILocation(line: 527, column: 10, scope: !8130)
!8135 = !DILocation(line: 527, column: 31, scope: !8130)
!8136 = distinct !{!8136, !8133, !8137}
!8137 = !DILocation(line: 529, column: 3, scope: !8130)
!8138 = !DILocation(line: 583, column: 3, scope: !8139)
!8139 = distinct !DILexicalBlock(scope: !8140, file: !852, line: 577, column: 37)
!8140 = distinct !DILexicalBlock(scope: !8126, file: !852, line: 577, column: 6)
!8141 = !DILocation(line: 584, column: 3, scope: !8139)
!8142 = !DILocation(line: 584, column: 10, scope: !8139)
!8143 = !DILocation(line: 584, column: 31, scope: !8139)
!8144 = distinct !{!8144, !8141, !8145}
!8145 = !DILocation(line: 585, column: 3, scope: !8139)
!8146 = !DILocation(line: 627, column: 1, scope: !8126)
!8147 = distinct !DISubprogram(name: "set_up_plls", scope: !852, file: !852, line: 448, type: !3137, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !250)
!8148 = !DILocation(line: 460, column: 6, scope: !8149)
!8149 = distinct !DILexicalBlock(scope: !8147, file: !852, line: 460, column: 6)
!8150 = !DILocation(line: 460, column: 31, scope: !8149)
!8151 = !DILocation(line: 460, column: 6, scope: !8147)
!8152 = !DILocation(line: 461, column: 3, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8149, file: !852, line: 460, column: 67)
!8154 = !DILocation(line: 462, column: 3, scope: !8153)
!8155 = !DILocation(line: 463, column: 2, scope: !8153)
!8156 = !DILocation(line: 464, column: 2, scope: !8147)
!8157 = !DILocation(line: 488, column: 2, scope: !8147)
!8158 = !DILocation(line: 492, column: 2, scope: !8147)
!8159 = !DILocation(line: 496, column: 2, scope: !8147)
!8160 = !DILocation(line: 499, column: 2, scope: !8147)
!8161 = !DILocation(line: 500, column: 2, scope: !8147)
!8162 = !DILocation(line: 500, column: 9, scope: !8147)
!8163 = !DILocation(line: 500, column: 30, scope: !8147)
!8164 = distinct !{!8164, !8161, !8165}
!8165 = !DILocation(line: 502, column: 2, scope: !8147)
!8166 = !DILocation(line: 505, column: 1, scope: !8147)
!8167 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8123, file: !8123, line: 3224, type: !6178, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !8168)
!8168 = !{!8169}
!8169 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8167, file: !8123, line: 3224, type: !162)
!8170 = !DILocation(line: 0, scope: !8167)
!8171 = !DILocation(line: 3226, column: 3, scope: !8167)
!8172 = !DILocation(line: 3227, column: 1, scope: !8167)
!8173 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8123, file: !8123, line: 3188, type: !6178, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !8174)
!8174 = !{!8175}
!8175 = !DILocalVariable(name: "Source", arg: 1, scope: !8173, file: !8123, line: 3188, type: !162)
!8176 = !DILocation(line: 0, scope: !8173)
!8177 = !DILocation(line: 3190, column: 3, scope: !8173)
!8178 = !DILocation(line: 3191, column: 1, scope: !8173)
!8179 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8123, file: !8123, line: 3204, type: !6168, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !250)
!8180 = !DILocation(line: 3206, column: 21, scope: !8179)
!8181 = !DILocation(line: 3206, column: 3, scope: !8179)
!8182 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8123, file: !8123, line: 3240, type: !6178, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !8183)
!8183 = !{!8184}
!8184 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8182, file: !8123, line: 3240, type: !162)
!8185 = !DILocation(line: 0, scope: !8182)
!8186 = !DILocation(line: 3242, column: 3, scope: !8182)
!8187 = !DILocation(line: 3243, column: 1, scope: !8182)
!8188 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8123, file: !8123, line: 3256, type: !6178, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !8189)
!8189 = !{!8190}
!8190 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8188, file: !8123, line: 3256, type: !162)
!8191 = !DILocation(line: 0, scope: !8188)
!8192 = !DILocation(line: 3258, column: 3, scope: !8188)
!8193 = !DILocation(line: 3259, column: 1, scope: !8188)
!8194 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !852, file: !852, line: 409, type: !3137, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !250)
!8195 = !DILocation(line: 412, column: 6, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8194, file: !852, line: 412, column: 6)
!8197 = !DILocation(line: 412, column: 27, scope: !8196)
!8198 = !DILocation(line: 412, column: 6, scope: !8194)
!8199 = !DILocation(line: 414, column: 3, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8196, file: !852, line: 412, column: 33)
!8201 = !DILocation(line: 415, column: 3, scope: !8200)
!8202 = !DILocation(line: 415, column: 10, scope: !8200)
!8203 = !DILocation(line: 415, column: 31, scope: !8200)
!8204 = distinct !{!8204, !8201, !8205}
!8205 = !DILocation(line: 417, column: 3, scope: !8200)
!8206 = !DILocation(line: 421, column: 2, scope: !8194)
!8207 = !DILocation(line: 422, column: 2, scope: !8194)
!8208 = !DILocation(line: 422, column: 9, scope: !8194)
!8209 = !DILocation(line: 422, column: 34, scope: !8194)
!8210 = distinct !{!8210, !8207, !8211}
!8211 = !DILocation(line: 423, column: 2, scope: !8194)
!8212 = !DILocation(line: 424, column: 1, scope: !8194)
!8213 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8123, file: !8123, line: 4195, type: !3137, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !250)
!8214 = !DILocation(line: 4197, column: 3, scope: !8213)
!8215 = !DILocation(line: 4198, column: 1, scope: !8213)
!8216 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8123, file: !8123, line: 4184, type: !3137, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !250)
!8217 = !DILocation(line: 4186, column: 3, scope: !8216)
!8218 = !DILocation(line: 4187, column: 1, scope: !8216)
!8219 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8123, file: !8123, line: 4205, type: !6168, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !250)
!8220 = !DILocation(line: 4207, column: 11, scope: !8219)
!8221 = !DILocation(line: 4207, column: 44, scope: !8219)
!8222 = !DILocation(line: 4207, column: 3, scope: !8219)
!8223 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8123, file: !8123, line: 3007, type: !6168, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !250)
!8224 = !DILocation(line: 3009, column: 11, scope: !8223)
!8225 = !DILocation(line: 3009, column: 44, scope: !8223)
!8226 = !DILocation(line: 3009, column: 3, scope: !8223)
!8227 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8123, file: !8123, line: 2987, type: !3137, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !250)
!8228 = !DILocation(line: 2989, column: 3, scope: !8227)
!8229 = !DILocation(line: 2990, column: 1, scope: !8227)
!8230 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8123, file: !8123, line: 2939, type: !3137, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !250)
!8231 = !DILocation(line: 2941, column: 3, scope: !8230)
!8232 = !DILocation(line: 2942, column: 1, scope: !8230)
!8233 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8123, file: !8123, line: 2949, type: !3137, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !250)
!8234 = !DILocation(line: 2951, column: 3, scope: !8233)
!8235 = !DILocation(line: 2952, column: 1, scope: !8233)
!8236 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8123, file: !8123, line: 2969, type: !6168, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !250)
!8237 = !DILocation(line: 2971, column: 11, scope: !8236)
!8238 = !DILocation(line: 2971, column: 44, scope: !8236)
!8239 = !DILocation(line: 2971, column: 3, scope: !8236)
!8240 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8123, file: !8123, line: 3143, type: !3137, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !250)
!8241 = !DILocation(line: 3145, column: 3, scope: !8240)
!8242 = !DILocation(line: 3146, column: 1, scope: !8240)
!8243 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8123, file: !8123, line: 3163, type: !6168, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !250)
!8244 = !DILocation(line: 3165, column: 11, scope: !8243)
!8245 = !DILocation(line: 3165, column: 46, scope: !8243)
!8246 = !DILocation(line: 3165, column: 3, scope: !8243)
!8247 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8248, file: !8248, line: 40, type: !6168, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2807, retainedNodes: !250)
!8248 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8249 = !DILocation(line: 45, column: 3, scope: !8250)
!8250 = distinct !DILexicalBlock(scope: !8251, file: !8248, line: 44, column: 44)
!8251 = distinct !DILexicalBlock(scope: !8252, file: !8248, line: 44, column: 13)
!8252 = distinct !DILexicalBlock(scope: !8247, file: !8248, line: 42, column: 6)
!8253 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8248, file: !8248, line: 56, type: !3137, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2807, retainedNodes: !250)
!8254 = !DILocation(line: 58, column: 2, scope: !8253)
!8255 = !DILocation(line: 62, column: 1, scope: !8253)
!8256 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8123, file: !8123, line: 4304, type: !8257, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2807, retainedNodes: !8259)
!8257 = !DISubroutineType(types: !8258)
!8258 = !{null, !162, !162, !162, !162}
!8259 = !{!8260, !8261, !8262, !8263}
!8260 = !DILocalVariable(name: "Source", arg: 1, scope: !8256, file: !8123, line: 4304, type: !162)
!8261 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8256, file: !8123, line: 4304, type: !162)
!8262 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8256, file: !8123, line: 4304, type: !162)
!8263 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8256, file: !8123, line: 4304, type: !162)
!8264 = !DILocation(line: 0, scope: !8256)
!8265 = !DILocation(line: 4306, column: 3, scope: !8256)
!8266 = !DILocation(line: 4308, column: 3, scope: !8256)
!8267 = !DILocation(line: 4312, column: 1, scope: !8256)
!8268 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8248, file: !8248, line: 69, type: !3137, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2807, retainedNodes: !250)
!8269 = !DILocation(line: 72, column: 2, scope: !8268)
!8270 = !DILocation(line: 73, column: 1, scope: !8268)
!8271 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8272, file: !8272, line: 1185, type: !6178, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2807, retainedNodes: !8273)
!8272 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8273 = !{!8274, !8275}
!8274 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8271, file: !8272, line: 1185, type: !162)
!8275 = !DILocalVariable(name: "tmpreg", scope: !8271, file: !8272, line: 1187, type: !283)
!8276 = !DILocation(line: 0, scope: !8271)
!8277 = !DILocation(line: 1187, column: 3, scope: !8271)
!8278 = !DILocation(line: 1187, column: 17, scope: !8271)
!8279 = !DILocation(line: 1188, column: 3, scope: !8271)
!8280 = !DILocation(line: 1190, column: 12, scope: !8271)
!8281 = !DILocation(line: 1190, column: 10, scope: !8271)
!8282 = !DILocation(line: 1191, column: 9, scope: !8271)
!8283 = !DILocation(line: 1192, column: 1, scope: !8271)
!8284 = distinct !DISubprogram(name: "uart_console_init", scope: !1011, file: !1011, line: 588, type: !958, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !8285)
!8285 = !{!8286}
!8286 = !DILocalVariable(name: "arg", arg: 1, scope: !8284, file: !1011, line: 588, type: !937)
!8287 = !DILocation(line: 0, scope: !8284)
!8288 = !DILocation(line: 593, column: 7, scope: !8289)
!8289 = distinct !DILexicalBlock(scope: !8284, file: !1011, line: 593, column: 6)
!8290 = !DILocation(line: 593, column: 6, scope: !8284)
!8291 = !DILocation(line: 597, column: 2, scope: !8284)
!8292 = !DILocation(line: 599, column: 2, scope: !8284)
!8293 = !DILocation(line: 600, column: 1, scope: !8284)
!8294 = distinct !DISubprogram(name: "device_is_ready", scope: !3420, file: !3420, line: 47, type: !8295, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !8297)
!8295 = !DISubroutineType(types: !8296)
!8296 = !{!136, !937}
!8297 = !{!8298}
!8298 = !DILocalVariable(name: "dev", arg: 1, scope: !8294, file: !3420, line: 47, type: !937)
!8299 = !DILocation(line: 0, scope: !8294)
!8300 = !DILocation(line: 55, column: 2, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8294, file: !3420, line: 55, column: 2)
!8302 = !{i64 2155043425}
!8303 = !DILocation(line: 56, column: 9, scope: !8294)
!8304 = !DILocation(line: 56, column: 2, scope: !8294)
!8305 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1011, file: !1011, line: 573, type: !3137, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !250)
!8306 = !DILocation(line: 576, column: 2, scope: !8305)
!8307 = !DILocation(line: 579, column: 2, scope: !8305)
!8308 = !DILocation(line: 581, column: 1, scope: !8305)
!8309 = distinct !DISubprogram(name: "console_out", scope: !1011, file: !1011, line: 77, type: !270, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !8310)
!8310 = !{!8311}
!8311 = !DILocalVariable(name: "c", arg: 1, scope: !8309, file: !1011, line: 77, type: !107)
!8312 = !DILocation(line: 0, scope: !8309)
!8313 = !DILocation(line: 89, column: 11, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !8309, file: !1011, line: 89, column: 6)
!8315 = !DILocation(line: 89, column: 6, scope: !8309)
!8316 = !DILocation(line: 90, column: 3, scope: !8317)
!8317 = distinct !DILexicalBlock(scope: !8314, file: !1011, line: 89, column: 17)
!8318 = !DILocation(line: 91, column: 2, scope: !8317)
!8319 = !DILocation(line: 92, column: 34, scope: !8309)
!8320 = !DILocation(line: 92, column: 2, scope: !8309)
!8321 = !DILocation(line: 94, column: 2, scope: !8309)
!8322 = distinct !DISubprogram(name: "uart_poll_out", scope: !3284, file: !3284, line: 95, type: !954, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !8323)
!8323 = !{!8324, !8325}
!8324 = !DILocalVariable(name: "dev", arg: 1, scope: !8322, file: !3284, line: 95, type: !937)
!8325 = !DILocalVariable(name: "out_char", arg: 2, scope: !8322, file: !3284, line: 95, type: !134)
!8326 = !DILocation(line: 0, scope: !8322)
!8327 = !DILocation(line: 105, column: 2, scope: !8328)
!8328 = distinct !DILexicalBlock(scope: !8322, file: !3284, line: 105, column: 2)
!8329 = !{i64 2155126670}
!8330 = !DILocation(line: 106, column: 2, scope: !8322)
!8331 = !DILocation(line: 107, column: 1, scope: !8322)
!8332 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !111, file: !111, line: 574, type: !954, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !8333)
!8333 = !{!8334, !8335, !8336}
!8334 = !DILocalVariable(name: "dev", arg: 1, scope: !8332, file: !111, line: 574, type: !937)
!8335 = !DILocalVariable(name: "out_char", arg: 2, scope: !8332, file: !111, line: 575, type: !134)
!8336 = !DILocalVariable(name: "api", scope: !8332, file: !111, line: 577, type: !929)
!8337 = !DILocation(line: 0, scope: !8332)
!8338 = !DILocation(line: 578, column: 40, scope: !8332)
!8339 = !DILocation(line: 580, column: 7, scope: !8332)
!8340 = !DILocation(line: 580, column: 2, scope: !8332)
!8341 = !DILocation(line: 581, column: 1, scope: !8332)
!8342 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !120, file: !120, line: 730, type: !8295, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !8343)
!8343 = !{!8344}
!8344 = !DILocalVariable(name: "dev", arg: 1, scope: !8342, file: !120, line: 730, type: !937)
!8345 = !DILocation(line: 0, scope: !8342)
!8346 = !DILocation(line: 732, column: 9, scope: !8342)
!8347 = !DILocation(line: 732, column: 2, scope: !8342)
!8348 = distinct !DISubprogram(name: "uart_register_input", scope: !1011, file: !1011, line: 560, type: !8349, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !8394)
!8349 = !DISubroutineType(types: !8350)
!8350 = !{null, !8351, !8351, !8391}
!8351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8352, size: 32)
!8352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !224, line: 2208, size: 128, elements: !8353)
!8353 = !{!8354}
!8354 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8352, file: !224, line: 2209, baseType: !8355, size: 128)
!8355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !224, line: 1709, size: 128, elements: !8356)
!8356 = !{!8357, !8370, !8372}
!8357 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8355, file: !224, line: 1710, baseType: !8358, size: 64)
!8358 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !8359, line: 46, baseType: !8360)
!8359 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !8359, line: 41, size: 64, elements: !8361)
!8361 = !{!8362, !8369}
!8362 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8360, file: !8359, line: 42, baseType: !8363, size: 32)
!8363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8364, size: 32)
!8364 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !8359, line: 39, baseType: !8365)
!8365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !8359, line: 35, size: 32, elements: !8366)
!8366 = !{!8367}
!8367 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !8365, file: !8359, line: 36, baseType: !8368, size: 32)
!8368 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !8359, line: 32, baseType: !162)
!8369 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8360, file: !8359, line: 43, baseType: !8363, size: 32, offset: 32)
!8370 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8355, file: !224, line: 1711, baseType: !8371, offset: 64)
!8371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!8372 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8355, file: !224, line: 1712, baseType: !8373, size: 64, offset: 64)
!8373 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !8374)
!8374 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !8375)
!8375 = !{!8376}
!8376 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8374, file: !228, line: 232, baseType: !8377, size: 64)
!8377 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !8378)
!8378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !8379)
!8379 = !{!8380, !8386}
!8380 = !DIDerivedType(tag: DW_TAG_member, scope: !8378, file: !233, line: 38, baseType: !8381, size: 32)
!8381 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8378, file: !233, line: 38, size: 32, elements: !8382)
!8382 = !{!8383, !8385}
!8383 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8381, file: !233, line: 39, baseType: !8384, size: 32)
!8384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8378, size: 32)
!8385 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8381, file: !233, line: 40, baseType: !8384, size: 32)
!8386 = !DIDerivedType(tag: DW_TAG_member, scope: !8378, file: !233, line: 42, baseType: !8387, size: 32, offset: 32)
!8387 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8378, file: !233, line: 42, size: 32, elements: !8388)
!8388 = !{!8389, !8390}
!8389 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8387, file: !233, line: 43, baseType: !8384, size: 32)
!8390 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8387, file: !233, line: 44, baseType: !8384, size: 32)
!8391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8392, size: 32)
!8392 = !DISubroutineType(types: !8393)
!8393 = !{!133, !256, !133}
!8394 = !{!8395, !8396, !8397}
!8395 = !DILocalVariable(name: "avail", arg: 1, scope: !8348, file: !1011, line: 560, type: !8351)
!8396 = !DILocalVariable(name: "lines", arg: 2, scope: !8348, file: !1011, line: 560, type: !8351)
!8397 = !DILocalVariable(name: "completion", arg: 3, scope: !8348, file: !1011, line: 561, type: !8391)
!8398 = !DILocation(line: 0, scope: !8348)
!8399 = !DILocation(line: 566, column: 1, scope: !8348)
!8400 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1189, file: !1189, line: 523, type: !1047, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8401)
!8401 = !{!8402, !8403, !8404, !8405, !8406}
!8402 = !DILocalVariable(name: "dev", arg: 1, scope: !8400, file: !1189, line: 523, type: !1049)
!8403 = !DILocalVariable(name: "pin", arg: 2, scope: !8400, file: !1189, line: 524, type: !1064)
!8404 = !DILocalVariable(name: "flags", arg: 3, scope: !8400, file: !1189, line: 524, type: !1065)
!8405 = !DILocalVariable(name: "err", scope: !8400, file: !1189, line: 526, type: !107)
!8406 = !DILocalVariable(name: "pincfg", scope: !8400, file: !1189, line: 527, type: !107)
!8407 = !DILocation(line: 0, scope: !8400)
!8408 = !DILocation(line: 527, column: 2, scope: !8400)
!8409 = !DILocation(line: 532, column: 8, scope: !8400)
!8410 = !DILocation(line: 533, column: 10, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !8400, file: !1189, line: 533, column: 6)
!8412 = !DILocation(line: 533, column: 6, scope: !8400)
!8413 = !DILocation(line: 543, column: 13, scope: !8414)
!8414 = distinct !DILexicalBlock(scope: !8400, file: !1189, line: 543, column: 6)
!8415 = !DILocation(line: 543, column: 28, scope: !8414)
!8416 = !DILocation(line: 543, column: 6, scope: !8400)
!8417 = !DILocation(line: 544, column: 14, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8419, file: !1189, line: 544, column: 7)
!8419 = distinct !DILexicalBlock(scope: !8414, file: !1189, line: 543, column: 34)
!8420 = !DILocation(line: 544, column: 39, scope: !8418)
!8421 = !DILocation(line: 544, column: 7, scope: !8419)
!8422 = !DILocation(line: 545, column: 38, scope: !8423)
!8423 = distinct !DILexicalBlock(scope: !8418, file: !1189, line: 544, column: 45)
!8424 = !DILocation(line: 545, column: 4, scope: !8423)
!8425 = !DILocation(line: 546, column: 3, scope: !8423)
!8426 = !DILocation(line: 546, column: 21, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !8418, file: !1189, line: 546, column: 14)
!8428 = !DILocation(line: 546, column: 45, scope: !8427)
!8429 = !DILocation(line: 546, column: 14, scope: !8418)
!8430 = !DILocation(line: 547, column: 40, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !8427, file: !1189, line: 546, column: 51)
!8432 = !DILocation(line: 547, column: 4, scope: !8431)
!8433 = !DILocation(line: 548, column: 3, scope: !8431)
!8434 = !DILocation(line: 551, column: 32, scope: !8400)
!8435 = !DILocation(line: 551, column: 37, scope: !8400)
!8436 = !DILocation(line: 551, column: 2, scope: !8400)
!8437 = !DILocation(line: 554, column: 6, scope: !8400)
!8438 = !DILocation(line: 562, column: 1, scope: !8400)
!8439 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1189, file: !1189, line: 410, type: !8440, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8442)
!8440 = !DISubroutineType(types: !8441)
!8441 = !{!107, !1049, !848}
!8442 = !{!8443, !8444, !8445, !8447}
!8443 = !DILocalVariable(name: "dev", arg: 1, scope: !8439, file: !1189, line: 410, type: !1049)
!8444 = !DILocalVariable(name: "value", arg: 2, scope: !8439, file: !1189, line: 410, type: !848)
!8445 = !DILocalVariable(name: "cfg", scope: !8439, file: !1189, line: 412, type: !8446)
!8446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 32)
!8447 = !DILocalVariable(name: "gpio", scope: !8439, file: !1189, line: 413, type: !1122)
!8448 = !DILocation(line: 0, scope: !8439)
!8449 = !DILocation(line: 412, column: 45, scope: !8439)
!8450 = !DILocation(line: 413, column: 44, scope: !8439)
!8451 = !DILocation(line: 415, column: 11, scope: !8439)
!8452 = !DILocation(line: 415, column: 9, scope: !8439)
!8453 = !DILocation(line: 417, column: 2, scope: !8439)
!8454 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1189, file: !1189, line: 420, type: !1074, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8455)
!8455 = !{!8456, !8457, !8458, !8459, !8460, !8461}
!8456 = !DILocalVariable(name: "dev", arg: 1, scope: !8454, file: !1189, line: 420, type: !1049)
!8457 = !DILocalVariable(name: "mask", arg: 2, scope: !8454, file: !1189, line: 421, type: !1076)
!8458 = !DILocalVariable(name: "value", arg: 3, scope: !8454, file: !1189, line: 422, type: !1071)
!8459 = !DILocalVariable(name: "cfg", scope: !8454, file: !1189, line: 424, type: !8446)
!8460 = !DILocalVariable(name: "gpio", scope: !8454, file: !1189, line: 425, type: !1122)
!8461 = !DILocalVariable(name: "port_value", scope: !8454, file: !1189, line: 426, type: !162)
!8462 = !DILocation(line: 0, scope: !8454)
!8463 = !DILocation(line: 424, column: 45, scope: !8454)
!8464 = !DILocation(line: 425, column: 44, scope: !8454)
!8465 = !DILocation(line: 430, column: 15, scope: !8454)
!8466 = !DILocation(line: 431, column: 46, scope: !8454)
!8467 = !DILocation(line: 431, column: 44, scope: !8454)
!8468 = !DILocation(line: 431, column: 61, scope: !8454)
!8469 = !DILocation(line: 431, column: 53, scope: !8454)
!8470 = !DILocation(line: 431, column: 2, scope: !8454)
!8471 = !DILocation(line: 435, column: 2, scope: !8454)
!8472 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1189, file: !1189, line: 438, type: !1079, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8473)
!8473 = !{!8474, !8475, !8476, !8477}
!8474 = !DILocalVariable(name: "dev", arg: 1, scope: !8472, file: !1189, line: 438, type: !1049)
!8475 = !DILocalVariable(name: "pins", arg: 2, scope: !8472, file: !1189, line: 439, type: !1076)
!8476 = !DILocalVariable(name: "cfg", scope: !8472, file: !1189, line: 441, type: !8446)
!8477 = !DILocalVariable(name: "gpio", scope: !8472, file: !1189, line: 442, type: !1122)
!8478 = !DILocation(line: 0, scope: !8472)
!8479 = !DILocation(line: 441, column: 45, scope: !8472)
!8480 = !DILocation(line: 442, column: 44, scope: !8472)
!8481 = !DILocation(line: 448, column: 2, scope: !8472)
!8482 = !DILocation(line: 450, column: 2, scope: !8472)
!8483 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1189, file: !1189, line: 453, type: !1079, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8484)
!8484 = !{!8485, !8486, !8487, !8488}
!8485 = !DILocalVariable(name: "dev", arg: 1, scope: !8483, file: !1189, line: 453, type: !1049)
!8486 = !DILocalVariable(name: "pins", arg: 2, scope: !8483, file: !1189, line: 454, type: !1076)
!8487 = !DILocalVariable(name: "cfg", scope: !8483, file: !1189, line: 456, type: !8446)
!8488 = !DILocalVariable(name: "gpio", scope: !8483, file: !1189, line: 457, type: !1122)
!8489 = !DILocation(line: 0, scope: !8483)
!8490 = !DILocation(line: 456, column: 45, scope: !8483)
!8491 = !DILocation(line: 457, column: 44, scope: !8483)
!8492 = !DILocation(line: 467, column: 2, scope: !8483)
!8493 = !DILocation(line: 470, column: 2, scope: !8483)
!8494 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1189, file: !1189, line: 473, type: !1079, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8495)
!8495 = !{!8496, !8497, !8498, !8499}
!8496 = !DILocalVariable(name: "dev", arg: 1, scope: !8494, file: !1189, line: 473, type: !1049)
!8497 = !DILocalVariable(name: "pins", arg: 2, scope: !8494, file: !1189, line: 474, type: !1076)
!8498 = !DILocalVariable(name: "cfg", scope: !8494, file: !1189, line: 476, type: !8446)
!8499 = !DILocalVariable(name: "gpio", scope: !8494, file: !1189, line: 477, type: !1122)
!8500 = !DILocation(line: 0, scope: !8494)
!8501 = !DILocation(line: 476, column: 45, scope: !8494)
!8502 = !DILocation(line: 477, column: 44, scope: !8494)
!8503 = !DILocation(line: 484, column: 2, scope: !8494)
!8504 = !DILocation(line: 487, column: 2, scope: !8494)
!8505 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1189, file: !1189, line: 594, type: !1085, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8506)
!8506 = !{!8507, !8508, !8509, !8510, !8511, !8512, !8514, !8515, !8516}
!8507 = !DILocalVariable(name: "dev", arg: 1, scope: !8505, file: !1189, line: 594, type: !1049)
!8508 = !DILocalVariable(name: "pin", arg: 2, scope: !8505, file: !1189, line: 595, type: !1064)
!8509 = !DILocalVariable(name: "mode", arg: 3, scope: !8505, file: !1189, line: 596, type: !1023)
!8510 = !DILocalVariable(name: "trig", arg: 4, scope: !8505, file: !1189, line: 597, type: !1029)
!8511 = !DILocalVariable(name: "cfg", scope: !8505, file: !1189, line: 599, type: !8446)
!8512 = !DILocalVariable(name: "data", scope: !8505, file: !1189, line: 600, type: !8513)
!8513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 32)
!8514 = !DILocalVariable(name: "edge", scope: !8505, file: !1189, line: 601, type: !107)
!8515 = !DILocalVariable(name: "err", scope: !8505, file: !1189, line: 602, type: !107)
!8516 = !DILabel(scope: !8505, name: "exit", file: !1189, line: 643)
!8517 = !DILocation(line: 0, scope: !8505)
!8518 = !DILocation(line: 599, column: 45, scope: !8505)
!8519 = !DILocation(line: 604, column: 6, scope: !8505)
!8520 = !DILocation(line: 605, column: 34, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8522, file: !1189, line: 605, column: 7)
!8522 = distinct !DILexicalBlock(scope: !8523, file: !1189, line: 604, column: 38)
!8523 = distinct !DILexicalBlock(scope: !8505, file: !1189, line: 604, column: 6)
!8524 = !DILocation(line: 605, column: 7, scope: !8521)
!8525 = !DILocation(line: 605, column: 47, scope: !8521)
!8526 = !DILocation(line: 605, column: 39, scope: !8521)
!8527 = !DILocation(line: 605, column: 7, scope: !8522)
!8528 = !DILocation(line: 606, column: 4, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8521, file: !1189, line: 605, column: 53)
!8530 = !DILocation(line: 607, column: 4, scope: !8529)
!8531 = !DILocation(line: 608, column: 4, scope: !8529)
!8532 = !DILocation(line: 609, column: 3, scope: !8529)
!8533 = !DILocation(line: 600, column: 38, scope: !8505)
!8534 = !DILocation(line: 620, column: 30, scope: !8535)
!8535 = distinct !DILexicalBlock(scope: !8505, file: !1189, line: 620, column: 6)
!8536 = !DILocation(line: 620, column: 6, scope: !8535)
!8537 = !DILocation(line: 620, column: 57, scope: !8535)
!8538 = !DILocation(line: 620, column: 6, scope: !8505)
!8539 = !DILocation(line: 625, column: 29, scope: !8505)
!8540 = !DILocation(line: 625, column: 2, scope: !8505)
!8541 = !DILocation(line: 627, column: 2, scope: !8505)
!8542 = !DILocation(line: 630, column: 3, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8505, file: !1189, line: 627, column: 16)
!8544 = !DILocation(line: 633, column: 3, scope: !8543)
!8545 = !DILocation(line: 636, column: 3, scope: !8543)
!8546 = !DILocation(line: 639, column: 2, scope: !8505)
!8547 = !DILocation(line: 641, column: 2, scope: !8505)
!8548 = !DILocation(line: 643, column: 1, scope: !8505)
!8549 = !DILocation(line: 644, column: 2, scope: !8505)
!8550 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1189, file: !1189, line: 647, type: !1089, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8551)
!8551 = !{!8552, !8553, !8554, !8555}
!8552 = !DILocalVariable(name: "dev", arg: 1, scope: !8550, file: !1189, line: 647, type: !1049)
!8553 = !DILocalVariable(name: "callback", arg: 2, scope: !8550, file: !1189, line: 648, type: !1091)
!8554 = !DILocalVariable(name: "set", arg: 3, scope: !8550, file: !1189, line: 649, type: !136)
!8555 = !DILocalVariable(name: "data", scope: !8550, file: !1189, line: 651, type: !8513)
!8556 = !DILocation(line: 0, scope: !8550)
!8557 = !DILocation(line: 651, column: 38, scope: !8550)
!8558 = !DILocation(line: 653, column: 37, scope: !8550)
!8559 = !DILocation(line: 653, column: 9, scope: !8550)
!8560 = !DILocation(line: 653, column: 2, scope: !8550)
!8561 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !8562, file: !8562, line: 38, type: !8563, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8566)
!8562 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8563 = !DISubroutineType(types: !8564)
!8564 = !{!107, !8565, !1091, !136}
!8565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 32)
!8566 = !{!8567, !8568, !8569}
!8567 = !DILocalVariable(name: "callbacks", arg: 1, scope: !8561, file: !8562, line: 38, type: !8565)
!8568 = !DILocalVariable(name: "callback", arg: 2, scope: !8561, file: !8562, line: 39, type: !1091)
!8569 = !DILocalVariable(name: "set", arg: 3, scope: !8561, file: !8562, line: 40, type: !136)
!8570 = !DILocation(line: 0, scope: !8561)
!8571 = !DILocation(line: 45, column: 7, scope: !8572)
!8572 = distinct !DILexicalBlock(scope: !8561, file: !8562, line: 45, column: 6)
!8573 = !DILocation(line: 45, column: 6, scope: !8561)
!8574 = !DILocation(line: 46, column: 56, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8576, file: !8562, line: 46, column: 7)
!8576 = distinct !DILexicalBlock(scope: !8572, file: !8562, line: 45, column: 38)
!8577 = !DILocation(line: 46, column: 8, scope: !8575)
!8578 = !DILocation(line: 46, column: 7, scope: !8576)
!8579 = !DILocation(line: 51, column: 13, scope: !8572)
!8580 = !DILocation(line: 56, column: 43, scope: !8581)
!8581 = distinct !DILexicalBlock(scope: !8582, file: !8562, line: 55, column: 11)
!8582 = distinct !DILexicalBlock(scope: !8561, file: !8562, line: 55, column: 6)
!8583 = !DILocation(line: 56, column: 3, scope: !8581)
!8584 = !DILocation(line: 57, column: 2, scope: !8581)
!8585 = !DILocation(line: 60, column: 1, scope: !8561)
!8586 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1096, file: !1096, line: 261, type: !8587, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8589)
!8587 = !DISubroutineType(types: !8588)
!8588 = !{!136, !8565}
!8589 = !{!8590}
!8590 = !DILocalVariable(name: "list", arg: 1, scope: !8586, file: !1096, line: 261, type: !8565)
!8591 = !DILocation(line: 0, scope: !8586)
!8592 = !DILocation(line: 261, column: 1, scope: !8586)
!8593 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1096, file: !1096, line: 417, type: !8594, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8596)
!8594 = !DISubroutineType(types: !8595)
!8595 = !{!136, !8565, !1268}
!8596 = !{!8597, !8598, !8599, !8600}
!8597 = !DILocalVariable(name: "list", arg: 1, scope: !8593, file: !1096, line: 417, type: !8565)
!8598 = !DILocalVariable(name: "node", arg: 2, scope: !8593, file: !1096, line: 417, type: !1268)
!8599 = !DILocalVariable(name: "prev", scope: !8593, file: !1096, line: 417, type: !1268)
!8600 = !DILocalVariable(name: "test", scope: !8593, file: !1096, line: 417, type: !1268)
!8601 = !DILocation(line: 0, scope: !8593)
!8602 = !DILocation(line: 417, column: 1, scope: !8603)
!8603 = distinct !DILexicalBlock(scope: !8593, file: !1096, line: 417, column: 1)
!8604 = !DILocation(line: 417, column: 1, scope: !8605)
!8605 = distinct !DILexicalBlock(scope: !8603, file: !1096, line: 417, column: 1)
!8606 = !DILocation(line: 417, column: 1, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !8608, file: !1096, line: 417, column: 1)
!8608 = distinct !DILexicalBlock(scope: !8605, file: !1096, line: 417, column: 1)
!8609 = !DILocation(line: 417, column: 1, scope: !8608)
!8610 = distinct !{!8610, !8602, !8602}
!8611 = !DILocation(line: 417, column: 1, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8607, file: !1096, line: 417, column: 1)
!8613 = !DILocation(line: 417, column: 1, scope: !8593)
!8614 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1096, file: !1096, line: 298, type: !8615, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8617)
!8615 = !DISubroutineType(types: !8616)
!8616 = !{null, !8565, !1268}
!8617 = !{!8618, !8619}
!8618 = !DILocalVariable(name: "list", arg: 1, scope: !8614, file: !1096, line: 298, type: !8565)
!8619 = !DILocalVariable(name: "node", arg: 2, scope: !8614, file: !1096, line: 298, type: !1268)
!8620 = !DILocation(line: 0, scope: !8614)
!8621 = !DILocation(line: 298, column: 1, scope: !8614)
!8622 = !DILocation(line: 298, column: 1, scope: !8623)
!8623 = distinct !DILexicalBlock(scope: !8614, file: !1096, line: 298, column: 1)
!8624 = !DILocation(line: 298, column: 1, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8623, file: !1096, line: 298, column: 1)
!8626 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1096, file: !1096, line: 231, type: !8627, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8629)
!8627 = !DISubroutineType(types: !8628)
!8628 = !{!1268, !8565}
!8629 = !{!8630}
!8630 = !DILocalVariable(name: "list", arg: 1, scope: !8626, file: !1096, line: 231, type: !8565)
!8631 = !DILocation(line: 0, scope: !8626)
!8632 = !DILocation(line: 233, column: 15, scope: !8626)
!8633 = !DILocation(line: 233, column: 2, scope: !8626)
!8634 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1096, file: !1096, line: 209, type: !8635, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8637)
!8635 = !DISubroutineType(types: !8636)
!8636 = !{null, !1268, !1268}
!8637 = !{!8638, !8639}
!8638 = !DILocalVariable(name: "parent", arg: 1, scope: !8634, file: !1096, line: 209, type: !1268)
!8639 = !DILocalVariable(name: "child", arg: 2, scope: !8634, file: !1096, line: 209, type: !1268)
!8640 = !DILocation(line: 0, scope: !8634)
!8641 = !DILocation(line: 211, column: 10, scope: !8634)
!8642 = !DILocation(line: 211, column: 15, scope: !8634)
!8643 = !DILocation(line: 212, column: 1, scope: !8634)
!8644 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1096, file: !1096, line: 214, type: !8615, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8645)
!8645 = !{!8646, !8647}
!8646 = !DILocalVariable(name: "list", arg: 1, scope: !8644, file: !1096, line: 214, type: !8565)
!8647 = !DILocalVariable(name: "node", arg: 2, scope: !8644, file: !1096, line: 214, type: !1268)
!8648 = !DILocation(line: 0, scope: !8644)
!8649 = !DILocation(line: 216, column: 8, scope: !8644)
!8650 = !DILocation(line: 216, column: 13, scope: !8644)
!8651 = !DILocation(line: 217, column: 1, scope: !8644)
!8652 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1096, file: !1096, line: 243, type: !8627, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8653)
!8653 = !{!8654}
!8654 = !DILocalVariable(name: "list", arg: 1, scope: !8652, file: !1096, line: 243, type: !8565)
!8655 = !DILocation(line: 0, scope: !8652)
!8656 = !DILocation(line: 245, column: 15, scope: !8652)
!8657 = !DILocation(line: 245, column: 2, scope: !8652)
!8658 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1096, file: !1096, line: 219, type: !8615, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8659)
!8659 = !{!8660, !8661}
!8660 = !DILocalVariable(name: "list", arg: 1, scope: !8658, file: !1096, line: 219, type: !8565)
!8661 = !DILocalVariable(name: "node", arg: 2, scope: !8658, file: !1096, line: 219, type: !1268)
!8662 = !DILocation(line: 0, scope: !8658)
!8663 = !DILocation(line: 221, column: 8, scope: !8658)
!8664 = !DILocation(line: 221, column: 13, scope: !8658)
!8665 = !DILocation(line: 222, column: 1, scope: !8658)
!8666 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1096, file: !1096, line: 401, type: !8667, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8669)
!8667 = !DISubroutineType(types: !8668)
!8668 = !{null, !8565, !1268, !1268}
!8669 = !{!8670, !8671, !8672}
!8670 = !DILocalVariable(name: "list", arg: 1, scope: !8666, file: !1096, line: 401, type: !8565)
!8671 = !DILocalVariable(name: "prev_node", arg: 2, scope: !8666, file: !1096, line: 401, type: !1268)
!8672 = !DILocalVariable(name: "node", arg: 3, scope: !8666, file: !1096, line: 401, type: !1268)
!8673 = !DILocation(line: 0, scope: !8666)
!8674 = !DILocation(line: 401, column: 1, scope: !8675)
!8675 = distinct !DILexicalBlock(scope: !8666, file: !1096, line: 401, column: 1)
!8676 = !DILocation(line: 0, scope: !8675)
!8677 = !DILocation(line: 401, column: 1, scope: !8666)
!8678 = !DILocation(line: 401, column: 1, scope: !8679)
!8679 = distinct !DILexicalBlock(scope: !8675, file: !1096, line: 401, column: 1)
!8680 = !DILocation(line: 401, column: 1, scope: !8681)
!8681 = distinct !DILexicalBlock(scope: !8679, file: !1096, line: 401, column: 1)
!8682 = !DILocation(line: 401, column: 1, scope: !8683)
!8683 = distinct !DILexicalBlock(scope: !8681, file: !1096, line: 401, column: 1)
!8684 = !DILocation(line: 401, column: 1, scope: !8685)
!8685 = distinct !DILexicalBlock(scope: !8675, file: !1096, line: 401, column: 1)
!8686 = !DILocation(line: 401, column: 1, scope: !8687)
!8687 = distinct !DILexicalBlock(scope: !8685, file: !1096, line: 401, column: 1)
!8688 = !DILocation(line: 401, column: 1, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8687, file: !1096, line: 401, column: 1)
!8690 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1096, file: !1096, line: 285, type: !8691, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8693)
!8691 = !DISubroutineType(types: !8692)
!8692 = !{!1268, !1268}
!8693 = !{!8694}
!8694 = !DILocalVariable(name: "node", arg: 1, scope: !8690, file: !1096, line: 285, type: !1268)
!8695 = !DILocation(line: 0, scope: !8690)
!8696 = !DILocation(line: 285, column: 1, scope: !8690)
!8697 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1096, file: !1096, line: 274, type: !8691, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8698)
!8698 = !{!8699}
!8699 = !DILocalVariable(name: "node", arg: 1, scope: !8697, file: !1096, line: 274, type: !1268)
!8700 = !DILocation(line: 0, scope: !8697)
!8701 = !DILocation(line: 274, column: 1, scope: !8697)
!8702 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1096, file: !1096, line: 204, type: !8691, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8703)
!8703 = !{!8704}
!8704 = !DILocalVariable(name: "node", arg: 1, scope: !8702, file: !1096, line: 204, type: !1268)
!8705 = !DILocation(line: 0, scope: !8702)
!8706 = !DILocation(line: 206, column: 15, scope: !8702)
!8707 = !DILocation(line: 206, column: 2, scope: !8702)
!8708 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1189, file: !1189, line: 342, type: !270, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8709)
!8709 = !{!8710, !8711, !8712}
!8710 = !DILocalVariable(name: "pin", arg: 1, scope: !8708, file: !1189, line: 342, type: !107)
!8711 = !DILocalVariable(name: "line", scope: !8708, file: !1189, line: 344, type: !162)
!8712 = !DILocalVariable(name: "port", scope: !8708, file: !1189, line: 345, type: !107)
!8713 = !DILocation(line: 0, scope: !8708)
!8714 = !DILocation(line: 344, column: 18, scope: !8708)
!8715 = !{i32 983040, i32 0}
!8716 = !DILocation(line: 356, column: 9, scope: !8708)
!8717 = !DILocation(line: 370, column: 2, scope: !8708)
!8718 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1189, file: !1189, line: 37, type: !711, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8719)
!8719 = !{!8720, !8721, !8722}
!8720 = !DILocalVariable(name: "line", arg: 1, scope: !8718, file: !1189, line: 37, type: !107)
!8721 = !DILocalVariable(name: "arg", arg: 2, scope: !8718, file: !1189, line: 37, type: !102)
!8722 = !DILocalVariable(name: "data", scope: !8718, file: !1189, line: 39, type: !8513)
!8723 = !DILocation(line: 0, scope: !8718)
!8724 = !DILocation(line: 41, column: 29, scope: !8718)
!8725 = !DILocation(line: 41, column: 39, scope: !8718)
!8726 = !DILocation(line: 41, column: 44, scope: !8718)
!8727 = !DILocation(line: 41, column: 2, scope: !8718)
!8728 = !DILocation(line: 42, column: 1, scope: !8718)
!8729 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1189, file: !1189, line: 376, type: !8730, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8732)
!8730 = !DISubroutineType(types: !8731)
!8731 = !{!107, !107, !107}
!8732 = !{!8733, !8734, !8735, !8737, !8738}
!8733 = !DILocalVariable(name: "port", arg: 1, scope: !8729, file: !1189, line: 376, type: !107)
!8734 = !DILocalVariable(name: "pin", arg: 2, scope: !8729, file: !1189, line: 376, type: !107)
!8735 = !DILocalVariable(name: "clk", scope: !8729, file: !1189, line: 386, type: !8736)
!8736 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1049)
!8737 = !DILocalVariable(name: "pclken", scope: !8729, file: !1189, line: 387, type: !1315)
!8738 = !DILocalVariable(name: "ret", scope: !8729, file: !1189, line: 396, type: !107)
!8739 = !DILocation(line: 0, scope: !8729)
!8740 = !DILocation(line: 387, column: 2, scope: !8729)
!8741 = !DILocation(line: 387, column: 22, scope: !8729)
!8742 = !DILocation(line: 399, column: 8, scope: !8729)
!8743 = !DILocation(line: 400, column: 10, scope: !8744)
!8744 = distinct !DILexicalBlock(scope: !8729, file: !1189, line: 400, column: 6)
!8745 = !DILocation(line: 400, column: 6, scope: !8729)
!8746 = !DILocation(line: 405, column: 2, scope: !8729)
!8747 = !DILocation(line: 407, column: 2, scope: !8729)
!8748 = !DILocation(line: 408, column: 1, scope: !8729)
!8749 = distinct !DISubprogram(name: "clock_control_on", scope: !800, file: !800, line: 123, type: !1154, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8750)
!8750 = !{!8751, !8752, !8753}
!8751 = !DILocalVariable(name: "dev", arg: 1, scope: !8749, file: !800, line: 123, type: !1049)
!8752 = !DILocalVariable(name: "sys", arg: 2, scope: !8749, file: !800, line: 124, type: !892)
!8753 = !DILocalVariable(name: "api", scope: !8749, file: !800, line: 126, type: !1147)
!8754 = !DILocation(line: 0, scope: !8749)
!8755 = !DILocation(line: 127, column: 49, scope: !8749)
!8756 = !DILocation(line: 129, column: 14, scope: !8749)
!8757 = !DILocation(line: 129, column: 9, scope: !8749)
!8758 = !DILocation(line: 129, column: 2, scope: !8749)
!8759 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1189, file: !1189, line: 311, type: !7880, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8760)
!8760 = !{!8761, !8762, !8763}
!8761 = !DILocalVariable(name: "port", arg: 1, scope: !8759, file: !1189, line: 311, type: !107)
!8762 = !DILocalVariable(name: "pin", arg: 2, scope: !8759, file: !1189, line: 311, type: !107)
!8763 = !DILocalVariable(name: "line", scope: !8759, file: !1189, line: 313, type: !162)
!8764 = !DILocation(line: 0, scope: !8759)
!8765 = !DILocation(line: 313, column: 18, scope: !8759)
!8766 = !DILocation(line: 337, column: 2, scope: !8759)
!8767 = !DILocation(line: 340, column: 1, scope: !8759)
!8768 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1189, file: !1189, line: 295, type: !8769, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8771)
!8769 = !DISubroutineType(types: !8770)
!8770 = !{!162, !107}
!8771 = !{!8772}
!8772 = !DILocalVariable(name: "pin", arg: 1, scope: !8768, file: !1189, line: 295, type: !107)
!8773 = !DILocation(line: 0, scope: !8768)
!8774 = !DILocation(line: 307, column: 46, scope: !8768)
!8775 = !DILocation(line: 307, column: 27, scope: !8768)
!8776 = !DILocation(line: 307, column: 32, scope: !8768)
!8777 = !DILocation(line: 307, column: 14, scope: !8768)
!8778 = !DILocation(line: 307, column: 39, scope: !8768)
!8779 = !DILocation(line: 307, column: 2, scope: !8768)
!8780 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !5934, file: !5934, line: 671, type: !8781, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8783)
!8781 = !DISubroutineType(types: !8782)
!8782 = !{null, !162, !162}
!8783 = !{!8784, !8785}
!8784 = !DILocalVariable(name: "Port", arg: 1, scope: !8780, file: !5934, line: 671, type: !162)
!8785 = !DILocalVariable(name: "Line", arg: 2, scope: !8780, file: !5934, line: 671, type: !162)
!8786 = !DILocation(line: 0, scope: !8780)
!8787 = !DILocation(line: 673, column: 3, scope: !8780)
!8788 = !DILocalVariable(name: "value", arg: 1, scope: !8789, file: !6087, line: 373, type: !162)
!8789 = distinct !DISubprogram(name: "__RBIT", scope: !6087, file: !6087, line: 373, type: !7094, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8790)
!8790 = !{!8788, !8791}
!8791 = !DILocalVariable(name: "result", scope: !8789, file: !6087, line: 375, type: !162)
!8792 = !DILocation(line: 0, scope: !8789, inlinedAt: !8793)
!8793 = distinct !DILocation(line: 673, column: 3, scope: !8780)
!8794 = !DILocation(line: 380, column: 4, scope: !8789, inlinedAt: !8793)
!8795 = !{i64 3545658}
!8796 = !DILocalVariable(name: "value", arg: 1, scope: !8797, file: !6087, line: 403, type: !162)
!8797 = distinct !DISubprogram(name: "__CLZ", scope: !6087, file: !6087, line: 403, type: !8798, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8800)
!8798 = !DISubroutineType(types: !8799)
!8799 = !{!133, !162}
!8800 = !{!8796}
!8801 = !DILocation(line: 0, scope: !8797, inlinedAt: !8802)
!8802 = distinct !DILocation(line: 673, column: 3, scope: !8780)
!8803 = !DILocation(line: 414, column: 7, scope: !8797, inlinedAt: !8802)
!8804 = !DILocation(line: 674, column: 1, scope: !8780)
!8805 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !8562, file: !8562, line: 69, type: !8806, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8808)
!8806 = !DISubroutineType(types: !8807)
!8807 = !{null, !8565, !1049, !162}
!8808 = !{!8809, !8810, !8811, !8812, !8813}
!8809 = !DILocalVariable(name: "list", arg: 1, scope: !8805, file: !8562, line: 69, type: !8565)
!8810 = !DILocalVariable(name: "port", arg: 2, scope: !8805, file: !8562, line: 70, type: !1049)
!8811 = !DILocalVariable(name: "pins", arg: 3, scope: !8805, file: !8562, line: 71, type: !162)
!8812 = !DILocalVariable(name: "cb", scope: !8805, file: !8562, line: 73, type: !1091)
!8813 = !DILocalVariable(name: "tmp", scope: !8805, file: !8562, line: 73, type: !1091)
!8814 = !DILocation(line: 0, scope: !8805)
!8815 = !DILocation(line: 75, column: 2, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8805, file: !8562, line: 75, column: 2)
!8817 = !DILocation(line: 0, scope: !8816)
!8818 = !DILocation(line: 76, column: 11, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8820, file: !8562, line: 76, column: 7)
!8820 = distinct !DILexicalBlock(scope: !8821, file: !8562, line: 75, column: 57)
!8821 = distinct !DILexicalBlock(scope: !8816, file: !8562, line: 75, column: 2)
!8822 = !DILocation(line: 76, column: 20, scope: !8819)
!8823 = !DILocation(line: 76, column: 7, scope: !8820)
!8824 = !DILocation(line: 78, column: 8, scope: !8825)
!8825 = distinct !DILexicalBlock(scope: !8819, file: !8562, line: 76, column: 28)
!8826 = !DILocation(line: 78, column: 4, scope: !8825)
!8827 = !DILocation(line: 79, column: 3, scope: !8825)
!8828 = !DILocation(line: 75, column: 2, scope: !8821)
!8829 = !DILocation(line: 81, column: 1, scope: !8805)
!8830 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !5934, file: !5934, line: 710, type: !7094, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8831)
!8831 = !{!8832}
!8832 = !DILocalVariable(name: "Line", arg: 1, scope: !8830, file: !5934, line: 710, type: !162)
!8833 = !DILocation(line: 0, scope: !8830)
!8834 = !DILocation(line: 712, column: 21, scope: !8830)
!8835 = !DILocation(line: 0, scope: !8789, inlinedAt: !8836)
!8836 = distinct !DILocation(line: 712, column: 76, scope: !8830)
!8837 = !DILocation(line: 380, column: 4, scope: !8789, inlinedAt: !8836)
!8838 = !DILocation(line: 0, scope: !8797, inlinedAt: !8839)
!8839 = distinct !DILocation(line: 712, column: 76, scope: !8830)
!8840 = !DILocation(line: 414, column: 7, scope: !8797, inlinedAt: !8839)
!8841 = !DILocation(line: 712, column: 73, scope: !8830)
!8842 = !DILocation(line: 712, column: 3, scope: !8830)
!8843 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !8844, file: !8844, line: 910, type: !8845, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8847)
!8844 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8845 = !DISubroutineType(types: !8846)
!8846 = !{null, !1122, !162}
!8847 = !{!8848, !8849}
!8848 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8843, file: !8844, line: 910, type: !1122)
!8849 = !DILocalVariable(name: "PinMask", arg: 2, scope: !8843, file: !8844, line: 910, type: !162)
!8850 = !DILocation(line: 0, scope: !8843)
!8851 = !DILocation(line: 912, column: 3, scope: !8843)
!8852 = !DILocation(line: 913, column: 1, scope: !8843)
!8853 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !8844, file: !8844, line: 823, type: !8854, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8856)
!8854 = !DISubroutineType(types: !8855)
!8855 = !{!162, !1122}
!8856 = !{!8857}
!8857 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8853, file: !8844, line: 823, type: !1122)
!8858 = !DILocation(line: 0, scope: !8853)
!8859 = !DILocation(line: 825, column: 21, scope: !8853)
!8860 = !DILocation(line: 825, column: 3, scope: !8853)
!8861 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !8844, file: !8844, line: 812, type: !8845, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8862)
!8862 = !{!8863, !8864}
!8863 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8861, file: !8844, line: 812, type: !1122)
!8864 = !DILocalVariable(name: "PortValue", arg: 2, scope: !8861, file: !8844, line: 812, type: !162)
!8865 = !DILocation(line: 0, scope: !8861)
!8866 = !DILocation(line: 814, column: 3, scope: !8861)
!8867 = !DILocation(line: 815, column: 1, scope: !8861)
!8868 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !8844, file: !8844, line: 771, type: !8854, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8869)
!8869 = !{!8870}
!8870 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8868, file: !8844, line: 771, type: !1122)
!8871 = !DILocation(line: 0, scope: !8868)
!8872 = !DILocation(line: 773, column: 21, scope: !8868)
!8873 = !DILocation(line: 773, column: 3, scope: !8868)
!8874 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1189, file: !1189, line: 47, type: !8875, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8877)
!8875 = !DISubroutineType(types: !8876)
!8876 = !{!107, !1065, !2488}
!8877 = !{!8878, !8879}
!8878 = !DILocalVariable(name: "flags", arg: 1, scope: !8874, file: !1189, line: 47, type: !1065)
!8879 = !DILocalVariable(name: "pincfg", arg: 2, scope: !8874, file: !1189, line: 47, type: !2488)
!8880 = !DILocation(line: 0, scope: !8874)
!8881 = !DILocation(line: 50, column: 13, scope: !8882)
!8882 = distinct !DILexicalBlock(scope: !8874, file: !1189, line: 50, column: 6)
!8883 = !DILocation(line: 50, column: 28, scope: !8882)
!8884 = !DILocation(line: 50, column: 6, scope: !8874)
!8885 = !DILocation(line: 53, column: 11, scope: !8886)
!8886 = distinct !DILexicalBlock(scope: !8882, file: !1189, line: 50, column: 34)
!8887 = !DILocation(line: 55, column: 14, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8886, file: !1189, line: 55, column: 7)
!8889 = !DILocation(line: 55, column: 35, scope: !8888)
!8890 = !DILocation(line: 55, column: 7, scope: !8886)
!8891 = !DILocation(line: 56, column: 14, scope: !8892)
!8892 = distinct !DILexicalBlock(scope: !8893, file: !1189, line: 56, column: 8)
!8893 = distinct !DILexicalBlock(scope: !8888, file: !1189, line: 55, column: 41)
!8894 = !DILocation(line: 56, column: 8, scope: !8893)
!8895 = !DILocation(line: 0, scope: !8888)
!8896 = !DILocation(line: 66, column: 14, scope: !8897)
!8897 = distinct !DILexicalBlock(scope: !8886, file: !1189, line: 66, column: 7)
!8898 = !DILocation(line: 66, column: 30, scope: !8897)
!8899 = !DILocation(line: 66, column: 7, scope: !8886)
!8900 = !DILocation(line: 67, column: 12, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8897, file: !1189, line: 66, column: 36)
!8902 = !DILocation(line: 68, column: 3, scope: !8901)
!8903 = !DILocation(line: 68, column: 21, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8897, file: !1189, line: 68, column: 14)
!8905 = !DILocation(line: 68, column: 39, scope: !8904)
!8906 = !DILocation(line: 68, column: 14, scope: !8897)
!8907 = !DILocation(line: 69, column: 12, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8904, file: !1189, line: 68, column: 45)
!8909 = !DILocation(line: 70, column: 3, scope: !8908)
!8910 = !DILocation(line: 72, column: 21, scope: !8911)
!8911 = distinct !DILexicalBlock(scope: !8882, file: !1189, line: 72, column: 14)
!8912 = !DILocation(line: 72, column: 35, scope: !8911)
!8913 = !DILocation(line: 72, column: 14, scope: !8882)
!8914 = !DILocation(line: 77, column: 14, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8916, file: !1189, line: 77, column: 7)
!8916 = distinct !DILexicalBlock(scope: !8911, file: !1189, line: 72, column: 41)
!8917 = !DILocation(line: 77, column: 30, scope: !8915)
!8918 = !DILocation(line: 77, column: 7, scope: !8916)
!8919 = !DILocation(line: 0, scope: !8882)
!8920 = !DILocation(line: 90, column: 1, scope: !8874)
!8921 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1189, file: !1189, line: 157, type: !8922, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8924)
!8922 = !DISubroutineType(types: !8923)
!8923 = !{null, !1049, !107, !107, !107}
!8924 = !{!8925, !8926, !8927, !8928, !8929, !8930, !8931, !8932, !8933, !8934, !8935}
!8925 = !DILocalVariable(name: "dev", arg: 1, scope: !8921, file: !1189, line: 157, type: !1049)
!8926 = !DILocalVariable(name: "pin", arg: 2, scope: !8921, file: !1189, line: 157, type: !107)
!8927 = !DILocalVariable(name: "conf", arg: 3, scope: !8921, file: !1189, line: 158, type: !107)
!8928 = !DILocalVariable(name: "func", arg: 4, scope: !8921, file: !1189, line: 158, type: !107)
!8929 = !DILocalVariable(name: "cfg", scope: !8921, file: !1189, line: 160, type: !8446)
!8930 = !DILocalVariable(name: "gpio", scope: !8921, file: !1189, line: 161, type: !1122)
!8931 = !DILocalVariable(name: "pin_ll", scope: !8921, file: !1189, line: 163, type: !107)
!8932 = !DILocalVariable(name: "mode", scope: !8921, file: !1189, line: 227, type: !32)
!8933 = !DILocalVariable(name: "otype", scope: !8921, file: !1189, line: 227, type: !32)
!8934 = !DILocalVariable(name: "ospeed", scope: !8921, file: !1189, line: 227, type: !32)
!8935 = !DILocalVariable(name: "pupd", scope: !8921, file: !1189, line: 227, type: !32)
!8936 = !DILocation(line: 0, scope: !8921)
!8937 = !DILocation(line: 160, column: 45, scope: !8921)
!8938 = !DILocation(line: 161, column: 44, scope: !8921)
!8939 = !DILocation(line: 163, column: 15, scope: !8921)
!8940 = !DILocation(line: 229, column: 14, scope: !8921)
!8941 = !DILocation(line: 246, column: 47, scope: !8921)
!8942 = !DILocation(line: 246, column: 2, scope: !8921)
!8943 = !DILocation(line: 248, column: 43, scope: !8921)
!8944 = !DILocation(line: 248, column: 2, scope: !8921)
!8945 = !DILocation(line: 250, column: 40, scope: !8921)
!8946 = !DILocation(line: 250, column: 2, scope: !8921)
!8947 = !DILocation(line: 252, column: 11, scope: !8948)
!8948 = distinct !DILexicalBlock(scope: !8921, file: !1189, line: 252, column: 6)
!8949 = !DILocation(line: 252, column: 6, scope: !8921)
!8950 = !DILocation(line: 253, column: 11, scope: !8951)
!8951 = distinct !DILexicalBlock(scope: !8952, file: !1189, line: 253, column: 7)
!8952 = distinct !DILexicalBlock(scope: !8948, file: !1189, line: 252, column: 36)
!8953 = !DILocation(line: 253, column: 7, scope: !8952)
!8954 = !DILocation(line: 254, column: 4, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8951, file: !1189, line: 253, column: 16)
!8956 = !DILocation(line: 255, column: 3, scope: !8955)
!8957 = !DILocation(line: 256, column: 4, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8951, file: !1189, line: 255, column: 10)
!8959 = !DILocation(line: 260, column: 40, scope: !8921)
!8960 = !DILocation(line: 260, column: 2, scope: !8921)
!8961 = !DILocation(line: 265, column: 1, scope: !8921)
!8962 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1189, file: !1189, line: 137, type: !8769, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8963)
!8963 = !{!8964, !8965}
!8964 = !DILocalVariable(name: "pin", arg: 1, scope: !8962, file: !1189, line: 137, type: !107)
!8965 = !DILocalVariable(name: "pinval", scope: !8962, file: !1189, line: 139, type: !162)
!8966 = !DILocation(line: 0, scope: !8962)
!8967 = !DILocation(line: 149, column: 13, scope: !8962)
!8968 = !DILocation(line: 151, column: 2, scope: !8962)
!8969 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !8844, file: !8844, line: 342, type: !8970, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8972)
!8970 = !DISubroutineType(types: !8971)
!8971 = !{null, !1122, !162, !162}
!8972 = !{!8973, !8974, !8975}
!8973 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8969, file: !8844, line: 342, type: !1122)
!8974 = !DILocalVariable(name: "PinMask", arg: 2, scope: !8969, file: !8844, line: 342, type: !162)
!8975 = !DILocalVariable(name: "OutputType", arg: 3, scope: !8969, file: !8844, line: 342, type: !162)
!8976 = !DILocation(line: 0, scope: !8969)
!8977 = !DILocation(line: 344, column: 3, scope: !8969)
!8978 = !DILocation(line: 345, column: 1, scope: !8969)
!8979 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !8844, file: !8844, line: 413, type: !8970, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8980)
!8980 = !{!8981, !8982, !8983}
!8981 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8979, file: !8844, line: 413, type: !1122)
!8982 = !DILocalVariable(name: "Pin", arg: 2, scope: !8979, file: !8844, line: 413, type: !162)
!8983 = !DILocalVariable(name: "Speed", arg: 3, scope: !8979, file: !8844, line: 413, type: !162)
!8984 = !DILocation(line: 0, scope: !8979)
!8985 = !DILocation(line: 415, column: 3, scope: !8979)
!8986 = !DILocation(line: 0, scope: !8789, inlinedAt: !8987)
!8987 = distinct !DILocation(line: 415, column: 3, scope: !8979)
!8988 = !DILocation(line: 380, column: 4, scope: !8789, inlinedAt: !8987)
!8989 = !DILocation(line: 0, scope: !8797, inlinedAt: !8990)
!8990 = distinct !DILocation(line: 415, column: 3, scope: !8979)
!8991 = !DILocation(line: 414, column: 7, scope: !8797, inlinedAt: !8990)
!8992 = !DILocation(line: 0, scope: !8789, inlinedAt: !8993)
!8993 = distinct !DILocation(line: 415, column: 3, scope: !8979)
!8994 = !DILocation(line: 0, scope: !8797, inlinedAt: !8995)
!8995 = distinct !DILocation(line: 415, column: 3, scope: !8979)
!8996 = !DILocation(line: 417, column: 1, scope: !8979)
!8997 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !8844, file: !8844, line: 484, type: !8970, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !8998)
!8998 = !{!8999, !9000, !9001}
!8999 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8997, file: !8844, line: 484, type: !1122)
!9000 = !DILocalVariable(name: "Pin", arg: 2, scope: !8997, file: !8844, line: 484, type: !162)
!9001 = !DILocalVariable(name: "Pull", arg: 3, scope: !8997, file: !8844, line: 484, type: !162)
!9002 = !DILocation(line: 0, scope: !8997)
!9003 = !DILocation(line: 486, column: 3, scope: !8997)
!9004 = !DILocation(line: 0, scope: !8789, inlinedAt: !9005)
!9005 = distinct !DILocation(line: 486, column: 3, scope: !8997)
!9006 = !DILocation(line: 380, column: 4, scope: !8789, inlinedAt: !9005)
!9007 = !DILocation(line: 0, scope: !8797, inlinedAt: !9008)
!9008 = distinct !DILocation(line: 486, column: 3, scope: !8997)
!9009 = !DILocation(line: 414, column: 7, scope: !8797, inlinedAt: !9008)
!9010 = !DILocation(line: 0, scope: !8789, inlinedAt: !9011)
!9011 = distinct !DILocation(line: 486, column: 3, scope: !8997)
!9012 = !DILocation(line: 0, scope: !8797, inlinedAt: !9013)
!9013 = distinct !DILocation(line: 486, column: 3, scope: !8997)
!9014 = !DILocation(line: 487, column: 1, scope: !8997)
!9015 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !8844, file: !8844, line: 556, type: !8970, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !9016)
!9016 = !{!9017, !9018, !9019}
!9017 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9015, file: !8844, line: 556, type: !1122)
!9018 = !DILocalVariable(name: "Pin", arg: 2, scope: !9015, file: !8844, line: 556, type: !162)
!9019 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9015, file: !8844, line: 556, type: !162)
!9020 = !DILocation(line: 0, scope: !9015)
!9021 = !DILocation(line: 558, column: 3, scope: !9015)
!9022 = !DILocation(line: 0, scope: !8789, inlinedAt: !9023)
!9023 = distinct !DILocation(line: 558, column: 3, scope: !9015)
!9024 = !DILocation(line: 380, column: 4, scope: !8789, inlinedAt: !9023)
!9025 = !DILocation(line: 0, scope: !8797, inlinedAt: !9026)
!9026 = distinct !DILocation(line: 558, column: 3, scope: !9015)
!9027 = !DILocation(line: 414, column: 7, scope: !8797, inlinedAt: !9026)
!9028 = !DILocation(line: 0, scope: !8789, inlinedAt: !9029)
!9029 = distinct !DILocation(line: 558, column: 3, scope: !9015)
!9030 = !DILocation(line: 0, scope: !8797, inlinedAt: !9031)
!9031 = distinct !DILocation(line: 558, column: 3, scope: !9015)
!9032 = !DILocation(line: 560, column: 1, scope: !9015)
!9033 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !8844, file: !8844, line: 633, type: !8970, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !9034)
!9034 = !{!9035, !9036, !9037}
!9035 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9033, file: !8844, line: 633, type: !1122)
!9036 = !DILocalVariable(name: "Pin", arg: 2, scope: !9033, file: !8844, line: 633, type: !162)
!9037 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9033, file: !8844, line: 633, type: !162)
!9038 = !DILocation(line: 0, scope: !9033)
!9039 = !DILocation(line: 635, column: 3, scope: !9033)
!9040 = !DILocation(line: 0, scope: !8789, inlinedAt: !9041)
!9041 = distinct !DILocation(line: 635, column: 3, scope: !9033)
!9042 = !DILocation(line: 380, column: 4, scope: !8789, inlinedAt: !9041)
!9043 = !DILocation(line: 0, scope: !8797, inlinedAt: !9044)
!9044 = distinct !DILocation(line: 635, column: 3, scope: !9033)
!9045 = !DILocation(line: 414, column: 7, scope: !8797, inlinedAt: !9044)
!9046 = !DILocation(line: 0, scope: !8789, inlinedAt: !9047)
!9047 = distinct !DILocation(line: 635, column: 3, scope: !9033)
!9048 = !DILocation(line: 0, scope: !8797, inlinedAt: !9049)
!9049 = distinct !DILocation(line: 635, column: 3, scope: !9033)
!9050 = !DILocation(line: 637, column: 1, scope: !9033)
!9051 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !8844, file: !8844, line: 273, type: !8970, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !9052)
!9052 = !{!9053, !9054, !9055}
!9053 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9051, file: !8844, line: 273, type: !1122)
!9054 = !DILocalVariable(name: "Pin", arg: 2, scope: !9051, file: !8844, line: 273, type: !162)
!9055 = !DILocalVariable(name: "Mode", arg: 3, scope: !9051, file: !8844, line: 273, type: !162)
!9056 = !DILocation(line: 0, scope: !9051)
!9057 = !DILocation(line: 275, column: 3, scope: !9051)
!9058 = !DILocation(line: 0, scope: !8789, inlinedAt: !9059)
!9059 = distinct !DILocation(line: 275, column: 3, scope: !9051)
!9060 = !DILocation(line: 380, column: 4, scope: !8789, inlinedAt: !9059)
!9061 = !DILocation(line: 0, scope: !8797, inlinedAt: !9062)
!9062 = distinct !DILocation(line: 275, column: 3, scope: !9051)
!9063 = !DILocation(line: 414, column: 7, scope: !8797, inlinedAt: !9062)
!9064 = !DILocation(line: 0, scope: !8789, inlinedAt: !9065)
!9065 = distinct !DILocation(line: 275, column: 3, scope: !9051)
!9066 = !DILocation(line: 0, scope: !8797, inlinedAt: !9067)
!9067 = distinct !DILocation(line: 275, column: 3, scope: !9051)
!9068 = !DILocation(line: 276, column: 1, scope: !9051)
!9069 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1189, file: !1189, line: 698, type: !1202, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !9070)
!9070 = !{!9071, !9072, !9073}
!9071 = !DILocalVariable(name: "dev", arg: 1, scope: !9069, file: !1189, line: 698, type: !1049)
!9072 = !DILocalVariable(name: "data", scope: !9069, file: !1189, line: 700, type: !8513)
!9073 = !DILocalVariable(name: "ret", scope: !9069, file: !1189, line: 701, type: !107)
!9074 = !DILocation(line: 0, scope: !9069)
!9075 = !DILocation(line: 700, column: 38, scope: !9069)
!9076 = !DILocation(line: 703, column: 8, scope: !9069)
!9077 = !DILocation(line: 703, column: 12, scope: !9069)
!9078 = !DILocation(line: 705, column: 7, scope: !9079)
!9079 = distinct !DILexicalBlock(scope: !9069, file: !1189, line: 705, column: 6)
!9080 = !DILocation(line: 705, column: 6, scope: !9069)
!9081 = !DILocation(line: 722, column: 8, scope: !9069)
!9082 = !DILocation(line: 723, column: 10, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9069, file: !1189, line: 723, column: 6)
!9084 = !DILocation(line: 723, column: 6, scope: !9069)
!9085 = !DILocation(line: 731, column: 1, scope: !9069)
!9086 = distinct !DISubprogram(name: "device_is_ready", scope: !3420, file: !3420, line: 47, type: !9087, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !9089)
!9087 = !DISubroutineType(types: !9088)
!9088 = !{!136, !1049}
!9089 = !{!9090}
!9090 = !DILocalVariable(name: "dev", arg: 1, scope: !9086, file: !3420, line: 47, type: !1049)
!9091 = !DILocation(line: 0, scope: !9086)
!9092 = !DILocation(line: 55, column: 2, scope: !9093)
!9093 = distinct !DILexicalBlock(scope: !9086, file: !3420, line: 55, column: 2)
!9094 = !{i64 2155034632}
!9095 = !DILocation(line: 56, column: 9, scope: !9086)
!9096 = !DILocation(line: 56, column: 2, scope: !9086)
!9097 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1189, file: !1189, line: 270, type: !9098, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !9100)
!9098 = !DISubroutineType(types: !9099)
!9099 = !{!107, !1049, !136}
!9100 = !{!9101, !9102, !9103, !9104, !9105}
!9101 = !DILocalVariable(name: "dev", arg: 1, scope: !9097, file: !1189, line: 270, type: !1049)
!9102 = !DILocalVariable(name: "on", arg: 2, scope: !9097, file: !1189, line: 270, type: !136)
!9103 = !DILocalVariable(name: "cfg", scope: !9097, file: !1189, line: 272, type: !8446)
!9104 = !DILocalVariable(name: "ret", scope: !9097, file: !1189, line: 273, type: !107)
!9105 = !DILocalVariable(name: "clk", scope: !9097, file: !1189, line: 278, type: !8736)
!9106 = !DILocation(line: 0, scope: !9097)
!9107 = !DILocation(line: 272, column: 45, scope: !9097)
!9108 = !DILocation(line: 282, column: 38, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9110, file: !1189, line: 280, column: 10)
!9110 = distinct !DILexicalBlock(scope: !9097, file: !1189, line: 280, column: 6)
!9111 = !DILocation(line: 282, column: 6, scope: !9109)
!9112 = !DILocation(line: 281, column: 9, scope: !9109)
!9113 = !DILocation(line: 293, column: 1, scope: !9097)
!9114 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !120, file: !120, line: 730, type: !9087, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !9115)
!9115 = !{!9116}
!9116 = !DILocalVariable(name: "dev", arg: 1, scope: !9114, file: !120, line: 730, type: !1049)
!9117 = !DILocation(line: 0, scope: !9114)
!9118 = !DILocation(line: 732, column: 9, scope: !9114)
!9119 = !DILocation(line: 732, column: 2, scope: !9114)
!9120 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1189, file: !1189, line: 496, type: !9121, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !9123)
!9121 = !DISubroutineType(types: !9122)
!9122 = !{!107, !1049, !107, !107, !107}
!9123 = !{!9124, !9125, !9126, !9127, !9128, !9129}
!9124 = !DILocalVariable(name: "dev", arg: 1, scope: !9120, file: !1189, line: 496, type: !1049)
!9125 = !DILocalVariable(name: "pin", arg: 2, scope: !9120, file: !1189, line: 496, type: !107)
!9126 = !DILocalVariable(name: "conf", arg: 3, scope: !9120, file: !1189, line: 496, type: !107)
!9127 = !DILocalVariable(name: "func", arg: 4, scope: !9120, file: !1189, line: 496, type: !107)
!9128 = !DILocalVariable(name: "ret", scope: !9120, file: !1189, line: 498, type: !107)
!9129 = !DILocalVariable(name: "gpio_out", scope: !9130, file: !1189, line: 508, type: !162)
!9130 = distinct !DILexicalBlock(scope: !9131, file: !1189, line: 507, column: 27)
!9131 = distinct !DILexicalBlock(scope: !9120, file: !1189, line: 507, column: 6)
!9132 = !DILocation(line: 0, scope: !9120)
!9133 = !DILocation(line: 505, column: 2, scope: !9120)
!9134 = !DILocation(line: 507, column: 11, scope: !9131)
!9135 = !DILocation(line: 507, column: 6, scope: !9120)
!9136 = !DILocation(line: 508, column: 28, scope: !9130)
!9137 = !DILocation(line: 0, scope: !9130)
!9138 = !DILocation(line: 510, column: 16, scope: !9139)
!9139 = distinct !DILexicalBlock(scope: !9130, file: !1189, line: 510, column: 7)
!9140 = !DILocation(line: 0, scope: !9139)
!9141 = !DILocation(line: 510, column: 7, scope: !9130)
!9142 = !DILocation(line: 511, column: 4, scope: !9143)
!9143 = distinct !DILexicalBlock(scope: !9139, file: !1189, line: 510, column: 32)
!9144 = !DILocation(line: 512, column: 3, scope: !9143)
!9145 = !DILocation(line: 513, column: 4, scope: !9146)
!9146 = distinct !DILexicalBlock(scope: !9147, file: !1189, line: 512, column: 39)
!9147 = distinct !DILexicalBlock(scope: !9139, file: !1189, line: 512, column: 14)
!9148 = !DILocation(line: 514, column: 3, scope: !9146)
!9149 = !DILocation(line: 518, column: 1, scope: !9120)
!9150 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1506, file: !1506, line: 526, type: !1377, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9151)
!9151 = !{!9152, !9153, !9154}
!9152 = !DILocalVariable(name: "dev", arg: 1, scope: !9150, file: !1506, line: 526, type: !1379)
!9153 = !DILocalVariable(name: "c", arg: 2, scope: !9150, file: !1506, line: 526, type: !144)
!9154 = !DILocalVariable(name: "config", scope: !9150, file: !1506, line: 528, type: !9155)
!9155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1580, size: 32)
!9156 = !DILocation(line: 0, scope: !9150)
!9157 = !DILocation(line: 528, column: 48, scope: !9150)
!9158 = !DILocation(line: 531, column: 40, scope: !9159)
!9159 = distinct !DILexicalBlock(scope: !9150, file: !1506, line: 531, column: 6)
!9160 = !DILocation(line: 531, column: 6, scope: !9159)
!9161 = !DILocation(line: 531, column: 6, scope: !9150)
!9162 = !DILocation(line: 532, column: 34, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9159, file: !1506, line: 531, column: 48)
!9164 = !DILocation(line: 532, column: 3, scope: !9163)
!9165 = !DILocation(line: 533, column: 2, scope: !9163)
!9166 = !DILocation(line: 539, column: 42, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9150, file: !1506, line: 539, column: 6)
!9168 = !DILocation(line: 539, column: 7, scope: !9167)
!9169 = !DILocation(line: 539, column: 6, scope: !9150)
!9170 = !DILocation(line: 543, column: 52, scope: !9150)
!9171 = !DILocation(line: 543, column: 22, scope: !9150)
!9172 = !DILocation(line: 543, column: 5, scope: !9150)
!9173 = !DILocation(line: 545, column: 2, scope: !9150)
!9174 = !DILocation(line: 546, column: 1, scope: !9150)
!9175 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1506, file: !1506, line: 548, type: !1396, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9176)
!9176 = !{!9177, !9178, !9179, !9180}
!9177 = !DILocalVariable(name: "dev", arg: 1, scope: !9175, file: !1506, line: 548, type: !1379)
!9178 = !DILocalVariable(name: "c", arg: 2, scope: !9175, file: !1506, line: 549, type: !134)
!9179 = !DILocalVariable(name: "config", scope: !9175, file: !1506, line: 551, type: !9155)
!9180 = !DILocalVariable(name: "key", scope: !9175, file: !1506, line: 555, type: !32)
!9181 = !DILocation(line: 0, scope: !9175)
!9182 = !DILocation(line: 551, column: 48, scope: !9175)
!9183 = !DILocation(line: 562, column: 2, scope: !9175)
!9184 = !DILocation(line: 563, column: 41, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9186, file: !1506, line: 563, column: 7)
!9186 = distinct !DILexicalBlock(scope: !9175, file: !1506, line: 562, column: 12)
!9187 = !DILocation(line: 563, column: 7, scope: !9185)
!9188 = !DILocation(line: 563, column: 7, scope: !9186)
!9189 = !DILocation(line: 55, column: 2, scope: !9190, inlinedAt: !9194)
!9190 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5913, file: !5913, line: 42, type: !5914, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9191)
!9191 = !{!9192, !9193}
!9192 = !DILocalVariable(name: "key", scope: !9190, file: !5913, line: 44, type: !32)
!9193 = !DILocalVariable(name: "tmp", scope: !9190, file: !5913, line: 53, type: !32)
!9194 = distinct !DILocation(line: 564, column: 10, scope: !9195)
!9195 = distinct !DILexicalBlock(scope: !9185, file: !1506, line: 563, column: 49)
!9196 = !{i64 2271329}
!9197 = !DILocation(line: 0, scope: !9190, inlinedAt: !9194)
!9198 = !DILocation(line: 565, column: 42, scope: !9199)
!9199 = distinct !DILexicalBlock(scope: !9195, file: !1506, line: 565, column: 8)
!9200 = !DILocation(line: 565, column: 8, scope: !9199)
!9201 = !DILocation(line: 565, column: 8, scope: !9195)
!9202 = !DILocalVariable(name: "key", arg: 1, scope: !9203, file: !5913, line: 84, type: !32)
!9203 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5913, file: !5913, line: 84, type: !5924, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9204)
!9204 = !{!9202}
!9205 = !DILocation(line: 0, scope: !9203, inlinedAt: !9206)
!9206 = distinct !DILocation(line: 568, column: 4, scope: !9195)
!9207 = !DILocation(line: 95, column: 2, scope: !9203, inlinedAt: !9206)
!9208 = !{i64 2272146}
!9209 = !DILocation(line: 569, column: 3, scope: !9195)
!9210 = distinct !{!9210, !9183, !9211}
!9211 = !DILocation(line: 570, column: 2, scope: !9175)
!9212 = !DILocation(line: 592, column: 33, scope: !9175)
!9213 = !DILocation(line: 592, column: 2, scope: !9175)
!9214 = !DILocation(line: 0, scope: !9203, inlinedAt: !9215)
!9215 = distinct !DILocation(line: 593, column: 2, scope: !9175)
!9216 = !DILocation(line: 95, column: 2, scope: !9203, inlinedAt: !9215)
!9217 = !DILocation(line: 594, column: 1, scope: !9175)
!9218 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1506, file: !1506, line: 596, type: !1400, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9219)
!9219 = !{!9220, !9221, !9222}
!9220 = !DILocalVariable(name: "dev", arg: 1, scope: !9218, file: !1506, line: 596, type: !1379)
!9221 = !DILocalVariable(name: "config", scope: !9218, file: !1506, line: 598, type: !9155)
!9222 = !DILocalVariable(name: "err", scope: !9218, file: !1506, line: 599, type: !162)
!9223 = !DILocation(line: 0, scope: !9218)
!9224 = !DILocation(line: 598, column: 48, scope: !9218)
!9225 = !DILocation(line: 606, column: 40, scope: !9226)
!9226 = distinct !DILexicalBlock(scope: !9218, file: !1506, line: 606, column: 6)
!9227 = !DILocation(line: 606, column: 6, scope: !9226)
!9228 = !DILocation(line: 606, column: 6, scope: !9218)
!9229 = !DILocation(line: 610, column: 39, scope: !9230)
!9230 = distinct !DILexicalBlock(scope: !9218, file: !1506, line: 610, column: 6)
!9231 = !DILocation(line: 610, column: 6, scope: !9230)
!9232 = !DILocation(line: 610, column: 6, scope: !9218)
!9233 = !DILocation(line: 614, column: 39, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !9218, file: !1506, line: 614, column: 6)
!9235 = !DILocation(line: 614, column: 6, scope: !9234)
!9236 = !DILocation(line: 614, column: 6, scope: !9218)
!9237 = !DILocation(line: 619, column: 40, scope: !9238)
!9238 = distinct !DILexicalBlock(scope: !9218, file: !1506, line: 619, column: 6)
!9239 = !DILocation(line: 619, column: 6, scope: !9238)
!9240 = !DILocation(line: 619, column: 6, scope: !9218)
!9241 = !DILocation(line: 623, column: 10, scope: !9242)
!9242 = distinct !DILexicalBlock(scope: !9218, file: !1506, line: 623, column: 6)
!9243 = !DILocation(line: 623, column: 6, scope: !9218)
!9244 = !DILocation(line: 624, column: 34, scope: !9245)
!9245 = distinct !DILexicalBlock(scope: !9242, file: !1506, line: 623, column: 24)
!9246 = !DILocation(line: 624, column: 3, scope: !9245)
!9247 = !DILocation(line: 625, column: 2, scope: !9245)
!9248 = !DILocation(line: 632, column: 10, scope: !9249)
!9249 = distinct !DILexicalBlock(scope: !9218, file: !1506, line: 632, column: 6)
!9250 = !DILocation(line: 632, column: 6, scope: !9218)
!9251 = !DILocation(line: 633, column: 34, scope: !9252)
!9252 = distinct !DILexicalBlock(scope: !9249, file: !1506, line: 632, column: 32)
!9253 = !DILocation(line: 633, column: 3, scope: !9252)
!9254 = !DILocation(line: 634, column: 2, scope: !9252)
!9255 = !DILocation(line: 636, column: 10, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !9218, file: !1506, line: 636, column: 6)
!9257 = !DILocation(line: 636, column: 6, scope: !9218)
!9258 = !DILocation(line: 637, column: 33, scope: !9259)
!9259 = distinct !DILexicalBlock(scope: !9256, file: !1506, line: 636, column: 31)
!9260 = !DILocation(line: 637, column: 3, scope: !9259)
!9261 = !DILocation(line: 638, column: 2, scope: !9259)
!9262 = !DILocation(line: 640, column: 10, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !9218, file: !1506, line: 640, column: 6)
!9264 = !DILocation(line: 640, column: 6, scope: !9218)
!9265 = !DILocation(line: 641, column: 33, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9263, file: !1506, line: 640, column: 32)
!9267 = !DILocation(line: 641, column: 3, scope: !9266)
!9268 = !DILocation(line: 642, column: 2, scope: !9266)
!9269 = !DILocation(line: 646, column: 32, scope: !9218)
!9270 = !DILocation(line: 646, column: 2, scope: !9218)
!9271 = !DILocation(line: 648, column: 2, scope: !9218)
!9272 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1506, file: !1506, line: 419, type: !1404, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9273)
!9273 = !{!9274, !9275, !9276, !9277, !9279, !9280, !9281, !9282}
!9274 = !DILocalVariable(name: "dev", arg: 1, scope: !9272, file: !1506, line: 419, type: !1379)
!9275 = !DILocalVariable(name: "cfg", arg: 2, scope: !9272, file: !1506, line: 420, type: !1406)
!9276 = !DILocalVariable(name: "config", scope: !9272, file: !1506, line: 422, type: !9155)
!9277 = !DILocalVariable(name: "data", scope: !9272, file: !1506, line: 423, type: !9278)
!9278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 32)
!9279 = !DILocalVariable(name: "parity", scope: !9272, file: !1506, line: 424, type: !6355)
!9280 = !DILocalVariable(name: "stopbits", scope: !9272, file: !1506, line: 425, type: !6355)
!9281 = !DILocalVariable(name: "databits", scope: !9272, file: !1506, line: 426, type: !6355)
!9282 = !DILocalVariable(name: "flowctrl", scope: !9272, file: !1506, line: 428, type: !6355)
!9283 = !DILocation(line: 0, scope: !9272)
!9284 = !DILocation(line: 422, column: 48, scope: !9272)
!9285 = !DILocation(line: 423, column: 38, scope: !9272)
!9286 = !DILocation(line: 424, column: 56, scope: !9272)
!9287 = !DILocation(line: 424, column: 51, scope: !9272)
!9288 = !DILocation(line: 424, column: 26, scope: !9272)
!9289 = !DILocation(line: 425, column: 60, scope: !9272)
!9290 = !DILocation(line: 425, column: 55, scope: !9272)
!9291 = !DILocation(line: 425, column: 28, scope: !9272)
!9292 = !DILocation(line: 426, column: 60, scope: !9272)
!9293 = !DILocation(line: 426, column: 55, scope: !9272)
!9294 = !DILocation(line: 426, column: 28, scope: !9272)
!9295 = !DILocation(line: 428, column: 58, scope: !9272)
!9296 = !DILocation(line: 428, column: 53, scope: !9272)
!9297 = !DILocation(line: 428, column: 28, scope: !9272)
!9298 = !DILocation(line: 431, column: 44, scope: !9299)
!9299 = distinct !DILexicalBlock(scope: !9272, file: !1506, line: 431, column: 6)
!9300 = !DILocation(line: 438, column: 22, scope: !9301)
!9301 = distinct !DILexicalBlock(scope: !9272, file: !1506, line: 437, column: 6)
!9302 = !DILocation(line: 437, column: 6, scope: !9272)
!9303 = !DILocation(line: 448, column: 6, scope: !9272)
!9304 = !DILocation(line: 465, column: 47, scope: !9305)
!9305 = distinct !DILexicalBlock(scope: !9272, file: !1506, line: 465, column: 6)
!9306 = !DILocation(line: 475, column: 21, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !9272, file: !1506, line: 475, column: 6)
!9308 = !DILocation(line: 475, column: 6, scope: !9272)
!9309 = !DILocation(line: 476, column: 8, scope: !9310)
!9310 = distinct !DILexicalBlock(scope: !9311, file: !1506, line: 476, column: 7)
!9311 = distinct !DILexicalBlock(scope: !9307, file: !1506, line: 475, column: 49)
!9312 = !DILocation(line: 477, column: 34, scope: !9310)
!9313 = !DILocation(line: 476, column: 7, scope: !9311)
!9314 = !DILocation(line: 482, column: 27, scope: !9272)
!9315 = !DILocation(line: 482, column: 2, scope: !9272)
!9316 = !DILocation(line: 484, column: 16, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9272, file: !1506, line: 484, column: 6)
!9318 = !DILocation(line: 484, column: 13, scope: !9317)
!9319 = !DILocation(line: 484, column: 6, scope: !9272)
!9320 = !DILocation(line: 485, column: 3, scope: !9321)
!9321 = distinct !DILexicalBlock(scope: !9317, file: !1506, line: 484, column: 44)
!9322 = !DILocation(line: 486, column: 2, scope: !9321)
!9323 = !DILocation(line: 488, column: 18, scope: !9324)
!9324 = distinct !DILexicalBlock(scope: !9272, file: !1506, line: 488, column: 6)
!9325 = !DILocation(line: 488, column: 15, scope: !9324)
!9326 = !DILocation(line: 488, column: 6, scope: !9272)
!9327 = !DILocation(line: 489, column: 3, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !9324, file: !1506, line: 488, column: 48)
!9329 = !DILocation(line: 490, column: 2, scope: !9328)
!9330 = !DILocation(line: 492, column: 18, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9272, file: !1506, line: 492, column: 6)
!9332 = !DILocation(line: 492, column: 15, scope: !9331)
!9333 = !DILocation(line: 492, column: 6, scope: !9272)
!9334 = !DILocation(line: 493, column: 3, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9331, file: !1506, line: 492, column: 48)
!9336 = !DILocation(line: 494, column: 2, scope: !9335)
!9337 = !DILocation(line: 496, column: 18, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9272, file: !1506, line: 496, column: 6)
!9339 = !DILocation(line: 496, column: 15, scope: !9338)
!9340 = !DILocation(line: 496, column: 6, scope: !9272)
!9341 = !DILocation(line: 497, column: 3, scope: !9342)
!9342 = distinct !DILexicalBlock(scope: !9338, file: !1506, line: 496, column: 46)
!9343 = !DILocation(line: 498, column: 2, scope: !9342)
!9344 = !DILocation(line: 500, column: 11, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !9272, file: !1506, line: 500, column: 6)
!9346 = !DILocation(line: 500, column: 29, scope: !9345)
!9347 = !DILocation(line: 500, column: 20, scope: !9345)
!9348 = !DILocation(line: 500, column: 6, scope: !9272)
!9349 = !DILocation(line: 501, column: 3, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9345, file: !1506, line: 500, column: 40)
!9351 = !DILocation(line: 502, column: 26, scope: !9350)
!9352 = !DILocation(line: 502, column: 19, scope: !9350)
!9353 = !DILocation(line: 503, column: 2, scope: !9350)
!9354 = !DILocation(line: 505, column: 26, scope: !9272)
!9355 = !DILocation(line: 505, column: 2, scope: !9272)
!9356 = !DILocation(line: 506, column: 2, scope: !9272)
!9357 = !DILocation(line: 507, column: 1, scope: !9272)
!9358 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1506, file: !1506, line: 509, type: !1417, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9359)
!9359 = !{!9360, !9361, !9362}
!9360 = !DILocalVariable(name: "dev", arg: 1, scope: !9358, file: !1506, line: 509, type: !1379)
!9361 = !DILocalVariable(name: "cfg", arg: 2, scope: !9358, file: !1506, line: 510, type: !1419)
!9362 = !DILocalVariable(name: "data", scope: !9358, file: !1506, line: 512, type: !9278)
!9363 = !DILocation(line: 0, scope: !9358)
!9364 = !DILocation(line: 512, column: 38, scope: !9358)
!9365 = !DILocation(line: 514, column: 24, scope: !9358)
!9366 = !DILocation(line: 514, column: 7, scope: !9358)
!9367 = !DILocation(line: 514, column: 16, scope: !9358)
!9368 = !DILocation(line: 515, column: 41, scope: !9358)
!9369 = !{i32 0, i32 1537}
!9370 = !DILocation(line: 515, column: 16, scope: !9358)
!9371 = !DILocation(line: 515, column: 7, scope: !9358)
!9372 = !DILocation(line: 515, column: 14, scope: !9358)
!9373 = !DILocation(line: 517, column: 3, scope: !9358)
!9374 = !{i32 0, i32 12289}
!9375 = !DILocation(line: 516, column: 19, scope: !9358)
!9376 = !DILocation(line: 516, column: 7, scope: !9358)
!9377 = !DILocation(line: 516, column: 17, scope: !9358)
!9378 = !DILocation(line: 519, column: 3, scope: !9358)
!9379 = !DILocation(line: 519, column: 33, scope: !9358)
!9380 = !DILocation(line: 518, column: 19, scope: !9358)
!9381 = !DILocation(line: 518, column: 7, scope: !9358)
!9382 = !DILocation(line: 518, column: 17, scope: !9358)
!9383 = !DILocation(line: 521, column: 3, scope: !9358)
!9384 = !{i32 0, i32 769}
!9385 = !DILocation(line: 520, column: 19, scope: !9358)
!9386 = !DILocation(line: 520, column: 7, scope: !9358)
!9387 = !DILocation(line: 520, column: 17, scope: !9358)
!9388 = !DILocation(line: 522, column: 2, scope: !9358)
!9389 = distinct !DISubprogram(name: "uart_stm32_fifo_fill", scope: !1506, file: !1506, line: 661, type: !1422, scopeLine: 664, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9390)
!9390 = !{!9391, !9392, !9393, !9394, !9395, !9396}
!9391 = !DILocalVariable(name: "dev", arg: 1, scope: !9389, file: !1506, line: 661, type: !1379)
!9392 = !DILocalVariable(name: "tx_data", arg: 2, scope: !9389, file: !1506, line: 662, type: !176)
!9393 = !DILocalVariable(name: "size", arg: 3, scope: !9389, file: !1506, line: 663, type: !107)
!9394 = !DILocalVariable(name: "config", scope: !9389, file: !1506, line: 665, type: !9155)
!9395 = !DILocalVariable(name: "num_tx", scope: !9389, file: !1506, line: 666, type: !133)
!9396 = !DILocalVariable(name: "key", scope: !9389, file: !1506, line: 667, type: !32)
!9397 = !DILocation(line: 0, scope: !9389)
!9398 = !DILocation(line: 665, column: 48, scope: !9389)
!9399 = !DILocation(line: 669, column: 41, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !9389, file: !1506, line: 669, column: 6)
!9401 = !DILocation(line: 669, column: 7, scope: !9400)
!9402 = !DILocation(line: 669, column: 6, scope: !9389)
!9403 = !DILocation(line: 55, column: 2, scope: !9190, inlinedAt: !9404)
!9404 = distinct !DILocation(line: 674, column: 8, scope: !9389)
!9405 = !DILocation(line: 0, scope: !9190, inlinedAt: !9404)
!9406 = !DILocation(line: 676, column: 24, scope: !9389)
!9407 = !DILocation(line: 676, column: 29, scope: !9389)
!9408 = !DILocation(line: 677, column: 43, scope: !9389)
!9409 = !DILocation(line: 677, column: 9, scope: !9389)
!9410 = !DILocation(line: 676, column: 2, scope: !9389)
!9411 = !DILocation(line: 681, column: 34, scope: !9412)
!9412 = distinct !DILexicalBlock(scope: !9389, file: !1506, line: 677, column: 51)
!9413 = !DILocation(line: 681, column: 55, scope: !9412)
!9414 = !DILocation(line: 681, column: 41, scope: !9412)
!9415 = !DILocation(line: 681, column: 3, scope: !9412)
!9416 = !DILocation(line: 676, column: 17, scope: !9389)
!9417 = distinct !{!9417, !9410, !9418}
!9418 = !DILocation(line: 682, column: 2, scope: !9389)
!9419 = !DILocation(line: 0, scope: !9203, inlinedAt: !9420)
!9420 = distinct !DILocation(line: 684, column: 2, scope: !9389)
!9421 = !DILocation(line: 95, column: 2, scope: !9203, inlinedAt: !9420)
!9422 = !DILocation(line: 686, column: 2, scope: !9389)
!9423 = !DILocation(line: 687, column: 1, scope: !9389)
!9424 = distinct !DISubprogram(name: "uart_stm32_fifo_read", scope: !1506, file: !1506, line: 689, type: !1426, scopeLine: 691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9425)
!9425 = !{!9426, !9427, !9428, !9429, !9430}
!9426 = !DILocalVariable(name: "dev", arg: 1, scope: !9424, file: !1506, line: 689, type: !1379)
!9427 = !DILocalVariable(name: "rx_data", arg: 2, scope: !9424, file: !1506, line: 689, type: !182)
!9428 = !DILocalVariable(name: "size", arg: 3, scope: !9424, file: !1506, line: 690, type: !183)
!9429 = !DILocalVariable(name: "config", scope: !9424, file: !1506, line: 692, type: !9155)
!9430 = !DILocalVariable(name: "num_rx", scope: !9424, file: !1506, line: 693, type: !133)
!9431 = !DILocation(line: 0, scope: !9424)
!9432 = !DILocation(line: 692, column: 48, scope: !9424)
!9433 = !DILocation(line: 696, column: 44, scope: !9424)
!9434 = !DILocation(line: 695, column: 24, scope: !9424)
!9435 = !DILocation(line: 695, column: 29, scope: !9424)
!9436 = !DILocation(line: 696, column: 9, scope: !9424)
!9437 = !DILocation(line: 695, column: 2, scope: !9424)
!9438 = !DILocation(line: 700, column: 53, scope: !9439)
!9439 = distinct !DILexicalBlock(scope: !9424, file: !1506, line: 696, column: 52)
!9440 = !DILocation(line: 700, column: 23, scope: !9439)
!9441 = !DILocation(line: 700, column: 17, scope: !9439)
!9442 = !DILocation(line: 700, column: 3, scope: !9439)
!9443 = !DILocation(line: 700, column: 21, scope: !9439)
!9444 = !DILocation(line: 703, column: 41, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !9439, file: !1506, line: 703, column: 7)
!9446 = !DILocation(line: 703, column: 7, scope: !9445)
!9447 = !DILocation(line: 703, column: 7, scope: !9439)
!9448 = !DILocation(line: 704, column: 35, scope: !9449)
!9449 = distinct !DILexicalBlock(scope: !9445, file: !1506, line: 703, column: 49)
!9450 = !DILocation(line: 704, column: 4, scope: !9449)
!9451 = !DILocation(line: 709, column: 3, scope: !9449)
!9452 = !DILocation(line: 695, column: 17, scope: !9424)
!9453 = distinct !{!9453, !9437, !9454}
!9454 = !DILocation(line: 710, column: 2, scope: !9424)
!9455 = !DILocation(line: 712, column: 2, scope: !9424)
!9456 = distinct !DISubprogram(name: "uart_stm32_irq_tx_enable", scope: !1506, file: !1506, line: 715, type: !1430, scopeLine: 716, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9457)
!9457 = !{!9458, !9459}
!9458 = !DILocalVariable(name: "dev", arg: 1, scope: !9456, file: !1506, line: 715, type: !1379)
!9459 = !DILocalVariable(name: "config", scope: !9456, file: !1506, line: 717, type: !9155)
!9460 = !DILocation(line: 0, scope: !9456)
!9461 = !DILocation(line: 717, column: 48, scope: !9456)
!9462 = !DILocation(line: 729, column: 31, scope: !9456)
!9463 = !DILocation(line: 729, column: 2, scope: !9456)
!9464 = !DILocation(line: 734, column: 1, scope: !9456)
!9465 = distinct !DISubprogram(name: "uart_stm32_irq_tx_disable", scope: !1506, file: !1506, line: 736, type: !1430, scopeLine: 737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9466)
!9466 = !{!9467, !9468}
!9467 = !DILocalVariable(name: "dev", arg: 1, scope: !9465, file: !1506, line: 736, type: !1379)
!9468 = !DILocalVariable(name: "config", scope: !9465, file: !1506, line: 738, type: !9155)
!9469 = !DILocation(line: 0, scope: !9465)
!9470 = !DILocation(line: 738, column: 48, scope: !9465)
!9471 = !DILocation(line: 746, column: 32, scope: !9465)
!9472 = !DILocation(line: 746, column: 2, scope: !9465)
!9473 = !DILocation(line: 756, column: 1, scope: !9465)
!9474 = distinct !DISubprogram(name: "uart_stm32_irq_tx_ready", scope: !1506, file: !1506, line: 758, type: !1400, scopeLine: 759, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9475)
!9475 = !{!9476, !9477}
!9476 = !DILocalVariable(name: "dev", arg: 1, scope: !9474, file: !1506, line: 758, type: !1379)
!9477 = !DILocalVariable(name: "config", scope: !9474, file: !1506, line: 760, type: !9155)
!9478 = !DILocation(line: 0, scope: !9474)
!9479 = !DILocation(line: 760, column: 48, scope: !9474)
!9480 = !DILocation(line: 762, column: 43, scope: !9474)
!9481 = !DILocation(line: 762, column: 9, scope: !9474)
!9482 = !DILocation(line: 762, column: 50, scope: !9474)
!9483 = !DILocation(line: 763, column: 35, scope: !9474)
!9484 = !DILocation(line: 763, column: 3, scope: !9474)
!9485 = !DILocation(line: 762, column: 2, scope: !9474)
!9486 = distinct !DISubprogram(name: "uart_stm32_irq_rx_enable", scope: !1506, file: !1506, line: 773, type: !1430, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9487)
!9487 = !{!9488, !9489}
!9488 = !DILocalVariable(name: "dev", arg: 1, scope: !9486, file: !1506, line: 773, type: !1379)
!9489 = !DILocalVariable(name: "config", scope: !9486, file: !1506, line: 775, type: !9155)
!9490 = !DILocation(line: 0, scope: !9486)
!9491 = !DILocation(line: 775, column: 48, scope: !9486)
!9492 = !DILocation(line: 777, column: 33, scope: !9486)
!9493 = !DILocation(line: 777, column: 2, scope: !9486)
!9494 = !DILocation(line: 778, column: 1, scope: !9486)
!9495 = distinct !DISubprogram(name: "uart_stm32_irq_rx_disable", scope: !1506, file: !1506, line: 780, type: !1430, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9496)
!9496 = !{!9497, !9498}
!9497 = !DILocalVariable(name: "dev", arg: 1, scope: !9495, file: !1506, line: 780, type: !1379)
!9498 = !DILocalVariable(name: "config", scope: !9495, file: !1506, line: 782, type: !9155)
!9499 = !DILocation(line: 0, scope: !9495)
!9500 = !DILocation(line: 782, column: 48, scope: !9495)
!9501 = !DILocation(line: 784, column: 34, scope: !9495)
!9502 = !DILocation(line: 784, column: 2, scope: !9495)
!9503 = !DILocation(line: 785, column: 1, scope: !9495)
!9504 = distinct !DISubprogram(name: "uart_stm32_irq_tx_complete", scope: !1506, file: !1506, line: 766, type: !1400, scopeLine: 767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9505)
!9505 = !{!9506, !9507}
!9506 = !DILocalVariable(name: "dev", arg: 1, scope: !9504, file: !1506, line: 766, type: !1379)
!9507 = !DILocalVariable(name: "config", scope: !9504, file: !1506, line: 768, type: !9155)
!9508 = !DILocation(line: 0, scope: !9504)
!9509 = !DILocation(line: 768, column: 48, scope: !9504)
!9510 = !DILocation(line: 770, column: 42, scope: !9504)
!9511 = !DILocation(line: 770, column: 9, scope: !9504)
!9512 = !DILocation(line: 770, column: 2, scope: !9504)
!9513 = distinct !DISubprogram(name: "uart_stm32_irq_rx_ready", scope: !1506, file: !1506, line: 787, type: !1400, scopeLine: 788, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9514)
!9514 = !{!9515, !9516}
!9515 = !DILocalVariable(name: "dev", arg: 1, scope: !9513, file: !1506, line: 787, type: !1379)
!9516 = !DILocalVariable(name: "config", scope: !9513, file: !1506, line: 789, type: !9155)
!9517 = !DILocation(line: 0, scope: !9513)
!9518 = !DILocation(line: 789, column: 48, scope: !9513)
!9519 = !DILocation(line: 794, column: 44, scope: !9513)
!9520 = !DILocation(line: 794, column: 9, scope: !9513)
!9521 = !DILocation(line: 794, column: 2, scope: !9513)
!9522 = distinct !DISubprogram(name: "uart_stm32_irq_err_enable", scope: !1506, file: !1506, line: 797, type: !1430, scopeLine: 798, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9523)
!9523 = !{!9524, !9525}
!9524 = !DILocalVariable(name: "dev", arg: 1, scope: !9522, file: !1506, line: 797, type: !1379)
!9525 = !DILocalVariable(name: "config", scope: !9522, file: !1506, line: 799, type: !9155)
!9526 = !DILocation(line: 0, scope: !9522)
!9527 = !DILocation(line: 799, column: 48, scope: !9522)
!9528 = !DILocation(line: 802, column: 34, scope: !9522)
!9529 = !DILocation(line: 802, column: 2, scope: !9522)
!9530 = !DILocation(line: 805, column: 6, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9522, file: !1506, line: 805, column: 6)
!9532 = !DILocation(line: 806, column: 3, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9531, file: !1506, line: 805, column: 43)
!9534 = !DILocation(line: 810, column: 31, scope: !9522)
!9535 = !DILocation(line: 807, column: 2, scope: !9533)
!9536 = !DILocation(line: 810, column: 2, scope: !9522)
!9537 = !DILocation(line: 811, column: 1, scope: !9522)
!9538 = distinct !DISubprogram(name: "uart_stm32_irq_err_disable", scope: !1506, file: !1506, line: 813, type: !1430, scopeLine: 814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9539)
!9539 = !{!9540, !9541}
!9540 = !DILocalVariable(name: "dev", arg: 1, scope: !9538, file: !1506, line: 813, type: !1379)
!9541 = !DILocalVariable(name: "config", scope: !9538, file: !1506, line: 815, type: !9155)
!9542 = !DILocation(line: 0, scope: !9538)
!9543 = !DILocation(line: 815, column: 48, scope: !9538)
!9544 = !DILocation(line: 818, column: 35, scope: !9538)
!9545 = !DILocation(line: 818, column: 2, scope: !9538)
!9546 = !DILocation(line: 821, column: 6, scope: !9547)
!9547 = distinct !DILexicalBlock(scope: !9538, file: !1506, line: 821, column: 6)
!9548 = !DILocation(line: 822, column: 3, scope: !9549)
!9549 = distinct !DILexicalBlock(scope: !9547, file: !1506, line: 821, column: 43)
!9550 = !DILocation(line: 826, column: 32, scope: !9538)
!9551 = !DILocation(line: 823, column: 2, scope: !9549)
!9552 = !DILocation(line: 826, column: 2, scope: !9538)
!9553 = !DILocation(line: 827, column: 1, scope: !9538)
!9554 = distinct !DISubprogram(name: "uart_stm32_irq_is_pending", scope: !1506, file: !1506, line: 829, type: !1400, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9555)
!9555 = !{!9556, !9557}
!9556 = !DILocalVariable(name: "dev", arg: 1, scope: !9554, file: !1506, line: 829, type: !1379)
!9557 = !DILocalVariable(name: "config", scope: !9554, file: !1506, line: 831, type: !9155)
!9558 = !DILocation(line: 0, scope: !9554)
!9559 = !DILocation(line: 831, column: 48, scope: !9554)
!9560 = !DILocation(line: 833, column: 46, scope: !9554)
!9561 = !DILocation(line: 833, column: 11, scope: !9554)
!9562 = !DILocation(line: 833, column: 53, scope: !9554)
!9563 = !DILocation(line: 834, column: 38, scope: !9554)
!9564 = !DILocation(line: 834, column: 4, scope: !9554)
!9565 = !DILocation(line: 834, column: 46, scope: !9554)
!9566 = !DILocation(line: 835, column: 37, scope: !9554)
!9567 = !DILocation(line: 835, column: 4, scope: !9554)
!9568 = !DILocation(line: 835, column: 44, scope: !9554)
!9569 = !DILocation(line: 836, column: 36, scope: !9554)
!9570 = !DILocation(line: 836, column: 4, scope: !9554)
!9571 = !DILocation(line: 833, column: 2, scope: !9554)
!9572 = distinct !DISubprogram(name: "uart_stm32_irq_update", scope: !1506, file: !1506, line: 839, type: !1400, scopeLine: 840, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9573)
!9573 = !{!9574}
!9574 = !DILocalVariable(name: "dev", arg: 1, scope: !9572, file: !1506, line: 839, type: !1379)
!9575 = !DILocation(line: 0, scope: !9572)
!9576 = !DILocation(line: 841, column: 2, scope: !9572)
!9577 = distinct !DISubprogram(name: "uart_stm32_irq_callback_set", scope: !1506, file: !1506, line: 844, type: !1444, scopeLine: 847, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9578)
!9578 = !{!9579, !9580, !9581, !9582}
!9579 = !DILocalVariable(name: "dev", arg: 1, scope: !9577, file: !1506, line: 844, type: !1379)
!9580 = !DILocalVariable(name: "cb", arg: 2, scope: !9577, file: !1506, line: 845, type: !1446)
!9581 = !DILocalVariable(name: "cb_data", arg: 3, scope: !9577, file: !1506, line: 846, type: !102)
!9582 = !DILocalVariable(name: "data", scope: !9577, file: !1506, line: 848, type: !9278)
!9583 = !DILocation(line: 0, scope: !9577)
!9584 = !DILocation(line: 848, column: 38, scope: !9577)
!9585 = !DILocation(line: 850, column: 8, scope: !9577)
!9586 = !DILocation(line: 850, column: 16, scope: !9577)
!9587 = !DILocation(line: 851, column: 8, scope: !9577)
!9588 = !DILocation(line: 851, column: 18, scope: !9577)
!9589 = !DILocation(line: 852, column: 1, scope: !9577)
!9590 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !9591, file: !9591, line: 1792, type: !9592, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9594)
!9591 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9592 = !DISubroutineType(types: !9593)
!9593 = !{!162, !1450}
!9594 = !{!9595}
!9595 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9590, file: !9591, line: 1792, type: !1450)
!9596 = !DILocation(line: 0, scope: !9590)
!9597 = !DILocation(line: 1794, column: 11, scope: !9590)
!9598 = !DILocation(line: 1794, column: 47, scope: !9590)
!9599 = !DILocation(line: 1794, column: 3, scope: !9590)
!9600 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_RXNE", scope: !9591, file: !9591, line: 2227, type: !9592, scopeLine: 2228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9601)
!9601 = !{!9602}
!9602 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9600, file: !9591, line: 2227, type: !1450)
!9603 = !DILocation(line: 0, scope: !9600)
!9604 = !DILocation(line: 2229, column: 11, scope: !9600)
!9605 = !DILocation(line: 2229, column: 51, scope: !9600)
!9606 = !DILocation(line: 2229, column: 3, scope: !9600)
!9607 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TC", scope: !9591, file: !9591, line: 1803, type: !9592, scopeLine: 1804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9608)
!9608 = !{!9609}
!9609 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9607, file: !9591, line: 1803, type: !1450)
!9610 = !DILocation(line: 0, scope: !9607)
!9611 = !DILocation(line: 1805, column: 11, scope: !9607)
!9612 = !DILocation(line: 1805, column: 45, scope: !9607)
!9613 = !DILocation(line: 1805, column: 3, scope: !9607)
!9614 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_TC", scope: !9591, file: !9591, line: 2238, type: !9592, scopeLine: 2239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9615)
!9615 = !{!9616}
!9616 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9614, file: !9591, line: 2238, type: !1450)
!9617 = !DILocation(line: 0, scope: !9614)
!9618 = !DILocation(line: 2240, column: 11, scope: !9614)
!9619 = !DILocation(line: 2240, column: 49, scope: !9614)
!9620 = !DILocation(line: 2240, column: 3, scope: !9614)
!9621 = distinct !DISubprogram(name: "LL_USART_DisableIT_ERROR", scope: !9591, file: !9591, line: 2192, type: !9622, scopeLine: 2193, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9624)
!9622 = !DISubroutineType(types: !9623)
!9623 = !{null, !1450}
!9624 = !{!9625, !9626}
!9625 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9621, file: !9591, line: 2192, type: !1450)
!9626 = !DILocalVariable(name: "val", scope: !9627, file: !9591, line: 2194, type: !162)
!9627 = distinct !DILexicalBlock(scope: !9621, file: !9591, line: 2194, column: 3)
!9628 = !DILocation(line: 0, scope: !9621)
!9629 = !DILocation(line: 2194, column: 3, scope: !9627)
!9630 = !DILocalVariable(name: "addr", arg: 1, scope: !9631, file: !6087, line: 476, type: !1502)
!9631 = distinct !DISubprogram(name: "__LDREXW", scope: !6087, file: !6087, line: 476, type: !9632, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9634)
!9632 = !DISubroutineType(types: !9633)
!9633 = !{!162, !1502}
!9634 = !{!9630, !9635}
!9635 = !DILocalVariable(name: "result", scope: !9631, file: !6087, line: 478, type: !162)
!9636 = !DILocation(line: 0, scope: !9631, inlinedAt: !9637)
!9637 = distinct !DILocation(line: 2194, column: 3, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !9627, file: !9591, line: 2194, column: 3)
!9639 = !DILocation(line: 480, column: 4, scope: !9631, inlinedAt: !9637)
!9640 = !{i64 3573265}
!9641 = !DILocation(line: 2194, column: 3, scope: !9638)
!9642 = !DILocation(line: 0, scope: !9627)
!9643 = !DILocalVariable(name: "value", arg: 1, scope: !9644, file: !6087, line: 527, type: !162)
!9644 = distinct !DISubprogram(name: "__STREXW", scope: !6087, file: !6087, line: 527, type: !9645, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9647)
!9645 = !DISubroutineType(types: !9646)
!9646 = !{!162, !162, !1502}
!9647 = !{!9643, !9648, !9649}
!9648 = !DILocalVariable(name: "addr", arg: 2, scope: !9644, file: !6087, line: 527, type: !1502)
!9649 = !DILocalVariable(name: "result", scope: !9644, file: !6087, line: 529, type: !162)
!9650 = !DILocation(line: 0, scope: !9644, inlinedAt: !9651)
!9651 = distinct !DILocation(line: 2194, column: 3, scope: !9627)
!9652 = !DILocation(line: 531, column: 4, scope: !9644, inlinedAt: !9651)
!9653 = !{i64 3574701}
!9654 = distinct !{!9654, !9629, !9629}
!9655 = !DILocation(line: 2195, column: 1, scope: !9621)
!9656 = distinct !DISubprogram(name: "LL_USART_DisableIT_LBD", scope: !9591, file: !9591, line: 2177, type: !9622, scopeLine: 2178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9657)
!9657 = !{!9658}
!9658 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9656, file: !9591, line: 2177, type: !1450)
!9659 = !DILocation(line: 0, scope: !9656)
!9660 = !DILocation(line: 2179, column: 3, scope: !9656)
!9661 = !DILocation(line: 2180, column: 1, scope: !9656)
!9662 = distinct !DISubprogram(name: "LL_USART_DisableIT_PE", scope: !9591, file: !9591, line: 2164, type: !9622, scopeLine: 2165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9663)
!9663 = !{!9664, !9665}
!9664 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9662, file: !9591, line: 2164, type: !1450)
!9665 = !DILocalVariable(name: "val", scope: !9666, file: !9591, line: 2166, type: !162)
!9666 = distinct !DILexicalBlock(scope: !9662, file: !9591, line: 2166, column: 3)
!9667 = !DILocation(line: 0, scope: !9662)
!9668 = !DILocation(line: 2166, column: 3, scope: !9666)
!9669 = !DILocation(line: 0, scope: !9631, inlinedAt: !9670)
!9670 = distinct !DILocation(line: 2166, column: 3, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !9666, file: !9591, line: 2166, column: 3)
!9672 = !DILocation(line: 480, column: 4, scope: !9631, inlinedAt: !9670)
!9673 = !DILocation(line: 2166, column: 3, scope: !9671)
!9674 = !DILocation(line: 0, scope: !9666)
!9675 = !DILocation(line: 0, scope: !9644, inlinedAt: !9676)
!9676 = distinct !DILocation(line: 2166, column: 3, scope: !9666)
!9677 = !DILocation(line: 531, column: 4, scope: !9644, inlinedAt: !9676)
!9678 = distinct !{!9678, !9668, !9668}
!9679 = !DILocation(line: 2167, column: 1, scope: !9662)
!9680 = distinct !DISubprogram(name: "LL_USART_EnableIT_ERROR", scope: !9591, file: !9591, line: 2096, type: !9622, scopeLine: 2097, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9681)
!9681 = !{!9682, !9683}
!9682 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9680, file: !9591, line: 2096, type: !1450)
!9683 = !DILocalVariable(name: "val", scope: !9684, file: !9591, line: 2098, type: !162)
!9684 = distinct !DILexicalBlock(scope: !9680, file: !9591, line: 2098, column: 3)
!9685 = !DILocation(line: 0, scope: !9680)
!9686 = !DILocation(line: 2098, column: 3, scope: !9684)
!9687 = !DILocation(line: 0, scope: !9631, inlinedAt: !9688)
!9688 = distinct !DILocation(line: 2098, column: 3, scope: !9689)
!9689 = distinct !DILexicalBlock(scope: !9684, file: !9591, line: 2098, column: 3)
!9690 = !DILocation(line: 480, column: 4, scope: !9631, inlinedAt: !9688)
!9691 = !DILocation(line: 2098, column: 3, scope: !9689)
!9692 = !DILocation(line: 0, scope: !9684)
!9693 = !DILocation(line: 0, scope: !9644, inlinedAt: !9694)
!9694 = distinct !DILocation(line: 2098, column: 3, scope: !9684)
!9695 = !DILocation(line: 531, column: 4, scope: !9644, inlinedAt: !9694)
!9696 = distinct !{!9696, !9686, !9686}
!9697 = !DILocation(line: 2099, column: 1, scope: !9680)
!9698 = distinct !DISubprogram(name: "LL_USART_EnableIT_LBD", scope: !9591, file: !9591, line: 2081, type: !9622, scopeLine: 2082, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9699)
!9699 = !{!9700}
!9700 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9698, file: !9591, line: 2081, type: !1450)
!9701 = !DILocation(line: 0, scope: !9698)
!9702 = !DILocation(line: 2083, column: 3, scope: !9698)
!9703 = !DILocation(line: 2084, column: 1, scope: !9698)
!9704 = distinct !DISubprogram(name: "LL_USART_EnableIT_PE", scope: !9591, file: !9591, line: 2068, type: !9622, scopeLine: 2069, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9705)
!9705 = !{!9706, !9707}
!9706 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9704, file: !9591, line: 2068, type: !1450)
!9707 = !DILocalVariable(name: "val", scope: !9708, file: !9591, line: 2070, type: !162)
!9708 = distinct !DILexicalBlock(scope: !9704, file: !9591, line: 2070, column: 3)
!9709 = !DILocation(line: 0, scope: !9704)
!9710 = !DILocation(line: 2070, column: 3, scope: !9708)
!9711 = !DILocation(line: 0, scope: !9631, inlinedAt: !9712)
!9712 = distinct !DILocation(line: 2070, column: 3, scope: !9713)
!9713 = distinct !DILexicalBlock(scope: !9708, file: !9591, line: 2070, column: 3)
!9714 = !DILocation(line: 480, column: 4, scope: !9631, inlinedAt: !9712)
!9715 = !DILocation(line: 2070, column: 3, scope: !9713)
!9716 = !DILocation(line: 0, scope: !9708)
!9717 = !DILocation(line: 0, scope: !9644, inlinedAt: !9718)
!9718 = distinct !DILocation(line: 2070, column: 3, scope: !9708)
!9719 = !DILocation(line: 531, column: 4, scope: !9644, inlinedAt: !9718)
!9720 = distinct !{!9720, !9710, !9710}
!9721 = !DILocation(line: 2071, column: 1, scope: !9704)
!9722 = distinct !DISubprogram(name: "LL_USART_DisableIT_RXNE", scope: !9591, file: !9591, line: 2131, type: !9622, scopeLine: 2132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9723)
!9723 = !{!9724, !9725}
!9724 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9722, file: !9591, line: 2131, type: !1450)
!9725 = !DILocalVariable(name: "val", scope: !9726, file: !9591, line: 2133, type: !162)
!9726 = distinct !DILexicalBlock(scope: !9722, file: !9591, line: 2133, column: 3)
!9727 = !DILocation(line: 0, scope: !9722)
!9728 = !DILocation(line: 2133, column: 3, scope: !9726)
!9729 = !DILocation(line: 0, scope: !9631, inlinedAt: !9730)
!9730 = distinct !DILocation(line: 2133, column: 3, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9726, file: !9591, line: 2133, column: 3)
!9732 = !DILocation(line: 480, column: 4, scope: !9631, inlinedAt: !9730)
!9733 = !DILocation(line: 2133, column: 3, scope: !9731)
!9734 = !DILocation(line: 0, scope: !9726)
!9735 = !DILocation(line: 0, scope: !9644, inlinedAt: !9736)
!9736 = distinct !DILocation(line: 2133, column: 3, scope: !9726)
!9737 = !DILocation(line: 531, column: 4, scope: !9644, inlinedAt: !9736)
!9738 = distinct !{!9738, !9728, !9728}
!9739 = !DILocation(line: 2134, column: 1, scope: !9722)
!9740 = distinct !DISubprogram(name: "LL_USART_EnableIT_RXNE", scope: !9591, file: !9591, line: 2035, type: !9622, scopeLine: 2036, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9741)
!9741 = !{!9742, !9743}
!9742 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9740, file: !9591, line: 2035, type: !1450)
!9743 = !DILocalVariable(name: "val", scope: !9744, file: !9591, line: 2037, type: !162)
!9744 = distinct !DILexicalBlock(scope: !9740, file: !9591, line: 2037, column: 3)
!9745 = !DILocation(line: 0, scope: !9740)
!9746 = !DILocation(line: 2037, column: 3, scope: !9744)
!9747 = !DILocation(line: 0, scope: !9631, inlinedAt: !9748)
!9748 = distinct !DILocation(line: 2037, column: 3, scope: !9749)
!9749 = distinct !DILexicalBlock(scope: !9744, file: !9591, line: 2037, column: 3)
!9750 = !DILocation(line: 480, column: 4, scope: !9631, inlinedAt: !9748)
!9751 = !DILocation(line: 2037, column: 3, scope: !9749)
!9752 = !DILocation(line: 0, scope: !9744)
!9753 = !DILocation(line: 0, scope: !9644, inlinedAt: !9754)
!9754 = distinct !DILocation(line: 2037, column: 3, scope: !9744)
!9755 = !DILocation(line: 531, column: 4, scope: !9644, inlinedAt: !9754)
!9756 = distinct !{!9756, !9746, !9746}
!9757 = !DILocation(line: 2038, column: 1, scope: !9740)
!9758 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !9591, file: !9591, line: 1814, type: !9592, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9759)
!9759 = !{!9760}
!9760 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9758, file: !9591, line: 1814, type: !1450)
!9761 = !DILocation(line: 0, scope: !9758)
!9762 = !DILocation(line: 1816, column: 11, scope: !9758)
!9763 = !DILocation(line: 1816, column: 46, scope: !9758)
!9764 = !DILocation(line: 1816, column: 3, scope: !9758)
!9765 = distinct !DISubprogram(name: "LL_USART_DisableIT_TC", scope: !9591, file: !9591, line: 2142, type: !9622, scopeLine: 2143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9766)
!9766 = !{!9767, !9768}
!9767 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9765, file: !9591, line: 2142, type: !1450)
!9768 = !DILocalVariable(name: "val", scope: !9769, file: !9591, line: 2144, type: !162)
!9769 = distinct !DILexicalBlock(scope: !9765, file: !9591, line: 2144, column: 3)
!9770 = !DILocation(line: 0, scope: !9765)
!9771 = !DILocation(line: 2144, column: 3, scope: !9769)
!9772 = !DILocation(line: 0, scope: !9631, inlinedAt: !9773)
!9773 = distinct !DILocation(line: 2144, column: 3, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !9769, file: !9591, line: 2144, column: 3)
!9775 = !DILocation(line: 480, column: 4, scope: !9631, inlinedAt: !9773)
!9776 = !DILocation(line: 2144, column: 3, scope: !9774)
!9777 = !DILocation(line: 0, scope: !9769)
!9778 = !DILocation(line: 0, scope: !9644, inlinedAt: !9779)
!9779 = distinct !DILocation(line: 2144, column: 3, scope: !9769)
!9780 = !DILocation(line: 531, column: 4, scope: !9644, inlinedAt: !9779)
!9781 = distinct !{!9781, !9771, !9771}
!9782 = !DILocation(line: 2145, column: 1, scope: !9765)
!9783 = distinct !DISubprogram(name: "LL_USART_EnableIT_TC", scope: !9591, file: !9591, line: 2046, type: !9622, scopeLine: 2047, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9784)
!9784 = !{!9785, !9786}
!9785 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9783, file: !9591, line: 2046, type: !1450)
!9786 = !DILocalVariable(name: "val", scope: !9787, file: !9591, line: 2048, type: !162)
!9787 = distinct !DILexicalBlock(scope: !9783, file: !9591, line: 2048, column: 3)
!9788 = !DILocation(line: 0, scope: !9783)
!9789 = !DILocation(line: 2048, column: 3, scope: !9787)
!9790 = !DILocation(line: 0, scope: !9631, inlinedAt: !9791)
!9791 = distinct !DILocation(line: 2048, column: 3, scope: !9792)
!9792 = distinct !DILexicalBlock(scope: !9787, file: !9591, line: 2048, column: 3)
!9793 = !DILocation(line: 480, column: 4, scope: !9631, inlinedAt: !9791)
!9794 = !DILocation(line: 2048, column: 3, scope: !9792)
!9795 = !DILocation(line: 0, scope: !9787)
!9796 = !DILocation(line: 0, scope: !9644, inlinedAt: !9797)
!9797 = distinct !DILocation(line: 2048, column: 3, scope: !9787)
!9798 = !DILocation(line: 531, column: 4, scope: !9644, inlinedAt: !9797)
!9799 = distinct !{!9799, !9789, !9789}
!9800 = !DILocation(line: 2049, column: 1, scope: !9783)
!9801 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !9591, file: !9591, line: 2403, type: !9802, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9804)
!9802 = !DISubroutineType(types: !9803)
!9803 = !{!133, !1450}
!9804 = !{!9805}
!9805 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9801, file: !9591, line: 2403, type: !1450)
!9806 = !DILocation(line: 0, scope: !9801)
!9807 = !DILocation(line: 2405, column: 20, scope: !9801)
!9808 = !DILocation(line: 2405, column: 10, scope: !9801)
!9809 = !DILocation(line: 2405, column: 3, scope: !9801)
!9810 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !9591, file: !9591, line: 1770, type: !9592, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9811)
!9811 = !{!9812}
!9812 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9810, file: !9591, line: 1770, type: !1450)
!9813 = !DILocation(line: 0, scope: !9810)
!9814 = !DILocation(line: 1772, column: 11, scope: !9810)
!9815 = !DILocation(line: 1772, column: 46, scope: !9810)
!9816 = !DILocation(line: 1772, column: 3, scope: !9810)
!9817 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !9591, file: !9591, line: 1934, type: !9622, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9818)
!9818 = !{!9819, !9820}
!9819 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9817, file: !9591, line: 1934, type: !1450)
!9820 = !DILocalVariable(name: "tmpreg", scope: !9817, file: !9591, line: 1936, type: !283)
!9821 = !DILocation(line: 0, scope: !9817)
!9822 = !DILocation(line: 1936, column: 3, scope: !9817)
!9823 = !DILocation(line: 1936, column: 17, scope: !9817)
!9824 = !DILocation(line: 1937, column: 20, scope: !9817)
!9825 = !DILocation(line: 1937, column: 10, scope: !9817)
!9826 = !DILocation(line: 1938, column: 10, scope: !9817)
!9827 = !DILocation(line: 1939, column: 20, scope: !9817)
!9828 = !DILocation(line: 1939, column: 10, scope: !9817)
!9829 = !DILocation(line: 1940, column: 10, scope: !9817)
!9830 = !DILocation(line: 1941, column: 1, scope: !9817)
!9831 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !9591, file: !9591, line: 2426, type: !9832, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9834)
!9832 = !DISubroutineType(types: !9833)
!9833 = !{null, !1450, !133}
!9834 = !{!9835, !9836}
!9835 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9831, file: !9591, line: 2426, type: !1450)
!9836 = !DILocalVariable(name: "Value", arg: 2, scope: !9831, file: !9591, line: 2426, type: !133)
!9837 = !DILocation(line: 0, scope: !9831)
!9838 = !DILocation(line: 2428, column: 16, scope: !9831)
!9839 = !DILocation(line: 2428, column: 11, scope: !9831)
!9840 = !DILocation(line: 2428, column: 14, scope: !9831)
!9841 = !DILocation(line: 2429, column: 1, scope: !9831)
!9842 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1506, file: !1506, line: 205, type: !9843, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9845)
!9843 = !DISubroutineType(types: !9844)
!9844 = !{!162, !1379}
!9845 = !{!9846, !9847}
!9846 = !DILocalVariable(name: "dev", arg: 1, scope: !9842, file: !1506, line: 205, type: !1379)
!9847 = !DILocalVariable(name: "config", scope: !9842, file: !1506, line: 207, type: !9155)
!9848 = !DILocation(line: 0, scope: !9842)
!9849 = !DILocation(line: 207, column: 48, scope: !9842)
!9850 = !DILocation(line: 209, column: 36, scope: !9842)
!9851 = !DILocation(line: 209, column: 9, scope: !9842)
!9852 = !DILocation(line: 209, column: 2, scope: !9842)
!9853 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1506, file: !1506, line: 270, type: !9854, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9856)
!9854 = !DISubroutineType(types: !9855)
!9855 = !{!1345, !162}
!9856 = !{!9857}
!9857 = !DILocalVariable(name: "parity", arg: 1, scope: !9853, file: !1506, line: 270, type: !162)
!9858 = !DILocation(line: 0, scope: !9853)
!9859 = !DILocation(line: 272, column: 2, scope: !9853)
!9860 = !DILocation(line: 281, column: 1, scope: !9853)
!9861 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1506, file: !1506, line: 220, type: !9843, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9862)
!9862 = !{!9863, !9864}
!9863 = !DILocalVariable(name: "dev", arg: 1, scope: !9861, file: !1506, line: 220, type: !1379)
!9864 = !DILocalVariable(name: "config", scope: !9861, file: !1506, line: 222, type: !9155)
!9865 = !DILocation(line: 0, scope: !9861)
!9866 = !DILocation(line: 222, column: 48, scope: !9861)
!9867 = !DILocation(line: 224, column: 44, scope: !9861)
!9868 = !DILocation(line: 224, column: 9, scope: !9861)
!9869 = !DILocation(line: 224, column: 2, scope: !9861)
!9870 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1506, file: !1506, line: 304, type: !9871, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9873)
!9871 = !DISubroutineType(types: !9872)
!9872 = !{!1359, !162}
!9873 = !{!9874}
!9874 = !DILocalVariable(name: "sb", arg: 1, scope: !9870, file: !1506, line: 304, type: !162)
!9875 = !DILocation(line: 0, scope: !9870)
!9876 = !DILocation(line: 306, column: 2, scope: !9870)
!9877 = !DILocation(line: 0, scope: !9878)
!9878 = distinct !DILexicalBlock(scope: !9870, file: !1506, line: 306, column: 14)
!9879 = !DILocation(line: 323, column: 1, scope: !9870)
!9880 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1506, file: !1506, line: 235, type: !9843, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9881)
!9881 = !{!9882, !9883}
!9882 = !DILocalVariable(name: "dev", arg: 1, scope: !9880, file: !1506, line: 235, type: !1379)
!9883 = !DILocalVariable(name: "config", scope: !9880, file: !1506, line: 237, type: !9155)
!9884 = !DILocation(line: 0, scope: !9880)
!9885 = !DILocation(line: 237, column: 48, scope: !9880)
!9886 = !DILocation(line: 239, column: 39, scope: !9880)
!9887 = !DILocation(line: 239, column: 9, scope: !9880)
!9888 = !DILocation(line: 239, column: 2, scope: !9880)
!9889 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1506, file: !1506, line: 355, type: !9890, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9892)
!9890 = !DISubroutineType(types: !9891)
!9891 = !{!1352, !162, !162}
!9892 = !{!9893, !9894}
!9893 = !DILocalVariable(name: "db", arg: 1, scope: !9889, file: !1506, line: 355, type: !162)
!9894 = !DILocalVariable(name: "p", arg: 2, scope: !9889, file: !1506, line: 356, type: !162)
!9895 = !DILocation(line: 0, scope: !9889)
!9896 = !DILocation(line: 358, column: 2, scope: !9889)
!9897 = !DILocation(line: 384, column: 1, scope: !9889)
!9898 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1506, file: !1506, line: 250, type: !9843, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9899)
!9899 = !{!9900, !9901}
!9900 = !DILocalVariable(name: "dev", arg: 1, scope: !9898, file: !1506, line: 250, type: !1379)
!9901 = !DILocalVariable(name: "config", scope: !9898, file: !1506, line: 252, type: !9155)
!9902 = !DILocation(line: 0, scope: !9898)
!9903 = !DILocation(line: 252, column: 48, scope: !9898)
!9904 = !DILocation(line: 254, column: 40, scope: !9898)
!9905 = !DILocation(line: 254, column: 9, scope: !9898)
!9906 = !DILocation(line: 254, column: 2, scope: !9898)
!9907 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1506, file: !1506, line: 409, type: !9908, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9910)
!9908 = !DISubroutineType(types: !9909)
!9909 = !{!1365, !162}
!9910 = !{!9911}
!9911 = !DILocalVariable(name: "fc", arg: 1, scope: !9907, file: !1506, line: 409, type: !162)
!9912 = !DILocation(line: 0, scope: !9907)
!9913 = !DILocation(line: 411, column: 9, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9907, file: !1506, line: 411, column: 6)
!9915 = !DILocation(line: 416, column: 1, scope: !9907)
!9916 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !9591, file: !9591, line: 967, type: !9592, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9917)
!9917 = !{!9918}
!9918 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9916, file: !9591, line: 967, type: !1450)
!9919 = !DILocation(line: 0, scope: !9916)
!9920 = !DILocation(line: 969, column: 21, scope: !9916)
!9921 = !DILocation(line: 969, column: 3, scope: !9916)
!9922 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !9591, file: !9591, line: 601, type: !9592, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9923)
!9923 = !{!9924}
!9924 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9922, file: !9591, line: 601, type: !1450)
!9925 = !DILocation(line: 0, scope: !9922)
!9926 = !DILocation(line: 603, column: 21, scope: !9922)
!9927 = !DILocation(line: 603, column: 3, scope: !9922)
!9928 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !9591, file: !9591, line: 820, type: !9592, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9929)
!9929 = !{!9930}
!9930 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9928, file: !9591, line: 820, type: !1450)
!9931 = !DILocation(line: 0, scope: !9928)
!9932 = !DILocation(line: 822, column: 21, scope: !9928)
!9933 = !DILocation(line: 822, column: 3, scope: !9928)
!9934 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !9591, file: !9591, line: 547, type: !9592, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9935)
!9935 = !{!9936}
!9936 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9934, file: !9591, line: 547, type: !1450)
!9937 = !DILocation(line: 0, scope: !9934)
!9938 = !DILocation(line: 549, column: 21, scope: !9934)
!9939 = !DILocation(line: 549, column: 3, scope: !9934)
!9940 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1506, file: !1506, line: 257, type: !9941, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9943)
!9941 = !DISubroutineType(types: !9942)
!9942 = !{!162, !1345}
!9943 = !{!9944}
!9944 = !DILocalVariable(name: "parity", arg: 1, scope: !9940, file: !1506, line: 257, type: !1345)
!9945 = !DILocation(line: 0, scope: !9940)
!9946 = !DILocation(line: 259, column: 2, scope: !9940)
!9947 = !DILocation(line: 268, column: 1, scope: !9940)
!9948 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1506, file: !1506, line: 283, type: !9949, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9951)
!9949 = !DISubroutineType(types: !9950)
!9950 = !{!162, !1359}
!9951 = !{!9952}
!9952 = !DILocalVariable(name: "sb", arg: 1, scope: !9948, file: !1506, line: 283, type: !1359)
!9953 = !DILocation(line: 0, scope: !9948)
!9954 = !DILocation(line: 285, column: 2, scope: !9948)
!9955 = !DILocation(line: 0, scope: !9956)
!9956 = distinct !DILexicalBlock(scope: !9948, file: !1506, line: 285, column: 14)
!9957 = !DILocation(line: 302, column: 1, scope: !9948)
!9958 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1506, file: !1506, line: 325, type: !9959, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9961)
!9959 = !DISubroutineType(types: !9960)
!9960 = !{!162, !1352, !1345}
!9961 = !{!9962, !9963}
!9962 = !DILocalVariable(name: "db", arg: 1, scope: !9958, file: !1506, line: 325, type: !1352)
!9963 = !DILocalVariable(name: "p", arg: 2, scope: !9958, file: !1506, line: 326, type: !1345)
!9964 = !DILocation(line: 0, scope: !9958)
!9965 = !DILocation(line: 328, column: 2, scope: !9958)
!9966 = !DILocation(line: 353, column: 1, scope: !9958)
!9967 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1506, file: !1506, line: 393, type: !9968, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9970)
!9968 = !DISubroutineType(types: !9969)
!9969 = !{!162, !1365}
!9970 = !{!9971}
!9971 = !DILocalVariable(name: "fc", arg: 1, scope: !9967, file: !1506, line: 393, type: !1365)
!9972 = !DILocation(line: 0, scope: !9967)
!9973 = !DILocation(line: 395, column: 9, scope: !9974)
!9974 = distinct !DILexicalBlock(scope: !9967, file: !1506, line: 395, column: 6)
!9975 = !DILocation(line: 400, column: 1, scope: !9967)
!9976 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !9591, file: !9591, line: 424, type: !9622, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9977)
!9977 = !{!9978}
!9978 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9976, file: !9591, line: 424, type: !1450)
!9979 = !DILocation(line: 0, scope: !9976)
!9980 = !DILocation(line: 426, column: 3, scope: !9976)
!9981 = !DILocation(line: 427, column: 1, scope: !9976)
!9982 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1506, file: !1506, line: 197, type: !9983, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9985)
!9983 = !DISubroutineType(types: !9984)
!9984 = !{null, !1379, !162}
!9985 = !{!9986, !9987, !9988}
!9986 = !DILocalVariable(name: "dev", arg: 1, scope: !9982, file: !1506, line: 197, type: !1379)
!9987 = !DILocalVariable(name: "parity", arg: 2, scope: !9982, file: !1506, line: 198, type: !162)
!9988 = !DILocalVariable(name: "config", scope: !9982, file: !1506, line: 200, type: !9155)
!9989 = !DILocation(line: 0, scope: !9982)
!9990 = !DILocation(line: 200, column: 48, scope: !9982)
!9991 = !DILocation(line: 202, column: 29, scope: !9982)
!9992 = !DILocation(line: 202, column: 2, scope: !9982)
!9993 = !DILocation(line: 203, column: 1, scope: !9982)
!9994 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1506, file: !1506, line: 212, type: !9983, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !9995)
!9995 = !{!9996, !9997, !9998}
!9996 = !DILocalVariable(name: "dev", arg: 1, scope: !9994, file: !1506, line: 212, type: !1379)
!9997 = !DILocalVariable(name: "stopbits", arg: 2, scope: !9994, file: !1506, line: 213, type: !162)
!9998 = !DILocalVariable(name: "config", scope: !9994, file: !1506, line: 215, type: !9155)
!9999 = !DILocation(line: 0, scope: !9994)
!10000 = !DILocation(line: 215, column: 48, scope: !9994)
!10001 = !DILocation(line: 217, column: 37, scope: !9994)
!10002 = !DILocation(line: 217, column: 2, scope: !9994)
!10003 = !DILocation(line: 218, column: 1, scope: !9994)
!10004 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1506, file: !1506, line: 227, type: !9983, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !10005)
!10005 = !{!10006, !10007, !10008}
!10006 = !DILocalVariable(name: "dev", arg: 1, scope: !10004, file: !1506, line: 227, type: !1379)
!10007 = !DILocalVariable(name: "databits", arg: 2, scope: !10004, file: !1506, line: 228, type: !162)
!10008 = !DILocalVariable(name: "config", scope: !10004, file: !1506, line: 230, type: !9155)
!10009 = !DILocation(line: 0, scope: !10004)
!10010 = !DILocation(line: 230, column: 48, scope: !10004)
!10011 = !DILocation(line: 232, column: 32, scope: !10004)
!10012 = !DILocation(line: 232, column: 2, scope: !10004)
!10013 = !DILocation(line: 233, column: 1, scope: !10004)
!10014 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1506, file: !1506, line: 242, type: !9983, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !10015)
!10015 = !{!10016, !10017, !10018}
!10016 = !DILocalVariable(name: "dev", arg: 1, scope: !10014, file: !1506, line: 242, type: !1379)
!10017 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !10014, file: !1506, line: 243, type: !162)
!10018 = !DILocalVariable(name: "config", scope: !10014, file: !1506, line: 245, type: !9155)
!10019 = !DILocation(line: 0, scope: !10014)
!10020 = !DILocation(line: 245, column: 48, scope: !10014)
!10021 = !DILocation(line: 247, column: 33, scope: !10014)
!10022 = !DILocation(line: 247, column: 2, scope: !10014)
!10023 = !DILocation(line: 248, column: 1, scope: !10014)
!10024 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1506, file: !1506, line: 107, type: !9983, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !10025)
!10025 = !{!10026, !10027, !10028, !10029, !10030}
!10026 = !DILocalVariable(name: "dev", arg: 1, scope: !10024, file: !1506, line: 107, type: !1379)
!10027 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !10024, file: !1506, line: 107, type: !162)
!10028 = !DILocalVariable(name: "config", scope: !10024, file: !1506, line: 109, type: !9155)
!10029 = !DILocalVariable(name: "data", scope: !10024, file: !1506, line: 110, type: !9278)
!10030 = !DILocalVariable(name: "clock_rate", scope: !10024, file: !1506, line: 112, type: !162)
!10031 = !DILocation(line: 0, scope: !10024)
!10032 = !DILocation(line: 109, column: 48, scope: !10024)
!10033 = !DILocation(line: 110, column: 38, scope: !10024)
!10034 = !DILocation(line: 112, column: 2, scope: !10024)
!10035 = !DILocation(line: 123, column: 36, scope: !10036)
!10036 = distinct !DILexicalBlock(scope: !10037, file: !1506, line: 123, column: 7)
!10037 = distinct !DILexicalBlock(scope: !10038, file: !1506, line: 122, column: 9)
!10038 = distinct !DILexicalBlock(scope: !10024, file: !1506, line: 115, column: 6)
!10039 = !DILocation(line: 124, column: 42, scope: !10036)
!10040 = !DILocation(line: 123, column: 7, scope: !10036)
!10041 = !DILocation(line: 125, column: 22, scope: !10036)
!10042 = !DILocation(line: 123, column: 7, scope: !10037)
!10043 = !DILocation(line: 176, column: 36, scope: !10024)
!10044 = !DILocation(line: 176, column: 3, scope: !10024)
!10045 = !DILocation(line: 179, column: 32, scope: !10024)
!10046 = !DILocation(line: 180, column: 10, scope: !10024)
!10047 = !DILocation(line: 179, column: 3, scope: !10024)
!10048 = !DILocation(line: 195, column: 1, scope: !10024)
!10049 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !9591, file: !9591, line: 410, type: !9622, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !10050)
!10050 = !{!10051}
!10051 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10049, file: !9591, line: 410, type: !1450)
!10052 = !DILocation(line: 0, scope: !10049)
!10053 = !DILocation(line: 412, column: 3, scope: !10049)
!10054 = !DILocation(line: 413, column: 1, scope: !10049)
!10055 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !800, file: !800, line: 216, type: !1483, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !10056)
!10056 = !{!10057, !10058, !10059, !10060}
!10057 = !DILocalVariable(name: "dev", arg: 1, scope: !10055, file: !800, line: 216, type: !1379)
!10058 = !DILocalVariable(name: "sys", arg: 2, scope: !10055, file: !800, line: 217, type: !892)
!10059 = !DILocalVariable(name: "rate", arg: 3, scope: !10055, file: !800, line: 218, type: !848)
!10060 = !DILocalVariable(name: "api", scope: !10055, file: !800, line: 220, type: !1461)
!10061 = !DILocation(line: 0, scope: !10055)
!10062 = !DILocation(line: 221, column: 49, scope: !10055)
!10063 = !DILocation(line: 223, column: 11, scope: !10064)
!10064 = distinct !DILexicalBlock(scope: !10055, file: !800, line: 223, column: 6)
!10065 = !DILocation(line: 223, column: 20, scope: !10064)
!10066 = !DILocation(line: 223, column: 6, scope: !10055)
!10067 = !DILocation(line: 227, column: 9, scope: !10055)
!10068 = !DILocation(line: 227, column: 2, scope: !10055)
!10069 = !DILocation(line: 228, column: 1, scope: !10055)
!10070 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !9591, file: !9591, line: 615, type: !10071, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !10073)
!10071 = !DISubroutineType(types: !10072)
!10072 = !{null, !1450, !162}
!10073 = !{!10074, !10075}
!10074 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10070, file: !9591, line: 615, type: !1450)
!10075 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !10070, file: !9591, line: 615, type: !162)
!10076 = !DILocation(line: 0, scope: !10070)
!10077 = !DILocation(line: 617, column: 3, scope: !10070)
!10078 = !DILocation(line: 618, column: 1, scope: !10070)
!10079 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !9591, file: !9591, line: 1020, type: !10080, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !10082)
!10080 = !DISubroutineType(types: !10081)
!10081 = !{null, !1450, !162, !162, !162}
!10082 = !{!10083, !10084, !10085, !10086}
!10083 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10079, file: !9591, line: 1020, type: !1450)
!10084 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !10079, file: !9591, line: 1020, type: !162)
!10085 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !10079, file: !9591, line: 1020, type: !162)
!10086 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !10079, file: !9591, line: 1021, type: !162)
!10087 = !DILocation(line: 0, scope: !10079)
!10088 = !DILocation(line: 1029, column: 30, scope: !10089)
!10089 = distinct !DILexicalBlock(scope: !10090, file: !9591, line: 1028, column: 3)
!10090 = distinct !DILexicalBlock(scope: !10079, file: !9591, line: 1023, column: 7)
!10091 = !DILocation(line: 1029, column: 19, scope: !10089)
!10092 = !DILocation(line: 1029, column: 13, scope: !10089)
!10093 = !DILocation(line: 1029, column: 17, scope: !10089)
!10094 = !DILocation(line: 1031, column: 1, scope: !10079)
!10095 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !9591, file: !9591, line: 949, type: !10071, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !10096)
!10096 = !{!10097, !10098}
!10097 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10095, file: !9591, line: 949, type: !1450)
!10098 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !10095, file: !9591, line: 949, type: !162)
!10099 = !DILocation(line: 0, scope: !10095)
!10100 = !DILocation(line: 951, column: 3, scope: !10095)
!10101 = !DILocation(line: 952, column: 1, scope: !10095)
!10102 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !9591, file: !9591, line: 588, type: !10071, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !10103)
!10103 = !{!10104, !10105}
!10104 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10102, file: !9591, line: 588, type: !1450)
!10105 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10102, file: !9591, line: 588, type: !162)
!10106 = !DILocation(line: 0, scope: !10102)
!10107 = !DILocation(line: 590, column: 3, scope: !10102)
!10108 = !DILocation(line: 591, column: 1, scope: !10102)
!10109 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !9591, file: !9591, line: 805, type: !10071, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !10110)
!10110 = !{!10111, !10112}
!10111 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10109, file: !9591, line: 805, type: !1450)
!10112 = !DILocalVariable(name: "StopBits", arg: 2, scope: !10109, file: !9591, line: 805, type: !162)
!10113 = !DILocation(line: 0, scope: !10109)
!10114 = !DILocation(line: 807, column: 3, scope: !10109)
!10115 = !DILocation(line: 808, column: 1, scope: !10109)
!10116 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !9591, file: !9591, line: 532, type: !10071, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !10117)
!10117 = !{!10118, !10119}
!10118 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10116, file: !9591, line: 532, type: !1450)
!10119 = !DILocalVariable(name: "Parity", arg: 2, scope: !10116, file: !9591, line: 532, type: !162)
!10120 = !DILocation(line: 0, scope: !10116)
!10121 = !DILocation(line: 534, column: 3, scope: !10116)
!10122 = !DILocation(line: 535, column: 1, scope: !10116)
!10123 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !9591, file: !9591, line: 1737, type: !9592, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !10124)
!10124 = !{!10125}
!10125 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10123, file: !9591, line: 1737, type: !1450)
!10126 = !DILocation(line: 0, scope: !10123)
!10127 = !DILocation(line: 1739, column: 11, scope: !10123)
!10128 = !DILocation(line: 1739, column: 3, scope: !10123)
!10129 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !9591, file: !9591, line: 1748, type: !9592, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !10130)
!10130 = !{!10131}
!10131 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10129, file: !9591, line: 1748, type: !1450)
!10132 = !DILocation(line: 0, scope: !10129)
!10133 = !DILocation(line: 1750, column: 11, scope: !10129)
!10134 = !DILocation(line: 1750, column: 45, scope: !10129)
!10135 = !DILocation(line: 1750, column: 3, scope: !10129)
!10136 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !9591, file: !9591, line: 1827, type: !9592, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !10137)
!10137 = !{!10138}
!10138 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10136, file: !9591, line: 1827, type: !1450)
!10139 = !DILocation(line: 0, scope: !10136)
!10140 = !DILocation(line: 1829, column: 11, scope: !10136)
!10141 = !DILocation(line: 1829, column: 46, scope: !10136)
!10142 = !DILocation(line: 1829, column: 3, scope: !10136)
!10143 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !9591, file: !9591, line: 1992, type: !9622, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !10144)
!10144 = !{!10145}
!10145 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10143, file: !9591, line: 1992, type: !1450)
!10146 = !DILocation(line: 0, scope: !10143)
!10147 = !DILocation(line: 1994, column: 3, scope: !10143)
!10148 = !DILocation(line: 1995, column: 1, scope: !10143)
!10149 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !9591, file: !9591, line: 1877, type: !9622, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !10150)
!10150 = !{!10151, !10152}
!10151 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10149, file: !9591, line: 1877, type: !1450)
!10152 = !DILocalVariable(name: "tmpreg", scope: !10149, file: !9591, line: 1879, type: !283)
!10153 = !DILocation(line: 0, scope: !10149)
!10154 = !DILocation(line: 1879, column: 3, scope: !10149)
!10155 = !DILocation(line: 1879, column: 17, scope: !10149)
!10156 = !DILocation(line: 1880, column: 20, scope: !10149)
!10157 = !DILocation(line: 1880, column: 10, scope: !10149)
!10158 = !DILocation(line: 1881, column: 10, scope: !10149)
!10159 = !DILocation(line: 1882, column: 20, scope: !10149)
!10160 = !DILocation(line: 1882, column: 10, scope: !10149)
!10161 = !DILocation(line: 1883, column: 10, scope: !10149)
!10162 = !DILocation(line: 1884, column: 1, scope: !10149)
!10163 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !9591, file: !9591, line: 1896, type: !9622, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !10164)
!10164 = !{!10165, !10166}
!10165 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10163, file: !9591, line: 1896, type: !1450)
!10166 = !DILocalVariable(name: "tmpreg", scope: !10163, file: !9591, line: 1898, type: !283)
!10167 = !DILocation(line: 0, scope: !10163)
!10168 = !DILocation(line: 1898, column: 3, scope: !10163)
!10169 = !DILocation(line: 1898, column: 17, scope: !10163)
!10170 = !DILocation(line: 1899, column: 20, scope: !10163)
!10171 = !DILocation(line: 1899, column: 10, scope: !10163)
!10172 = !DILocation(line: 1900, column: 10, scope: !10163)
!10173 = !DILocation(line: 1901, column: 20, scope: !10163)
!10174 = !DILocation(line: 1901, column: 10, scope: !10163)
!10175 = !DILocation(line: 1902, column: 10, scope: !10163)
!10176 = !DILocation(line: 1903, column: 1, scope: !10163)
!10177 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !9591, file: !9591, line: 1915, type: !9622, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !10178)
!10178 = !{!10179, !10180}
!10179 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10177, file: !9591, line: 1915, type: !1450)
!10180 = !DILocalVariable(name: "tmpreg", scope: !10177, file: !9591, line: 1917, type: !283)
!10181 = !DILocation(line: 0, scope: !10177)
!10182 = !DILocation(line: 1917, column: 3, scope: !10177)
!10183 = !DILocation(line: 1917, column: 17, scope: !10177)
!10184 = !DILocation(line: 1918, column: 20, scope: !10177)
!10185 = !DILocation(line: 1918, column: 10, scope: !10177)
!10186 = !DILocation(line: 1919, column: 10, scope: !10177)
!10187 = !DILocation(line: 1920, column: 20, scope: !10177)
!10188 = !DILocation(line: 1920, column: 10, scope: !10177)
!10189 = !DILocation(line: 1921, column: 10, scope: !10177)
!10190 = !DILocation(line: 1922, column: 1, scope: !10177)
!10191 = !DILocation(line: 0, scope: !1560)
!10192 = !DILocation(line: 1914, column: 1, scope: !10193)
!10193 = distinct !DILexicalBlock(scope: !1560, file: !1506, line: 1914, column: 1)
!10194 = !DILocation(line: 1914, column: 1, scope: !1560)
!10195 = distinct !DISubprogram(name: "uart_stm32_isr", scope: !1506, file: !1506, line: 987, type: !1430, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !10196)
!10196 = !{!10197, !10198}
!10197 = !DILocalVariable(name: "dev", arg: 1, scope: !10195, file: !1506, line: 987, type: !1379)
!10198 = !DILocalVariable(name: "data", scope: !10195, file: !1506, line: 989, type: !9278)
!10199 = !DILocation(line: 0, scope: !10195)
!10200 = !DILocation(line: 989, column: 38, scope: !10195)
!10201 = !DILocation(line: 1014, column: 12, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10195, file: !1506, line: 1014, column: 6)
!10203 = !DILocation(line: 1014, column: 6, scope: !10202)
!10204 = !DILocation(line: 1014, column: 6, scope: !10195)
!10205 = !DILocation(line: 1015, column: 28, scope: !10206)
!10206 = distinct !DILexicalBlock(scope: !10202, file: !1506, line: 1014, column: 21)
!10207 = !DILocation(line: 1015, column: 3, scope: !10206)
!10208 = !DILocation(line: 1016, column: 2, scope: !10206)
!10209 = !DILocation(line: 1059, column: 1, scope: !10195)
!10210 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1506, file: !1506, line: 1583, type: !1400, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !10211)
!10211 = !{!10212, !10213, !10214, !10215, !10216, !10217}
!10212 = !DILocalVariable(name: "dev", arg: 1, scope: !10210, file: !1506, line: 1583, type: !1379)
!10213 = !DILocalVariable(name: "config", scope: !10210, file: !1506, line: 1585, type: !9155)
!10214 = !DILocalVariable(name: "data", scope: !10210, file: !1506, line: 1586, type: !9278)
!10215 = !DILocalVariable(name: "ll_parity", scope: !10210, file: !1506, line: 1587, type: !162)
!10216 = !DILocalVariable(name: "ll_datawidth", scope: !10210, file: !1506, line: 1588, type: !162)
!10217 = !DILocalVariable(name: "err", scope: !10210, file: !1506, line: 1589, type: !107)
!10218 = !DILocation(line: 0, scope: !10210)
!10219 = !DILocation(line: 1585, column: 48, scope: !10210)
!10220 = !DILocation(line: 1586, column: 38, scope: !10210)
!10221 = !DILocation(line: 1591, column: 2, scope: !10210)
!10222 = !DILocation(line: 1593, column: 29, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !10210, file: !1506, line: 1593, column: 6)
!10224 = !DILocation(line: 1593, column: 7, scope: !10223)
!10225 = !DILocation(line: 1593, column: 6, scope: !10210)
!10226 = !DILocation(line: 1599, column: 31, scope: !10210)
!10227 = !DILocation(line: 1599, column: 71, scope: !10210)
!10228 = !DILocation(line: 1599, column: 8, scope: !10210)
!10229 = !DILocation(line: 1600, column: 10, scope: !10230)
!10230 = distinct !DILexicalBlock(scope: !10210, file: !1506, line: 1600, column: 6)
!10231 = !DILocation(line: 1600, column: 6, scope: !10210)
!10232 = !DILocation(line: 1616, column: 36, scope: !10210)
!10233 = !DILocation(line: 1616, column: 8, scope: !10210)
!10234 = !DILocation(line: 1617, column: 10, scope: !10235)
!10235 = distinct !DILexicalBlock(scope: !10210, file: !1506, line: 1617, column: 6)
!10236 = !DILocation(line: 1617, column: 6, scope: !10210)
!10237 = !DILocation(line: 1621, column: 27, scope: !10210)
!10238 = !DILocation(line: 1621, column: 2, scope: !10210)
!10239 = !DILocation(line: 1624, column: 40, scope: !10210)
!10240 = !DILocation(line: 1624, column: 2, scope: !10210)
!10241 = !DILocation(line: 1630, column: 14, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10210, file: !1506, line: 1630, column: 6)
!10243 = !DILocation(line: 1630, column: 6, scope: !10210)
!10244 = !DILocation(line: 1638, column: 2, scope: !10245)
!10245 = distinct !DILexicalBlock(scope: !10246, file: !1506, line: 1634, column: 34)
!10246 = distinct !DILexicalBlock(scope: !10242, file: !1506, line: 1634, column: 13)
!10247 = !DILocation(line: 0, scope: !10242)
!10248 = !DILocation(line: 1649, column: 35, scope: !10210)
!10249 = !DILocation(line: 1649, column: 2, scope: !10210)
!10250 = !DILocation(line: 1654, column: 14, scope: !10251)
!10251 = distinct !DILexicalBlock(scope: !10210, file: !1506, line: 1654, column: 6)
!10252 = !DILocation(line: 1654, column: 6, scope: !10210)
!10253 = !DILocation(line: 1655, column: 3, scope: !10254)
!10254 = distinct !DILexicalBlock(scope: !10251, file: !1506, line: 1654, column: 31)
!10255 = !DILocation(line: 1656, column: 2, scope: !10254)
!10256 = !DILocation(line: 1659, column: 37, scope: !10210)
!10257 = !DILocation(line: 1659, column: 2, scope: !10210)
!10258 = !DILocation(line: 1662, column: 14, scope: !10259)
!10259 = distinct !DILexicalBlock(scope: !10210, file: !1506, line: 1662, column: 6)
!10260 = !DILocation(line: 1662, column: 6, scope: !10210)
!10261 = !DILocation(line: 1663, column: 37, scope: !10262)
!10262 = distinct !DILexicalBlock(scope: !10259, file: !1506, line: 1662, column: 27)
!10263 = !DILocation(line: 1663, column: 3, scope: !10262)
!10264 = !DILocation(line: 1664, column: 2, scope: !10262)
!10265 = !DILocation(line: 1684, column: 26, scope: !10210)
!10266 = !DILocation(line: 1684, column: 2, scope: !10210)
!10267 = !DILocation(line: 1701, column: 10, scope: !10210)
!10268 = !DILocation(line: 1701, column: 2, scope: !10210)
!10269 = !DILocation(line: 1722, column: 2, scope: !10210)
!10270 = !DILocation(line: 1724, column: 1, scope: !10210)
!10271 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1506, file: !1506, line: 651, type: !1430, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !10272)
!10272 = !{!10273, !10274, !10275}
!10273 = !DILocalVariable(name: "dev", arg: 1, scope: !10271, file: !1506, line: 651, type: !1379)
!10274 = !DILocalVariable(name: "data", scope: !10271, file: !1506, line: 653, type: !9278)
!10275 = !DILocalVariable(name: "clk", scope: !10271, file: !1506, line: 654, type: !10276)
!10276 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1379)
!10277 = !DILocation(line: 0, scope: !10271)
!10278 = !DILocation(line: 653, column: 38, scope: !10271)
!10279 = !DILocation(line: 656, column: 8, scope: !10271)
!10280 = !DILocation(line: 656, column: 14, scope: !10271)
!10281 = !DILocation(line: 657, column: 1, scope: !10271)
!10282 = distinct !DISubprogram(name: "device_is_ready", scope: !3420, file: !3420, line: 47, type: !10283, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !10285)
!10283 = !DISubroutineType(types: !10284)
!10284 = !{!136, !1379}
!10285 = !{!10286}
!10286 = !DILocalVariable(name: "dev", arg: 1, scope: !10282, file: !3420, line: 47, type: !1379)
!10287 = !DILocation(line: 0, scope: !10282)
!10288 = !DILocation(line: 55, column: 2, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !10282, file: !3420, line: 55, column: 2)
!10290 = !{i64 2155125795}
!10291 = !DILocation(line: 56, column: 9, scope: !10282)
!10292 = !DILocation(line: 56, column: 2, scope: !10282)
!10293 = distinct !DISubprogram(name: "clock_control_on", scope: !800, file: !800, line: 123, type: !1468, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !10294)
!10294 = !{!10295, !10296, !10297}
!10295 = !DILocalVariable(name: "dev", arg: 1, scope: !10293, file: !800, line: 123, type: !1379)
!10296 = !DILocalVariable(name: "sys", arg: 2, scope: !10293, file: !800, line: 124, type: !892)
!10297 = !DILocalVariable(name: "api", scope: !10293, file: !800, line: 126, type: !1461)
!10298 = !DILocation(line: 0, scope: !10293)
!10299 = !DILocation(line: 127, column: 49, scope: !10293)
!10300 = !DILocation(line: 129, column: 14, scope: !10293)
!10301 = !DILocation(line: 129, column: 9, scope: !10293)
!10302 = !DILocation(line: 129, column: 2, scope: !10293)
!10303 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1533, file: !1533, line: 342, type: !10304, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !10306)
!10304 = !DISubroutineType(types: !10305)
!10305 = !{!107, !1594, !133}
!10306 = !{!10307, !10308, !10309, !10310}
!10307 = !DILocalVariable(name: "config", arg: 1, scope: !10303, file: !1533, line: 342, type: !1594)
!10308 = !DILocalVariable(name: "id", arg: 2, scope: !10303, file: !1533, line: 343, type: !133)
!10309 = !DILocalVariable(name: "ret", scope: !10303, file: !1533, line: 345, type: !107)
!10310 = !DILocalVariable(name: "state", scope: !10303, file: !1533, line: 346, type: !1536)
!10311 = !DILocation(line: 0, scope: !10303)
!10312 = !DILocation(line: 346, column: 2, scope: !10303)
!10313 = !DILocation(line: 348, column: 8, scope: !10303)
!10314 = !DILocation(line: 349, column: 10, scope: !10315)
!10315 = distinct !DILexicalBlock(scope: !10303, file: !1533, line: 349, column: 6)
!10316 = !DILocation(line: 349, column: 6, scope: !10303)
!10317 = !DILocation(line: 353, column: 44, scope: !10303)
!10318 = !DILocation(line: 353, column: 9, scope: !10303)
!10319 = !DILocation(line: 353, column: 2, scope: !10303)
!10320 = !DILocation(line: 354, column: 1, scope: !10303)
!10321 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !9591, file: !9591, line: 497, type: !10071, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !10322)
!10322 = !{!10323, !10324, !10325}
!10323 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10321, file: !9591, line: 497, type: !1450)
!10324 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10321, file: !9591, line: 497, type: !162)
!10325 = !DILocalVariable(name: "val", scope: !10326, file: !9591, line: 499, type: !162)
!10326 = distinct !DILexicalBlock(scope: !10321, file: !9591, line: 499, column: 3)
!10327 = !DILocation(line: 0, scope: !10321)
!10328 = !DILocation(line: 499, column: 3, scope: !10326)
!10329 = !DILocation(line: 0, scope: !9631, inlinedAt: !10330)
!10330 = distinct !DILocation(line: 499, column: 3, scope: !10331)
!10331 = distinct !DILexicalBlock(scope: !10326, file: !9591, line: 499, column: 3)
!10332 = !DILocation(line: 480, column: 4, scope: !9631, inlinedAt: !10330)
!10333 = !DILocation(line: 499, column: 3, scope: !10331)
!10334 = !DILocation(line: 0, scope: !10326)
!10335 = !DILocation(line: 0, scope: !9644, inlinedAt: !10336)
!10336 = distinct !DILocation(line: 499, column: 3, scope: !10326)
!10337 = !DILocation(line: 531, column: 4, scope: !9644, inlinedAt: !10336)
!10338 = distinct !{!10338, !10328, !10328}
!10339 = !DILocation(line: 500, column: 1, scope: !10321)
!10340 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !9591, file: !9591, line: 850, type: !10080, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !10341)
!10341 = !{!10342, !10343, !10344, !10345}
!10342 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10340, file: !9591, line: 850, type: !1450)
!10343 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10340, file: !9591, line: 850, type: !162)
!10344 = !DILocalVariable(name: "Parity", arg: 3, scope: !10340, file: !9591, line: 850, type: !162)
!10345 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10340, file: !9591, line: 851, type: !162)
!10346 = !DILocation(line: 0, scope: !10340)
!10347 = !DILocation(line: 853, column: 3, scope: !10340)
!10348 = !DILocation(line: 854, column: 3, scope: !10340)
!10349 = !DILocation(line: 855, column: 1, scope: !10340)
!10350 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !9591, file: !9591, line: 1337, type: !9622, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !10351)
!10351 = !{!10352}
!10352 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10350, file: !9591, line: 1337, type: !1450)
!10353 = !DILocation(line: 0, scope: !10350)
!10354 = !DILocation(line: 1339, column: 3, scope: !10350)
!10355 = !DILocation(line: 1340, column: 1, scope: !10350)
!10356 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1533, file: !1533, line: 316, type: !10357, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !10359)
!10357 = !DISubroutineType(types: !10358)
!10358 = !{!107, !1594, !1536}
!10359 = !{!10360, !10361, !10362}
!10360 = !DILocalVariable(name: "config", arg: 1, scope: !10356, file: !1533, line: 317, type: !1594)
!10361 = !DILocalVariable(name: "state", arg: 2, scope: !10356, file: !1533, line: 318, type: !1536)
!10362 = !DILocalVariable(name: "reg", scope: !10356, file: !1533, line: 320, type: !22)
!10363 = !DILocation(line: 0, scope: !10356)
!10364 = !DILocation(line: 329, column: 39, scope: !10356)
!10365 = !DILocation(line: 329, column: 52, scope: !10356)
!10366 = !DILocation(line: 329, column: 9, scope: !10356)
!10367 = !DILocation(line: 329, column: 2, scope: !10356)
!10368 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !120, file: !120, line: 730, type: !10283, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1335, retainedNodes: !10369)
!10369 = !{!10370}
!10370 = !DILocalVariable(name: "dev", arg: 1, scope: !10368, file: !120, line: 730, type: !1379)
!10371 = !DILocation(line: 0, scope: !10368)
!10372 = !DILocation(line: 732, column: 9, scope: !10368)
!10373 = !DILocation(line: 732, column: 2, scope: !10368)
!10374 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1677, file: !1677, line: 270, type: !1683, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1599, retainedNodes: !10375)
!10375 = !{!10376}
!10376 = !DILocalVariable(name: "dev", arg: 1, scope: !10374, file: !1677, line: 270, type: !1685)
!10377 = !DILocation(line: 0, scope: !10374)
!10378 = !DILocation(line: 274, column: 2, scope: !10374)
!10379 = !DILocation(line: 275, column: 12, scope: !10374)
!10380 = !DILocation(line: 276, column: 15, scope: !10374)
!10381 = !DILocation(line: 277, column: 16, scope: !10374)
!10382 = !DILocation(line: 278, column: 15, scope: !10374)
!10383 = !DILocation(line: 279, column: 16, scope: !10374)
!10384 = !DILocation(line: 282, column: 2, scope: !10374)
!10385 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !497, file: !497, line: 1814, type: !6121, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1599, retainedNodes: !10386)
!10386 = !{!10387, !10388}
!10387 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10385, file: !497, line: 1814, type: !754)
!10388 = !DILocalVariable(name: "priority", arg: 2, scope: !10385, file: !497, line: 1814, type: !162)
!10389 = !DILocation(line: 0, scope: !10385)
!10390 = !DILocation(line: 1822, column: 46, scope: !10391)
!10391 = distinct !DILexicalBlock(scope: !10392, file: !497, line: 1821, column: 3)
!10392 = distinct !DILexicalBlock(scope: !10385, file: !497, line: 1816, column: 7)
!10393 = !DILocation(line: 1824, column: 1, scope: !10385)
!10394 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1677, file: !1677, line: 118, type: !6024, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1599, retainedNodes: !10395)
!10395 = !{!10396, !10397}
!10396 = !DILocalVariable(name: "arg", arg: 1, scope: !10394, file: !1677, line: 118, type: !102)
!10397 = !DILocalVariable(name: "dticks", scope: !10394, file: !1677, line: 121, type: !162)
!10398 = !DILocation(line: 0, scope: !10394)
!10399 = !DILocation(line: 124, column: 2, scope: !10394)
!10400 = !DILocation(line: 129, column: 17, scope: !10394)
!10401 = !DILocation(line: 129, column: 14, scope: !10394)
!10402 = !DILocation(line: 130, column: 15, scope: !10394)
!10403 = !DILocation(line: 145, column: 27, scope: !10404)
!10404 = distinct !DILexicalBlock(scope: !10405, file: !1677, line: 132, column: 16)
!10405 = distinct !DILexicalBlock(scope: !10394, file: !1677, line: 132, column: 6)
!10406 = !DILocation(line: 145, column: 25, scope: !10404)
!10407 = !DILocation(line: 145, column: 45, scope: !10404)
!10408 = !DILocation(line: 146, column: 30, scope: !10404)
!10409 = !DILocation(line: 146, column: 20, scope: !10404)
!10410 = !DILocation(line: 147, column: 3, scope: !10404)
!10411 = !DILocation(line: 151, column: 2, scope: !10394)
!10412 = !DILocation(line: 152, column: 1, scope: !10394)
!10413 = distinct !DISubprogram(name: "elapsed", scope: !1677, file: !1677, line: 85, type: !6168, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1599, retainedNodes: !10414)
!10414 = !{!10415, !10416, !10417}
!10415 = !DILocalVariable(name: "val1", scope: !10413, file: !1677, line: 87, type: !162)
!10416 = !DILocalVariable(name: "ctrl", scope: !10413, file: !1677, line: 88, type: !162)
!10417 = !DILocalVariable(name: "val2", scope: !10413, file: !1677, line: 89, type: !162)
!10418 = !DILocation(line: 87, column: 27, scope: !10413)
!10419 = !DILocation(line: 0, scope: !10413)
!10420 = !DILocation(line: 88, column: 27, scope: !10413)
!10421 = !DILocation(line: 89, column: 27, scope: !10413)
!10422 = !DILocation(line: 105, column: 12, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !10413, file: !1677, line: 105, column: 6)
!10424 = !DILocation(line: 106, column: 6, scope: !10423)
!10425 = !DILocation(line: 107, column: 16, scope: !10426)
!10426 = distinct !DILexicalBlock(scope: !10423, file: !1677, line: 106, column: 24)
!10427 = !DILocation(line: 111, column: 18, scope: !10426)
!10428 = !DILocation(line: 112, column: 2, scope: !10426)
!10429 = !DILocation(line: 114, column: 20, scope: !10413)
!10430 = !DILocation(line: 114, column: 30, scope: !10413)
!10431 = !DILocation(line: 114, column: 28, scope: !10413)
!10432 = !DILocation(line: 114, column: 2, scope: !10413)
!10433 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1677, file: !1677, line: 154, type: !10434, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1599, retainedNodes: !10436)
!10434 = !DISubroutineType(types: !10435)
!10435 = !{null, !728, !136}
!10436 = !{!10437, !10438, !10439, !10440, !10441, !10442, !10443, !10448, !10449}
!10437 = !DILocalVariable(name: "ticks", arg: 1, scope: !10433, file: !1677, line: 154, type: !728)
!10438 = !DILocalVariable(name: "idle", arg: 2, scope: !10433, file: !1677, line: 154, type: !136)
!10439 = !DILocalVariable(name: "delay", scope: !10433, file: !1677, line: 169, type: !162)
!10440 = !DILocalVariable(name: "val1", scope: !10433, file: !1677, line: 170, type: !162)
!10441 = !DILocalVariable(name: "val2", scope: !10433, file: !1677, line: 170, type: !162)
!10442 = !DILocalVariable(name: "last_load_", scope: !10433, file: !1677, line: 171, type: !162)
!10443 = !DILocalVariable(name: "key", scope: !10433, file: !1677, line: 176, type: !10444)
!10444 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !249, line: 106, baseType: !10445)
!10445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !249, line: 32, size: 32, elements: !10446)
!10446 = !{!10447}
!10447 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10445, file: !249, line: 33, baseType: !107, size: 32)
!10448 = !DILocalVariable(name: "pending", scope: !10433, file: !1677, line: 178, type: !162)
!10449 = !DILocalVariable(name: "unannounced", scope: !10433, file: !1677, line: 185, type: !162)
!10450 = !DILocation(line: 0, scope: !10433)
!10451 = !DILocation(line: 162, column: 49, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10433, file: !1677, line: 162, column: 6)
!10453 = !DILocation(line: 163, column: 17, scope: !10454)
!10454 = distinct !DILexicalBlock(scope: !10452, file: !1677, line: 162, column: 78)
!10455 = !DILocation(line: 164, column: 13, scope: !10454)
!10456 = !DILocation(line: 165, column: 3, scope: !10454)
!10457 = !DILocation(line: 171, column: 24, scope: !10433)
!10458 = !DILocation(line: 173, column: 10, scope: !10433)
!10459 = !DILocation(line: 174, column: 10, scope: !10433)
!10460 = !DILocalVariable(name: "l", arg: 1, scope: !10461, file: !249, line: 136, type: !10464)
!10461 = distinct !DISubprogram(name: "k_spin_lock", scope: !249, file: !249, line: 136, type: !10462, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1599, retainedNodes: !10465)
!10462 = !DISubroutineType(types: !10463)
!10463 = !{!10444, !10464}
!10464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 32)
!10465 = !{!10460, !10466}
!10466 = !DILocalVariable(name: "k", scope: !10461, file: !249, line: 139, type: !10444)
!10467 = !DILocation(line: 0, scope: !10461, inlinedAt: !10468)
!10468 = distinct !DILocation(line: 176, column: 25, scope: !10433)
!10469 = !DILocation(line: 55, column: 2, scope: !10470, inlinedAt: !10474)
!10470 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5913, file: !5913, line: 42, type: !5914, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1599, retainedNodes: !10471)
!10471 = !{!10472, !10473}
!10472 = !DILocalVariable(name: "key", scope: !10470, file: !5913, line: 44, type: !32)
!10473 = !DILocalVariable(name: "tmp", scope: !10470, file: !5913, line: 53, type: !32)
!10474 = distinct !DILocation(line: 145, column: 10, scope: !10461, inlinedAt: !10468)
!10475 = !{i64 2195717}
!10476 = !DILocation(line: 0, scope: !10470, inlinedAt: !10474)
!10477 = !DILocation(line: 178, column: 21, scope: !10433)
!10478 = !DILocation(line: 180, column: 18, scope: !10433)
!10479 = !DILocation(line: 182, column: 14, scope: !10433)
!10480 = !DILocation(line: 183, column: 15, scope: !10433)
!10481 = !DILocation(line: 185, column: 39, scope: !10433)
!10482 = !DILocation(line: 185, column: 37, scope: !10433)
!10483 = !DILocation(line: 187, column: 27, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !10433, file: !1677, line: 187, column: 6)
!10485 = !DILocation(line: 187, column: 6, scope: !10433)
!10486 = !DILocation(line: 202, column: 27, scope: !10487)
!10487 = distinct !DILexicalBlock(scope: !10484, file: !1677, line: 195, column: 9)
!10488 = !DILocation(line: 202, column: 48, scope: !10487)
!10489 = !DILocation(line: 203, column: 9, scope: !10487)
!10490 = !DILocation(line: 204, column: 11, scope: !10487)
!10491 = !DILocation(line: 205, column: 13, scope: !10492)
!10492 = distinct !DILexicalBlock(scope: !10487, file: !1677, line: 205, column: 7)
!10493 = !DILocation(line: 205, column: 7, scope: !10487)
!10494 = !DILocation(line: 0, scope: !10484)
!10495 = !DILocation(line: 212, column: 18, scope: !10433)
!10496 = !DILocation(line: 214, column: 28, scope: !10433)
!10497 = !DILocation(line: 214, column: 16, scope: !10433)
!10498 = !DILocation(line: 215, column: 15, scope: !10433)
!10499 = !DILocation(line: 227, column: 11, scope: !10500)
!10500 = distinct !DILexicalBlock(scope: !10433, file: !1677, line: 227, column: 6)
!10501 = !DILocation(line: 227, column: 6, scope: !10433)
!10502 = !DILocation(line: 228, column: 15, scope: !10503)
!10503 = distinct !DILexicalBlock(scope: !10500, file: !1677, line: 227, column: 19)
!10504 = !DILocation(line: 228, column: 38, scope: !10503)
!10505 = !DILocation(line: 228, column: 24, scope: !10503)
!10506 = !DILocation(line: 229, column: 2, scope: !10503)
!10507 = !DILocation(line: 230, column: 24, scope: !10508)
!10508 = distinct !DILexicalBlock(scope: !10500, file: !1677, line: 229, column: 9)
!10509 = !DILocation(line: 230, column: 15, scope: !10508)
!10510 = !DILocation(line: 0, scope: !10500)
!10511 = !DILocalVariable(name: "key", arg: 2, scope: !10512, file: !249, line: 190, type: !10444)
!10512 = distinct !DISubprogram(name: "k_spin_unlock", scope: !249, file: !249, line: 189, type: !10513, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1599, retainedNodes: !10515)
!10513 = !DISubroutineType(types: !10514)
!10514 = !{null, !10464, !10444}
!10515 = !{!10516, !10511}
!10516 = !DILocalVariable(name: "l", arg: 1, scope: !10512, file: !249, line: 189, type: !10464)
!10517 = !DILocation(line: 0, scope: !10512, inlinedAt: !10518)
!10518 = distinct !DILocation(line: 232, column: 2, scope: !10433)
!10519 = !DILocalVariable(name: "key", arg: 1, scope: !10520, file: !5913, line: 84, type: !32)
!10520 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5913, file: !5913, line: 84, type: !5924, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1599, retainedNodes: !10521)
!10521 = !{!10519}
!10522 = !DILocation(line: 0, scope: !10520, inlinedAt: !10523)
!10523 = distinct !DILocation(line: 215, column: 2, scope: !10512, inlinedAt: !10518)
!10524 = !DILocation(line: 95, column: 2, scope: !10520, inlinedAt: !10523)
!10525 = !{i64 2196534}
!10526 = !DILocation(line: 234, column: 1, scope: !10433)
!10527 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1677, file: !1677, line: 236, type: !6168, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1599, retainedNodes: !10528)
!10528 = !{!10529, !10530}
!10529 = !DILocalVariable(name: "key", scope: !10527, file: !1677, line: 242, type: !10444)
!10530 = !DILocalVariable(name: "cyc", scope: !10527, file: !1677, line: 243, type: !162)
!10531 = !DILocation(line: 0, scope: !10461, inlinedAt: !10532)
!10532 = distinct !DILocation(line: 242, column: 25, scope: !10527)
!10533 = !DILocation(line: 55, column: 2, scope: !10470, inlinedAt: !10534)
!10534 = distinct !DILocation(line: 145, column: 10, scope: !10461, inlinedAt: !10532)
!10535 = !DILocation(line: 0, scope: !10470, inlinedAt: !10534)
!10536 = !DILocation(line: 0, scope: !10527)
!10537 = !DILocation(line: 243, column: 17, scope: !10527)
!10538 = !DILocation(line: 243, column: 29, scope: !10527)
!10539 = !DILocation(line: 243, column: 27, scope: !10527)
!10540 = !DILocation(line: 243, column: 43, scope: !10527)
!10541 = !DILocation(line: 243, column: 41, scope: !10527)
!10542 = !DILocation(line: 0, scope: !10512, inlinedAt: !10543)
!10543 = distinct !DILocation(line: 245, column: 2, scope: !10527)
!10544 = !DILocation(line: 0, scope: !10520, inlinedAt: !10545)
!10545 = distinct !DILocation(line: 215, column: 2, scope: !10512, inlinedAt: !10543)
!10546 = !DILocation(line: 95, column: 2, scope: !10520, inlinedAt: !10545)
!10547 = !DILocation(line: 246, column: 13, scope: !10527)
!10548 = !DILocation(line: 246, column: 2, scope: !10527)
!10549 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1677, file: !1677, line: 249, type: !6168, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1599, retainedNodes: !10550)
!10550 = !{!10551, !10552}
!10551 = !DILocalVariable(name: "key", scope: !10549, file: !1677, line: 251, type: !10444)
!10552 = !DILocalVariable(name: "ret", scope: !10549, file: !1677, line: 252, type: !162)
!10553 = !DILocation(line: 0, scope: !10461, inlinedAt: !10554)
!10554 = distinct !DILocation(line: 251, column: 25, scope: !10549)
!10555 = !DILocation(line: 55, column: 2, scope: !10470, inlinedAt: !10556)
!10556 = distinct !DILocation(line: 145, column: 10, scope: !10461, inlinedAt: !10554)
!10557 = !DILocation(line: 0, scope: !10470, inlinedAt: !10556)
!10558 = !DILocation(line: 0, scope: !10549)
!10559 = !DILocation(line: 252, column: 17, scope: !10549)
!10560 = !DILocation(line: 252, column: 29, scope: !10549)
!10561 = !DILocation(line: 252, column: 27, scope: !10549)
!10562 = !DILocation(line: 0, scope: !10512, inlinedAt: !10563)
!10563 = distinct !DILocation(line: 254, column: 2, scope: !10549)
!10564 = !DILocation(line: 0, scope: !10520, inlinedAt: !10565)
!10565 = distinct !DILocation(line: 215, column: 2, scope: !10512, inlinedAt: !10563)
!10566 = !DILocation(line: 95, column: 2, scope: !10520, inlinedAt: !10565)
!10567 = !DILocation(line: 255, column: 2, scope: !10549)
!10568 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1677, file: !1677, line: 258, type: !3137, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1599, retainedNodes: !250)
!10569 = !DILocation(line: 260, column: 6, scope: !10570)
!10570 = distinct !DILexicalBlock(scope: !10568, file: !1677, line: 260, column: 6)
!10571 = !DILocation(line: 260, column: 16, scope: !10570)
!10572 = !DILocation(line: 260, column: 6, scope: !10568)
!10573 = !DILocation(line: 261, column: 17, scope: !10574)
!10574 = distinct !DILexicalBlock(scope: !10570, file: !1677, line: 260, column: 34)
!10575 = !DILocation(line: 262, column: 2, scope: !10574)
!10576 = !DILocation(line: 263, column: 1, scope: !10568)
!10577 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1677, file: !1677, line: 265, type: !3137, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1599, retainedNodes: !250)
!10578 = !DILocation(line: 267, column: 16, scope: !10577)
!10579 = !DILocation(line: 268, column: 1, scope: !10577)
!10580 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10581, file: !10581, line: 9, type: !10582, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2844, retainedNodes: !10605)
!10581 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10582 = !DISubroutineType(types: !10583)
!10583 = !{!107, !10584, !133, !10604}
!10584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10585, size: 32)
!10585 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10586)
!10586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1533, line: 60, size: 64, elements: !10587)
!10587 = !{!10588, !10603}
!10588 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10586, file: !1533, line: 69, baseType: !10589, size: 32)
!10589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10590, size: 32)
!10590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10591)
!10591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1533, line: 50, size: 64, elements: !10592)
!10592 = !{!10593, !10601, !10602}
!10593 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10591, file: !1533, line: 52, baseType: !10594, size: 32)
!10594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10595, size: 32)
!10595 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10596)
!10596 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1544, line: 37, baseType: !10597)
!10597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1544, line: 32, size: 64, elements: !10598)
!10598 = !{!10599, !10600}
!10599 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10597, file: !1544, line: 34, baseType: !162, size: 32)
!10600 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10597, file: !1544, line: 36, baseType: !162, size: 32, offset: 32)
!10601 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10591, file: !1533, line: 54, baseType: !133, size: 8, offset: 32)
!10602 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10591, file: !1533, line: 56, baseType: !133, size: 8, offset: 40)
!10603 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10586, file: !1533, line: 71, baseType: !133, size: 8, offset: 32)
!10604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10589, size: 32)
!10605 = !{!10606, !10607, !10608}
!10606 = !DILocalVariable(name: "config", arg: 1, scope: !10580, file: !10581, line: 9, type: !10584)
!10607 = !DILocalVariable(name: "id", arg: 2, scope: !10580, file: !10581, line: 9, type: !133)
!10608 = !DILocalVariable(name: "state", arg: 3, scope: !10580, file: !10581, line: 10, type: !10604)
!10609 = !DILocation(line: 0, scope: !10580)
!10610 = !DILocation(line: 12, column: 20, scope: !10580)
!10611 = !DILocation(line: 13, column: 27, scope: !10580)
!10612 = !DILocation(line: 13, column: 42, scope: !10580)
!10613 = !DILocation(line: 13, column: 19, scope: !10580)
!10614 = !DILocation(line: 13, column: 16, scope: !10580)
!10615 = !DILocation(line: 13, column: 2, scope: !10580)
!10616 = distinct !{!10616, !10615, !10617}
!10617 = !DILocation(line: 19, column: 2, scope: !10580)
!10618 = !DILocation(line: 14, column: 23, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10620, file: !10581, line: 14, column: 7)
!10620 = distinct !DILexicalBlock(scope: !10580, file: !10581, line: 13, column: 54)
!10621 = !DILocation(line: 14, column: 10, scope: !10619)
!10622 = !DILocation(line: 18, column: 11, scope: !10620)
!10623 = !DILocation(line: 14, column: 7, scope: !10620)
!10624 = !DILocation(line: 22, column: 1, scope: !10580)
!10625 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1794, file: !1794, line: 193, type: !10626, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1712, retainedNodes: !10635)
!10626 = !DISubroutineType(types: !10627)
!10627 = !{!107, !10628, !133, !22}
!10628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10629, size: 32)
!10629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10630)
!10630 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1544, line: 37, baseType: !10631)
!10631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1544, line: 32, size: 64, elements: !10632)
!10632 = !{!10633, !10634}
!10633 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10631, file: !1544, line: 34, baseType: !162, size: 32)
!10634 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10631, file: !1544, line: 36, baseType: !162, size: 32, offset: 32)
!10635 = !{!10636, !10637, !10638, !10639, !10640, !10641, !10642, !10643, !10645}
!10636 = !DILocalVariable(name: "pins", arg: 1, scope: !10625, file: !1794, line: 193, type: !10628)
!10637 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10625, file: !1794, line: 193, type: !133)
!10638 = !DILocalVariable(name: "reg", arg: 3, scope: !10625, file: !1794, line: 194, type: !22)
!10639 = !DILocalVariable(name: "pin", scope: !10625, file: !1794, line: 196, type: !162)
!10640 = !DILocalVariable(name: "mux", scope: !10625, file: !1794, line: 196, type: !162)
!10641 = !DILocalVariable(name: "pin_cgf", scope: !10625, file: !1794, line: 197, type: !162)
!10642 = !DILocalVariable(name: "ret", scope: !10625, file: !1794, line: 198, type: !107)
!10643 = !DILocalVariable(name: "i", scope: !10644, file: !1794, line: 209, type: !133)
!10644 = distinct !DILexicalBlock(scope: !10625, file: !1794, line: 209, column: 2)
!10645 = !DILocalVariable(name: "gpio_out", scope: !10646, file: !1794, line: 239, type: !162)
!10646 = distinct !DILexicalBlock(scope: !10647, file: !1794, line: 238, column: 55)
!10647 = distinct !DILexicalBlock(scope: !10648, file: !1794, line: 238, column: 14)
!10648 = distinct !DILexicalBlock(scope: !10649, file: !1794, line: 236, column: 14)
!10649 = distinct !DILexicalBlock(scope: !10650, file: !1794, line: 234, column: 7)
!10650 = distinct !DILexicalBlock(scope: !10651, file: !1794, line: 209, column: 41)
!10651 = distinct !DILexicalBlock(scope: !10644, file: !1794, line: 209, column: 2)
!10652 = !DILocation(line: 0, scope: !10625)
!10653 = !DILocation(line: 0, scope: !10644)
!10654 = !DILocation(line: 209, column: 25, scope: !10651)
!10655 = !DILocation(line: 209, column: 2, scope: !10644)
!10656 = distinct !{!10656, !10655, !10657}
!10657 = !DILocation(line: 259, column: 2, scope: !10644)
!10658 = !DILocation(line: 210, column: 17, scope: !10650)
!10659 = !DILocation(line: 234, column: 7, scope: !10649)
!10660 = !DILocation(line: 234, column: 33, scope: !10649)
!10661 = !DILocation(line: 234, column: 7, scope: !10650)
!10662 = !DILocation(line: 235, column: 22, scope: !10663)
!10663 = distinct !DILexicalBlock(scope: !10649, file: !1794, line: 234, column: 49)
!10664 = !DILocation(line: 235, column: 29, scope: !10663)
!10665 = !DILocation(line: 236, column: 3, scope: !10663)
!10666 = !DILocation(line: 236, column: 14, scope: !10649)
!10667 = !DILocation(line: 239, column: 32, scope: !10646)
!10668 = !DILocation(line: 0, scope: !10646)
!10669 = !DILocation(line: 241, column: 8, scope: !10646)
!10670 = !DILocation(line: 246, column: 3, scope: !10646)
!10671 = !DILocation(line: 252, column: 9, scope: !10650)
!10672 = !DILocation(line: 255, column: 9, scope: !10650)
!10673 = !DILocation(line: 256, column: 11, scope: !10674)
!10674 = distinct !DILexicalBlock(scope: !10650, file: !1794, line: 256, column: 7)
!10675 = !DILocation(line: 209, column: 37, scope: !10651)
!10676 = !DILocation(line: 256, column: 7, scope: !10650)
!10677 = !DILocation(line: 262, column: 1, scope: !10625)
!10678 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1794, file: !1794, line: 176, type: !10679, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1712, retainedNodes: !10681)
!10679 = !DISubroutineType(types: !10680)
!10680 = !{!107, !162, !162, !162}
!10681 = !{!10682, !10683, !10684, !10685}
!10682 = !DILocalVariable(name: "pin", arg: 1, scope: !10678, file: !1794, line: 176, type: !162)
!10683 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !10678, file: !1794, line: 176, type: !162)
!10684 = !DILocalVariable(name: "pin_func", arg: 3, scope: !10678, file: !1794, line: 176, type: !162)
!10685 = !DILocalVariable(name: "port_device", scope: !10678, file: !1794, line: 178, type: !1724)
!10686 = !DILocation(line: 0, scope: !10678)
!10687 = !DILocation(line: 180, column: 22, scope: !10688)
!10688 = distinct !DILexicalBlock(scope: !10678, file: !1794, line: 180, column: 6)
!10689 = !DILocation(line: 180, column: 6, scope: !10678)
!10690 = !DILocation(line: 180, column: 6, scope: !10688)
!10691 = !DILocation(line: 184, column: 16, scope: !10678)
!10692 = !DILocation(line: 186, column: 19, scope: !10693)
!10693 = distinct !DILexicalBlock(scope: !10678, file: !1794, line: 186, column: 6)
!10694 = !DILocation(line: 186, column: 28, scope: !10693)
!10695 = !DILocation(line: 186, column: 33, scope: !10693)
!10696 = !DILocation(line: 186, column: 6, scope: !10678)
!10697 = !DILocation(line: 190, column: 43, scope: !10678)
!10698 = !DILocation(line: 190, column: 9, scope: !10678)
!10699 = !DILocation(line: 190, column: 2, scope: !10678)
!10700 = !DILocation(line: 191, column: 1, scope: !10678)
!10701 = distinct !DISubprogram(name: "device_is_ready", scope: !3420, file: !3420, line: 47, type: !10702, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1712, retainedNodes: !10704)
!10702 = !DISubroutineType(types: !10703)
!10703 = !{!136, !1724}
!10704 = !{!10705}
!10705 = !DILocalVariable(name: "dev", arg: 1, scope: !10701, file: !3420, line: 47, type: !1724)
!10706 = !DILocation(line: 0, scope: !10701)
!10707 = !DILocation(line: 55, column: 2, scope: !10708)
!10708 = distinct !DILexicalBlock(scope: !10701, file: !3420, line: 55, column: 2)
!10709 = !{i64 2149429723}
!10710 = !DILocation(line: 56, column: 9, scope: !10701)
!10711 = !DILocation(line: 56, column: 2, scope: !10701)
!10712 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !120, file: !120, line: 730, type: !10702, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1712, retainedNodes: !10713)
!10713 = !{!10714}
!10714 = !DILocalVariable(name: "dev", arg: 1, scope: !10712, file: !120, line: 730, type: !1724)
!10715 = !DILocation(line: 0, scope: !10712)
!10716 = !DILocation(line: 732, column: 9, scope: !10712)
!10717 = !DILocation(line: 732, column: 2, scope: !10712)
!10718 = distinct !DISubprogram(name: "SystemInit", scope: !1842, file: !1842, line: 167, type: !3137, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1802, retainedNodes: !250)
!10719 = !DILocation(line: 182, column: 1, scope: !10718)
!10720 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1842, file: !1842, line: 220, type: !3137, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1802, retainedNodes: !10721)
!10721 = !{!10722, !10723, !10724, !10725, !10726}
!10722 = !DILocalVariable(name: "tmp", scope: !10720, file: !1842, line: 222, type: !162)
!10723 = !DILocalVariable(name: "pllvco", scope: !10720, file: !1842, line: 222, type: !162)
!10724 = !DILocalVariable(name: "pllp", scope: !10720, file: !1842, line: 222, type: !162)
!10725 = !DILocalVariable(name: "pllsource", scope: !10720, file: !1842, line: 222, type: !162)
!10726 = !DILocalVariable(name: "pllm", scope: !10720, file: !1842, line: 222, type: !162)
!10727 = !DILocation(line: 0, scope: !10720)
!10728 = !DILocation(line: 225, column: 14, scope: !10720)
!10729 = !DILocation(line: 225, column: 19, scope: !10720)
!10730 = !DILocation(line: 227, column: 3, scope: !10720)
!10731 = !DILocation(line: 234, column: 7, scope: !10732)
!10732 = distinct !DILexicalBlock(scope: !10720, file: !1842, line: 228, column: 3)
!10733 = !DILocation(line: 240, column: 25, scope: !10732)
!10734 = !DILocation(line: 241, column: 19, scope: !10732)
!10735 = !DILocation(line: 241, column: 27, scope: !10732)
!10736 = !DILocation(line: 243, column: 21, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10732, file: !1842, line: 243, column: 11)
!10738 = !DILocation(line: 0, scope: !10737)
!10739 = !DILocation(line: 254, column: 22, scope: !10732)
!10740 = !DILocation(line: 254, column: 62, scope: !10732)
!10741 = !DILocation(line: 255, column: 31, scope: !10732)
!10742 = !DILocation(line: 256, column: 7, scope: !10732)
!10743 = !DILocation(line: 0, scope: !10732)
!10744 = !DILocation(line: 263, column: 30, scope: !10720)
!10745 = !DILocation(line: 263, column: 52, scope: !10720)
!10746 = !DILocation(line: 263, column: 9, scope: !10720)
!10747 = !DILocation(line: 265, column: 19, scope: !10720)
!10748 = !DILocation(line: 266, column: 1, scope: !10720)
!10749 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !10750, file: !10750, line: 200, type: !10751, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2846, retainedNodes: !250)
!10750 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10751 = !DISubroutineType(types: !10752)
!10752 = !{!10753}
!10753 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2850, line: 44, baseType: !2849)
!10754 = !DILocation(line: 202, column: 3, scope: !10749)
!10755 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !10750, file: !10750, line: 219, type: !10756, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2846, retainedNodes: !10780)
!10756 = !DISubroutineType(types: !10757)
!10757 = !{!10753, !10758}
!10758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10759, size: 32)
!10759 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !10760, line: 70, baseType: !10761)
!10760 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10761 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10760, line: 49, size: 384, elements: !10762)
!10762 = !{!10763, !10764, !10765, !10766, !10767, !10768, !10769}
!10763 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !10761, file: !10760, line: 51, baseType: !162, size: 32)
!10764 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !10761, file: !10760, line: 54, baseType: !162, size: 32, offset: 32)
!10765 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !10761, file: !10760, line: 57, baseType: !162, size: 32, offset: 64)
!10766 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !10761, file: !10760, line: 60, baseType: !162, size: 32, offset: 96)
!10767 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !10761, file: !10760, line: 63, baseType: !162, size: 32, offset: 128)
!10768 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !10761, file: !10760, line: 66, baseType: !162, size: 32, offset: 160)
!10769 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !10761, file: !10760, line: 69, baseType: !10770, size: 192, offset: 192)
!10770 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !10771, line: 73, baseType: !10772)
!10771 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10772 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10771, line: 45, size: 192, elements: !10773)
!10773 = !{!10774, !10775, !10776, !10777, !10778, !10779}
!10774 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !10772, file: !10771, line: 47, baseType: !162, size: 32)
!10775 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !10772, file: !10771, line: 50, baseType: !162, size: 32, offset: 32)
!10776 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !10772, file: !10771, line: 53, baseType: !162, size: 32, offset: 64)
!10777 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !10772, file: !10771, line: 56, baseType: !162, size: 32, offset: 96)
!10778 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !10772, file: !10771, line: 60, baseType: !162, size: 32, offset: 128)
!10779 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !10772, file: !10771, line: 63, baseType: !162, size: 32, offset: 160)
!10780 = !{!10781, !10782, !10783, !10784, !10788}
!10781 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !10755, file: !10750, line: 219, type: !10758)
!10782 = !DILocalVariable(name: "tickstart", scope: !10755, file: !10750, line: 221, type: !162)
!10783 = !DILocalVariable(name: "pll_config", scope: !10755, file: !10750, line: 221, type: !162)
!10784 = !DILocalVariable(name: "pwrclkchanged", scope: !10785, file: !10750, line: 391, type: !10787)
!10785 = distinct !DILexicalBlock(scope: !10786, file: !10750, line: 390, column: 3)
!10786 = distinct !DILexicalBlock(scope: !10755, file: !10750, line: 389, column: 6)
!10787 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !795, line: 188, baseType: !2856)
!10788 = !DILocalVariable(name: "tmpreg", scope: !10789, file: !10750, line: 400, type: !283)
!10789 = distinct !DILexicalBlock(scope: !10790, file: !10750, line: 400, column: 7)
!10790 = distinct !DILexicalBlock(scope: !10791, file: !10750, line: 399, column: 5)
!10791 = distinct !DILexicalBlock(scope: !10785, file: !10750, line: 398, column: 8)
!10792 = !DILocation(line: 0, scope: !10755)
!10793 = !DILocation(line: 224, column: 24, scope: !10794)
!10794 = distinct !DILexicalBlock(scope: !10755, file: !10750, line: 224, column: 6)
!10795 = !DILocation(line: 224, column: 6, scope: !10755)
!10796 = !DILocation(line: 232, column: 27, scope: !10797)
!10797 = distinct !DILexicalBlock(scope: !10755, file: !10750, line: 232, column: 6)
!10798 = !DILocation(line: 232, column: 43, scope: !10797)
!10799 = !DILocation(line: 232, column: 69, scope: !10797)
!10800 = !DILocation(line: 232, column: 6, scope: !10755)
!10801 = !DILocation(line: 237, column: 9, scope: !10802)
!10802 = distinct !DILexicalBlock(scope: !10803, file: !10750, line: 237, column: 8)
!10803 = distinct !DILexicalBlock(scope: !10797, file: !10750, line: 233, column: 3)
!10804 = !DILocation(line: 237, column: 39, scope: !10802)
!10805 = !DILocation(line: 237, column: 60, scope: !10802)
!10806 = !DILocation(line: 238, column: 9, scope: !10802)
!10807 = !DILocation(line: 238, column: 39, scope: !10802)
!10808 = !DILocation(line: 238, column: 60, scope: !10802)
!10809 = !DILocation(line: 238, column: 70, scope: !10802)
!10810 = !DILocation(line: 238, column: 78, scope: !10802)
!10811 = !DILocation(line: 238, column: 100, scope: !10802)
!10812 = !DILocation(line: 237, column: 8, scope: !10803)
!10813 = !DILocation(line: 240, column: 11, scope: !10814)
!10814 = distinct !DILexicalBlock(scope: !10815, file: !10750, line: 240, column: 10)
!10815 = distinct !DILexicalBlock(scope: !10802, file: !10750, line: 239, column: 5)
!10816 = !DILocation(line: 240, column: 57, scope: !10814)
!10817 = !DILocation(line: 240, column: 80, scope: !10814)
!10818 = !DILocation(line: 240, column: 89, scope: !10814)
!10819 = !DILocation(line: 240, column: 10, scope: !10815)
!10820 = !DILocation(line: 248, column: 7, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10822, file: !10750, line: 248, column: 7)
!10822 = distinct !DILexicalBlock(scope: !10823, file: !10750, line: 248, column: 7)
!10823 = distinct !DILexicalBlock(scope: !10802, file: !10750, line: 246, column: 5)
!10824 = !DILocation(line: 248, column: 7, scope: !10822)
!10825 = !DILocation(line: 248, column: 7, scope: !10826)
!10826 = distinct !DILexicalBlock(scope: !10821, file: !10750, line: 248, column: 7)
!10827 = !DILocation(line: 248, column: 7, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10829, file: !10750, line: 248, column: 7)
!10829 = distinct !DILexicalBlock(scope: !10821, file: !10750, line: 248, column: 7)
!10830 = !DILocation(line: 248, column: 7, scope: !10831)
!10831 = distinct !DILexicalBlock(scope: !10829, file: !10750, line: 248, column: 7)
!10832 = !DILocation(line: 0, scope: !10821)
!10833 = !DILocation(line: 251, column: 30, scope: !10834)
!10834 = distinct !DILexicalBlock(scope: !10823, file: !10750, line: 251, column: 10)
!10835 = !DILocation(line: 251, column: 40, scope: !10834)
!10836 = !DILocation(line: 0, scope: !10834)
!10837 = !DILocation(line: 251, column: 10, scope: !10823)
!10838 = !DILocation(line: 257, column: 15, scope: !10839)
!10839 = distinct !DILexicalBlock(scope: !10834, file: !10750, line: 252, column: 7)
!10840 = !DILocation(line: 257, column: 51, scope: !10839)
!10841 = !DILocation(line: 257, column: 9, scope: !10839)
!10842 = !DILocation(line: 259, column: 15, scope: !10843)
!10843 = distinct !DILexicalBlock(scope: !10844, file: !10750, line: 259, column: 14)
!10844 = distinct !DILexicalBlock(scope: !10839, file: !10750, line: 258, column: 9)
!10845 = !DILocation(line: 259, column: 29, scope: !10843)
!10846 = !DILocation(line: 259, column: 43, scope: !10843)
!10847 = !DILocation(line: 259, column: 14, scope: !10844)
!10848 = distinct !{!10848, !10841, !10849}
!10849 = !DILocation(line: 263, column: 9, scope: !10839)
!10850 = !DILocation(line: 271, column: 15, scope: !10851)
!10851 = distinct !DILexicalBlock(scope: !10834, file: !10750, line: 266, column: 7)
!10852 = !DILocation(line: 271, column: 9, scope: !10851)
!10853 = !DILocation(line: 273, column: 15, scope: !10854)
!10854 = distinct !DILexicalBlock(scope: !10855, file: !10750, line: 273, column: 14)
!10855 = distinct !DILexicalBlock(scope: !10851, file: !10750, line: 272, column: 9)
!10856 = !DILocation(line: 273, column: 29, scope: !10854)
!10857 = !DILocation(line: 273, column: 43, scope: !10854)
!10858 = !DILocation(line: 273, column: 14, scope: !10855)
!10859 = distinct !{!10859, !10852, !10860}
!10860 = !DILocation(line: 277, column: 9, scope: !10851)
!10861 = !DILocation(line: 282, column: 27, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10755, file: !10750, line: 282, column: 6)
!10863 = !DILocation(line: 282, column: 43, scope: !10862)
!10864 = !DILocation(line: 282, column: 69, scope: !10862)
!10865 = !DILocation(line: 282, column: 6, scope: !10755)
!10866 = !DILocation(line: 289, column: 9, scope: !10867)
!10867 = distinct !DILexicalBlock(scope: !10868, file: !10750, line: 289, column: 8)
!10868 = distinct !DILexicalBlock(scope: !10862, file: !10750, line: 283, column: 3)
!10869 = !DILocation(line: 289, column: 39, scope: !10867)
!10870 = !DILocation(line: 289, column: 60, scope: !10867)
!10871 = !DILocation(line: 290, column: 9, scope: !10867)
!10872 = !DILocation(line: 290, column: 39, scope: !10867)
!10873 = !DILocation(line: 290, column: 60, scope: !10867)
!10874 = !DILocation(line: 290, column: 70, scope: !10867)
!10875 = !DILocation(line: 290, column: 78, scope: !10867)
!10876 = !DILocation(line: 290, column: 100, scope: !10867)
!10877 = !DILocation(line: 289, column: 8, scope: !10868)
!10878 = !DILocation(line: 293, column: 11, scope: !10879)
!10879 = distinct !DILexicalBlock(scope: !10880, file: !10750, line: 293, column: 10)
!10880 = distinct !DILexicalBlock(scope: !10867, file: !10750, line: 291, column: 5)
!10881 = !DILocation(line: 293, column: 57, scope: !10879)
!10882 = !DILocation(line: 293, column: 80, scope: !10879)
!10883 = !DILocation(line: 293, column: 89, scope: !10879)
!10884 = !DILocation(line: 293, column: 10, scope: !10880)
!10885 = !DILocation(line: 307, column: 30, scope: !10886)
!10886 = distinct !DILexicalBlock(scope: !10887, file: !10750, line: 307, column: 10)
!10887 = distinct !DILexicalBlock(scope: !10867, file: !10750, line: 305, column: 5)
!10888 = !DILocation(line: 307, column: 39, scope: !10886)
!10889 = !DILocation(line: 307, column: 10, scope: !10887)
!10890 = !DILocation(line: 310, column: 9, scope: !10891)
!10891 = distinct !DILexicalBlock(scope: !10886, file: !10750, line: 308, column: 7)
!10892 = !DILocation(line: 313, column: 21, scope: !10891)
!10893 = !DILocation(line: 316, column: 9, scope: !10891)
!10894 = !DILocation(line: 316, column: 15, scope: !10891)
!10895 = !DILocation(line: 316, column: 51, scope: !10891)
!10896 = !DILocation(line: 318, column: 15, scope: !10897)
!10897 = distinct !DILexicalBlock(scope: !10898, file: !10750, line: 318, column: 14)
!10898 = distinct !DILexicalBlock(scope: !10891, file: !10750, line: 317, column: 9)
!10899 = !DILocation(line: 318, column: 29, scope: !10897)
!10900 = !DILocation(line: 318, column: 43, scope: !10897)
!10901 = !DILocation(line: 318, column: 14, scope: !10898)
!10902 = distinct !{!10902, !10893, !10903}
!10903 = !DILocation(line: 322, column: 9, scope: !10891)
!10904 = !DILocation(line: 330, column: 9, scope: !10905)
!10905 = distinct !DILexicalBlock(scope: !10886, file: !10750, line: 328, column: 7)
!10906 = !DILocation(line: 333, column: 21, scope: !10905)
!10907 = !DILocation(line: 336, column: 9, scope: !10905)
!10908 = !DILocation(line: 336, column: 15, scope: !10905)
!10909 = !DILocation(line: 338, column: 15, scope: !10910)
!10910 = distinct !DILexicalBlock(scope: !10911, file: !10750, line: 338, column: 14)
!10911 = distinct !DILexicalBlock(scope: !10905, file: !10750, line: 337, column: 9)
!10912 = !DILocation(line: 338, column: 29, scope: !10910)
!10913 = !DILocation(line: 338, column: 43, scope: !10910)
!10914 = !DILocation(line: 338, column: 14, scope: !10911)
!10915 = distinct !{!10915, !10907, !10916}
!10916 = !DILocation(line: 342, column: 9, scope: !10905)
!10917 = !DILocation(line: 0, scope: !10867)
!10918 = !DILocation(line: 347, column: 27, scope: !10919)
!10919 = distinct !DILexicalBlock(scope: !10755, file: !10750, line: 347, column: 6)
!10920 = !DILocation(line: 347, column: 43, scope: !10919)
!10921 = !DILocation(line: 347, column: 69, scope: !10919)
!10922 = !DILocation(line: 347, column: 6, scope: !10755)
!10923 = !DILocation(line: 353, column: 28, scope: !10924)
!10924 = distinct !DILexicalBlock(scope: !10925, file: !10750, line: 353, column: 8)
!10925 = distinct !DILexicalBlock(scope: !10919, file: !10750, line: 348, column: 3)
!10926 = !DILocation(line: 353, column: 37, scope: !10924)
!10927 = !DILocation(line: 353, column: 8, scope: !10925)
!10928 = !DILocation(line: 356, column: 7, scope: !10929)
!10929 = distinct !DILexicalBlock(scope: !10924, file: !10750, line: 354, column: 5)
!10930 = !DILocation(line: 359, column: 19, scope: !10929)
!10931 = !DILocation(line: 362, column: 7, scope: !10929)
!10932 = !DILocation(line: 362, column: 13, scope: !10929)
!10933 = !DILocation(line: 362, column: 49, scope: !10929)
!10934 = !DILocation(line: 364, column: 13, scope: !10935)
!10935 = distinct !DILexicalBlock(scope: !10936, file: !10750, line: 364, column: 12)
!10936 = distinct !DILexicalBlock(scope: !10929, file: !10750, line: 363, column: 7)
!10937 = !DILocation(line: 364, column: 27, scope: !10935)
!10938 = !DILocation(line: 364, column: 41, scope: !10935)
!10939 = !DILocation(line: 364, column: 12, scope: !10936)
!10940 = distinct !{!10940, !10931, !10941}
!10941 = !DILocation(line: 368, column: 7, scope: !10929)
!10942 = !DILocation(line: 373, column: 7, scope: !10943)
!10943 = distinct !DILexicalBlock(scope: !10924, file: !10750, line: 371, column: 5)
!10944 = !DILocation(line: 376, column: 19, scope: !10943)
!10945 = !DILocation(line: 379, column: 7, scope: !10943)
!10946 = !DILocation(line: 379, column: 13, scope: !10943)
!10947 = !DILocation(line: 381, column: 13, scope: !10948)
!10948 = distinct !DILexicalBlock(scope: !10949, file: !10750, line: 381, column: 12)
!10949 = distinct !DILexicalBlock(scope: !10943, file: !10750, line: 380, column: 7)
!10950 = !DILocation(line: 381, column: 27, scope: !10948)
!10951 = !DILocation(line: 381, column: 41, scope: !10948)
!10952 = !DILocation(line: 381, column: 12, scope: !10949)
!10953 = distinct !{!10953, !10945, !10954}
!10954 = !DILocation(line: 385, column: 7, scope: !10943)
!10955 = !DILocation(line: 389, column: 27, scope: !10786)
!10956 = !DILocation(line: 389, column: 43, scope: !10786)
!10957 = !DILocation(line: 389, column: 69, scope: !10786)
!10958 = !DILocation(line: 389, column: 6, scope: !10755)
!10959 = !DILocation(line: 0, scope: !10785)
!10960 = !DILocation(line: 398, column: 8, scope: !10791)
!10961 = !DILocation(line: 398, column: 8, scope: !10785)
!10962 = !DILocation(line: 400, column: 7, scope: !10789)
!10963 = !DILocation(line: 400, column: 7, scope: !10790)
!10964 = !DILocation(line: 402, column: 5, scope: !10790)
!10965 = !DILocation(line: 404, column: 8, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !10785, file: !10750, line: 404, column: 8)
!10967 = !DILocation(line: 404, column: 8, scope: !10785)
!10968 = !DILocation(line: 407, column: 7, scope: !10969)
!10969 = distinct !DILexicalBlock(scope: !10966, file: !10750, line: 405, column: 5)
!10970 = !DILocation(line: 410, column: 19, scope: !10969)
!10971 = !DILocation(line: 412, column: 7, scope: !10969)
!10972 = !DILocation(line: 412, column: 13, scope: !10969)
!10973 = !DILocation(line: 414, column: 13, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !10975, file: !10750, line: 414, column: 12)
!10975 = distinct !DILexicalBlock(scope: !10969, file: !10750, line: 413, column: 7)
!10976 = !DILocation(line: 414, column: 27, scope: !10974)
!10977 = !DILocation(line: 414, column: 40, scope: !10974)
!10978 = !DILocation(line: 414, column: 12, scope: !10975)
!10979 = distinct !{!10979, !10971, !10980}
!10980 = !DILocation(line: 418, column: 7, scope: !10969)
!10981 = !DILocation(line: 422, column: 5, scope: !10982)
!10982 = distinct !DILexicalBlock(scope: !10983, file: !10750, line: 422, column: 5)
!10983 = distinct !DILexicalBlock(scope: !10785, file: !10750, line: 422, column: 5)
!10984 = !DILocation(line: 422, column: 5, scope: !10983)
!10985 = !DILocation(line: 422, column: 5, scope: !10986)
!10986 = distinct !DILexicalBlock(scope: !10982, file: !10750, line: 422, column: 5)
!10987 = !DILocation(line: 422, column: 5, scope: !10988)
!10988 = distinct !DILexicalBlock(scope: !10989, file: !10750, line: 422, column: 5)
!10989 = distinct !DILexicalBlock(scope: !10982, file: !10750, line: 422, column: 5)
!10990 = !DILocation(line: 422, column: 5, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !10989, file: !10750, line: 422, column: 5)
!10992 = !DILocation(line: 0, scope: !10982)
!10993 = !DILocation(line: 424, column: 28, scope: !10994)
!10994 = distinct !DILexicalBlock(scope: !10785, file: !10750, line: 424, column: 8)
!10995 = !DILocation(line: 424, column: 38, scope: !10994)
!10996 = !DILocation(line: 0, scope: !10994)
!10997 = !DILocation(line: 424, column: 8, scope: !10785)
!10998 = !DILocation(line: 430, column: 13, scope: !10999)
!10999 = distinct !DILexicalBlock(scope: !10994, file: !10750, line: 425, column: 5)
!11000 = !DILocation(line: 430, column: 49, scope: !10999)
!11001 = !DILocation(line: 430, column: 7, scope: !10999)
!11002 = !DILocation(line: 432, column: 13, scope: !11003)
!11003 = distinct !DILexicalBlock(scope: !11004, file: !10750, line: 432, column: 12)
!11004 = distinct !DILexicalBlock(scope: !10999, file: !10750, line: 431, column: 7)
!11005 = !DILocation(line: 432, column: 27, scope: !11003)
!11006 = !DILocation(line: 432, column: 41, scope: !11003)
!11007 = !DILocation(line: 432, column: 12, scope: !11004)
!11008 = distinct !{!11008, !11001, !11009}
!11009 = !DILocation(line: 436, column: 7, scope: !10999)
!11010 = !DILocation(line: 444, column: 13, scope: !11011)
!11011 = distinct !DILexicalBlock(scope: !10994, file: !10750, line: 439, column: 5)
!11012 = !DILocation(line: 444, column: 7, scope: !11011)
!11013 = !DILocation(line: 446, column: 13, scope: !11014)
!11014 = distinct !DILexicalBlock(scope: !11015, file: !10750, line: 446, column: 12)
!11015 = distinct !DILexicalBlock(scope: !11011, file: !10750, line: 445, column: 7)
!11016 = !DILocation(line: 446, column: 27, scope: !11014)
!11017 = !DILocation(line: 446, column: 41, scope: !11014)
!11018 = !DILocation(line: 446, column: 12, scope: !11015)
!11019 = distinct !{!11019, !11012, !11020}
!11020 = !DILocation(line: 450, column: 7, scope: !11011)
!11021 = !DILocation(line: 454, column: 8, scope: !10785)
!11022 = !DILocation(line: 456, column: 7, scope: !11023)
!11023 = distinct !DILexicalBlock(scope: !11024, file: !10750, line: 455, column: 5)
!11024 = distinct !DILexicalBlock(scope: !10785, file: !10750, line: 454, column: 8)
!11025 = !DILocation(line: 457, column: 5, scope: !11023)
!11026 = !DILocation(line: 462, column: 31, scope: !11027)
!11027 = distinct !DILexicalBlock(scope: !10755, file: !10750, line: 462, column: 7)
!11028 = !DILocation(line: 462, column: 41, scope: !11027)
!11029 = !DILocation(line: 462, column: 7, scope: !10755)
!11030 = !DILocation(line: 465, column: 8, scope: !11031)
!11031 = distinct !DILexicalBlock(scope: !11032, file: !10750, line: 465, column: 8)
!11032 = distinct !DILexicalBlock(scope: !11027, file: !10750, line: 463, column: 3)
!11033 = !DILocation(line: 465, column: 38, scope: !11031)
!11034 = !DILocation(line: 465, column: 8, scope: !11032)
!11035 = !DILocation(line: 467, column: 44, scope: !11036)
!11036 = distinct !DILexicalBlock(scope: !11037, file: !10750, line: 467, column: 10)
!11037 = distinct !DILexicalBlock(scope: !11031, file: !10750, line: 466, column: 5)
!11038 = !DILocation(line: 0, scope: !11036)
!11039 = !DILocation(line: 467, column: 10, scope: !11037)
!11040 = !DILocation(line: 483, column: 15, scope: !11041)
!11041 = distinct !DILexicalBlock(scope: !11036, file: !10750, line: 468, column: 7)
!11042 = !DILocation(line: 483, column: 9, scope: !11041)
!11043 = !DILocation(line: 485, column: 15, scope: !11044)
!11044 = distinct !DILexicalBlock(scope: !11045, file: !10750, line: 485, column: 14)
!11045 = distinct !DILexicalBlock(scope: !11041, file: !10750, line: 484, column: 9)
!11046 = !DILocation(line: 485, column: 29, scope: !11044)
!11047 = !DILocation(line: 485, column: 43, scope: !11044)
!11048 = !DILocation(line: 485, column: 14, scope: !11045)
!11049 = distinct !{!11049, !11042, !11050}
!11050 = !DILocation(line: 489, column: 9, scope: !11041)
!11051 = !DILocation(line: 492, column: 9, scope: !11041)
!11052 = !DILocation(line: 498, column: 9, scope: !11041)
!11053 = !DILocation(line: 501, column: 21, scope: !11041)
!11054 = !DILocation(line: 504, column: 9, scope: !11041)
!11055 = !DILocation(line: 504, column: 15, scope: !11041)
!11056 = !DILocation(line: 504, column: 51, scope: !11041)
!11057 = !DILocation(line: 506, column: 15, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !11059, file: !10750, line: 506, column: 14)
!11059 = distinct !DILexicalBlock(scope: !11041, file: !10750, line: 505, column: 9)
!11060 = !DILocation(line: 506, column: 29, scope: !11058)
!11061 = !DILocation(line: 506, column: 43, scope: !11058)
!11062 = !DILocation(line: 506, column: 14, scope: !11059)
!11063 = distinct !{!11063, !11054, !11064}
!11064 = !DILocation(line: 510, column: 9, scope: !11041)
!11065 = !DILocation(line: 521, column: 15, scope: !11066)
!11066 = distinct !DILexicalBlock(scope: !11036, file: !10750, line: 513, column: 7)
!11067 = !DILocation(line: 521, column: 9, scope: !11066)
!11068 = !DILocation(line: 523, column: 15, scope: !11069)
!11069 = distinct !DILexicalBlock(scope: !11070, file: !10750, line: 523, column: 14)
!11070 = distinct !DILexicalBlock(scope: !11066, file: !10750, line: 522, column: 9)
!11071 = !DILocation(line: 523, column: 29, scope: !11069)
!11072 = !DILocation(line: 523, column: 43, scope: !11069)
!11073 = !DILocation(line: 523, column: 14, scope: !11070)
!11074 = distinct !{!11074, !11067, !11075}
!11075 = !DILocation(line: 527, column: 9, scope: !11066)
!11076 = !DILocation(line: 533, column: 44, scope: !11077)
!11077 = distinct !DILexicalBlock(scope: !11078, file: !10750, line: 533, column: 10)
!11078 = distinct !DILexicalBlock(scope: !11031, file: !10750, line: 531, column: 5)
!11079 = !DILocation(line: 533, column: 10, scope: !11078)
!11080 = !DILocation(line: 540, column: 27, scope: !11081)
!11081 = distinct !DILexicalBlock(scope: !11077, file: !10750, line: 538, column: 7)
!11082 = !DILocation(line: 551, column: 14, scope: !11083)
!11083 = distinct !DILexicalBlock(scope: !11081, file: !10750, line: 550, column: 13)
!11084 = !DILocation(line: 551, column: 81, scope: !11083)
!11085 = !DILocation(line: 551, column: 55, scope: !11083)
!11086 = !DILocation(line: 551, column: 92, scope: !11083)
!11087 = !DILocation(line: 552, column: 14, scope: !11083)
!11088 = !DILocation(line: 552, column: 80, scope: !11083)
!11089 = !DILocation(line: 552, column: 53, scope: !11083)
!11090 = !DILocation(line: 552, column: 111, scope: !11083)
!11091 = !DILocation(line: 553, column: 14, scope: !11083)
!11092 = !DILocation(line: 553, column: 80, scope: !11083)
!11093 = !DILocation(line: 553, column: 86, scope: !11083)
!11094 = !DILocation(line: 553, column: 53, scope: !11083)
!11095 = !DILocation(line: 553, column: 111, scope: !11083)
!11096 = !DILocation(line: 554, column: 14, scope: !11083)
!11097 = !DILocation(line: 554, column: 82, scope: !11083)
!11098 = !DILocation(line: 554, column: 101, scope: !11083)
!11099 = !DILocation(line: 554, column: 53, scope: !11083)
!11100 = !DILocation(line: 554, column: 126, scope: !11083)
!11101 = !DILocation(line: 555, column: 14, scope: !11083)
!11102 = !DILocation(line: 555, column: 80, scope: !11083)
!11103 = !DILocation(line: 555, column: 85, scope: !11083)
!11104 = !DILocation(line: 555, column: 53, scope: !11083)
!11105 = !DILocation(line: 550, column: 13, scope: !11081)
!11106 = !DILocation(line: 563, column: 3, scope: !10755)
!11107 = !DILocation(line: 564, column: 1, scope: !10755)
!11108 = !DISubprogram(name: "HAL_GetTick", scope: !11109, file: !11109, line: 234, type: !6168, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!11109 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11110 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !10750, file: !10750, line: 591, type: !11111, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2846, retainedNodes: !11122)
!11111 = !DISubroutineType(types: !11112)
!11112 = !{!10753, !11113, !162}
!11113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11114, size: 32)
!11114 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !10760, line: 92, baseType: !11115)
!11115 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10760, line: 75, size: 160, elements: !11116)
!11116 = !{!11117, !11118, !11119, !11120, !11121}
!11117 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !11115, file: !10760, line: 77, baseType: !162, size: 32)
!11118 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !11115, file: !10760, line: 80, baseType: !162, size: 32, offset: 32)
!11119 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11115, file: !10760, line: 83, baseType: !162, size: 32, offset: 64)
!11120 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11115, file: !10760, line: 86, baseType: !162, size: 32, offset: 96)
!11121 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11115, file: !10760, line: 89, baseType: !162, size: 32, offset: 128)
!11122 = !{!11123, !11124, !11125}
!11123 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11110, file: !10750, line: 591, type: !11113)
!11124 = !DILocalVariable(name: "FLatency", arg: 2, scope: !11110, file: !10750, line: 591, type: !162)
!11125 = !DILocalVariable(name: "tickstart", scope: !11110, file: !10750, line: 593, type: !162)
!11126 = !DILocation(line: 0, scope: !11110)
!11127 = !DILocation(line: 596, column: 24, scope: !11128)
!11128 = distinct !DILexicalBlock(scope: !11110, file: !10750, line: 596, column: 6)
!11129 = !DILocation(line: 596, column: 6, scope: !11110)
!11130 = !DILocation(line: 610, column: 17, scope: !11131)
!11131 = distinct !DILexicalBlock(scope: !11110, file: !10750, line: 610, column: 6)
!11132 = !DILocation(line: 610, column: 15, scope: !11131)
!11133 = !DILocation(line: 610, column: 6, scope: !11110)
!11134 = !DILocation(line: 613, column: 5, scope: !11135)
!11135 = distinct !DILexicalBlock(scope: !11131, file: !10750, line: 611, column: 3)
!11136 = !DILocation(line: 617, column: 8, scope: !11137)
!11137 = distinct !DILexicalBlock(scope: !11135, file: !10750, line: 617, column: 8)
!11138 = !DILocation(line: 617, column: 34, scope: !11137)
!11139 = !DILocation(line: 617, column: 8, scope: !11135)
!11140 = !DILocation(line: 624, column: 27, scope: !11141)
!11141 = distinct !DILexicalBlock(scope: !11110, file: !10750, line: 624, column: 6)
!11142 = !DILocation(line: 624, column: 38, scope: !11141)
!11143 = !DILocation(line: 624, column: 60, scope: !11141)
!11144 = !DILocation(line: 624, column: 6, scope: !11110)
!11145 = !DILocation(line: 628, column: 40, scope: !11146)
!11146 = distinct !DILexicalBlock(scope: !11147, file: !10750, line: 628, column: 8)
!11147 = distinct !DILexicalBlock(scope: !11141, file: !10750, line: 625, column: 3)
!11148 = !DILocation(line: 628, column: 63, scope: !11146)
!11149 = !DILocation(line: 628, column: 8, scope: !11147)
!11150 = !DILocation(line: 630, column: 7, scope: !11151)
!11151 = distinct !DILexicalBlock(scope: !11146, file: !10750, line: 629, column: 5)
!11152 = !DILocation(line: 633, column: 29, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !11147, file: !10750, line: 633, column: 8)
!11154 = !DILocation(line: 631, column: 5, scope: !11151)
!11155 = !DILocation(line: 633, column: 40, scope: !11153)
!11156 = !DILocation(line: 633, column: 63, scope: !11153)
!11157 = !DILocation(line: 633, column: 8, scope: !11147)
!11158 = !DILocation(line: 635, column: 7, scope: !11159)
!11159 = distinct !DILexicalBlock(scope: !11153, file: !10750, line: 634, column: 5)
!11160 = !DILocation(line: 636, column: 5, scope: !11159)
!11161 = !DILocation(line: 639, column: 5, scope: !11147)
!11162 = !DILocation(line: 643, column: 27, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11110, file: !10750, line: 643, column: 6)
!11164 = !DILocation(line: 640, column: 3, scope: !11147)
!11165 = !DILocation(line: 643, column: 38, scope: !11163)
!11166 = !DILocation(line: 643, column: 62, scope: !11163)
!11167 = !DILocation(line: 643, column: 6, scope: !11110)
!11168 = !DILocation(line: 648, column: 27, scope: !11169)
!11169 = distinct !DILexicalBlock(scope: !11170, file: !10750, line: 648, column: 8)
!11170 = distinct !DILexicalBlock(scope: !11163, file: !10750, line: 644, column: 3)
!11171 = !DILocation(line: 648, column: 8, scope: !11170)
!11172 = !DILocation(line: 651, column: 10, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11174, file: !10750, line: 651, column: 10)
!11174 = distinct !DILexicalBlock(scope: !11169, file: !10750, line: 649, column: 5)
!11175 = !DILocation(line: 651, column: 46, scope: !11173)
!11176 = !DILocation(line: 651, column: 10, scope: !11174)
!11177 = !DILocation(line: 661, column: 10, scope: !11178)
!11178 = distinct !DILexicalBlock(scope: !11179, file: !10750, line: 661, column: 10)
!11179 = distinct !DILexicalBlock(scope: !11180, file: !10750, line: 659, column: 5)
!11180 = distinct !DILexicalBlock(scope: !11169, file: !10750, line: 657, column: 13)
!11181 = !DILocation(line: 661, column: 46, scope: !11178)
!11182 = !DILocation(line: 661, column: 10, scope: !11179)
!11183 = !DILocation(line: 670, column: 10, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !11185, file: !10750, line: 670, column: 10)
!11185 = distinct !DILexicalBlock(scope: !11180, file: !10750, line: 668, column: 5)
!11186 = !DILocation(line: 670, column: 46, scope: !11184)
!11187 = !DILocation(line: 670, column: 10, scope: !11185)
!11188 = !DILocation(line: 676, column: 5, scope: !11170)
!11189 = !DILocation(line: 679, column: 17, scope: !11170)
!11190 = !DILocation(line: 681, column: 5, scope: !11170)
!11191 = !DILocation(line: 681, column: 12, scope: !11170)
!11192 = !DILocation(line: 681, column: 65, scope: !11170)
!11193 = !DILocation(line: 681, column: 78, scope: !11170)
!11194 = !DILocation(line: 681, column: 42, scope: !11170)
!11195 = !DILocation(line: 683, column: 12, scope: !11196)
!11196 = distinct !DILexicalBlock(scope: !11197, file: !10750, line: 683, column: 11)
!11197 = distinct !DILexicalBlock(scope: !11170, file: !10750, line: 682, column: 5)
!11198 = !DILocation(line: 683, column: 26, scope: !11196)
!11199 = !DILocation(line: 683, column: 39, scope: !11196)
!11200 = !DILocation(line: 683, column: 11, scope: !11197)
!11201 = distinct !{!11201, !11190, !11202}
!11202 = !DILocation(line: 687, column: 5, scope: !11170)
!11203 = !DILocation(line: 691, column: 17, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !11110, file: !10750, line: 691, column: 6)
!11205 = !DILocation(line: 691, column: 15, scope: !11204)
!11206 = !DILocation(line: 691, column: 6, scope: !11110)
!11207 = !DILocation(line: 694, column: 5, scope: !11208)
!11208 = distinct !DILexicalBlock(scope: !11204, file: !10750, line: 692, column: 3)
!11209 = !DILocation(line: 698, column: 8, scope: !11210)
!11210 = distinct !DILexicalBlock(scope: !11208, file: !10750, line: 698, column: 8)
!11211 = !DILocation(line: 698, column: 34, scope: !11210)
!11212 = !DILocation(line: 698, column: 8, scope: !11208)
!11213 = !DILocation(line: 705, column: 27, scope: !11214)
!11214 = distinct !DILexicalBlock(scope: !11110, file: !10750, line: 705, column: 6)
!11215 = !DILocation(line: 705, column: 38, scope: !11214)
!11216 = !DILocation(line: 705, column: 61, scope: !11214)
!11217 = !DILocation(line: 705, column: 6, scope: !11110)
!11218 = !DILocation(line: 708, column: 5, scope: !11219)
!11219 = distinct !DILexicalBlock(scope: !11214, file: !10750, line: 706, column: 3)
!11220 = !DILocation(line: 712, column: 27, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11110, file: !10750, line: 712, column: 6)
!11222 = !DILocation(line: 709, column: 3, scope: !11219)
!11223 = !DILocation(line: 712, column: 38, scope: !11221)
!11224 = !DILocation(line: 712, column: 61, scope: !11221)
!11225 = !DILocation(line: 712, column: 6, scope: !11110)
!11226 = !DILocation(line: 715, column: 5, scope: !11227)
!11227 = distinct !DILexicalBlock(scope: !11221, file: !10750, line: 713, column: 3)
!11228 = !DILocation(line: 716, column: 3, scope: !11227)
!11229 = !DILocation(line: 719, column: 21, scope: !11110)
!11230 = !DILocation(line: 719, column: 70, scope: !11110)
!11231 = !DILocation(line: 719, column: 91, scope: !11110)
!11232 = !DILocation(line: 719, column: 50, scope: !11110)
!11233 = !DILocation(line: 719, column: 47, scope: !11110)
!11234 = !DILocation(line: 719, column: 19, scope: !11110)
!11235 = !DILocation(line: 722, column: 17, scope: !11110)
!11236 = !DILocation(line: 722, column: 3, scope: !11110)
!11237 = !DILocation(line: 724, column: 3, scope: !11110)
!11238 = !DILocation(line: 725, column: 1, scope: !11110)
!11239 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !10750, file: !10750, line: 885, type: !6168, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2846, retainedNodes: !11240)
!11240 = !{!11241, !11242, !11243, !11244}
!11241 = !DILocalVariable(name: "pllm", scope: !11239, file: !10750, line: 887, type: !162)
!11242 = !DILocalVariable(name: "pllvco", scope: !11239, file: !10750, line: 887, type: !162)
!11243 = !DILocalVariable(name: "pllp", scope: !11239, file: !10750, line: 887, type: !162)
!11244 = !DILocalVariable(name: "sysclockfreq", scope: !11239, file: !10750, line: 888, type: !162)
!11245 = !DILocation(line: 0, scope: !11239)
!11246 = !DILocation(line: 891, column: 16, scope: !11239)
!11247 = !DILocation(line: 891, column: 21, scope: !11239)
!11248 = !DILocation(line: 891, column: 3, scope: !11239)
!11249 = !DILocation(line: 901, column: 7, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !11251, file: !10750, line: 899, column: 5)
!11251 = distinct !DILexicalBlock(scope: !11239, file: !10750, line: 892, column: 3)
!11252 = !DILocation(line: 907, column: 19, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !11251, file: !10750, line: 904, column: 5)
!11254 = !DILocation(line: 907, column: 27, scope: !11253)
!11255 = !DILocation(line: 908, column: 10, scope: !11256)
!11256 = distinct !DILexicalBlock(scope: !11253, file: !10750, line: 908, column: 10)
!11257 = !DILocation(line: 908, column: 40, scope: !11256)
!11258 = !DILocation(line: 0, scope: !11256)
!11259 = !DILocation(line: 918, column: 23, scope: !11253)
!11260 = !DILocation(line: 918, column: 82, scope: !11253)
!11261 = !DILocation(line: 920, column: 28, scope: !11253)
!11262 = !DILocation(line: 921, column: 7, scope: !11253)
!11263 = !DILocation(line: 0, scope: !11251)
!11264 = !DILocation(line: 929, column: 3, scope: !11239)
!11265 = !DISubprogram(name: "HAL_InitTick", scope: !11109, file: !11109, line: 223, type: !11266, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!11266 = !DISubroutineType(types: !11267)
!11267 = !{!10753, !162}
!11268 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !10750, file: !10750, line: 775, type: !11269, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2846, retainedNodes: !11271)
!11269 = !DISubroutineType(types: !11270)
!11270 = !{null, !162, !162, !162}
!11271 = !{!11272, !11273, !11274, !11275, !11285, !11289}
!11272 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11268, file: !10750, line: 775, type: !162)
!11273 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11268, file: !10750, line: 775, type: !162)
!11274 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11268, file: !10750, line: 775, type: !162)
!11275 = !DILocalVariable(name: "GPIO_InitStruct", scope: !11268, file: !10750, line: 777, type: !11276)
!11276 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11277, line: 62, baseType: !11278)
!11277 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11278 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11277, line: 46, size: 160, elements: !11279)
!11279 = !{!11280, !11281, !11282, !11283, !11284}
!11280 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11278, file: !11277, line: 48, baseType: !162, size: 32)
!11281 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11278, file: !11277, line: 51, baseType: !162, size: 32, offset: 32)
!11282 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11278, file: !11277, line: 54, baseType: !162, size: 32, offset: 64)
!11283 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11278, file: !11277, line: 57, baseType: !162, size: 32, offset: 96)
!11284 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11278, file: !11277, line: 60, baseType: !162, size: 32, offset: 128)
!11285 = !DILocalVariable(name: "tmpreg", scope: !11286, file: !10750, line: 787, type: !283)
!11286 = distinct !DILexicalBlock(scope: !11287, file: !10750, line: 787, column: 5)
!11287 = distinct !DILexicalBlock(scope: !11288, file: !10750, line: 783, column: 3)
!11288 = distinct !DILexicalBlock(scope: !11268, file: !10750, line: 782, column: 6)
!11289 = !DILocalVariable(name: "tmpreg", scope: !11290, file: !10750, line: 811, type: !283)
!11290 = distinct !DILexicalBlock(scope: !11291, file: !10750, line: 811, column: 5)
!11291 = distinct !DILexicalBlock(scope: !11288, file: !10750, line: 807, column: 3)
!11292 = !DILocation(line: 0, scope: !11268)
!11293 = !DILocation(line: 777, column: 3, scope: !11268)
!11294 = !DILocation(line: 777, column: 20, scope: !11268)
!11295 = !DILocation(line: 782, column: 15, scope: !11288)
!11296 = !DILocation(line: 782, column: 6, scope: !11268)
!11297 = !DILocation(line: 787, column: 5, scope: !11286)
!11298 = !DILocation(line: 787, column: 5, scope: !11287)
!11299 = !DILocation(line: 790, column: 21, scope: !11287)
!11300 = !DILocation(line: 790, column: 25, scope: !11287)
!11301 = !DILocation(line: 791, column: 21, scope: !11287)
!11302 = !DILocation(line: 791, column: 26, scope: !11287)
!11303 = !DILocation(line: 792, column: 21, scope: !11287)
!11304 = !DILocation(line: 792, column: 27, scope: !11287)
!11305 = !DILocation(line: 793, column: 21, scope: !11287)
!11306 = !DILocation(line: 793, column: 26, scope: !11287)
!11307 = !DILocation(line: 794, column: 21, scope: !11287)
!11308 = !DILocation(line: 794, column: 31, scope: !11287)
!11309 = !DILocation(line: 795, column: 5, scope: !11287)
!11310 = !DILocation(line: 798, column: 5, scope: !11287)
!11311 = !DILocation(line: 804, column: 3, scope: !11287)
!11312 = !DILocation(line: 811, column: 5, scope: !11290)
!11313 = !DILocation(line: 811, column: 5, scope: !11291)
!11314 = !DILocation(line: 814, column: 21, scope: !11291)
!11315 = !DILocation(line: 814, column: 25, scope: !11291)
!11316 = !DILocation(line: 815, column: 21, scope: !11291)
!11317 = !DILocation(line: 815, column: 26, scope: !11291)
!11318 = !DILocation(line: 816, column: 21, scope: !11291)
!11319 = !DILocation(line: 816, column: 27, scope: !11291)
!11320 = !DILocation(line: 817, column: 21, scope: !11291)
!11321 = !DILocation(line: 817, column: 26, scope: !11291)
!11322 = !DILocation(line: 818, column: 21, scope: !11291)
!11323 = !DILocation(line: 818, column: 31, scope: !11291)
!11324 = !DILocation(line: 819, column: 5, scope: !11291)
!11325 = !DILocation(line: 822, column: 5, scope: !11291)
!11326 = !DILocation(line: 0, scope: !11288)
!11327 = !DILocation(line: 830, column: 1, scope: !11268)
!11328 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11277, file: !11277, line: 224, type: !11329, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!11329 = !DISubroutineType(types: !11330)
!11330 = !{null, !2917, !11331}
!11331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11276, size: 32)
!11332 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !10750, file: !10750, line: 841, type: !3137, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2846, retainedNodes: !250)
!11333 = !DILocation(line: 843, column: 38, scope: !11332)
!11334 = !DILocation(line: 844, column: 1, scope: !11332)
!11335 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !10750, file: !10750, line: 850, type: !3137, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2846, retainedNodes: !250)
!11336 = !DILocation(line: 852, column: 38, scope: !11335)
!11337 = !DILocation(line: 853, column: 1, scope: !11335)
!11338 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !10750, file: !10750, line: 941, type: !6168, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2846, retainedNodes: !250)
!11339 = !DILocation(line: 943, column: 10, scope: !11338)
!11340 = !DILocation(line: 943, column: 3, scope: !11338)
!11341 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !10750, file: !10750, line: 952, type: !6168, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2846, retainedNodes: !250)
!11342 = !DILocation(line: 955, column: 11, scope: !11341)
!11343 = !DILocation(line: 955, column: 56, scope: !11341)
!11344 = !DILocation(line: 955, column: 78, scope: !11341)
!11345 = !DILocation(line: 955, column: 36, scope: !11341)
!11346 = !DILocation(line: 955, column: 33, scope: !11341)
!11347 = !DILocation(line: 955, column: 3, scope: !11341)
!11348 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !10750, file: !10750, line: 964, type: !6168, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2846, retainedNodes: !250)
!11349 = !DILocation(line: 967, column: 11, scope: !11348)
!11350 = !DILocation(line: 967, column: 55, scope: !11348)
!11351 = !DILocation(line: 967, column: 77, scope: !11348)
!11352 = !DILocation(line: 967, column: 35, scope: !11348)
!11353 = !DILocation(line: 967, column: 32, scope: !11348)
!11354 = !DILocation(line: 967, column: 3, scope: !11348)
!11355 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !10750, file: !10750, line: 977, type: !11356, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2846, retainedNodes: !11358)
!11356 = !DISubroutineType(types: !11357)
!11357 = !{null, !10758}
!11358 = !{!11359}
!11359 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11355, file: !10750, line: 977, type: !10758)
!11360 = !DILocation(line: 0, scope: !11355)
!11361 = !DILocation(line: 980, column: 22, scope: !11355)
!11362 = !DILocation(line: 980, column: 37, scope: !11355)
!11363 = !DILocation(line: 983, column: 12, scope: !11364)
!11364 = distinct !DILexicalBlock(scope: !11355, file: !10750, line: 983, column: 6)
!11365 = !DILocation(line: 983, column: 15, scope: !11364)
!11366 = !DILocation(line: 983, column: 31, scope: !11364)
!11367 = !DILocation(line: 983, column: 6, scope: !11355)
!11368 = !DILocation(line: 985, column: 24, scope: !11369)
!11369 = distinct !DILexicalBlock(scope: !11364, file: !10750, line: 984, column: 3)
!11370 = !DILocation(line: 985, column: 33, scope: !11369)
!11371 = !DILocation(line: 986, column: 3, scope: !11369)
!11372 = !DILocation(line: 987, column: 17, scope: !11373)
!11373 = distinct !DILexicalBlock(scope: !11364, file: !10750, line: 987, column: 11)
!11374 = !DILocation(line: 987, column: 20, scope: !11373)
!11375 = !DILocation(line: 987, column: 35, scope: !11373)
!11376 = !DILocation(line: 0, scope: !11373)
!11377 = !DILocation(line: 987, column: 11, scope: !11364)
!11378 = !DILocation(line: 989, column: 33, scope: !11379)
!11379 = distinct !DILexicalBlock(scope: !11373, file: !10750, line: 988, column: 3)
!11380 = !DILocation(line: 990, column: 3, scope: !11379)
!11381 = !DILocation(line: 993, column: 33, scope: !11382)
!11382 = distinct !DILexicalBlock(scope: !11373, file: !10750, line: 992, column: 3)
!11383 = !DILocation(line: 997, column: 12, scope: !11384)
!11384 = distinct !DILexicalBlock(scope: !11355, file: !10750, line: 997, column: 6)
!11385 = !DILocation(line: 997, column: 15, scope: !11384)
!11386 = !DILocation(line: 1003, column: 24, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !11384, file: !10750, line: 1002, column: 3)
!11388 = !DILocation(line: 1003, column: 33, scope: !11387)
!11389 = !DILocation(line: 1006, column: 61, scope: !11355)
!11390 = !DILocation(line: 1006, column: 81, scope: !11355)
!11391 = !DILocation(line: 1006, column: 22, scope: !11355)
!11392 = !DILocation(line: 1006, column: 42, scope: !11355)
!11393 = !DILocation(line: 1009, column: 12, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !11355, file: !10750, line: 1009, column: 6)
!11395 = !DILocation(line: 1009, column: 17, scope: !11394)
!11396 = !DILocation(line: 1009, column: 35, scope: !11394)
!11397 = !DILocation(line: 1009, column: 6, scope: !11355)
!11398 = !DILocation(line: 1011, column: 24, scope: !11399)
!11399 = distinct !DILexicalBlock(scope: !11394, file: !10750, line: 1010, column: 3)
!11400 = !DILocation(line: 1011, column: 33, scope: !11399)
!11401 = !DILocation(line: 1012, column: 3, scope: !11399)
!11402 = !DILocation(line: 1013, column: 17, scope: !11403)
!11403 = distinct !DILexicalBlock(scope: !11394, file: !10750, line: 1013, column: 11)
!11404 = !DILocation(line: 1013, column: 22, scope: !11403)
!11405 = !DILocation(line: 1013, column: 39, scope: !11403)
!11406 = !DILocation(line: 0, scope: !11403)
!11407 = !DILocation(line: 1013, column: 11, scope: !11394)
!11408 = !DILocation(line: 1015, column: 33, scope: !11409)
!11409 = distinct !DILexicalBlock(scope: !11403, file: !10750, line: 1014, column: 3)
!11410 = !DILocation(line: 1016, column: 3, scope: !11409)
!11411 = !DILocation(line: 1019, column: 33, scope: !11412)
!11412 = distinct !DILexicalBlock(scope: !11403, file: !10750, line: 1018, column: 3)
!11413 = !DILocation(line: 1023, column: 12, scope: !11414)
!11414 = distinct !DILexicalBlock(scope: !11355, file: !10750, line: 1023, column: 6)
!11415 = !DILocation(line: 1023, column: 16, scope: !11414)
!11416 = !DILocation(line: 1029, column: 24, scope: !11417)
!11417 = distinct !DILexicalBlock(scope: !11414, file: !10750, line: 1028, column: 3)
!11418 = !DILocation(line: 1029, column: 33, scope: !11417)
!11419 = !DILocation(line: 1033, column: 12, scope: !11420)
!11420 = distinct !DILexicalBlock(scope: !11355, file: !10750, line: 1033, column: 6)
!11421 = !DILocation(line: 1033, column: 15, scope: !11420)
!11422 = !DILocation(line: 1033, column: 30, scope: !11420)
!11423 = !DILocation(line: 1033, column: 6, scope: !11355)
!11424 = !DILocation(line: 1039, column: 28, scope: !11425)
!11425 = distinct !DILexicalBlock(scope: !11420, file: !10750, line: 1038, column: 3)
!11426 = !DILocation(line: 1039, column: 37, scope: !11425)
!11427 = !DILocation(line: 1041, column: 54, scope: !11355)
!11428 = !DILocation(line: 1041, column: 62, scope: !11355)
!11429 = !DILocation(line: 1041, column: 26, scope: !11355)
!11430 = !DILocation(line: 1041, column: 36, scope: !11355)
!11431 = !DILocation(line: 1042, column: 49, scope: !11355)
!11432 = !DILocation(line: 1042, column: 57, scope: !11355)
!11433 = !DILocation(line: 1042, column: 26, scope: !11355)
!11434 = !DILocation(line: 1042, column: 31, scope: !11355)
!11435 = !DILocation(line: 1043, column: 50, scope: !11355)
!11436 = !DILocation(line: 1043, column: 78, scope: !11355)
!11437 = !DILocation(line: 1043, column: 26, scope: !11355)
!11438 = !DILocation(line: 1043, column: 31, scope: !11355)
!11439 = !DILocation(line: 1044, column: 52, scope: !11355)
!11440 = !DILocation(line: 1044, column: 102, scope: !11355)
!11441 = !DILocation(line: 1044, column: 109, scope: !11355)
!11442 = !DILocation(line: 1044, column: 26, scope: !11355)
!11443 = !DILocation(line: 1044, column: 31, scope: !11355)
!11444 = !DILocation(line: 1045, column: 50, scope: !11355)
!11445 = !DILocation(line: 1045, column: 78, scope: !11355)
!11446 = !DILocation(line: 1045, column: 26, scope: !11355)
!11447 = !DILocation(line: 1045, column: 31, scope: !11355)
!11448 = !DILocation(line: 1046, column: 1, scope: !11355)
!11449 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !10750, file: !10750, line: 1056, type: !11450, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2846, retainedNodes: !11452)
!11450 = !DISubroutineType(types: !11451)
!11451 = !{null, !11113, !848}
!11452 = !{!11453, !11454}
!11453 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11449, file: !10750, line: 1056, type: !11113)
!11454 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11449, file: !10750, line: 1056, type: !848)
!11455 = !DILocation(line: 0, scope: !11449)
!11456 = !DILocation(line: 1059, column: 22, scope: !11449)
!11457 = !DILocation(line: 1059, column: 32, scope: !11449)
!11458 = !DILocation(line: 1062, column: 53, scope: !11449)
!11459 = !DILocation(line: 1062, column: 58, scope: !11449)
!11460 = !DILocation(line: 1062, column: 22, scope: !11449)
!11461 = !DILocation(line: 1062, column: 35, scope: !11449)
!11462 = !DILocation(line: 1065, column: 54, scope: !11449)
!11463 = !DILocation(line: 1065, column: 59, scope: !11449)
!11464 = !DILocation(line: 1065, column: 22, scope: !11449)
!11465 = !DILocation(line: 1065, column: 36, scope: !11449)
!11466 = !DILocation(line: 1068, column: 55, scope: !11449)
!11467 = !DILocation(line: 1068, column: 60, scope: !11449)
!11468 = !DILocation(line: 1068, column: 22, scope: !11449)
!11469 = !DILocation(line: 1068, column: 37, scope: !11449)
!11470 = !DILocation(line: 1071, column: 56, scope: !11449)
!11471 = !DILocation(line: 1071, column: 79, scope: !11449)
!11472 = !DILocation(line: 1071, column: 22, scope: !11449)
!11473 = !DILocation(line: 1071, column: 37, scope: !11449)
!11474 = !DILocation(line: 1074, column: 34, scope: !11449)
!11475 = !DILocation(line: 1074, column: 38, scope: !11449)
!11476 = !DILocation(line: 1074, column: 14, scope: !11449)
!11477 = !DILocation(line: 1075, column: 1, scope: !11449)
!11478 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !10750, file: !10750, line: 1082, type: !3137, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2846, retainedNodes: !250)
!11479 = !DILocation(line: 1085, column: 6, scope: !11480)
!11480 = distinct !DILexicalBlock(scope: !11478, file: !10750, line: 1085, column: 6)
!11481 = !DILocation(line: 1085, column: 6, scope: !11478)
!11482 = !DILocation(line: 1088, column: 5, scope: !11483)
!11483 = distinct !DILexicalBlock(scope: !11480, file: !10750, line: 1086, column: 3)
!11484 = !DILocation(line: 1091, column: 5, scope: !11483)
!11485 = !DILocation(line: 1092, column: 3, scope: !11483)
!11486 = !DILocation(line: 1093, column: 1, scope: !11478)
!11487 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !10750, file: !10750, line: 1099, type: !3137, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2846, retainedNodes: !250)
!11488 = !DILocation(line: 1104, column: 1, scope: !11487)
!11489 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11490, file: !11490, line: 257, type: !6178, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !11491)
!11490 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11491 = !{!11492}
!11492 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11489, file: !11490, line: 257, type: !162)
!11493 = !DILocation(line: 0, scope: !11489)
!11494 = !DILocation(line: 260, column: 3, scope: !11489)
!11495 = !DILocation(line: 261, column: 1, scope: !11489)
!11496 = distinct !DISubprogram(name: "LL_InitTick", scope: !11497, file: !11497, line: 260, type: !8781, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !11498)
!11497 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11498 = !{!11499, !11500}
!11499 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11496, file: !11497, line: 260, type: !162)
!11500 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11496, file: !11497, line: 260, type: !162)
!11501 = !DILocation(line: 0, scope: !11496)
!11502 = !DILocation(line: 263, column: 46, scope: !11496)
!11503 = !DILocation(line: 263, column: 55, scope: !11496)
!11504 = !DILocation(line: 263, column: 18, scope: !11496)
!11505 = !DILocation(line: 264, column: 18, scope: !11496)
!11506 = !DILocation(line: 265, column: 18, scope: !11496)
!11507 = !DILocation(line: 267, column: 1, scope: !11496)
!11508 = distinct !DISubprogram(name: "LL_mDelay", scope: !11490, file: !11490, line: 273, type: !6178, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !11509)
!11509 = !{!11510, !11511}
!11510 = !DILocalVariable(name: "Delay", arg: 1, scope: !11508, file: !11490, line: 273, type: !162)
!11511 = !DILocalVariable(name: "tmp", scope: !11508, file: !11490, line: 275, type: !283)
!11512 = !DILocation(line: 0, scope: !11508)
!11513 = !DILocation(line: 275, column: 3, scope: !11508)
!11514 = !DILocation(line: 275, column: 18, scope: !11508)
!11515 = !DILocation(line: 275, column: 33, scope: !11508)
!11516 = !DILocation(line: 277, column: 10, scope: !11508)
!11517 = !DILocation(line: 280, column: 12, scope: !11518)
!11518 = distinct !DILexicalBlock(scope: !11508, file: !11490, line: 280, column: 6)
!11519 = !DILocation(line: 285, column: 3, scope: !11508)
!11520 = !DILocation(line: 287, column: 18, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !11522, file: !11490, line: 287, column: 8)
!11522 = distinct !DILexicalBlock(scope: !11508, file: !11490, line: 286, column: 3)
!11523 = !DILocation(line: 292, column: 1, scope: !11508)
!11524 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11490, file: !11490, line: 323, type: !6178, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !11525)
!11525 = !{!11526}
!11526 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11524, file: !11490, line: 323, type: !162)
!11527 = !DILocation(line: 0, scope: !11524)
!11528 = !DILocation(line: 326, column: 19, scope: !11524)
!11529 = !DILocation(line: 327, column: 1, scope: !11524)
!11530 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11490, file: !11490, line: 338, type: !11531, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !11534)
!11531 = !DISubroutineType(types: !11532)
!11532 = !{!11533, !162}
!11533 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !795, line: 201, baseType: !794)
!11534 = !{!11535, !11536, !11537, !11538, !11539}
!11535 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !11530, file: !11490, line: 338, type: !162)
!11536 = !DILocalVariable(name: "timeout", scope: !11530, file: !11490, line: 340, type: !162)
!11537 = !DILocalVariable(name: "getlatency", scope: !11530, file: !11490, line: 341, type: !162)
!11538 = !DILocalVariable(name: "latency", scope: !11530, file: !11490, line: 342, type: !162)
!11539 = !DILocalVariable(name: "status", scope: !11530, file: !11490, line: 343, type: !11533)
!11540 = !DILocation(line: 0, scope: !11530)
!11541 = !DILocation(line: 347, column: 21, scope: !11542)
!11542 = distinct !DILexicalBlock(scope: !11530, file: !11490, line: 347, column: 6)
!11543 = !DILocation(line: 347, column: 6, scope: !11530)
!11544 = !DILocation(line: 353, column: 8, scope: !11545)
!11545 = distinct !DILexicalBlock(scope: !11546, file: !11490, line: 353, column: 8)
!11546 = distinct !DILexicalBlock(scope: !11542, file: !11490, line: 352, column: 3)
!11547 = !DILocation(line: 353, column: 40, scope: !11545)
!11548 = !DILocation(line: 353, column: 8, scope: !11546)
!11549 = !DILocation(line: 356, column: 26, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11551, file: !11490, line: 356, column: 10)
!11551 = distinct !DILexicalBlock(scope: !11545, file: !11490, line: 354, column: 5)
!11552 = !DILocation(line: 356, column: 55, scope: !11550)
!11553 = !DILocation(line: 362, column: 55, scope: !11554)
!11554 = distinct !DILexicalBlock(scope: !11551, file: !11490, line: 362, column: 10)
!11555 = !DILocation(line: 368, column: 55, scope: !11556)
!11556 = distinct !DILexicalBlock(scope: !11551, file: !11490, line: 368, column: 10)
!11557 = !DILocation(line: 374, column: 26, scope: !11558)
!11558 = distinct !DILexicalBlock(scope: !11551, file: !11490, line: 374, column: 10)
!11559 = !DILocation(line: 374, column: 55, scope: !11558)
!11560 = !DILocation(line: 380, column: 28, scope: !11561)
!11561 = distinct !DILexicalBlock(scope: !11562, file: !11490, line: 380, column: 12)
!11562 = distinct !DILexicalBlock(scope: !11558, file: !11490, line: 379, column: 7)
!11563 = !DILocation(line: 380, column: 57, scope: !11561)
!11564 = !DILocation(line: 387, column: 8, scope: !11565)
!11565 = distinct !DILexicalBlock(scope: !11546, file: !11490, line: 387, column: 8)
!11566 = !DILocation(line: 387, column: 40, scope: !11565)
!11567 = !DILocation(line: 387, column: 8, scope: !11546)
!11568 = !DILocation(line: 396, column: 26, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !11570, file: !11490, line: 396, column: 10)
!11570 = distinct !DILexicalBlock(scope: !11565, file: !11490, line: 388, column: 5)
!11571 = !DILocation(line: 396, column: 55, scope: !11569)
!11572 = !DILocation(line: 402, column: 26, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !11570, file: !11490, line: 402, column: 10)
!11574 = !DILocation(line: 402, column: 55, scope: !11573)
!11575 = !DILocation(line: 407, column: 26, scope: !11576)
!11576 = distinct !DILexicalBlock(scope: !11570, file: !11490, line: 407, column: 10)
!11577 = !DILocation(line: 407, column: 55, scope: !11576)
!11578 = !DILocation(line: 413, column: 28, scope: !11579)
!11579 = distinct !DILexicalBlock(scope: !11580, file: !11490, line: 413, column: 12)
!11580 = distinct !DILexicalBlock(scope: !11576, file: !11490, line: 412, column: 7)
!11581 = !DILocation(line: 413, column: 57, scope: !11579)
!11582 = !DILocation(line: 0, scope: !11546)
!11583 = !DILocation(line: 444, column: 5, scope: !11546)
!11584 = !DILocation(line: 448, column: 5, scope: !11546)
!11585 = !DILocation(line: 451, column: 18, scope: !11586)
!11586 = distinct !DILexicalBlock(scope: !11546, file: !11490, line: 449, column: 5)
!11587 = !DILocation(line: 452, column: 12, scope: !11586)
!11588 = !DILocation(line: 453, column: 26, scope: !11546)
!11589 = !DILocation(line: 453, column: 38, scope: !11546)
!11590 = !DILocation(line: 453, column: 5, scope: !11586)
!11591 = distinct !{!11591, !11584, !11592}
!11592 = !DILocation(line: 453, column: 54, scope: !11546)
!11593 = !DILocation(line: 0, scope: !11542)
!11594 = !DILocation(line: 464, column: 3, scope: !11530)
!11595 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !11596, file: !11596, line: 519, type: !6168, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !250)
!11596 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11597 = !DILocation(line: 521, column: 21, scope: !11595)
!11598 = !DILocation(line: 521, column: 3, scope: !11595)
!11599 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !5934, file: !5934, line: 1543, type: !6178, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !11600)
!11600 = !{!11601}
!11601 = !DILocalVariable(name: "Latency", arg: 1, scope: !11599, file: !5934, line: 1543, type: !162)
!11602 = !DILocation(line: 0, scope: !11599)
!11603 = !DILocation(line: 1545, column: 3, scope: !11599)
!11604 = !DILocation(line: 1546, column: 1, scope: !11599)
!11605 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !5934, file: !5934, line: 1569, type: !6168, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !250)
!11606 = !DILocation(line: 1571, column: 21, scope: !11605)
!11607 = !DILocation(line: 1571, column: 3, scope: !11605)
!11608 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11490, file: !11490, line: 483, type: !11609, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !11625)
!11609 = !DISubroutineType(types: !11610)
!11610 = !{!11533, !11611, !11618}
!11611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11612, size: 32)
!11612 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11497, line: 114, baseType: !11613)
!11613 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11497, line: 94, size: 96, elements: !11614)
!11614 = !{!11615, !11616, !11617}
!11615 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11613, file: !11497, line: 96, baseType: !162, size: 32)
!11616 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11613, file: !11497, line: 102, baseType: !162, size: 32, offset: 32)
!11617 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11613, file: !11497, line: 109, baseType: !162, size: 32, offset: 64)
!11618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11619, size: 32)
!11619 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11497, line: 139, baseType: !11620)
!11620 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11497, line: 119, size: 96, elements: !11621)
!11621 = !{!11622, !11623, !11624}
!11622 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11620, file: !11497, line: 121, baseType: !162, size: 32)
!11623 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11620, file: !11497, line: 127, baseType: !162, size: 32, offset: 32)
!11624 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11620, file: !11497, line: 133, baseType: !162, size: 32, offset: 64)
!11625 = !{!11626, !11627, !11628, !11629}
!11626 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !11608, file: !11490, line: 483, type: !11611)
!11627 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11608, file: !11490, line: 484, type: !11618)
!11628 = !DILocalVariable(name: "status", scope: !11608, file: !11490, line: 486, type: !11533)
!11629 = !DILocalVariable(name: "pllfreq", scope: !11608, file: !11490, line: 487, type: !162)
!11630 = !DILocation(line: 0, scope: !11608)
!11631 = !DILocation(line: 490, column: 6, scope: !11632)
!11632 = distinct !DILexicalBlock(scope: !11608, file: !11490, line: 490, column: 6)
!11633 = !DILocation(line: 490, column: 25, scope: !11632)
!11634 = !DILocation(line: 490, column: 6, scope: !11608)
!11635 = !DILocation(line: 493, column: 15, scope: !11636)
!11636 = distinct !DILexicalBlock(scope: !11632, file: !11490, line: 491, column: 3)
!11637 = !DILocation(line: 496, column: 8, scope: !11638)
!11638 = distinct !DILexicalBlock(scope: !11636, file: !11490, line: 496, column: 8)
!11639 = !DILocation(line: 496, column: 29, scope: !11638)
!11640 = !DILocation(line: 496, column: 8, scope: !11636)
!11641 = !DILocation(line: 498, column: 7, scope: !11642)
!11642 = distinct !DILexicalBlock(scope: !11638, file: !11490, line: 497, column: 5)
!11643 = !DILocation(line: 499, column: 7, scope: !11642)
!11644 = !DILocation(line: 499, column: 14, scope: !11642)
!11645 = !DILocation(line: 499, column: 35, scope: !11642)
!11646 = distinct !{!11646, !11643, !11647}
!11647 = !DILocation(line: 502, column: 7, scope: !11642)
!11648 = !DILocation(line: 506, column: 76, scope: !11636)
!11649 = !DILocation(line: 506, column: 103, scope: !11636)
!11650 = !DILocation(line: 507, column: 54, scope: !11636)
!11651 = !DILocation(line: 506, column: 5, scope: !11636)
!11652 = !DILocation(line: 510, column: 14, scope: !11636)
!11653 = !DILocation(line: 511, column: 3, scope: !11636)
!11654 = !DILocation(line: 0, scope: !11632)
!11655 = !DILocation(line: 518, column: 3, scope: !11608)
!11656 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11490, file: !11490, line: 642, type: !11657, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !11659)
!11657 = !DISubroutineType(types: !11658)
!11658 = !{!11533}
!11659 = !{!11660}
!11660 = !DILocalVariable(name: "status", scope: !11656, file: !11490, line: 644, type: !11533)
!11661 = !DILocation(line: 0, scope: !11656)
!11662 = !DILocation(line: 647, column: 6, scope: !11663)
!11663 = distinct !DILexicalBlock(scope: !11656, file: !11490, line: 647, column: 6)
!11664 = !DILocation(line: 647, column: 27, scope: !11663)
!11665 = !DILocation(line: 663, column: 6, scope: !11666)
!11666 = distinct !DILexicalBlock(scope: !11656, file: !11490, line: 663, column: 6)
!11667 = !DILocation(line: 663, column: 30, scope: !11666)
!11668 = !DILocation(line: 663, column: 6, scope: !11656)
!11669 = !DILocation(line: 669, column: 3, scope: !11656)
!11670 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11490, file: !11490, line: 611, type: !11671, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !11673)
!11671 = !DISubroutineType(types: !11672)
!11672 = !{!162, !162, !11611}
!11673 = !{!11674, !11675, !11676}
!11674 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !11670, file: !11490, line: 611, type: !162)
!11675 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !11670, file: !11490, line: 611, type: !11611)
!11676 = !DILocalVariable(name: "pllfreq", scope: !11670, file: !11490, line: 613, type: !162)
!11677 = !DILocation(line: 0, scope: !11670)
!11678 = !DILocation(line: 622, column: 56, scope: !11670)
!11679 = !DILocation(line: 622, column: 61, scope: !11670)
!11680 = !DILocation(line: 622, column: 32, scope: !11670)
!11681 = !DILocation(line: 626, column: 45, scope: !11670)
!11682 = !DILocation(line: 626, column: 50, scope: !11670)
!11683 = !DILocation(line: 626, column: 21, scope: !11670)
!11684 = !DILocation(line: 630, column: 47, scope: !11670)
!11685 = !DILocation(line: 630, column: 82, scope: !11670)
!11686 = !DILocation(line: 630, column: 21, scope: !11670)
!11687 = !DILocation(line: 633, column: 3, scope: !11670)
!11688 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8123, file: !8123, line: 3007, type: !6168, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !250)
!11689 = !DILocation(line: 3009, column: 11, scope: !11688)
!11690 = !DILocation(line: 3009, column: 44, scope: !11688)
!11691 = !DILocation(line: 3009, column: 3, scope: !11688)
!11692 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8123, file: !8123, line: 2987, type: !3137, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !250)
!11693 = !DILocation(line: 2989, column: 3, scope: !11692)
!11694 = !DILocation(line: 2990, column: 1, scope: !11692)
!11695 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8123, file: !8123, line: 4304, type: !8257, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !11696)
!11696 = !{!11697, !11698, !11699, !11700}
!11697 = !DILocalVariable(name: "Source", arg: 1, scope: !11695, file: !8123, line: 4304, type: !162)
!11698 = !DILocalVariable(name: "PLLM", arg: 2, scope: !11695, file: !8123, line: 4304, type: !162)
!11699 = !DILocalVariable(name: "PLLN", arg: 3, scope: !11695, file: !8123, line: 4304, type: !162)
!11700 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !11695, file: !8123, line: 4304, type: !162)
!11701 = !DILocation(line: 0, scope: !11695)
!11702 = !DILocation(line: 4306, column: 3, scope: !11695)
!11703 = !DILocation(line: 4308, column: 3, scope: !11695)
!11704 = !DILocation(line: 4312, column: 1, scope: !11695)
!11705 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11490, file: !11490, line: 681, type: !11706, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !11708)
!11706 = !DISubroutineType(types: !11707)
!11707 = !{!11533, !162, !11618}
!11708 = !{!11709, !11710, !11711, !11712}
!11709 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !11705, file: !11490, line: 681, type: !162)
!11710 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11705, file: !11490, line: 681, type: !11618)
!11711 = !DILocalVariable(name: "status", scope: !11705, file: !11490, line: 683, type: !11533)
!11712 = !DILocalVariable(name: "hclk_frequency", scope: !11705, file: !11490, line: 684, type: !162)
!11713 = !DILocation(line: 0, scope: !11705)
!11714 = !DILocation(line: 691, column: 20, scope: !11705)
!11715 = !DILocation(line: 694, column: 6, scope: !11716)
!11716 = distinct !DILexicalBlock(scope: !11705, file: !11490, line: 694, column: 6)
!11717 = !DILocation(line: 694, column: 22, scope: !11716)
!11718 = !DILocation(line: 694, column: 6, scope: !11705)
!11719 = !DILocation(line: 697, column: 14, scope: !11720)
!11720 = distinct !DILexicalBlock(scope: !11716, file: !11490, line: 695, column: 3)
!11721 = !DILocation(line: 701, column: 13, scope: !11722)
!11722 = distinct !DILexicalBlock(scope: !11705, file: !11490, line: 701, column: 6)
!11723 = !DILocation(line: 701, column: 6, scope: !11705)
!11724 = !DILocation(line: 704, column: 5, scope: !11725)
!11725 = distinct !DILexicalBlock(scope: !11722, file: !11490, line: 702, column: 3)
!11726 = !DILocation(line: 705, column: 5, scope: !11725)
!11727 = !DILocation(line: 705, column: 12, scope: !11725)
!11728 = !DILocation(line: 705, column: 33, scope: !11725)
!11729 = distinct !{!11729, !11726, !11730}
!11730 = !DILocation(line: 708, column: 5, scope: !11725)
!11731 = !DILocation(line: 711, column: 49, scope: !11725)
!11732 = !DILocation(line: 711, column: 5, scope: !11725)
!11733 = !DILocation(line: 712, column: 5, scope: !11725)
!11734 = !DILocation(line: 713, column: 5, scope: !11725)
!11735 = !DILocation(line: 713, column: 12, scope: !11725)
!11736 = !DILocation(line: 713, column: 37, scope: !11725)
!11737 = distinct !{!11737, !11734, !11738}
!11738 = !DILocation(line: 716, column: 5, scope: !11725)
!11739 = !DILocation(line: 719, column: 50, scope: !11725)
!11740 = !DILocation(line: 719, column: 5, scope: !11725)
!11741 = !DILocation(line: 720, column: 50, scope: !11725)
!11742 = !DILocation(line: 720, column: 5, scope: !11725)
!11743 = !DILocation(line: 721, column: 3, scope: !11725)
!11744 = !DILocation(line: 724, column: 6, scope: !11745)
!11745 = distinct !DILexicalBlock(scope: !11705, file: !11490, line: 724, column: 6)
!11746 = !DILocation(line: 724, column: 22, scope: !11745)
!11747 = !DILocation(line: 724, column: 6, scope: !11705)
!11748 = !DILocation(line: 727, column: 14, scope: !11749)
!11749 = distinct !DILexicalBlock(scope: !11745, file: !11490, line: 725, column: 3)
!11750 = !DILocation(line: 728, column: 3, scope: !11749)
!11751 = !DILocation(line: 731, column: 13, scope: !11752)
!11752 = distinct !DILexicalBlock(scope: !11705, file: !11490, line: 731, column: 6)
!11753 = !DILocation(line: 731, column: 6, scope: !11705)
!11754 = !DILocation(line: 733, column: 5, scope: !11755)
!11755 = distinct !DILexicalBlock(scope: !11752, file: !11490, line: 732, column: 3)
!11756 = !DILocation(line: 734, column: 3, scope: !11755)
!11757 = !DILocation(line: 736, column: 3, scope: !11705)
!11758 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8123, file: !8123, line: 4184, type: !3137, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !250)
!11759 = !DILocation(line: 4186, column: 3, scope: !11758)
!11760 = !DILocation(line: 4187, column: 1, scope: !11758)
!11761 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8123, file: !8123, line: 4205, type: !6168, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !250)
!11762 = !DILocation(line: 4207, column: 11, scope: !11761)
!11763 = !DILocation(line: 4207, column: 44, scope: !11761)
!11764 = !DILocation(line: 4207, column: 3, scope: !11761)
!11765 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8123, file: !8123, line: 3224, type: !6178, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !11766)
!11766 = !{!11767}
!11767 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11765, file: !8123, line: 3224, type: !162)
!11768 = !DILocation(line: 0, scope: !11765)
!11769 = !DILocation(line: 3226, column: 3, scope: !11765)
!11770 = !DILocation(line: 3227, column: 1, scope: !11765)
!11771 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8123, file: !8123, line: 3188, type: !6178, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !11772)
!11772 = !{!11773}
!11773 = !DILocalVariable(name: "Source", arg: 1, scope: !11771, file: !8123, line: 3188, type: !162)
!11774 = !DILocation(line: 0, scope: !11771)
!11775 = !DILocation(line: 3190, column: 3, scope: !11771)
!11776 = !DILocation(line: 3191, column: 1, scope: !11771)
!11777 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8123, file: !8123, line: 3204, type: !6168, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !250)
!11778 = !DILocation(line: 3206, column: 21, scope: !11777)
!11779 = !DILocation(line: 3206, column: 3, scope: !11777)
!11780 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8123, file: !8123, line: 3240, type: !6178, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !11781)
!11781 = !{!11782}
!11782 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11780, file: !8123, line: 3240, type: !162)
!11783 = !DILocation(line: 0, scope: !11780)
!11784 = !DILocation(line: 3242, column: 3, scope: !11780)
!11785 = !DILocation(line: 3243, column: 1, scope: !11780)
!11786 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8123, file: !8123, line: 3256, type: !6178, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !11787)
!11787 = !{!11788}
!11788 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11786, file: !8123, line: 3256, type: !162)
!11789 = !DILocation(line: 0, scope: !11786)
!11790 = !DILocation(line: 3258, column: 3, scope: !11786)
!11791 = !DILocation(line: 3259, column: 1, scope: !11786)
!11792 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8123, file: !8123, line: 5153, type: !6168, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !250)
!11793 = !DILocation(line: 5155, column: 11, scope: !11792)
!11794 = !DILocation(line: 5155, column: 47, scope: !11792)
!11795 = !DILocation(line: 5155, column: 3, scope: !11792)
!11796 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11490, file: !11490, line: 540, type: !11797, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !11799)
!11797 = !DISubroutineType(types: !11798)
!11798 = !{!11533, !162, !162, !11611, !11618}
!11799 = !{!11800, !11801, !11802, !11803, !11804, !11805}
!11800 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !11796, file: !11490, line: 540, type: !162)
!11801 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !11796, file: !11490, line: 540, type: !162)
!11802 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !11796, file: !11490, line: 541, type: !11611)
!11803 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !11796, file: !11490, line: 541, type: !11618)
!11804 = !DILocalVariable(name: "status", scope: !11796, file: !11490, line: 543, type: !11533)
!11805 = !DILocalVariable(name: "pllfreq", scope: !11796, file: !11490, line: 544, type: !162)
!11806 = !DILocation(line: 0, scope: !11796)
!11807 = !DILocation(line: 551, column: 6, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11796, file: !11490, line: 551, column: 6)
!11809 = !DILocation(line: 551, column: 25, scope: !11808)
!11810 = !DILocation(line: 551, column: 6, scope: !11796)
!11811 = !DILocation(line: 554, column: 15, scope: !11812)
!11812 = distinct !DILexicalBlock(scope: !11808, file: !11490, line: 552, column: 3)
!11813 = !DILocation(line: 557, column: 8, scope: !11814)
!11814 = distinct !DILexicalBlock(scope: !11812, file: !11490, line: 557, column: 8)
!11815 = !DILocation(line: 557, column: 29, scope: !11814)
!11816 = !DILocation(line: 557, column: 8, scope: !11812)
!11817 = !DILocation(line: 560, column: 20, scope: !11818)
!11818 = distinct !DILexicalBlock(scope: !11819, file: !11490, line: 560, column: 10)
!11819 = distinct !DILexicalBlock(scope: !11814, file: !11490, line: 558, column: 5)
!11820 = !DILocation(line: 560, column: 10, scope: !11819)
!11821 = !DILocation(line: 562, column: 9, scope: !11822)
!11822 = distinct !DILexicalBlock(scope: !11818, file: !11490, line: 561, column: 7)
!11823 = !DILocation(line: 563, column: 7, scope: !11822)
!11824 = !DILocation(line: 566, column: 9, scope: !11825)
!11825 = distinct !DILexicalBlock(scope: !11818, file: !11490, line: 565, column: 7)
!11826 = !DILocation(line: 570, column: 7, scope: !11819)
!11827 = !DILocation(line: 571, column: 7, scope: !11819)
!11828 = !DILocation(line: 571, column: 14, scope: !11819)
!11829 = !DILocation(line: 571, column: 35, scope: !11819)
!11830 = distinct !{!11830, !11827, !11831}
!11831 = !DILocation(line: 574, column: 7, scope: !11819)
!11832 = !DILocation(line: 578, column: 76, scope: !11812)
!11833 = !DILocation(line: 578, column: 103, scope: !11812)
!11834 = !DILocation(line: 579, column: 54, scope: !11812)
!11835 = !DILocation(line: 578, column: 5, scope: !11812)
!11836 = !DILocation(line: 582, column: 14, scope: !11812)
!11837 = !DILocation(line: 583, column: 3, scope: !11812)
!11838 = !DILocation(line: 0, scope: !11808)
!11839 = !DILocation(line: 590, column: 3, scope: !11796)
!11840 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8123, file: !8123, line: 2969, type: !6168, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !250)
!11841 = !DILocation(line: 2971, column: 11, scope: !11840)
!11842 = !DILocation(line: 2971, column: 44, scope: !11840)
!11843 = !DILocation(line: 2971, column: 3, scope: !11840)
!11844 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8123, file: !8123, line: 2929, type: !3137, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !250)
!11845 = !DILocation(line: 2931, column: 3, scope: !11844)
!11846 = !DILocation(line: 2932, column: 1, scope: !11844)
!11847 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8123, file: !8123, line: 2939, type: !3137, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !250)
!11848 = !DILocation(line: 2941, column: 3, scope: !11847)
!11849 = !DILocation(line: 2942, column: 1, scope: !11847)
!11850 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8123, file: !8123, line: 2949, type: !3137, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !250)
!11851 = !DILocation(line: 2951, column: 3, scope: !11850)
!11852 = !DILocation(line: 2952, column: 1, scope: !11850)
!11853 = distinct !DISubprogram(name: "z_device_state_init", scope: !11854, file: !11854, line: 23, type: !3137, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !11855)
!11854 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11855 = !{!11856}
!11856 = !DILocalVariable(name: "dev", scope: !11853, file: !11854, line: 25, type: !11857)
!11857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11858, size: 32)
!11858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11859)
!11859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !11860)
!11860 = !{!11861, !11862, !11863, !11864, !11870, !11871}
!11861 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11859, file: !120, line: 380, baseType: !123, size: 32)
!11862 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !11859, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!11863 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !11859, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!11864 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11859, file: !120, line: 386, baseType: !11865, size: 32, offset: 96)
!11865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11866, size: 32)
!11866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !11867)
!11867 = !{!11868, !11869}
!11868 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !11866, file: !120, line: 359, baseType: !133, size: 8)
!11869 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !11866, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!11870 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11859, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!11871 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !11859, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!11872 = !DILocation(line: 0, scope: !11853)
!11873 = !DILocation(line: 31, column: 1, scope: !11853)
!11874 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !11854, file: !11854, line: 33, type: !11875, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !11877)
!11875 = !DISubroutineType(types: !11876)
!11876 = !{!11857, !123}
!11877 = !{!11878, !11879}
!11878 = !DILocalVariable(name: "name", arg: 1, scope: !11874, file: !11854, line: 33, type: !123)
!11879 = !DILocalVariable(name: "dev", scope: !11874, file: !11854, line: 35, type: !11857)
!11880 = !DILocation(line: 0, scope: !11874)
!11881 = !DILocation(line: 40, column: 12, scope: !11882)
!11882 = distinct !DILexicalBlock(scope: !11874, file: !11854, line: 40, column: 6)
!11883 = !DILocation(line: 40, column: 21, scope: !11882)
!11884 = !DILocation(line: 40, column: 25, scope: !11882)
!11885 = !DILocation(line: 40, column: 33, scope: !11882)
!11886 = !DILocation(line: 40, column: 6, scope: !11874)
!11887 = !DILocation(line: 55, column: 2, scope: !11888)
!11888 = distinct !DILexicalBlock(scope: !11874, file: !11854, line: 55, column: 2)
!11889 = !DILocation(line: 50, column: 7, scope: !11890)
!11890 = distinct !DILexicalBlock(scope: !11891, file: !11854, line: 50, column: 7)
!11891 = distinct !DILexicalBlock(scope: !11892, file: !11854, line: 49, column: 57)
!11892 = distinct !DILexicalBlock(scope: !11893, file: !11854, line: 49, column: 2)
!11893 = distinct !DILexicalBlock(scope: !11874, file: !11854, line: 49, column: 2)
!11894 = !DILocation(line: 50, column: 30, scope: !11890)
!11895 = !DILocation(line: 50, column: 39, scope: !11890)
!11896 = !DILocation(line: 50, column: 44, scope: !11890)
!11897 = !DILocation(line: 50, column: 7, scope: !11891)
!11898 = !DILocation(line: 49, column: 53, scope: !11892)
!11899 = !DILocation(line: 49, column: 33, scope: !11892)
!11900 = !DILocation(line: 49, column: 2, scope: !11893)
!11901 = distinct !{!11901, !11900, !11902}
!11902 = !DILocation(line: 53, column: 2, scope: !11893)
!11903 = !DILocation(line: 56, column: 7, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11905, file: !11854, line: 56, column: 7)
!11905 = distinct !DILexicalBlock(scope: !11906, file: !11854, line: 55, column: 57)
!11906 = distinct !DILexicalBlock(scope: !11888, file: !11854, line: 55, column: 2)
!11907 = !DILocation(line: 56, column: 30, scope: !11904)
!11908 = !DILocation(line: 56, column: 52, scope: !11904)
!11909 = !DILocation(line: 56, column: 34, scope: !11904)
!11910 = !DILocation(line: 56, column: 58, scope: !11904)
!11911 = !DILocation(line: 56, column: 7, scope: !11905)
!11912 = !DILocation(line: 55, column: 53, scope: !11906)
!11913 = !DILocation(line: 55, column: 33, scope: !11906)
!11914 = distinct !{!11914, !11887, !11915}
!11915 = !DILocation(line: 59, column: 2, scope: !11888)
!11916 = !DILocation(line: 62, column: 1, scope: !11874)
!11917 = distinct !DISubprogram(name: "z_device_is_ready", scope: !11854, file: !11854, line: 93, type: !11918, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !11920)
!11918 = !DISubroutineType(types: !11919)
!11919 = !{!136, !11857}
!11920 = !{!11921}
!11921 = !DILocalVariable(name: "dev", arg: 1, scope: !11917, file: !11854, line: 93, type: !11857)
!11922 = !DILocation(line: 0, scope: !11917)
!11923 = !DILocation(line: 99, column: 10, scope: !11924)
!11924 = distinct !DILexicalBlock(scope: !11917, file: !11854, line: 99, column: 6)
!11925 = !DILocation(line: 99, column: 6, scope: !11917)
!11926 = !DILocation(line: 103, column: 14, scope: !11917)
!11927 = !DILocation(line: 103, column: 21, scope: !11917)
!11928 = !DILocation(line: 103, column: 33, scope: !11917)
!11929 = !DILocation(line: 103, column: 49, scope: !11917)
!11930 = !DILocation(line: 103, column: 58, scope: !11917)
!11931 = !DILocation(line: 104, column: 1, scope: !11917)
!11932 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !11854, file: !11854, line: 87, type: !11933, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !11936)
!11933 = !DISubroutineType(types: !11934)
!11934 = !{!252, !11935}
!11935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11857, size: 32)
!11936 = !{!11937}
!11937 = !DILocalVariable(name: "devices", arg: 1, scope: !11932, file: !11854, line: 87, type: !11935)
!11938 = !DILocation(line: 0, scope: !11932)
!11939 = !DILocation(line: 89, column: 11, scope: !11932)
!11940 = !DILocation(line: 90, column: 2, scope: !11932)
!11941 = distinct !DISubprogram(name: "device_required_foreach", scope: !11854, file: !11854, line: 125, type: !11942, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !11948)
!11942 = !DISubroutineType(types: !11943)
!11943 = !{!107, !11857, !11944, !102}
!11944 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !120, line: 471, baseType: !11945)
!11945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11946, size: 32)
!11946 = !DISubroutineType(types: !11947)
!11947 = !{!107, !11857, !102}
!11948 = !{!11949, !11950, !11951, !11952, !11953}
!11949 = !DILocalVariable(name: "dev", arg: 1, scope: !11941, file: !11854, line: 125, type: !11857)
!11950 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11941, file: !11854, line: 126, type: !11944)
!11951 = !DILocalVariable(name: "context", arg: 3, scope: !11941, file: !11854, line: 127, type: !102)
!11952 = !DILocalVariable(name: "handle_count", scope: !11941, file: !11854, line: 129, type: !252)
!11953 = !DILocalVariable(name: "handles", scope: !11941, file: !11854, line: 130, type: !139)
!11954 = !DILocation(line: 0, scope: !11941)
!11955 = !DILocation(line: 129, column: 2, scope: !11941)
!11956 = !DILocation(line: 129, column: 9, scope: !11941)
!11957 = !DILocation(line: 130, column: 35, scope: !11941)
!11958 = !DILocation(line: 132, column: 33, scope: !11941)
!11959 = !DILocation(line: 132, column: 9, scope: !11941)
!11960 = !DILocation(line: 133, column: 1, scope: !11941)
!11961 = !DILocation(line: 132, column: 2, scope: !11941)
!11962 = distinct !DISubprogram(name: "device_required_handles_get", scope: !120, file: !120, line: 493, type: !11963, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !11965)
!11963 = !DISubroutineType(types: !11964)
!11964 = !{!139, !11857, !2495}
!11965 = !{!11966, !11967, !11968, !11969}
!11966 = !DILocalVariable(name: "dev", arg: 1, scope: !11962, file: !120, line: 493, type: !11857)
!11967 = !DILocalVariable(name: "count", arg: 2, scope: !11962, file: !120, line: 493, type: !2495)
!11968 = !DILocalVariable(name: "rv", scope: !11962, file: !120, line: 495, type: !139)
!11969 = !DILocalVariable(name: "i", scope: !11970, file: !120, line: 498, type: !252)
!11970 = distinct !DILexicalBlock(scope: !11971, file: !120, line: 497, column: 18)
!11971 = distinct !DILexicalBlock(scope: !11962, file: !120, line: 497, column: 6)
!11972 = !DILocation(line: 0, scope: !11962)
!11973 = !DILocation(line: 495, column: 35, scope: !11962)
!11974 = !DILocation(line: 497, column: 9, scope: !11971)
!11975 = !DILocation(line: 497, column: 6, scope: !11962)
!11976 = !DILocation(line: 0, scope: !11970)
!11977 = !DILocation(line: 500, column: 11, scope: !11970)
!11978 = !DILocation(line: 500, column: 40, scope: !11970)
!11979 = !DILocation(line: 502, column: 4, scope: !11980)
!11980 = distinct !DILexicalBlock(scope: !11970, file: !120, line: 501, column: 40)
!11981 = distinct !{!11981, !11982, !11983}
!11982 = !DILocation(line: 500, column: 3, scope: !11970)
!11983 = !DILocation(line: 503, column: 3, scope: !11970)
!11984 = !DILocation(line: 504, column: 10, scope: !11970)
!11985 = !DILocation(line: 505, column: 2, scope: !11970)
!11986 = !DILocation(line: 507, column: 2, scope: !11962)
!11987 = distinct !DISubprogram(name: "device_visitor", scope: !11854, file: !11854, line: 106, type: !11988, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !11990)
!11988 = !DISubroutineType(types: !11989)
!11989 = !{!107, !139, !252, !11944, !102}
!11990 = !{!11991, !11992, !11993, !11994, !11995, !11997, !12000, !12001}
!11991 = !DILocalVariable(name: "handles", arg: 1, scope: !11987, file: !11854, line: 106, type: !139)
!11992 = !DILocalVariable(name: "handle_count", arg: 2, scope: !11987, file: !11854, line: 107, type: !252)
!11993 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !11987, file: !11854, line: 108, type: !11944)
!11994 = !DILocalVariable(name: "context", arg: 4, scope: !11987, file: !11854, line: 109, type: !102)
!11995 = !DILocalVariable(name: "i", scope: !11996, file: !11854, line: 112, type: !252)
!11996 = distinct !DILexicalBlock(scope: !11987, file: !11854, line: 112, column: 2)
!11997 = !DILocalVariable(name: "dh", scope: !11998, file: !11854, line: 113, type: !141)
!11998 = distinct !DILexicalBlock(scope: !11999, file: !11854, line: 112, column: 44)
!11999 = distinct !DILexicalBlock(scope: !11996, file: !11854, line: 112, column: 2)
!12000 = !DILocalVariable(name: "rdev", scope: !11998, file: !11854, line: 114, type: !11857)
!12001 = !DILocalVariable(name: "rc", scope: !11998, file: !11854, line: 115, type: !107)
!12002 = !DILocation(line: 0, scope: !11987)
!12003 = !DILocation(line: 0, scope: !11996)
!12004 = !DILocation(line: 112, column: 23, scope: !11999)
!12005 = !DILocation(line: 112, column: 2, scope: !11996)
!12006 = distinct !{!12006, !12005, !12007}
!12007 = !DILocation(line: 120, column: 2, scope: !11996)
!12008 = !DILocation(line: 113, column: 24, scope: !11998)
!12009 = !DILocation(line: 0, scope: !11998)
!12010 = !DILocation(line: 114, column: 31, scope: !11998)
!12011 = !DILocation(line: 115, column: 12, scope: !11998)
!12012 = !DILocation(line: 117, column: 10, scope: !12013)
!12013 = distinct !DILexicalBlock(scope: !11998, file: !11854, line: 117, column: 7)
!12014 = !DILocation(line: 112, column: 39, scope: !11999)
!12015 = !DILocation(line: 123, column: 1, scope: !11987)
!12016 = distinct !DISubprogram(name: "device_from_handle", scope: !120, file: !120, line: 439, type: !12017, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !12019)
!12017 = !DISubroutineType(types: !12018)
!12018 = !{!11857, !141}
!12019 = !{!12020, !12021, !12022}
!12020 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12016, file: !120, line: 439, type: !141)
!12021 = !DILocalVariable(name: "dev", scope: !12016, file: !120, line: 443, type: !11857)
!12022 = !DILocalVariable(name: "numdev", scope: !12016, file: !120, line: 444, type: !252)
!12023 = !DILocation(line: 0, scope: !12016)
!12024 = !DILocation(line: 446, column: 7, scope: !12025)
!12025 = distinct !DILexicalBlock(scope: !12016, file: !120, line: 446, column: 6)
!12026 = !DILocation(line: 446, column: 18, scope: !12025)
!12027 = !DILocation(line: 446, column: 23, scope: !12025)
!12028 = !DILocation(line: 450, column: 2, scope: !12016)
!12029 = distinct !DISubprogram(name: "device_supported_foreach", scope: !11854, file: !11854, line: 135, type: !11942, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !12030)
!12030 = !{!12031, !12032, !12033, !12034, !12035}
!12031 = !DILocalVariable(name: "dev", arg: 1, scope: !12029, file: !11854, line: 135, type: !11857)
!12032 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12029, file: !11854, line: 136, type: !11944)
!12033 = !DILocalVariable(name: "context", arg: 3, scope: !12029, file: !11854, line: 137, type: !102)
!12034 = !DILocalVariable(name: "handle_count", scope: !12029, file: !11854, line: 139, type: !252)
!12035 = !DILocalVariable(name: "handles", scope: !12029, file: !11854, line: 140, type: !139)
!12036 = !DILocation(line: 0, scope: !12029)
!12037 = !DILocation(line: 139, column: 2, scope: !12029)
!12038 = !DILocation(line: 139, column: 9, scope: !12029)
!12039 = !DILocation(line: 140, column: 35, scope: !12029)
!12040 = !DILocation(line: 142, column: 33, scope: !12029)
!12041 = !DILocation(line: 142, column: 9, scope: !12029)
!12042 = !DILocation(line: 143, column: 1, scope: !12029)
!12043 = !DILocation(line: 142, column: 2, scope: !12029)
!12044 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !120, file: !120, line: 573, type: !11963, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !12045)
!12045 = !{!12046, !12047, !12048, !12049, !12050}
!12046 = !DILocalVariable(name: "dev", arg: 1, scope: !12044, file: !120, line: 573, type: !11857)
!12047 = !DILocalVariable(name: "count", arg: 2, scope: !12044, file: !120, line: 573, type: !2495)
!12048 = !DILocalVariable(name: "rv", scope: !12044, file: !120, line: 575, type: !139)
!12049 = !DILocalVariable(name: "region", scope: !12044, file: !120, line: 576, type: !252)
!12050 = !DILocalVariable(name: "i", scope: !12044, file: !120, line: 577, type: !252)
!12051 = !DILocation(line: 0, scope: !12044)
!12052 = !DILocation(line: 575, column: 35, scope: !12044)
!12053 = !DILocation(line: 579, column: 9, scope: !12054)
!12054 = distinct !DILexicalBlock(scope: !12044, file: !120, line: 579, column: 6)
!12055 = !DILocation(line: 579, column: 6, scope: !12044)
!12056 = !DILocation(line: 582, column: 8, scope: !12057)
!12057 = distinct !DILexicalBlock(scope: !12058, file: !120, line: 582, column: 8)
!12058 = distinct !DILexicalBlock(scope: !12059, file: !120, line: 581, column: 23)
!12059 = distinct !DILexicalBlock(scope: !12054, file: !120, line: 579, column: 18)
!12060 = !DILocation(line: 582, column: 12, scope: !12057)
!12061 = !DILocation(line: 585, column: 6, scope: !12058)
!12062 = !DILocation(line: 0, scope: !12059)
!12063 = !DILocation(line: 581, column: 17, scope: !12059)
!12064 = !DILocation(line: 581, column: 3, scope: !12059)
!12065 = !DILocation(line: 588, column: 10, scope: !12059)
!12066 = !DILocation(line: 588, column: 16, scope: !12059)
!12067 = !DILocation(line: 589, column: 4, scope: !12068)
!12068 = distinct !DILexicalBlock(scope: !12059, file: !120, line: 588, column: 39)
!12069 = !DILocation(line: 588, column: 3, scope: !12059)
!12070 = distinct !{!12070, !12069, !12071}
!12071 = !DILocation(line: 590, column: 3, scope: !12059)
!12072 = !DILocation(line: 591, column: 10, scope: !12059)
!12073 = !DILocation(line: 592, column: 2, scope: !12059)
!12074 = !DILocation(line: 575, column: 25, scope: !12044)
!12075 = !DILocation(line: 594, column: 2, scope: !12044)
!12076 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1854, file: !1854, line: 49, type: !12077, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1851, retainedNodes: !250)
!12077 = !DISubroutineType(types: !12078)
!12078 = !{!2488}
!12079 = !DILocation(line: 51, column: 10, scope: !12076)
!12080 = !DILocation(line: 51, column: 20, scope: !12076)
!12081 = !DILocation(line: 51, column: 2, scope: !12076)
!12082 = distinct !DISubprogram(name: "coredump", scope: !3000, file: !3000, line: 209, type: !12083, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2996, retainedNodes: !12229)
!12083 = !DISubroutineType(types: !12084)
!12084 = !{null, !32, !12085, !12129}
!12085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12086, size: 32)
!12086 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12087)
!12087 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2620, line: 141, baseType: !12088)
!12088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2620, line: 97, size: 256, elements: !12089)
!12089 = !{!12090}
!12090 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12088, file: !2620, line: 107, baseType: !12091, size: 256)
!12091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2620, line: 98, size: 256, elements: !12092)
!12092 = !{!12093, !12098, !12103, !12108, !12113, !12118, !12123, !12128}
!12093 = !DIDerivedType(tag: DW_TAG_member, scope: !12091, file: !2620, line: 99, baseType: !12094, size: 32)
!12094 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12091, file: !2620, line: 99, size: 32, elements: !12095)
!12095 = !{!12096, !12097}
!12096 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12094, file: !2620, line: 99, baseType: !162, size: 32)
!12097 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12094, file: !2620, line: 99, baseType: !162, size: 32)
!12098 = !DIDerivedType(tag: DW_TAG_member, scope: !12091, file: !2620, line: 100, baseType: !12099, size: 32, offset: 32)
!12099 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12091, file: !2620, line: 100, size: 32, elements: !12100)
!12100 = !{!12101, !12102}
!12101 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12099, file: !2620, line: 100, baseType: !162, size: 32)
!12102 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12099, file: !2620, line: 100, baseType: !162, size: 32)
!12103 = !DIDerivedType(tag: DW_TAG_member, scope: !12091, file: !2620, line: 101, baseType: !12104, size: 32, offset: 64)
!12104 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12091, file: !2620, line: 101, size: 32, elements: !12105)
!12105 = !{!12106, !12107}
!12106 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12104, file: !2620, line: 101, baseType: !162, size: 32)
!12107 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12104, file: !2620, line: 101, baseType: !162, size: 32)
!12108 = !DIDerivedType(tag: DW_TAG_member, scope: !12091, file: !2620, line: 102, baseType: !12109, size: 32, offset: 96)
!12109 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12091, file: !2620, line: 102, size: 32, elements: !12110)
!12110 = !{!12111, !12112}
!12111 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12109, file: !2620, line: 102, baseType: !162, size: 32)
!12112 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12109, file: !2620, line: 102, baseType: !162, size: 32)
!12113 = !DIDerivedType(tag: DW_TAG_member, scope: !12091, file: !2620, line: 103, baseType: !12114, size: 32, offset: 128)
!12114 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12091, file: !2620, line: 103, size: 32, elements: !12115)
!12115 = !{!12116, !12117}
!12116 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12114, file: !2620, line: 103, baseType: !162, size: 32)
!12117 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12114, file: !2620, line: 103, baseType: !162, size: 32)
!12118 = !DIDerivedType(tag: DW_TAG_member, scope: !12091, file: !2620, line: 104, baseType: !12119, size: 32, offset: 160)
!12119 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12091, file: !2620, line: 104, size: 32, elements: !12120)
!12120 = !{!12121, !12122}
!12121 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12119, file: !2620, line: 104, baseType: !162, size: 32)
!12122 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12119, file: !2620, line: 104, baseType: !162, size: 32)
!12123 = !DIDerivedType(tag: DW_TAG_member, scope: !12091, file: !2620, line: 105, baseType: !12124, size: 32, offset: 192)
!12124 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12091, file: !2620, line: 105, size: 32, elements: !12125)
!12125 = !{!12126, !12127}
!12126 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12124, file: !2620, line: 105, baseType: !162, size: 32)
!12127 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12124, file: !2620, line: 105, baseType: !162, size: 32)
!12128 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12091, file: !2620, line: 106, baseType: !162, size: 32, offset: 224)
!12129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12130, size: 32)
!12130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !12131)
!12131 = !{!12132, !12190, !12202, !12203, !12204, !12205, !12211, !12224}
!12132 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12130, file: !359, line: 247, baseType: !12133, size: 384)
!12133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !12134)
!12134 = !{!12135, !12159, !12166, !12167, !12168, !12177, !12178, !12179}
!12135 = !DIDerivedType(tag: DW_TAG_member, scope: !12133, file: !359, line: 60, baseType: !12136, size: 64)
!12136 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12133, file: !359, line: 60, size: 64, elements: !12137)
!12137 = !{!12138, !12153}
!12138 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12136, file: !359, line: 61, baseType: !12139, size: 64)
!12139 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !12140)
!12140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !12141)
!12141 = !{!12142, !12148}
!12142 = !DIDerivedType(tag: DW_TAG_member, scope: !12140, file: !233, line: 38, baseType: !12143, size: 32)
!12143 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12140, file: !233, line: 38, size: 32, elements: !12144)
!12144 = !{!12145, !12147}
!12145 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12143, file: !233, line: 39, baseType: !12146, size: 32)
!12146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12140, size: 32)
!12147 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12143, file: !233, line: 40, baseType: !12146, size: 32)
!12148 = !DIDerivedType(tag: DW_TAG_member, scope: !12140, file: !233, line: 42, baseType: !12149, size: 32, offset: 32)
!12149 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12140, file: !233, line: 42, size: 32, elements: !12150)
!12150 = !{!12151, !12152}
!12151 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12149, file: !233, line: 43, baseType: !12146, size: 32)
!12152 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12149, file: !233, line: 44, baseType: !12146, size: 32)
!12153 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12136, file: !359, line: 62, baseType: !12154, size: 64)
!12154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !12155)
!12155 = !{!12156}
!12156 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12154, file: !384, line: 50, baseType: !12157, size: 64)
!12157 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12158, size: 64, elements: !389)
!12158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12154, size: 32)
!12159 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12133, file: !359, line: 68, baseType: !12160, size: 32, offset: 64)
!12160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12161, size: 32)
!12161 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !12162)
!12162 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !12163)
!12163 = !{!12164}
!12164 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12162, file: !228, line: 232, baseType: !12165, size: 64)
!12165 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !12140)
!12166 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12133, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!12167 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12133, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!12168 = !DIDerivedType(tag: DW_TAG_member, scope: !12133, file: !359, line: 90, baseType: !12169, size: 16, offset: 112)
!12169 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12133, file: !359, line: 90, size: 16, elements: !12170)
!12170 = !{!12171, !12176}
!12171 = !DIDerivedType(tag: DW_TAG_member, scope: !12169, file: !359, line: 91, baseType: !12172, size: 16)
!12172 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12169, file: !359, line: 91, size: 16, elements: !12173)
!12173 = !{!12174, !12175}
!12174 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12172, file: !359, line: 96, baseType: !407, size: 8)
!12175 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12172, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!12176 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12169, file: !359, line: 100, baseType: !411, size: 16)
!12177 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12133, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!12178 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12133, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!12179 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12133, file: !359, line: 131, baseType: !12180, size: 192, offset: 192)
!12180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !12181)
!12181 = !{!12182, !12183, !12189}
!12182 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12180, file: !228, line: 245, baseType: !12139, size: 64)
!12183 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12180, file: !228, line: 246, baseType: !12184, size: 32, offset: 64)
!12184 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !12185)
!12185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12186, size: 32)
!12186 = !DISubroutineType(types: !12187)
!12187 = !{null, !12188}
!12188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12180, size: 32)
!12189 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12180, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!12190 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12130, file: !359, line: 250, baseType: !12191, size: 288, offset: 384)
!12191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !12192)
!12192 = !{!12193, !12194, !12195, !12196, !12197, !12198, !12199, !12200, !12201}
!12193 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12191, file: !428, line: 26, baseType: !162, size: 32)
!12194 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12191, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!12195 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12191, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!12196 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12191, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!12197 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12191, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!12198 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12191, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!12199 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12191, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!12200 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12191, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!12201 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12191, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!12202 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12130, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!12203 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12130, file: !359, line: 256, baseType: !12161, size: 64, offset: 704)
!12204 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12130, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!12205 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12130, file: !359, line: 300, baseType: !12206, size: 96, offset: 800)
!12206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !12207)
!12207 = !{!12208, !12209, !12210}
!12208 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12206, file: !359, line: 153, baseType: !22, size: 32)
!12209 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12206, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!12210 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12206, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!12211 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12130, file: !359, line: 325, baseType: !12212, size: 32, offset: 896)
!12212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12213, size: 32)
!12213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !12214)
!12214 = !{!12215, !12221, !12222}
!12215 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12213, file: !224, line: 5074, baseType: !12216, size: 96)
!12216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !12217)
!12217 = !{!12218, !12219, !12220}
!12218 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12216, file: !454, line: 57, baseType: !457, size: 32)
!12219 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12216, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!12220 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12216, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!12221 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12213, file: !224, line: 5075, baseType: !12161, size: 64, offset: 96)
!12222 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12213, file: !224, line: 5076, baseType: !12223, offset: 160)
!12223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!12224 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12130, file: !359, line: 343, baseType: !12225, size: 64, offset: 928)
!12225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !12226)
!12226 = !{!12227, !12228}
!12227 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12225, file: !428, line: 63, baseType: !162, size: 32)
!12228 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12225, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!12229 = !{!12230, !12231, !12232}
!12230 = !DILocalVariable(name: "reason", arg: 1, scope: !12082, file: !3000, line: 209, type: !32)
!12231 = !DILocalVariable(name: "esf", arg: 2, scope: !12082, file: !3000, line: 209, type: !12085)
!12232 = !DILocalVariable(name: "thread", arg: 3, scope: !12082, file: !3000, line: 210, type: !12129)
!12233 = !DILocation(line: 0, scope: !12082)
!12234 = !DILocation(line: 212, column: 1, scope: !12082)
!12235 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3000, file: !3000, line: 214, type: !12236, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2996, retainedNodes: !12238)
!12236 = !DISubroutineType(types: !12237)
!12237 = !{null, !22, !22}
!12238 = !{!12239, !12240}
!12239 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12235, file: !3000, line: 214, type: !22)
!12240 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12235, file: !3000, line: 214, type: !22)
!12241 = !DILocation(line: 0, scope: !12235)
!12242 = !DILocation(line: 216, column: 1, scope: !12235)
!12243 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3000, file: !3000, line: 218, type: !12244, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2996, retainedNodes: !12246)
!12244 = !DISubroutineType(types: !12245)
!12245 = !{null, !182, !252}
!12246 = !{!12247, !12248}
!12247 = !DILocalVariable(name: "buf", arg: 1, scope: !12243, file: !3000, line: 218, type: !182)
!12248 = !DILocalVariable(name: "buflen", arg: 2, scope: !12243, file: !3000, line: 218, type: !252)
!12249 = !DILocation(line: 0, scope: !12243)
!12250 = !DILocation(line: 220, column: 1, scope: !12243)
!12251 = distinct !DISubprogram(name: "coredump_query", scope: !3000, file: !3000, line: 222, type: !12252, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2996, retainedNodes: !12254)
!12252 = !DISubroutineType(types: !12253)
!12253 = !{!107, !2999, !102}
!12254 = !{!12255, !12256}
!12255 = !DILocalVariable(name: "query_id", arg: 1, scope: !12251, file: !3000, line: 222, type: !2999)
!12256 = !DILocalVariable(name: "arg", arg: 2, scope: !12251, file: !3000, line: 222, type: !102)
!12257 = !DILocation(line: 0, scope: !12251)
!12258 = !DILocation(line: 224, column: 2, scope: !12251)
!12259 = distinct !DISubprogram(name: "coredump_cmd", scope: !3000, file: !3000, line: 227, type: !12260, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2996, retainedNodes: !12262)
!12260 = !DISubroutineType(types: !12261)
!12261 = !{!107, !3006, !102}
!12262 = !{!12263, !12264}
!12263 = !DILocalVariable(name: "query_id", arg: 1, scope: !12259, file: !3000, line: 227, type: !3006)
!12264 = !DILocalVariable(name: "arg", arg: 2, scope: !12259, file: !3000, line: 227, type: !102)
!12265 = !DILocation(line: 0, scope: !12259)
!12266 = !DILocation(line: 229, column: 2, scope: !12259)
!12267 = distinct !DISubprogram(name: "arch_system_halt", scope: !12268, file: !12268, line: 23, type: !5924, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2996, retainedNodes: !12269)
!12268 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12269 = !{!12270}
!12270 = !DILocalVariable(name: "reason", arg: 1, scope: !12267, file: !12268, line: 23, type: !32)
!12271 = !DILocation(line: 0, scope: !12267)
!12272 = !DILocation(line: 55, column: 2, scope: !12273, inlinedAt: !12277)
!12273 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5913, file: !5913, line: 42, type: !5914, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2996, retainedNodes: !12274)
!12274 = !{!12275, !12276}
!12275 = !DILocalVariable(name: "key", scope: !12273, file: !5913, line: 44, type: !32)
!12276 = !DILocalVariable(name: "tmp", scope: !12273, file: !5913, line: 53, type: !32)
!12277 = distinct !DILocation(line: 31, column: 8, scope: !12267)
!12278 = !{i64 2223889}
!12279 = !DILocation(line: 0, scope: !12273, inlinedAt: !12277)
!12280 = !DILocation(line: 32, column: 2, scope: !12267)
!12281 = !DILocation(line: 32, column: 2, scope: !12282)
!12282 = distinct !DILexicalBlock(scope: !12283, file: !12268, line: 32, column: 2)
!12283 = distinct !DILexicalBlock(scope: !12267, file: !12268, line: 32, column: 2)
!12284 = distinct !{!12284, !12285, !12286}
!12285 = !DILocation(line: 32, column: 2, scope: !12283)
!12286 = !DILocation(line: 34, column: 2, scope: !12283)
!12287 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12268, file: !12268, line: 39, type: !12288, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2996, retainedNodes: !12290)
!12288 = !DISubroutineType(types: !12289)
!12289 = !{null, !32, !12085}
!12290 = !{!12291, !12292}
!12291 = !DILocalVariable(name: "reason", arg: 1, scope: !12287, file: !12268, line: 39, type: !32)
!12292 = !DILocalVariable(name: "esf", arg: 2, scope: !12287, file: !12268, line: 40, type: !12085)
!12293 = !DILocation(line: 0, scope: !12287)
!12294 = !DILocation(line: 46, column: 2, scope: !12287)
!12295 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12268, file: !12268, line: 81, type: !5924, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2996, retainedNodes: !12296)
!12296 = !{!12297}
!12297 = !DILocalVariable(name: "reason", arg: 1, scope: !12295, file: !12268, line: 81, type: !32)
!12298 = !DILocation(line: 0, scope: !12295)
!12299 = !DILocation(line: 83, column: 2, scope: !12295)
!12300 = distinct !DISubprogram(name: "z_fatal_error", scope: !12268, file: !12268, line: 96, type: !12288, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2996, retainedNodes: !12301)
!12301 = !{!12302, !12303, !12304, !12305}
!12302 = !DILocalVariable(name: "reason", arg: 1, scope: !12300, file: !12268, line: 96, type: !32)
!12303 = !DILocalVariable(name: "esf", arg: 2, scope: !12300, file: !12268, line: 96, type: !12085)
!12304 = !DILocalVariable(name: "key", scope: !12300, file: !12268, line: 102, type: !32)
!12305 = !DILocalVariable(name: "thread", scope: !12300, file: !12268, line: 103, type: !12129)
!12306 = !DILocation(line: 0, scope: !12300)
!12307 = !DILocation(line: 55, column: 2, scope: !12273, inlinedAt: !12308)
!12308 = distinct !DILocation(line: 102, column: 21, scope: !12300)
!12309 = !DILocation(line: 0, scope: !12273, inlinedAt: !12308)
!12310 = !DILocation(line: 119, column: 11, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12300, file: !12268, line: 119, column: 6)
!12312 = !DILocation(line: 119, column: 20, scope: !12311)
!12313 = !DILocation(line: 131, column: 2, scope: !12300)
!12314 = !DILocation(line: 151, column: 7, scope: !12315)
!12315 = distinct !DILexicalBlock(scope: !12316, file: !12268, line: 146, column: 32)
!12316 = distinct !DILexicalBlock(scope: !12300, file: !12268, line: 146, column: 6)
!12317 = !DILocation(line: 151, column: 21, scope: !12318)
!12318 = distinct !DILexicalBlock(scope: !12315, file: !12268, line: 151, column: 7)
!12319 = !DILocation(line: 104, column: 4, scope: !12300)
!12320 = !DILocalVariable(name: "key", arg: 1, scope: !12321, file: !5913, line: 84, type: !32)
!12321 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5913, file: !5913, line: 84, type: !5924, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2996, retainedNodes: !12322)
!12322 = !{!12320}
!12323 = !DILocation(line: 0, scope: !12321, inlinedAt: !12324)
!12324 = distinct !DILocation(line: 186, column: 2, scope: !12300)
!12325 = !DILocation(line: 95, column: 2, scope: !12321, inlinedAt: !12324)
!12326 = !{i64 2224706}
!12327 = !DILocation(line: 189, column: 3, scope: !12328)
!12328 = distinct !DILexicalBlock(scope: !12329, file: !12268, line: 188, column: 41)
!12329 = distinct !DILexicalBlock(scope: !12300, file: !12268, line: 188, column: 6)
!12330 = !DILocation(line: 191, column: 1, scope: !12300)
!12331 = distinct !DISubprogram(name: "k_current_get", scope: !224, file: !224, line: 530, type: !12332, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2996, retainedNodes: !250)
!12332 = !DISubroutineType(types: !12333)
!12333 = !{!12334}
!12334 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !359, line: 347, baseType: !12129)
!12335 = !DILocation(line: 535, column: 9, scope: !12331)
!12336 = !DILocation(line: 535, column: 2, scope: !12331)
!12337 = distinct !DISubprogram(name: "k_thread_abort", scope: !3322, file: !3322, line: 188, type: !12338, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2996, retainedNodes: !12340)
!12338 = !DISubroutineType(types: !12339)
!12339 = !{null, !12334}
!12340 = !{!12341}
!12341 = !DILocalVariable(name: "thread", arg: 1, scope: !12337, file: !3322, line: 188, type: !12334)
!12342 = !DILocation(line: 0, scope: !12337)
!12343 = !DILocation(line: 197, column: 2, scope: !12344)
!12344 = distinct !DILexicalBlock(scope: !12337, file: !3322, line: 197, column: 2)
!12345 = !{i64 2154841651}
!12346 = !DILocation(line: 198, column: 2, scope: !12337)
!12347 = !DILocation(line: 199, column: 1, scope: !12337)
!12348 = distinct !DISubprogram(name: "z_current_get", scope: !3322, file: !3322, line: 173, type: !12332, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2996, retainedNodes: !250)
!12349 = !DILocation(line: 180, column: 2, scope: !12350)
!12350 = distinct !DILexicalBlock(scope: !12348, file: !3322, line: 180, column: 2)
!12351 = !{i64 2154841583}
!12352 = !DILocation(line: 181, column: 9, scope: !12348)
!12353 = !DILocation(line: 181, column: 2, scope: !12348)
!12354 = distinct !DISubprogram(name: "z_early_memset", scope: !1861, file: !1861, line: 108, type: !12355, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1857, retainedNodes: !12357)
!12355 = !DISubroutineType(types: !12356)
!12356 = !{null, !102, !107, !252}
!12357 = !{!12358, !12359, !12360}
!12358 = !DILocalVariable(name: "dst", arg: 1, scope: !12354, file: !1861, line: 108, type: !102)
!12359 = !DILocalVariable(name: "c", arg: 2, scope: !12354, file: !1861, line: 108, type: !107)
!12360 = !DILocalVariable(name: "n", arg: 3, scope: !12354, file: !1861, line: 108, type: !252)
!12361 = !DILocation(line: 0, scope: !12354)
!12362 = !DILocation(line: 110, column: 9, scope: !12354)
!12363 = !DILocation(line: 111, column: 1, scope: !12354)
!12364 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1861, file: !1861, line: 121, type: !12365, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1857, retainedNodes: !12367)
!12365 = !DISubroutineType(types: !12366)
!12366 = !{null, !102, !13, !252}
!12367 = !{!12368, !12369, !12370}
!12368 = !DILocalVariable(name: "dst", arg: 1, scope: !12364, file: !1861, line: 121, type: !102)
!12369 = !DILocalVariable(name: "src", arg: 2, scope: !12364, file: !1861, line: 121, type: !13)
!12370 = !DILocalVariable(name: "n", arg: 3, scope: !12364, file: !1861, line: 121, type: !252)
!12371 = !DILocation(line: 0, scope: !12364)
!12372 = !DILocation(line: 123, column: 9, scope: !12364)
!12373 = !DILocation(line: 124, column: 1, scope: !12364)
!12374 = distinct !DISubprogram(name: "z_bss_zero", scope: !1861, file: !1861, line: 132, type: !3137, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1857, retainedNodes: !250)
!12375 = !DILocation(line: 143, column: 2, scope: !12374)
!12376 = !DILocation(line: 145, column: 2, scope: !12374)
!12377 = !DILocation(line: 168, column: 1, scope: !12374)
!12378 = distinct !DISubprogram(name: "z_init_cpu", scope: !1861, file: !1861, line: 372, type: !7731, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1857, retainedNodes: !12379)
!12379 = !{!12380}
!12380 = !DILocalVariable(name: "id", arg: 1, scope: !12378, file: !1861, line: 372, type: !107)
!12381 = !DILocation(line: 0, scope: !12378)
!12382 = !DILocation(line: 374, column: 2, scope: !12378)
!12383 = !DILocation(line: 375, column: 34, scope: !12378)
!12384 = !DILocation(line: 375, column: 19, scope: !12378)
!12385 = !DILocation(line: 375, column: 31, scope: !12378)
!12386 = !DILocation(line: 376, column: 24, scope: !12378)
!12387 = !DILocation(line: 376, column: 19, scope: !12378)
!12388 = !DILocation(line: 376, column: 22, scope: !12378)
!12389 = !DILocation(line: 378, column: 26, scope: !12378)
!12390 = !DILocation(line: 378, column: 4, scope: !12378)
!12391 = !DILocation(line: 378, column: 50, scope: !12378)
!12392 = !DILocation(line: 377, column: 19, scope: !12378)
!12393 = !DILocation(line: 377, column: 29, scope: !12378)
!12394 = !DILocation(line: 384, column: 1, scope: !12378)
!12395 = distinct !DISubprogram(name: "init_idle_thread", scope: !1861, file: !1861, line: 343, type: !7731, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1857, retainedNodes: !12396)
!12396 = !{!12397, !12398, !12399, !12402}
!12397 = !DILocalVariable(name: "i", arg: 1, scope: !12395, file: !1861, line: 343, type: !107)
!12398 = !DILocalVariable(name: "thread", scope: !12395, file: !1861, line: 345, type: !1953)
!12399 = !DILocalVariable(name: "stack", scope: !12395, file: !1861, line: 346, type: !12400)
!12400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12401, size: 32)
!12401 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3678, line: 44, baseType: !2067)
!12402 = !DILocalVariable(name: "tname", scope: !12395, file: !1861, line: 358, type: !256)
!12403 = !DILocation(line: 0, scope: !12395)
!12404 = !DILocation(line: 345, column: 29, scope: !12395)
!12405 = !DILocation(line: 346, column: 28, scope: !12395)
!12406 = !DILocation(line: 362, column: 37, scope: !12395)
!12407 = !DILocation(line: 362, column: 36, scope: !12395)
!12408 = !DILocation(line: 361, column: 2, scope: !12395)
!12409 = !DILocation(line: 365, column: 2, scope: !12395)
!12410 = !DILocation(line: 370, column: 1, scope: !12395)
!12411 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2068, file: !2068, line: 331, type: !12412, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1857, retainedNodes: !12414)
!12412 = !DISubroutineType(types: !12413)
!12413 = !{!256, !12400}
!12414 = !{!12415}
!12415 = !DILocalVariable(name: "sym", arg: 1, scope: !12411, file: !2068, line: 331, type: !12400)
!12416 = !DILocation(line: 0, scope: !12411)
!12417 = !DILocation(line: 333, column: 21, scope: !12411)
!12418 = !DILocation(line: 333, column: 2, scope: !12411)
!12419 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12420, file: !12420, line: 155, type: !12421, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1857, retainedNodes: !12423)
!12420 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12421 = !DISubroutineType(types: !12422)
!12422 = !{null, !1953}
!12423 = !{!12424}
!12424 = !DILocalVariable(name: "thread", arg: 1, scope: !12419, file: !12420, line: 155, type: !1953)
!12425 = !DILocation(line: 0, scope: !12419)
!12426 = !DILocation(line: 157, column: 15, scope: !12419)
!12427 = !DILocation(line: 157, column: 28, scope: !12419)
!12428 = !DILocation(line: 158, column: 1, scope: !12419)
!12429 = distinct !DISubprogram(name: "z_cstart", scope: !1861, file: !1861, line: 501, type: !3137, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1857, retainedNodes: !12430)
!12430 = !{!12431}
!12431 = !DILocalVariable(name: "dummy_thread", scope: !12429, file: !1861, line: 518, type: !1954)
!12432 = !DILocation(line: 507, column: 2, scope: !12429)
!12433 = !DILocation(line: 43, column: 14, scope: !12434, inlinedAt: !12438)
!12434 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12435, file: !12435, line: 40, type: !3137, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1857, retainedNodes: !12436)
!12435 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12436 = !{!12437}
!12437 = !DILocalVariable(name: "msp", scope: !12434, file: !12435, line: 42, type: !162)
!12438 = distinct !DILocation(line: 44, column: 2, scope: !12439, inlinedAt: !12441)
!12439 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12440, file: !12440, line: 42, type: !3137, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1857, retainedNodes: !250)
!12440 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12441 = distinct !DILocation(line: 510, column: 2, scope: !12429)
!12442 = !DILocation(line: 43, column: 3, scope: !12434, inlinedAt: !12438)
!12443 = !DILocation(line: 43, column: 60, scope: !12434, inlinedAt: !12438)
!12444 = !DILocation(line: 0, scope: !12434, inlinedAt: !12438)
!12445 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12446, file: !6087, line: 1153, type: !162)
!12446 = distinct !DISubprogram(name: "__set_MSP", scope: !6087, file: !6087, line: 1153, type: !6178, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1857, retainedNodes: !12447)
!12447 = !{!12445}
!12448 = !DILocation(line: 0, scope: !12446, inlinedAt: !12449)
!12449 = distinct !DILocation(line: 46, column: 2, scope: !12434, inlinedAt: !12438)
!12450 = !DILocation(line: 1155, column: 3, scope: !12446, inlinedAt: !12449)
!12451 = !{i64 3561007}
!12452 = !DILocation(line: 62, column: 11, scope: !12434, inlinedAt: !12438)
!12453 = !DILocation(line: 102, column: 2, scope: !12454, inlinedAt: !12455)
!12454 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !6881, file: !6881, line: 97, type: !3137, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1857, retainedNodes: !250)
!12455 = distinct !DILocation(line: 45, column: 2, scope: !12439, inlinedAt: !12441)
!12456 = !DILocation(line: 108, column: 2, scope: !12454, inlinedAt: !12455)
!12457 = !DILocation(line: 112, column: 2, scope: !12454, inlinedAt: !12455)
!12458 = !DILocation(line: 113, column: 2, scope: !12454, inlinedAt: !12455)
!12459 = !DILocation(line: 114, column: 2, scope: !12454, inlinedAt: !12455)
!12460 = !DILocation(line: 116, column: 2, scope: !12454, inlinedAt: !12455)
!12461 = !DILocation(line: 123, column: 13, scope: !12454, inlinedAt: !12455)
!12462 = !DILocation(line: 46, column: 2, scope: !12439, inlinedAt: !12441)
!12463 = !DILocation(line: 47, column: 2, scope: !12439, inlinedAt: !12441)
!12464 = !DILocation(line: 174, column: 12, scope: !12465, inlinedAt: !12466)
!12465 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !6881, file: !6881, line: 169, type: !3137, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1857, retainedNodes: !250)
!12466 = distinct !DILocation(line: 48, column: 2, scope: !12439, inlinedAt: !12441)
!12467 = !DILocation(line: 179, column: 12, scope: !12465, inlinedAt: !12466)
!12468 = !DILocation(line: 50, column: 2, scope: !12439, inlinedAt: !12441)
!12469 = !DILocation(line: 57, column: 2, scope: !12439, inlinedAt: !12441)
!12470 = !DILocation(line: 518, column: 2, scope: !12429)
!12471 = !DILocation(line: 518, column: 18, scope: !12429)
!12472 = !DILocation(line: 520, column: 2, scope: !12429)
!12473 = !DILocation(line: 523, column: 2, scope: !12429)
!12474 = !DILocation(line: 526, column: 2, scope: !12429)
!12475 = !DILocation(line: 527, column: 2, scope: !12429)
!12476 = !DILocation(line: 543, column: 24, scope: !12429)
!12477 = !DILocation(line: 543, column: 2, scope: !12429)
!12478 = !DILocation(line: 0, scope: !2087)
!12479 = !DILocation(line: 246, column: 15, scope: !2105)
!12480 = !DILocation(line: 246, column: 36, scope: !2104)
!12481 = !DILocation(line: 246, column: 2, scope: !2105)
!12482 = !DILocation(line: 247, column: 37, scope: !2103)
!12483 = !DILocation(line: 0, scope: !2103)
!12484 = !DILocation(line: 248, column: 19, scope: !2103)
!12485 = !DILocation(line: 248, column: 12, scope: !2103)
!12486 = !DILocation(line: 250, column: 11, scope: !12487)
!12487 = distinct !DILexicalBlock(scope: !2103, file: !1861, line: 250, column: 7)
!12488 = !DILocation(line: 250, column: 7, scope: !2103)
!12489 = !DILocation(line: 254, column: 11, scope: !12490)
!12490 = distinct !DILexicalBlock(scope: !12491, file: !1861, line: 254, column: 8)
!12491 = distinct !DILexicalBlock(scope: !12487, file: !1861, line: 250, column: 20)
!12492 = !DILocation(line: 254, column: 8, scope: !12491)
!12493 = !DILocation(line: 255, column: 9, scope: !12494)
!12494 = distinct !DILexicalBlock(scope: !12490, file: !1861, line: 254, column: 17)
!12495 = !DILocation(line: 258, column: 9, scope: !12494)
!12496 = !DILocation(line: 261, column: 28, scope: !12494)
!12497 = !DILocation(line: 261, column: 10, scope: !12494)
!12498 = !DILocation(line: 261, column: 17, scope: !12494)
!12499 = !DILocation(line: 261, column: 26, scope: !12494)
!12500 = !DILocation(line: 262, column: 4, scope: !12494)
!12501 = !DILocation(line: 263, column: 9, scope: !12491)
!12502 = !DILocation(line: 263, column: 16, scope: !12491)
!12503 = !DILocation(line: 263, column: 28, scope: !12491)
!12504 = !DILocation(line: 264, column: 3, scope: !12491)
!12505 = !DILocation(line: 246, column: 60, scope: !2104)
!12506 = distinct !{!12506, !12481, !12507}
!12507 = !DILocation(line: 265, column: 2, scope: !2105)
!12508 = !DILocation(line: 266, column: 1, scope: !2087)
!12509 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !497, file: !497, line: 1814, type: !6121, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1857, retainedNodes: !12510)
!12510 = !{!12511, !12512}
!12511 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12509, file: !497, line: 1814, type: !754)
!12512 = !DILocalVariable(name: "priority", arg: 2, scope: !12509, file: !497, line: 1814, type: !162)
!12513 = !DILocation(line: 0, scope: !12509)
!12514 = !DILocation(line: 1822, column: 48, scope: !12515)
!12515 = distinct !DILexicalBlock(scope: !12516, file: !497, line: 1821, column: 3)
!12516 = distinct !DILexicalBlock(scope: !12509, file: !497, line: 1816, column: 7)
!12517 = !DILocation(line: 1822, column: 32, scope: !12515)
!12518 = !DILocation(line: 1822, column: 40, scope: !12515)
!12519 = !DILocation(line: 1822, column: 5, scope: !12515)
!12520 = !DILocation(line: 1822, column: 46, scope: !12515)
!12521 = !DILocation(line: 1824, column: 1, scope: !12509)
!12522 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12440, file: !12440, line: 32, type: !3137, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!12523 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12524, file: !12524, line: 215, type: !12421, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1857, retainedNodes: !12525)
!12524 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12525 = !{!12526}
!12526 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12523, file: !12524, line: 215, type: !1953)
!12527 = !DILocation(line: 0, scope: !12523)
!12528 = !DILocation(line: 217, column: 21, scope: !12523)
!12529 = !DILocation(line: 217, column: 34, scope: !12523)
!12530 = !DILocation(line: 221, column: 21, scope: !12523)
!12531 = !DILocation(line: 221, column: 34, scope: !12523)
!12532 = !DILocation(line: 223, column: 27, scope: !12523)
!12533 = !DILocation(line: 223, column: 33, scope: !12523)
!12534 = !DILocation(line: 224, column: 27, scope: !12523)
!12535 = !DILocation(line: 224, column: 32, scope: !12523)
!12536 = !DILocation(line: 232, column: 16, scope: !12523)
!12537 = !DILocation(line: 232, column: 30, scope: !12523)
!12538 = !DILocation(line: 239, column: 24, scope: !12523)
!12539 = !DILocation(line: 240, column: 1, scope: !12523)
!12540 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1861, file: !1861, line: 399, type: !12541, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1857, retainedNodes: !12543)
!12541 = !DISubroutineType(types: !12542)
!12542 = !{!256}
!12543 = !{!12544}
!12544 = !DILocalVariable(name: "stack_ptr", scope: !12540, file: !1861, line: 401, type: !256)
!12545 = !DILocation(line: 404, column: 2, scope: !12540)
!12546 = !DILocation(line: 416, column: 24, scope: !12540)
!12547 = !DILocation(line: 418, column: 14, scope: !12540)
!12548 = !DILocation(line: 0, scope: !12540)
!12549 = !DILocation(line: 423, column: 2, scope: !12540)
!12550 = !DILocation(line: 424, column: 2, scope: !12540)
!12551 = !DILocation(line: 426, column: 2, scope: !12540)
!12552 = !DILocation(line: 428, column: 2, scope: !12540)
!12553 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1861, file: !1861, line: 432, type: !3354, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1857, retainedNodes: !12554)
!12554 = !{!12555}
!12555 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12553, file: !1861, line: 432, type: !256)
!12556 = !DILocation(line: 0, scope: !12553)
!12557 = !DILocation(line: 435, column: 2, scope: !12553)
!12558 = !DILocation(line: 445, column: 2, scope: !12553)
!12559 = distinct !DISubprogram(name: "bg_thread_main", scope: !1861, file: !1861, line: 277, type: !3680, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1857, retainedNodes: !12560)
!12560 = !{!12561, !12562, !12563}
!12561 = !DILocalVariable(name: "unused1", arg: 1, scope: !12559, file: !1861, line: 277, type: !102)
!12562 = !DILocalVariable(name: "unused2", arg: 2, scope: !12559, file: !1861, line: 277, type: !102)
!12563 = !DILocalVariable(name: "unused3", arg: 3, scope: !12559, file: !1861, line: 277, type: !102)
!12564 = !DILocation(line: 0, scope: !12559)
!12565 = !DILocation(line: 291, column: 20, scope: !12559)
!12566 = !DILocation(line: 293, column: 2, scope: !12559)
!12567 = !DILocation(line: 297, column: 2, scope: !12559)
!12568 = !DILocation(line: 305, column: 2, scope: !12559)
!12569 = !DILocation(line: 307, column: 2, scope: !12559)
!12570 = !DILocation(line: 330, column: 8, scope: !12559)
!12571 = !DILocation(line: 333, column: 34, scope: !12559)
!12572 = !DILocation(line: 339, column: 1, scope: !12559)
!12573 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2114, file: !2114, line: 45, type: !12574, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12582)
!12574 = !DISubroutineType(types: !12575)
!12575 = !{null, !12576, !102}
!12576 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !224, line: 103, baseType: !12577)
!12577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12578, size: 32)
!12578 = !DISubroutineType(types: !12579)
!12579 = !{null, !12580, !102}
!12580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12581, size: 32)
!12581 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2119)
!12582 = !{!12583, !12584}
!12583 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12573, file: !2114, line: 45, type: !12576)
!12584 = !DILocalVariable(name: "user_data", arg: 2, scope: !12573, file: !2114, line: 45, type: !102)
!12585 = !DILocation(line: 0, scope: !12573)
!12586 = !DILocation(line: 71, column: 1, scope: !12573)
!12587 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2114, file: !2114, line: 73, type: !12574, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12588)
!12588 = !{!12589, !12590}
!12589 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12587, file: !2114, line: 73, type: !12576)
!12590 = !DILocalVariable(name: "user_data", arg: 2, scope: !12587, file: !2114, line: 73, type: !102)
!12591 = !DILocation(line: 0, scope: !12587)
!12592 = !DILocation(line: 95, column: 1, scope: !12587)
!12593 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2114, file: !2114, line: 97, type: !6882, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !250)
!12594 = !DILocation(line: 1031, column: 3, scope: !12595, inlinedAt: !12598)
!12595 = distinct !DISubprogram(name: "__get_IPSR", scope: !6087, file: !6087, line: 1027, type: !6168, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12596)
!12596 = !{!12597}
!12597 = !DILocalVariable(name: "result", scope: !12595, file: !6087, line: 1029, type: !162)
!12598 = distinct !DILocation(line: 48, column: 10, scope: !12599, inlinedAt: !12600)
!12599 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6881, file: !6881, line: 46, type: !6882, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !250)
!12600 = distinct !DILocation(line: 99, column: 9, scope: !12593)
!12601 = !{i64 3566658}
!12602 = !DILocation(line: 0, scope: !12595, inlinedAt: !12598)
!12603 = !DILocation(line: 48, column: 9, scope: !12599, inlinedAt: !12600)
!12604 = !DILocation(line: 99, column: 2, scope: !12593)
!12605 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2114, file: !2114, line: 106, type: !3137, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !250)
!12606 = !DILocation(line: 108, column: 2, scope: !12605)
!12607 = !DILocation(line: 108, column: 17, scope: !12605)
!12608 = !DILocation(line: 108, column: 30, scope: !12605)
!12609 = !DILocation(line: 109, column: 1, scope: !12605)
!12610 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2114, file: !2114, line: 116, type: !3137, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !250)
!12611 = !DILocation(line: 118, column: 2, scope: !12610)
!12612 = !DILocation(line: 118, column: 17, scope: !12610)
!12613 = !DILocation(line: 118, column: 30, scope: !12610)
!12614 = !DILocation(line: 119, column: 1, scope: !12610)
!12615 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2114, file: !2114, line: 126, type: !6882, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !250)
!12616 = !DILocation(line: 128, column: 10, scope: !12615)
!12617 = !DILocation(line: 128, column: 25, scope: !12615)
!12618 = !DILocation(line: 128, column: 38, scope: !12615)
!12619 = !DILocation(line: 128, column: 53, scope: !12615)
!12620 = !DILocation(line: 128, column: 2, scope: !12615)
!12621 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2114, file: !2114, line: 187, type: !12622, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12624)
!12622 = !DISubroutineType(types: !12623)
!12623 = !{!107, !2118, !123}
!12624 = !{!12625, !12626}
!12625 = !DILocalVariable(name: "thread", arg: 1, scope: !12621, file: !2114, line: 187, type: !2118)
!12626 = !DILocalVariable(name: "value", arg: 2, scope: !12621, file: !2114, line: 187, type: !123)
!12627 = !DILocation(line: 0, scope: !12621)
!12628 = !DILocation(line: 206, column: 2, scope: !12621)
!12629 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2114, file: !2114, line: 238, type: !12630, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12632)
!12630 = !DISubroutineType(types: !12631)
!12631 = !{!123, !2118}
!12632 = !{!12633}
!12633 = !DILocalVariable(name: "thread", arg: 1, scope: !12629, file: !2114, line: 238, type: !2118)
!12634 = !DILocation(line: 0, scope: !12629)
!12635 = !DILocation(line: 244, column: 2, scope: !12629)
!12636 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2114, file: !2114, line: 248, type: !12637, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12639)
!12637 = !DISubroutineType(types: !12638)
!12638 = !{!107, !2117, !256, !252}
!12639 = !{!12640, !12641, !12642}
!12640 = !DILocalVariable(name: "thread", arg: 1, scope: !12636, file: !2114, line: 248, type: !2117)
!12641 = !DILocalVariable(name: "buf", arg: 2, scope: !12636, file: !2114, line: 248, type: !256)
!12642 = !DILocalVariable(name: "size", arg: 3, scope: !12636, file: !2114, line: 248, type: !252)
!12643 = !DILocation(line: 0, scope: !12636)
!12644 = !DILocation(line: 257, column: 2, scope: !12636)
!12645 = !DILocation(line: 0, scope: !2113)
!12646 = !DILocation(line: 281, column: 11, scope: !12647)
!12647 = distinct !DILexicalBlock(scope: !2113, file: !2114, line: 281, column: 6)
!12648 = !DILocation(line: 281, column: 20, scope: !12647)
!12649 = !DILocation(line: 275, column: 45, scope: !2113)
!12650 = !DILocation(line: 285, column: 10, scope: !2113)
!12651 = !DILocation(line: 0, scope: !2234)
!12652 = !DILocation(line: 293, column: 39, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !2234, file: !2114, line: 293, column: 2)
!12654 = !DILocation(line: 293, column: 2, scope: !2234)
!12655 = !DILocation(line: 273, column: 14, scope: !2113)
!12656 = !DILocation(line: 309, column: 2, scope: !2113)
!12657 = !DILocation(line: 309, column: 11, scope: !2113)
!12658 = !DILocation(line: 311, column: 2, scope: !2113)
!12659 = !DILocation(line: 293, column: 26, scope: !12653)
!12660 = !DILocation(line: 294, column: 9, scope: !12661)
!12661 = distinct !DILexicalBlock(scope: !12653, file: !2114, line: 293, column: 54)
!12662 = !DILocation(line: 295, column: 21, scope: !12663)
!12663 = distinct !DILexicalBlock(scope: !12661, file: !2114, line: 295, column: 7)
!12664 = !DILocation(line: 295, column: 28, scope: !12663)
!12665 = !DILocation(line: 295, column: 7, scope: !12661)
!12666 = !DILocation(line: 299, column: 25, scope: !12661)
!12667 = !DILocation(line: 299, column: 41, scope: !12661)
!12668 = !DILocation(line: 300, column: 7, scope: !12661)
!12669 = !DILocation(line: 300, column: 26, scope: !12661)
!12670 = !DILocation(line: 299, column: 10, scope: !12661)
!12671 = !DILocation(line: 299, column: 7, scope: !12661)
!12672 = !DILocation(line: 302, column: 16, scope: !12661)
!12673 = !DILocation(line: 304, column: 20, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12661, file: !2114, line: 304, column: 7)
!12675 = !DILocation(line: 304, column: 7, scope: !12661)
!12676 = !DILocation(line: 305, column: 26, scope: !12677)
!12677 = distinct !DILexicalBlock(scope: !12674, file: !2114, line: 304, column: 26)
!12678 = !DILocation(line: 305, column: 42, scope: !12677)
!12679 = !DILocation(line: 305, column: 11, scope: !12677)
!12680 = !DILocation(line: 305, column: 8, scope: !12677)
!12681 = !DILocation(line: 306, column: 3, scope: !12677)
!12682 = !DILocation(line: 293, column: 50, scope: !12653)
!12683 = !DILocation(line: 312, column: 1, scope: !2113)
!12684 = distinct !DISubprogram(name: "copy_bytes", scope: !2114, file: !2114, line: 261, type: !12685, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12687)
!12685 = !DISubroutineType(types: !12686)
!12686 = !{!252, !256, !252, !123, !252}
!12687 = !{!12688, !12689, !12690, !12691, !12692}
!12688 = !DILocalVariable(name: "dest", arg: 1, scope: !12684, file: !2114, line: 261, type: !256)
!12689 = !DILocalVariable(name: "dest_size", arg: 2, scope: !12684, file: !2114, line: 261, type: !252)
!12690 = !DILocalVariable(name: "src", arg: 3, scope: !12684, file: !2114, line: 261, type: !123)
!12691 = !DILocalVariable(name: "src_size", arg: 4, scope: !12684, file: !2114, line: 261, type: !252)
!12692 = !DILocalVariable(name: "bytes_to_copy", scope: !12684, file: !2114, line: 263, type: !252)
!12693 = !DILocation(line: 0, scope: !12684)
!12694 = !DILocation(line: 265, column: 18, scope: !12684)
!12695 = !DILocation(line: 266, column: 2, scope: !12684)
!12696 = !DILocation(line: 268, column: 2, scope: !12684)
!12697 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2114, file: !2114, line: 383, type: !12698, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12700)
!12698 = !DISubroutineType(types: !12699)
!12699 = !{null, !2118}
!12700 = !{!12701}
!12701 = !DILocalVariable(name: "thread", arg: 1, scope: !12697, file: !2114, line: 383, type: !2118)
!12702 = !DILocation(line: 0, scope: !12697)
!12703 = !DILocation(line: 387, column: 2, scope: !12697)
!12704 = !DILocation(line: 388, column: 1, scope: !12697)
!12705 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2114, file: !2114, line: 528, type: !12706, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12713)
!12706 = !DISubroutineType(types: !12707)
!12707 = !{!256, !2118, !12708, !252, !3677, !102, !102, !102, !107, !162, !123}
!12708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12709, size: 32)
!12709 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3678, line: 44, baseType: !12710)
!12710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2068, line: 47, size: 8, elements: !12711)
!12711 = !{!12712}
!12712 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12710, file: !2068, line: 48, baseType: !125, size: 8)
!12713 = !{!12714, !12715, !12716, !12717, !12718, !12719, !12720, !12721, !12722, !12723, !12724}
!12714 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12705, file: !2114, line: 528, type: !2118)
!12715 = !DILocalVariable(name: "stack", arg: 2, scope: !12705, file: !2114, line: 529, type: !12708)
!12716 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12705, file: !2114, line: 529, type: !252)
!12717 = !DILocalVariable(name: "entry", arg: 4, scope: !12705, file: !2114, line: 530, type: !3677)
!12718 = !DILocalVariable(name: "p1", arg: 5, scope: !12705, file: !2114, line: 531, type: !102)
!12719 = !DILocalVariable(name: "p2", arg: 6, scope: !12705, file: !2114, line: 531, type: !102)
!12720 = !DILocalVariable(name: "p3", arg: 7, scope: !12705, file: !2114, line: 531, type: !102)
!12721 = !DILocalVariable(name: "prio", arg: 8, scope: !12705, file: !2114, line: 532, type: !107)
!12722 = !DILocalVariable(name: "options", arg: 9, scope: !12705, file: !2114, line: 532, type: !162)
!12723 = !DILocalVariable(name: "name", arg: 10, scope: !12705, file: !2114, line: 532, type: !123)
!12724 = !DILocalVariable(name: "stack_ptr", scope: !12705, file: !2114, line: 534, type: !256)
!12725 = !DILocation(line: 0, scope: !12705)
!12726 = !DILocation(line: 550, column: 28, scope: !12705)
!12727 = !DILocation(line: 550, column: 2, scope: !12705)
!12728 = !DILocation(line: 553, column: 34, scope: !12705)
!12729 = !DILocation(line: 553, column: 2, scope: !12705)
!12730 = !DILocation(line: 554, column: 14, scope: !12705)
!12731 = !DILocation(line: 564, column: 2, scope: !12705)
!12732 = !DILocation(line: 567, column: 14, scope: !12705)
!12733 = !DILocation(line: 567, column: 24, scope: !12705)
!12734 = !DILocation(line: 612, column: 7, scope: !12735)
!12735 = distinct !DILexicalBlock(scope: !12705, file: !2114, line: 612, column: 6)
!12736 = !DILocation(line: 612, column: 6, scope: !12705)
!12737 = !DILocation(line: 627, column: 40, scope: !12705)
!12738 = !DILocation(line: 637, column: 2, scope: !12705)
!12739 = !DILocation(line: 613, column: 15, scope: !12740)
!12740 = distinct !DILexicalBlock(scope: !12735, file: !2114, line: 612, column: 17)
!12741 = !DILocation(line: 613, column: 29, scope: !12740)
!12742 = !DILocation(line: 638, column: 1, scope: !12705)
!12743 = distinct !DISubprogram(name: "z_waitq_init", scope: !12744, file: !12744, line: 47, type: !12745, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12747)
!12744 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12745 = !DISubroutineType(types: !12746)
!12746 = !{null, !2149}
!12747 = !{!12748}
!12748 = !DILocalVariable(name: "w", arg: 1, scope: !12743, file: !12744, line: 47, type: !2149)
!12749 = !DILocation(line: 0, scope: !12743)
!12750 = !DILocation(line: 49, column: 21, scope: !12743)
!12751 = !DILocation(line: 49, column: 2, scope: !12743)
!12752 = !DILocation(line: 50, column: 1, scope: !12743)
!12753 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2114, file: !2114, line: 791, type: !12754, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12757)
!12754 = !DISubroutineType(types: !12755)
!12755 = !{null, !12756, !107, !162, !32}
!12756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 32)
!12757 = !{!12758, !12759, !12760, !12761}
!12758 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12753, file: !2114, line: 791, type: !12756)
!12759 = !DILocalVariable(name: "priority", arg: 2, scope: !12753, file: !2114, line: 791, type: !107)
!12760 = !DILocalVariable(name: "initial_state", arg: 3, scope: !12753, file: !2114, line: 792, type: !162)
!12761 = !DILocalVariable(name: "options", arg: 4, scope: !12753, file: !2114, line: 792, type: !32)
!12762 = !DILocation(line: 0, scope: !12753)
!12763 = !DILocation(line: 795, column: 15, scope: !12753)
!12764 = !DILocation(line: 795, column: 25, scope: !12753)
!12765 = !DILocation(line: 796, column: 30, scope: !12753)
!12766 = !DILocation(line: 796, column: 15, scope: !12753)
!12767 = !DILocation(line: 796, column: 28, scope: !12753)
!12768 = !DILocation(line: 797, column: 30, scope: !12753)
!12769 = !DILocation(line: 797, column: 15, scope: !12753)
!12770 = !DILocation(line: 797, column: 28, scope: !12753)
!12771 = !DILocation(line: 799, column: 22, scope: !12753)
!12772 = !DILocation(line: 799, column: 15, scope: !12753)
!12773 = !DILocation(line: 799, column: 20, scope: !12753)
!12774 = !DILocation(line: 801, column: 15, scope: !12753)
!12775 = !DILocation(line: 801, column: 28, scope: !12753)
!12776 = !DILocation(line: 814, column: 2, scope: !12753)
!12777 = !DILocation(line: 815, column: 1, scope: !12753)
!12778 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2114, file: !2114, line: 449, type: !12779, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12781)
!12779 = !DISubroutineType(types: !12780)
!12780 = !{!256, !2118, !12708, !252}
!12781 = !{!12782, !12783, !12784, !12785, !12786, !12787, !12788, !12789}
!12782 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12778, file: !2114, line: 449, type: !2118)
!12783 = !DILocalVariable(name: "stack", arg: 2, scope: !12778, file: !2114, line: 450, type: !12708)
!12784 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12778, file: !2114, line: 450, type: !252)
!12785 = !DILocalVariable(name: "stack_obj_size", scope: !12778, file: !2114, line: 452, type: !252)
!12786 = !DILocalVariable(name: "stack_buf_size", scope: !12778, file: !2114, line: 452, type: !252)
!12787 = !DILocalVariable(name: "stack_ptr", scope: !12778, file: !2114, line: 453, type: !256)
!12788 = !DILocalVariable(name: "stack_buf_start", scope: !12778, file: !2114, line: 453, type: !256)
!12789 = !DILocalVariable(name: "delta", scope: !12778, file: !2114, line: 454, type: !252)
!12790 = !DILocation(line: 0, scope: !12778)
!12791 = !DILocation(line: 465, column: 20, scope: !12792)
!12792 = distinct !DILexicalBlock(scope: !12778, file: !2114, line: 463, column: 2)
!12793 = !DILocation(line: 466, column: 21, scope: !12792)
!12794 = !DILocation(line: 473, column: 28, scope: !12778)
!12795 = !DILocation(line: 514, column: 33, scope: !12778)
!12796 = !DILocation(line: 514, column: 25, scope: !12778)
!12797 = !DILocation(line: 514, column: 31, scope: !12778)
!12798 = !DILocation(line: 515, column: 25, scope: !12778)
!12799 = !DILocation(line: 515, column: 30, scope: !12778)
!12800 = !DILocation(line: 516, column: 25, scope: !12778)
!12801 = !DILocation(line: 516, column: 31, scope: !12778)
!12802 = !DILocation(line: 520, column: 2, scope: !12778)
!12803 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2068, file: !2068, line: 331, type: !12804, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12806)
!12804 = !DISubroutineType(types: !12805)
!12805 = !{!256, !12708}
!12806 = !{!12807}
!12807 = !DILocalVariable(name: "sym", arg: 1, scope: !12803, file: !2068, line: 331, type: !12708)
!12808 = !DILocation(line: 0, scope: !12803)
!12809 = !DILocation(line: 333, column: 21, scope: !12803)
!12810 = !DILocation(line: 333, column: 2, scope: !12803)
!12811 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !12812, file: !12812, line: 40, type: !12813, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12815)
!12812 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12813 = !DISubroutineType(types: !12814)
!12814 = !{null, !12756}
!12815 = !{!12816}
!12816 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12811, file: !12812, line: 40, type: !12756)
!12817 = !DILocation(line: 0, scope: !12811)
!12818 = !DILocation(line: 42, column: 31, scope: !12811)
!12819 = !DILocation(line: 42, column: 2, scope: !12811)
!12820 = !DILocation(line: 43, column: 1, scope: !12811)
!12821 = distinct !DISubprogram(name: "z_init_timeout", scope: !12812, file: !12812, line: 25, type: !2175, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12822)
!12822 = !{!12823}
!12823 = !DILocalVariable(name: "to", arg: 1, scope: !12821, file: !12812, line: 25, type: !2177)
!12824 = !DILocation(line: 0, scope: !12821)
!12825 = !DILocation(line: 27, column: 22, scope: !12821)
!12826 = !DILocation(line: 27, column: 2, scope: !12821)
!12827 = !DILocation(line: 28, column: 1, scope: !12821)
!12828 = distinct !DISubprogram(name: "sys_dnode_init", scope: !233, file: !233, line: 211, type: !12829, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12831)
!12829 = !DISubroutineType(types: !12830)
!12830 = !{null, !2221}
!12831 = !{!12832}
!12832 = !DILocalVariable(name: "node", arg: 1, scope: !12828, file: !233, line: 211, type: !2221)
!12833 = !DILocation(line: 0, scope: !12828)
!12834 = !DILocation(line: 213, column: 8, scope: !12828)
!12835 = !DILocation(line: 213, column: 13, scope: !12828)
!12836 = !DILocation(line: 214, column: 8, scope: !12828)
!12837 = !DILocation(line: 214, column: 13, scope: !12828)
!12838 = !DILocation(line: 215, column: 1, scope: !12828)
!12839 = distinct !DISubprogram(name: "sys_dlist_init", scope: !233, file: !233, line: 197, type: !12840, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12843)
!12840 = !DISubroutineType(types: !12841)
!12841 = !{null, !12842}
!12842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2154, size: 32)
!12843 = !{!12844}
!12844 = !DILocalVariable(name: "list", arg: 1, scope: !12839, file: !233, line: 197, type: !12842)
!12845 = !DILocation(line: 0, scope: !12839)
!12846 = !DILocation(line: 199, column: 8, scope: !12839)
!12847 = !DILocation(line: 199, column: 13, scope: !12839)
!12848 = !DILocation(line: 200, column: 8, scope: !12839)
!12849 = !DILocation(line: 200, column: 13, scope: !12839)
!12850 = !DILocation(line: 201, column: 1, scope: !12839)
!12851 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2114, file: !2114, line: 641, type: !12852, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12858)
!12852 = !DISubroutineType(types: !12853)
!12853 = !{!2117, !2118, !12708, !252, !3677, !102, !102, !102, !107, !162, !12854}
!12854 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !12855)
!12855 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !12856)
!12856 = !{!12857}
!12857 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12855, file: !104, line: 66, baseType: !103, size: 64)
!12858 = !{!12859, !12860, !12861, !12862, !12863, !12864, !12865, !12866, !12867, !12868}
!12859 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12851, file: !2114, line: 641, type: !2118)
!12860 = !DILocalVariable(name: "stack", arg: 2, scope: !12851, file: !2114, line: 642, type: !12708)
!12861 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12851, file: !2114, line: 643, type: !252)
!12862 = !DILocalVariable(name: "entry", arg: 4, scope: !12851, file: !2114, line: 643, type: !3677)
!12863 = !DILocalVariable(name: "p1", arg: 5, scope: !12851, file: !2114, line: 644, type: !102)
!12864 = !DILocalVariable(name: "p2", arg: 6, scope: !12851, file: !2114, line: 644, type: !102)
!12865 = !DILocalVariable(name: "p3", arg: 7, scope: !12851, file: !2114, line: 644, type: !102)
!12866 = !DILocalVariable(name: "prio", arg: 8, scope: !12851, file: !2114, line: 645, type: !107)
!12867 = !DILocalVariable(name: "options", arg: 9, scope: !12851, file: !2114, line: 645, type: !162)
!12868 = !DILocalVariable(name: "delay", arg: 10, scope: !12851, file: !2114, line: 645, type: !12854)
!12869 = !DILocation(line: 0, scope: !12851)
!12870 = !DILocation(line: 649, column: 2, scope: !12851)
!12871 = !DILocation(line: 652, column: 7, scope: !12872)
!12872 = distinct !DILexicalBlock(scope: !12851, file: !2114, line: 652, column: 6)
!12873 = !DILocation(line: 652, column: 6, scope: !12851)
!12874 = !DILocation(line: 653, column: 3, scope: !12875)
!12875 = distinct !DILexicalBlock(scope: !12872, file: !2114, line: 652, column: 39)
!12876 = !DILocation(line: 654, column: 2, scope: !12875)
!12877 = !DILocation(line: 656, column: 2, scope: !12851)
!12878 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2114, file: !2114, line: 401, type: !12879, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12881)
!12879 = !DISubroutineType(types: !12880)
!12880 = !{null, !2118, !12854}
!12881 = !{!12882, !12883}
!12882 = !DILocalVariable(name: "thread", arg: 1, scope: !12878, file: !2114, line: 401, type: !2118)
!12883 = !DILocalVariable(name: "delay", arg: 2, scope: !12878, file: !2114, line: 401, type: !12854)
!12884 = !DILocation(line: 0, scope: !12878)
!12885 = !DILocation(line: 404, column: 6, scope: !12886)
!12886 = distinct !DILexicalBlock(scope: !12878, file: !2114, line: 404, column: 6)
!12887 = !DILocation(line: 404, column: 6, scope: !12878)
!12888 = !DILocation(line: 405, column: 3, scope: !12889)
!12889 = distinct !DILexicalBlock(scope: !12886, file: !2114, line: 404, column: 38)
!12890 = !DILocation(line: 406, column: 2, scope: !12889)
!12891 = !DILocation(line: 407, column: 3, scope: !12892)
!12892 = distinct !DILexicalBlock(scope: !12886, file: !2114, line: 406, column: 9)
!12893 = !DILocation(line: 413, column: 1, scope: !12878)
!12894 = distinct !DISubprogram(name: "k_thread_start", scope: !3322, file: !3322, line: 205, type: !12895, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12897)
!12895 = !DISubroutineType(types: !12896)
!12896 = !{null, !2117}
!12897 = !{!12898}
!12898 = !DILocalVariable(name: "thread", arg: 1, scope: !12894, file: !3322, line: 205, type: !2117)
!12899 = !DILocation(line: 0, scope: !12894)
!12900 = !DILocation(line: 214, column: 2, scope: !12901)
!12901 = distinct !DILexicalBlock(scope: !12894, file: !3322, line: 214, column: 2)
!12902 = !{i64 2154866875}
!12903 = !DILocation(line: 215, column: 2, scope: !12894)
!12904 = !DILocation(line: 216, column: 1, scope: !12894)
!12905 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12812, file: !12812, line: 47, type: !12879, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12906)
!12906 = !{!12907, !12908}
!12907 = !DILocalVariable(name: "thread", arg: 1, scope: !12905, file: !12812, line: 47, type: !2118)
!12908 = !DILocalVariable(name: "ticks", arg: 2, scope: !12905, file: !12812, line: 47, type: !12854)
!12909 = !DILocation(line: 0, scope: !12905)
!12910 = !DILocation(line: 49, column: 30, scope: !12905)
!12911 = !DILocation(line: 49, column: 2, scope: !12905)
!12912 = !DILocation(line: 50, column: 1, scope: !12905)
!12913 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2114, file: !2114, line: 748, type: !3137, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12914)
!12914 = !{!12915, !12933}
!12915 = !DILocalVariable(name: "thread_data", scope: !12916, file: !2114, line: 750, type: !12917)
!12916 = distinct !DILexicalBlock(scope: !12913, file: !2114, line: 750, column: 2)
!12917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12918, size: 32)
!12918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !224, line: 620, size: 384, elements: !12919)
!12919 = !{!12920, !12921, !12922, !12923, !12924, !12925, !12926, !12927, !12928, !12929, !12930, !12932}
!12920 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !12918, file: !224, line: 621, baseType: !2118, size: 32)
!12921 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !12918, file: !224, line: 622, baseType: !12708, size: 32, offset: 32)
!12922 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !12918, file: !224, line: 623, baseType: !32, size: 32, offset: 64)
!12923 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !12918, file: !224, line: 624, baseType: !3677, size: 32, offset: 96)
!12924 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !12918, file: !224, line: 625, baseType: !102, size: 32, offset: 128)
!12925 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !12918, file: !224, line: 626, baseType: !102, size: 32, offset: 160)
!12926 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !12918, file: !224, line: 627, baseType: !102, size: 32, offset: 192)
!12927 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !12918, file: !224, line: 628, baseType: !107, size: 32, offset: 224)
!12928 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !12918, file: !224, line: 629, baseType: !162, size: 32, offset: 256)
!12929 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !12918, file: !224, line: 630, baseType: !728, size: 32, offset: 288)
!12930 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !12918, file: !224, line: 631, baseType: !12931, size: 32, offset: 320)
!12931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3137, size: 32)
!12932 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !12918, file: !224, line: 632, baseType: !123, size: 32, offset: 352)
!12933 = !DILocalVariable(name: "thread_data", scope: !12934, file: !2114, line: 781, type: !12917)
!12934 = distinct !DILexicalBlock(scope: !12913, file: !2114, line: 781, column: 2)
!12935 = !DILocation(line: 0, scope: !12916)
!12936 = !DILocation(line: 750, column: 2, scope: !12916)
!12937 = !DILocation(line: 780, column: 2, scope: !12913)
!12938 = !DILocation(line: 0, scope: !12934)
!12939 = !DILocation(line: 781, column: 2, scope: !12934)
!12940 = !DILocation(line: 752, column: 17, scope: !12941)
!12941 = distinct !DILexicalBlock(scope: !12942, file: !2114, line: 750, column: 38)
!12942 = distinct !DILexicalBlock(scope: !12916, file: !2114, line: 750, column: 2)
!12943 = !DILocation(line: 753, column: 17, scope: !12941)
!12944 = !DILocation(line: 754, column: 17, scope: !12941)
!12945 = !DILocation(line: 755, column: 17, scope: !12941)
!12946 = !DILocation(line: 756, column: 17, scope: !12941)
!12947 = !DILocation(line: 757, column: 17, scope: !12941)
!12948 = !DILocation(line: 758, column: 17, scope: !12941)
!12949 = !DILocation(line: 759, column: 17, scope: !12941)
!12950 = !DILocation(line: 760, column: 17, scope: !12941)
!12951 = !DILocation(line: 751, column: 3, scope: !12941)
!12952 = !DILocation(line: 763, column: 16, scope: !12941)
!12953 = !DILocation(line: 763, column: 29, scope: !12941)
!12954 = !DILocation(line: 763, column: 39, scope: !12941)
!12955 = !DILocation(line: 750, column: 2, scope: !12942)
!12956 = !DILocation(line: 750, column: 2, scope: !12957)
!12957 = distinct !DILexicalBlock(scope: !12942, file: !2114, line: 750, column: 2)
!12958 = distinct !{!12958, !12936, !12959}
!12959 = !DILocation(line: 764, column: 2, scope: !12916)
!12960 = !DILocation(line: 787, column: 2, scope: !12913)
!12961 = !DILocation(line: 788, column: 1, scope: !12913)
!12962 = !DILocation(line: 782, column: 20, scope: !12963)
!12963 = distinct !DILexicalBlock(scope: !12964, file: !2114, line: 782, column: 7)
!12964 = distinct !DILexicalBlock(scope: !12965, file: !2114, line: 781, column: 38)
!12965 = distinct !DILexicalBlock(scope: !12934, file: !2114, line: 781, column: 2)
!12966 = !DILocation(line: 782, column: 31, scope: !12963)
!12967 = !DILocation(line: 782, column: 7, scope: !12964)
!12968 = !DILocation(line: 783, column: 37, scope: !12969)
!12969 = distinct !DILexicalBlock(scope: !12963, file: !2114, line: 782, column: 51)
!12970 = !DILocation(line: 784, column: 10, scope: !12969)
!12971 = !DILocation(line: 783, column: 4, scope: !12969)
!12972 = !DILocation(line: 785, column: 3, scope: !12969)
!12973 = !DILocation(line: 781, column: 2, scope: !12965)
!12974 = !DILocation(line: 781, column: 2, scope: !12975)
!12975 = distinct !DILexicalBlock(scope: !12965, file: !2114, line: 781, column: 2)
!12976 = distinct !{!12976, !12939, !12977}
!12977 = !DILocation(line: 786, column: 2, scope: !12934)
!12978 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !12979, file: !12979, line: 403, type: !12980, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12982)
!12979 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12980 = !DISubroutineType(types: !12981)
!12981 = !{!1500, !1500}
!12982 = !{!12983}
!12983 = !DILocalVariable(name: "t", arg: 1, scope: !12978, file: !12979, line: 403, type: !1500)
!12984 = !DILocation(line: 0, scope: !12978)
!12985 = !DILocalVariable(name: "t", arg: 1, scope: !12986, file: !12979, line: 102, type: !1500)
!12986 = distinct !DISubprogram(name: "z_tmcvt", scope: !12979, file: !12979, line: 102, type: !12987, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12989)
!12987 = !DISubroutineType(types: !12988)
!12988 = !{!1500, !1500, !162, !162, !136, !136, !136, !136}
!12989 = !{!12985, !12990, !12991, !12992, !12993, !12994, !12995, !12996, !12997, !12998, !12999}
!12990 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12986, file: !12979, line: 102, type: !162)
!12991 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12986, file: !12979, line: 103, type: !162)
!12992 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12986, file: !12979, line: 103, type: !136)
!12993 = !DILocalVariable(name: "result32", arg: 5, scope: !12986, file: !12979, line: 104, type: !136)
!12994 = !DILocalVariable(name: "round_up", arg: 6, scope: !12986, file: !12979, line: 104, type: !136)
!12995 = !DILocalVariable(name: "round_off", arg: 7, scope: !12986, file: !12979, line: 105, type: !136)
!12996 = !DILocalVariable(name: "mul_ratio", scope: !12986, file: !12979, line: 107, type: !136)
!12997 = !DILocalVariable(name: "div_ratio", scope: !12986, file: !12979, line: 109, type: !136)
!12998 = !DILocalVariable(name: "off", scope: !12986, file: !12979, line: 116, type: !1500)
!12999 = !DILocalVariable(name: "rdivisor", scope: !13000, file: !12979, line: 119, type: !162)
!13000 = distinct !DILexicalBlock(scope: !13001, file: !12979, line: 118, column: 18)
!13001 = distinct !DILexicalBlock(scope: !12986, file: !12979, line: 118, column: 6)
!13002 = !DILocation(line: 0, scope: !12986, inlinedAt: !13003)
!13003 = distinct !DILocation(line: 406, column: 9, scope: !12978)
!13004 = !DILocation(line: 145, column: 13, scope: !13005, inlinedAt: !13003)
!13005 = distinct !DILexicalBlock(scope: !13006, file: !12979, line: 144, column: 10)
!13006 = distinct !DILexicalBlock(scope: !13007, file: !12979, line: 142, column: 7)
!13007 = distinct !DILexicalBlock(scope: !13008, file: !12979, line: 141, column: 24)
!13008 = distinct !DILexicalBlock(scope: !13009, file: !12979, line: 141, column: 13)
!13009 = distinct !DILexicalBlock(scope: !12986, file: !12979, line: 134, column: 6)
!13010 = !DILocation(line: 406, column: 2, scope: !12978)
!13011 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2114, file: !2114, line: 817, type: !3675, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13012)
!13012 = !{!13013, !13014, !13015, !13016}
!13013 = !DILocalVariable(name: "entry", arg: 1, scope: !13011, file: !2114, line: 817, type: !3677)
!13014 = !DILocalVariable(name: "p1", arg: 2, scope: !13011, file: !2114, line: 818, type: !102)
!13015 = !DILocalVariable(name: "p2", arg: 3, scope: !13011, file: !2114, line: 818, type: !102)
!13016 = !DILocalVariable(name: "p3", arg: 4, scope: !13011, file: !2114, line: 818, type: !102)
!13017 = !DILocation(line: 0, scope: !13011)
!13018 = !DILocation(line: 822, column: 2, scope: !13011)
!13019 = !DILocation(line: 822, column: 17, scope: !13011)
!13020 = !DILocation(line: 822, column: 30, scope: !13011)
!13021 = !DILocation(line: 823, column: 2, scope: !13011)
!13022 = !DILocation(line: 845, column: 2, scope: !13011)
!13023 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2114, file: !2114, line: 888, type: !13024, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13026)
!13024 = !DISubroutineType(types: !13025)
!13025 = !{!107, !2118}
!13026 = !{!13027}
!13027 = !DILocalVariable(name: "thread", arg: 1, scope: !13023, file: !2114, line: 888, type: !2118)
!13028 = !DILocation(line: 0, scope: !13023)
!13029 = !DILocation(line: 893, column: 2, scope: !13023)
!13030 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2114, file: !2114, line: 897, type: !13031, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13033)
!13031 = !DISubroutineType(types: !13032)
!13032 = !{!107, !2118, !32}
!13033 = !{!13034, !13035}
!13034 = !DILocalVariable(name: "thread", arg: 1, scope: !13030, file: !2114, line: 897, type: !2118)
!13035 = !DILocalVariable(name: "options", arg: 2, scope: !13030, file: !2114, line: 897, type: !32)
!13036 = !DILocation(line: 0, scope: !13030)
!13037 = !DILocation(line: 902, column: 2, scope: !13030)
!13038 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2114, file: !2114, line: 1072, type: !13039, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13044)
!13039 = !DISubroutineType(types: !13040)
!13040 = !{!107, !2117, !13041}
!13041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13042, size: 32)
!13042 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !359, line: 234, baseType: !13043)
!13043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !359, line: 192, elements: !250)
!13044 = !{!13045, !13046}
!13045 = !DILocalVariable(name: "thread", arg: 1, scope: !13038, file: !2114, line: 1072, type: !2117)
!13046 = !DILocalVariable(name: "stats", arg: 2, scope: !13038, file: !2114, line: 1073, type: !13041)
!13047 = !DILocation(line: 0, scope: !13038)
!13048 = !DILocation(line: 1075, column: 14, scope: !13049)
!13049 = distinct !DILexicalBlock(scope: !13038, file: !2114, line: 1075, column: 6)
!13050 = !DILocation(line: 1075, column: 23, scope: !13049)
!13051 = !DILocation(line: 1086, column: 1, scope: !13038)
!13052 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2114, file: !2114, line: 1088, type: !13053, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13055)
!13053 = !DISubroutineType(types: !13054)
!13054 = !{!107, !13041}
!13055 = !{!13056}
!13056 = !DILocalVariable(name: "stats", arg: 1, scope: !13052, file: !2114, line: 1088, type: !13041)
!13057 = !DILocation(line: 0, scope: !13052)
!13058 = !DILocation(line: 1094, column: 12, scope: !13059)
!13059 = distinct !DILexicalBlock(scope: !13052, file: !2114, line: 1094, column: 6)
!13060 = !DILocation(line: 1120, column: 1, scope: !13052)
!13061 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13062, file: !13062, line: 20, type: !3137, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3014, retainedNodes: !250)
!13062 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13063 = !DILocation(line: 30, column: 2, scope: !13061)
!13064 = !DILocation(line: 31, column: 1, scope: !13061)
!13065 = distinct !DISubprogram(name: "idle", scope: !13062, file: !13062, line: 33, type: !3680, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3014, retainedNodes: !13066)
!13066 = !{!13067, !13068, !13069}
!13067 = !DILocalVariable(name: "unused1", arg: 1, scope: !13065, file: !13062, line: 33, type: !102)
!13068 = !DILocalVariable(name: "unused2", arg: 2, scope: !13065, file: !13062, line: 33, type: !102)
!13069 = !DILocalVariable(name: "unused3", arg: 3, scope: !13065, file: !13062, line: 33, type: !102)
!13070 = !DILocation(line: 0, scope: !13065)
!13071 = !DILocation(line: 41, column: 2, scope: !13065)
!13072 = !DILocation(line: 55, column: 2, scope: !13073, inlinedAt: !13077)
!13073 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5913, file: !5913, line: 42, type: !5914, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3014, retainedNodes: !13074)
!13074 = !{!13075, !13076}
!13075 = !DILocalVariable(name: "key", scope: !13073, file: !5913, line: 44, type: !32)
!13076 = !DILocalVariable(name: "tmp", scope: !13073, file: !5913, line: 53, type: !32)
!13077 = distinct !DILocation(line: 62, column: 10, scope: !13078)
!13078 = distinct !DILexicalBlock(scope: !13065, file: !13062, line: 41, column: 15)
!13079 = !{i64 2222231}
!13080 = !DILocation(line: 0, scope: !13073, inlinedAt: !13077)
!13081 = !DILocation(line: 86, column: 3, scope: !13078)
!13082 = distinct !{!13082, !13071, !13083}
!13083 = !DILocation(line: 105, column: 2, scope: !13065)
!13084 = distinct !DISubprogram(name: "k_cpu_idle", scope: !224, file: !224, line: 5627, type: !3137, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3014, retainedNodes: !250)
!13085 = !DILocation(line: 5629, column: 2, scope: !13084)
!13086 = !DILocation(line: 5630, column: 1, scope: !13084)
!13087 = !DISubprogram(name: "arch_cpu_idle", scope: !3678, file: !3678, line: 167, type: !3137, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!13088 = distinct !DISubprogram(name: "k_msgq_init", scope: !13089, file: !13089, line: 35, type: !13090, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !13105)
!13089 = !DIFile(filename: "zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13090 = !DISubroutineType(types: !13091)
!13091 = !{null, !13092, !256, !252, !162}
!13092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13093, size: 32)
!13093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !224, line: 4204, size: 320, elements: !13094)
!13094 = !{!13095, !13096, !13097, !13098, !13099, !13100, !13101, !13102, !13103, !13104}
!13095 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13093, file: !224, line: 4206, baseType: !3052, size: 64)
!13096 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13093, file: !224, line: 4208, baseType: !3114, offset: 64)
!13097 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !13093, file: !224, line: 4210, baseType: !252, size: 32, offset: 64)
!13098 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !13093, file: !224, line: 4212, baseType: !162, size: 32, offset: 96)
!13099 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !13093, file: !224, line: 4214, baseType: !256, size: 32, offset: 128)
!13100 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !13093, file: !224, line: 4216, baseType: !256, size: 32, offset: 160)
!13101 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !13093, file: !224, line: 4218, baseType: !256, size: 32, offset: 192)
!13102 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !13093, file: !224, line: 4220, baseType: !256, size: 32, offset: 224)
!13103 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !13093, file: !224, line: 4222, baseType: !162, size: 32, offset: 256)
!13104 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !13093, file: !224, line: 4227, baseType: !133, size: 8, offset: 288)
!13105 = !{!13106, !13107, !13108, !13109}
!13106 = !DILocalVariable(name: "msgq", arg: 1, scope: !13088, file: !13089, line: 35, type: !13092)
!13107 = !DILocalVariable(name: "buffer", arg: 2, scope: !13088, file: !13089, line: 35, type: !256)
!13108 = !DILocalVariable(name: "msg_size", arg: 3, scope: !13088, file: !13089, line: 35, type: !252)
!13109 = !DILocalVariable(name: "max_msgs", arg: 4, scope: !13088, file: !13089, line: 36, type: !162)
!13110 = !DILocation(line: 0, scope: !13088)
!13111 = !DILocation(line: 38, column: 8, scope: !13088)
!13112 = !DILocation(line: 38, column: 17, scope: !13088)
!13113 = !DILocation(line: 39, column: 8, scope: !13088)
!13114 = !DILocation(line: 39, column: 17, scope: !13088)
!13115 = !DILocation(line: 40, column: 8, scope: !13088)
!13116 = !DILocation(line: 40, column: 21, scope: !13088)
!13117 = !DILocation(line: 41, column: 40, scope: !13088)
!13118 = !DILocation(line: 41, column: 28, scope: !13088)
!13119 = !DILocation(line: 41, column: 8, scope: !13088)
!13120 = !DILocation(line: 41, column: 19, scope: !13088)
!13121 = !DILocation(line: 42, column: 8, scope: !13088)
!13122 = !DILocation(line: 42, column: 17, scope: !13088)
!13123 = !DILocation(line: 43, column: 8, scope: !13088)
!13124 = !DILocation(line: 43, column: 18, scope: !13088)
!13125 = !DILocation(line: 44, column: 8, scope: !13088)
!13126 = !DILocation(line: 44, column: 18, scope: !13088)
!13127 = !DILocation(line: 45, column: 8, scope: !13088)
!13128 = !DILocation(line: 45, column: 14, scope: !13088)
!13129 = !DILocation(line: 46, column: 22, scope: !13088)
!13130 = !DILocation(line: 46, column: 2, scope: !13088)
!13131 = !DILocation(line: 55, column: 1, scope: !13088)
!13132 = distinct !DISubprogram(name: "z_waitq_init", scope: !12744, file: !12744, line: 47, type: !13133, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !13135)
!13133 = !DISubroutineType(types: !13134)
!13134 = !{null, !3051}
!13135 = !{!13136}
!13136 = !DILocalVariable(name: "w", arg: 1, scope: !13132, file: !12744, line: 47, type: !3051)
!13137 = !DILocation(line: 0, scope: !13132)
!13138 = !DILocation(line: 49, column: 21, scope: !13132)
!13139 = !DILocation(line: 49, column: 2, scope: !13132)
!13140 = !DILocation(line: 50, column: 1, scope: !13132)
!13141 = distinct !DISubprogram(name: "sys_dlist_init", scope: !233, file: !233, line: 197, type: !13142, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !13145)
!13142 = !DISubroutineType(types: !13143)
!13143 = !{null, !13144}
!13144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3056, size: 32)
!13145 = !{!13146}
!13146 = !DILocalVariable(name: "list", arg: 1, scope: !13141, file: !233, line: 197, type: !13144)
!13147 = !DILocation(line: 0, scope: !13141)
!13148 = !DILocation(line: 199, column: 8, scope: !13141)
!13149 = !DILocation(line: 199, column: 13, scope: !13141)
!13150 = !DILocation(line: 200, column: 8, scope: !13141)
!13151 = !DILocation(line: 200, column: 13, scope: !13141)
!13152 = !DILocation(line: 201, column: 1, scope: !13141)
!13153 = distinct !DISubprogram(name: "z_impl_k_msgq_alloc_init", scope: !13089, file: !13089, line: 57, type: !13154, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !13156)
!13154 = !DISubroutineType(types: !13155)
!13155 = !{!107, !13092, !252, !162}
!13156 = !{!13157, !13158, !13159, !13160, !13161, !13162}
!13157 = !DILocalVariable(name: "msgq", arg: 1, scope: !13153, file: !13089, line: 57, type: !13092)
!13158 = !DILocalVariable(name: "msg_size", arg: 2, scope: !13153, file: !13089, line: 57, type: !252)
!13159 = !DILocalVariable(name: "max_msgs", arg: 3, scope: !13153, file: !13089, line: 58, type: !162)
!13160 = !DILocalVariable(name: "buffer", scope: !13153, file: !13089, line: 60, type: !102)
!13161 = !DILocalVariable(name: "ret", scope: !13153, file: !13089, line: 61, type: !107)
!13162 = !DILocalVariable(name: "total_size", scope: !13153, file: !13089, line: 62, type: !252)
!13163 = !DILocation(line: 0, scope: !13153)
!13164 = !DILocation(line: 62, column: 2, scope: !13153)
!13165 = !DILocation(line: 66, column: 6, scope: !13166)
!13166 = distinct !DILexicalBlock(scope: !13153, file: !13089, line: 66, column: 6)
!13167 = !DILocation(line: 66, column: 6, scope: !13153)
!13168 = !DILocation(line: 69, column: 28, scope: !13169)
!13169 = distinct !DILexicalBlock(scope: !13166, file: !13089, line: 68, column: 9)
!13170 = !DILocation(line: 69, column: 12, scope: !13169)
!13171 = !DILocation(line: 70, column: 14, scope: !13172)
!13172 = distinct !DILexicalBlock(scope: !13169, file: !13089, line: 70, column: 7)
!13173 = !DILocation(line: 70, column: 7, scope: !13169)
!13174 = !DILocation(line: 71, column: 4, scope: !13175)
!13175 = distinct !DILexicalBlock(scope: !13172, file: !13089, line: 70, column: 23)
!13176 = !DILocation(line: 72, column: 10, scope: !13175)
!13177 = !DILocation(line: 72, column: 16, scope: !13175)
!13178 = !DILocation(line: 74, column: 3, scope: !13175)
!13179 = !DILocation(line: 0, scope: !13166)
!13180 = !DILocation(line: 82, column: 1, scope: !13153)
!13181 = !DILocation(line: 81, column: 2, scope: !13153)
!13182 = distinct !DISubprogram(name: "size_mul_overflow", scope: !13183, file: !13183, line: 105, type: !13184, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !13186)
!13183 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13184 = !DISubroutineType(types: !13185)
!13185 = !{!136, !252, !252, !2495}
!13186 = !{!13187, !13188, !13189}
!13187 = !DILocalVariable(name: "a", arg: 1, scope: !13182, file: !13183, line: 105, type: !252)
!13188 = !DILocalVariable(name: "b", arg: 2, scope: !13182, file: !13183, line: 105, type: !252)
!13189 = !DILocalVariable(name: "result", arg: 3, scope: !13182, file: !13183, line: 105, type: !2495)
!13190 = !DILocation(line: 0, scope: !13182)
!13191 = !DILocation(line: 107, column: 9, scope: !13182)
!13192 = !DILocation(line: 107, column: 2, scope: !13182)
!13193 = distinct !DISubprogram(name: "z_thread_malloc", scope: !13194, file: !13194, line: 102, type: !13195, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !13196)
!13194 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13195 = !DISubroutineType(types: !2995)
!13196 = !{!13197}
!13197 = !DILocalVariable(name: "size", arg: 1, scope: !13193, file: !13194, line: 102, type: !252)
!13198 = !DILocation(line: 0, scope: !13193)
!13199 = !DILocation(line: 104, column: 9, scope: !13193)
!13200 = !DILocation(line: 104, column: 2, scope: !13193)
!13201 = !DISubprogram(name: "z_thread_aligned_alloc", scope: !13194, file: !13194, line: 87, type: !13202, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!13202 = !DISubroutineType(types: !13203)
!13203 = !{!102, !252, !252}
!13204 = distinct !DISubprogram(name: "k_msgq_cleanup", scope: !13089, file: !13089, line: 95, type: !13205, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !13207)
!13205 = !DISubroutineType(types: !13206)
!13206 = !{!107, !13092}
!13207 = !{!13208}
!13208 = !DILocalVariable(name: "msgq", arg: 1, scope: !13204, file: !13089, line: 95, type: !13092)
!13209 = !DILocation(line: 0, scope: !13204)
!13210 = !DILocation(line: 99, column: 2, scope: !13211)
!13211 = distinct !DILexicalBlock(scope: !13204, file: !13089, line: 99, column: 2)
!13212 = !DILocation(line: 99, column: 2, scope: !13204)
!13213 = !DILocation(line: 105, column: 13, scope: !13214)
!13214 = distinct !DILexicalBlock(scope: !13204, file: !13089, line: 105, column: 6)
!13215 = !DILocation(line: 105, column: 19, scope: !13214)
!13216 = !DILocation(line: 105, column: 40, scope: !13214)
!13217 = !DILocation(line: 105, column: 6, scope: !13204)
!13218 = !DILocation(line: 106, column: 16, scope: !13219)
!13219 = distinct !DILexicalBlock(scope: !13214, file: !13089, line: 105, column: 47)
!13220 = !DILocation(line: 106, column: 3, scope: !13219)
!13221 = !DILocation(line: 107, column: 15, scope: !13219)
!13222 = !DILocation(line: 108, column: 2, scope: !13219)
!13223 = !DILocation(line: 113, column: 1, scope: !13204)
!13224 = distinct !DISubprogram(name: "z_waitq_head", scope: !12744, file: !12744, line: 52, type: !13225, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !13227)
!13225 = !DISubroutineType(types: !13226)
!13226 = !{!3034, !3051}
!13227 = !{!13228}
!13228 = !DILocalVariable(name: "w", arg: 1, scope: !13224, file: !12744, line: 52, type: !3051)
!13229 = !DILocation(line: 0, scope: !13224)
!13230 = !DILocation(line: 54, column: 52, scope: !13224)
!13231 = !DILocation(line: 54, column: 28, scope: !13224)
!13232 = !DILocation(line: 54, column: 9, scope: !13224)
!13233 = !DILocation(line: 54, column: 2, scope: !13224)
!13234 = !DISubprogram(name: "k_free", scope: !224, file: !224, line: 5272, type: !6024, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!13235 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !233, file: !233, line: 294, type: !13236, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !13238)
!13236 = !DISubroutineType(types: !13237)
!13237 = !{!3019, !13144}
!13238 = !{!13239}
!13239 = !DILocalVariable(name: "list", arg: 1, scope: !13235, file: !233, line: 294, type: !13144)
!13240 = !DILocation(line: 0, scope: !13235)
!13241 = !DILocation(line: 296, column: 9, scope: !13235)
!13242 = !DILocation(line: 296, column: 49, scope: !13235)
!13243 = !DILocation(line: 296, column: 2, scope: !13235)
!13244 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !233, file: !233, line: 266, type: !13245, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !13247)
!13245 = !DISubroutineType(types: !13246)
!13246 = !{!136, !13144}
!13247 = !{!13248}
!13248 = !DILocalVariable(name: "list", arg: 1, scope: !13244, file: !233, line: 266, type: !13144)
!13249 = !DILocation(line: 0, scope: !13244)
!13250 = !DILocation(line: 268, column: 15, scope: !13244)
!13251 = !DILocation(line: 268, column: 20, scope: !13244)
!13252 = !DILocation(line: 268, column: 2, scope: !13244)
!13253 = distinct !DISubprogram(name: "z_impl_k_msgq_put", scope: !13089, file: !13089, line: 116, type: !13254, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !13260)
!13254 = !DISubroutineType(types: !13255)
!13255 = !{!107, !13092, !13, !13256}
!13256 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !13257)
!13257 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !13258)
!13258 = !{!13259}
!13259 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13257, file: !104, line: 66, baseType: !103, size: 64)
!13260 = !{!13261, !13262, !13263, !13264, !13265, !13270}
!13261 = !DILocalVariable(name: "msgq", arg: 1, scope: !13253, file: !13089, line: 116, type: !13092)
!13262 = !DILocalVariable(name: "data", arg: 2, scope: !13253, file: !13089, line: 116, type: !13)
!13263 = !DILocalVariable(name: "timeout", arg: 3, scope: !13253, file: !13089, line: 116, type: !13256)
!13264 = !DILocalVariable(name: "pending_thread", scope: !13253, file: !13089, line: 120, type: !3034)
!13265 = !DILocalVariable(name: "key", scope: !13253, file: !13089, line: 121, type: !13266)
!13266 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !249, line: 106, baseType: !13267)
!13267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !249, line: 32, size: 32, elements: !13268)
!13268 = !{!13269}
!13269 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13267, file: !249, line: 33, baseType: !107, size: 32)
!13270 = !DILocalVariable(name: "result", scope: !13253, file: !13089, line: 122, type: !107)
!13271 = !DILocation(line: 0, scope: !13253)
!13272 = !DILocation(line: 124, column: 27, scope: !13253)
!13273 = !DILocalVariable(name: "l", arg: 1, scope: !13274, file: !249, line: 136, type: !13277)
!13274 = distinct !DISubprogram(name: "k_spin_lock", scope: !249, file: !249, line: 136, type: !13275, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !13278)
!13275 = !DISubroutineType(types: !13276)
!13276 = !{!13266, !13277}
!13277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3114, size: 32)
!13278 = !{!13273, !13279}
!13279 = !DILocalVariable(name: "k", scope: !13274, file: !249, line: 139, type: !13266)
!13280 = !DILocation(line: 0, scope: !13274, inlinedAt: !13281)
!13281 = distinct !DILocation(line: 124, column: 8, scope: !13253)
!13282 = !DILocation(line: 55, column: 2, scope: !13283, inlinedAt: !13287)
!13283 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5913, file: !5913, line: 42, type: !5914, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !13284)
!13284 = !{!13285, !13286}
!13285 = !DILocalVariable(name: "key", scope: !13283, file: !5913, line: 44, type: !32)
!13286 = !DILocalVariable(name: "tmp", scope: !13283, file: !5913, line: 53, type: !32)
!13287 = distinct !DILocation(line: 145, column: 10, scope: !13274, inlinedAt: !13281)
!13288 = !{i64 2228368}
!13289 = !DILocation(line: 0, scope: !13283, inlinedAt: !13287)
!13290 = !DILocation(line: 128, column: 12, scope: !13291)
!13291 = distinct !DILexicalBlock(scope: !13253, file: !13089, line: 128, column: 6)
!13292 = !DILocation(line: 128, column: 30, scope: !13291)
!13293 = !DILocation(line: 128, column: 22, scope: !13291)
!13294 = !DILocation(line: 128, column: 6, scope: !13253)
!13295 = !DILocation(line: 130, column: 49, scope: !13296)
!13296 = distinct !DILexicalBlock(scope: !13291, file: !13089, line: 128, column: 40)
!13297 = !DILocation(line: 130, column: 20, scope: !13296)
!13298 = !DILocation(line: 131, column: 22, scope: !13299)
!13299 = distinct !DILexicalBlock(scope: !13296, file: !13089, line: 131, column: 7)
!13300 = !DILocation(line: 131, column: 7, scope: !13296)
!13301 = !DILocation(line: 135, column: 38, scope: !13302)
!13302 = distinct !DILexicalBlock(scope: !13299, file: !13089, line: 131, column: 31)
!13303 = !DILocation(line: 136, column: 17, scope: !13302)
!13304 = !DILocation(line: 135, column: 10, scope: !13302)
!13305 = !DILocalVariable(name: "thread", arg: 1, scope: !13306, file: !12440, line: 65, type: !3034)
!13306 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12440, file: !12440, line: 65, type: !13307, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !13309)
!13307 = !DISubroutineType(types: !13308)
!13308 = !{null, !3034, !32}
!13309 = !{!13305, !13310}
!13310 = !DILocalVariable(name: "value", arg: 2, scope: !13306, file: !12440, line: 65, type: !32)
!13311 = !DILocation(line: 0, scope: !13306, inlinedAt: !13312)
!13312 = distinct !DILocation(line: 138, column: 4, scope: !13302)
!13313 = !DILocation(line: 67, column: 15, scope: !13306, inlinedAt: !13312)
!13314 = !DILocation(line: 67, column: 33, scope: !13306, inlinedAt: !13312)
!13315 = !DILocation(line: 139, column: 4, scope: !13302)
!13316 = !DILocation(line: 140, column: 4, scope: !13302)
!13317 = !DILocation(line: 141, column: 4, scope: !13302)
!13318 = !DILocation(line: 144, column: 23, scope: !13319)
!13319 = distinct !DILexicalBlock(scope: !13299, file: !13089, line: 142, column: 10)
!13320 = !DILocation(line: 144, column: 46, scope: !13319)
!13321 = !DILocation(line: 144, column: 10, scope: !13319)
!13322 = !DILocation(line: 145, column: 29, scope: !13319)
!13323 = !DILocation(line: 145, column: 20, scope: !13319)
!13324 = !DILocation(line: 146, column: 33, scope: !13325)
!13325 = distinct !DILexicalBlock(scope: !13319, file: !13089, line: 146, column: 8)
!13326 = !DILocation(line: 146, column: 24, scope: !13325)
!13327 = !DILocation(line: 146, column: 8, scope: !13319)
!13328 = !DILocation(line: 147, column: 29, scope: !13329)
!13329 = distinct !DILexicalBlock(scope: !13325, file: !13089, line: 146, column: 45)
!13330 = !DILocation(line: 147, column: 21, scope: !13329)
!13331 = !DILocation(line: 148, column: 4, scope: !13329)
!13332 = !DILocation(line: 149, column: 19, scope: !13319)
!13333 = !DILocation(line: 155, column: 2, scope: !13296)
!13334 = !DILocation(line: 155, column: 13, scope: !13335)
!13335 = distinct !DILexicalBlock(scope: !13291, file: !13089, line: 155, column: 13)
!13336 = !DILocation(line: 155, column: 13, scope: !13291)
!13337 = !DILocation(line: 162, column: 3, scope: !13338)
!13338 = distinct !DILexicalBlock(scope: !13335, file: !13089, line: 158, column: 9)
!13339 = !DILocation(line: 162, column: 18, scope: !13338)
!13340 = !DILocation(line: 162, column: 28, scope: !13338)
!13341 = !DILocation(line: 164, column: 49, scope: !13338)
!13342 = !DILocation(line: 164, column: 12, scope: !13338)
!13343 = !DILocation(line: 166, column: 3, scope: !13338)
!13344 = !DILocation(line: 0, scope: !13291)
!13345 = !DILocalVariable(name: "key", arg: 2, scope: !13346, file: !249, line: 190, type: !13266)
!13346 = distinct !DISubprogram(name: "k_spin_unlock", scope: !249, file: !249, line: 189, type: !13347, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !13349)
!13347 = !DISubroutineType(types: !13348)
!13348 = !{null, !13277, !13266}
!13349 = !{!13350, !13345}
!13350 = !DILocalVariable(name: "l", arg: 1, scope: !13346, file: !249, line: 189, type: !13277)
!13351 = !DILocation(line: 0, scope: !13346, inlinedAt: !13352)
!13352 = distinct !DILocation(line: 171, column: 2, scope: !13253)
!13353 = !DILocalVariable(name: "key", arg: 1, scope: !13354, file: !5913, line: 84, type: !32)
!13354 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5913, file: !5913, line: 84, type: !5924, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !13355)
!13355 = !{!13353}
!13356 = !DILocation(line: 0, scope: !13354, inlinedAt: !13357)
!13357 = distinct !DILocation(line: 215, column: 2, scope: !13346, inlinedAt: !13352)
!13358 = !DILocation(line: 95, column: 2, scope: !13354, inlinedAt: !13357)
!13359 = !{i64 2229185}
!13360 = !DILocation(line: 173, column: 2, scope: !13253)
!13361 = !DILocation(line: 174, column: 1, scope: !13253)
!13362 = distinct !DISubprogram(name: "z_impl_k_msgq_get_attrs", scope: !13089, file: !13089, line: 188, type: !13363, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !13371)
!13363 = !DISubroutineType(types: !13364)
!13364 = !{null, !13092, !13365}
!13365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13366, size: 32)
!13366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq_attrs", file: !224, line: 4259, size: 96, elements: !13367)
!13367 = !{!13368, !13369, !13370}
!13368 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !13366, file: !224, line: 4261, baseType: !252, size: 32)
!13369 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !13366, file: !224, line: 4263, baseType: !162, size: 32, offset: 32)
!13370 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !13366, file: !224, line: 4265, baseType: !162, size: 32, offset: 64)
!13371 = !{!13372, !13373}
!13372 = !DILocalVariable(name: "msgq", arg: 1, scope: !13362, file: !13089, line: 188, type: !13092)
!13373 = !DILocalVariable(name: "attrs", arg: 2, scope: !13362, file: !13089, line: 188, type: !13365)
!13374 = !DILocation(line: 0, scope: !13362)
!13375 = !DILocation(line: 190, column: 26, scope: !13362)
!13376 = !DILocation(line: 190, column: 9, scope: !13362)
!13377 = !DILocation(line: 190, column: 18, scope: !13362)
!13378 = !DILocation(line: 191, column: 26, scope: !13362)
!13379 = !DILocation(line: 191, column: 9, scope: !13362)
!13380 = !DILocation(line: 191, column: 18, scope: !13362)
!13381 = !DILocation(line: 192, column: 27, scope: !13362)
!13382 = !DILocation(line: 192, column: 9, scope: !13362)
!13383 = !DILocation(line: 192, column: 19, scope: !13362)
!13384 = !DILocation(line: 193, column: 1, scope: !13362)
!13385 = distinct !DISubprogram(name: "z_impl_k_msgq_get", scope: !13089, file: !13089, line: 206, type: !13386, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !13388)
!13386 = !DISubroutineType(types: !13387)
!13387 = !{!107, !13092, !102, !13256}
!13388 = !{!13389, !13390, !13391, !13392, !13393, !13394}
!13389 = !DILocalVariable(name: "msgq", arg: 1, scope: !13385, file: !13089, line: 206, type: !13092)
!13390 = !DILocalVariable(name: "data", arg: 2, scope: !13385, file: !13089, line: 206, type: !102)
!13391 = !DILocalVariable(name: "timeout", arg: 3, scope: !13385, file: !13089, line: 206, type: !13256)
!13392 = !DILocalVariable(name: "key", scope: !13385, file: !13089, line: 210, type: !13266)
!13393 = !DILocalVariable(name: "pending_thread", scope: !13385, file: !13089, line: 211, type: !3034)
!13394 = !DILocalVariable(name: "result", scope: !13385, file: !13089, line: 212, type: !107)
!13395 = !DILocation(line: 0, scope: !13385)
!13396 = !DILocation(line: 214, column: 27, scope: !13385)
!13397 = !DILocation(line: 0, scope: !13274, inlinedAt: !13398)
!13398 = distinct !DILocation(line: 214, column: 8, scope: !13385)
!13399 = !DILocation(line: 55, column: 2, scope: !13283, inlinedAt: !13400)
!13400 = distinct !DILocation(line: 145, column: 10, scope: !13274, inlinedAt: !13398)
!13401 = !DILocation(line: 0, scope: !13283, inlinedAt: !13400)
!13402 = !DILocation(line: 218, column: 12, scope: !13403)
!13403 = distinct !DILexicalBlock(scope: !13385, file: !13089, line: 218, column: 6)
!13404 = !DILocation(line: 218, column: 22, scope: !13403)
!13405 = !DILocation(line: 218, column: 6, scope: !13385)
!13406 = !DILocation(line: 220, column: 28, scope: !13407)
!13407 = distinct !DILexicalBlock(scope: !13403, file: !13089, line: 218, column: 28)
!13408 = !DILocation(line: 220, column: 44, scope: !13407)
!13409 = !DILocation(line: 220, column: 9, scope: !13407)
!13410 = !DILocation(line: 221, column: 27, scope: !13407)
!13411 = !DILocation(line: 221, column: 18, scope: !13407)
!13412 = !DILocation(line: 222, column: 31, scope: !13413)
!13413 = distinct !DILexicalBlock(scope: !13407, file: !13089, line: 222, column: 7)
!13414 = !DILocation(line: 222, column: 22, scope: !13413)
!13415 = !DILocation(line: 222, column: 7, scope: !13407)
!13416 = !DILocation(line: 223, column: 27, scope: !13417)
!13417 = distinct !DILexicalBlock(scope: !13413, file: !13089, line: 222, column: 43)
!13418 = !DILocation(line: 223, column: 19, scope: !13417)
!13419 = !DILocation(line: 224, column: 3, scope: !13417)
!13420 = !DILocation(line: 225, column: 18, scope: !13407)
!13421 = !DILocation(line: 228, column: 49, scope: !13407)
!13422 = !DILocation(line: 228, column: 20, scope: !13407)
!13423 = !DILocation(line: 229, column: 22, scope: !13424)
!13424 = distinct !DILexicalBlock(scope: !13407, file: !13089, line: 229, column: 7)
!13425 = !DILocation(line: 229, column: 7, scope: !13407)
!13426 = !DILocation(line: 233, column: 23, scope: !13427)
!13427 = distinct !DILexicalBlock(scope: !13424, file: !13089, line: 229, column: 31)
!13428 = !DILocation(line: 233, column: 55, scope: !13427)
!13429 = !DILocation(line: 234, column: 17, scope: !13427)
!13430 = !DILocation(line: 233, column: 10, scope: !13427)
!13431 = !DILocation(line: 235, column: 29, scope: !13427)
!13432 = !DILocation(line: 235, column: 20, scope: !13427)
!13433 = !DILocation(line: 236, column: 33, scope: !13434)
!13434 = distinct !DILexicalBlock(scope: !13427, file: !13089, line: 236, column: 8)
!13435 = !DILocation(line: 236, column: 24, scope: !13434)
!13436 = !DILocation(line: 236, column: 8, scope: !13427)
!13437 = !DILocation(line: 237, column: 29, scope: !13438)
!13438 = distinct !DILexicalBlock(scope: !13434, file: !13089, line: 236, column: 45)
!13439 = !DILocation(line: 237, column: 21, scope: !13438)
!13440 = !DILocation(line: 238, column: 4, scope: !13438)
!13441 = !DILocation(line: 239, column: 19, scope: !13427)
!13442 = !DILocation(line: 0, scope: !13306, inlinedAt: !13443)
!13443 = distinct !DILocation(line: 242, column: 4, scope: !13427)
!13444 = !DILocation(line: 67, column: 15, scope: !13306, inlinedAt: !13443)
!13445 = !DILocation(line: 67, column: 33, scope: !13306, inlinedAt: !13443)
!13446 = !DILocation(line: 243, column: 4, scope: !13427)
!13447 = !DILocation(line: 244, column: 4, scope: !13427)
!13448 = !DILocation(line: 248, column: 4, scope: !13427)
!13449 = !DILocation(line: 251, column: 13, scope: !13450)
!13450 = distinct !DILexicalBlock(scope: !13403, file: !13089, line: 251, column: 13)
!13451 = !DILocation(line: 251, column: 13, scope: !13403)
!13452 = !DILocation(line: 258, column: 3, scope: !13453)
!13453 = distinct !DILexicalBlock(scope: !13450, file: !13089, line: 254, column: 9)
!13454 = !DILocation(line: 258, column: 18, scope: !13453)
!13455 = !DILocation(line: 258, column: 28, scope: !13453)
!13456 = !DILocation(line: 260, column: 49, scope: !13453)
!13457 = !DILocation(line: 260, column: 12, scope: !13453)
!13458 = !DILocation(line: 262, column: 3, scope: !13453)
!13459 = !DILocation(line: 0, scope: !13403)
!13460 = !DILocation(line: 0, scope: !13346, inlinedAt: !13461)
!13461 = distinct !DILocation(line: 267, column: 2, scope: !13385)
!13462 = !DILocation(line: 0, scope: !13354, inlinedAt: !13463)
!13463 = distinct !DILocation(line: 215, column: 2, scope: !13346, inlinedAt: !13461)
!13464 = !DILocation(line: 95, column: 2, scope: !13354, inlinedAt: !13463)
!13465 = !DILocation(line: 269, column: 2, scope: !13385)
!13466 = !DILocation(line: 270, column: 1, scope: !13385)
!13467 = distinct !DISubprogram(name: "z_impl_k_msgq_peek", scope: !13089, file: !13089, line: 284, type: !13468, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !13470)
!13468 = !DISubroutineType(types: !13469)
!13469 = !{!107, !13092, !102}
!13470 = !{!13471, !13472, !13473, !13474}
!13471 = !DILocalVariable(name: "msgq", arg: 1, scope: !13467, file: !13089, line: 284, type: !13092)
!13472 = !DILocalVariable(name: "data", arg: 2, scope: !13467, file: !13089, line: 284, type: !102)
!13473 = !DILocalVariable(name: "key", scope: !13467, file: !13089, line: 286, type: !13266)
!13474 = !DILocalVariable(name: "result", scope: !13467, file: !13089, line: 287, type: !107)
!13475 = !DILocation(line: 0, scope: !13467)
!13476 = !DILocation(line: 0, scope: !13274, inlinedAt: !13477)
!13477 = distinct !DILocation(line: 289, column: 8, scope: !13467)
!13478 = !DILocation(line: 55, column: 2, scope: !13283, inlinedAt: !13479)
!13479 = distinct !DILocation(line: 145, column: 10, scope: !13274, inlinedAt: !13477)
!13480 = !DILocation(line: 0, scope: !13283, inlinedAt: !13479)
!13481 = !DILocation(line: 291, column: 12, scope: !13482)
!13482 = distinct !DILexicalBlock(scope: !13467, file: !13089, line: 291, column: 6)
!13483 = !DILocation(line: 291, column: 22, scope: !13482)
!13484 = !DILocation(line: 291, column: 6, scope: !13467)
!13485 = !DILocation(line: 293, column: 28, scope: !13486)
!13486 = distinct !DILexicalBlock(scope: !13482, file: !13089, line: 291, column: 28)
!13487 = !DILocation(line: 293, column: 44, scope: !13486)
!13488 = !DILocation(line: 293, column: 9, scope: !13486)
!13489 = !DILocation(line: 295, column: 2, scope: !13486)
!13490 = !DILocation(line: 0, scope: !13482)
!13491 = !DILocation(line: 0, scope: !13346, inlinedAt: !13492)
!13492 = distinct !DILocation(line: 302, column: 2, scope: !13467)
!13493 = !DILocation(line: 0, scope: !13354, inlinedAt: !13494)
!13494 = distinct !DILocation(line: 215, column: 2, scope: !13346, inlinedAt: !13492)
!13495 = !DILocation(line: 95, column: 2, scope: !13354, inlinedAt: !13494)
!13496 = !DILocation(line: 304, column: 2, scope: !13467)
!13497 = distinct !DISubprogram(name: "z_impl_k_msgq_purge", scope: !13089, file: !13089, line: 318, type: !13498, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !13500)
!13498 = !DISubroutineType(types: !13499)
!13499 = !{null, !13092}
!13500 = !{!13501, !13502, !13503}
!13501 = !DILocalVariable(name: "msgq", arg: 1, scope: !13497, file: !13089, line: 318, type: !13092)
!13502 = !DILocalVariable(name: "key", scope: !13497, file: !13089, line: 320, type: !13266)
!13503 = !DILocalVariable(name: "pending_thread", scope: !13497, file: !13089, line: 321, type: !3034)
!13504 = !DILocation(line: 0, scope: !13497)
!13505 = !DILocation(line: 0, scope: !13274, inlinedAt: !13506)
!13506 = distinct !DILocation(line: 323, column: 8, scope: !13497)
!13507 = !DILocation(line: 55, column: 2, scope: !13283, inlinedAt: !13508)
!13508 = distinct !DILocation(line: 145, column: 10, scope: !13274, inlinedAt: !13506)
!13509 = !DILocation(line: 0, scope: !13283, inlinedAt: !13508)
!13510 = !DILocation(line: 328, column: 27, scope: !13497)
!13511 = !DILocation(line: 328, column: 65, scope: !13497)
!13512 = !DILocation(line: 328, column: 2, scope: !13497)
!13513 = !DILocation(line: 0, scope: !13306, inlinedAt: !13514)
!13514 = distinct !DILocation(line: 329, column: 3, scope: !13515)
!13515 = distinct !DILexicalBlock(scope: !13497, file: !13089, line: 328, column: 74)
!13516 = !DILocation(line: 67, column: 15, scope: !13306, inlinedAt: !13514)
!13517 = !DILocation(line: 67, column: 33, scope: !13306, inlinedAt: !13514)
!13518 = !DILocation(line: 330, column: 3, scope: !13515)
!13519 = distinct !{!13519, !13512, !13520}
!13520 = !DILocation(line: 331, column: 2, scope: !13497)
!13521 = !DILocation(line: 323, column: 27, scope: !13497)
!13522 = !DILocation(line: 333, column: 8, scope: !13497)
!13523 = !DILocation(line: 333, column: 18, scope: !13497)
!13524 = !DILocation(line: 334, column: 25, scope: !13497)
!13525 = !DILocation(line: 334, column: 8, scope: !13497)
!13526 = !DILocation(line: 334, column: 17, scope: !13497)
!13527 = !DILocation(line: 336, column: 2, scope: !13497)
!13528 = !DILocation(line: 337, column: 1, scope: !13497)
!13529 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2346, file: !2346, line: 93, type: !13530, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13532)
!13530 = !DISubroutineType(types: !13531)
!13531 = !{!728, !2241, !2241}
!13532 = !{!13533, !13534, !13535, !13536}
!13533 = !DILocalVariable(name: "thread_1", arg: 1, scope: !13529, file: !2346, line: 93, type: !2241)
!13534 = !DILocalVariable(name: "thread_2", arg: 2, scope: !13529, file: !2346, line: 94, type: !2241)
!13535 = !DILocalVariable(name: "b1", scope: !13529, file: !2346, line: 97, type: !728)
!13536 = !DILocalVariable(name: "b2", scope: !13529, file: !2346, line: 98, type: !728)
!13537 = !DILocation(line: 0, scope: !13529)
!13538 = !DILocation(line: 97, column: 30, scope: !13529)
!13539 = !DILocation(line: 98, column: 30, scope: !13529)
!13540 = !DILocation(line: 100, column: 9, scope: !13541)
!13541 = distinct !DILexicalBlock(scope: !13529, file: !2346, line: 100, column: 6)
!13542 = !DILocation(line: 100, column: 6, scope: !13529)
!13543 = !DILocation(line: 125, column: 1, scope: !13529)
!13544 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2346, file: !2346, line: 428, type: !13545, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13547)
!13545 = !DISubroutineType(types: !13546)
!13546 = !{null, !2241}
!13547 = !{!13548}
!13548 = !DILocalVariable(name: "curr", arg: 1, scope: !13544, file: !2346, line: 428, type: !2241)
!13549 = !DILocation(line: 0, scope: !13544)
!13550 = !DILocation(line: 434, column: 6, scope: !13551)
!13551 = distinct !DILexicalBlock(scope: !13544, file: !2346, line: 434, column: 6)
!13552 = !DILocation(line: 434, column: 23, scope: !13551)
!13553 = !DILocation(line: 434, column: 6, scope: !13544)
!13554 = !DILocation(line: 435, column: 50, scope: !13555)
!13555 = distinct !DILexicalBlock(scope: !13551, file: !2346, line: 434, column: 29)
!13556 = !DILocation(line: 435, column: 48, scope: !13555)
!13557 = !DILocation(line: 435, column: 29, scope: !13555)
!13558 = !DILocation(line: 436, column: 24, scope: !13555)
!13559 = !DILocation(line: 436, column: 3, scope: !13555)
!13560 = !DILocation(line: 437, column: 2, scope: !13555)
!13561 = !DILocation(line: 438, column: 1, scope: !13544)
!13562 = distinct !DISubprogram(name: "slice_time", scope: !2346, file: !2346, line: 407, type: !13563, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13565)
!13563 = !DISubroutineType(types: !13564)
!13564 = !{!107, !2241}
!13565 = !{!13566, !13567}
!13566 = !DILocalVariable(name: "curr", arg: 1, scope: !13562, file: !2346, line: 407, type: !2241)
!13567 = !DILocalVariable(name: "ret", scope: !13562, file: !2346, line: 409, type: !107)
!13568 = !DILocation(line: 0, scope: !13562)
!13569 = !DILocation(line: 409, column: 12, scope: !13562)
!13570 = !DILocation(line: 416, column: 2, scope: !13562)
!13571 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2346, file: !2346, line: 440, type: !13572, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13574)
!13572 = !DISubroutineType(types: !13573)
!13573 = !{null, !728, !107}
!13574 = !{!13575, !13576, !13577, !13583}
!13575 = !DILocalVariable(name: "slice", arg: 1, scope: !13571, file: !2346, line: 440, type: !728)
!13576 = !DILocalVariable(name: "prio", arg: 2, scope: !13571, file: !2346, line: 440, type: !107)
!13577 = !DILocalVariable(name: "__i", scope: !13578, file: !2346, line: 442, type: !13579)
!13578 = distinct !DILexicalBlock(scope: !13571, file: !2346, line: 442, column: 2)
!13579 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !249, line: 106, baseType: !13580)
!13580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !249, line: 32, size: 32, elements: !13581)
!13581 = !{!13582}
!13582 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13580, file: !249, line: 33, baseType: !107, size: 32)
!13583 = !DILocalVariable(name: "__key", scope: !13578, file: !2346, line: 442, type: !13579)
!13584 = !DILocation(line: 0, scope: !13571)
!13585 = !DILocation(line: 0, scope: !13578)
!13586 = !DILocalVariable(name: "l", arg: 1, scope: !13587, file: !249, line: 136, type: !13590)
!13587 = distinct !DISubprogram(name: "k_spin_lock", scope: !249, file: !249, line: 136, type: !13588, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13591)
!13588 = !DISubroutineType(types: !13589)
!13589 = !{!13579, !13590}
!13590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 32)
!13591 = !{!13586, !13592}
!13592 = !DILocalVariable(name: "k", scope: !13587, file: !249, line: 139, type: !13579)
!13593 = !DILocation(line: 0, scope: !13587, inlinedAt: !13594)
!13594 = distinct !DILocation(line: 442, column: 2, scope: !13578)
!13595 = !DILocation(line: 55, column: 2, scope: !13596, inlinedAt: !13600)
!13596 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5913, file: !5913, line: 42, type: !5914, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13597)
!13597 = !{!13598, !13599}
!13598 = !DILocalVariable(name: "key", scope: !13596, file: !5913, line: 44, type: !32)
!13599 = !DILocalVariable(name: "tmp", scope: !13596, file: !5913, line: 53, type: !32)
!13600 = distinct !DILocation(line: 145, column: 10, scope: !13587, inlinedAt: !13594)
!13601 = !{i64 2266202}
!13602 = !DILocation(line: 0, scope: !13596, inlinedAt: !13600)
!13603 = !DILocation(line: 443, column: 29, scope: !13604)
!13604 = distinct !DILexicalBlock(scope: !13605, file: !2346, line: 442, column: 26)
!13605 = distinct !DILexicalBlock(scope: !13578, file: !2346, line: 442, column: 2)
!13606 = !DILocation(line: 444, column: 17, scope: !13604)
!13607 = !DILocation(line: 445, column: 51, scope: !13608)
!13608 = distinct !DILexicalBlock(scope: !13604, file: !2346, line: 445, column: 7)
!13609 = !DILocation(line: 445, column: 7, scope: !13604)
!13610 = !DILocation(line: 0, scope: !13604)
!13611 = !DILocation(line: 451, column: 18, scope: !13604)
!13612 = !DILocation(line: 452, column: 3, scope: !13604)
!13613 = !DILocalVariable(name: "key", arg: 2, scope: !13614, file: !249, line: 190, type: !13579)
!13614 = distinct !DISubprogram(name: "k_spin_unlock", scope: !249, file: !249, line: 189, type: !13615, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13617)
!13615 = !DISubroutineType(types: !13616)
!13616 = !{null, !13590, !13579}
!13617 = !{!13618, !13613}
!13618 = !DILocalVariable(name: "l", arg: 1, scope: !13614, file: !249, line: 189, type: !13590)
!13619 = !DILocation(line: 0, scope: !13614, inlinedAt: !13620)
!13620 = distinct !DILocation(line: 442, column: 2, scope: !13605)
!13621 = !DILocalVariable(name: "key", arg: 1, scope: !13622, file: !5913, line: 84, type: !32)
!13622 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5913, file: !5913, line: 84, type: !5924, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13623)
!13623 = !{!13621}
!13624 = !DILocation(line: 0, scope: !13622, inlinedAt: !13625)
!13625 = distinct !DILocation(line: 215, column: 2, scope: !13614, inlinedAt: !13620)
!13626 = !DILocation(line: 95, column: 2, scope: !13622, inlinedAt: !13625)
!13627 = !{i64 2267019}
!13628 = !DILocation(line: 454, column: 1, scope: !13571)
!13629 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !12979, file: !12979, line: 389, type: !7094, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13630)
!13630 = !{!13631}
!13631 = !DILocalVariable(name: "t", arg: 1, scope: !13629, file: !12979, line: 389, type: !162)
!13632 = !DILocation(line: 0, scope: !13629)
!13633 = !DILocalVariable(name: "t", arg: 1, scope: !13634, file: !12979, line: 102, type: !1500)
!13634 = distinct !DISubprogram(name: "z_tmcvt", scope: !12979, file: !12979, line: 102, type: !12987, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13635)
!13635 = !{!13633, !13636, !13637, !13638, !13639, !13640, !13641, !13642, !13643, !13644, !13645}
!13636 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13634, file: !12979, line: 102, type: !162)
!13637 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13634, file: !12979, line: 103, type: !162)
!13638 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13634, file: !12979, line: 103, type: !136)
!13639 = !DILocalVariable(name: "result32", arg: 5, scope: !13634, file: !12979, line: 104, type: !136)
!13640 = !DILocalVariable(name: "round_up", arg: 6, scope: !13634, file: !12979, line: 104, type: !136)
!13641 = !DILocalVariable(name: "round_off", arg: 7, scope: !13634, file: !12979, line: 105, type: !136)
!13642 = !DILocalVariable(name: "mul_ratio", scope: !13634, file: !12979, line: 107, type: !136)
!13643 = !DILocalVariable(name: "div_ratio", scope: !13634, file: !12979, line: 109, type: !136)
!13644 = !DILocalVariable(name: "off", scope: !13634, file: !12979, line: 116, type: !1500)
!13645 = !DILocalVariable(name: "rdivisor", scope: !13646, file: !12979, line: 119, type: !162)
!13646 = distinct !DILexicalBlock(scope: !13647, file: !12979, line: 118, column: 18)
!13647 = distinct !DILexicalBlock(scope: !13634, file: !12979, line: 118, column: 6)
!13648 = !DILocation(line: 0, scope: !13634, inlinedAt: !13649)
!13649 = distinct !DILocation(line: 392, column: 9, scope: !13629)
!13650 = !DILocation(line: 143, column: 25, scope: !13651, inlinedAt: !13649)
!13651 = distinct !DILexicalBlock(scope: !13652, file: !12979, line: 142, column: 17)
!13652 = distinct !DILexicalBlock(scope: !13653, file: !12979, line: 142, column: 7)
!13653 = distinct !DILexicalBlock(scope: !13654, file: !12979, line: 141, column: 24)
!13654 = distinct !DILexicalBlock(scope: !13655, file: !12979, line: 141, column: 13)
!13655 = distinct !DILexicalBlock(scope: !13634, file: !12979, line: 134, column: 6)
!13656 = !DILocation(line: 392, column: 2, scope: !13629)
!13657 = distinct !DISubprogram(name: "z_time_slice", scope: !2346, file: !2346, line: 502, type: !7731, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13658)
!13658 = !{!13659, !13660}
!13659 = !DILocalVariable(name: "ticks", arg: 1, scope: !13657, file: !2346, line: 502, type: !107)
!13660 = !DILocalVariable(name: "key", scope: !13657, file: !2346, line: 511, type: !13579)
!13661 = !DILocation(line: 0, scope: !13657)
!13662 = !DILocation(line: 0, scope: !13587, inlinedAt: !13663)
!13663 = distinct !DILocation(line: 511, column: 25, scope: !13657)
!13664 = !DILocation(line: 55, column: 2, scope: !13596, inlinedAt: !13665)
!13665 = distinct !DILocation(line: 145, column: 10, scope: !13587, inlinedAt: !13663)
!13666 = !DILocation(line: 0, scope: !13596, inlinedAt: !13665)
!13667 = !DILocation(line: 514, column: 6, scope: !13668)
!13668 = distinct !DILexicalBlock(scope: !13657, file: !2346, line: 514, column: 6)
!13669 = !DILocation(line: 514, column: 25, scope: !13668)
!13670 = !DILocation(line: 514, column: 22, scope: !13668)
!13671 = !DILocation(line: 514, column: 6, scope: !13657)
!13672 = !DILocation(line: 515, column: 3, scope: !13673)
!13673 = distinct !DILexicalBlock(scope: !13668, file: !2346, line: 514, column: 35)
!13674 = !DILocation(line: 0, scope: !13614, inlinedAt: !13675)
!13675 = distinct !DILocation(line: 516, column: 3, scope: !13673)
!13676 = !DILocation(line: 0, scope: !13622, inlinedAt: !13677)
!13677 = distinct !DILocation(line: 215, column: 2, scope: !13614, inlinedAt: !13675)
!13678 = !DILocation(line: 95, column: 2, scope: !13622, inlinedAt: !13677)
!13679 = !DILocation(line: 517, column: 3, scope: !13673)
!13680 = !DILocation(line: 519, column: 18, scope: !13657)
!13681 = !DILocation(line: 522, column: 6, scope: !13682)
!13682 = distinct !DILexicalBlock(scope: !13657, file: !2346, line: 522, column: 6)
!13683 = !DILocation(line: 522, column: 27, scope: !13682)
!13684 = !DILocation(line: 522, column: 30, scope: !13682)
!13685 = !DILocation(line: 522, column: 6, scope: !13657)
!13686 = !DILocation(line: 523, column: 30, scope: !13687)
!13687 = distinct !DILexicalBlock(scope: !13688, file: !2346, line: 523, column: 7)
!13688 = distinct !DILexicalBlock(scope: !13682, file: !2346, line: 522, column: 51)
!13689 = !DILocation(line: 523, column: 13, scope: !13687)
!13690 = !DILocation(line: 523, column: 7, scope: !13688)
!13691 = !DILocation(line: 530, column: 10, scope: !13692)
!13692 = distinct !DILexicalBlock(scope: !13687, file: !2346, line: 523, column: 43)
!13693 = !DILocation(line: 531, column: 3, scope: !13692)
!13694 = !DILocation(line: 532, column: 30, scope: !13695)
!13695 = distinct !DILexicalBlock(scope: !13687, file: !2346, line: 531, column: 10)
!13696 = !DILocation(line: 535, column: 29, scope: !13697)
!13697 = distinct !DILexicalBlock(scope: !13682, file: !2346, line: 534, column: 9)
!13698 = !DILocation(line: 0, scope: !13614, inlinedAt: !13699)
!13699 = distinct !DILocation(line: 537, column: 2, scope: !13657)
!13700 = !DILocation(line: 0, scope: !13622, inlinedAt: !13701)
!13701 = distinct !DILocation(line: 215, column: 2, scope: !13614, inlinedAt: !13699)
!13702 = !DILocation(line: 95, column: 2, scope: !13622, inlinedAt: !13701)
!13703 = !DILocation(line: 538, column: 1, scope: !13657)
!13704 = distinct !DISubprogram(name: "sliceable", scope: !2346, file: !2346, line: 468, type: !13705, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13707)
!13705 = !DISubroutineType(types: !13706)
!13706 = !{!136, !2241}
!13707 = !{!13708, !13709}
!13708 = !DILocalVariable(name: "thread", arg: 1, scope: !13704, file: !2346, line: 468, type: !2241)
!13709 = !DILocalVariable(name: "ret", scope: !13704, file: !2346, line: 470, type: !136)
!13710 = !DILocation(line: 0, scope: !13704)
!13711 = !DILocation(line: 470, column: 13, scope: !13704)
!13712 = !DILocation(line: 471, column: 3, scope: !13704)
!13713 = !DILocation(line: 471, column: 7, scope: !13704)
!13714 = !DILocation(line: 472, column: 3, scope: !13704)
!13715 = !DILocation(line: 472, column: 37, scope: !13704)
!13716 = !DILocation(line: 472, column: 24, scope: !13704)
!13717 = !DILocation(line: 472, column: 43, scope: !13704)
!13718 = !DILocation(line: 472, column: 7, scope: !13704)
!13719 = !DILocation(line: 473, column: 3, scope: !13704)
!13720 = !DILocation(line: 473, column: 7, scope: !13704)
!13721 = !DILocation(line: 473, column: 6, scope: !13704)
!13722 = !DILocation(line: 479, column: 2, scope: !13704)
!13723 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2346, file: !2346, line: 482, type: !13724, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13726)
!13724 = !DISubroutineType(types: !13725)
!13725 = !{!13579, !13579}
!13726 = !{!13727, !13728}
!13727 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !13723, file: !2346, line: 482, type: !13579)
!13728 = !DILocalVariable(name: "curr", scope: !13723, file: !2346, line: 484, type: !2241)
!13729 = !DILocation(line: 0, scope: !13723)
!13730 = !DILocation(line: 484, column: 26, scope: !13723)
!13731 = !DILocation(line: 493, column: 7, scope: !13732)
!13732 = distinct !DILexicalBlock(scope: !13723, file: !2346, line: 493, column: 6)
!13733 = !DILocation(line: 493, column: 6, scope: !13723)
!13734 = !DILocation(line: 494, column: 3, scope: !13735)
!13735 = distinct !DILexicalBlock(scope: !13732, file: !2346, line: 493, column: 49)
!13736 = !DILocation(line: 495, column: 2, scope: !13735)
!13737 = !DILocation(line: 496, column: 2, scope: !13723)
!13738 = !DILocation(line: 499, column: 1, scope: !13723)
!13739 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12420, file: !12420, line: 106, type: !13705, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13740)
!13740 = !{!13741, !13742}
!13741 = !DILocalVariable(name: "thread", arg: 1, scope: !13739, file: !12420, line: 106, type: !2241)
!13742 = !DILocalVariable(name: "state", scope: !13739, file: !12420, line: 108, type: !133)
!13743 = !DILocation(line: 0, scope: !13739)
!13744 = !DILocation(line: 108, column: 31, scope: !13739)
!13745 = !DILocation(line: 110, column: 16, scope: !13739)
!13746 = !DILocation(line: 111, column: 41, scope: !13739)
!13747 = !DILocation(line: 110, column: 2, scope: !13739)
!13748 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2346, file: !2346, line: 393, type: !13545, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13749)
!13749 = !{!13750}
!13750 = !DILocalVariable(name: "thread", arg: 1, scope: !13748, file: !2346, line: 393, type: !2241)
!13751 = !DILocation(line: 0, scope: !13748)
!13752 = !DILocation(line: 395, column: 6, scope: !13753)
!13753 = distinct !DILexicalBlock(scope: !13748, file: !2346, line: 395, column: 6)
!13754 = !DILocation(line: 395, column: 6, scope: !13748)
!13755 = !DILocalVariable(name: "thread", arg: 1, scope: !13756, file: !2346, line: 264, type: !2241)
!13756 = distinct !DISubprogram(name: "dequeue_thread", scope: !2346, file: !2346, line: 264, type: !13545, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13757)
!13757 = !{!13755}
!13758 = !DILocation(line: 0, scope: !13756, inlinedAt: !13759)
!13759 = distinct !DILocation(line: 396, column: 3, scope: !13760)
!13760 = distinct !DILexicalBlock(scope: !13753, file: !2346, line: 395, column: 34)
!13761 = !DILocation(line: 266, column: 15, scope: !13756, inlinedAt: !13759)
!13762 = !DILocation(line: 266, column: 28, scope: !13756, inlinedAt: !13759)
!13763 = !DILocalVariable(name: "thread", arg: 1, scope: !13764, file: !2346, line: 232, type: !2241)
!13764 = distinct !DISubprogram(name: "runq_remove", scope: !2346, file: !2346, line: 232, type: !13545, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13765)
!13765 = !{!13763}
!13766 = !DILocation(line: 0, scope: !13764, inlinedAt: !13767)
!13767 = distinct !DILocation(line: 268, column: 3, scope: !13768, inlinedAt: !13759)
!13768 = distinct !DILexicalBlock(scope: !13769, file: !2346, line: 267, column: 35)
!13769 = distinct !DILexicalBlock(scope: !13756, file: !2346, line: 267, column: 6)
!13770 = !DILocation(line: 234, column: 2, scope: !13764, inlinedAt: !13767)
!13771 = !DILocation(line: 397, column: 2, scope: !13760)
!13772 = !DILocalVariable(name: "thread", arg: 1, scope: !13773, file: !2346, line: 250, type: !2241)
!13773 = distinct !DISubprogram(name: "queue_thread", scope: !2346, file: !2346, line: 250, type: !13545, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13774)
!13774 = !{!13772}
!13775 = !DILocation(line: 0, scope: !13773, inlinedAt: !13776)
!13776 = distinct !DILocation(line: 398, column: 2, scope: !13748)
!13777 = !DILocation(line: 252, column: 15, scope: !13773, inlinedAt: !13776)
!13778 = !DILocation(line: 252, column: 28, scope: !13773, inlinedAt: !13776)
!13779 = !DILocalVariable(name: "thread", arg: 1, scope: !13780, file: !2346, line: 227, type: !2241)
!13780 = distinct !DISubprogram(name: "runq_add", scope: !2346, file: !2346, line: 227, type: !13545, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13781)
!13781 = !{!13779}
!13782 = !DILocation(line: 0, scope: !13780, inlinedAt: !13783)
!13783 = distinct !DILocation(line: 254, column: 3, scope: !13784, inlinedAt: !13776)
!13784 = distinct !DILexicalBlock(scope: !13785, file: !2346, line: 253, column: 35)
!13785 = distinct !DILexicalBlock(scope: !13773, file: !2346, line: 253, column: 6)
!13786 = !DILocalVariable(name: "pq", arg: 1, scope: !13787, file: !2346, line: 181, type: !13790)
!13787 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2346, file: !2346, line: 181, type: !13788, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13791)
!13788 = !DISubroutineType(types: !13789)
!13789 = !{null, !13790, !2241}
!13790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2277, size: 32)
!13791 = !{!13786, !13792, !13793}
!13792 = !DILocalVariable(name: "thread", arg: 2, scope: !13787, file: !2346, line: 182, type: !2241)
!13793 = !DILocalVariable(name: "t", scope: !13787, file: !2346, line: 184, type: !2241)
!13794 = !DILocation(line: 0, scope: !13787, inlinedAt: !13795)
!13795 = distinct !DILocation(line: 229, column: 2, scope: !13780, inlinedAt: !13783)
!13796 = !DILocation(line: 188, column: 2, scope: !13797, inlinedAt: !13795)
!13797 = distinct !DILexicalBlock(scope: !13787, file: !2346, line: 188, column: 2)
!13798 = !DILocation(line: 188, column: 2, scope: !13799, inlinedAt: !13795)
!13799 = distinct !DILexicalBlock(scope: !13797, file: !2346, line: 188, column: 2)
!13800 = !DILocation(line: 0, scope: !13797, inlinedAt: !13795)
!13801 = !DILocation(line: 189, column: 7, scope: !13802, inlinedAt: !13795)
!13802 = distinct !DILexicalBlock(scope: !13803, file: !2346, line: 189, column: 7)
!13803 = distinct !DILexicalBlock(scope: !13799, file: !2346, line: 188, column: 56)
!13804 = !DILocation(line: 189, column: 35, scope: !13802, inlinedAt: !13795)
!13805 = !DILocation(line: 189, column: 7, scope: !13803, inlinedAt: !13795)
!13806 = !DILocation(line: 191, column: 21, scope: !13807, inlinedAt: !13795)
!13807 = distinct !DILexicalBlock(scope: !13802, file: !2346, line: 189, column: 40)
!13808 = !DILocation(line: 190, column: 4, scope: !13807, inlinedAt: !13795)
!13809 = !DILocation(line: 192, column: 4, scope: !13807, inlinedAt: !13795)
!13810 = distinct !{!13810, !13796, !13811}
!13811 = !DILocation(line: 194, column: 2, scope: !13797, inlinedAt: !13795)
!13812 = !DILocation(line: 196, column: 37, scope: !13787, inlinedAt: !13795)
!13813 = !DILocation(line: 196, column: 2, scope: !13787, inlinedAt: !13795)
!13814 = !DILocation(line: 197, column: 1, scope: !13787, inlinedAt: !13795)
!13815 = !DILocation(line: 399, column: 25, scope: !13748)
!13816 = !DILocation(line: 399, column: 22, scope: !13748)
!13817 = !DILocation(line: 399, column: 2, scope: !13748)
!13818 = !DILocation(line: 400, column: 1, scope: !13748)
!13819 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12420, file: !12420, line: 136, type: !13705, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13820)
!13820 = !{!13821}
!13821 = !DILocalVariable(name: "thread", arg: 1, scope: !13819, file: !12420, line: 136, type: !2241)
!13822 = !DILocation(line: 0, scope: !13819)
!13823 = !DILocation(line: 138, column: 9, scope: !13819)
!13824 = !DILocation(line: 138, column: 2, scope: !13819)
!13825 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2346, file: !2346, line: 1137, type: !13788, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13826)
!13826 = !{!13827, !13828}
!13827 = !DILocalVariable(name: "pq", arg: 1, scope: !13825, file: !2346, line: 1137, type: !13790)
!13828 = !DILocalVariable(name: "thread", arg: 2, scope: !13825, file: !2346, line: 1137, type: !2241)
!13829 = !DILocation(line: 0, scope: !13825)
!13830 = !DILocation(line: 1141, column: 33, scope: !13825)
!13831 = !DILocation(line: 1141, column: 2, scope: !13825)
!13832 = !DILocation(line: 1142, column: 1, scope: !13825)
!13833 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !233, file: !233, line: 294, type: !13834, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13836)
!13834 = !DISubroutineType(types: !13835)
!13835 = !{!2342, !13790}
!13836 = !{!13837}
!13837 = !DILocalVariable(name: "list", arg: 1, scope: !13833, file: !233, line: 294, type: !13790)
!13838 = !DILocation(line: 0, scope: !13833)
!13839 = !DILocation(line: 296, column: 9, scope: !13833)
!13840 = !DILocation(line: 296, column: 49, scope: !13833)
!13841 = !DILocation(line: 296, column: 2, scope: !13833)
!13842 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !233, file: !233, line: 443, type: !13843, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13845)
!13843 = !DISubroutineType(types: !13844)
!13844 = !{null, !2342, !2342}
!13845 = !{!13846, !13847, !13848}
!13846 = !DILocalVariable(name: "successor", arg: 1, scope: !13842, file: !233, line: 443, type: !2342)
!13847 = !DILocalVariable(name: "node", arg: 2, scope: !13842, file: !233, line: 443, type: !2342)
!13848 = !DILocalVariable(name: "prev", scope: !13842, file: !233, line: 445, type: !13849)
!13849 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2342)
!13850 = !DILocation(line: 0, scope: !13842)
!13851 = !DILocation(line: 445, column: 39, scope: !13842)
!13852 = !DILocation(line: 447, column: 8, scope: !13842)
!13853 = !DILocation(line: 447, column: 13, scope: !13842)
!13854 = !DILocation(line: 448, column: 8, scope: !13842)
!13855 = !DILocation(line: 448, column: 13, scope: !13842)
!13856 = !DILocation(line: 449, column: 8, scope: !13842)
!13857 = !DILocation(line: 449, column: 13, scope: !13842)
!13858 = !DILocation(line: 450, column: 18, scope: !13842)
!13859 = !DILocation(line: 451, column: 1, scope: !13842)
!13860 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !233, file: !233, line: 341, type: !13861, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13863)
!13861 = !DISubroutineType(types: !13862)
!13862 = !{!2342, !13790, !2342}
!13863 = !{!13864, !13865}
!13864 = !DILocalVariable(name: "list", arg: 1, scope: !13860, file: !233, line: 341, type: !13790)
!13865 = !DILocalVariable(name: "node", arg: 2, scope: !13860, file: !233, line: 342, type: !2342)
!13866 = !DILocation(line: 0, scope: !13860)
!13867 = !DILocation(line: 344, column: 15, scope: !13860)
!13868 = !DILocation(line: 344, column: 9, scope: !13860)
!13869 = !DILocation(line: 344, column: 26, scope: !13860)
!13870 = !DILocation(line: 344, column: 2, scope: !13860)
!13871 = distinct !DISubprogram(name: "sys_dlist_append", scope: !233, file: !233, line: 404, type: !13872, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13874)
!13872 = !DISubroutineType(types: !13873)
!13873 = !{null, !13790, !2342}
!13874 = !{!13875, !13876, !13877}
!13875 = !DILocalVariable(name: "list", arg: 1, scope: !13871, file: !233, line: 404, type: !13790)
!13876 = !DILocalVariable(name: "node", arg: 2, scope: !13871, file: !233, line: 404, type: !2342)
!13877 = !DILocalVariable(name: "tail", scope: !13871, file: !233, line: 406, type: !13849)
!13878 = !DILocation(line: 0, scope: !13871)
!13879 = !DILocation(line: 406, column: 34, scope: !13871)
!13880 = !DILocation(line: 408, column: 8, scope: !13871)
!13881 = !DILocation(line: 408, column: 13, scope: !13871)
!13882 = !DILocation(line: 409, column: 8, scope: !13871)
!13883 = !DILocation(line: 409, column: 13, scope: !13871)
!13884 = !DILocation(line: 411, column: 8, scope: !13871)
!13885 = !DILocation(line: 411, column: 13, scope: !13871)
!13886 = !DILocation(line: 412, column: 13, scope: !13871)
!13887 = !DILocation(line: 413, column: 1, scope: !13871)
!13888 = distinct !DISubprogram(name: "update_cache", scope: !2346, file: !2346, line: 559, type: !7731, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13889)
!13889 = !{!13890, !13891}
!13890 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !13888, file: !2346, line: 559, type: !107)
!13891 = !DILocalVariable(name: "thread", scope: !13888, file: !2346, line: 562, type: !2241)
!13892 = !DILocation(line: 0, scope: !13888)
!13893 = !DILocation(line: 239, column: 9, scope: !13894, inlinedAt: !13897)
!13894 = distinct !DISubprogram(name: "runq_best", scope: !2346, file: !2346, line: 237, type: !13895, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !250)
!13895 = !DISubroutineType(types: !13896)
!13896 = !{!2241}
!13897 = distinct !DILocation(line: 314, column: 28, scope: !13898, inlinedAt: !13901)
!13898 = distinct !DISubprogram(name: "next_up", scope: !2346, file: !2346, line: 312, type: !13895, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13899)
!13899 = !{!13900}
!13900 = !DILocalVariable(name: "thread", scope: !13898, file: !2346, line: 314, type: !2241)
!13901 = distinct !DILocation(line: 562, column: 28, scope: !13888)
!13902 = !DILocation(line: 0, scope: !13898, inlinedAt: !13901)
!13903 = !DILocation(line: 340, column: 17, scope: !13898, inlinedAt: !13901)
!13904 = !DILocation(line: 340, column: 9, scope: !13898, inlinedAt: !13901)
!13905 = !DILocalVariable(name: "thread", arg: 1, scope: !13906, file: !2346, line: 127, type: !2241)
!13906 = distinct !DISubprogram(name: "should_preempt", scope: !2346, file: !2346, line: 127, type: !13907, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13909)
!13907 = !DISubroutineType(types: !13908)
!13908 = !{!136, !2241, !107}
!13909 = !{!13905, !13910}
!13910 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !13906, file: !2346, line: 128, type: !107)
!13911 = !DILocation(line: 0, scope: !13906, inlinedAt: !13912)
!13912 = distinct !DILocation(line: 564, column: 6, scope: !13913)
!13913 = distinct !DILexicalBlock(scope: !13888, file: !2346, line: 564, column: 6)
!13914 = !DILocation(line: 133, column: 17, scope: !13915, inlinedAt: !13912)
!13915 = distinct !DILexicalBlock(scope: !13906, file: !2346, line: 133, column: 6)
!13916 = !DILocation(line: 0, scope: !13913)
!13917 = !DILocation(line: 133, column: 6, scope: !13906, inlinedAt: !13912)
!13918 = !DILocation(line: 140, column: 6, scope: !13919, inlinedAt: !13912)
!13919 = distinct !DILexicalBlock(scope: !13906, file: !2346, line: 140, column: 6)
!13920 = !DILocation(line: 140, column: 6, scope: !13906, inlinedAt: !13912)
!13921 = !DILocation(line: 150, column: 9, scope: !13922, inlinedAt: !13912)
!13922 = distinct !DILexicalBlock(scope: !13906, file: !2346, line: 149, column: 6)
!13923 = !DILocation(line: 149, column: 6, scope: !13906, inlinedAt: !13912)
!13924 = !DILocation(line: 157, column: 6, scope: !13925, inlinedAt: !13912)
!13925 = distinct !DILexicalBlock(scope: !13906, file: !2346, line: 157, column: 6)
!13926 = !DILocation(line: 564, column: 6, scope: !13888)
!13927 = !DILocation(line: 566, column: 14, scope: !13928)
!13928 = distinct !DILexicalBlock(scope: !13929, file: !2346, line: 566, column: 7)
!13929 = distinct !DILexicalBlock(scope: !13913, file: !2346, line: 564, column: 42)
!13930 = !DILocation(line: 566, column: 7, scope: !13929)
!13931 = !DILocation(line: 567, column: 4, scope: !13932)
!13932 = distinct !DILexicalBlock(scope: !13928, file: !2346, line: 566, column: 27)
!13933 = !DILocation(line: 568, column: 3, scope: !13932)
!13934 = !DILocation(line: 585, column: 1, scope: !13888)
!13935 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2346, file: !2346, line: 1144, type: !13936, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13938)
!13936 = !DISubroutineType(types: !13937)
!13937 = !{!2241, !13790}
!13938 = !{!13939, !13940, !13941}
!13939 = !DILocalVariable(name: "pq", arg: 1, scope: !13935, file: !2346, line: 1144, type: !13790)
!13940 = !DILocalVariable(name: "thread", scope: !13935, file: !2346, line: 1146, type: !2241)
!13941 = !DILocalVariable(name: "n", scope: !13935, file: !2346, line: 1147, type: !2342)
!13942 = !DILocation(line: 0, scope: !13935)
!13943 = !DILocation(line: 1147, column: 19, scope: !13935)
!13944 = !DILocation(line: 1152, column: 2, scope: !13935)
!13945 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12420, file: !12420, line: 115, type: !13705, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13946)
!13946 = !{!13947}
!13947 = !DILocalVariable(name: "thread", arg: 1, scope: !13945, file: !12420, line: 115, type: !2241)
!13948 = !DILocation(line: 0, scope: !13945)
!13949 = !DILocation(line: 117, column: 46, scope: !13945)
!13950 = !DILocation(line: 117, column: 10, scope: !13945)
!13951 = !DILocation(line: 117, column: 9, scope: !13945)
!13952 = !DILocation(line: 117, column: 2, scope: !13945)
!13953 = distinct !DISubprogram(name: "is_preempt", scope: !2346, file: !2346, line: 62, type: !13563, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13954)
!13954 = !{!13955}
!13955 = !DILocalVariable(name: "thread", arg: 1, scope: !13953, file: !2346, line: 62, type: !2241)
!13956 = !DILocation(line: 0, scope: !13953)
!13957 = !DILocation(line: 65, column: 22, scope: !13953)
!13958 = !DILocation(line: 65, column: 30, scope: !13953)
!13959 = !DILocation(line: 65, column: 2, scope: !13953)
!13960 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12812, file: !12812, line: 35, type: !13961, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13965)
!13961 = !DISubroutineType(types: !13962)
!13962 = !{!136, !13963}
!13963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13964, size: 32)
!13964 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2292)
!13965 = !{!13966}
!13966 = !DILocalVariable(name: "to", arg: 1, scope: !13960, file: !12812, line: 35, type: !13963)
!13967 = !DILocation(line: 0, scope: !13960)
!13968 = !DILocation(line: 37, column: 35, scope: !13960)
!13969 = !DILocation(line: 37, column: 10, scope: !13960)
!13970 = !DILocation(line: 37, column: 9, scope: !13960)
!13971 = !DILocation(line: 37, column: 2, scope: !13960)
!13972 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !233, file: !233, line: 225, type: !13973, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13977)
!13973 = !DISubroutineType(types: !13974)
!13974 = !{!136, !13975}
!13975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13976, size: 32)
!13976 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2251)
!13977 = !{!13978}
!13978 = !DILocalVariable(name: "node", arg: 1, scope: !13972, file: !233, line: 225, type: !13975)
!13979 = !DILocation(line: 0, scope: !13972)
!13980 = !DILocation(line: 227, column: 15, scope: !13972)
!13981 = !DILocation(line: 227, column: 20, scope: !13972)
!13982 = !DILocation(line: 227, column: 2, scope: !13972)
!13983 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !233, file: !233, line: 325, type: !13861, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13984)
!13984 = !{!13985, !13986}
!13985 = !DILocalVariable(name: "list", arg: 1, scope: !13983, file: !233, line: 325, type: !13790)
!13986 = !DILocalVariable(name: "node", arg: 2, scope: !13983, file: !233, line: 326, type: !2342)
!13987 = !DILocation(line: 0, scope: !13983)
!13988 = !DILocation(line: 328, column: 24, scope: !13983)
!13989 = !DILocation(line: 328, column: 15, scope: !13983)
!13990 = !DILocation(line: 328, column: 9, scope: !13983)
!13991 = !DILocation(line: 328, column: 45, scope: !13983)
!13992 = !DILocation(line: 328, column: 2, scope: !13983)
!13993 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !233, file: !233, line: 266, type: !13994, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13996)
!13994 = !DISubroutineType(types: !13995)
!13995 = !{!136, !13790}
!13996 = !{!13997}
!13997 = !DILocalVariable(name: "list", arg: 1, scope: !13993, file: !233, line: 266, type: !13790)
!13998 = !DILocation(line: 0, scope: !13993)
!13999 = !DILocation(line: 268, column: 15, scope: !13993)
!14000 = !DILocation(line: 268, column: 20, scope: !13993)
!14001 = !DILocation(line: 268, column: 2, scope: !13993)
!14002 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !233, file: !233, line: 496, type: !14003, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14005)
!14003 = !DISubroutineType(types: !14004)
!14004 = !{null, !2342}
!14005 = !{!14006, !14007, !14008}
!14006 = !DILocalVariable(name: "node", arg: 1, scope: !14002, file: !233, line: 496, type: !2342)
!14007 = !DILocalVariable(name: "prev", scope: !14002, file: !233, line: 498, type: !13849)
!14008 = !DILocalVariable(name: "next", scope: !14002, file: !233, line: 499, type: !13849)
!14009 = !DILocation(line: 0, scope: !14002)
!14010 = !DILocation(line: 498, column: 34, scope: !14002)
!14011 = !DILocation(line: 499, column: 34, scope: !14002)
!14012 = !DILocation(line: 501, column: 8, scope: !14002)
!14013 = !DILocation(line: 501, column: 13, scope: !14002)
!14014 = !DILocation(line: 502, column: 8, scope: !14002)
!14015 = !DILocation(line: 502, column: 13, scope: !14002)
!14016 = !DILocation(line: 503, column: 2, scope: !14002)
!14017 = !DILocation(line: 504, column: 1, scope: !14002)
!14018 = distinct !DISubprogram(name: "sys_dnode_init", scope: !233, file: !233, line: 211, type: !14003, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14019)
!14019 = !{!14020}
!14020 = !DILocalVariable(name: "node", arg: 1, scope: !14018, file: !233, line: 211, type: !2342)
!14021 = !DILocation(line: 0, scope: !14018)
!14022 = !DILocation(line: 213, column: 8, scope: !14018)
!14023 = !DILocation(line: 213, column: 13, scope: !14018)
!14024 = !DILocation(line: 214, column: 8, scope: !14018)
!14025 = !DILocation(line: 214, column: 13, scope: !14018)
!14026 = !DILocation(line: 215, column: 1, scope: !14018)
!14027 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12420, file: !12420, line: 131, type: !14028, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14030)
!14028 = !DISubroutineType(types: !14029)
!14029 = !{!136, !2241, !162}
!14030 = !{!14031, !14032}
!14031 = !DILocalVariable(name: "thread", arg: 1, scope: !14027, file: !12420, line: 131, type: !2241)
!14032 = !DILocalVariable(name: "state", arg: 2, scope: !14027, file: !12420, line: 131, type: !162)
!14033 = !DILocation(line: 0, scope: !14027)
!14034 = !DILocation(line: 133, column: 23, scope: !14027)
!14035 = !DILocation(line: 133, column: 45, scope: !14027)
!14036 = !DILocation(line: 133, column: 2, scope: !14027)
!14037 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12420, file: !12420, line: 211, type: !14038, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14040)
!14038 = !DISubroutineType(types: !14039)
!14039 = !{!136, !107, !107}
!14040 = !{!14041, !14042}
!14041 = !DILocalVariable(name: "prio", arg: 1, scope: !14037, file: !12420, line: 211, type: !107)
!14042 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14037, file: !12420, line: 211, type: !107)
!14043 = !DILocation(line: 0, scope: !14037)
!14044 = !DILocation(line: 213, column: 9, scope: !14037)
!14045 = !DILocation(line: 213, column: 2, scope: !14037)
!14046 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12420, file: !12420, line: 83, type: !13705, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14047)
!14047 = !{!14048}
!14048 = !DILocalVariable(name: "thread", arg: 1, scope: !14046, file: !12420, line: 83, type: !2241)
!14049 = !DILocation(line: 0, scope: !14046)
!14050 = !DILocation(line: 89, column: 16, scope: !14046)
!14051 = !DILocation(line: 89, column: 2, scope: !14046)
!14052 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12420, file: !12420, line: 206, type: !14038, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14053)
!14053 = !{!14054, !14055}
!14054 = !DILocalVariable(name: "prio1", arg: 1, scope: !14052, file: !12420, line: 206, type: !107)
!14055 = !DILocalVariable(name: "prio2", arg: 2, scope: !14052, file: !12420, line: 206, type: !107)
!14056 = !DILocation(line: 0, scope: !14052)
!14057 = !DILocation(line: 208, column: 15, scope: !14052)
!14058 = !DILocation(line: 208, column: 2, scope: !14052)
!14059 = distinct !DISubprogram(name: "z_ready_thread", scope: !2346, file: !2346, line: 635, type: !13545, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14060)
!14060 = !{!14061, !14062, !14064}
!14061 = !DILocalVariable(name: "thread", arg: 1, scope: !14059, file: !2346, line: 635, type: !2241)
!14062 = !DILocalVariable(name: "__i", scope: !14063, file: !2346, line: 637, type: !13579)
!14063 = distinct !DILexicalBlock(scope: !14059, file: !2346, line: 637, column: 2)
!14064 = !DILocalVariable(name: "__key", scope: !14063, file: !2346, line: 637, type: !13579)
!14065 = !DILocation(line: 0, scope: !14059)
!14066 = !DILocation(line: 0, scope: !14063)
!14067 = !DILocation(line: 0, scope: !13587, inlinedAt: !14068)
!14068 = distinct !DILocation(line: 637, column: 2, scope: !14063)
!14069 = !DILocation(line: 55, column: 2, scope: !13596, inlinedAt: !14070)
!14070 = distinct !DILocation(line: 145, column: 10, scope: !13587, inlinedAt: !14068)
!14071 = !DILocation(line: 0, scope: !13596, inlinedAt: !14070)
!14072 = !DILocation(line: 639, column: 4, scope: !14073)
!14073 = distinct !DILexicalBlock(scope: !14074, file: !2346, line: 638, column: 41)
!14074 = distinct !DILexicalBlock(scope: !14075, file: !2346, line: 638, column: 7)
!14075 = distinct !DILexicalBlock(scope: !14076, file: !2346, line: 637, column: 26)
!14076 = distinct !DILexicalBlock(scope: !14063, file: !2346, line: 637, column: 2)
!14077 = !DILocation(line: 0, scope: !13614, inlinedAt: !14078)
!14078 = distinct !DILocation(line: 637, column: 2, scope: !14076)
!14079 = !DILocation(line: 0, scope: !13622, inlinedAt: !14080)
!14080 = distinct !DILocation(line: 215, column: 2, scope: !13614, inlinedAt: !14078)
!14081 = !DILocation(line: 95, column: 2, scope: !13622, inlinedAt: !14080)
!14082 = !DILocation(line: 642, column: 1, scope: !14059)
!14083 = distinct !DISubprogram(name: "ready_thread", scope: !2346, file: !2346, line: 617, type: !13545, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14084)
!14084 = !{!14085}
!14085 = !DILocalVariable(name: "thread", arg: 1, scope: !14083, file: !2346, line: 617, type: !2241)
!14086 = !DILocation(line: 0, scope: !14083)
!14087 = !DILocation(line: 626, column: 7, scope: !14088)
!14088 = distinct !DILexicalBlock(scope: !14083, file: !2346, line: 626, column: 6)
!14089 = !DILocation(line: 626, column: 34, scope: !14088)
!14090 = !DILocation(line: 626, column: 37, scope: !14088)
!14091 = !DILocation(line: 626, column: 6, scope: !14083)
!14092 = !DILocation(line: 0, scope: !13773, inlinedAt: !14093)
!14093 = distinct !DILocation(line: 629, column: 3, scope: !14094)
!14094 = distinct !DILexicalBlock(scope: !14088, file: !2346, line: 626, column: 64)
!14095 = !DILocation(line: 252, column: 15, scope: !13773, inlinedAt: !14093)
!14096 = !DILocation(line: 252, column: 28, scope: !13773, inlinedAt: !14093)
!14097 = !DILocation(line: 0, scope: !13780, inlinedAt: !14098)
!14098 = distinct !DILocation(line: 254, column: 3, scope: !13784, inlinedAt: !14093)
!14099 = !DILocation(line: 0, scope: !13787, inlinedAt: !14100)
!14100 = distinct !DILocation(line: 229, column: 2, scope: !13780, inlinedAt: !14098)
!14101 = !DILocation(line: 188, column: 2, scope: !13797, inlinedAt: !14100)
!14102 = !DILocation(line: 188, column: 2, scope: !13799, inlinedAt: !14100)
!14103 = !DILocation(line: 0, scope: !13797, inlinedAt: !14100)
!14104 = !DILocation(line: 189, column: 7, scope: !13802, inlinedAt: !14100)
!14105 = !DILocation(line: 189, column: 35, scope: !13802, inlinedAt: !14100)
!14106 = !DILocation(line: 189, column: 7, scope: !13803, inlinedAt: !14100)
!14107 = !DILocation(line: 191, column: 21, scope: !13807, inlinedAt: !14100)
!14108 = !DILocation(line: 190, column: 4, scope: !13807, inlinedAt: !14100)
!14109 = !DILocation(line: 192, column: 4, scope: !13807, inlinedAt: !14100)
!14110 = distinct !{!14110, !14101, !14111}
!14111 = !DILocation(line: 194, column: 2, scope: !13797, inlinedAt: !14100)
!14112 = !DILocation(line: 196, column: 37, scope: !13787, inlinedAt: !14100)
!14113 = !DILocation(line: 196, column: 2, scope: !13787, inlinedAt: !14100)
!14114 = !DILocation(line: 197, column: 1, scope: !13787, inlinedAt: !14100)
!14115 = !DILocation(line: 630, column: 3, scope: !14094)
!14116 = !DILocation(line: 632, column: 2, scope: !14094)
!14117 = !DILocation(line: 633, column: 1, scope: !14083)
!14118 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12420, file: !12420, line: 120, type: !13705, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14119)
!14119 = !{!14120}
!14120 = !DILocalVariable(name: "thread", arg: 1, scope: !14118, file: !12420, line: 120, type: !2241)
!14121 = !DILocation(line: 0, scope: !14118)
!14122 = !DILocation(line: 122, column: 12, scope: !14118)
!14123 = !DILocation(line: 122, column: 62, scope: !14118)
!14124 = !DILocation(line: 123, column: 4, scope: !14118)
!14125 = !DILocation(line: 122, column: 2, scope: !14118)
!14126 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2346, file: !2346, line: 644, type: !13545, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14127)
!14127 = !{!14128, !14129, !14131}
!14128 = !DILocalVariable(name: "thread", arg: 1, scope: !14126, file: !2346, line: 644, type: !2241)
!14129 = !DILocalVariable(name: "__i", scope: !14130, file: !2346, line: 646, type: !13579)
!14130 = distinct !DILexicalBlock(scope: !14126, file: !2346, line: 646, column: 2)
!14131 = !DILocalVariable(name: "__key", scope: !14130, file: !2346, line: 646, type: !13579)
!14132 = !DILocation(line: 0, scope: !14126)
!14133 = !DILocation(line: 0, scope: !14130)
!14134 = !DILocation(line: 0, scope: !13587, inlinedAt: !14135)
!14135 = distinct !DILocation(line: 646, column: 2, scope: !14130)
!14136 = !DILocation(line: 55, column: 2, scope: !13596, inlinedAt: !14137)
!14137 = distinct !DILocation(line: 145, column: 10, scope: !13587, inlinedAt: !14135)
!14138 = !DILocation(line: 0, scope: !13596, inlinedAt: !14137)
!14139 = !DILocation(line: 647, column: 3, scope: !14140)
!14140 = distinct !DILexicalBlock(scope: !14141, file: !2346, line: 646, column: 26)
!14141 = distinct !DILexicalBlock(scope: !14130, file: !2346, line: 646, column: 2)
!14142 = !DILocation(line: 0, scope: !13614, inlinedAt: !14143)
!14143 = distinct !DILocation(line: 646, column: 2, scope: !14141)
!14144 = !DILocation(line: 0, scope: !13622, inlinedAt: !14145)
!14145 = distinct !DILocation(line: 215, column: 2, scope: !13614, inlinedAt: !14143)
!14146 = !DILocation(line: 95, column: 2, scope: !13622, inlinedAt: !14145)
!14147 = !DILocation(line: 649, column: 1, scope: !14126)
!14148 = distinct !DISubprogram(name: "z_sched_start", scope: !2346, file: !2346, line: 651, type: !13545, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14149)
!14149 = !{!14150, !14151}
!14150 = !DILocalVariable(name: "thread", arg: 1, scope: !14148, file: !2346, line: 651, type: !2241)
!14151 = !DILocalVariable(name: "key", scope: !14148, file: !2346, line: 653, type: !13579)
!14152 = !DILocation(line: 0, scope: !14148)
!14153 = !DILocation(line: 0, scope: !13587, inlinedAt: !14154)
!14154 = distinct !DILocation(line: 653, column: 25, scope: !14148)
!14155 = !DILocation(line: 55, column: 2, scope: !13596, inlinedAt: !14156)
!14156 = distinct !DILocation(line: 145, column: 10, scope: !13587, inlinedAt: !14154)
!14157 = !DILocation(line: 0, scope: !13596, inlinedAt: !14156)
!14158 = !DILocation(line: 655, column: 6, scope: !14159)
!14159 = distinct !DILexicalBlock(scope: !14148, file: !2346, line: 655, column: 6)
!14160 = !DILocation(line: 655, column: 6, scope: !14148)
!14161 = !DILocation(line: 0, scope: !13614, inlinedAt: !14162)
!14162 = distinct !DILocation(line: 656, column: 3, scope: !14163)
!14163 = distinct !DILexicalBlock(scope: !14159, file: !2346, line: 655, column: 36)
!14164 = !DILocation(line: 0, scope: !13622, inlinedAt: !14165)
!14165 = distinct !DILocation(line: 215, column: 2, scope: !13614, inlinedAt: !14162)
!14166 = !DILocation(line: 95, column: 2, scope: !13622, inlinedAt: !14165)
!14167 = !DILocation(line: 657, column: 3, scope: !14163)
!14168 = !DILocation(line: 660, column: 2, scope: !14148)
!14169 = !DILocation(line: 661, column: 2, scope: !14148)
!14170 = !DILocation(line: 662, column: 2, scope: !14148)
!14171 = !DILocation(line: 663, column: 1, scope: !14148)
!14172 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12420, file: !12420, line: 126, type: !13705, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14173)
!14173 = !{!14174}
!14174 = !DILocalVariable(name: "thread", arg: 1, scope: !14172, file: !12420, line: 126, type: !2241)
!14175 = !DILocation(line: 0, scope: !14172)
!14176 = !DILocation(line: 128, column: 23, scope: !14172)
!14177 = !DILocation(line: 128, column: 36, scope: !14172)
!14178 = !DILocation(line: 128, column: 56, scope: !14172)
!14179 = !DILocation(line: 128, column: 2, scope: !14172)
!14180 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12420, file: !12420, line: 155, type: !13545, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14181)
!14181 = !{!14182}
!14182 = !DILocalVariable(name: "thread", arg: 1, scope: !14180, file: !12420, line: 155, type: !2241)
!14183 = !DILocation(line: 0, scope: !14180)
!14184 = !DILocation(line: 157, column: 15, scope: !14180)
!14185 = !DILocation(line: 157, column: 28, scope: !14180)
!14186 = !DILocation(line: 158, column: 1, scope: !14180)
!14187 = distinct !DISubprogram(name: "z_reschedule", scope: !2346, file: !2346, line: 967, type: !13615, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14188)
!14188 = !{!14189, !14190}
!14189 = !DILocalVariable(name: "lock", arg: 1, scope: !14187, file: !2346, line: 967, type: !13590)
!14190 = !DILocalVariable(name: "key", arg: 2, scope: !14187, file: !2346, line: 967, type: !13579)
!14191 = !DILocation(line: 0, scope: !14187)
!14192 = !DILocation(line: 969, column: 6, scope: !14193)
!14193 = distinct !DILexicalBlock(scope: !14187, file: !2346, line: 969, column: 6)
!14194 = !DILocation(line: 969, column: 23, scope: !14193)
!14195 = !DILocation(line: 969, column: 26, scope: !14193)
!14196 = !DILocation(line: 969, column: 6, scope: !14187)
!14197 = !DILocalVariable(name: "key", arg: 2, scope: !14198, file: !12524, line: 193, type: !13579)
!14198 = distinct !DISubprogram(name: "z_swap", scope: !12524, file: !12524, line: 193, type: !14199, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14201)
!14199 = !DISubroutineType(types: !14200)
!14200 = !{!107, !13590, !13579}
!14201 = !{!14202, !14197}
!14202 = !DILocalVariable(name: "lock", arg: 1, scope: !14198, file: !12524, line: 193, type: !13590)
!14203 = !DILocation(line: 0, scope: !14198, inlinedAt: !14204)
!14204 = distinct !DILocation(line: 970, column: 3, scope: !14205)
!14205 = distinct !DILexicalBlock(scope: !14193, file: !2346, line: 969, column: 39)
!14206 = !DILocation(line: 196, column: 9, scope: !14198, inlinedAt: !14204)
!14207 = !DILocation(line: 971, column: 2, scope: !14205)
!14208 = !DILocation(line: 0, scope: !13614, inlinedAt: !14209)
!14209 = distinct !DILocation(line: 972, column: 3, scope: !14210)
!14210 = distinct !DILexicalBlock(scope: !14193, file: !2346, line: 971, column: 9)
!14211 = !DILocation(line: 0, scope: !13622, inlinedAt: !14212)
!14212 = distinct !DILocation(line: 215, column: 2, scope: !13614, inlinedAt: !14209)
!14213 = !DILocation(line: 95, column: 2, scope: !13622, inlinedAt: !14212)
!14214 = !DILocation(line: 975, column: 1, scope: !14187)
!14215 = distinct !DISubprogram(name: "resched", scope: !2346, file: !2346, line: 940, type: !14216, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14218)
!14216 = !DISubroutineType(types: !14217)
!14217 = !{!136, !162}
!14218 = !{!14219}
!14219 = !DILocalVariable(name: "key", arg: 1, scope: !14215, file: !2346, line: 940, type: !162)
!14220 = !DILocation(line: 0, scope: !14215)
!14221 = !DILocalVariable(name: "key", arg: 1, scope: !14222, file: !5913, line: 112, type: !32)
!14222 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5913, file: !5913, line: 112, type: !14223, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14225)
!14223 = !DISubroutineType(types: !14224)
!14224 = !{!136, !32}
!14225 = !{!14221}
!14226 = !DILocation(line: 0, scope: !14222, inlinedAt: !14227)
!14227 = distinct !DILocation(line: 946, column: 9, scope: !14215)
!14228 = !DILocation(line: 115, column: 13, scope: !14222, inlinedAt: !14227)
!14229 = !DILocation(line: 946, column: 32, scope: !14215)
!14230 = !DILocation(line: 1031, column: 3, scope: !14231, inlinedAt: !14234)
!14231 = distinct !DISubprogram(name: "__get_IPSR", scope: !6087, file: !6087, line: 1027, type: !6168, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14232)
!14232 = !{!14233}
!14233 = !DILocalVariable(name: "result", scope: !14231, file: !6087, line: 1029, type: !162)
!14234 = distinct !DILocation(line: 48, column: 10, scope: !14235, inlinedAt: !14236)
!14235 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6881, file: !6881, line: 46, type: !6882, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !250)
!14236 = distinct !DILocation(line: 946, column: 36, scope: !14215)
!14237 = !{i64 3583815}
!14238 = !DILocation(line: 0, scope: !14231, inlinedAt: !14234)
!14239 = !DILocation(line: 48, column: 9, scope: !14235, inlinedAt: !14236)
!14240 = !DILocation(line: 946, column: 2, scope: !14215)
!14241 = distinct !DISubprogram(name: "need_swap", scope: !2346, file: !2346, line: 953, type: !6882, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14242)
!14242 = !{!14243}
!14243 = !DILocalVariable(name: "new_thread", scope: !14241, file: !2346, line: 959, type: !2241)
!14244 = !DILocation(line: 962, column: 31, scope: !14241)
!14245 = !DILocation(line: 0, scope: !14241)
!14246 = !DILocation(line: 963, column: 23, scope: !14241)
!14247 = !DILocation(line: 963, column: 20, scope: !14241)
!14248 = !DILocation(line: 963, column: 2, scope: !14241)
!14249 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12524, file: !12524, line: 181, type: !6097, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14250)
!14250 = !{!14251, !14252}
!14251 = !DILocalVariable(name: "key", arg: 1, scope: !14249, file: !12524, line: 181, type: !32)
!14252 = !DILocalVariable(name: "ret", scope: !14249, file: !12524, line: 183, type: !107)
!14253 = !DILocation(line: 0, scope: !14249)
!14254 = !DILocation(line: 185, column: 8, scope: !14249)
!14255 = !DILocation(line: 186, column: 2, scope: !14249)
!14256 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2346, file: !2346, line: 665, type: !13545, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14257)
!14257 = !{!14258, !14259, !14261}
!14258 = !DILocalVariable(name: "thread", arg: 1, scope: !14256, file: !2346, line: 665, type: !2241)
!14259 = !DILocalVariable(name: "__i", scope: !14260, file: !2346, line: 671, type: !13579)
!14260 = distinct !DILexicalBlock(scope: !14256, file: !2346, line: 671, column: 2)
!14261 = !DILocalVariable(name: "__key", scope: !14260, file: !2346, line: 671, type: !13579)
!14262 = !DILocation(line: 0, scope: !14256)
!14263 = !DILocation(line: 669, column: 8, scope: !14256)
!14264 = !DILocation(line: 0, scope: !14260)
!14265 = !DILocation(line: 0, scope: !13587, inlinedAt: !14266)
!14266 = distinct !DILocation(line: 671, column: 2, scope: !14260)
!14267 = !DILocation(line: 55, column: 2, scope: !13596, inlinedAt: !14268)
!14268 = distinct !DILocation(line: 145, column: 10, scope: !13587, inlinedAt: !14266)
!14269 = !DILocation(line: 0, scope: !13596, inlinedAt: !14268)
!14270 = !DILocation(line: 672, column: 7, scope: !14271)
!14271 = distinct !DILexicalBlock(scope: !14272, file: !2346, line: 672, column: 7)
!14272 = distinct !DILexicalBlock(scope: !14273, file: !2346, line: 671, column: 26)
!14273 = distinct !DILexicalBlock(scope: !14260, file: !2346, line: 671, column: 2)
!14274 = !DILocation(line: 672, column: 7, scope: !14272)
!14275 = !DILocation(line: 0, scope: !13756, inlinedAt: !14276)
!14276 = distinct !DILocation(line: 673, column: 4, scope: !14277)
!14277 = distinct !DILexicalBlock(scope: !14271, file: !2346, line: 672, column: 35)
!14278 = !DILocation(line: 266, column: 15, scope: !13756, inlinedAt: !14276)
!14279 = !DILocation(line: 266, column: 28, scope: !13756, inlinedAt: !14276)
!14280 = !DILocation(line: 0, scope: !13764, inlinedAt: !14281)
!14281 = distinct !DILocation(line: 268, column: 3, scope: !13768, inlinedAt: !14276)
!14282 = !DILocation(line: 234, column: 2, scope: !13764, inlinedAt: !14281)
!14283 = !DILocation(line: 674, column: 3, scope: !14277)
!14284 = !DILocation(line: 675, column: 3, scope: !14272)
!14285 = !DILocation(line: 676, column: 26, scope: !14272)
!14286 = !DILocation(line: 676, column: 23, scope: !14272)
!14287 = !DILocation(line: 676, column: 3, scope: !14272)
!14288 = !DILocation(line: 0, scope: !13614, inlinedAt: !14289)
!14289 = distinct !DILocation(line: 671, column: 2, scope: !14273)
!14290 = !DILocation(line: 0, scope: !13622, inlinedAt: !14291)
!14291 = distinct !DILocation(line: 215, column: 2, scope: !13614, inlinedAt: !14289)
!14292 = !DILocation(line: 95, column: 2, scope: !13622, inlinedAt: !14291)
!14293 = !DILocation(line: 679, column: 16, scope: !14294)
!14294 = distinct !DILexicalBlock(scope: !14256, file: !2346, line: 679, column: 6)
!14295 = !DILocation(line: 679, column: 13, scope: !14294)
!14296 = !DILocation(line: 679, column: 6, scope: !14256)
!14297 = !DILocation(line: 680, column: 3, scope: !14298)
!14298 = distinct !DILexicalBlock(scope: !14294, file: !2346, line: 679, column: 26)
!14299 = !DILocation(line: 681, column: 2, scope: !14298)
!14300 = !DILocation(line: 684, column: 1, scope: !14256)
!14301 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !12812, file: !12812, line: 52, type: !13563, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14302)
!14302 = !{!14303}
!14303 = !DILocalVariable(name: "thread", arg: 1, scope: !14301, file: !12812, line: 52, type: !2241)
!14304 = !DILocation(line: 0, scope: !14301)
!14305 = !DILocation(line: 54, column: 39, scope: !14301)
!14306 = !DILocation(line: 54, column: 9, scope: !14301)
!14307 = !DILocation(line: 54, column: 2, scope: !14301)
!14308 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12420, file: !12420, line: 141, type: !13545, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14309)
!14309 = !{!14310}
!14310 = !DILocalVariable(name: "thread", arg: 1, scope: !14308, file: !12420, line: 141, type: !2241)
!14311 = !DILocation(line: 0, scope: !14308)
!14312 = !DILocation(line: 143, column: 15, scope: !14308)
!14313 = !DILocation(line: 143, column: 28, scope: !14308)
!14314 = !DILocation(line: 146, column: 1, scope: !14308)
!14315 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12420, file: !12420, line: 73, type: !3137, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !250)
!14316 = !DILocation(line: 55, column: 2, scope: !13596, inlinedAt: !14317)
!14317 = distinct !DILocation(line: 75, column: 30, scope: !14315)
!14318 = !DILocation(line: 0, scope: !13596, inlinedAt: !14317)
!14319 = !DILocation(line: 75, column: 9, scope: !14315)
!14320 = !DILocation(line: 76, column: 1, scope: !14315)
!14321 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2346, file: !2346, line: 977, type: !6178, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14322)
!14322 = !{!14323}
!14323 = !DILocalVariable(name: "key", arg: 1, scope: !14321, file: !2346, line: 977, type: !162)
!14324 = !DILocation(line: 0, scope: !14321)
!14325 = !DILocation(line: 979, column: 6, scope: !14326)
!14326 = distinct !DILexicalBlock(scope: !14321, file: !2346, line: 979, column: 6)
!14327 = !DILocation(line: 979, column: 6, scope: !14321)
!14328 = !DILocation(line: 980, column: 3, scope: !14329)
!14329 = distinct !DILexicalBlock(scope: !14326, file: !2346, line: 979, column: 20)
!14330 = !DILocation(line: 981, column: 2, scope: !14329)
!14331 = !DILocation(line: 0, scope: !13622, inlinedAt: !14332)
!14332 = distinct !DILocation(line: 982, column: 3, scope: !14333)
!14333 = distinct !DILexicalBlock(scope: !14326, file: !2346, line: 981, column: 9)
!14334 = !DILocation(line: 95, column: 2, scope: !13622, inlinedAt: !14332)
!14335 = !DILocation(line: 985, column: 1, scope: !14321)
!14336 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2346, file: !2346, line: 695, type: !13545, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14337)
!14337 = !{!14338, !14339}
!14338 = !DILocalVariable(name: "thread", arg: 1, scope: !14336, file: !2346, line: 695, type: !2241)
!14339 = !DILocalVariable(name: "key", scope: !14336, file: !2346, line: 699, type: !13579)
!14340 = !DILocation(line: 0, scope: !14336)
!14341 = !DILocation(line: 0, scope: !13587, inlinedAt: !14342)
!14342 = distinct !DILocation(line: 699, column: 25, scope: !14336)
!14343 = !DILocation(line: 55, column: 2, scope: !13596, inlinedAt: !14344)
!14344 = distinct !DILocation(line: 145, column: 10, scope: !13587, inlinedAt: !14342)
!14345 = !DILocation(line: 0, scope: !13596, inlinedAt: !14344)
!14346 = !DILocation(line: 702, column: 7, scope: !14347)
!14347 = distinct !DILexicalBlock(scope: !14336, file: !2346, line: 702, column: 6)
!14348 = !DILocation(line: 702, column: 6, scope: !14336)
!14349 = !DILocation(line: 0, scope: !13614, inlinedAt: !14350)
!14350 = distinct !DILocation(line: 703, column: 3, scope: !14351)
!14351 = distinct !DILexicalBlock(scope: !14347, file: !2346, line: 702, column: 38)
!14352 = !DILocation(line: 0, scope: !13622, inlinedAt: !14353)
!14353 = distinct !DILocation(line: 215, column: 2, scope: !13614, inlinedAt: !14350)
!14354 = !DILocation(line: 95, column: 2, scope: !13622, inlinedAt: !14353)
!14355 = !DILocation(line: 704, column: 3, scope: !14351)
!14356 = !DILocation(line: 707, column: 2, scope: !14336)
!14357 = !DILocation(line: 708, column: 2, scope: !14336)
!14358 = !DILocation(line: 710, column: 2, scope: !14336)
!14359 = !DILocation(line: 713, column: 1, scope: !14336)
!14360 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12420, file: !12420, line: 96, type: !13705, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14361)
!14361 = !{!14362}
!14362 = !DILocalVariable(name: "thread", arg: 1, scope: !14360, file: !12420, line: 96, type: !2241)
!14363 = !DILocation(line: 0, scope: !14360)
!14364 = !DILocation(line: 98, column: 23, scope: !14360)
!14365 = !DILocation(line: 98, column: 36, scope: !14360)
!14366 = !DILocation(line: 98, column: 57, scope: !14360)
!14367 = !DILocation(line: 98, column: 2, scope: !14360)
!14368 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12420, file: !12420, line: 148, type: !13545, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14369)
!14369 = !{!14370}
!14370 = !DILocalVariable(name: "thread", arg: 1, scope: !14368, file: !12420, line: 148, type: !2241)
!14371 = !DILocation(line: 0, scope: !14368)
!14372 = !DILocation(line: 150, column: 15, scope: !14368)
!14373 = !DILocation(line: 150, column: 28, scope: !14368)
!14374 = !DILocation(line: 153, column: 1, scope: !14368)
!14375 = distinct !DISubprogram(name: "z_pend_thread", scope: !2346, file: !2346, line: 770, type: !14376, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14382)
!14376 = !DISubroutineType(types: !14377)
!14377 = !{null, !2241, !2272, !14378}
!14378 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !14379)
!14379 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !14380)
!14380 = !{!14381}
!14381 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14379, file: !104, line: 66, baseType: !103, size: 64)
!14382 = !{!14383, !14384, !14385, !14386, !14388}
!14383 = !DILocalVariable(name: "thread", arg: 1, scope: !14375, file: !2346, line: 770, type: !2241)
!14384 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14375, file: !2346, line: 770, type: !2272)
!14385 = !DILocalVariable(name: "timeout", arg: 3, scope: !14375, file: !2346, line: 771, type: !14378)
!14386 = !DILocalVariable(name: "__i", scope: !14387, file: !2346, line: 774, type: !13579)
!14387 = distinct !DILexicalBlock(scope: !14375, file: !2346, line: 774, column: 2)
!14388 = !DILocalVariable(name: "__key", scope: !14387, file: !2346, line: 774, type: !13579)
!14389 = !DILocation(line: 0, scope: !14375)
!14390 = !DILocation(line: 0, scope: !14387)
!14391 = !DILocation(line: 0, scope: !13587, inlinedAt: !14392)
!14392 = distinct !DILocation(line: 774, column: 2, scope: !14387)
!14393 = !DILocation(line: 55, column: 2, scope: !13596, inlinedAt: !14394)
!14394 = distinct !DILocation(line: 145, column: 10, scope: !13587, inlinedAt: !14392)
!14395 = !DILocation(line: 0, scope: !13596, inlinedAt: !14394)
!14396 = !DILocation(line: 775, column: 3, scope: !14397)
!14397 = distinct !DILexicalBlock(scope: !14398, file: !2346, line: 774, column: 26)
!14398 = distinct !DILexicalBlock(scope: !14387, file: !2346, line: 774, column: 2)
!14399 = !DILocation(line: 0, scope: !13614, inlinedAt: !14400)
!14400 = distinct !DILocation(line: 774, column: 2, scope: !14398)
!14401 = !DILocation(line: 0, scope: !13622, inlinedAt: !14402)
!14402 = distinct !DILocation(line: 215, column: 2, scope: !13614, inlinedAt: !14400)
!14403 = !DILocation(line: 95, column: 2, scope: !13622, inlinedAt: !14402)
!14404 = !DILocation(line: 777, column: 1, scope: !14375)
!14405 = distinct !DISubprogram(name: "pend_locked", scope: !2346, file: !2346, line: 760, type: !14376, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14406)
!14406 = !{!14407, !14408, !14409}
!14407 = !DILocalVariable(name: "thread", arg: 1, scope: !14405, file: !2346, line: 760, type: !2241)
!14408 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14405, file: !2346, line: 760, type: !2272)
!14409 = !DILocalVariable(name: "timeout", arg: 3, scope: !14405, file: !2346, line: 761, type: !14378)
!14410 = !DILocation(line: 0, scope: !14405)
!14411 = !DILocation(line: 766, column: 2, scope: !14405)
!14412 = !DILocation(line: 767, column: 2, scope: !14405)
!14413 = !DILocation(line: 768, column: 1, scope: !14405)
!14414 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2346, file: !2346, line: 740, type: !14415, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14417)
!14415 = !DISubroutineType(types: !14416)
!14416 = !{null, !2241, !2272}
!14417 = !{!14418, !14419}
!14418 = !DILocalVariable(name: "thread", arg: 1, scope: !14414, file: !2346, line: 740, type: !2241)
!14419 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14414, file: !2346, line: 740, type: !2272)
!14420 = !DILocation(line: 0, scope: !14414)
!14421 = !DILocation(line: 742, column: 2, scope: !14414)
!14422 = !DILocation(line: 743, column: 2, scope: !14414)
!14423 = !DILocation(line: 747, column: 13, scope: !14424)
!14424 = distinct !DILexicalBlock(scope: !14414, file: !2346, line: 747, column: 6)
!14425 = !DILocation(line: 747, column: 6, scope: !14414)
!14426 = !DILocation(line: 748, column: 16, scope: !14427)
!14427 = distinct !DILexicalBlock(scope: !14424, file: !2346, line: 747, column: 22)
!14428 = !DILocation(line: 748, column: 26, scope: !14427)
!14429 = !DILocation(line: 749, column: 28, scope: !14427)
!14430 = !DILocation(line: 0, scope: !13787, inlinedAt: !14431)
!14431 = distinct !DILocation(line: 749, column: 3, scope: !14427)
!14432 = !DILocation(line: 188, column: 2, scope: !13797, inlinedAt: !14431)
!14433 = !DILocation(line: 188, column: 2, scope: !13799, inlinedAt: !14431)
!14434 = !DILocation(line: 0, scope: !13797, inlinedAt: !14431)
!14435 = !DILocation(line: 189, column: 7, scope: !13802, inlinedAt: !14431)
!14436 = !DILocation(line: 189, column: 35, scope: !13802, inlinedAt: !14431)
!14437 = !DILocation(line: 189, column: 7, scope: !13803, inlinedAt: !14431)
!14438 = !DILocation(line: 191, column: 21, scope: !13807, inlinedAt: !14431)
!14439 = !DILocation(line: 190, column: 4, scope: !13807, inlinedAt: !14431)
!14440 = !DILocation(line: 192, column: 4, scope: !13807, inlinedAt: !14431)
!14441 = distinct !{!14441, !14432, !14442}
!14442 = !DILocation(line: 194, column: 2, scope: !13797, inlinedAt: !14431)
!14443 = !DILocation(line: 196, column: 37, scope: !13787, inlinedAt: !14431)
!14444 = !DILocation(line: 196, column: 2, scope: !13787, inlinedAt: !14431)
!14445 = !DILocation(line: 197, column: 1, scope: !13787, inlinedAt: !14431)
!14446 = !DILocation(line: 751, column: 1, scope: !14414)
!14447 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2346, file: !2346, line: 753, type: !14448, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14450)
!14448 = !DISubroutineType(types: !14449)
!14449 = !{null, !2241, !14378}
!14450 = !{!14451, !14452}
!14451 = !DILocalVariable(name: "thread", arg: 1, scope: !14447, file: !2346, line: 753, type: !2241)
!14452 = !DILocalVariable(name: "timeout", arg: 2, scope: !14447, file: !2346, line: 753, type: !14378)
!14453 = !DILocation(line: 0, scope: !14447)
!14454 = !DILocation(line: 755, column: 7, scope: !14455)
!14455 = distinct !DILexicalBlock(scope: !14447, file: !2346, line: 755, column: 6)
!14456 = !DILocation(line: 755, column: 6, scope: !14447)
!14457 = !DILocation(line: 756, column: 3, scope: !14458)
!14458 = distinct !DILexicalBlock(scope: !14455, file: !2346, line: 755, column: 41)
!14459 = !DILocation(line: 757, column: 2, scope: !14458)
!14460 = !DILocation(line: 758, column: 1, scope: !14447)
!14461 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12812, file: !12812, line: 47, type: !14448, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14462)
!14462 = !{!14463, !14464}
!14463 = !DILocalVariable(name: "thread", arg: 1, scope: !14461, file: !12812, line: 47, type: !2241)
!14464 = !DILocalVariable(name: "ticks", arg: 2, scope: !14461, file: !12812, line: 47, type: !14378)
!14465 = !DILocation(line: 0, scope: !14461)
!14466 = !DILocation(line: 49, column: 30, scope: !14461)
!14467 = !DILocation(line: 49, column: 2, scope: !14461)
!14468 = !DILocation(line: 50, column: 1, scope: !14461)
!14469 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2346, file: !2346, line: 795, type: !2298, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14470)
!14470 = !{!14471, !14472, !14473, !14475, !14476}
!14471 = !DILocalVariable(name: "timeout", arg: 1, scope: !14469, file: !2346, line: 795, type: !2300)
!14472 = !DILocalVariable(name: "thread", scope: !14469, file: !2346, line: 797, type: !2241)
!14473 = !DILocalVariable(name: "__i", scope: !14474, file: !2346, line: 800, type: !13579)
!14474 = distinct !DILexicalBlock(scope: !14469, file: !2346, line: 800, column: 2)
!14475 = !DILocalVariable(name: "__key", scope: !14474, file: !2346, line: 800, type: !13579)
!14476 = !DILocalVariable(name: "killed", scope: !14477, file: !2346, line: 801, type: !136)
!14477 = distinct !DILexicalBlock(scope: !14478, file: !2346, line: 800, column: 26)
!14478 = distinct !DILexicalBlock(scope: !14474, file: !2346, line: 800, column: 2)
!14479 = !DILocation(line: 0, scope: !14469)
!14480 = !DILocation(line: 797, column: 28, scope: !14469)
!14481 = !DILocation(line: 0, scope: !14474)
!14482 = !DILocation(line: 0, scope: !13587, inlinedAt: !14483)
!14483 = distinct !DILocation(line: 800, column: 2, scope: !14474)
!14484 = !DILocation(line: 55, column: 2, scope: !13596, inlinedAt: !14485)
!14485 = distinct !DILocation(line: 145, column: 10, scope: !13587, inlinedAt: !14483)
!14486 = !DILocation(line: 0, scope: !13596, inlinedAt: !14485)
!14487 = !DILocation(line: 801, column: 27, scope: !14477)
!14488 = !DILocation(line: 801, column: 32, scope: !14477)
!14489 = !DILocation(line: 801, column: 61, scope: !14477)
!14490 = !DILocation(line: 0, scope: !14477)
!14491 = !DILocation(line: 804, column: 7, scope: !14477)
!14492 = !DILocation(line: 805, column: 21, scope: !14493)
!14493 = distinct !DILexicalBlock(scope: !14494, file: !2346, line: 805, column: 8)
!14494 = distinct !DILexicalBlock(scope: !14495, file: !2346, line: 804, column: 16)
!14495 = distinct !DILexicalBlock(scope: !14477, file: !2346, line: 804, column: 7)
!14496 = !DILocation(line: 805, column: 31, scope: !14493)
!14497 = !DILocation(line: 805, column: 8, scope: !14494)
!14498 = !DILocation(line: 806, column: 5, scope: !14499)
!14499 = distinct !DILexicalBlock(scope: !14493, file: !2346, line: 805, column: 40)
!14500 = !DILocation(line: 807, column: 4, scope: !14499)
!14501 = !DILocation(line: 808, column: 4, scope: !14494)
!14502 = !DILocation(line: 809, column: 4, scope: !14494)
!14503 = !DILocation(line: 810, column: 4, scope: !14494)
!14504 = !DILocation(line: 811, column: 3, scope: !14494)
!14505 = !DILocation(line: 0, scope: !13614, inlinedAt: !14506)
!14506 = distinct !DILocation(line: 800, column: 2, scope: !14478)
!14507 = !DILocation(line: 0, scope: !13622, inlinedAt: !14508)
!14508 = distinct !DILocation(line: 215, column: 2, scope: !13614, inlinedAt: !14506)
!14509 = !DILocation(line: 95, column: 2, scope: !13622, inlinedAt: !14508)
!14510 = !DILocation(line: 813, column: 1, scope: !14469)
!14511 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2346, file: !2346, line: 779, type: !13545, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14512)
!14512 = !{!14513}
!14513 = !DILocalVariable(name: "thread", arg: 1, scope: !14511, file: !2346, line: 779, type: !2241)
!14514 = !DILocation(line: 0, scope: !14511)
!14515 = !DILocation(line: 781, column: 2, scope: !14511)
!14516 = !DILocation(line: 782, column: 2, scope: !14511)
!14517 = !DILocation(line: 783, column: 15, scope: !14511)
!14518 = !DILocation(line: 783, column: 25, scope: !14511)
!14519 = !DILocation(line: 784, column: 1, scope: !14511)
!14520 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12420, file: !12420, line: 165, type: !13545, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14521)
!14521 = !{!14522}
!14522 = !DILocalVariable(name: "thread", arg: 1, scope: !14520, file: !12420, line: 165, type: !2241)
!14523 = !DILocation(line: 0, scope: !14520)
!14524 = !DILocation(line: 167, column: 15, scope: !14520)
!14525 = !DILocation(line: 167, column: 28, scope: !14520)
!14526 = !DILocation(line: 168, column: 1, scope: !14520)
!14527 = distinct !DISubprogram(name: "unready_thread", scope: !2346, file: !2346, line: 731, type: !13545, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14528)
!14528 = !{!14529}
!14529 = !DILocalVariable(name: "thread", arg: 1, scope: !14527, file: !2346, line: 731, type: !2241)
!14530 = !DILocation(line: 0, scope: !14527)
!14531 = !DILocation(line: 733, column: 6, scope: !14532)
!14532 = distinct !DILexicalBlock(scope: !14527, file: !2346, line: 733, column: 6)
!14533 = !DILocation(line: 733, column: 6, scope: !14527)
!14534 = !DILocation(line: 0, scope: !13756, inlinedAt: !14535)
!14535 = distinct !DILocation(line: 734, column: 3, scope: !14536)
!14536 = distinct !DILexicalBlock(scope: !14532, file: !2346, line: 733, column: 34)
!14537 = !DILocation(line: 266, column: 15, scope: !13756, inlinedAt: !14535)
!14538 = !DILocation(line: 266, column: 28, scope: !13756, inlinedAt: !14535)
!14539 = !DILocation(line: 0, scope: !13764, inlinedAt: !14540)
!14540 = distinct !DILocation(line: 268, column: 3, scope: !13768, inlinedAt: !14535)
!14541 = !DILocation(line: 234, column: 2, scope: !13764, inlinedAt: !14540)
!14542 = !DILocation(line: 735, column: 2, scope: !14536)
!14543 = !DILocation(line: 736, column: 25, scope: !14527)
!14544 = !DILocation(line: 736, column: 22, scope: !14527)
!14545 = !DILocation(line: 736, column: 2, scope: !14527)
!14546 = !DILocation(line: 737, column: 1, scope: !14527)
!14547 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12420, file: !12420, line: 160, type: !13545, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14548)
!14548 = !{!14549}
!14549 = !DILocalVariable(name: "thread", arg: 1, scope: !14547, file: !12420, line: 160, type: !2241)
!14550 = !DILocation(line: 0, scope: !14547)
!14551 = !DILocation(line: 162, column: 15, scope: !14547)
!14552 = !DILocation(line: 162, column: 28, scope: !14547)
!14553 = !DILocation(line: 163, column: 1, scope: !14547)
!14554 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2346, file: !2346, line: 786, type: !13545, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14555)
!14555 = !{!14556, !14557, !14559}
!14556 = !DILocalVariable(name: "thread", arg: 1, scope: !14554, file: !2346, line: 786, type: !2241)
!14557 = !DILocalVariable(name: "__i", scope: !14558, file: !2346, line: 788, type: !13579)
!14558 = distinct !DILexicalBlock(scope: !14554, file: !2346, line: 788, column: 2)
!14559 = !DILocalVariable(name: "__key", scope: !14558, file: !2346, line: 788, type: !13579)
!14560 = !DILocation(line: 0, scope: !14554)
!14561 = !DILocation(line: 0, scope: !14558)
!14562 = !DILocation(line: 0, scope: !13587, inlinedAt: !14563)
!14563 = distinct !DILocation(line: 788, column: 2, scope: !14558)
!14564 = !DILocation(line: 55, column: 2, scope: !13596, inlinedAt: !14565)
!14565 = distinct !DILocation(line: 145, column: 10, scope: !13587, inlinedAt: !14563)
!14566 = !DILocation(line: 0, scope: !13596, inlinedAt: !14565)
!14567 = !DILocation(line: 789, column: 3, scope: !14568)
!14568 = distinct !DILexicalBlock(scope: !14569, file: !2346, line: 788, column: 26)
!14569 = distinct !DILexicalBlock(scope: !14558, file: !2346, line: 788, column: 2)
!14570 = !DILocation(line: 0, scope: !13614, inlinedAt: !14571)
!14571 = distinct !DILocation(line: 788, column: 2, scope: !14569)
!14572 = !DILocation(line: 0, scope: !13622, inlinedAt: !14573)
!14573 = distinct !DILocation(line: 215, column: 2, scope: !13614, inlinedAt: !14571)
!14574 = !DILocation(line: 95, column: 2, scope: !13622, inlinedAt: !14573)
!14575 = !DILocation(line: 791, column: 1, scope: !14554)
!14576 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2346, file: !2346, line: 816, type: !14577, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14579)
!14577 = !DISubroutineType(types: !14578)
!14578 = !{!107, !162, !2272, !14378}
!14579 = !{!14580, !14581, !14582, !14583, !14584, !14586}
!14580 = !DILocalVariable(name: "key", arg: 1, scope: !14576, file: !2346, line: 816, type: !162)
!14581 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14576, file: !2346, line: 816, type: !2272)
!14582 = !DILocalVariable(name: "timeout", arg: 3, scope: !14576, file: !2346, line: 816, type: !14378)
!14583 = !DILocalVariable(name: "ret", scope: !14576, file: !2346, line: 828, type: !107)
!14584 = !DILocalVariable(name: "__i", scope: !14585, file: !2346, line: 829, type: !13579)
!14585 = distinct !DILexicalBlock(scope: !14576, file: !2346, line: 829, column: 2)
!14586 = !DILocalVariable(name: "__key", scope: !14585, file: !2346, line: 829, type: !13579)
!14587 = !DILocation(line: 0, scope: !14576)
!14588 = !DILocation(line: 823, column: 14, scope: !14576)
!14589 = !DILocation(line: 823, column: 2, scope: !14576)
!14590 = !DILocation(line: 826, column: 20, scope: !14576)
!14591 = !DILocation(line: 826, column: 18, scope: !14576)
!14592 = !DILocation(line: 828, column: 12, scope: !14576)
!14593 = !DILocation(line: 0, scope: !14585)
!14594 = !DILocation(line: 0, scope: !13587, inlinedAt: !14595)
!14595 = distinct !DILocation(line: 829, column: 2, scope: !14585)
!14596 = !DILocation(line: 55, column: 2, scope: !13596, inlinedAt: !14597)
!14597 = distinct !DILocation(line: 145, column: 10, scope: !13587, inlinedAt: !14595)
!14598 = !DILocation(line: 0, scope: !13596, inlinedAt: !14597)
!14599 = !DILocation(line: 830, column: 7, scope: !14600)
!14600 = distinct !DILexicalBlock(scope: !14601, file: !2346, line: 830, column: 7)
!14601 = distinct !DILexicalBlock(scope: !14602, file: !2346, line: 829, column: 26)
!14602 = distinct !DILexicalBlock(scope: !14585, file: !2346, line: 829, column: 2)
!14603 = !DILocation(line: 830, column: 26, scope: !14600)
!14604 = !DILocation(line: 830, column: 23, scope: !14600)
!14605 = !DILocation(line: 830, column: 7, scope: !14601)
!14606 = !DILocation(line: 831, column: 20, scope: !14607)
!14607 = distinct !DILexicalBlock(scope: !14600, file: !2346, line: 830, column: 36)
!14608 = !DILocation(line: 832, column: 3, scope: !14607)
!14609 = !DILocation(line: 0, scope: !13614, inlinedAt: !14610)
!14610 = distinct !DILocation(line: 829, column: 2, scope: !14602)
!14611 = !DILocation(line: 0, scope: !13622, inlinedAt: !14612)
!14612 = distinct !DILocation(line: 215, column: 2, scope: !13614, inlinedAt: !14610)
!14613 = !DILocation(line: 95, column: 2, scope: !13622, inlinedAt: !14612)
!14614 = !DILocation(line: 834, column: 2, scope: !14576)
!14615 = distinct !DISubprogram(name: "z_pend_curr", scope: !2346, file: !2346, line: 840, type: !14616, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14618)
!14616 = !DISubroutineType(types: !14617)
!14617 = !{!107, !13590, !13579, !2272, !14378}
!14618 = !{!14619, !14620, !14621, !14622}
!14619 = !DILocalVariable(name: "lock", arg: 1, scope: !14615, file: !2346, line: 840, type: !13590)
!14620 = !DILocalVariable(name: "key", arg: 2, scope: !14615, file: !2346, line: 840, type: !13579)
!14621 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14615, file: !2346, line: 841, type: !2272)
!14622 = !DILocalVariable(name: "timeout", arg: 4, scope: !14615, file: !2346, line: 841, type: !14378)
!14623 = !DILocation(line: 0, scope: !14615)
!14624 = !DILocation(line: 844, column: 20, scope: !14615)
!14625 = !DILocation(line: 844, column: 18, scope: !14615)
!14626 = !DILocation(line: 0, scope: !13587, inlinedAt: !14627)
!14627 = distinct !DILocation(line: 856, column: 9, scope: !14615)
!14628 = !DILocation(line: 55, column: 2, scope: !13596, inlinedAt: !14629)
!14629 = distinct !DILocation(line: 145, column: 10, scope: !13587, inlinedAt: !14627)
!14630 = !DILocation(line: 0, scope: !13596, inlinedAt: !14629)
!14631 = !DILocation(line: 857, column: 14, scope: !14615)
!14632 = !DILocation(line: 857, column: 2, scope: !14615)
!14633 = !DILocation(line: 0, scope: !14198, inlinedAt: !14634)
!14634 = distinct !DILocation(line: 859, column: 9, scope: !14615)
!14635 = !DILocation(line: 196, column: 9, scope: !14198, inlinedAt: !14634)
!14636 = !DILocation(line: 859, column: 2, scope: !14615)
!14637 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2346, file: !2346, line: 862, type: !14638, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14640)
!14638 = !DISubroutineType(types: !14639)
!14639 = !{!2241, !2272}
!14640 = !{!14641, !14642, !14643, !14645}
!14641 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14637, file: !2346, line: 862, type: !2272)
!14642 = !DILocalVariable(name: "thread", scope: !14637, file: !2346, line: 864, type: !2241)
!14643 = !DILocalVariable(name: "__i", scope: !14644, file: !2346, line: 866, type: !13579)
!14644 = distinct !DILexicalBlock(scope: !14637, file: !2346, line: 866, column: 2)
!14645 = !DILocalVariable(name: "__key", scope: !14644, file: !2346, line: 866, type: !13579)
!14646 = !DILocation(line: 0, scope: !14637)
!14647 = !DILocation(line: 0, scope: !14644)
!14648 = !DILocation(line: 0, scope: !13587, inlinedAt: !14649)
!14649 = distinct !DILocation(line: 866, column: 2, scope: !14644)
!14650 = !DILocation(line: 55, column: 2, scope: !13596, inlinedAt: !14651)
!14651 = distinct !DILocation(line: 145, column: 10, scope: !13587, inlinedAt: !14649)
!14652 = !DILocation(line: 0, scope: !13596, inlinedAt: !14651)
!14653 = !DILocation(line: 867, column: 12, scope: !14654)
!14654 = distinct !DILexicalBlock(scope: !14655, file: !2346, line: 866, column: 26)
!14655 = distinct !DILexicalBlock(scope: !14644, file: !2346, line: 866, column: 2)
!14656 = !DILocation(line: 869, column: 14, scope: !14657)
!14657 = distinct !DILexicalBlock(scope: !14654, file: !2346, line: 869, column: 7)
!14658 = !DILocation(line: 869, column: 7, scope: !14654)
!14659 = !DILocation(line: 870, column: 4, scope: !14660)
!14660 = distinct !DILexicalBlock(scope: !14657, file: !2346, line: 869, column: 23)
!14661 = !DILocation(line: 871, column: 3, scope: !14660)
!14662 = !DILocation(line: 0, scope: !13614, inlinedAt: !14663)
!14663 = distinct !DILocation(line: 866, column: 2, scope: !14655)
!14664 = !DILocation(line: 0, scope: !13622, inlinedAt: !14665)
!14665 = distinct !DILocation(line: 215, column: 2, scope: !13614, inlinedAt: !14663)
!14666 = !DILocation(line: 95, column: 2, scope: !13622, inlinedAt: !14665)
!14667 = !DILocation(line: 874, column: 2, scope: !14637)
!14668 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2346, file: !2346, line: 877, type: !14638, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14669)
!14669 = !{!14670, !14671, !14672, !14674}
!14670 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14668, file: !2346, line: 877, type: !2272)
!14671 = !DILocalVariable(name: "thread", scope: !14668, file: !2346, line: 879, type: !2241)
!14672 = !DILocalVariable(name: "__i", scope: !14673, file: !2346, line: 881, type: !13579)
!14673 = distinct !DILexicalBlock(scope: !14668, file: !2346, line: 881, column: 2)
!14674 = !DILocalVariable(name: "__key", scope: !14673, file: !2346, line: 881, type: !13579)
!14675 = !DILocation(line: 0, scope: !14668)
!14676 = !DILocation(line: 0, scope: !14673)
!14677 = !DILocation(line: 0, scope: !13587, inlinedAt: !14678)
!14678 = distinct !DILocation(line: 881, column: 2, scope: !14673)
!14679 = !DILocation(line: 55, column: 2, scope: !13596, inlinedAt: !14680)
!14680 = distinct !DILocation(line: 145, column: 10, scope: !13587, inlinedAt: !14678)
!14681 = !DILocation(line: 0, scope: !13596, inlinedAt: !14680)
!14682 = !DILocation(line: 882, column: 12, scope: !14683)
!14683 = distinct !DILexicalBlock(scope: !14684, file: !2346, line: 881, column: 26)
!14684 = distinct !DILexicalBlock(scope: !14673, file: !2346, line: 881, column: 2)
!14685 = !DILocation(line: 884, column: 14, scope: !14686)
!14686 = distinct !DILexicalBlock(scope: !14683, file: !2346, line: 884, column: 7)
!14687 = !DILocation(line: 884, column: 7, scope: !14683)
!14688 = !DILocation(line: 885, column: 4, scope: !14689)
!14689 = distinct !DILexicalBlock(scope: !14686, file: !2346, line: 884, column: 23)
!14690 = !DILocation(line: 886, column: 10, scope: !14689)
!14691 = !DILocation(line: 887, column: 3, scope: !14689)
!14692 = !DILocation(line: 0, scope: !13614, inlinedAt: !14693)
!14693 = distinct !DILocation(line: 881, column: 2, scope: !14684)
!14694 = !DILocation(line: 0, scope: !13622, inlinedAt: !14695)
!14695 = distinct !DILocation(line: 215, column: 2, scope: !13614, inlinedAt: !14693)
!14696 = !DILocation(line: 95, column: 2, scope: !13622, inlinedAt: !14695)
!14697 = !DILocation(line: 890, column: 2, scope: !14668)
!14698 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2346, file: !2346, line: 893, type: !13545, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14699)
!14699 = !{!14700}
!14700 = !DILocalVariable(name: "thread", arg: 1, scope: !14698, file: !2346, line: 893, type: !2241)
!14701 = !DILocation(line: 0, scope: !14698)
!14702 = !DILocation(line: 0, scope: !14554, inlinedAt: !14703)
!14703 = distinct !DILocation(line: 895, column: 2, scope: !14698)
!14704 = !DILocation(line: 0, scope: !14558, inlinedAt: !14703)
!14705 = !DILocation(line: 0, scope: !13587, inlinedAt: !14706)
!14706 = distinct !DILocation(line: 788, column: 2, scope: !14558, inlinedAt: !14703)
!14707 = !DILocation(line: 55, column: 2, scope: !13596, inlinedAt: !14708)
!14708 = distinct !DILocation(line: 145, column: 10, scope: !13587, inlinedAt: !14706)
!14709 = !DILocation(line: 0, scope: !13596, inlinedAt: !14708)
!14710 = !DILocation(line: 789, column: 3, scope: !14568, inlinedAt: !14703)
!14711 = !DILocation(line: 0, scope: !13614, inlinedAt: !14712)
!14712 = distinct !DILocation(line: 788, column: 2, scope: !14569, inlinedAt: !14703)
!14713 = !DILocation(line: 0, scope: !13622, inlinedAt: !14714)
!14714 = distinct !DILocation(line: 215, column: 2, scope: !13614, inlinedAt: !14712)
!14715 = !DILocation(line: 95, column: 2, scope: !13622, inlinedAt: !14714)
!14716 = !DILocation(line: 896, column: 8, scope: !14698)
!14717 = !DILocation(line: 897, column: 1, scope: !14698)
!14718 = distinct !DISubprogram(name: "z_set_prio", scope: !2346, file: !2346, line: 902, type: !13907, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14719)
!14719 = !{!14720, !14721, !14722, !14723, !14725}
!14720 = !DILocalVariable(name: "thread", arg: 1, scope: !14718, file: !2346, line: 902, type: !2241)
!14721 = !DILocalVariable(name: "prio", arg: 2, scope: !14718, file: !2346, line: 902, type: !107)
!14722 = !DILocalVariable(name: "need_sched", scope: !14718, file: !2346, line: 904, type: !136)
!14723 = !DILocalVariable(name: "__i", scope: !14724, file: !2346, line: 906, type: !13579)
!14724 = distinct !DILexicalBlock(scope: !14718, file: !2346, line: 906, column: 2)
!14725 = !DILocalVariable(name: "__key", scope: !14724, file: !2346, line: 906, type: !13579)
!14726 = !DILocation(line: 0, scope: !14718)
!14727 = !DILocation(line: 0, scope: !14724)
!14728 = !DILocation(line: 0, scope: !13587, inlinedAt: !14729)
!14729 = distinct !DILocation(line: 906, column: 2, scope: !14724)
!14730 = !DILocation(line: 55, column: 2, scope: !13596, inlinedAt: !14731)
!14731 = distinct !DILocation(line: 145, column: 10, scope: !13587, inlinedAt: !14729)
!14732 = !DILocation(line: 0, scope: !13596, inlinedAt: !14731)
!14733 = !DILocation(line: 907, column: 16, scope: !14734)
!14734 = distinct !DILexicalBlock(scope: !14735, file: !2346, line: 906, column: 26)
!14735 = distinct !DILexicalBlock(scope: !14724, file: !2346, line: 906, column: 2)
!14736 = !DILocation(line: 909, column: 7, scope: !14734)
!14737 = !DILocation(line: 0, scope: !13756, inlinedAt: !14738)
!14738 = distinct !DILocation(line: 912, column: 5, scope: !14739)
!14739 = distinct !DILexicalBlock(scope: !14740, file: !2346, line: 911, column: 63)
!14740 = distinct !DILexicalBlock(scope: !14741, file: !2346, line: 911, column: 8)
!14741 = distinct !DILexicalBlock(scope: !14742, file: !2346, line: 909, column: 19)
!14742 = distinct !DILexicalBlock(scope: !14734, file: !2346, line: 909, column: 7)
!14743 = !DILocation(line: 266, column: 28, scope: !13756, inlinedAt: !14738)
!14744 = !DILocation(line: 0, scope: !13764, inlinedAt: !14745)
!14745 = distinct !DILocation(line: 268, column: 3, scope: !13768, inlinedAt: !14738)
!14746 = !DILocation(line: 234, column: 2, scope: !13764, inlinedAt: !14745)
!14747 = !DILocation(line: 913, column: 23, scope: !14739)
!14748 = !DILocation(line: 0, scope: !13773, inlinedAt: !14749)
!14749 = distinct !DILocation(line: 914, column: 5, scope: !14739)
!14750 = !DILocation(line: 252, column: 28, scope: !13773, inlinedAt: !14749)
!14751 = !DILocation(line: 0, scope: !13780, inlinedAt: !14752)
!14752 = distinct !DILocation(line: 254, column: 3, scope: !13784, inlinedAt: !14749)
!14753 = !DILocation(line: 0, scope: !13787, inlinedAt: !14754)
!14754 = distinct !DILocation(line: 229, column: 2, scope: !13780, inlinedAt: !14752)
!14755 = !DILocation(line: 188, column: 2, scope: !13797, inlinedAt: !14754)
!14756 = !DILocation(line: 188, column: 2, scope: !13799, inlinedAt: !14754)
!14757 = !DILocation(line: 0, scope: !13797, inlinedAt: !14754)
!14758 = !DILocation(line: 189, column: 7, scope: !13802, inlinedAt: !14754)
!14759 = !DILocation(line: 189, column: 35, scope: !13802, inlinedAt: !14754)
!14760 = !DILocation(line: 189, column: 7, scope: !13803, inlinedAt: !14754)
!14761 = !DILocation(line: 190, column: 4, scope: !13807, inlinedAt: !14754)
!14762 = !DILocation(line: 192, column: 4, scope: !13807, inlinedAt: !14754)
!14763 = distinct !{!14763, !14755, !14764}
!14764 = !DILocation(line: 194, column: 2, scope: !13797, inlinedAt: !14754)
!14765 = !DILocation(line: 196, column: 2, scope: !13787, inlinedAt: !14754)
!14766 = !DILocation(line: 197, column: 1, scope: !13787, inlinedAt: !14754)
!14767 = !DILocation(line: 918, column: 4, scope: !14741)
!14768 = !DILocation(line: 919, column: 3, scope: !14741)
!14769 = !DILocation(line: 920, column: 22, scope: !14770)
!14770 = distinct !DILexicalBlock(scope: !14742, file: !2346, line: 919, column: 10)
!14771 = !DILocation(line: 0, scope: !13614, inlinedAt: !14772)
!14772 = distinct !DILocation(line: 906, column: 2, scope: !14735)
!14773 = !DILocation(line: 0, scope: !13622, inlinedAt: !14774)
!14774 = distinct !DILocation(line: 215, column: 2, scope: !13614, inlinedAt: !14772)
!14775 = !DILocation(line: 95, column: 2, scope: !13622, inlinedAt: !14774)
!14776 = !DILocation(line: 926, column: 2, scope: !14718)
!14777 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2346, file: !2346, line: 929, type: !14778, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14780)
!14778 = !DISubroutineType(types: !14779)
!14779 = !{null, !2241, !107}
!14780 = !{!14781, !14782, !14783}
!14781 = !DILocalVariable(name: "thread", arg: 1, scope: !14777, file: !2346, line: 929, type: !2241)
!14782 = !DILocalVariable(name: "prio", arg: 2, scope: !14777, file: !2346, line: 929, type: !107)
!14783 = !DILocalVariable(name: "need_sched", scope: !14777, file: !2346, line: 931, type: !136)
!14784 = !DILocation(line: 0, scope: !14777)
!14785 = !DILocation(line: 931, column: 20, scope: !14777)
!14786 = !DILocation(line: 935, column: 17, scope: !14787)
!14787 = distinct !DILexicalBlock(scope: !14777, file: !2346, line: 935, column: 6)
!14788 = !DILocation(line: 935, column: 20, scope: !14787)
!14789 = !DILocation(line: 935, column: 35, scope: !14787)
!14790 = !DILocation(line: 935, column: 48, scope: !14787)
!14791 = !DILocation(line: 935, column: 6, scope: !14777)
!14792 = !DILocation(line: 936, column: 3, scope: !14793)
!14793 = distinct !DILexicalBlock(scope: !14787, file: !2346, line: 935, column: 55)
!14794 = !DILocation(line: 937, column: 2, scope: !14793)
!14795 = !DILocation(line: 938, column: 1, scope: !14777)
!14796 = distinct !DISubprogram(name: "k_sched_lock", scope: !2346, file: !2346, line: 987, type: !3137, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14797)
!14797 = !{!14798, !14800}
!14798 = !DILocalVariable(name: "__i", scope: !14799, file: !2346, line: 989, type: !13579)
!14799 = distinct !DILexicalBlock(scope: !14796, file: !2346, line: 989, column: 2)
!14800 = !DILocalVariable(name: "__key", scope: !14799, file: !2346, line: 989, type: !13579)
!14801 = !DILocation(line: 0, scope: !14799)
!14802 = !DILocation(line: 0, scope: !13587, inlinedAt: !14803)
!14803 = distinct !DILocation(line: 989, column: 2, scope: !14799)
!14804 = !DILocation(line: 55, column: 2, scope: !13596, inlinedAt: !14805)
!14805 = distinct !DILocation(line: 145, column: 10, scope: !13587, inlinedAt: !14803)
!14806 = !DILocation(line: 0, scope: !13596, inlinedAt: !14805)
!14807 = !DILocation(line: 992, column: 3, scope: !14808)
!14808 = distinct !DILexicalBlock(scope: !14809, file: !2346, line: 989, column: 26)
!14809 = distinct !DILexicalBlock(scope: !14799, file: !2346, line: 989, column: 2)
!14810 = !DILocation(line: 0, scope: !13614, inlinedAt: !14811)
!14811 = distinct !DILocation(line: 989, column: 2, scope: !14809)
!14812 = !DILocation(line: 0, scope: !13622, inlinedAt: !14813)
!14813 = distinct !DILocation(line: 215, column: 2, scope: !13614, inlinedAt: !14811)
!14814 = !DILocation(line: 95, column: 2, scope: !13622, inlinedAt: !14813)
!14815 = !DILocation(line: 994, column: 1, scope: !14796)
!14816 = distinct !DISubprogram(name: "z_sched_lock", scope: !12420, file: !12420, line: 251, type: !3137, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !250)
!14817 = !DILocation(line: 256, column: 4, scope: !14816)
!14818 = !DILocation(line: 256, column: 19, scope: !14816)
!14819 = !DILocation(line: 256, column: 2, scope: !14816)
!14820 = !DILocation(line: 258, column: 2, scope: !14821)
!14821 = distinct !DILexicalBlock(scope: !14816, file: !12420, line: 258, column: 2)
!14822 = !{i64 2154966051}
!14823 = !DILocation(line: 259, column: 1, scope: !14816)
!14824 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2346, file: !2346, line: 996, type: !3137, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14825)
!14825 = !{!14826, !14828}
!14826 = !DILocalVariable(name: "__i", scope: !14827, file: !2346, line: 998, type: !13579)
!14827 = distinct !DILexicalBlock(scope: !14824, file: !2346, line: 998, column: 2)
!14828 = !DILocalVariable(name: "__key", scope: !14827, file: !2346, line: 998, type: !13579)
!14829 = !DILocation(line: 0, scope: !14827)
!14830 = !DILocation(line: 0, scope: !13587, inlinedAt: !14831)
!14831 = distinct !DILocation(line: 998, column: 2, scope: !14827)
!14832 = !DILocation(line: 55, column: 2, scope: !13596, inlinedAt: !14833)
!14833 = distinct !DILocation(line: 145, column: 10, scope: !13587, inlinedAt: !14831)
!14834 = !DILocation(line: 0, scope: !13596, inlinedAt: !14833)
!14835 = !DILocation(line: 1002, column: 5, scope: !14836)
!14836 = distinct !DILexicalBlock(scope: !14837, file: !2346, line: 998, column: 26)
!14837 = distinct !DILexicalBlock(scope: !14827, file: !2346, line: 998, column: 2)
!14838 = !DILocation(line: 1002, column: 20, scope: !14836)
!14839 = !DILocation(line: 1002, column: 3, scope: !14836)
!14840 = !DILocation(line: 1003, column: 3, scope: !14836)
!14841 = !DILocation(line: 0, scope: !13614, inlinedAt: !14842)
!14842 = distinct !DILocation(line: 998, column: 2, scope: !14837)
!14843 = !DILocation(line: 0, scope: !13622, inlinedAt: !14844)
!14844 = distinct !DILocation(line: 215, column: 2, scope: !13614, inlinedAt: !14842)
!14845 = !DILocation(line: 95, column: 2, scope: !13622, inlinedAt: !14844)
!14846 = !DILocation(line: 1011, column: 2, scope: !14824)
!14847 = !DILocation(line: 1012, column: 1, scope: !14824)
!14848 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2346, file: !2346, line: 1014, type: !13895, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !250)
!14849 = !DILocation(line: 1028, column: 25, scope: !14848)
!14850 = !DILocation(line: 1028, column: 2, scope: !14848)
!14851 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2346, file: !2346, line: 1155, type: !14852, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14854)
!14852 = !DISubroutineType(types: !14853)
!14853 = !{!136, !2270, !2270}
!14854 = !{!14855, !14856, !14857, !14858, !14859}
!14855 = !DILocalVariable(name: "a", arg: 1, scope: !14851, file: !2346, line: 1155, type: !2270)
!14856 = !DILocalVariable(name: "b", arg: 2, scope: !14851, file: !2346, line: 1155, type: !2270)
!14857 = !DILocalVariable(name: "thread_a", scope: !14851, file: !2346, line: 1157, type: !2241)
!14858 = !DILocalVariable(name: "thread_b", scope: !14851, file: !2346, line: 1157, type: !2241)
!14859 = !DILocalVariable(name: "cmp", scope: !14851, file: !2346, line: 1158, type: !728)
!14860 = !DILocation(line: 0, scope: !14851)
!14861 = !DILocation(line: 1160, column: 13, scope: !14851)
!14862 = !DILocation(line: 1161, column: 13, scope: !14851)
!14863 = !DILocation(line: 1163, column: 8, scope: !14851)
!14864 = !DILocation(line: 1165, column: 10, scope: !14865)
!14865 = distinct !DILexicalBlock(scope: !14851, file: !2346, line: 1165, column: 6)
!14866 = !DILocation(line: 1165, column: 6, scope: !14851)
!14867 = !DILocation(line: 1167, column: 17, scope: !14868)
!14868 = distinct !DILexicalBlock(scope: !14865, file: !2346, line: 1167, column: 13)
!14869 = !DILocation(line: 1167, column: 13, scope: !14865)
!14870 = !DILocation(line: 1170, column: 25, scope: !14871)
!14871 = distinct !DILexicalBlock(scope: !14868, file: !2346, line: 1169, column: 9)
!14872 = !DILocation(line: 1170, column: 52, scope: !14871)
!14873 = !DILocation(line: 1170, column: 35, scope: !14871)
!14874 = !DILocation(line: 1170, column: 3, scope: !14871)
!14875 = !DILocation(line: 0, scope: !14865)
!14876 = !DILocation(line: 1173, column: 1, scope: !14851)
!14877 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2346, file: !2346, line: 1175, type: !14878, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14893)
!14878 = !DISubroutineType(types: !14879)
!14879 = !{null, !14880, !2241}
!14880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14881, size: 32)
!14881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !14882, line: 37, size: 128, elements: !14883)
!14882 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14883 = !{!14884, !14892}
!14884 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !14881, file: !14882, line: 38, baseType: !14885, size: 96)
!14885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !384, line: 83, size: 96, elements: !14886)
!14886 = !{!14887, !14888, !14891}
!14887 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !14885, file: !384, line: 84, baseType: !2270, size: 32)
!14888 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !14885, file: !384, line: 85, baseType: !14889, size: 32, offset: 32)
!14889 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !384, line: 81, baseType: !14890)
!14890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14852, size: 32)
!14891 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !14885, file: !384, line: 86, baseType: !107, size: 32, offset: 64)
!14892 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !14881, file: !14882, line: 39, baseType: !107, size: 32, offset: 96)
!14893 = !{!14894, !14895, !14896, !14897, !14906}
!14894 = !DILocalVariable(name: "pq", arg: 1, scope: !14877, file: !2346, line: 1175, type: !14880)
!14895 = !DILocalVariable(name: "thread", arg: 2, scope: !14877, file: !2346, line: 1175, type: !2241)
!14896 = !DILocalVariable(name: "t", scope: !14877, file: !2346, line: 1177, type: !2241)
!14897 = !DILocalVariable(name: "__f", scope: !14898, file: !2346, line: 1190, type: !14901)
!14898 = distinct !DILexicalBlock(scope: !14899, file: !2346, line: 1190, column: 3)
!14899 = distinct !DILexicalBlock(scope: !14900, file: !2346, line: 1189, column: 27)
!14900 = distinct !DILexicalBlock(scope: !14877, file: !2346, line: 1189, column: 6)
!14901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !384, line: 155, size: 96, elements: !14902)
!14902 = !{!14903, !14904, !14905}
!14903 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !14901, file: !384, line: 156, baseType: !2341, size: 32)
!14904 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !14901, file: !384, line: 157, baseType: !182, size: 32, offset: 32)
!14905 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !14901, file: !384, line: 158, baseType: !728, size: 32, offset: 64)
!14906 = !DILocalVariable(name: "n", scope: !14907, file: !2346, line: 1190, type: !2270)
!14907 = distinct !DILexicalBlock(scope: !14908, file: !2346, line: 1190, column: 3)
!14908 = distinct !DILexicalBlock(scope: !14898, file: !2346, line: 1190, column: 3)
!14909 = !DILocation(line: 0, scope: !14877)
!14910 = !DILocation(line: 1181, column: 31, scope: !14877)
!14911 = !DILocation(line: 1181, column: 45, scope: !14877)
!14912 = !DILocation(line: 1181, column: 15, scope: !14877)
!14913 = !DILocation(line: 1181, column: 25, scope: !14877)
!14914 = !DILocation(line: 1189, column: 11, scope: !14900)
!14915 = !DILocation(line: 1189, column: 7, scope: !14900)
!14916 = !DILocation(line: 1189, column: 6, scope: !14877)
!14917 = !DILocation(line: 1190, column: 3, scope: !14898)
!14918 = !DILocation(line: 1190, column: 3, scope: !14907)
!14919 = !DILocation(line: 0, scope: !14907)
!14920 = !DILocation(line: 1190, column: 3, scope: !14908)
!14921 = !DILocation(line: 1193, column: 2, scope: !14899)
!14922 = !DILocation(line: 1191, column: 42, scope: !14923)
!14923 = distinct !DILexicalBlock(scope: !14908, file: !2346, line: 1190, column: 54)
!14924 = !DILocation(line: 1191, column: 12, scope: !14923)
!14925 = !DILocation(line: 1191, column: 22, scope: !14923)
!14926 = distinct !{!14926, !14917, !14927}
!14927 = !DILocation(line: 1192, column: 3, scope: !14898)
!14928 = !DILocation(line: 1195, column: 17, scope: !14877)
!14929 = !DILocation(line: 1195, column: 37, scope: !14877)
!14930 = !DILocation(line: 1195, column: 2, scope: !14877)
!14931 = !DILocation(line: 1196, column: 1, scope: !14877)
!14932 = !DISubprogram(name: "z_rb_foreach_next", scope: !384, file: !384, line: 176, type: !14933, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!14933 = !DISubroutineType(types: !14934)
!14934 = !{!2270, !14935, !14936}
!14935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14885, size: 32)
!14936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14901, size: 32)
!14937 = !DISubprogram(name: "rb_insert", scope: !384, file: !384, line: 105, type: !14938, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!14938 = !DISubroutineType(types: !14939)
!14939 = !{null, !14935, !2270}
!14940 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2346, file: !2346, line: 1198, type: !14878, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14941)
!14941 = !{!14942, !14943}
!14942 = !DILocalVariable(name: "pq", arg: 1, scope: !14940, file: !2346, line: 1198, type: !14880)
!14943 = !DILocalVariable(name: "thread", arg: 2, scope: !14940, file: !2346, line: 1198, type: !2241)
!14944 = !DILocation(line: 0, scope: !14940)
!14945 = !DILocation(line: 1202, column: 17, scope: !14940)
!14946 = !DILocation(line: 1202, column: 37, scope: !14940)
!14947 = !DILocation(line: 1202, column: 2, scope: !14940)
!14948 = !DILocation(line: 1204, column: 16, scope: !14949)
!14949 = distinct !DILexicalBlock(scope: !14940, file: !2346, line: 1204, column: 6)
!14950 = !DILocation(line: 1204, column: 7, scope: !14949)
!14951 = !DILocation(line: 1204, column: 6, scope: !14940)
!14952 = !DILocation(line: 1205, column: 7, scope: !14953)
!14953 = distinct !DILexicalBlock(scope: !14949, file: !2346, line: 1204, column: 22)
!14954 = !DILocation(line: 1205, column: 22, scope: !14953)
!14955 = !DILocation(line: 1206, column: 2, scope: !14953)
!14956 = !DILocation(line: 1207, column: 1, scope: !14940)
!14957 = !DISubprogram(name: "rb_remove", scope: !384, file: !384, line: 110, type: !14938, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!14958 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2346, file: !2346, line: 1209, type: !14959, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14961)
!14959 = !DISubroutineType(types: !14960)
!14960 = !{!2241, !14880}
!14961 = !{!14962, !14963, !14964}
!14962 = !DILocalVariable(name: "pq", arg: 1, scope: !14958, file: !2346, line: 1209, type: !14880)
!14963 = !DILocalVariable(name: "thread", scope: !14958, file: !2346, line: 1211, type: !2241)
!14964 = !DILocalVariable(name: "n", scope: !14958, file: !2346, line: 1212, type: !2270)
!14965 = !DILocation(line: 0, scope: !14958)
!14966 = !DILocation(line: 1212, column: 37, scope: !14958)
!14967 = !DILocation(line: 1212, column: 21, scope: !14958)
!14968 = !DILocation(line: 1217, column: 2, scope: !14958)
!14969 = distinct !DISubprogram(name: "rb_get_min", scope: !384, file: !384, line: 115, type: !14970, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14972)
!14970 = !DISubroutineType(types: !14971)
!14971 = !{!2270, !14935}
!14972 = !{!14973}
!14973 = !DILocalVariable(name: "tree", arg: 1, scope: !14969, file: !384, line: 115, type: !14935)
!14974 = !DILocation(line: 0, scope: !14969)
!14975 = !DILocation(line: 117, column: 9, scope: !14969)
!14976 = !DILocation(line: 117, column: 2, scope: !14969)
!14977 = !DISubprogram(name: "z_rb_get_minmax", scope: !384, file: !384, line: 100, type: !14978, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!14978 = !DISubroutineType(types: !14979)
!14979 = !{!2270, !14935, !133}
!14980 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2346, file: !2346, line: 1246, type: !14981, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !14989)
!14981 = !DISubroutineType(types: !14982)
!14982 = !{!2241, !14983}
!14983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14984, size: 32)
!14984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !14882, line: 53, size: 2080, elements: !14985)
!14985 = !{!14986, !14988}
!14986 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !14984, file: !14882, line: 54, baseType: !14987, size: 2048)
!14987 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2277, size: 2048, elements: !219)
!14988 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !14984, file: !14882, line: 55, baseType: !32, size: 32, offset: 2048)
!14989 = !{!14990, !14991, !14992, !14993}
!14990 = !DILocalVariable(name: "pq", arg: 1, scope: !14980, file: !2346, line: 1246, type: !14983)
!14991 = !DILocalVariable(name: "thread", scope: !14980, file: !2346, line: 1252, type: !2241)
!14992 = !DILocalVariable(name: "l", scope: !14980, file: !2346, line: 1253, type: !13790)
!14993 = !DILocalVariable(name: "n", scope: !14980, file: !2346, line: 1254, type: !2342)
!14994 = !DILocation(line: 0, scope: !14980)
!14995 = !DILocation(line: 1248, column: 11, scope: !14996)
!14996 = distinct !DILexicalBlock(scope: !14980, file: !2346, line: 1248, column: 6)
!14997 = !DILocation(line: 1248, column: 7, scope: !14996)
!14998 = !DILocation(line: 1248, column: 6, scope: !14980)
!14999 = !DILocation(line: 1253, column: 31, scope: !14980)
!15000 = !DILocation(line: 1253, column: 20, scope: !14980)
!15001 = !DILocation(line: 1254, column: 19, scope: !14980)
!15002 = !DILocation(line: 1260, column: 1, scope: !14980)
!15003 = distinct !DISubprogram(name: "z_unpend_all", scope: !2346, file: !2346, line: 1262, type: !15004, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !15006)
!15004 = !DISubroutineType(types: !15005)
!15005 = !{!107, !2272}
!15006 = !{!15007, !15008, !15009}
!15007 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15003, file: !2346, line: 1262, type: !2272)
!15008 = !DILocalVariable(name: "need_sched", scope: !15003, file: !2346, line: 1264, type: !107)
!15009 = !DILocalVariable(name: "thread", scope: !15003, file: !2346, line: 1265, type: !2241)
!15010 = !DILocation(line: 0, scope: !15003)
!15011 = !DILocation(line: 1267, column: 19, scope: !15003)
!15012 = !DILocation(line: 1267, column: 41, scope: !15003)
!15013 = !DILocation(line: 1267, column: 2, scope: !15003)
!15014 = !DILocation(line: 1268, column: 3, scope: !15015)
!15015 = distinct !DILexicalBlock(scope: !15003, file: !2346, line: 1267, column: 50)
!15016 = !DILocation(line: 1269, column: 3, scope: !15015)
!15017 = distinct !{!15017, !15013, !15018}
!15018 = !DILocation(line: 1271, column: 2, scope: !15003)
!15019 = !DILocation(line: 1273, column: 2, scope: !15003)
!15020 = distinct !DISubprogram(name: "z_waitq_head", scope: !12744, file: !12744, line: 52, type: !14638, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !15021)
!15021 = !{!15022}
!15022 = !DILocalVariable(name: "w", arg: 1, scope: !15020, file: !12744, line: 52, type: !2272)
!15023 = !DILocation(line: 0, scope: !15020)
!15024 = !DILocation(line: 54, column: 52, scope: !15020)
!15025 = !DILocation(line: 54, column: 28, scope: !15020)
!15026 = !DILocation(line: 54, column: 9, scope: !15020)
!15027 = !DILocation(line: 54, column: 2, scope: !15020)
!15028 = distinct !DISubprogram(name: "init_ready_q", scope: !2346, file: !2346, line: 1276, type: !15029, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !15036)
!15029 = !DISubroutineType(types: !15030)
!15030 = !{null, !15031}
!15031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15032, size: 32)
!15032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !228, line: 83, size: 96, elements: !15033)
!15033 = !{!15034, !15035}
!15034 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15032, file: !228, line: 86, baseType: !2241, size: 32)
!15035 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15032, file: !228, line: 90, baseType: !2277, size: 64, offset: 32)
!15036 = !{!15037}
!15037 = !DILocalVariable(name: "rq", arg: 1, scope: !15028, file: !2346, line: 1276, type: !15031)
!15038 = !DILocation(line: 0, scope: !15028)
!15039 = !DILocation(line: 1289, column: 22, scope: !15028)
!15040 = !DILocation(line: 1289, column: 2, scope: !15028)
!15041 = !DILocation(line: 1291, column: 1, scope: !15028)
!15042 = distinct !DISubprogram(name: "sys_dlist_init", scope: !233, file: !233, line: 197, type: !15043, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !15045)
!15043 = !DISubroutineType(types: !15044)
!15044 = !{null, !13790}
!15045 = !{!15046}
!15046 = !DILocalVariable(name: "list", arg: 1, scope: !15042, file: !233, line: 197, type: !13790)
!15047 = !DILocation(line: 0, scope: !15042)
!15048 = !DILocation(line: 199, column: 8, scope: !15042)
!15049 = !DILocation(line: 199, column: 13, scope: !15042)
!15050 = !DILocation(line: 200, column: 8, scope: !15042)
!15051 = !DILocation(line: 200, column: 13, scope: !15042)
!15052 = !DILocation(line: 201, column: 1, scope: !15042)
!15053 = distinct !DISubprogram(name: "z_sched_init", scope: !2346, file: !2346, line: 1293, type: !3137, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !250)
!15054 = !DILocation(line: 1302, column: 2, scope: !15053)
!15055 = !DILocation(line: 1306, column: 2, scope: !15053)
!15056 = !DILocation(line: 1309, column: 1, scope: !15053)
!15057 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2346, file: !2346, line: 1311, type: !15058, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !15061)
!15058 = !DISubroutineType(types: !15059)
!15059 = !{!107, !15060}
!15060 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !359, line: 347, baseType: !2241)
!15061 = !{!15062}
!15062 = !DILocalVariable(name: "thread", arg: 1, scope: !15057, file: !2346, line: 1311, type: !15060)
!15063 = !DILocation(line: 0, scope: !15057)
!15064 = !DILocation(line: 1313, column: 22, scope: !15057)
!15065 = !DILocation(line: 1313, column: 9, scope: !15057)
!15066 = !DILocation(line: 1313, column: 2, scope: !15057)
!15067 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2346, file: !2346, line: 1325, type: !15068, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !15070)
!15068 = !DISubroutineType(types: !15069)
!15069 = !{null, !15060, !107}
!15070 = !{!15071, !15072, !15073}
!15071 = !DILocalVariable(name: "thread", arg: 1, scope: !15067, file: !2346, line: 1325, type: !15060)
!15072 = !DILocalVariable(name: "prio", arg: 2, scope: !15067, file: !2346, line: 1325, type: !107)
!15073 = !DILocalVariable(name: "th", scope: !15067, file: !2346, line: 1334, type: !2241)
!15074 = !DILocation(line: 0, scope: !15067)
!15075 = !DILocation(line: 1336, column: 2, scope: !15067)
!15076 = !DILocation(line: 1337, column: 1, scope: !15067)
!15077 = distinct !DISubprogram(name: "k_can_yield", scope: !2346, file: !2346, line: 1384, type: !6882, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !250)
!15078 = !DILocation(line: 1386, column: 11, scope: !15077)
!15079 = !DILocation(line: 1386, column: 29, scope: !15077)
!15080 = !DILocation(line: 1386, column: 32, scope: !15077)
!15081 = !DILocation(line: 1386, column: 46, scope: !15077)
!15082 = !DILocation(line: 1387, column: 28, scope: !15077)
!15083 = !DILocation(line: 1387, column: 4, scope: !15077)
!15084 = !DILocation(line: 1386, column: 2, scope: !15077)
!15085 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !224, file: !224, line: 989, type: !6882, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !250)
!15086 = !DILocation(line: 993, column: 10, scope: !15085)
!15087 = !DILocation(line: 993, column: 2, scope: !15085)
!15088 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2346, file: !2346, line: 1390, type: !3137, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !15089)
!15089 = !{!15090}
!15090 = !DILocalVariable(name: "key", scope: !15088, file: !2346, line: 1396, type: !13579)
!15091 = !DILocation(line: 0, scope: !13587, inlinedAt: !15092)
!15092 = distinct !DILocation(line: 1396, column: 25, scope: !15088)
!15093 = !DILocation(line: 55, column: 2, scope: !13596, inlinedAt: !15094)
!15094 = distinct !DILocation(line: 145, column: 10, scope: !13587, inlinedAt: !15092)
!15095 = !DILocation(line: 0, scope: !13596, inlinedAt: !15094)
!15096 = !DILocation(line: 0, scope: !15088)
!15097 = !DILocation(line: 1400, column: 18, scope: !15098)
!15098 = distinct !DILexicalBlock(scope: !15099, file: !2346, line: 1399, column: 36)
!15099 = distinct !DILexicalBlock(scope: !15088, file: !2346, line: 1398, column: 6)
!15100 = !DILocation(line: 0, scope: !13756, inlinedAt: !15101)
!15101 = distinct !DILocation(line: 1400, column: 3, scope: !15098)
!15102 = !DILocation(line: 266, column: 15, scope: !13756, inlinedAt: !15101)
!15103 = !DILocation(line: 266, column: 28, scope: !13756, inlinedAt: !15101)
!15104 = !DILocation(line: 0, scope: !13764, inlinedAt: !15105)
!15105 = distinct !DILocation(line: 268, column: 3, scope: !13768, inlinedAt: !15101)
!15106 = !DILocation(line: 234, column: 2, scope: !13764, inlinedAt: !15105)
!15107 = !DILocation(line: 1402, column: 15, scope: !15088)
!15108 = !DILocation(line: 0, scope: !13773, inlinedAt: !15109)
!15109 = distinct !DILocation(line: 1402, column: 2, scope: !15088)
!15110 = !DILocation(line: 252, column: 15, scope: !13773, inlinedAt: !15109)
!15111 = !DILocation(line: 252, column: 28, scope: !13773, inlinedAt: !15109)
!15112 = !DILocation(line: 0, scope: !13780, inlinedAt: !15113)
!15113 = distinct !DILocation(line: 254, column: 3, scope: !13784, inlinedAt: !15109)
!15114 = !DILocation(line: 0, scope: !13787, inlinedAt: !15115)
!15115 = distinct !DILocation(line: 229, column: 2, scope: !13780, inlinedAt: !15113)
!15116 = !DILocation(line: 188, column: 2, scope: !13797, inlinedAt: !15115)
!15117 = !DILocation(line: 188, column: 2, scope: !13799, inlinedAt: !15115)
!15118 = !DILocation(line: 0, scope: !13797, inlinedAt: !15115)
!15119 = !DILocation(line: 189, column: 7, scope: !13802, inlinedAt: !15115)
!15120 = !DILocation(line: 189, column: 35, scope: !13802, inlinedAt: !15115)
!15121 = !DILocation(line: 189, column: 7, scope: !13803, inlinedAt: !15115)
!15122 = !DILocation(line: 191, column: 21, scope: !13807, inlinedAt: !15115)
!15123 = !DILocation(line: 190, column: 4, scope: !13807, inlinedAt: !15115)
!15124 = !DILocation(line: 192, column: 4, scope: !13807, inlinedAt: !15115)
!15125 = distinct !{!15125, !15116, !15126}
!15126 = !DILocation(line: 194, column: 2, scope: !13797, inlinedAt: !15115)
!15127 = !DILocation(line: 196, column: 37, scope: !13787, inlinedAt: !15115)
!15128 = !DILocation(line: 196, column: 2, scope: !13787, inlinedAt: !15115)
!15129 = !DILocation(line: 197, column: 1, scope: !13787, inlinedAt: !15115)
!15130 = !DILocation(line: 1403, column: 2, scope: !15088)
!15131 = !DILocation(line: 0, scope: !14198, inlinedAt: !15132)
!15132 = distinct !DILocation(line: 1404, column: 2, scope: !15088)
!15133 = !DILocation(line: 196, column: 9, scope: !14198, inlinedAt: !15132)
!15134 = !DILocation(line: 1405, column: 1, scope: !15088)
!15135 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2346, file: !2346, line: 1459, type: !15136, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !15138)
!15136 = !DISubroutineType(types: !15137)
!15137 = !{!728, !14378}
!15138 = !{!15139, !15140, !15141}
!15139 = !DILocalVariable(name: "timeout", arg: 1, scope: !15135, file: !2346, line: 1459, type: !14378)
!15140 = !DILocalVariable(name: "ticks", scope: !15135, file: !2346, line: 1461, type: !103)
!15141 = !DILocalVariable(name: "ret", scope: !15135, file: !2346, line: 1480, type: !728)
!15142 = !DILocation(line: 0, scope: !15135)
!15143 = !DILocation(line: 1468, column: 6, scope: !15144)
!15144 = distinct !DILexicalBlock(scope: !15135, file: !2346, line: 1468, column: 6)
!15145 = !DILocation(line: 1468, column: 6, scope: !15135)
!15146 = !DILocation(line: 1469, column: 20, scope: !15147)
!15147 = distinct !DILexicalBlock(scope: !15144, file: !2346, line: 1468, column: 40)
!15148 = !DILocation(line: 1469, column: 3, scope: !15147)
!15149 = !DILocation(line: 1473, column: 3, scope: !15147)
!15150 = !DILocation(line: 1478, column: 10, scope: !15135)
!15151 = !DILocation(line: 1480, column: 16, scope: !15135)
!15152 = !DILocation(line: 1485, column: 1, scope: !15135)
!15153 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3322, file: !3322, line: 310, type: !15154, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !15156)
!15154 = !DISubroutineType(types: !15155)
!15155 = !{null, !15060}
!15156 = !{!15157}
!15157 = !DILocalVariable(name: "thread", arg: 1, scope: !15153, file: !3322, line: 310, type: !15060)
!15158 = !DILocation(line: 0, scope: !15153)
!15159 = !DILocation(line: 319, column: 2, scope: !15160)
!15160 = distinct !DILexicalBlock(scope: !15153, file: !3322, line: 319, column: 2)
!15161 = !{i64 2154884440}
!15162 = !DILocation(line: 320, column: 2, scope: !15153)
!15163 = !DILocation(line: 321, column: 1, scope: !15153)
!15164 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2346, file: !2346, line: 1415, type: !15165, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !15167)
!15165 = !DISubroutineType(types: !15166)
!15166 = !{!728, !103}
!15167 = !{!15168, !15169, !15170, !15171}
!15168 = !DILocalVariable(name: "ticks", arg: 1, scope: !15164, file: !2346, line: 1415, type: !103)
!15169 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15164, file: !2346, line: 1418, type: !162)
!15170 = !DILocalVariable(name: "timeout", scope: !15164, file: !2346, line: 1430, type: !14378)
!15171 = !DILocalVariable(name: "key", scope: !15164, file: !2346, line: 1437, type: !13579)
!15172 = !DILocation(line: 0, scope: !15164)
!15173 = !DILocation(line: 1425, column: 12, scope: !15174)
!15174 = distinct !DILexicalBlock(scope: !15164, file: !2346, line: 1425, column: 6)
!15175 = !DILocation(line: 1425, column: 6, scope: !15164)
!15176 = !DILocation(line: 1426, column: 3, scope: !15177)
!15177 = distinct !DILexicalBlock(scope: !15174, file: !2346, line: 1425, column: 18)
!15178 = !DILocation(line: 1427, column: 3, scope: !15177)
!15179 = !DILocation(line: 1431, column: 24, scope: !15180)
!15180 = distinct !DILexicalBlock(scope: !15164, file: !2346, line: 1431, column: 6)
!15181 = !DILocation(line: 1431, column: 6, scope: !15164)
!15182 = !DILocation(line: 1432, column: 35, scope: !15183)
!15183 = distinct !DILexicalBlock(scope: !15180, file: !2346, line: 1431, column: 30)
!15184 = !DILocation(line: 1432, column: 27, scope: !15183)
!15185 = !DILocation(line: 1433, column: 2, scope: !15183)
!15186 = !DILocation(line: 1434, column: 27, scope: !15187)
!15187 = distinct !DILexicalBlock(scope: !15180, file: !2346, line: 1433, column: 9)
!15188 = !DILocation(line: 0, scope: !15180)
!15189 = !DILocation(line: 0, scope: !13587, inlinedAt: !15190)
!15190 = distinct !DILocation(line: 1437, column: 25, scope: !15164)
!15191 = !DILocation(line: 55, column: 2, scope: !13596, inlinedAt: !15192)
!15192 = distinct !DILocation(line: 145, column: 10, scope: !13587, inlinedAt: !15190)
!15193 = !DILocation(line: 0, scope: !13596, inlinedAt: !15192)
!15194 = !DILocation(line: 1440, column: 20, scope: !15164)
!15195 = !DILocation(line: 1440, column: 18, scope: !15164)
!15196 = !DILocation(line: 1442, column: 2, scope: !15164)
!15197 = !DILocation(line: 1443, column: 23, scope: !15164)
!15198 = !DILocation(line: 1443, column: 2, scope: !15164)
!15199 = !DILocation(line: 1444, column: 29, scope: !15164)
!15200 = !DILocation(line: 1444, column: 2, scope: !15164)
!15201 = !DILocation(line: 0, scope: !14198, inlinedAt: !15202)
!15202 = distinct !DILocation(line: 1446, column: 8, scope: !15164)
!15203 = !DILocation(line: 196, column: 9, scope: !14198, inlinedAt: !15202)
!15204 = !DILocation(line: 1450, column: 10, scope: !15164)
!15205 = !DILocation(line: 1450, column: 45, scope: !15164)
!15206 = !DILocation(line: 1450, column: 43, scope: !15164)
!15207 = !DILocation(line: 1451, column: 6, scope: !15164)
!15208 = !DILocation(line: 1457, column: 1, scope: !15164)
!15209 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !12979, file: !12979, line: 1103, type: !12980, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !15210)
!15210 = !{!15211}
!15211 = !DILocalVariable(name: "t", arg: 1, scope: !15209, file: !12979, line: 1103, type: !1500)
!15212 = !DILocation(line: 0, scope: !15209)
!15213 = !DILocation(line: 0, scope: !13634, inlinedAt: !15214)
!15214 = distinct !DILocation(line: 1106, column: 9, scope: !15209)
!15215 = !DILocation(line: 139, column: 13, scope: !15216, inlinedAt: !15214)
!15216 = distinct !DILexicalBlock(scope: !15217, file: !12979, line: 138, column: 10)
!15217 = distinct !DILexicalBlock(scope: !15218, file: !12979, line: 136, column: 7)
!15218 = distinct !DILexicalBlock(scope: !13655, file: !12979, line: 134, column: 17)
!15219 = !DILocation(line: 1106, column: 2, scope: !15209)
!15220 = distinct !DISubprogram(name: "k_yield", scope: !3322, file: !3322, line: 140, type: !3137, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !250)
!15221 = !DILocation(line: 148, column: 2, scope: !15222)
!15222 = distinct !DILexicalBlock(scope: !15220, file: !3322, line: 148, column: 2)
!15223 = !{i64 2154883760}
!15224 = !DILocation(line: 149, column: 2, scope: !15220)
!15225 = !DILocation(line: 150, column: 1, scope: !15220)
!15226 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2346, file: !2346, line: 1495, type: !15227, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !15229)
!15227 = !DISubroutineType(types: !15228)
!15228 = !{!728, !107}
!15229 = !{!15230, !15231}
!15230 = !DILocalVariable(name: "us", arg: 1, scope: !15226, file: !2346, line: 1495, type: !107)
!15231 = !DILocalVariable(name: "ticks", scope: !15226, file: !2346, line: 1497, type: !728)
!15232 = !DILocation(line: 0, scope: !15226)
!15233 = !DILocation(line: 1501, column: 31, scope: !15226)
!15234 = !DILocation(line: 1501, column: 10, scope: !15226)
!15235 = !DILocation(line: 1502, column: 23, scope: !15226)
!15236 = !DILocation(line: 1502, column: 10, scope: !15226)
!15237 = !DILocation(line: 1506, column: 31, scope: !15226)
!15238 = !DILocation(line: 1506, column: 9, scope: !15226)
!15239 = !DILocation(line: 1506, column: 2, scope: !15226)
!15240 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !12979, file: !12979, line: 571, type: !12980, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !15241)
!15241 = !{!15242}
!15242 = !DILocalVariable(name: "t", arg: 1, scope: !15240, file: !12979, line: 571, type: !1500)
!15243 = !DILocation(line: 0, scope: !15240)
!15244 = !DILocation(line: 0, scope: !13634, inlinedAt: !15245)
!15245 = distinct !DILocation(line: 574, column: 9, scope: !15240)
!15246 = !DILocation(line: 135, column: 5, scope: !15218, inlinedAt: !15245)
!15247 = !DILocation(line: 139, column: 13, scope: !15216, inlinedAt: !15245)
!15248 = !DILocation(line: 574, column: 2, scope: !15240)
!15249 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !12979, file: !12979, line: 1187, type: !12980, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !15250)
!15250 = !{!15251}
!15251 = !DILocalVariable(name: "t", arg: 1, scope: !15249, file: !12979, line: 1187, type: !1500)
!15252 = !DILocation(line: 0, scope: !15249)
!15253 = !DILocation(line: 0, scope: !13634, inlinedAt: !15254)
!15254 = distinct !DILocation(line: 1190, column: 9, scope: !15249)
!15255 = !DILocation(line: 145, column: 13, scope: !15256, inlinedAt: !15254)
!15256 = distinct !DILexicalBlock(scope: !13652, file: !12979, line: 144, column: 10)
!15257 = !DILocation(line: 1190, column: 2, scope: !15249)
!15258 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2346, file: !2346, line: 1517, type: !15154, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !15259)
!15259 = !{!15260}
!15260 = !DILocalVariable(name: "thread", arg: 1, scope: !15258, file: !2346, line: 1517, type: !15060)
!15261 = !DILocation(line: 0, scope: !15258)
!15262 = !DILocation(line: 1521, column: 6, scope: !15263)
!15263 = distinct !DILexicalBlock(scope: !15258, file: !2346, line: 1521, column: 6)
!15264 = !DILocation(line: 1521, column: 6, scope: !15258)
!15265 = !DILocation(line: 1525, column: 6, scope: !15266)
!15266 = distinct !DILexicalBlock(scope: !15258, file: !2346, line: 1525, column: 6)
!15267 = !DILocation(line: 1525, column: 37, scope: !15266)
!15268 = !DILocation(line: 1525, column: 6, scope: !15258)
!15269 = !DILocation(line: 1527, column: 20, scope: !15270)
!15270 = distinct !DILexicalBlock(scope: !15271, file: !2346, line: 1527, column: 7)
!15271 = distinct !DILexicalBlock(scope: !15266, file: !2346, line: 1525, column: 42)
!15272 = !DILocation(line: 1527, column: 33, scope: !15270)
!15273 = !DILocation(line: 1527, column: 7, scope: !15271)
!15274 = !DILocation(line: 1532, column: 2, scope: !15258)
!15275 = !DILocation(line: 1533, column: 2, scope: !15258)
!15276 = !DILocation(line: 1031, column: 3, scope: !14231, inlinedAt: !15277)
!15277 = distinct !DILocation(line: 48, column: 10, scope: !14235, inlinedAt: !15278)
!15278 = distinct !DILocation(line: 1537, column: 7, scope: !15279)
!15279 = distinct !DILexicalBlock(scope: !15258, file: !2346, line: 1537, column: 6)
!15280 = !DILocation(line: 0, scope: !14231, inlinedAt: !15277)
!15281 = !DILocation(line: 48, column: 9, scope: !14235, inlinedAt: !15278)
!15282 = !DILocation(line: 1537, column: 6, scope: !15258)
!15283 = !DILocation(line: 1538, column: 3, scope: !15284)
!15284 = distinct !DILexicalBlock(scope: !15279, file: !2346, line: 1537, column: 25)
!15285 = !DILocation(line: 1539, column: 2, scope: !15284)
!15286 = !DILocation(line: 1540, column: 1, scope: !15258)
!15287 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12420, file: !12420, line: 101, type: !13705, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !15288)
!15288 = !{!15289}
!15289 = !DILocalVariable(name: "thread", arg: 1, scope: !15287, file: !12420, line: 101, type: !2241)
!15290 = !DILocation(line: 0, scope: !15287)
!15291 = !DILocation(line: 103, column: 23, scope: !15287)
!15292 = !DILocation(line: 103, column: 36, scope: !15287)
!15293 = !DILocation(line: 103, column: 55, scope: !15287)
!15294 = !DILocation(line: 103, column: 2, scope: !15287)
!15295 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2346, file: !2346, line: 1567, type: !15296, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !15298)
!15296 = !DISubroutineType(types: !15297)
!15297 = !{!15060}
!15298 = !{!15299}
!15299 = !DILocalVariable(name: "ret", scope: !15295, file: !2346, line: 1577, type: !15060)
!15300 = !DILocation(line: 1577, column: 30, scope: !15295)
!15301 = !DILocation(line: 0, scope: !15295)
!15302 = !DILocation(line: 1582, column: 2, scope: !15295)
!15303 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2346, file: !2346, line: 1593, type: !7156, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !250)
!15304 = !DILocation(line: 1031, column: 3, scope: !14231, inlinedAt: !15305)
!15305 = distinct !DILocation(line: 48, column: 10, scope: !14235, inlinedAt: !15306)
!15306 = distinct !DILocation(line: 1595, column: 10, scope: !15303)
!15307 = !DILocation(line: 0, scope: !14231, inlinedAt: !15305)
!15308 = !DILocation(line: 48, column: 9, scope: !14235, inlinedAt: !15306)
!15309 = !DILocation(line: 1595, column: 27, scope: !15303)
!15310 = !DILocation(line: 1595, column: 41, scope: !15303)
!15311 = !DILocation(line: 1595, column: 30, scope: !15303)
!15312 = !DILocation(line: 1595, column: 2, scope: !15303)
!15313 = distinct !DISubprogram(name: "z_thread_abort", scope: !2346, file: !2346, line: 1725, type: !13545, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !15314)
!15314 = !{!15315, !15316}
!15315 = !DILocalVariable(name: "thread", arg: 1, scope: !15313, file: !2346, line: 1725, type: !2241)
!15316 = !DILocalVariable(name: "key", scope: !15313, file: !2346, line: 1727, type: !13579)
!15317 = !DILocation(line: 0, scope: !15313)
!15318 = !DILocation(line: 0, scope: !13587, inlinedAt: !15319)
!15319 = distinct !DILocation(line: 1727, column: 25, scope: !15313)
!15320 = !DILocation(line: 55, column: 2, scope: !13596, inlinedAt: !15321)
!15321 = distinct !DILocation(line: 145, column: 10, scope: !13587, inlinedAt: !15319)
!15322 = !DILocation(line: 0, scope: !13596, inlinedAt: !15321)
!15323 = !DILocation(line: 1729, column: 20, scope: !15324)
!15324 = distinct !DILexicalBlock(scope: !15313, file: !2346, line: 1729, column: 6)
!15325 = !DILocation(line: 1729, column: 33, scope: !15324)
!15326 = !DILocation(line: 1729, column: 48, scope: !15324)
!15327 = !DILocation(line: 1729, column: 6, scope: !15313)
!15328 = !DILocation(line: 0, scope: !13614, inlinedAt: !15329)
!15329 = distinct !DILocation(line: 1730, column: 3, scope: !15330)
!15330 = distinct !DILexicalBlock(scope: !15324, file: !2346, line: 1729, column: 54)
!15331 = !DILocation(line: 0, scope: !13622, inlinedAt: !15332)
!15332 = distinct !DILocation(line: 215, column: 2, scope: !13614, inlinedAt: !15329)
!15333 = !DILocation(line: 95, column: 2, scope: !13622, inlinedAt: !15332)
!15334 = !DILocation(line: 1732, column: 3, scope: !15335)
!15335 = distinct !DILexicalBlock(scope: !15330, file: !2346, line: 1732, column: 3)
!15336 = !{i64 2155621170, i64 2155621186, i64 2155621212, i64 2155621240, i64 2155621260}
!15337 = !DILocation(line: 1733, column: 3, scope: !15330)
!15338 = !DILocation(line: 1736, column: 20, scope: !15339)
!15339 = distinct !DILexicalBlock(scope: !15313, file: !2346, line: 1736, column: 6)
!15340 = !DILocation(line: 1736, column: 33, scope: !15339)
!15341 = !DILocation(line: 1736, column: 49, scope: !15339)
!15342 = !DILocation(line: 1736, column: 6, scope: !15313)
!15343 = !DILocation(line: 0, scope: !13614, inlinedAt: !15344)
!15344 = distinct !DILocation(line: 1737, column: 3, scope: !15345)
!15345 = distinct !DILexicalBlock(scope: !15339, file: !2346, line: 1736, column: 56)
!15346 = !DILocation(line: 0, scope: !13622, inlinedAt: !15347)
!15347 = distinct !DILocation(line: 215, column: 2, scope: !13614, inlinedAt: !15344)
!15348 = !DILocation(line: 95, column: 2, scope: !13622, inlinedAt: !15347)
!15349 = !DILocation(line: 1738, column: 3, scope: !15345)
!15350 = !DILocation(line: 1775, column: 2, scope: !15313)
!15351 = !DILocation(line: 1776, column: 16, scope: !15352)
!15352 = distinct !DILexicalBlock(scope: !15313, file: !2346, line: 1776, column: 6)
!15353 = !DILocation(line: 1776, column: 13, scope: !15352)
!15354 = !DILocation(line: 1776, column: 25, scope: !15352)
!15355 = !DILocation(line: 1031, column: 3, scope: !14231, inlinedAt: !15356)
!15356 = distinct !DILocation(line: 48, column: 10, scope: !14235, inlinedAt: !15357)
!15357 = distinct !DILocation(line: 1776, column: 29, scope: !15352)
!15358 = !DILocation(line: 0, scope: !14231, inlinedAt: !15356)
!15359 = !DILocation(line: 48, column: 9, scope: !14235, inlinedAt: !15357)
!15360 = !DILocation(line: 1776, column: 6, scope: !15313)
!15361 = !DILocation(line: 0, scope: !14198, inlinedAt: !15362)
!15362 = distinct !DILocation(line: 1777, column: 3, scope: !15363)
!15363 = distinct !DILexicalBlock(scope: !15352, file: !2346, line: 1776, column: 47)
!15364 = !DILocation(line: 196, column: 9, scope: !14198, inlinedAt: !15362)
!15365 = !DILocation(line: 1779, column: 2, scope: !15363)
!15366 = !DILocation(line: 0, scope: !13614, inlinedAt: !15367)
!15367 = distinct !DILocation(line: 1780, column: 2, scope: !15313)
!15368 = !DILocation(line: 0, scope: !13622, inlinedAt: !15369)
!15369 = distinct !DILocation(line: 215, column: 2, scope: !13614, inlinedAt: !15367)
!15370 = !DILocation(line: 95, column: 2, scope: !13622, inlinedAt: !15369)
!15371 = !DILocation(line: 1781, column: 1, scope: !15313)
!15372 = distinct !DISubprogram(name: "end_thread", scope: !2346, file: !2346, line: 1690, type: !13545, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !15373)
!15373 = !{!15374}
!15374 = !DILocalVariable(name: "thread", arg: 1, scope: !15372, file: !2346, line: 1690, type: !2241)
!15375 = !DILocation(line: 0, scope: !15372)
!15376 = !DILocation(line: 1695, column: 20, scope: !15377)
!15377 = distinct !DILexicalBlock(scope: !15372, file: !2346, line: 1695, column: 6)
!15378 = !DILocation(line: 1695, column: 33, scope: !15377)
!15379 = !DILocation(line: 1695, column: 49, scope: !15377)
!15380 = !DILocation(line: 1695, column: 6, scope: !15372)
!15381 = !DILocation(line: 1697, column: 29, scope: !15382)
!15382 = distinct !DILexicalBlock(scope: !15377, file: !2346, line: 1695, column: 56)
!15383 = !DILocation(line: 1698, column: 7, scope: !15384)
!15384 = distinct !DILexicalBlock(scope: !15382, file: !2346, line: 1698, column: 7)
!15385 = !DILocation(line: 1698, column: 7, scope: !15382)
!15386 = !DILocation(line: 0, scope: !13756, inlinedAt: !15387)
!15387 = distinct !DILocation(line: 1699, column: 4, scope: !15388)
!15388 = distinct !DILexicalBlock(scope: !15384, file: !2346, line: 1698, column: 35)
!15389 = !DILocation(line: 266, column: 28, scope: !13756, inlinedAt: !15387)
!15390 = !DILocation(line: 0, scope: !13764, inlinedAt: !15391)
!15391 = distinct !DILocation(line: 268, column: 3, scope: !13768, inlinedAt: !15387)
!15392 = !DILocation(line: 234, column: 2, scope: !13764, inlinedAt: !15391)
!15393 = !DILocation(line: 1700, column: 3, scope: !15388)
!15394 = !DILocation(line: 1701, column: 20, scope: !15395)
!15395 = distinct !DILexicalBlock(scope: !15382, file: !2346, line: 1701, column: 7)
!15396 = !DILocation(line: 1701, column: 30, scope: !15395)
!15397 = !DILocation(line: 1701, column: 7, scope: !15382)
!15398 = !DILocation(line: 1702, column: 4, scope: !15399)
!15399 = distinct !DILexicalBlock(scope: !15395, file: !2346, line: 1701, column: 39)
!15400 = !DILocation(line: 1703, column: 3, scope: !15399)
!15401 = !DILocation(line: 1704, column: 9, scope: !15382)
!15402 = !DILocation(line: 1705, column: 23, scope: !15382)
!15403 = !DILocation(line: 1705, column: 3, scope: !15382)
!15404 = !DILocation(line: 1706, column: 3, scope: !15382)
!15405 = !DILocation(line: 1722, column: 2, scope: !15382)
!15406 = !DILocation(line: 1723, column: 1, scope: !15372)
!15407 = distinct !DISubprogram(name: "unpend_all", scope: !2346, file: !2346, line: 1674, type: !15408, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !15410)
!15408 = !DISubroutineType(types: !15409)
!15409 = !{null, !2272}
!15410 = !{!15411, !15412}
!15411 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15407, file: !2346, line: 1674, type: !2272)
!15412 = !DILocalVariable(name: "thread", scope: !15407, file: !2346, line: 1676, type: !2241)
!15413 = !DILocation(line: 0, scope: !15407)
!15414 = !DILocation(line: 1678, column: 19, scope: !15407)
!15415 = !DILocation(line: 1678, column: 41, scope: !15407)
!15416 = !DILocation(line: 1678, column: 2, scope: !15407)
!15417 = !DILocation(line: 1679, column: 3, scope: !15418)
!15418 = distinct !DILexicalBlock(scope: !15407, file: !2346, line: 1678, column: 50)
!15419 = !DILocation(line: 1680, column: 9, scope: !15418)
!15420 = !DILocalVariable(name: "thread", arg: 1, scope: !15421, file: !12440, line: 65, type: !2241)
!15421 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12440, file: !12440, line: 65, type: !15422, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !15424)
!15422 = !DISubroutineType(types: !15423)
!15423 = !{null, !2241, !32}
!15424 = !{!15420, !15425}
!15425 = !DILocalVariable(name: "value", arg: 2, scope: !15421, file: !12440, line: 65, type: !32)
!15426 = !DILocation(line: 0, scope: !15421, inlinedAt: !15427)
!15427 = distinct !DILocation(line: 1681, column: 3, scope: !15418)
!15428 = !DILocation(line: 67, column: 15, scope: !15421, inlinedAt: !15427)
!15429 = !DILocation(line: 67, column: 33, scope: !15421, inlinedAt: !15427)
!15430 = !DILocation(line: 1682, column: 3, scope: !15418)
!15431 = distinct !{!15431, !15416, !15432}
!15432 = !DILocation(line: 1683, column: 2, scope: !15407)
!15433 = !DILocation(line: 1684, column: 1, scope: !15407)
!15434 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2346, file: !2346, line: 1794, type: !15435, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !15437)
!15435 = !DISubroutineType(types: !15436)
!15436 = !{!107, !2241, !14378}
!15437 = !{!15438, !15439, !15440, !15441}
!15438 = !DILocalVariable(name: "thread", arg: 1, scope: !15434, file: !2346, line: 1794, type: !2241)
!15439 = !DILocalVariable(name: "timeout", arg: 2, scope: !15434, file: !2346, line: 1794, type: !14378)
!15440 = !DILocalVariable(name: "key", scope: !15434, file: !2346, line: 1796, type: !13579)
!15441 = !DILocalVariable(name: "ret", scope: !15434, file: !2346, line: 1797, type: !107)
!15442 = !DILocation(line: 0, scope: !15434)
!15443 = !DILocation(line: 0, scope: !13587, inlinedAt: !15444)
!15444 = distinct !DILocation(line: 1796, column: 25, scope: !15434)
!15445 = !DILocation(line: 55, column: 2, scope: !13596, inlinedAt: !15446)
!15446 = distinct !DILocation(line: 145, column: 10, scope: !13587, inlinedAt: !15444)
!15447 = !DILocation(line: 0, scope: !13596, inlinedAt: !15446)
!15448 = !DILocation(line: 1801, column: 20, scope: !15449)
!15449 = distinct !DILexicalBlock(scope: !15434, file: !2346, line: 1801, column: 6)
!15450 = !DILocation(line: 1801, column: 33, scope: !15449)
!15451 = !DILocation(line: 1801, column: 49, scope: !15449)
!15452 = !DILocation(line: 1801, column: 6, scope: !15434)
!15453 = !DILocation(line: 1803, column: 13, scope: !15454)
!15454 = distinct !DILexicalBlock(scope: !15449, file: !2346, line: 1803, column: 13)
!15455 = !DILocation(line: 1803, column: 13, scope: !15449)
!15456 = !DILocation(line: 1805, column: 24, scope: !15457)
!15457 = distinct !DILexicalBlock(scope: !15454, file: !2346, line: 1805, column: 13)
!15458 = !DILocation(line: 1805, column: 21, scope: !15457)
!15459 = !DILocation(line: 1805, column: 34, scope: !15457)
!15460 = !DILocation(line: 1806, column: 20, scope: !15457)
!15461 = !DILocation(line: 1806, column: 44, scope: !15457)
!15462 = !DILocation(line: 1806, column: 30, scope: !15457)
!15463 = !DILocation(line: 1805, column: 13, scope: !15454)
!15464 = !DILocation(line: 1810, column: 42, scope: !15465)
!15465 = distinct !DILexicalBlock(scope: !15457, file: !2346, line: 1808, column: 9)
!15466 = !DILocation(line: 1810, column: 3, scope: !15465)
!15467 = !DILocation(line: 1811, column: 22, scope: !15465)
!15468 = !DILocation(line: 1811, column: 3, scope: !15465)
!15469 = !DILocation(line: 0, scope: !14198, inlinedAt: !15470)
!15470 = distinct !DILocation(line: 1814, column: 9, scope: !15465)
!15471 = !DILocation(line: 196, column: 9, scope: !14198, inlinedAt: !15470)
!15472 = !DILocation(line: 1817, column: 3, scope: !15465)
!15473 = !DILocation(line: 0, scope: !15449)
!15474 = !DILocation(line: 0, scope: !13614, inlinedAt: !15475)
!15475 = distinct !DILocation(line: 1822, column: 2, scope: !15434)
!15476 = !DILocation(line: 0, scope: !13622, inlinedAt: !15477)
!15477 = distinct !DILocation(line: 215, column: 2, scope: !13614, inlinedAt: !15475)
!15478 = !DILocation(line: 95, column: 2, scope: !13622, inlinedAt: !15477)
!15479 = !DILocation(line: 1823, column: 2, scope: !15434)
!15480 = !DILocation(line: 1824, column: 1, scope: !15434)
!15481 = distinct !DISubprogram(name: "z_sched_wake", scope: !2346, file: !2346, line: 1882, type: !15482, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !15484)
!15482 = !DISubroutineType(types: !15483)
!15483 = !{!136, !2272, !107, !102}
!15484 = !{!15485, !15486, !15487, !15488, !15489, !15490, !15492}
!15485 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15481, file: !2346, line: 1882, type: !2272)
!15486 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !15481, file: !2346, line: 1882, type: !107)
!15487 = !DILocalVariable(name: "swap_data", arg: 3, scope: !15481, file: !2346, line: 1882, type: !102)
!15488 = !DILocalVariable(name: "thread", scope: !15481, file: !2346, line: 1884, type: !2241)
!15489 = !DILocalVariable(name: "ret", scope: !15481, file: !2346, line: 1885, type: !136)
!15490 = !DILocalVariable(name: "__i", scope: !15491, file: !2346, line: 1887, type: !13579)
!15491 = distinct !DILexicalBlock(scope: !15481, file: !2346, line: 1887, column: 2)
!15492 = !DILocalVariable(name: "__key", scope: !15491, file: !2346, line: 1887, type: !13579)
!15493 = !DILocation(line: 0, scope: !15481)
!15494 = !DILocation(line: 0, scope: !15491)
!15495 = !DILocation(line: 0, scope: !13587, inlinedAt: !15496)
!15496 = distinct !DILocation(line: 1887, column: 2, scope: !15491)
!15497 = !DILocation(line: 55, column: 2, scope: !13596, inlinedAt: !15498)
!15498 = distinct !DILocation(line: 145, column: 10, scope: !13587, inlinedAt: !15496)
!15499 = !DILocation(line: 0, scope: !13596, inlinedAt: !15498)
!15500 = !DILocation(line: 1888, column: 12, scope: !15501)
!15501 = distinct !DILexicalBlock(scope: !15502, file: !2346, line: 1887, column: 26)
!15502 = distinct !DILexicalBlock(scope: !15491, file: !2346, line: 1887, column: 2)
!15503 = !DILocation(line: 1890, column: 14, scope: !15504)
!15504 = distinct !DILexicalBlock(scope: !15501, file: !2346, line: 1890, column: 7)
!15505 = !DILocation(line: 1890, column: 7, scope: !15501)
!15506 = !DILocalVariable(name: "thread", arg: 1, scope: !15507, file: !13194, line: 134, type: !2241)
!15507 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13194, file: !13194, line: 134, type: !15508, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !15510)
!15508 = !DISubroutineType(types: !15509)
!15509 = !{null, !2241, !32, !102}
!15510 = !{!15506, !15511, !15512}
!15511 = !DILocalVariable(name: "value", arg: 2, scope: !15507, file: !13194, line: 135, type: !32)
!15512 = !DILocalVariable(name: "data", arg: 3, scope: !15507, file: !13194, line: 136, type: !102)
!15513 = !DILocation(line: 0, scope: !15507, inlinedAt: !15514)
!15514 = distinct !DILocation(line: 1891, column: 4, scope: !15515)
!15515 = distinct !DILexicalBlock(scope: !15504, file: !2346, line: 1890, column: 23)
!15516 = !DILocation(line: 0, scope: !15421, inlinedAt: !15517)
!15517 = distinct !DILocation(line: 138, column: 2, scope: !15507, inlinedAt: !15514)
!15518 = !DILocation(line: 67, column: 15, scope: !15421, inlinedAt: !15517)
!15519 = !DILocation(line: 67, column: 33, scope: !15421, inlinedAt: !15517)
!15520 = !DILocation(line: 139, column: 15, scope: !15507, inlinedAt: !15514)
!15521 = !DILocation(line: 139, column: 25, scope: !15507, inlinedAt: !15514)
!15522 = !DILocation(line: 1894, column: 4, scope: !15515)
!15523 = !DILocation(line: 1895, column: 10, scope: !15515)
!15524 = !DILocation(line: 1896, column: 4, scope: !15515)
!15525 = !DILocation(line: 1898, column: 3, scope: !15515)
!15526 = !DILocation(line: 0, scope: !13614, inlinedAt: !15527)
!15527 = distinct !DILocation(line: 1887, column: 2, scope: !15502)
!15528 = !DILocation(line: 0, scope: !13622, inlinedAt: !15529)
!15529 = distinct !DILocation(line: 215, column: 2, scope: !13614, inlinedAt: !15527)
!15530 = !DILocation(line: 95, column: 2, scope: !13622, inlinedAt: !15529)
!15531 = !DILocation(line: 1901, column: 2, scope: !15481)
!15532 = distinct !DISubprogram(name: "z_sched_wait", scope: !2346, file: !2346, line: 1904, type: !15533, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !15536)
!15533 = !DISubroutineType(types: !15534)
!15534 = !{!107, !13590, !13579, !2272, !14378, !15535}
!15535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!15536 = !{!15537, !15538, !15539, !15540, !15541, !15542}
!15537 = !DILocalVariable(name: "lock", arg: 1, scope: !15532, file: !2346, line: 1904, type: !13590)
!15538 = !DILocalVariable(name: "key", arg: 2, scope: !15532, file: !2346, line: 1904, type: !13579)
!15539 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15532, file: !2346, line: 1905, type: !2272)
!15540 = !DILocalVariable(name: "timeout", arg: 4, scope: !15532, file: !2346, line: 1905, type: !14378)
!15541 = !DILocalVariable(name: "data", arg: 5, scope: !15532, file: !2346, line: 1905, type: !15535)
!15542 = !DILocalVariable(name: "ret", scope: !15532, file: !2346, line: 1907, type: !107)
!15543 = !DILocation(line: 0, scope: !15532)
!15544 = !DILocation(line: 1907, column: 12, scope: !15532)
!15545 = !DILocation(line: 1909, column: 11, scope: !15546)
!15546 = distinct !DILexicalBlock(scope: !15532, file: !2346, line: 1909, column: 6)
!15547 = !DILocation(line: 1909, column: 6, scope: !15532)
!15548 = !DILocation(line: 1910, column: 11, scope: !15549)
!15549 = distinct !DILexicalBlock(scope: !15546, file: !2346, line: 1909, column: 20)
!15550 = !DILocation(line: 1910, column: 26, scope: !15549)
!15551 = !DILocation(line: 1910, column: 9, scope: !15549)
!15552 = !DILocation(line: 1911, column: 2, scope: !15549)
!15553 = !DILocation(line: 1912, column: 2, scope: !15532)
!15554 = distinct !DISubprogram(name: "z_data_copy", scope: !15555, file: !15555, line: 22, type: !3137, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3120, retainedNodes: !250)
!15555 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15556 = !DILocation(line: 24, column: 2, scope: !15554)
!15557 = !DILocation(line: 27, column: 2, scope: !15554)
!15558 = !DILocation(line: 31, column: 2, scope: !15554)
!15559 = !DILocation(line: 71, column: 1, scope: !15554)
!15560 = distinct !DISubprogram(name: "z_add_timeout", scope: !2383, file: !2383, line: 88, type: !15561, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15567)
!15561 = !DISubroutineType(types: !15562)
!15562 = !{null, !2356, !2375, !15563}
!15563 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !15564)
!15564 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !15565)
!15565 = !{!15566}
!15566 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15564, file: !104, line: 66, baseType: !103, size: 64)
!15567 = !{!15568, !15569, !15570, !15571, !15577, !15578, !15581, !15584}
!15568 = !DILocalVariable(name: "to", arg: 1, scope: !15560, file: !2383, line: 88, type: !2356)
!15569 = !DILocalVariable(name: "fn", arg: 2, scope: !15560, file: !2383, line: 88, type: !2375)
!15570 = !DILocalVariable(name: "timeout", arg: 3, scope: !15560, file: !2383, line: 89, type: !15563)
!15571 = !DILocalVariable(name: "__i", scope: !15572, file: !2383, line: 102, type: !15573)
!15572 = distinct !DILexicalBlock(scope: !15560, file: !2383, line: 102, column: 2)
!15573 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !249, line: 106, baseType: !15574)
!15574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !249, line: 32, size: 32, elements: !15575)
!15575 = !{!15576}
!15576 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15574, file: !249, line: 33, baseType: !107, size: 32)
!15577 = !DILocalVariable(name: "__key", scope: !15572, file: !2383, line: 102, type: !15573)
!15578 = !DILocalVariable(name: "t", scope: !15579, file: !2383, line: 103, type: !2356)
!15579 = distinct !DILexicalBlock(scope: !15580, file: !2383, line: 102, column: 24)
!15580 = distinct !DILexicalBlock(scope: !15572, file: !2383, line: 102, column: 2)
!15581 = !DILocalVariable(name: "ticks", scope: !15582, file: !2383, line: 107, type: !103)
!15582 = distinct !DILexicalBlock(scope: !15583, file: !2383, line: 106, column: 39)
!15583 = distinct !DILexicalBlock(scope: !15579, file: !2383, line: 105, column: 7)
!15584 = !DILocalVariable(name: "next_time", scope: !15585, file: !2383, line: 137, type: !728)
!15585 = distinct !DILexicalBlock(scope: !15586, file: !2383, line: 127, column: 22)
!15586 = distinct !DILexicalBlock(scope: !15579, file: !2383, line: 127, column: 7)
!15587 = !DILocation(line: 0, scope: !15560)
!15588 = !DILocation(line: 91, column: 6, scope: !15589)
!15589 = distinct !DILexicalBlock(scope: !15560, file: !2383, line: 91, column: 6)
!15590 = !DILocation(line: 91, column: 6, scope: !15560)
!15591 = !DILocation(line: 100, column: 6, scope: !15560)
!15592 = !DILocation(line: 100, column: 9, scope: !15560)
!15593 = !DILocation(line: 0, scope: !15572)
!15594 = !DILocalVariable(name: "l", arg: 1, scope: !15595, file: !249, line: 136, type: !15598)
!15595 = distinct !DISubprogram(name: "k_spin_lock", scope: !249, file: !249, line: 136, type: !15596, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15599)
!15596 = !DISubroutineType(types: !15597)
!15597 = !{!15573, !15598}
!15598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2384, size: 32)
!15599 = !{!15594, !15600}
!15600 = !DILocalVariable(name: "k", scope: !15595, file: !249, line: 139, type: !15573)
!15601 = !DILocation(line: 0, scope: !15595, inlinedAt: !15602)
!15602 = distinct !DILocation(line: 102, column: 2, scope: !15572)
!15603 = !DILocation(line: 55, column: 2, scope: !15604, inlinedAt: !15608)
!15604 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5913, file: !5913, line: 42, type: !5914, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15605)
!15605 = !{!15606, !15607}
!15606 = !DILocalVariable(name: "key", scope: !15604, file: !5913, line: 44, type: !32)
!15607 = !DILocalVariable(name: "tmp", scope: !15604, file: !5913, line: 53, type: !32)
!15608 = distinct !DILocation(line: 145, column: 10, scope: !15595, inlinedAt: !15602)
!15609 = !{i64 2227744}
!15610 = !DILocation(line: 0, scope: !15604, inlinedAt: !15608)
!15611 = !DILocation(line: 106, column: 33, scope: !15583)
!15612 = !DILocation(line: 105, column: 7, scope: !15579)
!15613 = !DILocation(line: 107, column: 50, scope: !15582)
!15614 = !DILocation(line: 107, column: 48, scope: !15582)
!15615 = !DILocation(line: 0, scope: !15582)
!15616 = !DILocation(line: 109, column: 17, scope: !15582)
!15617 = !DILocation(line: 110, column: 3, scope: !15582)
!15618 = !DILocation(line: 111, column: 31, scope: !15619)
!15619 = distinct !DILexicalBlock(scope: !15583, file: !2383, line: 110, column: 10)
!15620 = !DILocation(line: 111, column: 37, scope: !15619)
!15621 = !DILocation(line: 111, column: 35, scope: !15619)
!15622 = !DILocation(line: 0, scope: !15583)
!15623 = !DILocation(line: 109, column: 8, scope: !15582)
!15624 = !DILocation(line: 109, column: 15, scope: !15582)
!15625 = !DILocation(line: 114, column: 12, scope: !15626)
!15626 = distinct !DILexicalBlock(scope: !15579, file: !2383, line: 114, column: 3)
!15627 = !DILocation(line: 0, scope: !15579)
!15628 = !DILocation(line: 114, column: 3, scope: !15626)
!15629 = !DILocation(line: 115, column: 24, scope: !15630)
!15630 = distinct !DILexicalBlock(scope: !15631, file: !2383, line: 115, column: 8)
!15631 = distinct !DILexicalBlock(scope: !15632, file: !2383, line: 114, column: 45)
!15632 = distinct !DILexicalBlock(scope: !15626, file: !2383, line: 114, column: 3)
!15633 = !DILocation(line: 115, column: 11, scope: !15630)
!15634 = !DILocation(line: 115, column: 18, scope: !15630)
!15635 = !DILocation(line: 115, column: 8, scope: !15631)
!15636 = !DILocation(line: 116, column: 15, scope: !15637)
!15637 = distinct !DILexicalBlock(scope: !15630, file: !2383, line: 115, column: 32)
!15638 = !DILocation(line: 117, column: 26, scope: !15637)
!15639 = !DILocation(line: 117, column: 37, scope: !15637)
!15640 = !DILocation(line: 117, column: 5, scope: !15637)
!15641 = !DILocation(line: 123, column: 7, scope: !15579)
!15642 = !DILocation(line: 120, column: 15, scope: !15631)
!15643 = !DILocation(line: 114, column: 36, scope: !15632)
!15644 = distinct !{!15644, !15628, !15645}
!15645 = !DILocation(line: 121, column: 3, scope: !15626)
!15646 = !DILocation(line: 124, column: 41, scope: !15647)
!15647 = distinct !DILexicalBlock(scope: !15648, file: !2383, line: 123, column: 18)
!15648 = distinct !DILexicalBlock(scope: !15579, file: !2383, line: 123, column: 7)
!15649 = !DILocation(line: 124, column: 4, scope: !15647)
!15650 = !DILocation(line: 125, column: 3, scope: !15647)
!15651 = !DILocation(line: 127, column: 13, scope: !15586)
!15652 = !DILocation(line: 127, column: 10, scope: !15586)
!15653 = !DILocation(line: 127, column: 7, scope: !15579)
!15654 = !DILocation(line: 137, column: 24, scope: !15585)
!15655 = !DILocation(line: 0, scope: !15585)
!15656 = !DILocation(line: 139, column: 18, scope: !15657)
!15657 = distinct !DILexicalBlock(scope: !15585, file: !2383, line: 139, column: 8)
!15658 = !DILocation(line: 139, column: 23, scope: !15657)
!15659 = !DILocation(line: 141, column: 5, scope: !15660)
!15660 = distinct !DILexicalBlock(scope: !15657, file: !2383, line: 140, column: 48)
!15661 = !DILocation(line: 142, column: 4, scope: !15660)
!15662 = !DILocalVariable(name: "key", arg: 2, scope: !15663, file: !249, line: 190, type: !15573)
!15663 = distinct !DISubprogram(name: "k_spin_unlock", scope: !249, file: !249, line: 189, type: !15664, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15666)
!15664 = !DISubroutineType(types: !15665)
!15665 = !{null, !15598, !15573}
!15666 = !{!15667, !15662}
!15667 = !DILocalVariable(name: "l", arg: 1, scope: !15663, file: !249, line: 189, type: !15598)
!15668 = !DILocation(line: 0, scope: !15663, inlinedAt: !15669)
!15669 = distinct !DILocation(line: 102, column: 2, scope: !15580)
!15670 = !DILocalVariable(name: "key", arg: 1, scope: !15671, file: !5913, line: 84, type: !32)
!15671 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5913, file: !5913, line: 84, type: !5924, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15672)
!15672 = !{!15670}
!15673 = !DILocation(line: 0, scope: !15671, inlinedAt: !15674)
!15674 = distinct !DILocation(line: 215, column: 2, scope: !15663, inlinedAt: !15669)
!15675 = !DILocation(line: 95, column: 2, scope: !15671, inlinedAt: !15674)
!15676 = !{i64 2228561}
!15677 = !DILocation(line: 148, column: 1, scope: !15560)
!15678 = distinct !DISubprogram(name: "elapsed", scope: !2383, file: !2383, line: 62, type: !15679, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !250)
!15679 = !DISubroutineType(types: !15680)
!15680 = !{!728}
!15681 = !DILocation(line: 64, column: 9, scope: !15678)
!15682 = !DILocation(line: 64, column: 28, scope: !15678)
!15683 = !DILocation(line: 64, column: 35, scope: !15678)
!15684 = !DILocation(line: 64, column: 2, scope: !15678)
!15685 = distinct !DISubprogram(name: "first", scope: !2383, file: !2383, line: 39, type: !15686, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15688)
!15686 = !DISubroutineType(types: !15687)
!15687 = !{!2356}
!15688 = !{!15689}
!15689 = !DILocalVariable(name: "t", scope: !15685, file: !2383, line: 41, type: !15690)
!15690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2360, size: 32)
!15691 = !DILocation(line: 41, column: 19, scope: !15685)
!15692 = !DILocation(line: 0, scope: !15685)
!15693 = !DILocation(line: 43, column: 9, scope: !15685)
!15694 = !DILocation(line: 43, column: 2, scope: !15685)
!15695 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !233, file: !233, line: 443, type: !15696, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15698)
!15696 = !DISubroutineType(types: !15697)
!15697 = !{null, !15690, !15690}
!15698 = !{!15699, !15700, !15701}
!15699 = !DILocalVariable(name: "successor", arg: 1, scope: !15695, file: !233, line: 443, type: !15690)
!15700 = !DILocalVariable(name: "node", arg: 2, scope: !15695, file: !233, line: 443, type: !15690)
!15701 = !DILocalVariable(name: "prev", scope: !15695, file: !233, line: 445, type: !15702)
!15702 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15690)
!15703 = !DILocation(line: 0, scope: !15695)
!15704 = !DILocation(line: 445, column: 39, scope: !15695)
!15705 = !DILocation(line: 447, column: 8, scope: !15695)
!15706 = !DILocation(line: 447, column: 13, scope: !15695)
!15707 = !DILocation(line: 448, column: 8, scope: !15695)
!15708 = !DILocation(line: 448, column: 13, scope: !15695)
!15709 = !DILocation(line: 449, column: 8, scope: !15695)
!15710 = !DILocation(line: 449, column: 13, scope: !15695)
!15711 = !DILocation(line: 450, column: 18, scope: !15695)
!15712 = !DILocation(line: 451, column: 1, scope: !15695)
!15713 = distinct !DISubprogram(name: "next", scope: !2383, file: !2383, line: 46, type: !15714, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15716)
!15714 = !DISubroutineType(types: !15715)
!15715 = !{!2356, !2356}
!15716 = !{!15717, !15718}
!15717 = !DILocalVariable(name: "t", arg: 1, scope: !15713, file: !2383, line: 46, type: !2356)
!15718 = !DILocalVariable(name: "n", scope: !15713, file: !2383, line: 48, type: !15690)
!15719 = !DILocation(line: 0, scope: !15713)
!15720 = !DILocation(line: 48, column: 58, scope: !15713)
!15721 = !DILocation(line: 48, column: 19, scope: !15713)
!15722 = !DILocation(line: 50, column: 9, scope: !15713)
!15723 = !DILocation(line: 50, column: 2, scope: !15713)
!15724 = distinct !DISubprogram(name: "sys_dlist_append", scope: !233, file: !233, line: 404, type: !15725, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15728)
!15725 = !DISubroutineType(types: !15726)
!15726 = !{null, !15727, !15690}
!15727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2389, size: 32)
!15728 = !{!15729, !15730, !15731}
!15729 = !DILocalVariable(name: "list", arg: 1, scope: !15724, file: !233, line: 404, type: !15727)
!15730 = !DILocalVariable(name: "node", arg: 2, scope: !15724, file: !233, line: 404, type: !15690)
!15731 = !DILocalVariable(name: "tail", scope: !15724, file: !233, line: 406, type: !15702)
!15732 = !DILocation(line: 0, scope: !15724)
!15733 = !DILocation(line: 406, column: 34, scope: !15724)
!15734 = !DILocation(line: 408, column: 8, scope: !15724)
!15735 = !DILocation(line: 408, column: 13, scope: !15724)
!15736 = !DILocation(line: 409, column: 8, scope: !15724)
!15737 = !DILocation(line: 409, column: 13, scope: !15724)
!15738 = !DILocation(line: 411, column: 8, scope: !15724)
!15739 = !DILocation(line: 411, column: 13, scope: !15724)
!15740 = !DILocation(line: 412, column: 13, scope: !15724)
!15741 = !DILocation(line: 413, column: 1, scope: !15724)
!15742 = distinct !DISubprogram(name: "next_timeout", scope: !2383, file: !2383, line: 67, type: !15679, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15743)
!15743 = !{!15744, !15745, !15746}
!15744 = !DILocalVariable(name: "to", scope: !15742, file: !2383, line: 69, type: !2356)
!15745 = !DILocalVariable(name: "ticks_elapsed", scope: !15742, file: !2383, line: 70, type: !728)
!15746 = !DILocalVariable(name: "ret", scope: !15742, file: !2383, line: 71, type: !728)
!15747 = !DILocation(line: 69, column: 24, scope: !15742)
!15748 = !DILocation(line: 0, scope: !15742)
!15749 = !DILocation(line: 70, column: 26, scope: !15742)
!15750 = !DILocation(line: 73, column: 10, scope: !15751)
!15751 = distinct !DILexicalBlock(scope: !15742, file: !2383, line: 73, column: 6)
!15752 = !DILocation(line: 73, column: 19, scope: !15751)
!15753 = !DILocation(line: 74, column: 21, scope: !15751)
!15754 = !DILocation(line: 74, column: 30, scope: !15751)
!15755 = !DILocation(line: 74, column: 28, scope: !15751)
!15756 = !DILocation(line: 74, column: 45, scope: !15751)
!15757 = !DILocation(line: 73, column: 6, scope: !15742)
!15758 = !DILocation(line: 77, column: 9, scope: !15759)
!15759 = distinct !DILexicalBlock(scope: !15751, file: !2383, line: 76, column: 9)
!15760 = !DILocation(line: 0, scope: !15751)
!15761 = !DILocation(line: 81, column: 20, scope: !15762)
!15762 = distinct !DILexicalBlock(scope: !15742, file: !2383, line: 81, column: 6)
!15763 = !DILocation(line: 81, column: 6, scope: !15762)
!15764 = !DILocation(line: 81, column: 32, scope: !15762)
!15765 = !DILocation(line: 85, column: 2, scope: !15742)
!15766 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !233, file: !233, line: 341, type: !15767, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15769)
!15767 = !DISubroutineType(types: !15768)
!15768 = !{!15690, !15727, !15690}
!15769 = !{!15770, !15771}
!15770 = !DILocalVariable(name: "list", arg: 1, scope: !15766, file: !233, line: 341, type: !15727)
!15771 = !DILocalVariable(name: "node", arg: 2, scope: !15766, file: !233, line: 342, type: !15690)
!15772 = !DILocation(line: 0, scope: !15766)
!15773 = !DILocation(line: 344, column: 15, scope: !15766)
!15774 = !DILocation(line: 344, column: 9, scope: !15766)
!15775 = !DILocation(line: 344, column: 26, scope: !15766)
!15776 = !DILocation(line: 344, column: 2, scope: !15766)
!15777 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !233, file: !233, line: 325, type: !15767, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15778)
!15778 = !{!15779, !15780}
!15779 = !DILocalVariable(name: "list", arg: 1, scope: !15777, file: !233, line: 325, type: !15727)
!15780 = !DILocalVariable(name: "node", arg: 2, scope: !15777, file: !233, line: 326, type: !15690)
!15781 = !DILocation(line: 0, scope: !15777)
!15782 = !DILocation(line: 328, column: 24, scope: !15777)
!15783 = !DILocation(line: 328, column: 15, scope: !15777)
!15784 = !DILocation(line: 328, column: 9, scope: !15777)
!15785 = !DILocation(line: 328, column: 45, scope: !15777)
!15786 = !DILocation(line: 328, column: 2, scope: !15777)
!15787 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !233, file: !233, line: 294, type: !15788, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15790)
!15788 = !DISubroutineType(types: !15789)
!15789 = !{!15690, !15727}
!15790 = !{!15791}
!15791 = !DILocalVariable(name: "list", arg: 1, scope: !15787, file: !233, line: 294, type: !15727)
!15792 = !DILocation(line: 0, scope: !15787)
!15793 = !DILocation(line: 296, column: 9, scope: !15787)
!15794 = !DILocation(line: 296, column: 2, scope: !15787)
!15795 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !233, file: !233, line: 266, type: !15796, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15798)
!15796 = !DISubroutineType(types: !15797)
!15797 = !{!136, !15727}
!15798 = !{!15799}
!15799 = !DILocalVariable(name: "list", arg: 1, scope: !15795, file: !233, line: 266, type: !15727)
!15800 = !DILocation(line: 0, scope: !15795)
!15801 = !DILocation(line: 268, column: 15, scope: !15795)
!15802 = !DILocation(line: 268, column: 20, scope: !15795)
!15803 = !DILocation(line: 268, column: 2, scope: !15795)
!15804 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2383, file: !2383, line: 150, type: !15805, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15807)
!15805 = !DISubroutineType(types: !15806)
!15806 = !{!107, !2356}
!15807 = !{!15808, !15809, !15810, !15812}
!15808 = !DILocalVariable(name: "to", arg: 1, scope: !15804, file: !2383, line: 150, type: !2356)
!15809 = !DILocalVariable(name: "ret", scope: !15804, file: !2383, line: 152, type: !107)
!15810 = !DILocalVariable(name: "__i", scope: !15811, file: !2383, line: 154, type: !15573)
!15811 = distinct !DILexicalBlock(scope: !15804, file: !2383, line: 154, column: 2)
!15812 = !DILocalVariable(name: "__key", scope: !15811, file: !2383, line: 154, type: !15573)
!15813 = !DILocation(line: 0, scope: !15804)
!15814 = !DILocation(line: 0, scope: !15811)
!15815 = !DILocation(line: 0, scope: !15595, inlinedAt: !15816)
!15816 = distinct !DILocation(line: 154, column: 2, scope: !15811)
!15817 = !DILocation(line: 55, column: 2, scope: !15604, inlinedAt: !15818)
!15818 = distinct !DILocation(line: 145, column: 10, scope: !15595, inlinedAt: !15816)
!15819 = !DILocation(line: 0, scope: !15604, inlinedAt: !15818)
!15820 = !DILocation(line: 155, column: 7, scope: !15821)
!15821 = distinct !DILexicalBlock(scope: !15822, file: !2383, line: 155, column: 7)
!15822 = distinct !DILexicalBlock(scope: !15823, file: !2383, line: 154, column: 24)
!15823 = distinct !DILexicalBlock(scope: !15811, file: !2383, line: 154, column: 2)
!15824 = !DILocation(line: 155, column: 7, scope: !15822)
!15825 = !DILocation(line: 156, column: 4, scope: !15826)
!15826 = distinct !DILexicalBlock(scope: !15821, file: !2383, line: 155, column: 39)
!15827 = !DILocation(line: 158, column: 3, scope: !15826)
!15828 = !DILocation(line: 0, scope: !15663, inlinedAt: !15829)
!15829 = distinct !DILocation(line: 154, column: 2, scope: !15823)
!15830 = !DILocation(line: 0, scope: !15671, inlinedAt: !15831)
!15831 = distinct !DILocation(line: 215, column: 2, scope: !15663, inlinedAt: !15829)
!15832 = !DILocation(line: 95, column: 2, scope: !15671, inlinedAt: !15831)
!15833 = !DILocation(line: 161, column: 2, scope: !15804)
!15834 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !233, file: !233, line: 225, type: !15835, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15839)
!15835 = !DISubroutineType(types: !15836)
!15836 = !{!136, !15837}
!15837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15838, size: 32)
!15838 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2360)
!15839 = !{!15840}
!15840 = !DILocalVariable(name: "node", arg: 1, scope: !15834, file: !233, line: 225, type: !15837)
!15841 = !DILocation(line: 0, scope: !15834)
!15842 = !DILocation(line: 227, column: 15, scope: !15834)
!15843 = !DILocation(line: 227, column: 20, scope: !15834)
!15844 = !DILocation(line: 227, column: 2, scope: !15834)
!15845 = distinct !DISubprogram(name: "remove_timeout", scope: !2383, file: !2383, line: 53, type: !2377, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15846)
!15846 = !{!15847}
!15847 = !DILocalVariable(name: "t", arg: 1, scope: !15845, file: !2383, line: 53, type: !2356)
!15848 = !DILocation(line: 0, scope: !15845)
!15849 = !DILocation(line: 55, column: 6, scope: !15850)
!15850 = distinct !DILexicalBlock(scope: !15845, file: !2383, line: 55, column: 6)
!15851 = !DILocation(line: 55, column: 14, scope: !15850)
!15852 = !DILocation(line: 55, column: 6, scope: !15845)
!15853 = !DILocation(line: 56, column: 25, scope: !15854)
!15854 = distinct !DILexicalBlock(scope: !15850, file: !2383, line: 55, column: 23)
!15855 = !DILocation(line: 56, column: 12, scope: !15854)
!15856 = !DILocation(line: 56, column: 19, scope: !15854)
!15857 = !DILocation(line: 57, column: 2, scope: !15854)
!15858 = !DILocation(line: 59, column: 23, scope: !15845)
!15859 = !DILocation(line: 59, column: 2, scope: !15845)
!15860 = !DILocation(line: 60, column: 1, scope: !15845)
!15861 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !233, file: !233, line: 496, type: !15862, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15864)
!15862 = !DISubroutineType(types: !15863)
!15863 = !{null, !15690}
!15864 = !{!15865, !15866, !15867}
!15865 = !DILocalVariable(name: "node", arg: 1, scope: !15861, file: !233, line: 496, type: !15690)
!15866 = !DILocalVariable(name: "prev", scope: !15861, file: !233, line: 498, type: !15702)
!15867 = !DILocalVariable(name: "next", scope: !15861, file: !233, line: 499, type: !15702)
!15868 = !DILocation(line: 0, scope: !15861)
!15869 = !DILocation(line: 498, column: 34, scope: !15861)
!15870 = !DILocation(line: 499, column: 34, scope: !15861)
!15871 = !DILocation(line: 501, column: 8, scope: !15861)
!15872 = !DILocation(line: 501, column: 13, scope: !15861)
!15873 = !DILocation(line: 502, column: 8, scope: !15861)
!15874 = !DILocation(line: 502, column: 13, scope: !15861)
!15875 = !DILocation(line: 503, column: 2, scope: !15861)
!15876 = !DILocation(line: 504, column: 1, scope: !15861)
!15877 = distinct !DISubprogram(name: "sys_dnode_init", scope: !233, file: !233, line: 211, type: !15862, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15878)
!15878 = !{!15879}
!15879 = !DILocalVariable(name: "node", arg: 1, scope: !15877, file: !233, line: 211, type: !15690)
!15880 = !DILocation(line: 0, scope: !15877)
!15881 = !DILocation(line: 213, column: 8, scope: !15877)
!15882 = !DILocation(line: 213, column: 13, scope: !15877)
!15883 = !DILocation(line: 214, column: 8, scope: !15877)
!15884 = !DILocation(line: 214, column: 13, scope: !15877)
!15885 = !DILocation(line: 215, column: 1, scope: !15877)
!15886 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2383, file: !2383, line: 183, type: !15887, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15891)
!15887 = !DISubroutineType(types: !15888)
!15888 = !{!103, !15889}
!15889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15890, size: 32)
!15890 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2357)
!15891 = !{!15892, !15893, !15894, !15896}
!15892 = !DILocalVariable(name: "timeout", arg: 1, scope: !15886, file: !2383, line: 183, type: !15889)
!15893 = !DILocalVariable(name: "ticks", scope: !15886, file: !2383, line: 185, type: !103)
!15894 = !DILocalVariable(name: "__i", scope: !15895, file: !2383, line: 187, type: !15573)
!15895 = distinct !DILexicalBlock(scope: !15886, file: !2383, line: 187, column: 2)
!15896 = !DILocalVariable(name: "__key", scope: !15895, file: !2383, line: 187, type: !15573)
!15897 = !DILocation(line: 0, scope: !15886)
!15898 = !DILocation(line: 0, scope: !15895)
!15899 = !DILocation(line: 0, scope: !15595, inlinedAt: !15900)
!15900 = distinct !DILocation(line: 187, column: 2, scope: !15895)
!15901 = !DILocation(line: 55, column: 2, scope: !15604, inlinedAt: !15902)
!15902 = distinct !DILocation(line: 145, column: 10, scope: !15595, inlinedAt: !15900)
!15903 = !DILocation(line: 0, scope: !15604, inlinedAt: !15902)
!15904 = !DILocation(line: 188, column: 11, scope: !15905)
!15905 = distinct !DILexicalBlock(scope: !15906, file: !2383, line: 187, column: 24)
!15906 = distinct !DILexicalBlock(scope: !15895, file: !2383, line: 187, column: 2)
!15907 = !DILocation(line: 0, scope: !15663, inlinedAt: !15908)
!15908 = distinct !DILocation(line: 187, column: 2, scope: !15906)
!15909 = !DILocation(line: 0, scope: !15671, inlinedAt: !15910)
!15910 = distinct !DILocation(line: 215, column: 2, scope: !15663, inlinedAt: !15908)
!15911 = !DILocation(line: 95, column: 2, scope: !15671, inlinedAt: !15910)
!15912 = !DILocation(line: 191, column: 2, scope: !15886)
!15913 = distinct !DISubprogram(name: "timeout_rem", scope: !2383, file: !2383, line: 165, type: !15887, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15914)
!15914 = !{!15915, !15916, !15917}
!15915 = !DILocalVariable(name: "timeout", arg: 1, scope: !15913, file: !2383, line: 165, type: !15889)
!15916 = !DILocalVariable(name: "ticks", scope: !15913, file: !2383, line: 167, type: !103)
!15917 = !DILocalVariable(name: "t", scope: !15918, file: !2383, line: 173, type: !2356)
!15918 = distinct !DILexicalBlock(scope: !15913, file: !2383, line: 173, column: 2)
!15919 = !DILocation(line: 0, scope: !15913)
!15920 = !DILocation(line: 169, column: 6, scope: !15921)
!15921 = distinct !DILexicalBlock(scope: !15913, file: !2383, line: 169, column: 6)
!15922 = !DILocation(line: 169, column: 6, scope: !15913)
!15923 = !DILocation(line: 173, column: 28, scope: !15918)
!15924 = !DILocation(line: 0, scope: !15918)
!15925 = !DILocation(line: 173, column: 39, scope: !15926)
!15926 = distinct !DILexicalBlock(scope: !15918, file: !2383, line: 173, column: 2)
!15927 = !DILocation(line: 173, column: 2, scope: !15918)
!15928 = !DILocation(line: 174, column: 15, scope: !15929)
!15929 = distinct !DILexicalBlock(scope: !15926, file: !2383, line: 173, column: 61)
!15930 = !DILocation(line: 174, column: 9, scope: !15929)
!15931 = !DILocation(line: 175, column: 15, scope: !15932)
!15932 = distinct !DILexicalBlock(scope: !15929, file: !2383, line: 175, column: 7)
!15933 = !DILocation(line: 175, column: 7, scope: !15929)
!15934 = !DILocation(line: 173, column: 52, scope: !15926)
!15935 = distinct !{!15935, !15927, !15936}
!15936 = !DILocation(line: 178, column: 2, scope: !15918)
!15937 = !DILocation(line: 180, column: 17, scope: !15913)
!15938 = !DILocation(line: 180, column: 15, scope: !15913)
!15939 = !DILocation(line: 180, column: 2, scope: !15913)
!15940 = !DILocation(line: 181, column: 1, scope: !15913)
!15941 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12812, file: !12812, line: 35, type: !15942, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15944)
!15942 = !DISubroutineType(types: !15943)
!15943 = !{!136, !15889}
!15944 = !{!15945}
!15945 = !DILocalVariable(name: "to", arg: 1, scope: !15941, file: !12812, line: 35, type: !15889)
!15946 = !DILocation(line: 0, scope: !15941)
!15947 = !DILocation(line: 37, column: 35, scope: !15941)
!15948 = !DILocation(line: 37, column: 10, scope: !15941)
!15949 = !DILocation(line: 37, column: 9, scope: !15941)
!15950 = !DILocation(line: 37, column: 2, scope: !15941)
!15951 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2383, file: !2383, line: 194, type: !15887, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15952)
!15952 = !{!15953, !15954, !15955, !15957}
!15953 = !DILocalVariable(name: "timeout", arg: 1, scope: !15951, file: !2383, line: 194, type: !15889)
!15954 = !DILocalVariable(name: "ticks", scope: !15951, file: !2383, line: 196, type: !103)
!15955 = !DILocalVariable(name: "__i", scope: !15956, file: !2383, line: 198, type: !15573)
!15956 = distinct !DILexicalBlock(scope: !15951, file: !2383, line: 198, column: 2)
!15957 = !DILocalVariable(name: "__key", scope: !15956, file: !2383, line: 198, type: !15573)
!15958 = !DILocation(line: 0, scope: !15951)
!15959 = !DILocation(line: 0, scope: !15956)
!15960 = !DILocation(line: 0, scope: !15595, inlinedAt: !15961)
!15961 = distinct !DILocation(line: 198, column: 2, scope: !15956)
!15962 = !DILocation(line: 55, column: 2, scope: !15604, inlinedAt: !15963)
!15963 = distinct !DILocation(line: 145, column: 10, scope: !15595, inlinedAt: !15961)
!15964 = !DILocation(line: 0, scope: !15604, inlinedAt: !15963)
!15965 = !DILocation(line: 199, column: 11, scope: !15966)
!15966 = distinct !DILexicalBlock(scope: !15967, file: !2383, line: 198, column: 24)
!15967 = distinct !DILexicalBlock(scope: !15956, file: !2383, line: 198, column: 2)
!15968 = !DILocation(line: 199, column: 23, scope: !15966)
!15969 = !DILocation(line: 0, scope: !15663, inlinedAt: !15970)
!15970 = distinct !DILocation(line: 198, column: 2, scope: !15967)
!15971 = !DILocation(line: 0, scope: !15671, inlinedAt: !15972)
!15972 = distinct !DILocation(line: 215, column: 2, scope: !15663, inlinedAt: !15970)
!15973 = !DILocation(line: 95, column: 2, scope: !15671, inlinedAt: !15972)
!15974 = !DILocation(line: 199, column: 21, scope: !15966)
!15975 = !DILocation(line: 202, column: 2, scope: !15951)
!15976 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2383, file: !2383, line: 205, type: !15679, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15977)
!15977 = !{!15978, !15979, !15981}
!15978 = !DILocalVariable(name: "ret", scope: !15976, file: !2383, line: 207, type: !728)
!15979 = !DILocalVariable(name: "__i", scope: !15980, file: !2383, line: 209, type: !15573)
!15980 = distinct !DILexicalBlock(scope: !15976, file: !2383, line: 209, column: 2)
!15981 = !DILocalVariable(name: "__key", scope: !15980, file: !2383, line: 209, type: !15573)
!15982 = !DILocation(line: 0, scope: !15976)
!15983 = !DILocation(line: 0, scope: !15980)
!15984 = !DILocation(line: 0, scope: !15595, inlinedAt: !15985)
!15985 = distinct !DILocation(line: 209, column: 2, scope: !15980)
!15986 = !DILocation(line: 55, column: 2, scope: !15604, inlinedAt: !15987)
!15987 = distinct !DILocation(line: 145, column: 10, scope: !15595, inlinedAt: !15985)
!15988 = !DILocation(line: 0, scope: !15604, inlinedAt: !15987)
!15989 = !DILocation(line: 210, column: 9, scope: !15990)
!15990 = distinct !DILexicalBlock(scope: !15991, file: !2383, line: 209, column: 24)
!15991 = distinct !DILexicalBlock(scope: !15980, file: !2383, line: 209, column: 2)
!15992 = !DILocation(line: 0, scope: !15663, inlinedAt: !15993)
!15993 = distinct !DILocation(line: 209, column: 2, scope: !15991)
!15994 = !DILocation(line: 0, scope: !15671, inlinedAt: !15995)
!15995 = distinct !DILocation(line: 215, column: 2, scope: !15663, inlinedAt: !15993)
!15996 = !DILocation(line: 95, column: 2, scope: !15671, inlinedAt: !15995)
!15997 = !DILocation(line: 212, column: 2, scope: !15976)
!15998 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2383, file: !2383, line: 215, type: !10434, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15999)
!15999 = !{!16000, !16001, !16002, !16004, !16005, !16008, !16009}
!16000 = !DILocalVariable(name: "ticks", arg: 1, scope: !15998, file: !2383, line: 215, type: !728)
!16001 = !DILocalVariable(name: "is_idle", arg: 2, scope: !15998, file: !2383, line: 215, type: !136)
!16002 = !DILocalVariable(name: "__i", scope: !16003, file: !2383, line: 217, type: !15573)
!16003 = distinct !DILexicalBlock(scope: !15998, file: !2383, line: 217, column: 2)
!16004 = !DILocalVariable(name: "__key", scope: !16003, file: !2383, line: 217, type: !15573)
!16005 = !DILocalVariable(name: "next_to", scope: !16006, file: !2383, line: 218, type: !107)
!16006 = distinct !DILexicalBlock(scope: !16007, file: !2383, line: 217, column: 24)
!16007 = distinct !DILexicalBlock(scope: !16003, file: !2383, line: 217, column: 2)
!16008 = !DILocalVariable(name: "sooner", scope: !16006, file: !2383, line: 219, type: !136)
!16009 = !DILocalVariable(name: "imminent", scope: !16006, file: !2383, line: 221, type: !136)
!16010 = !DILocation(line: 0, scope: !15998)
!16011 = !DILocation(line: 0, scope: !16003)
!16012 = !DILocation(line: 0, scope: !15595, inlinedAt: !16013)
!16013 = distinct !DILocation(line: 217, column: 2, scope: !16003)
!16014 = !DILocation(line: 55, column: 2, scope: !15604, inlinedAt: !16015)
!16015 = distinct !DILocation(line: 145, column: 10, scope: !15595, inlinedAt: !16013)
!16016 = !DILocation(line: 0, scope: !15604, inlinedAt: !16015)
!16017 = !DILocation(line: 218, column: 17, scope: !16006)
!16018 = !DILocation(line: 0, scope: !16006)
!16019 = !DILocation(line: 221, column: 27, scope: !16006)
!16020 = !DILocation(line: 233, column: 17, scope: !16021)
!16021 = distinct !DILexicalBlock(scope: !16006, file: !2383, line: 233, column: 7)
!16022 = !DILocation(line: 234, column: 26, scope: !16023)
!16023 = distinct !DILexicalBlock(scope: !16021, file: !2383, line: 233, column: 56)
!16024 = !DILocation(line: 234, column: 4, scope: !16023)
!16025 = !DILocation(line: 235, column: 3, scope: !16023)
!16026 = !DILocation(line: 0, scope: !15663, inlinedAt: !16027)
!16027 = distinct !DILocation(line: 217, column: 2, scope: !16007)
!16028 = !DILocation(line: 0, scope: !15671, inlinedAt: !16029)
!16029 = distinct !DILocation(line: 215, column: 2, scope: !15663, inlinedAt: !16027)
!16030 = !DILocation(line: 95, column: 2, scope: !15671, inlinedAt: !16029)
!16031 = !DILocation(line: 237, column: 1, scope: !15998)
!16032 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2383, file: !2383, line: 239, type: !16033, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16035)
!16033 = !DISubroutineType(types: !16034)
!16034 = !{null, !728}
!16035 = !{!16036, !16037, !16038, !16040}
!16036 = !DILocalVariable(name: "ticks", arg: 1, scope: !16032, file: !2383, line: 239, type: !728)
!16037 = !DILocalVariable(name: "key", scope: !16032, file: !2383, line: 245, type: !15573)
!16038 = !DILocalVariable(name: "t", scope: !16039, file: !2383, line: 262, type: !2356)
!16039 = distinct !DILexicalBlock(scope: !16032, file: !2383, line: 261, column: 67)
!16040 = !DILocalVariable(name: "dt", scope: !16039, file: !2383, line: 263, type: !107)
!16041 = !DILocation(line: 0, scope: !16032)
!16042 = !DILocation(line: 242, column: 2, scope: !16032)
!16043 = !DILocation(line: 0, scope: !15595, inlinedAt: !16044)
!16044 = distinct !DILocation(line: 245, column: 25, scope: !16032)
!16045 = !DILocation(line: 55, column: 2, scope: !15604, inlinedAt: !16046)
!16046 = distinct !DILocation(line: 145, column: 10, scope: !15595, inlinedAt: !16044)
!16047 = !DILocation(line: 0, scope: !15604, inlinedAt: !16046)
!16048 = !DILocation(line: 261, column: 9, scope: !16032)
!16049 = !DILocation(line: 261, column: 17, scope: !16032)
!16050 = !DILocation(line: 261, column: 25, scope: !16032)
!16051 = !DILocation(line: 261, column: 37, scope: !16032)
!16052 = !DILocation(line: 261, column: 47, scope: !16032)
!16053 = !DILocation(line: 261, column: 44, scope: !16032)
!16054 = !DILocation(line: 261, column: 2, scope: !16032)
!16055 = !DILocation(line: 0, scope: !16039)
!16056 = !DILocation(line: 263, column: 12, scope: !16039)
!16057 = !DILocation(line: 265, column: 16, scope: !16039)
!16058 = !DILocation(line: 265, column: 13, scope: !16039)
!16059 = !DILocation(line: 266, column: 13, scope: !16039)
!16060 = !DILocation(line: 267, column: 3, scope: !16039)
!16061 = !DILocation(line: 0, scope: !15663, inlinedAt: !16062)
!16062 = distinct !DILocation(line: 269, column: 3, scope: !16039)
!16063 = !DILocation(line: 0, scope: !15671, inlinedAt: !16064)
!16064 = distinct !DILocation(line: 215, column: 2, scope: !15663, inlinedAt: !16062)
!16065 = !DILocation(line: 95, column: 2, scope: !15671, inlinedAt: !16064)
!16066 = !DILocation(line: 270, column: 6, scope: !16039)
!16067 = !DILocation(line: 270, column: 3, scope: !16039)
!16068 = !DILocation(line: 0, scope: !15595, inlinedAt: !16069)
!16069 = distinct !DILocation(line: 271, column: 9, scope: !16039)
!16070 = !DILocation(line: 55, column: 2, scope: !15604, inlinedAt: !16071)
!16071 = distinct !DILocation(line: 145, column: 10, scope: !15595, inlinedAt: !16069)
!16072 = !DILocation(line: 0, scope: !15604, inlinedAt: !16071)
!16073 = !DILocation(line: 272, column: 22, scope: !16039)
!16074 = distinct !{!16074, !16054, !16075}
!16075 = !DILocation(line: 273, column: 2, scope: !16032)
!16076 = !DILocation(line: 276, column: 19, scope: !16077)
!16077 = distinct !DILexicalBlock(scope: !16078, file: !2383, line: 275, column: 23)
!16078 = distinct !DILexicalBlock(scope: !16032, file: !2383, line: 275, column: 6)
!16079 = !DILocation(line: 277, column: 2, scope: !16077)
!16080 = !DILocation(line: 279, column: 15, scope: !16032)
!16081 = !DILocation(line: 279, column: 12, scope: !16032)
!16082 = !DILocation(line: 280, column: 21, scope: !16032)
!16083 = !DILocation(line: 282, column: 24, scope: !16032)
!16084 = !DILocation(line: 282, column: 2, scope: !16032)
!16085 = !DILocation(line: 0, scope: !15663, inlinedAt: !16086)
!16086 = distinct !DILocation(line: 284, column: 2, scope: !16032)
!16087 = !DILocation(line: 0, scope: !15671, inlinedAt: !16088)
!16088 = distinct !DILocation(line: 215, column: 2, scope: !15663, inlinedAt: !16086)
!16089 = !DILocation(line: 95, column: 2, scope: !15671, inlinedAt: !16088)
!16090 = !DILocation(line: 285, column: 1, scope: !16032)
!16091 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2383, file: !2383, line: 287, type: !16092, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16094)
!16092 = !DISubroutineType(types: !16093)
!16093 = !{!105}
!16094 = !{!16095, !16096, !16098}
!16095 = !DILocalVariable(name: "t", scope: !16091, file: !2383, line: 289, type: !1500)
!16096 = !DILocalVariable(name: "__i", scope: !16097, file: !2383, line: 291, type: !15573)
!16097 = distinct !DILexicalBlock(scope: !16091, file: !2383, line: 291, column: 2)
!16098 = !DILocalVariable(name: "__key", scope: !16097, file: !2383, line: 291, type: !15573)
!16099 = !DILocation(line: 0, scope: !16091)
!16100 = !DILocation(line: 0, scope: !16097)
!16101 = !DILocation(line: 0, scope: !15595, inlinedAt: !16102)
!16102 = distinct !DILocation(line: 291, column: 2, scope: !16097)
!16103 = !DILocation(line: 55, column: 2, scope: !15604, inlinedAt: !16104)
!16104 = distinct !DILocation(line: 145, column: 10, scope: !15595, inlinedAt: !16102)
!16105 = !DILocation(line: 0, scope: !15604, inlinedAt: !16104)
!16106 = !DILocation(line: 292, column: 7, scope: !16107)
!16107 = distinct !DILexicalBlock(scope: !16108, file: !2383, line: 291, column: 24)
!16108 = distinct !DILexicalBlock(scope: !16097, file: !2383, line: 291, column: 2)
!16109 = !DILocation(line: 292, column: 19, scope: !16107)
!16110 = !DILocation(line: 0, scope: !15663, inlinedAt: !16111)
!16111 = distinct !DILocation(line: 291, column: 2, scope: !16108)
!16112 = !DILocation(line: 0, scope: !15671, inlinedAt: !16113)
!16113 = distinct !DILocation(line: 215, column: 2, scope: !15663, inlinedAt: !16111)
!16114 = !DILocation(line: 95, column: 2, scope: !15671, inlinedAt: !16113)
!16115 = !DILocation(line: 292, column: 17, scope: !16107)
!16116 = !DILocation(line: 294, column: 2, scope: !16091)
!16117 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2383, file: !2383, line: 297, type: !6168, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !250)
!16118 = !DILocation(line: 300, column: 19, scope: !16117)
!16119 = !DILocation(line: 300, column: 9, scope: !16117)
!16120 = !DILocation(line: 300, column: 2, scope: !16117)
!16121 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2383, file: !2383, line: 306, type: !16092, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !250)
!16122 = !DILocation(line: 308, column: 9, scope: !16121)
!16123 = !DILocation(line: 308, column: 2, scope: !16121)
!16124 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2383, file: !2383, line: 319, type: !6178, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16125)
!16125 = !{!16126, !16127, !16128, !16129}
!16126 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !16124, file: !2383, line: 319, type: !162)
!16127 = !DILocalVariable(name: "start_cycles", scope: !16124, file: !2383, line: 328, type: !162)
!16128 = !DILocalVariable(name: "cycles_to_wait", scope: !16124, file: !2383, line: 331, type: !162)
!16129 = !DILocalVariable(name: "current_cycles", scope: !16130, file: !2383, line: 338, type: !162)
!16130 = distinct !DILexicalBlock(scope: !16131, file: !2383, line: 337, column: 11)
!16131 = distinct !DILexicalBlock(scope: !16132, file: !2383, line: 337, column: 2)
!16132 = distinct !DILexicalBlock(scope: !16124, file: !2383, line: 337, column: 2)
!16133 = !DILocation(line: 0, scope: !16124)
!16134 = !DILocation(line: 322, column: 19, scope: !16135)
!16135 = distinct !DILexicalBlock(scope: !16124, file: !2383, line: 322, column: 6)
!16136 = !DILocation(line: 322, column: 6, scope: !16124)
!16137 = !DILocation(line: 328, column: 26, scope: !16124)
!16138 = !DILocation(line: 333, column: 43, scope: !16124)
!16139 = !DILocation(line: 337, column: 2, scope: !16124)
!16140 = !DILocation(line: 338, column: 29, scope: !16130)
!16141 = !DILocation(line: 0, scope: !16130)
!16142 = !DILocation(line: 341, column: 23, scope: !16143)
!16143 = distinct !DILexicalBlock(scope: !16130, file: !2383, line: 341, column: 7)
!16144 = !DILocation(line: 341, column: 39, scope: !16143)
!16145 = !DILocation(line: 349, column: 1, scope: !16124)
!16146 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !224, file: !224, line: 1675, type: !6168, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !250)
!16147 = !DILocation(line: 1677, column: 9, scope: !16146)
!16148 = !DILocation(line: 1677, column: 2, scope: !16146)
!16149 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !16150, file: !16150, line: 24, type: !6168, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !250)
!16150 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16151 = !DILocation(line: 26, column: 9, scope: !16149)
!16152 = !DILocation(line: 26, column: 2, scope: !16149)
!16153 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2383, file: !2383, line: 364, type: !16154, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16156)
!16154 = !DISubroutineType(types: !16155)
!16155 = !{!1500, !15563}
!16156 = !{!16157, !16158}
!16157 = !DILocalVariable(name: "timeout", arg: 1, scope: !16153, file: !2383, line: 364, type: !15563)
!16158 = !DILocalVariable(name: "dt", scope: !16153, file: !2383, line: 366, type: !103)
!16159 = !DILocation(line: 0, scope: !16153)
!16160 = !DILocation(line: 368, column: 6, scope: !16153)
!16161 = !DILocation(line: 371, column: 10, scope: !16162)
!16162 = distinct !DILexicalBlock(scope: !16163, file: !2383, line: 370, column: 47)
!16163 = distinct !DILexicalBlock(scope: !16164, file: !2383, line: 370, column: 13)
!16164 = distinct !DILexicalBlock(scope: !16153, file: !2383, line: 368, column: 6)
!16165 = !DILocation(line: 371, column: 3, scope: !16162)
!16166 = !DILocation(line: 376, column: 58, scope: !16167)
!16167 = distinct !DILexicalBlock(scope: !16168, file: !2383, line: 376, column: 7)
!16168 = distinct !DILexicalBlock(scope: !16163, file: !2383, line: 372, column: 9)
!16169 = !DILocation(line: 376, column: 7, scope: !16168)
!16170 = !DILocation(line: 376, column: 43, scope: !16167)
!16171 = !DILocation(line: 377, column: 4, scope: !16172)
!16172 = distinct !DILexicalBlock(scope: !16167, file: !2383, line: 376, column: 64)
!16173 = !DILocation(line: 379, column: 10, scope: !16168)
!16174 = !DILocation(line: 379, column: 33, scope: !16168)
!16175 = !DILocation(line: 379, column: 31, scope: !16168)
!16176 = !DILocation(line: 379, column: 3, scope: !16168)
!16177 = !DILocation(line: 0, scope: !16164)
!16178 = !DILocation(line: 381, column: 1, scope: !16153)
!16179 = distinct !DISubprogram(name: "boot_banner", scope: !16180, file: !16180, line: 26, type: !3137, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3123, retainedNodes: !250)
!16180 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16181 = !DILocation(line: 34, column: 2, scope: !16179)
!16182 = !DILocation(line: 36, column: 1, scope: !16179)
!16183 = distinct !DISubprogram(name: "statics_init", scope: !2411, file: !2411, line: 21, type: !2417, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16184)
!16184 = !{!16185, !16186}
!16185 = !DILocalVariable(name: "unused", arg: 1, scope: !16183, file: !2411, line: 21, type: !2419)
!16186 = !DILocalVariable(name: "h", scope: !16187, file: !2411, line: 24, type: !16188)
!16187 = distinct !DILexicalBlock(scope: !16183, file: !2411, line: 24, column: 2)
!16188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16189, size: 32)
!16189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !16190)
!16190 = !{!16191, !16197, !16203}
!16191 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16189, file: !224, line: 5074, baseType: !16192, size: 96)
!16192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !16193)
!16193 = !{!16194, !16195, !16196}
!16194 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16192, file: !454, line: 57, baseType: !457, size: 32)
!16195 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !16192, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!16196 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !16192, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!16197 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16189, file: !224, line: 5075, baseType: !16198, size: 64, offset: 96)
!16198 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !16199)
!16199 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !16200)
!16200 = !{!16201}
!16201 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !16199, file: !228, line: 232, baseType: !16202, size: 64)
!16202 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !2397)
!16203 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !16189, file: !224, line: 5076, baseType: !16204, offset: 160)
!16204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!16205 = !DILocation(line: 0, scope: !16183)
!16206 = !DILocation(line: 0, scope: !16187)
!16207 = !DILocation(line: 24, column: 2, scope: !16187)
!16208 = !DILocation(line: 52, column: 2, scope: !16183)
!16209 = !DILocation(line: 49, column: 27, scope: !16210)
!16210 = distinct !DILexicalBlock(scope: !16211, file: !2411, line: 48, column: 3)
!16211 = distinct !DILexicalBlock(scope: !16212, file: !2411, line: 24, column: 36)
!16212 = distinct !DILexicalBlock(scope: !16187, file: !2411, line: 24, column: 2)
!16213 = !DILocation(line: 49, column: 45, scope: !16210)
!16214 = !DILocation(line: 49, column: 4, scope: !16210)
!16215 = !DILocation(line: 24, column: 2, scope: !16212)
!16216 = !DILocation(line: 24, column: 2, scope: !16217)
!16217 = distinct !DILexicalBlock(scope: !16212, file: !2411, line: 24, column: 2)
!16218 = distinct !{!16218, !16207, !16219}
!16219 = !DILocation(line: 51, column: 2, scope: !16187)
!16220 = distinct !DISubprogram(name: "k_heap_init", scope: !2411, file: !2411, line: 13, type: !16221, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16223)
!16221 = !DISubroutineType(types: !16222)
!16222 = !{null, !16188, !102, !252}
!16223 = !{!16224, !16225, !16226}
!16224 = !DILocalVariable(name: "h", arg: 1, scope: !16220, file: !2411, line: 13, type: !16188)
!16225 = !DILocalVariable(name: "mem", arg: 2, scope: !16220, file: !2411, line: 13, type: !102)
!16226 = !DILocalVariable(name: "bytes", arg: 3, scope: !16220, file: !2411, line: 13, type: !252)
!16227 = !DILocation(line: 0, scope: !16220)
!16228 = !DILocation(line: 15, column: 19, scope: !16220)
!16229 = !DILocation(line: 15, column: 2, scope: !16220)
!16230 = !DILocation(line: 16, column: 20, scope: !16220)
!16231 = !DILocation(line: 16, column: 2, scope: !16220)
!16232 = !DILocation(line: 19, column: 1, scope: !16220)
!16233 = distinct !DISubprogram(name: "z_waitq_init", scope: !12744, file: !12744, line: 47, type: !16234, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16237)
!16234 = !DISubroutineType(types: !16235)
!16235 = !{null, !16236}
!16236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16198, size: 32)
!16237 = !{!16238}
!16238 = !DILocalVariable(name: "w", arg: 1, scope: !16233, file: !12744, line: 47, type: !16236)
!16239 = !DILocation(line: 0, scope: !16233)
!16240 = !DILocation(line: 49, column: 21, scope: !16233)
!16241 = !DILocation(line: 49, column: 2, scope: !16233)
!16242 = !DILocation(line: 50, column: 1, scope: !16233)
!16243 = distinct !DISubprogram(name: "sys_dlist_init", scope: !233, file: !233, line: 197, type: !16244, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16247)
!16244 = !DISubroutineType(types: !16245)
!16245 = !{null, !16246}
!16246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16202, size: 32)
!16247 = !{!16248}
!16248 = !DILocalVariable(name: "list", arg: 1, scope: !16243, file: !233, line: 197, type: !16246)
!16249 = !DILocation(line: 0, scope: !16243)
!16250 = !DILocation(line: 199, column: 8, scope: !16243)
!16251 = !DILocation(line: 199, column: 13, scope: !16243)
!16252 = !DILocation(line: 200, column: 8, scope: !16243)
!16253 = !DILocation(line: 200, column: 13, scope: !16243)
!16254 = !DILocation(line: 201, column: 1, scope: !16243)
!16255 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2411, file: !2411, line: 64, type: !16256, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16262)
!16256 = !DISubroutineType(types: !16257)
!16257 = !{!102, !16188, !252, !252, !16258}
!16258 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !16259)
!16259 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !16260)
!16260 = !{!16261}
!16261 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16259, file: !104, line: 66, baseType: !103, size: 64)
!16262 = !{!16263, !16264, !16265, !16266, !16267, !16268, !16269, !16270, !16275}
!16263 = !DILocalVariable(name: "h", arg: 1, scope: !16255, file: !2411, line: 64, type: !16188)
!16264 = !DILocalVariable(name: "align", arg: 2, scope: !16255, file: !2411, line: 64, type: !252)
!16265 = !DILocalVariable(name: "bytes", arg: 3, scope: !16255, file: !2411, line: 64, type: !252)
!16266 = !DILocalVariable(name: "timeout", arg: 4, scope: !16255, file: !2411, line: 65, type: !16258)
!16267 = !DILocalVariable(name: "now", scope: !16255, file: !2411, line: 67, type: !105)
!16268 = !DILocalVariable(name: "end", scope: !16255, file: !2411, line: 67, type: !105)
!16269 = !DILocalVariable(name: "ret", scope: !16255, file: !2411, line: 68, type: !102)
!16270 = !DILocalVariable(name: "key", scope: !16255, file: !2411, line: 72, type: !16271)
!16271 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !249, line: 106, baseType: !16272)
!16272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !249, line: 32, size: 32, elements: !16273)
!16273 = !{!16274}
!16274 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16272, file: !249, line: 33, baseType: !107, size: 32)
!16275 = !DILocalVariable(name: "blocked_alloc", scope: !16255, file: !2411, line: 78, type: !136)
!16276 = !DILocation(line: 0, scope: !16255)
!16277 = !DILocation(line: 67, column: 21, scope: !16255)
!16278 = !DILocation(line: 70, column: 8, scope: !16255)
!16279 = !DILocation(line: 72, column: 41, scope: !16255)
!16280 = !DILocalVariable(name: "l", arg: 1, scope: !16281, file: !249, line: 136, type: !16284)
!16281 = distinct !DISubprogram(name: "k_spin_lock", scope: !249, file: !249, line: 136, type: !16282, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16285)
!16282 = !DISubroutineType(types: !16283)
!16283 = !{!16271, !16284}
!16284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16204, size: 32)
!16285 = !{!16280, !16286}
!16286 = !DILocalVariable(name: "k", scope: !16281, file: !249, line: 139, type: !16271)
!16287 = !DILocation(line: 0, scope: !16281, inlinedAt: !16288)
!16288 = distinct !DILocation(line: 72, column: 25, scope: !16255)
!16289 = !DILocation(line: 55, column: 2, scope: !16290, inlinedAt: !16294)
!16290 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5913, file: !5913, line: 42, type: !5914, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16291)
!16291 = !{!16292, !16293}
!16292 = !DILocalVariable(name: "key", scope: !16290, file: !5913, line: 44, type: !32)
!16293 = !DILocalVariable(name: "tmp", scope: !16290, file: !5913, line: 53, type: !32)
!16294 = distinct !DILocation(line: 145, column: 10, scope: !16281, inlinedAt: !16288)
!16295 = !{i64 2222798}
!16296 = !DILocation(line: 0, scope: !16290, inlinedAt: !16294)
!16297 = !DILocation(line: 81, column: 9, scope: !16298)
!16298 = distinct !DILexicalBlock(scope: !16255, file: !2411, line: 80, column: 22)
!16299 = !DILocation(line: 83, column: 9, scope: !16298)
!16300 = !DILocation(line: 85, column: 12, scope: !16301)
!16301 = distinct !DILexicalBlock(scope: !16298, file: !2411, line: 84, column: 7)
!16302 = !DILocation(line: 85, column: 21, scope: !16301)
!16303 = !DILocation(line: 85, column: 30, scope: !16301)
!16304 = !DILocation(line: 85, column: 37, scope: !16301)
!16305 = !DILocation(line: 84, column: 7, scope: !16298)
!16306 = !DILocation(line: 99, column: 10, scope: !16298)
!16307 = !DILocation(line: 0, scope: !16281, inlinedAt: !16308)
!16308 = distinct !DILocation(line: 101, column: 9, scope: !16298)
!16309 = !DILocation(line: 55, column: 2, scope: !16290, inlinedAt: !16310)
!16310 = distinct !DILocation(line: 145, column: 10, scope: !16281, inlinedAt: !16308)
!16311 = !DILocation(line: 0, scope: !16290, inlinedAt: !16310)
!16312 = distinct !{!16312, !16313, !16314}
!16313 = !DILocation(line: 80, column: 2, scope: !16255)
!16314 = !DILocation(line: 102, column: 2, scope: !16255)
!16315 = !DILocalVariable(name: "key", arg: 2, scope: !16316, file: !249, line: 190, type: !16271)
!16316 = distinct !DISubprogram(name: "k_spin_unlock", scope: !249, file: !249, line: 189, type: !16317, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16319)
!16317 = !DISubroutineType(types: !16318)
!16318 = !{null, !16284, !16271}
!16319 = !{!16320, !16315}
!16320 = !DILocalVariable(name: "l", arg: 1, scope: !16316, file: !249, line: 189, type: !16284)
!16321 = !DILocation(line: 0, scope: !16316, inlinedAt: !16322)
!16322 = distinct !DILocation(line: 106, column: 2, scope: !16255)
!16323 = !DILocalVariable(name: "key", arg: 1, scope: !16324, file: !5913, line: 84, type: !32)
!16324 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5913, file: !5913, line: 84, type: !5924, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16325)
!16325 = !{!16323}
!16326 = !DILocation(line: 0, scope: !16324, inlinedAt: !16327)
!16327 = distinct !DILocation(line: 215, column: 2, scope: !16316, inlinedAt: !16322)
!16328 = !DILocation(line: 95, column: 2, scope: !16324, inlinedAt: !16327)
!16329 = !{i64 2223615}
!16330 = !DILocation(line: 107, column: 2, scope: !16255)
!16331 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2411, file: !2411, line: 110, type: !16332, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16334)
!16332 = !DISubroutineType(types: !16333)
!16333 = !{!102, !16188, !252, !16258}
!16334 = !{!16335, !16336, !16337, !16338}
!16335 = !DILocalVariable(name: "h", arg: 1, scope: !16331, file: !2411, line: 110, type: !16188)
!16336 = !DILocalVariable(name: "bytes", arg: 2, scope: !16331, file: !2411, line: 110, type: !252)
!16337 = !DILocalVariable(name: "timeout", arg: 3, scope: !16331, file: !2411, line: 110, type: !16258)
!16338 = !DILocalVariable(name: "ret", scope: !16331, file: !2411, line: 114, type: !102)
!16339 = !DILocation(line: 0, scope: !16331)
!16340 = !DILocation(line: 114, column: 14, scope: !16331)
!16341 = !DILocation(line: 118, column: 2, scope: !16331)
!16342 = distinct !DISubprogram(name: "k_heap_free", scope: !2411, file: !2411, line: 121, type: !16343, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !16345)
!16343 = !DISubroutineType(types: !16344)
!16344 = !{null, !16188, !102}
!16345 = !{!16346, !16347, !16348}
!16346 = !DILocalVariable(name: "h", arg: 1, scope: !16342, file: !2411, line: 121, type: !16188)
!16347 = !DILocalVariable(name: "mem", arg: 2, scope: !16342, file: !2411, line: 121, type: !102)
!16348 = !DILocalVariable(name: "key", scope: !16342, file: !2411, line: 123, type: !16271)
!16349 = !DILocation(line: 0, scope: !16342)
!16350 = !DILocation(line: 0, scope: !16281, inlinedAt: !16351)
!16351 = distinct !DILocation(line: 123, column: 25, scope: !16342)
!16352 = !DILocation(line: 55, column: 2, scope: !16290, inlinedAt: !16353)
!16353 = distinct !DILocation(line: 145, column: 10, scope: !16281, inlinedAt: !16351)
!16354 = !DILocation(line: 0, scope: !16290, inlinedAt: !16353)
!16355 = !DILocation(line: 125, column: 20, scope: !16342)
!16356 = !DILocation(line: 125, column: 2, scope: !16342)
!16357 = !DILocation(line: 128, column: 60, scope: !16358)
!16358 = distinct !DILexicalBlock(scope: !16342, file: !2411, line: 128, column: 6)
!16359 = !DILocation(line: 128, column: 43, scope: !16358)
!16360 = !DILocation(line: 128, column: 68, scope: !16358)
!16361 = !DILocation(line: 128, column: 6, scope: !16342)
!16362 = !DILocation(line: 123, column: 41, scope: !16342)
!16363 = !DILocation(line: 129, column: 3, scope: !16364)
!16364 = distinct !DILexicalBlock(scope: !16358, file: !2411, line: 128, column: 74)
!16365 = !DILocation(line: 130, column: 2, scope: !16364)
!16366 = !DILocation(line: 0, scope: !16316, inlinedAt: !16367)
!16367 = distinct !DILocation(line: 131, column: 3, scope: !16368)
!16368 = distinct !DILexicalBlock(scope: !16358, file: !2411, line: 130, column: 9)
!16369 = !DILocation(line: 0, scope: !16324, inlinedAt: !16370)
!16370 = distinct !DILocation(line: 215, column: 2, scope: !16316, inlinedAt: !16367)
!16371 = !DILocation(line: 95, column: 2, scope: !16324, inlinedAt: !16370)
!16372 = !DILocation(line: 133, column: 1, scope: !16342)
